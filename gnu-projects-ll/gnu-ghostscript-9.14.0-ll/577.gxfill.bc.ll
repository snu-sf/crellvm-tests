; ModuleID = './gxfill.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gx_device_color_type_s = type { %struct.gs_memory_struct_type_s*, void (%struct.gx_device_color_s*, %struct.gx_device_color_saved_s*)*, %struct.gx_device_halftone_s* (%struct.gx_device_color_s*)*, i32 (%struct.gx_device_color_s*, %struct.gs_int_point_s*)*, i32 (%struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_color_saved_s*, %struct.gx_device_s*, i64, i8*, i32*)*, i32 (%struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_device_s*, i64, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_s*, i64*)* }
%struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (%struct.gs_memory_s*, i8*)*, i8* }
%struct.struct_shared_procs_s = type opaque
%struct.gs_memory_s = type { %struct.gs_memory_s*, %struct.gs_memory_procs_s, %struct.gs_lib_ctx_s*, %struct.gs_memory_s*, %struct.gs_memory_s* }
%struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, %struct.gs_memory_s* (%struct.gs_memory_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32, i8*)*, void (%struct.gs_memory_s*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, i32)* }
%struct.gs_memory_status_s = type { i64, i64, i32 }
%struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i32 }
%struct.gs_ptr_procs_s = type { void (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i32 (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
%struct.enum_ptr_s = type { i8*, i32 }
%struct.gc_state_s = type opaque
%struct.gs_lib_ctx_s = type { %struct.gs_memory_s*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i64, i8*, %struct.name_table_s*, i32, %struct.gx_io_device_s**, i32, i32, [2 x i64], %struct.gs_font_dir_s*, i32, i8*, i32, i8*, %struct.gs_fapi_server_s** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.name_table_s = type opaque
%struct.gx_io_device_s = type opaque
%struct.gs_font_dir_s = type opaque
%struct.gs_fapi_server_s = type opaque
%struct.gx_device_color_s = type { %struct.gx_device_color_type_s*, %union._c, %struct.gs_int_point_s, i32, %struct.gs_client_color_s, %struct._mask }
%union._c = type { %struct._col }
%struct._col = type { %struct.gx_device_halftone_s*, i16, [64 x i8], [64 x i32], i16, i64 }
%struct.gx_device_halftone_s = type opaque
%struct.gs_int_point_s = type { i32, i32 }
%struct.gs_client_color_s = type { %struct.gs_pattern_instance_s*, %struct.gs_paint_color_s }
%struct.gs_pattern_instance_s = type { %struct.rc_header_s, %struct.gs_pattern_type_s*, %struct.gs_state_s*, i64 }
%struct.rc_header_s = type { i64, %struct.gs_memory_s*, void (%struct.gs_memory_s*, i8*, i8*)* }
%struct.gs_pattern_type_s = type { i32, %struct.pp_ }
%struct.pp_ = type { i32 (%struct.gs_pattern_template_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_pattern_template_s*, %struct.gs_matrix_s*, %struct.gs_state_s*, %struct.gs_memory_s*)*, %struct.gs_pattern_template_s* (%struct.gs_pattern_instance_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_state_s*)* }
%struct.gs_pattern_template_s = type { %struct.gs_pattern_type_s*, i32, %struct.gs_uid_s, i8* }
%struct.gs_uid_s = type { i64, i64* }
%struct.gs_matrix_s = type { float, float, float, float, float, float }
%struct.gs_color_space_s = type { %struct.gs_color_space_type_s*, %struct.rc_header_s, i64, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.client_color_space_data_s*, %struct.cmm_profile_s*, %union.anon }
%struct.gs_color_space_type_s = type { i32, i32, i32, %struct.gs_memory_struct_type_s*, i32 (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, %struct.gs_color_space_s* (%struct.gs_color_space_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i16*, %struct.gs_imager_state_s*, %struct.gx_device_s*)*, i32 (i16*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, void (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.stream_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)*, i32 (%struct.gs_color_space_s*)* }
%struct.stream_s = type opaque
%struct.gsicc_link_s = type { i8*, %struct.gscms_procs_s, %struct.gsicc_hashlink_s, %struct.gsicc_link_cache_s*, i32, %struct.gsicc_link_s*, %struct.gx_semaphore_s*, i32, i32, i32, i32, i32, i32, %struct.gscms_procs_s, i32, i32, i32 }
%struct.gsicc_hashlink_s = type { i64, i64, i64, i64 }
%struct.gsicc_link_cache_s = type { %struct.gsicc_link_s*, i32, %struct.rc_header_s, %struct.gs_memory_s*, %struct.gx_monitor_s*, %struct.gx_semaphore_s*, i32 }
%struct.gx_monitor_s = type { %struct.gs_memory_s*, %union.gp_monitor }
%union.gp_monitor = type { i8* }
%struct.gx_semaphore_s = type { %struct.gs_memory_s*, %union.gp_semaphore }
%union.gp_semaphore = type { i8* }
%struct.gscms_procs_s = type { void (%struct.gx_device_s*, %struct.gsicc_link_s*, %struct.gsicc_bufferdesc_s*, %struct.gsicc_bufferdesc_s*, i8*, i8*)*, void (%struct.gx_device_s*, %struct.gsicc_link_s*, i8*, i8*, i32)*, void (%struct.gsicc_link_s*)*, i32 (i8*, i32)* }
%struct.gsicc_bufferdesc_s = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.client_color_space_data_s = type { void (%struct.gs_color_space_s*, i32)* }
%struct.cmm_profile_s = type { i8, i8, i32, i32, i32, i32, %struct.gs_range_icc_s, i64, i32, [15 x i32], i32, i32, i32, %struct.gsicc_rendering_param_s, i8*, %struct.gx_device_s*, %struct.gsicc_namelist_s*, i8*, %struct.rc_header_s, i32, i8*, %struct.gs_memory_s*, %struct.gx_monitor_s* }
%struct.gs_range_icc_s = type { [15 x %struct.gs_range_s] }
%struct.gs_range_s = type { float, float }
%struct.gsicc_rendering_param_s = type { i32, i32, i32, i32, i32, i32 }
%struct.gsicc_namelist_s = type { i32, %struct.gsicc_colorname_s*, i8*, %struct.gs_devicen_color_map_s*, i32 }
%struct.gsicc_colorname_s = type { i8*, i32, %struct.gsicc_colorname_s* }
%struct.gs_devicen_color_map_s = type { i32, i32, i32, i32, i64, [64 x i32] }
%union.anon = type { %struct.gs_device_n_params_s }
%struct.gs_device_n_params_s = type { i64*, i32, %struct.gs_device_n_map_s*, %struct.gs_device_n_attributes_s*, i32, i32 (%struct.gs_memory_s*, i64, i8**, i32*)* }
%struct.gs_device_n_map_s = type opaque
%struct.gs_device_n_attributes_s = type opaque
%struct.gs_imager_state_s = type { i32, %struct.gs_memory_s*, i8*, %struct.gx_line_params_s, i32, %struct.gs_matrix_fixed_s, i32, %struct.gs_point_s, %struct.gs_point_s, i32, i32, i16, i32, %struct.gs_transparency_source_s, %struct.gs_transparency_source_s, %struct.gs_xstate_trans_flags, i64, i32, i32, i32, %struct.gx_device_s*, i32, i32, i32, i32, i32, i32, float, %struct.gs_fixed_point_s, i32, i32, i32, float, i32, i32, %struct.gsicc_manager_s*, %struct.gsicc_link_cache_s*, %struct.gsicc_profile_cache_s*, %struct.gx_color_map_procs_s* (%struct.gs_imager_state_s*, %struct.gx_device_s*)*, %struct.gs_halftone_s*, [2 x %struct.gs_int_point_s], %struct.gx_device_halftone_s*, %struct.gs_cie_render_s*, i32, %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s*, %struct.gx_transfer_s, [64 x %struct.gx_transfer_map_s*], %struct.gx_cie_joint_caches_s*, %struct.gx_color_map_procs_s*, %struct.gs_devicen_color_map_s, %struct.gx_pattern_cache_s*, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_devicen_color_map_s }
%struct.gx_line_params_s = type { float, i32, i32, i32, i32, i32, float, float, float, i32, %struct.gs_matrix_s, %struct.gx_dash_params_s }
%struct.gx_dash_params_s = type { float*, i32, float, i32, float, i32, i32, float }
%struct.gs_matrix_fixed_s = type { float, float, float, float, float, float, i32, i32, i32 }
%struct.gs_point_s = type { double, double }
%struct.gs_transparency_source_s = type { float }
%struct.gs_xstate_trans_flags = type { i32, i32 }
%struct.gs_fixed_point_s = type { i32, i32 }
%struct.gsicc_manager_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gsicc_devicen_s*, %struct.gsicc_smask_s*, i32, %struct.cmm_srcgtag_profile_s*, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.gsicc_devicen_s = type { %struct.gsicc_devicen_entry_s*, %struct.gsicc_devicen_entry_s*, i32 }
%struct.gsicc_devicen_entry_s = type { %struct.cmm_profile_s*, %struct.gsicc_devicen_entry_s* }
%struct.gsicc_smask_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gs_memory_s*, i32 }
%struct.cmm_srcgtag_profile_s = type { [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], %struct.cmm_profile_s*, %struct.gs_memory_s*, i32, i8*, %struct.rc_header_s }
%struct.gsicc_profile_cache_s = type { %struct.gsicc_profile_entry_s*, i32, %struct.rc_header_s, %struct.gs_memory_s* }
%struct.gsicc_profile_entry_s = type { %struct.gs_color_space_s*, %struct.gsicc_profile_entry_s*, i64 }
%struct.gs_halftone_s = type opaque
%struct.gs_cie_render_s = type opaque
%struct.gx_transfer_map_s = type { %struct.rc_header_s, float (double, %struct.gx_transfer_map_s*)*, %struct.gs_mapping_closure_s, i64, [256 x i16] }
%struct.gs_mapping_closure_s = type { float (double, %struct.gx_transfer_map_s*, i8*)*, i8* }
%struct.gx_transfer_s = type { i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s* }
%struct.gx_color_map_procs_s = type { void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32, %struct.gs_color_space_s*)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_imager_state_s*, %struct.gx_device_s*)* }
%struct.gx_pattern_cache_s = type { %struct.gs_memory_s*, %struct.gx_color_tile_s*, i32, i32, i32, i64, i64, void (%struct.gx_pattern_cache_s*)* }
%struct.gx_color_tile_s = type { i64, i32, %struct.gs_uid_s, i32, i32, %struct.gs_matrix_s, %struct.gs_rect_s, %struct.gx_strip_bitmap_s, %struct.gx_strip_bitmap_s, %struct.gx_pattern_trans_s*, %union.gx_device_clist_s*, i8, i8, i8, [2 x i8], i32, i32, i32 }
%struct.gs_rect_s = type { %struct.gs_point_s, %struct.gs_point_s }
%struct.gx_strip_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16, i16, i16, i32 }
%struct.gx_pattern_trans_s = type { %struct.gx_device_s*, i8*, %struct.gs_memory_s*, %struct.gx_pattern_trans_s*, %struct.gs_int_rect_s, i32, i32, i32, i32, i32, i32, %struct.pdf14_nonseparable_blending_procs_s*, i32, i32, %struct.gs_int_rect_s*, void (i32, i32, i32, i32, i32, i32, %struct.gx_color_tile_s*, %struct.gx_pattern_trans_s*)*, i32 (%struct.gx_image_enum_s*, i8*, i32, i32, i32, %struct.gx_device_s*)* }
%struct.gs_int_rect_s = type { %struct.gs_int_point_s, %struct.gs_int_point_s }
%struct.pdf14_nonseparable_blending_procs_s = type { void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)* }
%struct.gx_image_enum_s = type opaque
%union.gx_device_clist_s = type opaque
%struct.gx_cie_joint_caches_s = type opaque
%struct.gx_device_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s }
%struct.gx_device_color_info_s = type { i32, i32, i32, i16, i8, i32, i32, i32, i32, %struct.gx_device_anti_alias_info_s, i32, [64 x i8], [64 x i8], [64 x i64], i8*, i32, i64, i32 }
%struct.gx_device_anti_alias_info_s = type { i32, i32 }
%struct.gx_device_cached_colors_s = type { i64, i64 }
%struct.gx_stroked_gradient_recognizer_s = type { i32, [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s] }
%struct.gdev_space_params_s = type { i64, i64, %struct.gx_band_params_s, i32, i32 }
%struct.gx_band_params_s = type { i32, i32, i64 }
%struct.cmm_dev_profile_s = type { [4 x %struct.cmm_profile_s*], %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, [4 x %struct.gsicc_rendering_param_s], i32, i32, i32, i32, i32, i32, %struct.gsicc_namelist_s*, i32, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.gx_page_device_procs_s = type { i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* }
%struct.gx_device_procs_s = type { i32 (%struct.gx_device_s*)*, void (%struct.gx_device_s*, %struct.gs_matrix_s*)*, i32 (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i8*, i8**)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i64 (%struct.gx_device_s*, i16*)*, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16, i16, i16, i16)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)*, i32 (%struct.gx_device_s*, i32, i32*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, {}*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)*, i32 (%struct.gx_device_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, %struct.gs_devn_params_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)*, void (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* }
%struct.gx_tile_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16 }
%struct.gx_xfont_procs_s = type opaque
%struct.gx_path_s = type { %struct.gx_path_segments_s, %struct.gs_memory_s*, i32, %struct.gx_path_segments_s*, %struct.segment_s*, %struct.gs_fixed_rect_s, %struct.segment_s*, i8, i8, i8, i8, i8, i32, i32, %struct.gs_fixed_point_s, %struct.gx_path_procs_s* }
%struct.gx_path_segments_s = type { %struct.rc_header_s, %struct.psc_ }
%struct.psc_ = type { %struct.subpath_s*, %struct.subpath_s* }
%struct.subpath_s = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s, %struct.segment_s*, i32, %struct.line_close_segment, i8 }
%struct.line_close_segment = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s, %struct.subpath_s* }
%struct.gs_fixed_rect_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.segment_s = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s }
%struct.gx_path_procs_s = type { i32 (%struct.gx_path_s*, i32, i32)*, i32 (%struct.gx_path_s*, i32, i32, i32)*, i32 (%struct.gx_path_s*, i32, i32, i32)*, i32 (%struct.gx_path_s*, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_path_s*, i32)*, i8 (%struct.gx_path_s*, i8)* }
%struct.gx_stroke_params_s = type { float, i32 }
%struct.gx_clip_path_s = type { %struct.gx_path_s, %struct.gx_clip_rect_list_s, i32, %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s, %struct.gx_clip_rect_list_s*, i32, %struct.gx_cpath_path_list_s*, i64 }
%struct.gx_clip_rect_list_s = type { %struct.rc_header_s, %struct.gx_clip_list_s }
%struct.gx_clip_list_s = type { %struct.gx_clip_rect_s, %struct.gx_clip_rect_s*, %struct.gx_clip_rect_s*, %struct.gx_clip_rect_s*, i32, i32, i32 }
%struct.gx_clip_rect_s = type { %struct.gx_clip_rect_s*, %struct.gx_clip_rect_s*, i32, i32, i32, i32, i8 }
%struct.gx_cpath_path_list_s = type { %struct.gx_path_s, %struct.rc_header_s, i32, %struct.gx_cpath_path_list_s* }
%struct.gs_fixed_edge_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_image1_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s, i32, i32, i32, [130 x float], i32, i32, i32, %struct.gs_color_space_s*, i32, i32, i32, i32 }
%struct.gx_image_type_s = type opaque
%struct.gx_image_enum_common_s = type opaque
%struct.gs_image_common_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s }
%struct.gs_get_bits_params_s = type opaque
%struct.gs_composite_s = type { %struct.gs_composite_type_s*, i64, i32, %struct.gs_composite_s*, %struct.gs_composite_s* }
%struct.gs_composite_type_s = type { i8, %struct.gs_composite_type_procs_s }
%struct.gs_composite_type_procs_s = type { i32 (%struct.gs_composite_s*, %struct.gx_device_s**, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s*)*, i32 (%struct.gs_composite_s*, i8*, i32*, %struct.gx_device_clist_writer_s*)*, i32 (%struct.gs_composite_s**, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32, i32, %struct.gs_imager_state_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s**, %struct.gx_device_s*)*, i32 (%struct.gs_composite_s*, i8, i8)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32*, i32*, i32, i32)* }
%struct.gx_device_clist_writer_s = type opaque
%struct.gs_param_list_s = type { %struct.gs_param_list_procs_s*, %struct.gs_memory_s*, i32 }
%struct.gs_param_list_procs_s = type { i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_typed_value_s*)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*, i32)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*)*, i32 (%struct.gs_param_list_s*, %union.gs_param_enumerator_s*, %struct.gs_param_string_s*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*)* }
%struct.gs_param_typed_value_s = type { %union.gs_param_value_s, i32 }
%union.gs_param_value_s = type { %struct.gs_param_string_s }
%struct.gs_param_string_s = type { i8*, i32, i32 }
%struct.gs_param_collection_s = type { %struct.gs_param_list_s*, i32 }
%union.gs_param_enumerator_s = type { i64 }
%struct.gs_text_params_s = type { i32, %union.sd_, i32, %struct.gs_point_s, %struct.gs_point_s, %union.s_, float*, float*, i32 }
%union.sd_ = type { i8* }
%union.s_ = type { i64 }
%struct.gs_font_s = type opaque
%struct.gs_text_enum_s = type { %struct.gs_text_params_s, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_procs_s*, %struct.rc_header_s, i8*, %struct.gs_font_s*, i64, i32, %struct.gs_log2_scale_point_s, %struct.cached_fm_pair_s*, i32, i32, %struct.gx_font_stack_s, i32, i32, i32, %struct.gs_point_s, i64, i32, %struct.gs_log2_scale_point_s, %struct.gs_point_s, %struct.gs_text_returned_s }
%struct.gs_text_enum_procs_s = type { i32 (%struct.gs_text_enum_s*, %struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*, %struct.gs_point_s*)*, i32 (%struct.gs_text_enum_s*, double*, i32)*, i32 (%struct.gs_text_enum_s*)*, void (%struct.gs_text_enum_s*, i8*)* }
%struct.cached_fm_pair_s = type opaque
%struct.gx_font_stack_s = type { i32, [6 x %struct.gx_font_stack_item_s] }
%struct.gx_font_stack_item_s = type { %struct.gs_font_s*, i32 }
%struct.gs_log2_scale_point_s = type { i32, i32 }
%struct.gs_text_returned_s = type { i64, i64, %struct.gs_point_s }
%struct.gs_transparency_group_params_s = type { %struct.gs_color_space_s*, i32, i32, i32, i32, i32, i32, i32, i64, %struct.cmm_profile_s* }
%struct.gx_transparency_mask_params_s = type { i32, i32, i32, i32, [64 x float], float, i32, i32, i32, i32, [256 x i8], i64, %struct.cmm_profile_s* }
%struct.gx_cm_color_map_procs_s = type { void (%struct.gx_device_s*, i16, i16*)*, void (%struct.gx_device_s*, %struct.gs_imager_state_s*, i16, i16, i16, i16*)*, void (%struct.gx_device_s*, i16, i16, i16, i16, i16*)* }
%struct.gs_pattern1_instance_s = type opaque
%struct.gs_fill_attributes_s = type { %struct.gs_fixed_rect_s*, i32, %struct.gx_device_halftone_s*, i32, i32, i32, %struct.patch_fill_state_s* }
%struct.patch_fill_state_s = type opaque
%struct.gs_devn_params_s = type opaque
%struct.gx_process_page_options_s = type { i32 (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i32, i32, i8**)*, void (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_int_rect_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, i8*)*, i8*, i32 }
%struct.gs_state_s = type opaque
%struct.gs_paint_color_s = type { [64 x float] }
%struct._mask = type { %struct.mp_, i64, %struct.gx_color_tile_s* }
%struct.mp_ = type { i32, i32 }
%struct.gx_device_color_saved_s = type { %struct.gx_device_color_type_s*, %union._svc, %struct.gs_int_point_s }
%union._svc = type { %struct._svbin, [304 x i8] }
%struct._svbin = type { [2 x i64], i32, i32 }
%struct.gx_rop_source_s = type { i8*, i32, i32, i64, [2 x i64], i32, i32 }
%struct.gx_fill_params_s = type { i32, %struct.gs_fixed_point_s, float }
%struct.gx_device_clip_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, %struct.gx_device_s*, %struct.gx_clip_list_s, %struct.gx_clip_rect_s*, %struct.gs_int_point_s, %struct.gs_fixed_rect_s, i32 }
%struct._pat = type { %struct.gx_color_tile_s* }
%struct.fill_options_s = type { i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.gx_device_s*, %struct.gs_fixed_rect_s*, i32, i32, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)* }
%struct.line_list_s = type { %struct.gs_memory_s*, %struct.active_line_s*, %struct.active_line_s*, %struct.active_line_s*, i32, %struct.active_line_s*, %struct.active_line_s*, %struct.active_line_s, %struct.active_line_s*, %struct.active_line_s*, %struct.margin_set_s, %struct.margin_set_s, %struct.margin_s*, i32*, i32, i32, i32, i32, i32, %struct.fill_options_s*, i32, [20 x %struct.active_line_s], [20 x %struct.margin_s], [100 x %struct.section_s], [100 x %struct.section_s], [20 x i32] }
%struct.active_line_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s, %struct.gs_fixed_point_s, i32, i32, i32, i32, %struct.segment_s*, i32, i32, i32, %struct.gx_flattened_iterator_s, i32, i32, %struct.active_line_s*, %struct.active_line_s*, %struct.active_line_s* }
%struct.gx_flattened_iterator_s = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.margin_set_s = type { i32, %struct.margin_s*, %struct.margin_s*, %struct.section_s* }
%struct.section_s = type { i16, i16, i16, i16 }
%struct.margin_s = type { i32, i32, %struct.margin_s*, %struct.margin_s* }
%struct.contour_cursor_s = type { %struct.segment_s*, %struct.segment_s*, %struct.segment_s*, %struct.segment_s*, %struct.gx_flattened_iterator_s*, i32, i32, i32, i32, i32, i32 }
%struct.curve_segment = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s, %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gx_device_spot_analyzer_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s, i32, %struct.gx_san_trap_s*, %struct.gx_san_trap_s*, %struct.gx_san_trap_s*, %struct.gx_san_trap_contact_s*, %struct.gx_san_trap_contact_s*, %struct.gx_san_trap_contact_s*, i32, i32, %struct.gx_san_trap_s*, %struct.gx_san_trap_s*, %struct.gx_san_trap_s*, i32, i32 }
%struct.gx_san_trap_contact_s = type { %struct.gx_san_trap_contact_s*, %struct.gx_san_trap_contact_s*, %struct.gx_san_trap_contact_s*, %struct.gx_san_trap_s*, %struct.gx_san_trap_s* }
%struct.gx_san_trap_s = type { %struct.gx_san_trap_s*, i32, i32, i32, i32, i32, i32, %struct.gx_san_trap_contact_s*, %struct.segment_s*, %struct.segment_s*, i32, i32, i32, i32, %struct.gx_san_trap_s*, %struct.gx_san_trap_s*, i32, i32 }
%struct.coord_range_list_s = type { %struct.gs_memory_s*, %struct.rl_, %struct.coord_range_s*, %struct.coord_range_s*, %struct.coord_range_s*, %struct.coord_range_s, %struct.coord_range_s }
%struct.rl_ = type { %struct.coord_range_s*, %struct.coord_range_s*, %struct.coord_range_s* }
%struct.coord_range_s = type { i32, i32, %struct.coord_range_s*, %struct.coord_range_s*, %struct.coord_range_s* }

@gx_dc_type_data_ht_colored = external constant %struct.gx_device_color_type_s, align 8
@.str = private unnamed_addr constant [32 x i8] c"shading_fill_cpath_intersection\00", align 1
@gx_dc_type_data_pure = external constant %struct.gx_device_color_type_s, align 8
@st_section = external constant %struct.gs_memory_struct_type_s, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"gx_general_fill_path\00", align 1
@st_active_line = internal constant %struct.gs_memory_struct_type_s { i32 232, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @gs_no_struct_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @gs_no_struct_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* null }, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"active line\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"active_line\00", align 1
@st_coord_range = internal constant %struct.gs_memory_struct_type_s { i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), %struct.struct_shared_procs_s* null, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)* null, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @gs_no_struct_enum_ptrs, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)* @gs_no_struct_reloc_ptrs, void (%struct.gs_memory_s*, i8*)* null, i8* null }, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"range_alloc\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"coord_range_t\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"range_list_free\00", align 1

; Function Attrs: nounwind uwtable
define i32 @gx_default_fill_path(%struct.gx_device_s* %pdev, %struct.gs_imager_state_s* %pis, %struct.gx_path_s* %ppath, %struct.gx_fill_params_s* %params, %struct.gx_device_color_s* %pdevc, %struct.gx_clip_path_s* %pcpath) #0 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %pis.addr = alloca %struct.gs_imager_state_s*, align 8
  %ppath.addr = alloca %struct.gx_path_s*, align 8
  %params.addr = alloca %struct.gx_fill_params_s*, align 8
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  %pcpath.addr = alloca %struct.gx_clip_path_s*, align 8
  %code = alloca i32, align 4
  %cpath_intersection = alloca %struct.gx_clip_path_s, align 8
  %cpath_with_shading_bbox = alloca %struct.gx_clip_path_s, align 8
  %pcpath1 = alloca %struct.gx_clip_path_s*, align 8
  %pcpath2 = alloca %struct.gx_clip_path_s*, align 8
  %pis_noconst = alloca %struct.gs_imager_state_s*, align 8
  %cleanup.dest.slot = alloca i32
  %clip_box1 = alloca %struct.gs_fixed_rect_s, align 4
  %clip_box = alloca %struct.gs_fixed_rect_s, align 4
  %cb = alloca %struct.gs_int_rect_s, align 4
  %rs = alloca %struct.gx_rop_source_s*, align 8
  %dev = alloca %struct.gx_device_s*, align 8
  %cdev = alloca %struct.gx_device_clip_s, align 8
  %got_dc = alloca i32, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gs_imager_state_s* %pis, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  store %struct.gx_path_s* %ppath, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store %struct.gx_fill_params_s* %params, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  store %struct.gx_clip_path_s* %pcpath, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !5
  %1 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %call = call i32 @gx_dc_is_pattern2_color(%struct.gx_device_color_s* %1) #5
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %2, i32 0, i32 0
  %3 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %cmp = icmp eq %struct.gx_device_color_type_s* %3, @gx_dc_type_data_ht_colored
  br i1 %cmp, label %if.then, label %lor.lhs.false.1

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %4 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %call2 = call i32 @gx_dc_is_pattern1_color(%struct.gx_device_color_s* %4) #5
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %land.lhs.true, label %if.else.107

land.lhs.true:                                    ; preds = %lor.lhs.false.1
  %5 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %5, i32 0, i32 1
  %pattern = bitcast %union._c* %colors to %struct._pat*
  %p_tile = getelementptr inbounds %struct._pat, %struct._pat* %pattern, i32 0, i32 0
  %6 = load %struct.gx_color_tile_s*, %struct.gx_color_tile_s** %p_tile, align 8, !tbaa !15
  %call4 = call i32 @gx_pattern_tile_is_clist(%struct.gx_color_tile_s* %6) #5
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.then, label %if.else.107

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  %7 = bitcast %struct.gx_clip_path_s* %cpath_intersection to i8*
  call void @llvm.lifetime.start(i64 304, i8* %7) #1
  %8 = bitcast %struct.gx_clip_path_s* %cpath_with_shading_bbox to i8*
  call void @llvm.lifetime.start(i64 304, i8* %8) #1
  %9 = bitcast %struct.gx_clip_path_s** %pcpath1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = bitcast %struct.gx_clip_path_s** %pcpath2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %11 = bitcast %struct.gs_imager_state_s** %pis_noconst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  %12 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  store %struct.gs_imager_state_s* %12, %struct.gs_imager_state_s** %pis_noconst, align 8, !tbaa !1
  %13 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %cmp6 = icmp ne %struct.gx_path_s* %13, null
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.then
  %14 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %15 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %15, i32 0, i32 3
  %16 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !17
  %call8 = call i32 @gx_cpath_init_local_shared_nested(%struct.gx_clip_path_s* %cpath_intersection, %struct.gx_clip_path_s* %14, %struct.gs_memory_s* %16, i32 1) #5
  store i32 %call8, i32* %code, align 4, !tbaa !5
  %17 = load i32, i32* %code, align 4, !tbaa !5
  %cmp9 = icmp slt i32 %17, 0
  br i1 %cmp9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %if.then.7
  %18 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.7
  %19 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %cmp11 = icmp eq %struct.gx_clip_path_s* %19, null
  br i1 %cmp11, label %if.then.12, label %if.end.14

if.then.12:                                       ; preds = %if.end
  %20 = bitcast %struct.gs_fixed_rect_s* %clip_box1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %20) #1
  %21 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %21, i32 0, i32 42
  %get_clipping_box = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 36
  %22 = load void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)*, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)** %get_clipping_box, align 8, !tbaa !29
  %23 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  call void %22(%struct.gx_device_s* %23, %struct.gs_fixed_rect_s* %clip_box1) #5
  %call13 = call i32 @gx_cpath_from_rectangle(%struct.gx_clip_path_s* %cpath_intersection, %struct.gs_fixed_rect_s* %clip_box1) #5
  store i32 %call13, i32* %code, align 4, !tbaa !5
  %24 = bitcast %struct.gs_fixed_rect_s* %clip_box1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %24) #1
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.12, %if.end
  %25 = load i32, i32* %code, align 4, !tbaa !5
  %cmp15 = icmp sge i32 %25, 0
  br i1 %cmp15, label %if.then.16, label %if.end.18

if.then.16:                                       ; preds = %if.end.14
  %26 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %27 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %rule = getelementptr inbounds %struct.gx_fill_params_s, %struct.gx_fill_params_s* %27, i32 0, i32 0
  %28 = load i32, i32* %rule, align 4, !tbaa !30
  %29 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis_noconst, align 8, !tbaa !1
  %30 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %call17 = call i32 @gx_cpath_intersect_with_params(%struct.gx_clip_path_s* %cpath_intersection, %struct.gx_path_s* %26, i32 %28, %struct.gs_imager_state_s* %29, %struct.gx_fill_params_s* %30) #5
  store i32 %call17, i32* %code, align 4, !tbaa !5
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.16, %if.end.14
  store %struct.gx_clip_path_s* %cpath_intersection, %struct.gx_clip_path_s** %pcpath1, align 8, !tbaa !1
  br label %if.end.19

if.else:                                          ; preds = %if.then
  %31 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  store %struct.gx_clip_path_s* %31, %struct.gx_clip_path_s** %pcpath1, align 8, !tbaa !1
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %if.end.18
  %32 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath1, align 8, !tbaa !1
  store %struct.gx_clip_path_s* %32, %struct.gx_clip_path_s** %pcpath2, align 8, !tbaa !1
  %33 = load i32, i32* %code, align 4, !tbaa !5
  %cmp20 = icmp sge i32 %33, 0
  br i1 %cmp20, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %if.end.19
  %34 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %35 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %call22 = call i32 @gx_dc_pattern2_clip_with_bbox(%struct.gx_device_color_s* %34, %struct.gx_device_s* %35, %struct.gx_clip_path_s* %cpath_with_shading_bbox, %struct.gx_clip_path_s** %pcpath1) #5
  store i32 %call22, i32* %code, align 4, !tbaa !5
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.21, %if.end.19
  %36 = load i32, i32* %code, align 4, !tbaa !5
  %cmp24 = icmp sge i32 %36, 0
  br i1 %cmp24, label %if.then.25, label %if.end.94

if.then.25:                                       ; preds = %if.end.23
  %37 = bitcast %struct.gs_fixed_rect_s* %clip_box to i8*
  call void @llvm.lifetime.start(i64 16, i8* %37) #1
  %38 = bitcast %struct.gs_int_rect_s* %cb to i8*
  call void @llvm.lifetime.start(i64 16, i8* %38) #1
  %39 = bitcast %struct.gx_rop_source_s** %rs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %39) #1
  store %struct.gx_rop_source_s* null, %struct.gx_rop_source_s** %rs, align 8, !tbaa !1
  %40 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %40) #1
  %41 = bitcast %struct.gx_device_clip_s* %cdev to i8*
  call void @llvm.lifetime.start(i64 1856, i8* %41) #1
  %42 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath1, align 8, !tbaa !1
  %call26 = call i32 @gx_cpath_outer_box(%struct.gx_clip_path_s* %42, %struct.gs_fixed_rect_s* %clip_box) #5
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip_box, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %43 = load i32, i32* %x, align 4, !tbaa !34
  %conv = sext i32 %43 to i64
  %add = add nsw i64 %conv, 127
  %shr = ashr i64 %add, 8
  %conv27 = trunc i64 %shr to i32
  %p28 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 0
  %x29 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %p28, i32 0, i32 0
  store i32 %conv27, i32* %x29, align 4, !tbaa !36
  %p30 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip_box, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p30, i32 0, i32 1
  %44 = load i32, i32* %y, align 4, !tbaa !38
  %conv31 = sext i32 %44 to i64
  %add32 = add nsw i64 %conv31, 127
  %shr33 = ashr i64 %add32, 8
  %conv34 = trunc i64 %shr33 to i32
  %p35 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 0
  %y36 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %p35, i32 0, i32 1
  store i32 %conv34, i32* %y36, align 4, !tbaa !39
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip_box, i32 0, i32 1
  %x37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 0
  %45 = load i32, i32* %x37, align 4, !tbaa !40
  %conv38 = sext i32 %45 to i64
  %add39 = add nsw i64 %conv38, 127
  %shr40 = ashr i64 %add39, 8
  %conv41 = trunc i64 %shr40 to i32
  %q42 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 1
  %x43 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %q42, i32 0, i32 0
  store i32 %conv41, i32* %x43, align 4, !tbaa !41
  %q44 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip_box, i32 0, i32 1
  %y45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q44, i32 0, i32 1
  %46 = load i32, i32* %y45, align 4, !tbaa !42
  %conv46 = sext i32 %46 to i64
  %add47 = add nsw i64 %conv46, 127
  %shr48 = ashr i64 %add47, 8
  %conv49 = trunc i64 %shr48 to i32
  %q50 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 1
  %y51 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %q50, i32 0, i32 1
  store i32 %conv49, i32* %y51, align 4, !tbaa !43
  %47 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %call52 = call i32 @gx_dc_is_pattern2_color(%struct.gx_device_color_s* %47) #5
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %land.lhs.true.54, label %if.else.63

land.lhs.true.54:                                 ; preds = %if.then.25
  %48 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %procs55 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %48, i32 0, i32 42
  %dev_spec_op = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs55, i32 0, i32 65
  %49 = load i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)** %dev_spec_op, align 8, !tbaa !44
  %50 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %call56 = call i32 %49(%struct.gx_device_s* %50, i32 7, i8* null, i32 0) #5
  %cmp57 = icmp sgt i32 %call56, 0
  br i1 %cmp57, label %if.then.59, label %if.else.63

if.then.59:                                       ; preds = %land.lhs.true.54
  %51 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %procs60 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %51, i32 0, i32 42
  %fill_path = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs60, i32 0, i32 24
  %fill_path61 = bitcast {}** %fill_path to i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)**
  %52 = load i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)** %fill_path61, align 8, !tbaa !45
  %53 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %54 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %55 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %56 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %57 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath1, align 8, !tbaa !1
  %call62 = call i32 %52(%struct.gx_device_s* %53, %struct.gs_imager_state_s* %54, %struct.gx_path_s* %55, %struct.gx_fill_params_s* %56, %struct.gx_device_color_s* null, %struct.gx_clip_path_s* %57) #5
  store i32 %call62, i32* %code, align 4, !tbaa !5
  %58 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gx_device_s* %58, %struct.gx_device_s** %dev, align 8, !tbaa !1
  br label %if.end.74

if.else.63:                                       ; preds = %land.lhs.true.54, %if.then.25
  %59 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath1, align 8, !tbaa !1
  %60 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  call void @gx_make_clip_device_on_stack(%struct.gx_device_clip_s* %cdev, %struct.gx_clip_path_s* %59, %struct.gx_device_s* %60) #5
  %61 = bitcast %struct.gx_device_clip_s* %cdev to %struct.gx_device_s*
  store %struct.gx_device_s* %61, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %62 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %procs64 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %62, i32 0, i32 42
  %dev_spec_op65 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs64, i32 0, i32 65
  %63 = load i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)** %dev_spec_op65, align 8, !tbaa !44
  %64 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %call66 = call i32 %63(%struct.gx_device_s* %64, i32 4, i8* null, i32 0) #5
  %cmp67 = icmp sgt i32 %call66, 0
  br i1 %cmp67, label %if.then.69, label %if.end.73

if.then.69:                                       ; preds = %if.else.63
  %procs70 = getelementptr inbounds %struct.gx_device_clip_s, %struct.gx_device_clip_s* %cdev, i32 0, i32 42
  %fill_path71 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs70, i32 0, i32 24
  %fill_path72 = bitcast {}** %fill_path71 to i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)**
  store i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)* @pass_shading_area_through_clip_path_device, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)** %fill_path72, align 8, !tbaa !46
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.69, %if.else.63
  store i32 0, i32* %code, align 4, !tbaa !5
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73, %if.then.59
  %65 = load i32, i32* %code, align 4, !tbaa !5
  %cmp75 = icmp sge i32 %65, 0
  br i1 %cmp75, label %if.then.77, label %if.end.93

if.then.77:                                       ; preds = %if.end.74
  %66 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type78 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %66, i32 0, i32 0
  %67 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type78, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %67, i32 0, i32 5
  %68 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %69 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %p79 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 0
  %x80 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %p79, i32 0, i32 0
  %70 = load i32, i32* %x80, align 4, !tbaa !36
  %p81 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 0
  %y82 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %p81, i32 0, i32 1
  %71 = load i32, i32* %y82, align 4, !tbaa !39
  %q83 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 1
  %x84 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %q83, i32 0, i32 0
  %72 = load i32, i32* %x84, align 4, !tbaa !41
  %p85 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 0
  %x86 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %p85, i32 0, i32 0
  %73 = load i32, i32* %x86, align 4, !tbaa !36
  %sub = sub nsw i32 %72, %73
  %q87 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 1
  %y88 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %q87, i32 0, i32 1
  %74 = load i32, i32* %y88, align 4, !tbaa !43
  %p89 = getelementptr inbounds %struct.gs_int_rect_s, %struct.gs_int_rect_s* %cb, i32 0, i32 0
  %y90 = getelementptr inbounds %struct.gs_int_point_s, %struct.gs_int_point_s* %p89, i32 0, i32 1
  %75 = load i32, i32* %y90, align 4, !tbaa !39
  %sub91 = sub nsw i32 %74, %75
  %76 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %77 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %log_op = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %77, i32 0, i32 10
  %78 = load i32, i32* %log_op, align 4, !tbaa !52
  %79 = load %struct.gx_rop_source_s*, %struct.gx_rop_source_s** %rs, align 8, !tbaa !1
  %call92 = call i32 %68(%struct.gx_device_color_s* %69, i32 %70, i32 %71, i32 %sub, i32 %sub91, %struct.gx_device_s* %76, i32 %78, %struct.gx_rop_source_s* %79) #5
  store i32 %call92, i32* %code, align 4, !tbaa !5
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.77, %if.end.74
  %80 = bitcast %struct.gx_device_clip_s* %cdev to i8*
  call void @llvm.lifetime.end(i64 1856, i8* %80) #1
  %81 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %82 = bitcast %struct.gx_rop_source_s** %rs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %83 = bitcast %struct.gs_int_rect_s* %cb to i8*
  call void @llvm.lifetime.end(i64 16, i8* %83) #1
  %84 = bitcast %struct.gs_fixed_rect_s* %clip_box to i8*
  call void @llvm.lifetime.end(i64 16, i8* %84) #1
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %if.end.23
  %85 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %cmp95 = icmp ne %struct.gx_path_s* %85, null
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.end.94
  call void @gx_cpath_free(%struct.gx_clip_path_s* %cpath_intersection, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0)) #5
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.97, %if.end.94
  %86 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath1, align 8, !tbaa !1
  %87 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath2, align 8, !tbaa !1
  %cmp99 = icmp ne %struct.gx_clip_path_s* %86, %87
  br i1 %cmp99, label %if.then.101, label %if.end.102

if.then.101:                                      ; preds = %if.end.98
  call void @gx_cpath_free(%struct.gx_clip_path_s* %cpath_with_shading_bbox, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i32 0, i32 0)) #5
  br label %if.end.102

if.end.102:                                       ; preds = %if.then.101, %if.end.98
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.102, %if.then.10
  %88 = bitcast %struct.gs_imager_state_s** %pis_noconst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %89 = bitcast %struct.gx_clip_path_s** %pcpath2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  %90 = bitcast %struct.gx_clip_path_s** %pcpath1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %90) #1
  %91 = bitcast %struct.gx_clip_path_s* %cpath_with_shading_bbox to i8*
  call void @llvm.lifetime.end(i64 304, i8* %91) #1
  %92 = bitcast %struct.gx_clip_path_s* %cpath_intersection to i8*
  call void @llvm.lifetime.end(i64 304, i8* %92) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.122 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.121

if.else.107:                                      ; preds = %land.lhs.true, %lor.lhs.false.1
  %93 = bitcast i32* %got_dc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %93) #1
  store i32 0, i32* %got_dc, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.else.107
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body.108

do.body.108:                                      ; preds = %do.end
  br label %do.cond.109

do.cond.109:                                      ; preds = %do.body.108
  br label %do.end.110

do.end.110:                                       ; preds = %do.cond.109
  %94 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %95 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %96 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %97 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %98 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %99 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %call111 = call i32 @gx_general_fill_path(%struct.gx_device_s* %94, %struct.gs_imager_state_s* %95, %struct.gx_path_s* %96, %struct.gx_fill_params_s* %97, %struct.gx_device_color_s* %98, %struct.gx_clip_path_s* %99) #5
  store i32 %call111, i32* %code, align 4, !tbaa !5
  %100 = load i32, i32* %got_dc, align 4, !tbaa !5
  %tobool112 = icmp ne i32 %100, 0
  br i1 %tobool112, label %if.then.113, label %if.end.117

if.then.113:                                      ; preds = %do.end.110
  br label %do.body.114

do.body.114:                                      ; preds = %if.then.113
  br label %do.cond.115

do.cond.115:                                      ; preds = %do.body.114
  br label %do.end.116

do.end.116:                                       ; preds = %do.cond.115
  br label %if.end.117

if.end.117:                                       ; preds = %do.end.116, %do.end.110
  br label %do.body.118

do.body.118:                                      ; preds = %if.end.117
  br label %do.cond.119

do.cond.119:                                      ; preds = %do.body.118
  br label %do.end.120

do.end.120:                                       ; preds = %do.cond.119
  %101 = bitcast i32* %got_dc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %101) #1
  br label %if.end.121

if.end.121:                                       ; preds = %do.end.120, %cleanup.cont
  %102 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %102, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.122

cleanup.122:                                      ; preds = %if.end.121, %cleanup
  %103 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %103) #1
  %104 = load i32, i32* %retval
  ret i32 %104
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

declare i32 @gx_dc_is_pattern2_color(%struct.gx_device_color_s*) #2

declare i32 @gx_dc_is_pattern1_color(%struct.gx_device_color_s*) #2

declare i32 @gx_pattern_tile_is_clist(%struct.gx_color_tile_s*) #2

declare i32 @gx_cpath_init_local_shared_nested(%struct.gx_clip_path_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, i32) #2

declare i32 @gx_cpath_from_rectangle(%struct.gx_clip_path_s*, %struct.gs_fixed_rect_s*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare i32 @gx_cpath_intersect_with_params(%struct.gx_clip_path_s*, %struct.gx_path_s*, i32, %struct.gs_imager_state_s*, %struct.gx_fill_params_s*) #2

declare i32 @gx_dc_pattern2_clip_with_bbox(%struct.gx_device_color_s*, %struct.gx_device_s*, %struct.gx_clip_path_s*, %struct.gx_clip_path_s**) #2

declare i32 @gx_cpath_outer_box(%struct.gx_clip_path_s*, %struct.gs_fixed_rect_s*) #2

declare void @gx_make_clip_device_on_stack(%struct.gx_device_clip_s*, %struct.gx_clip_path_s*, %struct.gx_device_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @pass_shading_area_through_clip_path_device(%struct.gx_device_s* %pdev, %struct.gs_imager_state_s* %pis, %struct.gx_path_s* %ppath, %struct.gx_fill_params_s* %params, %struct.gx_device_color_s* %pdevc, %struct.gx_clip_path_s* %pcpath) #0 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %pis.addr = alloca %struct.gs_imager_state_s*, align 8
  %ppath.addr = alloca %struct.gx_path_s*, align 8
  %params.addr = alloca %struct.gx_fill_params_s*, align 8
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  %pcpath.addr = alloca %struct.gx_clip_path_s*, align 8
  %cdev = alloca %struct.gx_device_clip_s*, align 8
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gs_imager_state_s* %pis, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  store %struct.gx_path_s* %ppath, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store %struct.gx_fill_params_s* %params, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  store %struct.gx_clip_path_s* %pcpath, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %0 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct.gx_device_color_s* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.gx_device_clip_s** %cdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %3 = bitcast %struct.gx_device_s* %2 to %struct.gx_device_clip_s*
  store %struct.gx_device_clip_s* %3, %struct.gx_device_clip_s** %cdev, align 8, !tbaa !1
  %4 = load %struct.gx_device_clip_s*, %struct.gx_device_clip_s** %cdev, align 8, !tbaa !1
  %target = getelementptr inbounds %struct.gx_device_clip_s, %struct.gx_device_clip_s* %4, i32 0, i32 43
  %5 = load %struct.gx_device_s*, %struct.gx_device_s** %target, align 8, !tbaa !64
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %5, i32 0, i32 42
  %fill_path = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 24
  %fill_path1 = bitcast {}** %fill_path to i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)**
  %6 = load i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)** %fill_path1, align 8, !tbaa !45
  %7 = load %struct.gx_device_clip_s*, %struct.gx_device_clip_s** %cdev, align 8, !tbaa !1
  %target2 = getelementptr inbounds %struct.gx_device_clip_s, %struct.gx_device_clip_s* %7, i32 0, i32 43
  %8 = load %struct.gx_device_s*, %struct.gx_device_s** %target2, align 8, !tbaa !64
  %9 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %10 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %11 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %12 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %13 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %call = call i32 %6(%struct.gx_device_s* %8, %struct.gs_imager_state_s* %9, %struct.gx_path_s* %10, %struct.gx_fill_params_s* %11, %struct.gx_device_color_s* %12, %struct.gx_clip_path_s* %13) #5
  store i32 %call, i32* %retval
  %14 = bitcast %struct.gx_device_clip_s** %cdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %14) #1
  br label %return

if.end:                                           ; preds = %entry
  %15 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %16 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %17 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %18 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %19 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %20 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %call3 = call i32 @gx_default_fill_path(%struct.gx_device_s* %15, %struct.gs_imager_state_s* %16, %struct.gx_path_s* %17, %struct.gx_fill_params_s* %18, %struct.gx_device_color_s* %19, %struct.gx_clip_path_s* %20) #5
  store i32 %call3, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval
  ret i32 %21
}

declare void @gx_cpath_free(%struct.gx_clip_path_s*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @gx_general_fill_path(%struct.gx_device_s* %pdev, %struct.gs_imager_state_s* %pis, %struct.gx_path_s* %ppath, %struct.gx_fill_params_s* %params, %struct.gx_device_color_s* %pdevc, %struct.gx_clip_path_s* %pcpath) #0 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %pis.addr = alloca %struct.gs_imager_state_s*, align 8
  %ppath.addr = alloca %struct.gx_path_s*, align 8
  %params.addr = alloca %struct.gx_fill_params_s*, align 8
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  %pcpath.addr = alloca %struct.gx_clip_path_s*, align 8
  %adjust = alloca %struct.gs_fixed_point_s, align 4
  %lop = alloca i32, align 4
  %ibox = alloca %struct.gs_fixed_rect_s, align 4
  %bbox = alloca %struct.gs_fixed_rect_s, align 4
  %sbox = alloca %struct.gs_fixed_rect_s, align 4
  %cdev = alloca %struct.gx_device_clip_s, align 8
  %dev = alloca %struct.gx_device_s*, align 8
  %save_dev = alloca %struct.gx_device_s*, align 8
  %ffpath = alloca %struct.gx_path_s, align 8
  %pfpath = alloca %struct.gx_path_s*, align 8
  %code = alloca i32, align 4
  %max_fill_band = alloca i32, align 4
  %is_character = alloca i32, align 4
  %fill_by_trapezoids = alloca i32, align 4
  %pseudo_rasterization = alloca i32, align 4
  %big_path = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %lst = alloca %struct.line_list_s, align 8
  %cleanup.dest.slot = alloca i32
  %rbox = alloca %struct.gs_fixed_rect_s, align 4
  %x0 = alloca i32, align 4
  %y0 = alloca i32, align 4
  %x1 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %fill_loop = alloca i32 (%struct.line_list_s*, i32)*, align 8
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gs_imager_state_s* %pis, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  store %struct.gx_path_s* %ppath, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store %struct.gx_fill_params_s* %params, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  store %struct.gx_clip_path_s* %pcpath, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_fixed_point_s* %adjust to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %lop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %log_op = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %2, i32 0, i32 10
  %3 = load i32, i32* %log_op, align 4, !tbaa !52
  store i32 %3, i32* %lop, align 4, !tbaa !5
  %4 = bitcast %struct.gs_fixed_rect_s* %ibox to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.gs_fixed_rect_s* %bbox to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast %struct.gs_fixed_rect_s* %sbox to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast %struct.gx_device_clip_s* %cdev to i8*
  call void @llvm.lifetime.start(i64 1856, i8* %7) #1
  %8 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gx_device_s* %9, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %10 = bitcast %struct.gx_device_s** %save_dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %11 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  store %struct.gx_device_s* %11, %struct.gx_device_s** %save_dev, align 8, !tbaa !1
  %12 = bitcast %struct.gx_path_s* %ffpath to i8*
  call void @llvm.lifetime.start(i64 128, i8* %12) #1
  %13 = bitcast %struct.gx_path_s** %pfpath to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %15 = bitcast i32* %max_fill_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  %16 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %max_fill_band1 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %16, i32 0, i32 10
  %17 = load i32, i32* %max_fill_band1, align 4, !tbaa !65
  store i32 %17, i32* %max_fill_band, align 4, !tbaa !5
  %18 = bitcast i32* %is_character to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #1
  %19 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %adjust2 = getelementptr inbounds %struct.gx_fill_params_s, %struct.gx_fill_params_s* %19, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust2, i32 0, i32 0
  %20 = load i32, i32* %x, align 4, !tbaa !66
  %cmp = icmp eq i32 %20, -1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %is_character, align 4, !tbaa !5
  %21 = bitcast i32* %fill_by_trapezoids to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #1
  %22 = bitcast i32* %pseudo_rasterization to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #1
  %23 = bitcast i32* %big_path to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #1
  %24 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %subpath_count = getelementptr inbounds %struct.gx_path_s, %struct.gx_path_s* %24, i32 0, i32 12
  %25 = load i32, i32* %subpath_count, align 4, !tbaa !67
  %cmp3 = icmp sgt i32 %25, 50
  %conv4 = zext i1 %cmp3 to i32
  store i32 %conv4, i32* %big_path, align 4, !tbaa !5
  %26 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %26) #1
  %27 = bitcast %struct.line_list_s* %lst to i8*
  call void @llvm.lifetime.start(i64 7224, i8* %27) #1
  %fo5 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 19
  store %struct.fill_options_s* %fo, %struct.fill_options_s** %fo5, align 8, !tbaa !1
  %28 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %call = call i32 @gx_path_bbox(%struct.gx_path_s* %28, %struct.gs_fixed_rect_s* %ibox) #5
  %29 = load i32, i32* %is_character, align 4, !tbaa !5
  %tobool = icmp ne i32 %29, 0
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %30 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %call6 = call i32 @is_spotan_device(%struct.gx_device_s* %30) #5
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %land.end, label %land.lhs.true.8

land.lhs.true.8:                                  ; preds = %land.lhs.true
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %31 = load i32, i32* %y, align 4, !tbaa !42
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %y9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %32 = load i32, i32* %y9, align 4, !tbaa !38
  %sub = sub nsw i32 %31, %32
  %cmp10 = icmp slt i32 %sub, 128000
  br i1 %cmp10, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.8
  %q12 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %x13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q12, i32 0, i32 0
  %33 = load i32, i32* %x13, align 4, !tbaa !40
  %p14 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %x15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p14, i32 0, i32 0
  %34 = load i32, i32* %x15, align 4, !tbaa !34
  %sub16 = sub nsw i32 %33, %34
  %cmp17 = icmp slt i32 %sub16, 128000
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.8, %land.lhs.true, %entry
  %35 = phi i1 [ false, %land.lhs.true.8 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp17, %land.rhs ]
  %land.ext = zext i1 %35 to i32
  store i32 %land.ext, i32* %pseudo_rasterization, align 4, !tbaa !5
  %36 = load i32, i32* %is_character, align 4, !tbaa !5
  %tobool19 = icmp ne i32 %36, 0
  br i1 %tobool19, label %if.then, label %if.else

if.then:                                          ; preds = %land.end
  %y20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 1
  store i32 0, i32* %y20, align 4, !tbaa !71
  %x21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  store i32 0, i32* %x21, align 4, !tbaa !72
  br label %if.end

if.else:                                          ; preds = %land.end
  %37 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %adjust22 = getelementptr inbounds %struct.gx_fill_params_s, %struct.gx_fill_params_s* %37, i32 0, i32 1
  %38 = bitcast %struct.gs_fixed_point_s* %adjust to i8*
  %39 = bitcast %struct.gs_fixed_point_s* %adjust22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %contour_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 20
  store i32 0, i32* %contour_count, align 4, !tbaa !74
  %windings = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 13
  store i32* null, i32** %windings, align 8, !tbaa !79
  %p23 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %x24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p23, i32 0, i32 0
  %40 = load i32, i32* %x24, align 4, !tbaa !34
  %x25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %41 = load i32, i32* %x25, align 4, !tbaa !72
  %sub26 = sub nsw i32 %40, %41
  %conv27 = sext i32 %sub26 to i64
  %sub28 = sub nsw i64 %conv27, 1
  %shr = ashr i64 %sub28, 8
  %conv29 = trunc i64 %shr to i32
  %bbox_left = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 15
  store i32 %conv29, i32* %bbox_left, align 4, !tbaa !80
  %q30 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q30, i32 0, i32 0
  %42 = load i32, i32* %x31, align 4, !tbaa !40
  %x32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %43 = load i32, i32* %x32, align 4, !tbaa !72
  %add = add nsw i32 %42, %43
  %add33 = add nsw i32 %add, 255
  %conv34 = sext i32 %add33 to i64
  %and = and i64 %conv34, -256
  %shr35 = ashr i64 %and, 8
  %conv36 = trunc i64 %shr35 to i32
  %bbox_left37 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 15
  %44 = load i32, i32* %bbox_left37, align 4, !tbaa !80
  %sub38 = sub nsw i32 %conv36, %44
  %bbox_width = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 16
  store i32 %sub38, i32* %bbox_width, align 4, !tbaa !81
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %45 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %tobool39 = icmp ne %struct.gx_clip_path_s* %45, null
  br i1 %tobool39, label %if.then.40, label %if.else.42

if.then.40:                                       ; preds = %do.end
  %46 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %call41 = call i32 @gx_cpath_inner_box(%struct.gx_clip_path_s* %46, %struct.gs_fixed_rect_s* %bbox) #5
  br label %if.end.43

if.else.42:                                       ; preds = %do.end
  %47 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %47, i32 0, i32 42
  %get_clipping_box = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 36
  %48 = load void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)*, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)** %get_clipping_box, align 8, !tbaa !29
  %49 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  call void %48(%struct.gx_device_s* %49, %struct.gs_fixed_rect_s* %bbox) #5
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.42, %if.then.40
  %q44 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %y45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q44, i32 0, i32 1
  %50 = load i32, i32* %y45, align 4, !tbaa !42
  %q46 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 1
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q46, i32 0, i32 1
  %51 = load i32, i32* %y47, align 4, !tbaa !42
  %cmp48 = icmp sle i32 %50, %51
  br i1 %cmp48, label %land.lhs.true.50, label %if.then.71

land.lhs.true.50:                                 ; preds = %if.end.43
  %q51 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %x52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q51, i32 0, i32 0
  %52 = load i32, i32* %x52, align 4, !tbaa !40
  %q53 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 1
  %x54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q53, i32 0, i32 0
  %53 = load i32, i32* %x54, align 4, !tbaa !40
  %cmp55 = icmp sle i32 %52, %53
  br i1 %cmp55, label %land.lhs.true.57, label %if.then.71

land.lhs.true.57:                                 ; preds = %land.lhs.true.50
  %p58 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %y59 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p58, i32 0, i32 1
  %54 = load i32, i32* %y59, align 4, !tbaa !38
  %p60 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 0
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p60, i32 0, i32 1
  %55 = load i32, i32* %y61, align 4, !tbaa !38
  %cmp62 = icmp sge i32 %54, %55
  br i1 %cmp62, label %land.lhs.true.64, label %if.then.71

land.lhs.true.64:                                 ; preds = %land.lhs.true.57
  %p65 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %x66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p65, i32 0, i32 0
  %56 = load i32, i32* %x66, align 4, !tbaa !34
  %p67 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p67, i32 0, i32 0
  %57 = load i32, i32* %x68, align 4, !tbaa !34
  %cmp69 = icmp sge i32 %56, %57
  br i1 %cmp69, label %if.end.157, label %if.then.71

if.then.71:                                       ; preds = %land.lhs.true.64, %land.lhs.true.57, %land.lhs.true.50, %if.end.43
  %58 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %tobool72 = icmp ne %struct.gx_clip_path_s* %58, null
  br i1 %tobool72, label %if.then.73, label %if.end.75

if.then.73:                                       ; preds = %if.then.71
  %59 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %call74 = call i32 @gx_cpath_outer_box(%struct.gx_clip_path_s* %59, %struct.gs_fixed_rect_s* %bbox) #5
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.73, %if.then.71
  br label %do.body.76

do.body.76:                                       ; preds = %if.end.75
  br label %do.cond.77

do.cond.77:                                       ; preds = %do.body.76
  br label %do.end.78

do.end.78:                                        ; preds = %do.cond.77
  br label %do.body.79

do.body.79:                                       ; preds = %do.end.78
  %p80 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 0
  %x81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p80, i32 0, i32 0
  %60 = load i32, i32* %x81, align 4, !tbaa !34
  %p82 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %x83 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p82, i32 0, i32 0
  %61 = load i32, i32* %x83, align 4, !tbaa !34
  %cmp84 = icmp sgt i32 %60, %61
  br i1 %cmp84, label %if.then.86, label %if.end.91

if.then.86:                                       ; preds = %do.body.79
  %p87 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 0
  %x88 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p87, i32 0, i32 0
  %62 = load i32, i32* %x88, align 4, !tbaa !34
  %p89 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %x90 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p89, i32 0, i32 0
  store i32 %62, i32* %x90, align 4, !tbaa !34
  br label %if.end.91

if.end.91:                                        ; preds = %if.then.86, %do.body.79
  %q92 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 1
  %x93 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q92, i32 0, i32 0
  %63 = load i32, i32* %x93, align 4, !tbaa !40
  %q94 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %x95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q94, i32 0, i32 0
  %64 = load i32, i32* %x95, align 4, !tbaa !40
  %cmp96 = icmp slt i32 %63, %64
  br i1 %cmp96, label %if.then.98, label %if.end.103

if.then.98:                                       ; preds = %if.end.91
  %q99 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 1
  %x100 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q99, i32 0, i32 0
  %65 = load i32, i32* %x100, align 4, !tbaa !40
  %q101 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %x102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q101, i32 0, i32 0
  store i32 %65, i32* %x102, align 4, !tbaa !40
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.98, %if.end.91
  %p104 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 0
  %y105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p104, i32 0, i32 1
  %66 = load i32, i32* %y105, align 4, !tbaa !38
  %p106 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p106, i32 0, i32 1
  %67 = load i32, i32* %y107, align 4, !tbaa !38
  %cmp108 = icmp sgt i32 %66, %67
  br i1 %cmp108, label %if.then.110, label %if.end.115

if.then.110:                                      ; preds = %if.end.103
  %p111 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 0
  %y112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p111, i32 0, i32 1
  %68 = load i32, i32* %y112, align 4, !tbaa !38
  %p113 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %y114 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p113, i32 0, i32 1
  store i32 %68, i32* %y114, align 4, !tbaa !38
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.110, %if.end.103
  %q116 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 1
  %y117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q116, i32 0, i32 1
  %69 = load i32, i32* %y117, align 4, !tbaa !42
  %q118 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %y119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q118, i32 0, i32 1
  %70 = load i32, i32* %y119, align 4, !tbaa !42
  %cmp120 = icmp slt i32 %69, %70
  br i1 %cmp120, label %if.then.122, label %if.end.127

if.then.122:                                      ; preds = %if.end.115
  %q123 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %bbox, i32 0, i32 1
  %y124 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q123, i32 0, i32 1
  %71 = load i32, i32* %y124, align 4, !tbaa !42
  %q125 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %y126 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q125, i32 0, i32 1
  store i32 %71, i32* %y126, align 4, !tbaa !42
  br label %if.end.127

if.end.127:                                       ; preds = %if.then.122, %if.end.115
  br label %do.cond.128

do.cond.128:                                      ; preds = %if.end.127
  br label %do.end.129

do.end.129:                                       ; preds = %do.cond.128
  %p130 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %x131 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p130, i32 0, i32 0
  %72 = load i32, i32* %x131, align 4, !tbaa !34
  %x132 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %73 = load i32, i32* %x132, align 4, !tbaa !72
  %sub133 = sub nsw i32 %72, %73
  %q134 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %x135 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q134, i32 0, i32 0
  %74 = load i32, i32* %x135, align 4, !tbaa !40
  %x136 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %75 = load i32, i32* %x136, align 4, !tbaa !72
  %add137 = add nsw i32 %74, %75
  %cmp138 = icmp sge i32 %sub133, %add137
  br i1 %cmp138, label %if.then.150, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end.129
  %p140 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %y141 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p140, i32 0, i32 1
  %76 = load i32, i32* %y141, align 4, !tbaa !38
  %y142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 1
  %77 = load i32, i32* %y142, align 4, !tbaa !71
  %sub143 = sub nsw i32 %76, %77
  %q144 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %y145 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q144, i32 0, i32 1
  %78 = load i32, i32* %y145, align 4, !tbaa !42
  %y146 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 1
  %79 = load i32, i32* %y146, align 4, !tbaa !71
  %add147 = add nsw i32 %78, %79
  %cmp148 = icmp sge i32 %sub143, %add147
  br i1 %cmp148, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %lor.lhs.false, %do.end.129
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.473

if.end.151:                                       ; preds = %lor.lhs.false
  %80 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %tobool152 = icmp ne %struct.gx_clip_path_s* %80, null
  br i1 %tobool152, label %if.then.153, label %if.end.156

if.then.153:                                      ; preds = %if.end.151
  %81 = bitcast %struct.gx_device_clip_s* %cdev to %struct.gx_device_s*
  store %struct.gx_device_s* %81, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %82 = load %struct.gx_clip_path_s*, %struct.gx_clip_path_s** %pcpath.addr, align 8, !tbaa !1
  %83 = load %struct.gx_device_s*, %struct.gx_device_s** %save_dev, align 8, !tbaa !1
  call void @gx_make_clip_device_on_stack(%struct.gx_device_clip_s* %cdev, %struct.gx_clip_path_s* %82, %struct.gx_device_s* %83) #5
  %84 = load %struct.gx_device_s*, %struct.gx_device_s** %save_dev, align 8, !tbaa !1
  %max_fill_band154 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %84, i32 0, i32 10
  %85 = load i32, i32* %max_fill_band154, align 4, !tbaa !65
  %max_fill_band155 = getelementptr inbounds %struct.gx_device_clip_s, %struct.gx_device_clip_s* %cdev, i32 0, i32 10
  store i32 %85, i32* %max_fill_band155, align 4, !tbaa !82
  br label %if.end.156

if.end.156:                                       ; preds = %if.then.153, %if.end.151
  br label %if.end.157

if.end.157:                                       ; preds = %if.end.156, %land.lhs.true.64
  %x158 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %86 = load i32, i32* %x158, align 4, !tbaa !72
  %conv159 = sext i32 %86 to i64
  %cmp160 = icmp eq i64 %conv159, 128
  br i1 %cmp160, label %if.then.162, label %if.else.163

if.then.162:                                      ; preds = %if.end.157
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  store i32 127, i32* %adjust_left, align 4, !tbaa !83
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  store i32 128, i32* %adjust_right, align 4, !tbaa !85
  br label %if.end.167

if.else.163:                                      ; preds = %if.end.157
  %x164 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %87 = load i32, i32* %x164, align 4, !tbaa !72
  %adjust_right165 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  store i32 %87, i32* %adjust_right165, align 4, !tbaa !85
  %adjust_left166 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  store i32 %87, i32* %adjust_left166, align 4, !tbaa !83
  br label %if.end.167

if.end.167:                                       ; preds = %if.else.163, %if.then.162
  %y168 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 1
  %88 = load i32, i32* %y168, align 4, !tbaa !71
  %conv169 = sext i32 %88 to i64
  %cmp170 = icmp eq i64 %conv169, 128
  br i1 %cmp170, label %if.then.172, label %if.else.173

if.then.172:                                      ; preds = %if.end.167
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  store i32 127, i32* %adjust_below, align 4, !tbaa !86
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  store i32 128, i32* %adjust_above, align 4, !tbaa !87
  br label %if.end.177

if.else.173:                                      ; preds = %if.end.167
  %y174 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 1
  %89 = load i32, i32* %y174, align 4, !tbaa !71
  %adjust_above175 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  store i32 %89, i32* %adjust_above175, align 4, !tbaa !87
  %adjust_below176 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  store i32 %89, i32* %adjust_below176, align 4, !tbaa !86
  br label %if.end.177

if.end.177:                                       ; preds = %if.else.173, %if.then.172
  %90 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_path_s, %struct.gx_path_s* %90, i32 0, i32 1
  %91 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !88
  call void @init_line_list(%struct.line_list_s* %lst, %struct.gs_memory_s* %91) #5
  %p178 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %x179 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p178, i32 0, i32 0
  %92 = load i32, i32* %x179, align 4, !tbaa !34
  %x180 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %93 = load i32, i32* %x180, align 4, !tbaa !72
  %sub181 = sub nsw i32 %92, %93
  %p182 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %sbox, i32 0, i32 0
  %x183 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p182, i32 0, i32 0
  store i32 %sub181, i32* %x183, align 4, !tbaa !34
  %p184 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %y185 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p184, i32 0, i32 1
  %94 = load i32, i32* %y185, align 4, !tbaa !38
  %y186 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 1
  %95 = load i32, i32* %y186, align 4, !tbaa !71
  %sub187 = sub nsw i32 %94, %95
  %p188 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %sbox, i32 0, i32 0
  %y189 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p188, i32 0, i32 1
  store i32 %sub187, i32* %y189, align 4, !tbaa !38
  %q190 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %x191 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q190, i32 0, i32 0
  %96 = load i32, i32* %x191, align 4, !tbaa !40
  %x192 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 0
  %97 = load i32, i32* %x192, align 4, !tbaa !72
  %add193 = add nsw i32 %96, %97
  %q194 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %sbox, i32 0, i32 1
  %x195 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q194, i32 0, i32 0
  store i32 %add193, i32* %x195, align 4, !tbaa !40
  %q196 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %y197 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q196, i32 0, i32 1
  %98 = load i32, i32* %y197, align 4, !tbaa !42
  %y198 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %adjust, i32 0, i32 1
  %99 = load i32, i32* %y198, align 4, !tbaa !71
  %add199 = add nsw i32 %98, %99
  %q200 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %sbox, i32 0, i32 1
  %y201 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q200, i32 0, i32 1
  store i32 %add199, i32* %y201, align 4, !tbaa !42
  %100 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !5
  %pseudo_rasterization202 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 0
  store i32 %100, i32* %pseudo_rasterization202, align 4, !tbaa !89
  %101 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %pdevc203 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  store %struct.gx_device_color_s* %101, %struct.gx_device_color_s** %pdevc203, align 8, !tbaa !90
  %102 = load i32, i32* %lop, align 4, !tbaa !5
  %lop204 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  store i32 %102, i32* %lop204, align 4, !tbaa !91
  %103 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %flatness = getelementptr inbounds %struct.gx_fill_params_s, %struct.gx_fill_params_s* %103, i32 0, i32 2
  %104 = load float, float* %flatness, align 4, !tbaa !92
  %mul = fmul float %104, 2.560000e+02
  %conv205 = fptosi float %mul to i32
  %fixed_flat = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 6
  store i32 %conv205, i32* %fixed_flat, align 4, !tbaa !93
  %p206 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 0
  %y207 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p206, i32 0, i32 1
  %105 = load i32, i32* %y207, align 4, !tbaa !38
  %ymin = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 1
  store i32 %105, i32* %ymin, align 4, !tbaa !94
  %q208 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %ibox, i32 0, i32 1
  %y209 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q208, i32 0, i32 1
  %106 = load i32, i32* %y209, align 4, !tbaa !42
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  store i32 %106, i32* %ymax, align 4, !tbaa !95
  %107 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %dev210 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  store %struct.gx_device_s* %107, %struct.gx_device_s** %dev210, align 8, !tbaa !96
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  store %struct.gs_fixed_rect_s* %sbox, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %108 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %rule = getelementptr inbounds %struct.gx_fill_params_s, %struct.gx_fill_params_s* %108, i32 0, i32 0
  %109 = load i32, i32* %rule, align 4, !tbaa !30
  %rule211 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  store i32 %109, i32* %rule211, align 4, !tbaa !98
  %110 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %call212 = call i32 @is_spotan_device(%struct.gx_device_s* %110) #5
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  store i32 %call212, i32* %is_spotan, align 4, !tbaa !99
  %111 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %111, i32 0, i32 0
  %112 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %cmp213 = icmp eq %struct.gx_device_color_type_s* %112, @gx_dc_type_data_pure
  br i1 %cmp213, label %land.rhs.215, label %land.end.219

land.rhs.215:                                     ; preds = %if.end.177
  %113 = load i32, i32* %lop, align 4, !tbaa !5
  %and216 = and i32 %113, 563
  %cmp217 = icmp eq i32 %and216, 48
  br label %land.end.219

land.end.219:                                     ; preds = %land.rhs.215, %if.end.177
  %114 = phi i1 [ false, %if.end.177 ], [ %cmp217, %land.rhs.215 ]
  %land.ext220 = zext i1 %114 to i32
  %fill_direct = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 5
  store i32 %land.ext220, i32* %fill_direct, align 4, !tbaa !100
  %fill_direct221 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 5
  %115 = load i32, i32* %fill_direct221, align 4, !tbaa !100
  %tobool222 = icmp ne i32 %115, 0
  br i1 %tobool222, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.end.219
  %116 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs223 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %116, i32 0, i32 42
  %fill_rectangle = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs223, i32 0, i32 7
  %117 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rectangle, align 8, !tbaa !101
  br label %cond.end

cond.false:                                       ; preds = %land.end.219
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* [ %117, %cond.true ], [ null, %cond.false ]
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  store i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)* %cond, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %118 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs224 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %118, i32 0, i32 42
  %fill_trapezoid = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs224, i32 0, i32 27
  %119 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid, align 8, !tbaa !103
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 17
  store i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)* %119, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %120 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !5
  %tobool225 = icmp ne i32 %120, 0
  br i1 %tobool225, label %lor.end, label %lor.lhs.false.226

lor.lhs.false.226:                                ; preds = %cond.end
  %121 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %curve_count = getelementptr inbounds %struct.gx_path_s, %struct.gx_path_s* %121, i32 0, i32 13
  %122 = load i32, i32* %curve_count, align 4, !tbaa !105
  %cmp227 = icmp ne i32 %122, 0
  br i1 %cmp227, label %lor.lhs.false.229, label %lor.end

lor.lhs.false.229:                                ; preds = %lor.lhs.false.226
  %123 = load %struct.gx_fill_params_s*, %struct.gx_fill_params_s** %params.addr, align 8, !tbaa !1
  %flatness230 = getelementptr inbounds %struct.gx_fill_params_s, %struct.gx_fill_params_s* %123, i32 0, i32 2
  %124 = load float, float* %flatness230, align 4, !tbaa !92
  %conv231 = fpext float %124 to double
  %cmp232 = fcmp oge double %conv231, 1.000000e+00
  br i1 %cmp232, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false.229
  %is_spotan234 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %125 = load i32, i32* %is_spotan234, align 4, !tbaa !99
  %tobool235 = icmp ne i32 %125, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.229, %lor.lhs.false.226, %cond.end
  %126 = phi i1 [ true, %lor.lhs.false.229 ], [ true, %lor.lhs.false.226 ], [ true, %cond.end ], [ %tobool235, %lor.rhs ]
  %lor.ext = zext i1 %126 to i32
  store i32 %lor.ext, i32* %fill_by_trapezoids, align 4, !tbaa !5
  %127 = load i32, i32* %fill_by_trapezoids, align 4, !tbaa !5
  %tobool236 = icmp ne i32 %127, 0
  br i1 %tobool236, label %land.lhs.true.237, label %if.end.298

land.lhs.true.237:                                ; preds = %lor.end
  %is_spotan238 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %128 = load i32, i32* %is_spotan238, align 4, !tbaa !99
  %tobool239 = icmp ne i32 %128, 0
  br i1 %tobool239, label %if.end.298, label %land.lhs.true.240

land.lhs.true.240:                                ; preds = %land.lhs.true.237
  %129 = load i32, i32* %lop, align 4, !tbaa !5
  %neg = xor i32 %129, -1
  %130 = load i32, i32* %lop, align 4, !tbaa !5
  %shl = shl i32 %130, 1
  %and241 = and i32 %neg, %shl
  %and242 = and i32 %and241, 170
  %tobool243 = icmp ne i32 %and242, 0
  br i1 %tobool243, label %if.then.247, label %land.lhs.true.244

land.lhs.true.244:                                ; preds = %land.lhs.true.240
  %131 = load i32, i32* %lop, align 4, !tbaa !5
  %and245 = and i32 %131, 1024
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %if.then.247, label %if.end.298

if.then.247:                                      ; preds = %land.lhs.true.244, %land.lhs.true.240
  %132 = bitcast %struct.gs_fixed_rect_s* %rbox to i8*
  call void @llvm.lifetime.start(i64 16, i8* %132) #1
  %133 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %call248 = call i32 @gx_path_is_rectangular(%struct.gx_path_s* %133, %struct.gs_fixed_rect_s* %rbox) #5
  %tobool249 = icmp ne i32 %call248, 0
  br i1 %tobool249, label %if.then.250, label %if.end.288

if.then.250:                                      ; preds = %if.then.247
  %134 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %134) #1
  %p251 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rbox, i32 0, i32 0
  %x252 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p251, i32 0, i32 0
  %135 = load i32, i32* %x252, align 4, !tbaa !34
  %adjust_left253 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %136 = load i32, i32* %adjust_left253, align 4, !tbaa !83
  %sub254 = sub nsw i32 %135, %136
  %conv255 = sext i32 %sub254 to i64
  %add256 = add nsw i64 %conv255, 127
  %shr257 = ashr i64 %add256, 8
  %conv258 = trunc i64 %shr257 to i32
  store i32 %conv258, i32* %x0, align 4, !tbaa !5
  %137 = bitcast i32* %y0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %137) #1
  %p259 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rbox, i32 0, i32 0
  %y260 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p259, i32 0, i32 1
  %138 = load i32, i32* %y260, align 4, !tbaa !38
  %adjust_below261 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %139 = load i32, i32* %adjust_below261, align 4, !tbaa !86
  %sub262 = sub nsw i32 %138, %139
  %conv263 = sext i32 %sub262 to i64
  %add264 = add nsw i64 %conv263, 127
  %shr265 = ashr i64 %add264, 8
  %conv266 = trunc i64 %shr265 to i32
  store i32 %conv266, i32* %y0, align 4, !tbaa !5
  %140 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %140) #1
  %q267 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rbox, i32 0, i32 1
  %x268 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q267, i32 0, i32 0
  %141 = load i32, i32* %x268, align 4, !tbaa !40
  %adjust_right269 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %142 = load i32, i32* %adjust_right269, align 4, !tbaa !85
  %add270 = add nsw i32 %141, %142
  %conv271 = sext i32 %add270 to i64
  %add272 = add nsw i64 %conv271, 127
  %shr273 = ashr i64 %add272, 8
  %conv274 = trunc i64 %shr273 to i32
  store i32 %conv274, i32* %x1, align 4, !tbaa !5
  %143 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %143) #1
  %q275 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rbox, i32 0, i32 1
  %y276 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q275, i32 0, i32 1
  %144 = load i32, i32* %y276, align 4, !tbaa !42
  %adjust_above277 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %145 = load i32, i32* %adjust_above277, align 4, !tbaa !87
  %add278 = add nsw i32 %144, %145
  %conv279 = sext i32 %add278 to i64
  %add280 = add nsw i64 %conv279, 127
  %shr281 = ashr i64 %add280, 8
  %conv282 = trunc i64 %shr281 to i32
  store i32 %conv282, i32* %y1, align 4, !tbaa !5
  %146 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type283 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %146, i32 0, i32 0
  %147 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type283, align 8, !tbaa !7
  %fill_rectangle284 = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %147, i32 0, i32 5
  %148 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle284, align 8, !tbaa !50
  %149 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %150 = load i32, i32* %x0, align 4, !tbaa !5
  %151 = load i32, i32* %y0, align 4, !tbaa !5
  %152 = load i32, i32* %x1, align 4, !tbaa !5
  %153 = load i32, i32* %x0, align 4, !tbaa !5
  %sub285 = sub nsw i32 %152, %153
  %154 = load i32, i32* %y1, align 4, !tbaa !5
  %155 = load i32, i32* %y0, align 4, !tbaa !5
  %sub286 = sub nsw i32 %154, %155
  %156 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %157 = load i32, i32* %lop, align 4, !tbaa !5
  %call287 = call i32 %148(%struct.gx_device_color_s* %149, i32 %150, i32 %151, i32 %sub285, i32 %sub286, %struct.gx_device_s* %156, i32 %157, %struct.gx_rop_source_s* null) #5
  store i32 %call287, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %158 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %158) #1
  %159 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %159) #1
  %160 = bitcast i32* %y0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %160) #1
  %161 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %161) #1
  br label %cleanup

if.end.288:                                       ; preds = %if.then.247
  %adjust_left289 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %162 = load i32, i32* %adjust_left289, align 4, !tbaa !83
  %adjust_right290 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %163 = load i32, i32* %adjust_right290, align 4, !tbaa !85
  %or = or i32 %162, %163
  %adjust_below291 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %164 = load i32, i32* %adjust_below291, align 4, !tbaa !86
  %or292 = or i32 %or, %164
  %adjust_above293 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %165 = load i32, i32* %adjust_above293, align 4, !tbaa !87
  %or294 = or i32 %or292, %165
  %tobool295 = icmp ne i32 %or294, 0
  br i1 %tobool295, label %if.then.296, label %if.end.297

if.then.296:                                      ; preds = %if.end.288
  store i32 0, i32* %fill_by_trapezoids, align 4, !tbaa !5
  br label %if.end.297

if.end.297:                                       ; preds = %if.then.296, %if.end.288
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.297, %if.then.250
  %166 = bitcast %struct.gs_fixed_rect_s* %rbox to i8*
  call void @llvm.lifetime.end(i64 16, i8* %166) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.473 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.298

if.end.298:                                       ; preds = %cleanup.cont, %land.lhs.true.244, %land.lhs.true.237, %lor.end
  %167 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %memory299 = getelementptr inbounds %struct.gx_path_s, %struct.gx_path_s* %167, i32 0, i32 1
  %168 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory299, align 8, !tbaa !88
  %call300 = call i32 @gx_path_init_local_shared(%struct.gx_path_s* %ffpath, %struct.gx_path_s* null, %struct.gs_memory_s* %168) #5
  %169 = load i32, i32* %big_path, align 4, !tbaa !5
  %tobool301 = icmp ne i32 %169, 0
  br i1 %tobool301, label %if.else.307, label %land.lhs.true.302

land.lhs.true.302:                                ; preds = %if.end.298
  %170 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %curve_count303 = getelementptr inbounds %struct.gx_path_s, %struct.gx_path_s* %170, i32 0, i32 13
  %171 = load i32, i32* %curve_count303, align 4, !tbaa !105
  %cmp304 = icmp ne i32 %171, 0
  br i1 %cmp304, label %if.else.307, label %if.then.306

if.then.306:                                      ; preds = %land.lhs.true.302
  %172 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store %struct.gx_path_s* %172, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  br label %if.end.335

if.else.307:                                      ; preds = %land.lhs.true.302, %if.end.298
  %173 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %call308 = call i32 @is_spotan_device(%struct.gx_device_s* %173) #5
  %tobool309 = icmp ne i32 %call308, 0
  br i1 %tobool309, label %if.then.310, label %if.else.311

if.then.310:                                      ; preds = %if.else.307
  %174 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store %struct.gx_path_s* %174, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  br label %if.end.334

if.else.311:                                      ; preds = %if.else.307
  %175 = load i32, i32* %big_path, align 4, !tbaa !5
  %tobool312 = icmp ne i32 %175, 0
  br i1 %tobool312, label %if.else.318, label %land.lhs.true.313

land.lhs.true.313:                                ; preds = %if.else.311
  %176 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %fixed_flat314 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 6
  %177 = load i32, i32* %fixed_flat314, align 4, !tbaa !93
  %call315 = call i32 @gx_path__check_curves(%struct.gx_path_s* %176, i32 8, i32 %177) #5
  %tobool316 = icmp ne i32 %call315, 0
  br i1 %tobool316, label %if.then.317, label %if.else.318

if.then.317:                                      ; preds = %land.lhs.true.313
  %178 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store %struct.gx_path_s* %178, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  br label %if.end.333

if.else.318:                                      ; preds = %land.lhs.true.313, %if.else.311
  %179 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %fixed_flat319 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 6
  %180 = load i32, i32* %fixed_flat319, align 4, !tbaa !93
  %call320 = call i32 @gx_path_copy_reducing(%struct.gx_path_s* %179, %struct.gx_path_s* %ffpath, i32 %180, %struct.gs_imager_state_s* null, i32 8) #5
  store i32 %call320, i32* %code, align 4, !tbaa !5
  %181 = load i32, i32* %code, align 4, !tbaa !5
  %cmp321 = icmp slt i32 %181, 0
  br i1 %cmp321, label %if.then.323, label %if.end.324

if.then.323:                                      ; preds = %if.else.318
  %182 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %182, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.473

if.end.324:                                       ; preds = %if.else.318
  store %struct.gx_path_s* %ffpath, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  %183 = load i32, i32* %big_path, align 4, !tbaa !5
  %tobool325 = icmp ne i32 %183, 0
  br i1 %tobool325, label %if.then.326, label %if.end.332

if.then.326:                                      ; preds = %if.end.324
  %184 = load %struct.gx_path_s*, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  %call327 = call i32 @gx_path_merge_contacting_contours(%struct.gx_path_s* %184) #5
  store i32 %call327, i32* %code, align 4, !tbaa !5
  %185 = load i32, i32* %code, align 4, !tbaa !5
  %cmp328 = icmp slt i32 %185, 0
  br i1 %cmp328, label %if.then.330, label %if.end.331

if.then.330:                                      ; preds = %if.then.326
  %186 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %186, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.473

if.end.331:                                       ; preds = %if.then.326
  br label %if.end.332

if.end.332:                                       ; preds = %if.end.331, %if.end.324
  br label %if.end.333

if.end.333:                                       ; preds = %if.end.332, %if.then.317
  br label %if.end.334

if.end.334:                                       ; preds = %if.end.333, %if.then.310
  br label %if.end.335

if.end.335:                                       ; preds = %if.end.334, %if.then.306
  %187 = load i32, i32* %fill_by_trapezoids, align 4, !tbaa !5
  %fill_by_trapezoids336 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 7
  store i32 %187, i32* %fill_by_trapezoids336, align 4, !tbaa !106
  %188 = load %struct.gx_path_s*, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  %call337 = call i32 @add_y_list(%struct.gx_path_s* %188, %struct.line_list_s* %lst) #5
  store i32 %call337, i32* %code, align 4, !tbaa !5
  %cmp338 = icmp slt i32 %call337, 0
  br i1 %cmp338, label %if.then.340, label %if.end.341

if.then.340:                                      ; preds = %if.end.335
  br label %nope

if.end.341:                                       ; preds = %if.end.335
  %189 = bitcast i32 (%struct.line_list_s*, i32)** %fill_loop to i8*
  call void @llvm.lifetime.start(i64 8, i8* %189) #1
  %190 = load i32, i32* %fill_by_trapezoids, align 4, !tbaa !5
  %tobool342 = icmp ne i32 %190, 0
  br i1 %tobool342, label %if.then.343, label %if.else.344

if.then.343:                                      ; preds = %if.end.341
  store i32 (%struct.line_list_s*, i32)* @spot_into_trapezoids, i32 (%struct.line_list_s*, i32)** %fill_loop, align 8, !tbaa !1
  br label %if.end.345

if.else.344:                                      ; preds = %if.end.341
  store i32 (%struct.line_list_s*, i32)* @spot_into_scan_lines, i32 (%struct.line_list_s*, i32)** %fill_loop, align 8, !tbaa !1
  br label %if.end.345

if.end.345:                                       ; preds = %if.else.344, %if.then.343
  %bbox_width346 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 16
  %191 = load i32, i32* %bbox_width346, align 4, !tbaa !81
  %cmp347 = icmp sgt i32 %191, 100
  br i1 %cmp347, label %land.lhs.true.349, label %if.end.369

land.lhs.true.349:                                ; preds = %if.end.345
  %pseudo_rasterization350 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 0
  %192 = load i32, i32* %pseudo_rasterization350, align 4, !tbaa !89
  %tobool351 = icmp ne i32 %192, 0
  br i1 %tobool351, label %if.then.352, label %if.end.369

if.then.352:                                      ; preds = %land.lhs.true.349
  %193 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory353 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %193, i32 0, i32 3
  %194 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory353, align 8, !tbaa !17
  %procs354 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %194, i32 0, i32 1
  %alloc_struct_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs354, i32 0, i32 12
  %195 = load i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)** %alloc_struct_array, align 8, !tbaa !107
  %196 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory355 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %196, i32 0, i32 3
  %197 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory355, align 8, !tbaa !17
  %bbox_width356 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 16
  %198 = load i32, i32* %bbox_width356, align 4, !tbaa !81
  %mul357 = mul nsw i32 %198, 2
  %call358 = call i8* %195(%struct.gs_memory_s* %197, i32 %mul357, %struct.gs_memory_struct_type_s* @st_section, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #5
  %199 = bitcast i8* %call358 to %struct.section_s*
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 3
  store %struct.section_s* %199, %struct.section_s** %sect, align 8, !tbaa !110
  %margin_set0359 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect360 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0359, i32 0, i32 3
  %200 = load %struct.section_s*, %struct.section_s** %sect360, align 8, !tbaa !110
  %cmp361 = icmp eq %struct.section_s* %200, null
  br i1 %cmp361, label %if.then.363, label %if.end.364

if.then.363:                                      ; preds = %if.then.352
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.461

if.end.364:                                       ; preds = %if.then.352
  %margin_set0365 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect366 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0365, i32 0, i32 3
  %201 = load %struct.section_s*, %struct.section_s** %sect366, align 8, !tbaa !110
  %bbox_width367 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 16
  %202 = load i32, i32* %bbox_width367, align 4, !tbaa !81
  %idx.ext = sext i32 %202 to i64
  %add.ptr = getelementptr inbounds %struct.section_s, %struct.section_s* %201, i64 %idx.ext
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 11
  %sect368 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 3
  store %struct.section_s* %add.ptr, %struct.section_s** %sect368, align 8, !tbaa !111
  br label %if.end.369

if.end.369:                                       ; preds = %if.end.364, %land.lhs.true.349, %if.end.345
  %pseudo_rasterization370 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 0
  %203 = load i32, i32* %pseudo_rasterization370, align 4, !tbaa !89
  %tobool371 = icmp ne i32 %203, 0
  br i1 %tobool371, label %if.then.372, label %if.end.379

if.then.372:                                      ; preds = %if.end.369
  %margin_set0373 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect374 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0373, i32 0, i32 3
  %204 = load %struct.section_s*, %struct.section_s** %sect374, align 8, !tbaa !110
  %bbox_width375 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 16
  %205 = load i32, i32* %bbox_width375, align 4, !tbaa !81
  call void @init_section(%struct.section_s* %204, i32 0, i32 %205) #5
  %margin_set1376 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 11
  %sect377 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1376, i32 0, i32 3
  %206 = load %struct.section_s*, %struct.section_s** %sect377, align 8, !tbaa !111
  %bbox_width378 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 16
  %207 = load i32, i32* %bbox_width378, align 4, !tbaa !81
  call void @init_section(%struct.section_s* %206, i32 0, i32 %207) #5
  br label %if.end.379

if.end.379:                                       ; preds = %if.then.372, %if.end.369
  %208 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %memory380 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %208, i32 0, i32 1
  %209 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory380, align 8, !tbaa !112
  %call381 = call i32 @gs_currentcpsimode(%struct.gs_memory_s* %209) #5
  %tobool382 = icmp ne i32 %call381, 0
  br i1 %tobool382, label %land.lhs.true.383, label %if.end.405

land.lhs.true.383:                                ; preds = %if.end.379
  %210 = load i32, i32* %is_character, align 4, !tbaa !5
  %tobool384 = icmp ne i32 %210, 0
  br i1 %tobool384, label %if.then.385, label %if.end.405

if.then.385:                                      ; preds = %land.lhs.true.383
  %contour_count386 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 20
  %211 = load i32, i32* %contour_count386, align 4, !tbaa !74
  %conv387 = sext i32 %211 to i64
  %cmp388 = icmp ugt i64 %conv387, 20
  br i1 %cmp388, label %if.then.390, label %if.else.397

if.then.390:                                      ; preds = %if.then.385
  %212 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory391 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %212, i32 0, i32 3
  %213 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory391, align 8, !tbaa !17
  %procs392 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %213, i32 0, i32 1
  %alloc_byte_array = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs392, i32 0, i32 10
  %214 = load i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)** %alloc_byte_array, align 8, !tbaa !113
  %215 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory393 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %215, i32 0, i32 3
  %216 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory393, align 8, !tbaa !17
  %contour_count394 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 20
  %217 = load i32, i32* %contour_count394, align 4, !tbaa !74
  %call395 = call i8* %214(%struct.gs_memory_s* %216, i32 %217, i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #5
  %218 = bitcast i8* %call395 to i32*
  %windings396 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 13
  store i32* %218, i32** %windings396, align 8, !tbaa !79
  br label %if.end.399

if.else.397:                                      ; preds = %if.then.385
  %local_windings = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 25
  %arraydecay = getelementptr inbounds [20 x i32], [20 x i32]* %local_windings, i32 0, i32 0
  %windings398 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 13
  store i32* %arraydecay, i32** %windings398, align 8, !tbaa !79
  br label %if.end.399

if.end.399:                                       ; preds = %if.else.397, %if.then.390
  %windings400 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 13
  %219 = load i32*, i32** %windings400, align 8, !tbaa !79
  %220 = bitcast i32* %219 to i8*
  %contour_count401 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 20
  %221 = load i32, i32* %contour_count401, align 4, !tbaa !74
  %conv402 = sext i32 %221 to i64
  %mul403 = mul i64 4, %conv402
  %call404 = call i8* @memset(i8* %220, i32 0, i64 %mul403) #6
  br label %if.end.405

if.end.405:                                       ; preds = %if.end.399, %land.lhs.true.383, %if.end.379
  %222 = load i32 (%struct.line_list_s*, i32)*, i32 (%struct.line_list_s*, i32)** %fill_loop, align 8, !tbaa !1
  %223 = load i32, i32* %max_fill_band, align 4, !tbaa !5
  %cmp406 = icmp eq i32 %223, 0
  br i1 %cmp406, label %cond.true.408, label %cond.false.409

cond.true.408:                                    ; preds = %if.end.405
  br label %cond.end.412

cond.false.409:                                   ; preds = %if.end.405
  %224 = load i32, i32* %max_fill_band, align 4, !tbaa !5
  %sub410 = sub nsw i32 0, %224
  %shl411 = shl i32 %sub410, 8
  br label %cond.end.412

cond.end.412:                                     ; preds = %cond.false.409, %cond.true.408
  %cond413 = phi i32 [ -2147483648, %cond.true.408 ], [ %shl411, %cond.false.409 ]
  %call414 = call i32 %222(%struct.line_list_s* %lst, i32 %cond413) #5
  store i32 %call414, i32* %code, align 4, !tbaa !5
  %margin_set0415 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect416 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0415, i32 0, i32 3
  %225 = load %struct.section_s*, %struct.section_s** %sect416, align 8, !tbaa !110
  %local_section0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 23
  %arraydecay417 = getelementptr inbounds [100 x %struct.section_s], [100 x %struct.section_s]* %local_section0, i32 0, i32 0
  %cmp418 = icmp ne %struct.section_s* %225, %arraydecay417
  br i1 %cmp418, label %land.lhs.true.420, label %if.end.444

land.lhs.true.420:                                ; preds = %cond.end.412
  %margin_set0421 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect422 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0421, i32 0, i32 3
  %226 = load %struct.section_s*, %struct.section_s** %sect422, align 8, !tbaa !110
  %local_section1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 24
  %arraydecay423 = getelementptr inbounds [100 x %struct.section_s], [100 x %struct.section_s]* %local_section1, i32 0, i32 0
  %cmp424 = icmp ne %struct.section_s* %226, %arraydecay423
  br i1 %cmp424, label %if.then.426, label %if.end.444

if.then.426:                                      ; preds = %land.lhs.true.420
  %227 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory427 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %227, i32 0, i32 3
  %228 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory427, align 8, !tbaa !17
  %procs428 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %228, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs428, i32 0, i32 2
  %229 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !114
  %230 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory429 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %230, i32 0, i32 3
  %231 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory429, align 8, !tbaa !17
  %margin_set0430 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect431 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0430, i32 0, i32 3
  %232 = load %struct.section_s*, %struct.section_s** %sect431, align 8, !tbaa !110
  %margin_set1432 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 11
  %sect433 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1432, i32 0, i32 3
  %233 = load %struct.section_s*, %struct.section_s** %sect433, align 8, !tbaa !111
  %cmp434 = icmp ult %struct.section_s* %232, %233
  br i1 %cmp434, label %cond.true.436, label %cond.false.439

cond.true.436:                                    ; preds = %if.then.426
  %margin_set0437 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 10
  %sect438 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0437, i32 0, i32 3
  %234 = load %struct.section_s*, %struct.section_s** %sect438, align 8, !tbaa !110
  br label %cond.end.442

cond.false.439:                                   ; preds = %if.then.426
  %margin_set1440 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 11
  %sect441 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1440, i32 0, i32 3
  %235 = load %struct.section_s*, %struct.section_s** %sect441, align 8, !tbaa !111
  br label %cond.end.442

cond.end.442:                                     ; preds = %cond.false.439, %cond.true.436
  %cond443 = phi %struct.section_s* [ %234, %cond.true.436 ], [ %235, %cond.false.439 ]
  %236 = bitcast %struct.section_s* %cond443 to i8*
  call void %229(%struct.gs_memory_s* %231, i8* %236, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #5
  br label %if.end.444

if.end.444:                                       ; preds = %cond.end.442, %land.lhs.true.420, %cond.end.412
  %windings445 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 13
  %237 = load i32*, i32** %windings445, align 8, !tbaa !79
  %cmp446 = icmp ne i32* %237, null
  br i1 %cmp446, label %land.lhs.true.448, label %if.end.460

land.lhs.true.448:                                ; preds = %if.end.444
  %windings449 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 13
  %238 = load i32*, i32** %windings449, align 8, !tbaa !79
  %local_windings450 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 25
  %arraydecay451 = getelementptr inbounds [20 x i32], [20 x i32]* %local_windings450, i32 0, i32 0
  %cmp452 = icmp ne i32* %238, %arraydecay451
  br i1 %cmp452, label %if.then.454, label %if.end.460

if.then.454:                                      ; preds = %land.lhs.true.448
  %239 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory455 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %239, i32 0, i32 3
  %240 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory455, align 8, !tbaa !17
  %procs456 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %240, i32 0, i32 1
  %free_object457 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs456, i32 0, i32 2
  %241 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object457, align 8, !tbaa !114
  %242 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %memory458 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %242, i32 0, i32 3
  %243 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory458, align 8, !tbaa !17
  %windings459 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 13
  %244 = load i32*, i32** %windings459, align 8, !tbaa !79
  %245 = bitcast i32* %244 to i8*
  call void %241(%struct.gs_memory_s* %243, i8* %245, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #5
  br label %if.end.460

if.end.460:                                       ; preds = %if.then.454, %land.lhs.true.448, %if.end.444
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.461

cleanup.461:                                      ; preds = %if.end.460, %if.then.363
  %246 = bitcast i32 (%struct.line_list_s*, i32)** %fill_loop to i8*
  call void @llvm.lifetime.end(i64 8, i8* %246) #1
  %cleanup.dest.462 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.462, label %cleanup.473 [
    i32 0, label %cleanup.cont.463
  ]

cleanup.cont.463:                                 ; preds = %cleanup.461
  br label %nope

nope:                                             ; preds = %cleanup.cont.463, %if.then.340
  %close_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 4
  %247 = load i32, i32* %close_count, align 4, !tbaa !115
  %cmp464 = icmp ne i32 %247, 0
  br i1 %cmp464, label %if.then.466, label %if.end.468

if.then.466:                                      ; preds = %nope
  %248 = load %struct.gx_path_s*, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  %close_count467 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %lst, i32 0, i32 4
  %249 = load i32, i32* %close_count467, align 4, !tbaa !115
  call void @unclose_path(%struct.gx_path_s* %248, i32 %249) #5
  br label %if.end.468

if.end.468:                                       ; preds = %if.then.466, %nope
  call void @free_line_list(%struct.line_list_s* %lst) #5
  %250 = load %struct.gx_path_s*, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  %251 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %cmp469 = icmp ne %struct.gx_path_s* %250, %251
  br i1 %cmp469, label %if.then.471, label %if.end.472

if.then.471:                                      ; preds = %if.end.468
  %252 = load %struct.gx_path_s*, %struct.gx_path_s** %pfpath, align 8, !tbaa !1
  call void @gx_path_free(%struct.gx_path_s* %252, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)) #5
  br label %if.end.472

if.end.472:                                       ; preds = %if.then.471, %if.end.468
  %253 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %253, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.473

cleanup.473:                                      ; preds = %if.end.472, %cleanup.461, %if.then.330, %if.then.323, %cleanup, %if.then.150
  %254 = bitcast %struct.line_list_s* %lst to i8*
  call void @llvm.lifetime.end(i64 7224, i8* %254) #1
  %255 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %255) #1
  %256 = bitcast i32* %big_path to i8*
  call void @llvm.lifetime.end(i64 4, i8* %256) #1
  %257 = bitcast i32* %pseudo_rasterization to i8*
  call void @llvm.lifetime.end(i64 4, i8* %257) #1
  %258 = bitcast i32* %fill_by_trapezoids to i8*
  call void @llvm.lifetime.end(i64 4, i8* %258) #1
  %259 = bitcast i32* %is_character to i8*
  call void @llvm.lifetime.end(i64 4, i8* %259) #1
  %260 = bitcast i32* %max_fill_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %260) #1
  %261 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %261) #1
  %262 = bitcast %struct.gx_path_s** %pfpath to i8*
  call void @llvm.lifetime.end(i64 8, i8* %262) #1
  %263 = bitcast %struct.gx_path_s* %ffpath to i8*
  call void @llvm.lifetime.end(i64 128, i8* %263) #1
  %264 = bitcast %struct.gx_device_s** %save_dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %264) #1
  %265 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %265) #1
  %266 = bitcast %struct.gx_device_clip_s* %cdev to i8*
  call void @llvm.lifetime.end(i64 1856, i8* %266) #1
  %267 = bitcast %struct.gs_fixed_rect_s* %sbox to i8*
  call void @llvm.lifetime.end(i64 16, i8* %267) #1
  %268 = bitcast %struct.gs_fixed_rect_s* %bbox to i8*
  call void @llvm.lifetime.end(i64 16, i8* %268) #1
  %269 = bitcast %struct.gs_fixed_rect_s* %ibox to i8*
  call void @llvm.lifetime.end(i64 16, i8* %269) #1
  %270 = bitcast i32* %lop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %270) #1
  %271 = bitcast %struct.gs_fixed_point_s* %adjust to i8*
  call void @llvm.lifetime.end(i64 8, i8* %271) #1
  %272 = load i32, i32* %retval
  ret i32 %272
}

declare i32 @gx_path_bbox(%struct.gx_path_s*, %struct.gs_fixed_rect_s*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_spotan_device(%struct.gx_device_s* %dev) #3 {
entry:
  %dev.addr = alloca %struct.gx_device_s*, align 8
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %0 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %0, i32 0, i32 42
  %open_device = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 0
  %1 = load i32 (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*)** %open_device, align 8, !tbaa !116
  %cmp = icmp eq i32 (%struct.gx_device_s*)* %1, @san_open
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @gx_cpath_inner_box(%struct.gx_clip_path_s*, %struct.gs_fixed_rect_s*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_line_list(%struct.line_list_s* %ll, %struct.gs_memory_s* %mem) #3 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %0 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 0
  store %struct.gs_memory_s* %0, %struct.gs_memory_s** %memory, align 8, !tbaa !117
  %2 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %active_area = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %2, i32 0, i32 1
  store %struct.active_line_s* null, %struct.active_line_s** %active_area, align 8, !tbaa !118
  %3 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %local_active = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %3, i32 0, i32 21
  %arraydecay = getelementptr inbounds [20 x %struct.active_line_s], [20 x %struct.active_line_s]* %local_active, i32 0, i32 0
  %4 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %next_active = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %4, i32 0, i32 2
  store %struct.active_line_s* %arraydecay, %struct.active_line_s** %next_active, align 8, !tbaa !119
  %5 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %next_active1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %5, i32 0, i32 2
  %6 = load %struct.active_line_s*, %struct.active_line_s** %next_active1, align 8, !tbaa !119
  %add.ptr = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %6, i64 20
  %7 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %limit = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %7, i32 0, i32 3
  store %struct.active_line_s* %add.ptr, %struct.active_line_s** %limit, align 8, !tbaa !120
  %8 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %close_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %8, i32 0, i32 4
  store i32 0, i32* %close_count, align 4, !tbaa !115
  %9 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %9, i32 0, i32 5
  store %struct.active_line_s* null, %struct.active_line_s** %y_list, align 8, !tbaa !121
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 6
  store %struct.active_line_s* null, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %11 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %11, i32 0, i32 9
  store %struct.active_line_s* null, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %12 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %12, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %13 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %13, i32 0, i32 11
  %margin_list = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 1
  store %struct.margin_s* null, %struct.margin_s** %margin_list, align 8, !tbaa !125
  %14 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %14, i32 0, i32 10
  %margin_list2 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 1
  store %struct.margin_s* null, %struct.margin_s** %margin_list2, align 8, !tbaa !126
  %15 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set13 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %15, i32 0, i32 11
  %margin_touched = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set13, i32 0, i32 2
  store %struct.margin_s* null, %struct.margin_s** %margin_touched, align 8, !tbaa !127
  %16 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set04 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %16, i32 0, i32 10
  %margin_touched5 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set04, i32 0, i32 2
  store %struct.margin_s* null, %struct.margin_s** %margin_touched5, align 8, !tbaa !128
  %17 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set16 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %17, i32 0, i32 11
  %y = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set16, i32 0, i32 0
  store i32 0, i32* %y, align 4, !tbaa !129
  %18 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set07 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %18, i32 0, i32 10
  %y8 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set07, i32 0, i32 0
  store i32 0, i32* %y8, align 4, !tbaa !130
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %free_margin_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 12
  store %struct.margin_s* null, %struct.margin_s** %free_margin_list, align 8, !tbaa !131
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %local_margin_alloc_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 14
  store i32 0, i32* %local_margin_alloc_count, align 4, !tbaa !132
  %21 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %local_section0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %21, i32 0, i32 23
  %arraydecay9 = getelementptr inbounds [100 x %struct.section_s], [100 x %struct.section_s]* %local_section0, i32 0, i32 0
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set010 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %sect = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set010, i32 0, i32 3
  store %struct.section_s* %arraydecay9, %struct.section_s** %sect, align 8, !tbaa !110
  %23 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %local_section1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %23, i32 0, i32 24
  %arraydecay11 = getelementptr inbounds [100 x %struct.section_s], [100 x %struct.section_s]* %local_section1, i32 0, i32 0
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set112 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %sect13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set112, i32 0, i32 3
  store %struct.section_s* %arraydecay11, %struct.section_s** %sect13, align 8, !tbaa !111
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  ret void
}

declare i32 @gx_path_is_rectangular(%struct.gx_path_s*, %struct.gs_fixed_rect_s*) #2

declare i32 @gx_path_init_local_shared(%struct.gx_path_s*, %struct.gx_path_s*, %struct.gs_memory_s*) #2

declare i32 @gx_path__check_curves(%struct.gx_path_s*, i32, i32) #2

declare i32 @gx_path_copy_reducing(%struct.gx_path_s*, %struct.gx_path_s*, i32, %struct.gs_imager_state_s*, i32) #2

declare i32 @gx_path_merge_contacting_contours(%struct.gx_path_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @add_y_list(%struct.gx_path_s* %ppath, %struct.line_list_s* %ll) #0 {
entry:
  %retval = alloca i32, align 4
  %ppath.addr = alloca %struct.gx_path_s*, align 8
  %ll.addr = alloca %struct.line_list_s*, align 8
  %psub = alloca %struct.subpath_s*, align 8
  %close_count = alloca i32, align 4
  %code = alloca i32, align 4
  %q = alloca %struct.contour_cursor_s, align 8
  %fi = alloca %struct.gx_flattened_iterator_s, align 4
  %pfirst = alloca %struct.segment_s*, align 8
  %plast = alloca %struct.segment_s*, align 8
  %prev = alloca %struct.segment_s*, align 8
  %lp = alloca %struct.line_close_segment*, align 8
  %next = alloca %struct.segment_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gx_path_s* %ppath, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = bitcast %struct.subpath_s** %psub to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %segments = getelementptr inbounds %struct.gx_path_s, %struct.gx_path_s* %1, i32 0, i32 3
  %2 = load %struct.gx_path_segments_s*, %struct.gx_path_segments_s** %segments, align 8, !tbaa !133
  %contents = getelementptr inbounds %struct.gx_path_segments_s, %struct.gx_path_segments_s* %2, i32 0, i32 1
  %subpath_first = getelementptr inbounds %struct.psc_, %struct.psc_* %contents, i32 0, i32 0
  %3 = load %struct.subpath_s*, %struct.subpath_s** %subpath_first, align 8, !tbaa !134
  store %struct.subpath_s* %3, %struct.subpath_s** %psub, align 8, !tbaa !1
  %4 = bitcast i32* %close_count to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %close_count, align 4, !tbaa !5
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast %struct.contour_cursor_s* %q to i8*
  call void @llvm.lifetime.start(i64 64, i8* %6) #1
  %7 = bitcast %struct.gx_flattened_iterator_s* %fi to i8*
  call void @llvm.lifetime.start(i64 136, i8* %7) #1
  %monotonic_x = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %q, i32 0, i32 9
  store i32 0, i32* %monotonic_x, align 4, !tbaa !135
  %8 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %8, i32 0, i32 18
  store i32 2147483647, i32* %y_break, align 4, !tbaa !137
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %tobool = icmp ne %struct.subpath_s* %9, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = bitcast %struct.segment_s** %pfirst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %11 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %12 = bitcast %struct.subpath_s* %11 to %struct.segment_s*
  store %struct.segment_s* %12, %struct.segment_s** %pfirst, align 8, !tbaa !1
  %13 = bitcast %struct.segment_s** %plast to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %last = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %14, i32 0, i32 5
  %15 = load %struct.segment_s*, %struct.segment_s** %last, align 8, !tbaa !138
  store %struct.segment_s* %15, %struct.segment_s** %plast, align 8, !tbaa !1
  %16 = bitcast %struct.segment_s** %prev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #1
  %fi1 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %q, i32 0, i32 4
  store %struct.gx_flattened_iterator_s* %fi, %struct.gx_flattened_iterator_s** %fi1, align 8, !tbaa !141
  %17 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.segment_s, %struct.segment_s* %17, i32 0, i32 2
  %18 = load i16, i16* %type, align 2, !tbaa !142
  %conv = zext i16 %18 to i32
  %cmp = icmp ne i32 %conv, 2
  br i1 %cmp, label %if.then, label %if.end.14

if.then:                                          ; preds = %for.body
  %19 = bitcast %struct.line_close_segment** %lp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %19) #1
  %20 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %closer = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %20, i32 0, i32 7
  store %struct.line_close_segment* %closer, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %21 = bitcast %struct.segment_s** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #1
  %22 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %next3 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %22, i32 0, i32 1
  %23 = load %struct.segment_s*, %struct.segment_s** %next3, align 8, !tbaa !144
  store %struct.segment_s* %23, %struct.segment_s** %next, align 8, !tbaa !1
  %24 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !1
  %25 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %next4 = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %25, i32 0, i32 1
  store %struct.segment_s* %24, %struct.segment_s** %next4, align 8, !tbaa !145
  %26 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %27 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %prev5 = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %27, i32 0, i32 0
  store %struct.segment_s* %26, %struct.segment_s** %prev5, align 8, !tbaa !146
  %28 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %29 = bitcast %struct.line_close_segment* %28 to %struct.segment_s*
  %30 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %next6 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %30, i32 0, i32 1
  store %struct.segment_s* %29, %struct.segment_s** %next6, align 8, !tbaa !144
  %31 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !1
  %tobool7 = icmp ne %struct.segment_s* %31, null
  br i1 %tobool7, label %if.then.8, label %if.end

if.then.8:                                        ; preds = %if.then
  %32 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %33 = bitcast %struct.line_close_segment* %32 to %struct.segment_s*
  %34 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !1
  %prev9 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %34, i32 0, i32 0
  store %struct.segment_s* %33, %struct.segment_s** %prev9, align 8, !tbaa !147
  br label %if.end

if.end:                                           ; preds = %if.then.8, %if.then
  %35 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %type10 = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %35, i32 0, i32 2
  store i16 2, i16* %type10, align 2, !tbaa !148
  %36 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %pt = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %36, i32 0, i32 4
  %37 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %pt11 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %37, i32 0, i32 4
  %38 = bitcast %struct.gs_fixed_point_s* %pt to i8*
  %39 = bitcast %struct.gs_fixed_point_s* %pt11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 4, i1 false), !tbaa.struct !73
  %40 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %41 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %sub = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %41, i32 0, i32 5
  store %struct.subpath_s* %40, %struct.subpath_s** %sub, align 8, !tbaa !149
  %42 = load %struct.line_close_segment*, %struct.line_close_segment** %lp, align 8, !tbaa !1
  %43 = bitcast %struct.line_close_segment* %42 to %struct.segment_s*
  store %struct.segment_s* %43, %struct.segment_s** %plast, align 8, !tbaa !1
  %44 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %last12 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %44, i32 0, i32 5
  store %struct.segment_s* %43, %struct.segment_s** %last12, align 8, !tbaa !138
  %45 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %close_count13 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %45, i32 0, i32 4
  %46 = load i32, i32* %close_count13, align 4, !tbaa !115
  %inc = add nsw i32 %46, 1
  store i32 %inc, i32* %close_count13, align 4, !tbaa !115
  %47 = bitcast %struct.segment_s** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast %struct.line_close_segment** %lp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #1
  br label %if.end.14

if.end.14:                                        ; preds = %if.end, %for.body
  %49 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %prev15 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %49, i32 0, i32 0
  %50 = load %struct.segment_s*, %struct.segment_s** %prev15, align 8, !tbaa !147
  store %struct.segment_s* %50, %struct.segment_s** %prev, align 8, !tbaa !1
  %51 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %51, i32 0, i32 19
  %52 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %pseudo_rasterization = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %52, i32 0, i32 0
  %53 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !89
  %tobool16 = icmp ne i32 %53, 0
  br i1 %tobool16, label %land.lhs.true, label %if.end.33

land.lhs.true:                                    ; preds = %if.end.14
  %54 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %55 = load %struct.segment_s*, %struct.segment_s** %pfirst, align 8, !tbaa !1
  %cmp17 = icmp ne %struct.segment_s* %54, %55
  br i1 %cmp17, label %land.lhs.true.19, label %if.end.33

land.lhs.true.19:                                 ; preds = %land.lhs.true
  %56 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %pt20 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %56, i32 0, i32 4
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt20, i32 0, i32 0
  %57 = load i32, i32* %x, align 4, !tbaa !151
  %58 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %pt21 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %58, i32 0, i32 4
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt21, i32 0, i32 0
  %59 = load i32, i32* %x22, align 4, !tbaa !151
  %cmp23 = icmp eq i32 %57, %59
  br i1 %cmp23, label %land.lhs.true.25, label %if.end.33

land.lhs.true.25:                                 ; preds = %land.lhs.true.19
  %60 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %pt26 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %60, i32 0, i32 4
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt26, i32 0, i32 1
  %61 = load i32, i32* %y, align 4, !tbaa !152
  %62 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %pt27 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %62, i32 0, i32 4
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt27, i32 0, i32 1
  %63 = load i32, i32* %y28, align 4, !tbaa !152
  %cmp29 = icmp eq i32 %61, %63
  br i1 %cmp29, label %if.then.31, label %if.end.33

if.then.31:                                       ; preds = %land.lhs.true.25
  %64 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  store %struct.segment_s* %64, %struct.segment_s** %plast, align 8, !tbaa !1
  %65 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %prev32 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %65, i32 0, i32 0
  %66 = load %struct.segment_s*, %struct.segment_s** %prev32, align 8, !tbaa !147
  store %struct.segment_s* %66, %struct.segment_s** %prev, align 8, !tbaa !1
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.31, %land.lhs.true.25, %land.lhs.true.19, %land.lhs.true, %if.end.14
  %67 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %prev34 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %q, i32 0, i32 0
  store %struct.segment_s* %67, %struct.segment_s** %prev34, align 8, !tbaa !153
  %68 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %q, i32 0, i32 1
  store %struct.segment_s* %68, %struct.segment_s** %pseg, align 8, !tbaa !154
  %69 = load %struct.segment_s*, %struct.segment_s** %pfirst, align 8, !tbaa !1
  %pfirst35 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %q, i32 0, i32 2
  store %struct.segment_s* %69, %struct.segment_s** %pfirst35, align 8, !tbaa !155
  %70 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !1
  %plast36 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %q, i32 0, i32 3
  store %struct.segment_s* %70, %struct.segment_s** %plast36, align 8, !tbaa !156
  %71 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call = call i32 @scan_contour(%struct.line_list_s* %71, %struct.contour_cursor_s* %q) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %72 = load i32, i32* %code, align 4, !tbaa !5
  %cmp37 = icmp slt i32 %72, 0
  br i1 %cmp37, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.33
  %73 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %73, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.40:                                        ; preds = %if.end.33
  %74 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %74, i32 0, i32 20
  %75 = load i32, i32* %contour_count, align 4, !tbaa !74
  %inc41 = add nsw i32 %75, 1
  store i32 %inc41, i32* %contour_count, align 4, !tbaa !74
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.40, %if.then.39
  %76 = bitcast %struct.segment_s** %prev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76) #1
  %77 = bitcast %struct.segment_s** %plast to i8*
  call void @llvm.lifetime.end(i64 8, i8* %77) #1
  %78 = bitcast %struct.segment_s** %pfirst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %78) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.46 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %79 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %last44 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %79, i32 0, i32 5
  %80 = load %struct.segment_s*, %struct.segment_s** %last44, align 8, !tbaa !138
  %next45 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %80, i32 0, i32 1
  %81 = load %struct.segment_s*, %struct.segment_s** %next45, align 8, !tbaa !144
  %82 = bitcast %struct.segment_s* %81 to %struct.subpath_s*
  store %struct.subpath_s* %82, %struct.subpath_s** %psub, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %83 = load i32, i32* %close_count, align 4, !tbaa !5
  store i32 %83, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.46

cleanup.46:                                       ; preds = %for.end, %cleanup
  %84 = bitcast %struct.gx_flattened_iterator_s* %fi to i8*
  call void @llvm.lifetime.end(i64 136, i8* %84) #1
  %85 = bitcast %struct.contour_cursor_s* %q to i8*
  call void @llvm.lifetime.end(i64 64, i8* %85) #1
  %86 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #1
  %87 = bitcast i32* %close_count to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  %88 = bitcast %struct.subpath_s** %psub to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %89 = load i32, i32* %retval
  ret i32 %89
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %2, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %3 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %3, i32 0, i32 14
  %4 = load i32, i32* %is_spotan, align 4, !tbaa !99
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %6 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call = call i32 @spot_into_trapezoids__spotan(%struct.line_list_s* %5, i32 %6) #5
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pseudo_rasterization = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %7, i32 0, i32 0
  %8 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !89
  %tobool2 = icmp ne i32 %8, 0
  br i1 %tobool2, label %if.then.3, label %if.end.16

if.then.3:                                        ; preds = %if.end
  %9 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %9, i32 0, i32 13
  %10 = load i32*, i32** %windings, align 8, !tbaa !79
  %cmp = icmp ne i32* %10, null
  br i1 %cmp, label %if.then.4, label %if.else.9

if.then.4:                                        ; preds = %if.then.3
  %11 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_direct = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %11, i32 0, i32 5
  %12 = load i32, i32* %fill_direct, align 4, !tbaa !100
  %tobool5 = icmp ne i32 %12, 0
  br i1 %tobool5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.then.4
  %13 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %14 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call7 = call i32 @spot_into_trapezoids__pr_fd_sw(%struct.line_list_s* %13, i32 %14) #5
  store i32 %call7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %if.then.4
  %15 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %16 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call8 = call i32 @spot_into_trapezoids__pr_nd_sw(%struct.line_list_s* %15, i32 %16) #5
  store i32 %call8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.9:                                        ; preds = %if.then.3
  %17 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_direct10 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %17, i32 0, i32 5
  %18 = load i32, i32* %fill_direct10, align 4, !tbaa !100
  %tobool11 = icmp ne i32 %18, 0
  br i1 %tobool11, label %if.then.12, label %if.else.14

if.then.12:                                       ; preds = %if.else.9
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %20 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call13 = call i32 @spot_into_trapezoids__pr_fd(%struct.line_list_s* %19, i32 %20) #5
  store i32 %call13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.14:                                       ; preds = %if.else.9
  %21 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %22 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call15 = call i32 @spot_into_trapezoids__pr_nd(%struct.line_list_s* %21, i32 %22) #5
  store i32 %call15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end
  %23 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %23, i32 0, i32 10
  %24 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %25 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %25, i32 0, i32 11
  %26 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %or = or i32 %24, %26
  %27 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %27, i32 0, i32 8
  %28 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %or17 = or i32 %or, %28
  %29 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %29, i32 0, i32 9
  %30 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %or18 = or i32 %or17, %30
  %tobool19 = icmp ne i32 %or18, 0
  br i1 %tobool19, label %if.then.20, label %if.else.27

if.then.20:                                       ; preds = %if.end.16
  %31 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_direct21 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %31, i32 0, i32 5
  %32 = load i32, i32* %fill_direct21, align 4, !tbaa !100
  %tobool22 = icmp ne i32 %32, 0
  br i1 %tobool22, label %if.then.23, label %if.else.25

if.then.23:                                       ; preds = %if.then.20
  %33 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %34 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call24 = call i32 @spot_into_trapezoids__aj_fd(%struct.line_list_s* %33, i32 %34) #5
  store i32 %call24, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.25:                                       ; preds = %if.then.20
  %35 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %36 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call26 = call i32 @spot_into_trapezoids__aj_nd(%struct.line_list_s* %35, i32 %36) #5
  store i32 %call26, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.27:                                       ; preds = %if.end.16
  %37 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings28 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %37, i32 0, i32 13
  %38 = load i32*, i32** %windings28, align 8, !tbaa !79
  %cmp29 = icmp ne i32* %38, null
  br i1 %cmp29, label %if.then.30, label %if.else.37

if.then.30:                                       ; preds = %if.else.27
  %39 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_direct31 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %39, i32 0, i32 5
  %40 = load i32, i32* %fill_direct31, align 4, !tbaa !100
  %tobool32 = icmp ne i32 %40, 0
  br i1 %tobool32, label %if.then.33, label %if.else.35

if.then.33:                                       ; preds = %if.then.30
  %41 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %42 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call34 = call i32 @spot_into_trapezoids__nj_fd_sw(%struct.line_list_s* %41, i32 %42) #5
  store i32 %call34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.35:                                       ; preds = %if.then.30
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %44 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call36 = call i32 @spot_into_trapezoids__nj_nd_sw(%struct.line_list_s* %43, i32 %44) #5
  store i32 %call36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.37:                                       ; preds = %if.else.27
  %45 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_direct38 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %45, i32 0, i32 5
  %46 = load i32, i32* %fill_direct38, align 4, !tbaa !100
  %tobool39 = icmp ne i32 %46, 0
  br i1 %tobool39, label %if.then.40, label %if.else.42

if.then.40:                                       ; preds = %if.else.37
  %47 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %48 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call41 = call i32 @spot_into_trapezoids__nj_fd(%struct.line_list_s* %47, i32 %48) #5
  store i32 %call41, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.42:                                       ; preds = %if.else.37
  %49 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %50 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call43 = call i32 @spot_into_trapezoids__nj_nd(%struct.line_list_s* %49, i32 %50) #5
  store i32 %call43, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else.42, %if.then.40, %if.else.35, %if.then.33, %if.else.25, %if.then.23, %if.else.14, %if.then.12, %if.else, %if.then.6, %if.then
  %51 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  %52 = load i32, i32* %retval
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_scan_lines(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %0, i32 0, i32 19
  %1 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %fill_direct = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %1, i32 0, i32 5
  %2 = load i32, i32* %fill_direct, align 4, !tbaa !100
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %4 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call = call i32 @spot_into_scan_lines_fd(%struct.line_list_s* %3, i32 %4) #5
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %5 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %6 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %call1 = call i32 @spot_into_scan_lines_nd(%struct.line_list_s* %5, i32 %6) #5
  store i32 %call1, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval
  ret i32 %7
}

declare void @init_section(%struct.section_s*, i32, i32) #2

declare i32 @gs_currentcpsimode(%struct.gs_memory_s*) #2

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @unclose_path(%struct.gx_path_s* %ppath, i32 %count) #3 {
entry:
  %ppath.addr = alloca %struct.gx_path_s*, align 8
  %count.addr = alloca i32, align 4
  %psub = alloca %struct.subpath_s*, align 8
  %prev = alloca %struct.segment_s*, align 8
  %next = alloca %struct.segment_s*, align 8
  store %struct.gx_path_s* %ppath, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  store i32 %count, i32* %count.addr, align 4, !tbaa !5
  %0 = bitcast %struct.subpath_s** %psub to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gx_path_s*, %struct.gx_path_s** %ppath.addr, align 8, !tbaa !1
  %segments = getelementptr inbounds %struct.gx_path_s, %struct.gx_path_s* %1, i32 0, i32 3
  %2 = load %struct.gx_path_segments_s*, %struct.gx_path_segments_s** %segments, align 8, !tbaa !133
  %contents = getelementptr inbounds %struct.gx_path_segments_s, %struct.gx_path_segments_s* %2, i32 0, i32 1
  %subpath_first = getelementptr inbounds %struct.psc_, %struct.psc_* %contents, i32 0, i32 0
  %3 = load %struct.subpath_s*, %struct.subpath_s** %subpath_first, align 8, !tbaa !134
  store %struct.subpath_s* %3, %struct.subpath_s** %psub, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %count.addr, align 4, !tbaa !5
  %cmp = icmp ne i32 %4, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %last = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %5, i32 0, i32 5
  %6 = load %struct.segment_s*, %struct.segment_s** %last, align 8, !tbaa !138
  %7 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %closer = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %7, i32 0, i32 7
  %8 = bitcast %struct.line_close_segment* %closer to %struct.segment_s*
  %cmp1 = icmp eq %struct.segment_s* %6, %8
  br i1 %cmp1, label %if.then, label %if.end.10

if.then:                                          ; preds = %for.body
  %9 = bitcast %struct.segment_s** %prev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %closer2 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %10, i32 0, i32 7
  %prev3 = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %closer2, i32 0, i32 0
  %11 = load %struct.segment_s*, %struct.segment_s** %prev3, align 8, !tbaa !157
  store %struct.segment_s* %11, %struct.segment_s** %prev, align 8, !tbaa !1
  %12 = bitcast %struct.segment_s** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %13 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %closer4 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %13, i32 0, i32 7
  %next5 = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %closer4, i32 0, i32 1
  %14 = load %struct.segment_s*, %struct.segment_s** %next5, align 8, !tbaa !158
  store %struct.segment_s* %14, %struct.segment_s** %next, align 8, !tbaa !1
  %15 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !1
  %16 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %next6 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %16, i32 0, i32 1
  store %struct.segment_s* %15, %struct.segment_s** %next6, align 8, !tbaa !144
  %17 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !1
  %tobool = icmp ne %struct.segment_s* %17, null
  br i1 %tobool, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %if.then
  %18 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %19 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !1
  %prev8 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %19, i32 0, i32 0
  store %struct.segment_s* %18, %struct.segment_s** %prev8, align 8, !tbaa !147
  br label %if.end

if.end:                                           ; preds = %if.then.7, %if.then
  %20 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !1
  %21 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %last9 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %21, i32 0, i32 5
  store %struct.segment_s* %20, %struct.segment_s** %last9, align 8, !tbaa !138
  %22 = load i32, i32* %count.addr, align 4, !tbaa !5
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %count.addr, align 4, !tbaa !5
  %23 = bitcast %struct.segment_s** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #1
  %24 = bitcast %struct.segment_s** %prev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  br label %if.end.10

if.end.10:                                        ; preds = %if.end, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.10
  %25 = load %struct.subpath_s*, %struct.subpath_s** %psub, align 8, !tbaa !1
  %last11 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %25, i32 0, i32 5
  %26 = load %struct.segment_s*, %struct.segment_s** %last11, align 8, !tbaa !138
  %next12 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %26, i32 0, i32 1
  %27 = load %struct.segment_s*, %struct.segment_s** %next12, align 8, !tbaa !144
  %28 = bitcast %struct.segment_s* %27 to %struct.subpath_s*
  store %struct.subpath_s* %28, %struct.subpath_s** %psub, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = bitcast %struct.subpath_s** %psub to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @free_line_list(%struct.line_list_s* %ll) #0 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %mem = alloca %struct.gs_memory_s*, align 8
  %alp = alloca %struct.active_line_s*, align 8
  %next = alloca %struct.active_line_s*, align 8
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 0
  %2 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !117
  store %struct.gs_memory_s* %2, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %3 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %4 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %active_area = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %4, i32 0, i32 1
  %5 = load %struct.active_line_s*, %struct.active_line_s** %active_area, align 8, !tbaa !118
  store %struct.active_line_s* %5, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp = icmp ne %struct.active_line_s* %5, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = bitcast %struct.active_line_s** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %alloc_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %7, i32 0, i32 16
  %8 = load %struct.active_line_s*, %struct.active_line_s** %alloc_next, align 8, !tbaa !159
  store %struct.active_line_s* %8, %struct.active_line_s** %next, align 8, !tbaa !1
  %9 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %9, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 2
  %10 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !114
  %11 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem, align 8, !tbaa !1
  %12 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %13 = bitcast %struct.active_line_s* %12 to i8*
  call void %10(%struct.gs_memory_s* %11, i8* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0)) #5
  %14 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %15 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %active_area1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %15, i32 0, i32 1
  store %struct.active_line_s* %14, %struct.active_line_s** %active_area1, align 8, !tbaa !118
  %16 = bitcast %struct.active_line_s** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %17 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @free_all_margins(%struct.line_list_s* %17) #5
  %18 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  %19 = bitcast %struct.gs_memory_s** %mem to i8*
  call void @llvm.lifetime.end(i64 8, i8* %19) #1
  ret void
}

declare void @gx_path_free(%struct.gx_path_s*, i8*) #2

declare i32 @san_open(%struct.gx_device_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @scan_contour(%struct.line_list_s* %ll, %struct.contour_cursor_s* %q) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %q.addr = alloca %struct.contour_cursor_s*, align 8
  %p = alloca %struct.contour_cursor_s, align 8
  %fi = alloca %struct.gx_flattened_iterator_s, align 4
  %save_fi = alloca %struct.gx_flattened_iterator_s, align 4
  %pseg = alloca %struct.segment_s*, align 8
  %code = alloca i32, align 4
  %only_horizontal = alloca i32, align 4
  %saved = alloca i32, align 4
  %fo = alloca %struct.fill_options_s*, align 8
  %save_q = alloca %struct.contour_cursor_s, align 8
  %cleanup.dest.slot = alloca i32
  %fi1 = alloca %struct.gx_flattened_iterator_s*, align 8
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.contour_cursor_s* %q, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %0 = bitcast %struct.contour_cursor_s* %p to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #1
  %1 = bitcast %struct.gx_flattened_iterator_s* %fi to i8*
  call void @llvm.lifetime.start(i64 136, i8* %1) #1
  %2 = bitcast %struct.gx_flattened_iterator_s* %save_fi to i8*
  call void @llvm.lifetime.start(i64 136, i8* %2) #1
  %3 = bitcast %struct.segment_s** %pseg to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %only_horizontal to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  store i32 1, i32* %only_horizontal, align 4, !tbaa !5
  %6 = bitcast i32* %saved to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %saved, align 4, !tbaa !5
  %7 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %8, i32 0, i32 19
  %9 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %9, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %10 = bitcast %struct.contour_cursor_s* %save_q to i8*
  call void @llvm.lifetime.start(i64 64, i8* %10) #1
  %11 = bitcast %struct.contour_cursor_s* %save_q to i8*
  %call = call i8* @memset(i8* %11, i32 0, i64 64) #6
  %monotonic_x = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 9
  store i32 0, i32* %monotonic_x, align 4, !tbaa !135
  %fi2 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  store %struct.gx_flattened_iterator_s* %fi, %struct.gx_flattened_iterator_s** %fi2, align 8, !tbaa !141
  %dir = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %save_q, i32 0, i32 7
  store i32 2, i32* %dir, align 4, !tbaa !160
  %12 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %12, i32 0, i32 17
  store i32 0, i32* %main_dir, align 4, !tbaa !161
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %13 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %14 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %call3 = call i32 @init_contour_cursor(%struct.line_list_s* %13, %struct.contour_cursor_s* %14) #5
  store i32 %call3, i32* %code, align 4, !tbaa !5
  %15 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %15, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.cond
  %16 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.cond
  br label %for.cond.4

for.cond.4:                                       ; preds = %cond.end.23, %if.end
  %17 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi5 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %17, i32 0, i32 4
  %18 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi5, align 8, !tbaa !141
  %call6 = call i32 @gx_flattened_iterator__next(%struct.gx_flattened_iterator_s* %18) #5
  store i32 %call6, i32* %code, align 4, !tbaa !5
  %19 = load i32, i32* %code, align 4, !tbaa !5
  %cmp7 = icmp slt i32 %19, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %for.cond.4
  %20 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %for.cond.4
  %21 = load i32, i32* %code, align 4, !tbaa !5
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %if.end.9
  br label %for.end

if.end.11:                                        ; preds = %if.end.9
  %22 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %first_flattened = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %22, i32 0, i32 6
  store i32 0, i32* %first_flattened, align 4, !tbaa !162
  %23 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %24 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi12 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %24, i32 0, i32 4
  %25 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi12, align 8, !tbaa !141
  %ly0 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %25, i32 0, i32 31
  %26 = load i32, i32* %ly0, align 4, !tbaa !163
  %27 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi13 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %27, i32 0, i32 4
  %28 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi13, align 8, !tbaa !141
  %ly1 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %28, i32 0, i32 33
  %29 = load i32, i32* %ly1, align 4, !tbaa !164
  %call14 = call i32 @compute_dir(%struct.fill_options_s* %23, i32 %26, i32 %29) #5
  %30 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir15 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %30, i32 0, i32 7
  store i32 %call14, i32* %dir15, align 4, !tbaa !160
  %31 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir16 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %31, i32 0, i32 7
  %32 = load i32, i32* %dir16, align 4, !tbaa !160
  %cmp17 = icmp eq i32 %32, -1
  br i1 %cmp17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.11
  br label %cond.end.23

cond.false:                                       ; preds = %if.end.11
  %33 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir18 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %33, i32 0, i32 7
  %34 = load i32, i32* %dir18, align 4, !tbaa !160
  %cmp19 = icmp eq i32 %34, 1
  br i1 %cmp19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %cond.false
  br label %cond.end

cond.false.21:                                    ; preds = %cond.false
  %35 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir22 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %35, i32 0, i32 17
  %36 = load i32, i32* %main_dir22, align 4, !tbaa !161
  br label %cond.end

cond.end:                                         ; preds = %cond.false.21, %cond.true.20
  %cond = phi i32 [ 1, %cond.true.20 ], [ %36, %cond.false.21 ]
  br label %cond.end.23

cond.end.23:                                      ; preds = %cond.end, %cond.true
  %cond24 = phi i32 [ -1, %cond.true ], [ %cond, %cond.end ]
  %37 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir25 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %37, i32 0, i32 17
  store i32 %cond24, i32* %main_dir25, align 4, !tbaa !161
  br label %for.cond.4

for.end:                                          ; preds = %if.then.10
  %38 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %39 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi26 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %39, i32 0, i32 4
  %40 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi26, align 8, !tbaa !141
  %ly027 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %40, i32 0, i32 31
  %41 = load i32, i32* %ly027, align 4, !tbaa !163
  %42 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi28 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %42, i32 0, i32 4
  %43 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi28, align 8, !tbaa !141
  %ly129 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %43, i32 0, i32 33
  %44 = load i32, i32* %ly129, align 4, !tbaa !164
  %call30 = call i32 @compute_dir(%struct.fill_options_s* %38, i32 %41, i32 %44) #5
  %45 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir31 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %45, i32 0, i32 7
  store i32 %call30, i32* %dir31, align 4, !tbaa !160
  %46 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %46, i32 0, i32 5
  store i32 0, i32* %more_flattened, align 4, !tbaa !165
  %47 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir32 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %47, i32 0, i32 7
  %48 = load i32, i32* %dir32, align 4, !tbaa !160
  %cmp33 = icmp eq i32 %48, -1
  br i1 %cmp33, label %cond.true.34, label %cond.false.35

cond.true.34:                                     ; preds = %for.end
  br label %cond.end.43

cond.false.35:                                    ; preds = %for.end
  %49 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir36 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %49, i32 0, i32 7
  %50 = load i32, i32* %dir36, align 4, !tbaa !160
  %cmp37 = icmp eq i32 %50, 1
  br i1 %cmp37, label %cond.true.38, label %cond.false.39

cond.true.38:                                     ; preds = %cond.false.35
  br label %cond.end.41

cond.false.39:                                    ; preds = %cond.false.35
  %51 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir40 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %51, i32 0, i32 17
  %52 = load i32, i32* %main_dir40, align 4, !tbaa !161
  br label %cond.end.41

cond.end.41:                                      ; preds = %cond.false.39, %cond.true.38
  %cond42 = phi i32 [ 1, %cond.true.38 ], [ %52, %cond.false.39 ]
  br label %cond.end.43

cond.end.43:                                      ; preds = %cond.end.41, %cond.true.34
  %cond44 = phi i32 [ -1, %cond.true.34 ], [ %cond42, %cond.end.41 ]
  %53 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir45 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %53, i32 0, i32 17
  store i32 %cond44, i32* %main_dir45, align 4, !tbaa !161
  %54 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir46 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %54, i32 0, i32 17
  %55 = load i32, i32* %main_dir46, align 4, !tbaa !161
  %cmp47 = icmp ne i32 %55, 0
  br i1 %cmp47, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %cond.end.43
  store i32 0, i32* %only_horizontal, align 4, !tbaa !5
  br label %for.end.64

if.end.49:                                        ; preds = %cond.end.43
  %56 = load i32, i32* %saved, align 4, !tbaa !5
  %tobool50 = icmp ne i32 %56, 0
  br i1 %tobool50, label %if.end.55, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.49
  %57 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir51 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %57, i32 0, i32 7
  %58 = load i32, i32* %dir51, align 4, !tbaa !160
  %cmp52 = icmp ne i32 %58, 2
  br i1 %cmp52, label %if.then.53, label %if.end.55

if.then.53:                                       ; preds = %land.lhs.true
  %59 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %60 = bitcast %struct.contour_cursor_s* %save_q to i8*
  %61 = bitcast %struct.contour_cursor_s* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 64, i32 8, i1 false), !tbaa.struct !166
  %62 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi54 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %62, i32 0, i32 4
  %63 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi54, align 8, !tbaa !141
  %64 = bitcast %struct.gx_flattened_iterator_s* %save_fi to i8*
  %65 = bitcast %struct.gx_flattened_iterator_s* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 136, i32 4, i1 false), !tbaa.struct !167
  store i32 1, i32* %saved, align 4, !tbaa !5
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.53, %land.lhs.true, %if.end.49
  %66 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %66, i32 0, i32 0
  %67 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !153
  %68 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pfirst = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %68, i32 0, i32 2
  %69 = load %struct.segment_s*, %struct.segment_s** %pfirst, align 8, !tbaa !155
  %cmp56 = icmp eq %struct.segment_s* %67, %69
  br i1 %cmp56, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.end.55
  br label %for.end.64

if.end.58:                                        ; preds = %if.end.55
  br label %for.inc

for.inc:                                          ; preds = %if.end.58
  %70 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev59 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %70, i32 0, i32 0
  %71 = load %struct.segment_s*, %struct.segment_s** %prev59, align 8, !tbaa !153
  %72 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg60 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %72, i32 0, i32 1
  store %struct.segment_s* %71, %struct.segment_s** %pseg60, align 8, !tbaa !154
  %73 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev61 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %73, i32 0, i32 0
  %74 = load %struct.segment_s*, %struct.segment_s** %prev61, align 8, !tbaa !153
  %prev62 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %74, i32 0, i32 0
  %75 = load %struct.segment_s*, %struct.segment_s** %prev62, align 8, !tbaa !147
  %76 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev63 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %76, i32 0, i32 0
  store %struct.segment_s* %75, %struct.segment_s** %prev63, align 8, !tbaa !153
  br label %for.cond

for.end.64:                                       ; preds = %if.then.57, %if.then.48
  %77 = load i32, i32* %saved, align 4, !tbaa !5
  %tobool65 = icmp ne i32 %77, 0
  br i1 %tobool65, label %if.then.66, label %if.end.68

if.then.66:                                       ; preds = %for.end.64
  %78 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %79 = bitcast %struct.contour_cursor_s* %78 to i8*
  %80 = bitcast %struct.contour_cursor_s* %save_q to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 64, i32 8, i1 false), !tbaa.struct !166
  %81 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi67 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %81, i32 0, i32 4
  %82 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi67, align 8, !tbaa !141
  %83 = bitcast %struct.gx_flattened_iterator_s* %82 to i8*
  %84 = bitcast %struct.gx_flattened_iterator_s* %save_fi to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 136, i32 4, i1 false), !tbaa.struct !167
  br label %if.end.68

if.end.68:                                        ; preds = %if.then.66, %for.end.64
  %85 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pfirst69 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %85, i32 0, i32 2
  %86 = load %struct.segment_s*, %struct.segment_s** %pfirst69, align 8, !tbaa !155
  store %struct.segment_s* %86, %struct.segment_s** %pseg, align 8, !tbaa !1
  br label %for.cond.70

for.cond.70:                                      ; preds = %for.inc.342, %if.end.68
  %87 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %88 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %plast = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %88, i32 0, i32 3
  %89 = load %struct.segment_s*, %struct.segment_s** %plast, align 8, !tbaa !156
  %cmp71 = icmp ne %struct.segment_s* %87, %89
  br i1 %cmp71, label %for.body, label %for.end.344

for.body:                                         ; preds = %for.cond.70
  %90 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %prev72 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  store %struct.segment_s* %90, %struct.segment_s** %prev72, align 8, !tbaa !153
  %91 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.segment_s, %struct.segment_s* %91, i32 0, i32 1
  %92 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !144
  %pseg73 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  store %struct.segment_s* %92, %struct.segment_s** %pseg73, align 8, !tbaa !154
  %93 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pseudo_rasterization = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %93, i32 0, i32 0
  %94 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !89
  %tobool74 = icmp ne i32 %94, 0
  br i1 %tobool74, label %lor.lhs.false, label %if.then.93

lor.lhs.false:                                    ; preds = %for.body
  %95 = load i32, i32* %only_horizontal, align 4, !tbaa !5
  %tobool75 = icmp ne i32 %95, 0
  br i1 %tobool75, label %if.then.93, label %lor.lhs.false.76

lor.lhs.false.76:                                 ; preds = %lor.lhs.false
  %prev77 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %96 = load %struct.segment_s*, %struct.segment_s** %prev77, align 8, !tbaa !153
  %pt = getelementptr inbounds %struct.segment_s, %struct.segment_s* %96, i32 0, i32 4
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt, i32 0, i32 0
  %97 = load i32, i32* %x, align 4, !tbaa !151
  %pseg78 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %98 = load %struct.segment_s*, %struct.segment_s** %pseg78, align 8, !tbaa !154
  %pt79 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %98, i32 0, i32 4
  %x80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt79, i32 0, i32 0
  %99 = load i32, i32* %x80, align 4, !tbaa !151
  %cmp81 = icmp ne i32 %97, %99
  br i1 %cmp81, label %if.then.93, label %lor.lhs.false.82

lor.lhs.false.82:                                 ; preds = %lor.lhs.false.76
  %prev83 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %100 = load %struct.segment_s*, %struct.segment_s** %prev83, align 8, !tbaa !153
  %pt84 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %100, i32 0, i32 4
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt84, i32 0, i32 1
  %101 = load i32, i32* %y, align 4, !tbaa !152
  %pseg85 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %102 = load %struct.segment_s*, %struct.segment_s** %pseg85, align 8, !tbaa !154
  %pt86 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %102, i32 0, i32 4
  %y87 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt86, i32 0, i32 1
  %103 = load i32, i32* %y87, align 4, !tbaa !152
  %cmp88 = icmp ne i32 %101, %103
  br i1 %cmp88, label %if.then.93, label %lor.lhs.false.89

lor.lhs.false.89:                                 ; preds = %lor.lhs.false.82
  %pseg90 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %104 = load %struct.segment_s*, %struct.segment_s** %pseg90, align 8, !tbaa !154
  %type = getelementptr inbounds %struct.segment_s, %struct.segment_s* %104, i32 0, i32 2
  %105 = load i16, i16* %type, align 2, !tbaa !142
  %conv = zext i16 %105 to i32
  %cmp91 = icmp eq i32 %conv, 3
  br i1 %cmp91, label %if.then.93, label %if.end.341

if.then.93:                                       ; preds = %lor.lhs.false.89, %lor.lhs.false.82, %lor.lhs.false.76, %lor.lhs.false, %for.body
  %106 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call94 = call i32 @init_contour_cursor(%struct.line_list_s* %106, %struct.contour_cursor_s* %p) #5
  store i32 %call94, i32* %code, align 4, !tbaa !5
  %107 = load i32, i32* %code, align 4, !tbaa !5
  %cmp95 = icmp slt i32 %107, 0
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.then.93
  %108 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %108, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.98:                                        ; preds = %if.then.93
  br label %do.body

do.body:                                          ; preds = %land.end, %if.end.98
  %fi99 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %109 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi99, align 8, !tbaa !141
  %call100 = call i32 @gx_flattened_iterator__next(%struct.gx_flattened_iterator_s* %109) #5
  store i32 %call100, i32* %code, align 4, !tbaa !5
  %110 = load i32, i32* %code, align 4, !tbaa !5
  %cmp101 = icmp slt i32 %110, 0
  br i1 %cmp101, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %do.body
  %111 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %111, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.104:                                       ; preds = %do.body
  %112 = load i32, i32* %code, align 4, !tbaa !5
  %more_flattened105 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 5
  store i32 %112, i32* %more_flattened105, align 4, !tbaa !165
  %113 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fi106 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %114 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi106, align 8, !tbaa !141
  %ly0107 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %114, i32 0, i32 31
  %115 = load i32, i32* %ly0107, align 4, !tbaa !163
  %fi108 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %116 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi108, align 8, !tbaa !141
  %ly1109 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %116, i32 0, i32 33
  %117 = load i32, i32* %ly1109, align 4, !tbaa !164
  %call110 = call i32 @compute_dir(%struct.fill_options_s* %113, i32 %115, i32 %117) #5
  %dir111 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  store i32 %call110, i32* %dir111, align 4, !tbaa !160
  br label %do.cond

do.cond:                                          ; preds = %if.end.104
  %more_flattened112 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 5
  %118 = load i32, i32* %more_flattened112, align 4, !tbaa !165
  %tobool113 = icmp ne i32 %118, 0
  br i1 %tobool113, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.cond
  %dir114 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %119 = load i32, i32* %dir114, align 4, !tbaa !160
  %cmp115 = icmp eq i32 %119, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %120 = phi i1 [ false, %do.cond ], [ %cmp115, %land.rhs ]
  br i1 %120, label %do.body, label %do.end

do.end:                                           ; preds = %land.end
  %fi117 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %121 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi117, align 8, !tbaa !141
  %ly0118 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %121, i32 0, i32 31
  %122 = load i32, i32* %ly0118, align 4, !tbaa !163
  %123 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %123, i32 0, i32 2
  %124 = load i32, i32* %ymax, align 4, !tbaa !95
  %cmp119 = icmp sgt i32 %122, %124
  br i1 %cmp119, label %land.lhs.true.121, label %if.end.130

land.lhs.true.121:                                ; preds = %do.end
  %125 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %125, i32 0, i32 18
  %126 = load i32, i32* %y_break, align 4, !tbaa !137
  %fi122 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %127 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi122, align 8, !tbaa !141
  %ly0123 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %127, i32 0, i32 31
  %128 = load i32, i32* %ly0123, align 4, !tbaa !163
  %cmp124 = icmp sgt i32 %126, %128
  br i1 %cmp124, label %if.then.126, label %if.end.130

if.then.126:                                      ; preds = %land.lhs.true.121
  %fi127 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %129 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi127, align 8, !tbaa !141
  %ly0128 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %129, i32 0, i32 31
  %130 = load i32, i32* %ly0128, align 4, !tbaa !163
  %131 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break129 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %131, i32 0, i32 18
  store i32 %130, i32* %y_break129, align 4, !tbaa !137
  br label %if.end.130

if.end.130:                                       ; preds = %if.then.126, %land.lhs.true.121, %do.end
  %fi131 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %132 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi131, align 8, !tbaa !141
  %ly1132 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %132, i32 0, i32 33
  %133 = load i32, i32* %ly1132, align 4, !tbaa !164
  %134 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymax133 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %134, i32 0, i32 2
  %135 = load i32, i32* %ymax133, align 4, !tbaa !95
  %cmp134 = icmp sgt i32 %133, %135
  br i1 %cmp134, label %land.lhs.true.136, label %if.end.146

land.lhs.true.136:                                ; preds = %if.end.130
  %136 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break137 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %136, i32 0, i32 18
  %137 = load i32, i32* %y_break137, align 4, !tbaa !137
  %fi138 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %138 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi138, align 8, !tbaa !141
  %ly1139 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %138, i32 0, i32 33
  %139 = load i32, i32* %ly1139, align 4, !tbaa !164
  %cmp140 = icmp sgt i32 %137, %139
  br i1 %cmp140, label %if.then.142, label %if.end.146

if.then.142:                                      ; preds = %land.lhs.true.136
  %fi143 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %140 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi143, align 8, !tbaa !141
  %ly1144 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %140, i32 0, i32 33
  %141 = load i32, i32* %ly1144, align 4, !tbaa !164
  %142 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break145 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %142, i32 0, i32 18
  store i32 %141, i32* %y_break145, align 4, !tbaa !137
  br label %if.end.146

if.end.146:                                       ; preds = %if.then.142, %land.lhs.true.136, %if.end.130
  %monotonic_y = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 8
  %143 = load i32, i32* %monotonic_y, align 4, !tbaa !168
  %tobool147 = icmp ne i32 %143, 0
  br i1 %tobool147, label %land.lhs.true.148, label %if.end.186

land.lhs.true.148:                                ; preds = %if.end.146
  %dir149 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %144 = load i32, i32* %dir149, align 4, !tbaa !160
  %cmp150 = icmp eq i32 %144, 0
  br i1 %cmp150, label %land.lhs.true.152, label %if.end.186

land.lhs.true.152:                                ; preds = %land.lhs.true.148
  %145 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pseudo_rasterization153 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %145, i32 0, i32 0
  %146 = load i32, i32* %pseudo_rasterization153, align 4, !tbaa !89
  %tobool154 = icmp ne i32 %146, 0
  br i1 %tobool154, label %if.end.186, label %land.lhs.true.155

land.lhs.true.155:                                ; preds = %land.lhs.true.152
  %147 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %147, i32 0, i32 10
  %148 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %149 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %149, i32 0, i32 11
  %150 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %add = add nsw i32 %148, %150
  %conv156 = sext i32 %add to i64
  %cmp157 = icmp sge i64 %conv156, 255
  br i1 %cmp157, label %if.then.178, label %lor.lhs.false.159

lor.lhs.false.159:                                ; preds = %land.lhs.true.155
  %pseg160 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %151 = load %struct.segment_s*, %struct.segment_s** %pseg160, align 8, !tbaa !154
  %pt161 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %151, i32 0, i32 4
  %y162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt161, i32 0, i32 1
  %152 = load i32, i32* %y162, align 4, !tbaa !152
  %153 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below163 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %153, i32 0, i32 10
  %154 = load i32, i32* %adjust_below163, align 4, !tbaa !86
  %sub = sub nsw i32 %152, %154
  %conv164 = sext i32 %sub to i64
  %add165 = add nsw i64 %conv164, 127
  %shr = ashr i64 %add165, 8
  %conv166 = trunc i64 %shr to i32
  %pseg167 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %155 = load %struct.segment_s*, %struct.segment_s** %pseg167, align 8, !tbaa !154
  %pt168 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %155, i32 0, i32 4
  %y169 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt168, i32 0, i32 1
  %156 = load i32, i32* %y169, align 4, !tbaa !152
  %157 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above170 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %157, i32 0, i32 11
  %158 = load i32, i32* %adjust_above170, align 4, !tbaa !87
  %add171 = add nsw i32 %156, %158
  %conv172 = sext i32 %add171 to i64
  %add173 = add nsw i64 %conv172, 127
  %shr174 = ashr i64 %add173, 8
  %conv175 = trunc i64 %shr174 to i32
  %cmp176 = icmp slt i32 %conv166, %conv175
  br i1 %cmp176, label %if.then.178, label %if.end.186

if.then.178:                                      ; preds = %lor.lhs.false.159, %land.lhs.true.155
  %prev179 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %159 = load %struct.segment_s*, %struct.segment_s** %prev179, align 8, !tbaa !153
  %pseg180 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %160 = load %struct.segment_s*, %struct.segment_s** %pseg180, align 8, !tbaa !154
  %161 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call181 = call i32 @add_y_line(%struct.segment_s* %159, %struct.segment_s* %160, i32 0, %struct.line_list_s* %161) #5
  store i32 %call181, i32* %code, align 4, !tbaa !5
  %162 = load i32, i32* %code, align 4, !tbaa !5
  %cmp182 = icmp slt i32 %162, 0
  br i1 %cmp182, label %if.then.184, label %if.end.185

if.then.184:                                      ; preds = %if.then.178
  %163 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %163, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.185:                                       ; preds = %if.then.178
  br label %if.end.186

if.end.186:                                       ; preds = %if.end.185, %lor.lhs.false.159, %land.lhs.true.152, %land.lhs.true.148, %if.end.146
  %monotonic_y187 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 8
  %164 = load i32, i32* %monotonic_y187, align 4, !tbaa !168
  %tobool188 = icmp ne i32 %164, 0
  br i1 %tobool188, label %land.lhs.true.189, label %if.end.206

land.lhs.true.189:                                ; preds = %if.end.186
  %dir190 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %165 = load i32, i32* %dir190, align 4, !tbaa !160
  %cmp191 = icmp eq i32 %165, 0
  br i1 %cmp191, label %land.lhs.true.193, label %if.end.206

land.lhs.true.193:                                ; preds = %land.lhs.true.189
  %166 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pseudo_rasterization194 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %166, i32 0, i32 0
  %167 = load i32, i32* %pseudo_rasterization194, align 4, !tbaa !89
  %tobool195 = icmp ne i32 %167, 0
  br i1 %tobool195, label %land.lhs.true.196, label %if.end.206

land.lhs.true.196:                                ; preds = %land.lhs.true.193
  %168 = load i32, i32* %only_horizontal, align 4, !tbaa !5
  %tobool197 = icmp ne i32 %168, 0
  br i1 %tobool197, label %if.then.198, label %if.end.206

if.then.198:                                      ; preds = %land.lhs.true.196
  %prev199 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %169 = load %struct.segment_s*, %struct.segment_s** %prev199, align 8, !tbaa !153
  %pseg200 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %170 = load %struct.segment_s*, %struct.segment_s** %pseg200, align 8, !tbaa !154
  %171 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call201 = call i32 @add_y_line(%struct.segment_s* %169, %struct.segment_s* %170, i32 0, %struct.line_list_s* %171) #5
  store i32 %call201, i32* %code, align 4, !tbaa !5
  %172 = load i32, i32* %code, align 4, !tbaa !5
  %cmp202 = icmp slt i32 %172, 0
  br i1 %cmp202, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.then.198
  %173 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %173, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.205:                                       ; preds = %if.then.198
  br label %if.end.206

if.end.206:                                       ; preds = %if.end.205, %land.lhs.true.196, %land.lhs.true.193, %land.lhs.true.189, %if.end.186
  %fi207 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %174 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi207, align 8, !tbaa !141
  %ly0208 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %174, i32 0, i32 31
  %175 = load i32, i32* %ly0208, align 4, !tbaa !163
  %176 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %176, i32 0, i32 1
  %177 = load i32, i32* %ymin, align 4, !tbaa !94
  %cmp209 = icmp sge i32 %175, %177
  br i1 %cmp209, label %land.lhs.true.211, label %if.end.225

land.lhs.true.211:                                ; preds = %if.end.206
  %dir212 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %178 = load i32, i32* %dir212, align 4, !tbaa !160
  %cmp213 = icmp eq i32 %178, 1
  br i1 %cmp213, label %land.lhs.true.215, label %if.end.225

land.lhs.true.215:                                ; preds = %land.lhs.true.211
  %179 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir216 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %179, i32 0, i32 17
  %180 = load i32, i32* %main_dir216, align 4, !tbaa !161
  %cmp217 = icmp eq i32 %180, -1
  br i1 %cmp217, label %if.then.219, label %if.end.225

if.then.219:                                      ; preds = %land.lhs.true.215
  %181 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %182 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %call220 = call i32 @start_al_pair(%struct.line_list_s* %181, %struct.contour_cursor_s* %182, %struct.contour_cursor_s* %p) #5
  store i32 %call220, i32* %code, align 4, !tbaa !5
  %183 = load i32, i32* %code, align 4, !tbaa !5
  %cmp221 = icmp slt i32 %183, 0
  br i1 %cmp221, label %if.then.223, label %if.end.224

if.then.223:                                      ; preds = %if.then.219
  %184 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %184, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.224:                                       ; preds = %if.then.219
  br label %if.end.225

if.end.225:                                       ; preds = %if.end.224, %land.lhs.true.215, %land.lhs.true.211, %if.end.206
  %fi226 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %185 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi226, align 8, !tbaa !141
  %ly0227 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %185, i32 0, i32 31
  %186 = load i32, i32* %ly0227, align 4, !tbaa !163
  %187 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin228 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %187, i32 0, i32 1
  %188 = load i32, i32* %ymin228, align 4, !tbaa !94
  %cmp229 = icmp slt i32 %186, %188
  br i1 %cmp229, label %land.lhs.true.231, label %if.end.255

land.lhs.true.231:                                ; preds = %if.end.225
  %fi232 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %189 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi232, align 8, !tbaa !141
  %ly1233 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %189, i32 0, i32 33
  %190 = load i32, i32* %ly1233, align 4, !tbaa !164
  %191 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin234 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %191, i32 0, i32 1
  %192 = load i32, i32* %ymin234, align 4, !tbaa !94
  %cmp235 = icmp sge i32 %190, %192
  br i1 %cmp235, label %if.then.237, label %if.end.255

if.then.237:                                      ; preds = %land.lhs.true.231
  %monotonic_y238 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 8
  %193 = load i32, i32* %monotonic_y238, align 4, !tbaa !168
  %tobool239 = icmp ne i32 %193, 0
  br i1 %tobool239, label %if.then.240, label %if.else

if.then.240:                                      ; preds = %if.then.237
  %prev241 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %194 = load %struct.segment_s*, %struct.segment_s** %prev241, align 8, !tbaa !153
  %pseg242 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %195 = load %struct.segment_s*, %struct.segment_s** %pseg242, align 8, !tbaa !154
  %196 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call243 = call i32 @add_y_line(%struct.segment_s* %194, %struct.segment_s* %195, i32 1, %struct.line_list_s* %196) #5
  store i32 %call243, i32* %code, align 4, !tbaa !5
  br label %if.end.250

if.else:                                          ; preds = %if.then.237
  %197 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %prev244 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %198 = load %struct.segment_s*, %struct.segment_s** %prev244, align 8, !tbaa !153
  %pseg245 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %199 = load %struct.segment_s*, %struct.segment_s** %pseg245, align 8, !tbaa !154
  %fi246 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %200 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi246, align 8, !tbaa !141
  %more_flattened247 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 5
  %201 = load i32, i32* %more_flattened247, align 4, !tbaa !165
  %monotonic_x248 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 9
  %202 = load i32, i32* %monotonic_x248, align 4, !tbaa !135
  %call249 = call i32 @add_y_curve_part(%struct.line_list_s* %197, %struct.segment_s* %198, %struct.segment_s* %199, i32 1, %struct.gx_flattened_iterator_s* %200, i32 %201, i32 0, i32 %202) #5
  store i32 %call249, i32* %code, align 4, !tbaa !5
  br label %if.end.250

if.end.250:                                       ; preds = %if.else, %if.then.240
  %203 = load i32, i32* %code, align 4, !tbaa !5
  %cmp251 = icmp slt i32 %203, 0
  br i1 %cmp251, label %if.then.253, label %if.end.254

if.then.253:                                      ; preds = %if.end.250
  %204 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %204, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.254:                                       ; preds = %if.end.250
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.254, %land.lhs.true.231, %if.end.225
  %fi256 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %205 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi256, align 8, !tbaa !141
  %ly0257 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %205, i32 0, i32 31
  %206 = load i32, i32* %ly0257, align 4, !tbaa !163
  %207 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin258 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %207, i32 0, i32 1
  %208 = load i32, i32* %ymin258, align 4, !tbaa !94
  %cmp259 = icmp sge i32 %206, %208
  br i1 %cmp259, label %land.lhs.true.261, label %if.end.287

land.lhs.true.261:                                ; preds = %if.end.255
  %fi262 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %209 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi262, align 8, !tbaa !141
  %ly1263 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %209, i32 0, i32 33
  %210 = load i32, i32* %ly1263, align 4, !tbaa !164
  %211 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin264 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %211, i32 0, i32 1
  %212 = load i32, i32* %ymin264, align 4, !tbaa !94
  %cmp265 = icmp slt i32 %210, %212
  br i1 %cmp265, label %if.then.267, label %if.end.287

if.then.267:                                      ; preds = %land.lhs.true.261
  %monotonic_y268 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 8
  %213 = load i32, i32* %monotonic_y268, align 4, !tbaa !168
  %tobool269 = icmp ne i32 %213, 0
  br i1 %tobool269, label %if.then.270, label %if.else.274

if.then.270:                                      ; preds = %if.then.267
  %prev271 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %214 = load %struct.segment_s*, %struct.segment_s** %prev271, align 8, !tbaa !153
  %pseg272 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %215 = load %struct.segment_s*, %struct.segment_s** %pseg272, align 8, !tbaa !154
  %216 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call273 = call i32 @add_y_line(%struct.segment_s* %214, %struct.segment_s* %215, i32 -1, %struct.line_list_s* %216) #5
  store i32 %call273, i32* %code, align 4, !tbaa !5
  br label %if.end.282

if.else.274:                                      ; preds = %if.then.267
  %217 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %prev275 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %218 = load %struct.segment_s*, %struct.segment_s** %prev275, align 8, !tbaa !153
  %pseg276 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %219 = load %struct.segment_s*, %struct.segment_s** %pseg276, align 8, !tbaa !154
  %fi277 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %220 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi277, align 8, !tbaa !141
  %first_flattened278 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 6
  %221 = load i32, i32* %first_flattened278, align 4, !tbaa !162
  %tobool279 = icmp ne i32 %221, 0
  %lnot = xor i1 %tobool279, true
  %lnot.ext = zext i1 %lnot to i32
  %monotonic_x280 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 9
  %222 = load i32, i32* %monotonic_x280, align 4, !tbaa !135
  %call281 = call i32 @add_y_curve_part(%struct.line_list_s* %217, %struct.segment_s* %218, %struct.segment_s* %219, i32 -1, %struct.gx_flattened_iterator_s* %220, i32 %lnot.ext, i32 0, i32 %222) #5
  store i32 %call281, i32* %code, align 4, !tbaa !5
  br label %if.end.282

if.end.282:                                       ; preds = %if.else.274, %if.then.270
  %223 = load i32, i32* %code, align 4, !tbaa !5
  %cmp283 = icmp slt i32 %223, 0
  br i1 %cmp283, label %if.then.285, label %if.end.286

if.then.285:                                      ; preds = %if.end.282
  %224 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %224, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.286:                                       ; preds = %if.end.282
  br label %if.end.287

if.end.287:                                       ; preds = %if.end.286, %land.lhs.true.261, %if.end.255
  %dir288 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %225 = load i32, i32* %dir288, align 4, !tbaa !160
  %cmp289 = icmp eq i32 %225, -1
  br i1 %cmp289, label %cond.true.291, label %cond.false.292

cond.true.291:                                    ; preds = %if.end.287
  br label %cond.end.301

cond.false.292:                                   ; preds = %if.end.287
  %dir293 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %226 = load i32, i32* %dir293, align 4, !tbaa !160
  %cmp294 = icmp eq i32 %226, 1
  br i1 %cmp294, label %cond.true.296, label %cond.false.297

cond.true.296:                                    ; preds = %cond.false.292
  br label %cond.end.299

cond.false.297:                                   ; preds = %cond.false.292
  %227 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir298 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %227, i32 0, i32 17
  %228 = load i32, i32* %main_dir298, align 4, !tbaa !161
  br label %cond.end.299

cond.end.299:                                     ; preds = %cond.false.297, %cond.true.296
  %cond300 = phi i32 [ 1, %cond.true.296 ], [ %228, %cond.false.297 ]
  br label %cond.end.301

cond.end.301:                                     ; preds = %cond.end.299, %cond.true.291
  %cond302 = phi i32 [ -1, %cond.true.291 ], [ %cond300, %cond.end.299 ]
  %229 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir303 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %229, i32 0, i32 17
  store i32 %cond302, i32* %main_dir303, align 4, !tbaa !161
  %monotonic_y304 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 8
  %230 = load i32, i32* %monotonic_y304, align 4, !tbaa !168
  %tobool305 = icmp ne i32 %230, 0
  br i1 %tobool305, label %if.end.315, label %land.lhs.true.306

land.lhs.true.306:                                ; preds = %cond.end.301
  %more_flattened307 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 5
  %231 = load i32, i32* %more_flattened307, align 4, !tbaa !165
  %tobool308 = icmp ne i32 %231, 0
  br i1 %tobool308, label %if.then.309, label %if.end.315

if.then.309:                                      ; preds = %land.lhs.true.306
  %232 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call310 = call i32 @start_al_pair_from_min(%struct.line_list_s* %232, %struct.contour_cursor_s* %p) #5
  store i32 %call310, i32* %code, align 4, !tbaa !5
  %233 = load i32, i32* %code, align 4, !tbaa !5
  %cmp311 = icmp slt i32 %233, 0
  br i1 %cmp311, label %if.then.313, label %if.end.314

if.then.313:                                      ; preds = %if.then.309
  %234 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %234, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.314:                                       ; preds = %if.then.309
  br label %if.end.315

if.end.315:                                       ; preds = %if.end.314, %land.lhs.true.306, %cond.end.301
  %dir316 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %235 = load i32, i32* %dir316, align 4, !tbaa !160
  %cmp317 = icmp eq i32 %235, -1
  br i1 %cmp317, label %if.then.323, label %lor.lhs.false.319

lor.lhs.false.319:                                ; preds = %if.end.315
  %dir320 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %236 = load i32, i32* %dir320, align 4, !tbaa !160
  %cmp321 = icmp eq i32 %236, 0
  br i1 %cmp321, label %if.then.323, label %if.end.340

if.then.323:                                      ; preds = %lor.lhs.false.319, %if.end.315
  %237 = bitcast %struct.gx_flattened_iterator_s** %fi1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %237) #1
  %238 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi324 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %238, i32 0, i32 4
  %239 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi324, align 8, !tbaa !141
  store %struct.gx_flattened_iterator_s* %239, %struct.gx_flattened_iterator_s** %fi1, align 8, !tbaa !1
  %prev325 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 0
  %240 = load %struct.segment_s*, %struct.segment_s** %prev325, align 8, !tbaa !153
  %241 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev326 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %241, i32 0, i32 0
  store %struct.segment_s* %240, %struct.segment_s** %prev326, align 8, !tbaa !153
  %pseg327 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 1
  %242 = load %struct.segment_s*, %struct.segment_s** %pseg327, align 8, !tbaa !154
  %243 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg328 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %243, i32 0, i32 1
  store %struct.segment_s* %242, %struct.segment_s** %pseg328, align 8, !tbaa !154
  %monotonic_y329 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 8
  %244 = load i32, i32* %monotonic_y329, align 4, !tbaa !168
  %245 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_y330 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %245, i32 0, i32 8
  store i32 %244, i32* %monotonic_y330, align 4, !tbaa !168
  %more_flattened331 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 5
  %246 = load i32, i32* %more_flattened331, align 4, !tbaa !165
  %247 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %more_flattened332 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %247, i32 0, i32 5
  store i32 %246, i32* %more_flattened332, align 4, !tbaa !165
  %first_flattened333 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 6
  %248 = load i32, i32* %first_flattened333, align 4, !tbaa !162
  %249 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %first_flattened334 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %249, i32 0, i32 6
  store i32 %248, i32* %first_flattened334, align 4, !tbaa !162
  %fi335 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  %250 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi335, align 8, !tbaa !141
  %251 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi336 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %251, i32 0, i32 4
  store %struct.gx_flattened_iterator_s* %250, %struct.gx_flattened_iterator_s** %fi336, align 8, !tbaa !141
  %dir337 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 7
  %252 = load i32, i32* %dir337, align 4, !tbaa !160
  %253 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir338 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %253, i32 0, i32 7
  store i32 %252, i32* %dir338, align 4, !tbaa !160
  %254 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi1, align 8, !tbaa !1
  %fi339 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %p, i32 0, i32 4
  store %struct.gx_flattened_iterator_s* %254, %struct.gx_flattened_iterator_s** %fi339, align 8, !tbaa !141
  %255 = bitcast %struct.gx_flattened_iterator_s** %fi1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %255) #1
  br label %if.end.340

if.end.340:                                       ; preds = %if.then.323, %lor.lhs.false.319
  br label %if.end.341

if.end.341:                                       ; preds = %if.end.340, %lor.lhs.false.89
  br label %for.inc.342

for.inc.342:                                      ; preds = %if.end.341
  %256 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %next343 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %256, i32 0, i32 1
  %257 = load %struct.segment_s*, %struct.segment_s** %next343, align 8, !tbaa !144
  store %struct.segment_s* %257, %struct.segment_s** %pseg, align 8, !tbaa !1
  br label %for.cond.70

for.end.344:                                      ; preds = %for.cond.70
  %258 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi345 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %258, i32 0, i32 4
  store %struct.gx_flattened_iterator_s* null, %struct.gx_flattened_iterator_s** %fi345, align 8, !tbaa !141
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.344, %if.then.313, %if.then.285, %if.then.253, %if.then.223, %if.then.204, %if.then.184, %if.then.103, %if.then.97, %if.then.8, %if.then
  %259 = bitcast %struct.contour_cursor_s* %save_q to i8*
  call void @llvm.lifetime.end(i64 64, i8* %259) #1
  %260 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %260) #1
  %261 = bitcast i32* %saved to i8*
  call void @llvm.lifetime.end(i64 4, i8* %261) #1
  %262 = bitcast i32* %only_horizontal to i8*
  call void @llvm.lifetime.end(i64 4, i8* %262) #1
  %263 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %263) #1
  %264 = bitcast %struct.segment_s** %pseg to i8*
  call void @llvm.lifetime.end(i64 8, i8* %264) #1
  %265 = bitcast %struct.gx_flattened_iterator_s* %save_fi to i8*
  call void @llvm.lifetime.end(i64 136, i8* %265) #1
  %266 = bitcast %struct.gx_flattened_iterator_s* %fi to i8*
  call void @llvm.lifetime.end(i64 136, i8* %266) #1
  %267 = bitcast %struct.contour_cursor_s* %p to i8*
  call void @llvm.lifetime.end(i64 64, i8* %267) #1
  %268 = load i32, i32* %retval
  ret i32 %268
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @init_contour_cursor(%struct.line_list_s* %ll, %struct.contour_cursor_s* %q) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %q.addr = alloca %struct.contour_cursor_s*, align 8
  %fo = alloca %struct.fill_options_s*, align 8
  %s = alloca %struct.curve_segment*, align 8
  %ymin = alloca i32, align 4
  %ymax = alloca i32, align 4
  %in_band = alloca i32, align 4
  %s242 = alloca %struct.curve_segment*, align 8
  %k = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.contour_cursor_s* %q, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %0 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %2, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %3 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %3, i32 0, i32 1
  %4 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !154
  %type = getelementptr inbounds %struct.segment_s, %struct.segment_s* %4, i32 0, i32 2
  %5 = load i16, i16* %type, align 2, !tbaa !142
  %conv = zext i16 %5 to i32
  %cmp = icmp eq i32 %conv, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = bitcast %struct.curve_segment** %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg3 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %7, i32 0, i32 1
  %8 = load %struct.segment_s*, %struct.segment_s** %pseg3, align 8, !tbaa !154
  %9 = bitcast %struct.segment_s* %8 to %struct.curve_segment*
  store %struct.curve_segment* %9, %struct.curve_segment** %s, align 8, !tbaa !1
  %10 = bitcast i32* %ymin to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %11, i32 0, i32 0
  %12 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !153
  %pt = getelementptr inbounds %struct.segment_s, %struct.segment_s* %12, i32 0, i32 4
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt, i32 0, i32 1
  %13 = load i32, i32* %y, align 4, !tbaa !152
  %14 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %14, i32 0, i32 5
  %y4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1, i32 0, i32 1
  %15 = load i32, i32* %y4, align 4, !tbaa !169
  %cmp5 = icmp slt i32 %13, %15
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %16 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev7 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %16, i32 0, i32 0
  %17 = load %struct.segment_s*, %struct.segment_s** %prev7, align 8, !tbaa !153
  %pt8 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %17, i32 0, i32 4
  %y9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt8, i32 0, i32 1
  %18 = load i32, i32* %y9, align 4, !tbaa !152
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %19 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p110 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %19, i32 0, i32 5
  %y11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p110, i32 0, i32 1
  %20 = load i32, i32* %y11, align 4, !tbaa !169
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ]
  %21 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %21, i32 0, i32 6
  %y12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2, i32 0, i32 1
  %22 = load i32, i32* %y12, align 4, !tbaa !171
  %23 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt13 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %23, i32 0, i32 4
  %y14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt13, i32 0, i32 1
  %24 = load i32, i32* %y14, align 4, !tbaa !172
  %cmp15 = icmp slt i32 %22, %24
  br i1 %cmp15, label %cond.true.17, label %cond.false.20

cond.true.17:                                     ; preds = %cond.end
  %25 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p218 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %25, i32 0, i32 6
  %y19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p218, i32 0, i32 1
  %26 = load i32, i32* %y19, align 4, !tbaa !171
  br label %cond.end.23

cond.false.20:                                    ; preds = %cond.end
  %27 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt21 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %27, i32 0, i32 4
  %y22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt21, i32 0, i32 1
  %28 = load i32, i32* %y22, align 4, !tbaa !172
  br label %cond.end.23

cond.end.23:                                      ; preds = %cond.false.20, %cond.true.17
  %cond24 = phi i32 [ %26, %cond.true.17 ], [ %28, %cond.false.20 ]
  %cmp25 = icmp slt i32 %cond, %cond24
  br i1 %cmp25, label %cond.true.27, label %cond.false.44

cond.true.27:                                     ; preds = %cond.end.23
  %29 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev28 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %29, i32 0, i32 0
  %30 = load %struct.segment_s*, %struct.segment_s** %prev28, align 8, !tbaa !153
  %pt29 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %30, i32 0, i32 4
  %y30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt29, i32 0, i32 1
  %31 = load i32, i32* %y30, align 4, !tbaa !152
  %32 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p131 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %32, i32 0, i32 5
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p131, i32 0, i32 1
  %33 = load i32, i32* %y32, align 4, !tbaa !169
  %cmp33 = icmp slt i32 %31, %33
  br i1 %cmp33, label %cond.true.35, label %cond.false.39

cond.true.35:                                     ; preds = %cond.true.27
  %34 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev36 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %34, i32 0, i32 0
  %35 = load %struct.segment_s*, %struct.segment_s** %prev36, align 8, !tbaa !153
  %pt37 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %35, i32 0, i32 4
  %y38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt37, i32 0, i32 1
  %36 = load i32, i32* %y38, align 4, !tbaa !152
  br label %cond.end.42

cond.false.39:                                    ; preds = %cond.true.27
  %37 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p140 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %37, i32 0, i32 5
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p140, i32 0, i32 1
  %38 = load i32, i32* %y41, align 4, !tbaa !169
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.false.39, %cond.true.35
  %cond43 = phi i32 [ %36, %cond.true.35 ], [ %38, %cond.false.39 ]
  br label %cond.end.59

cond.false.44:                                    ; preds = %cond.end.23
  %39 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p245 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %39, i32 0, i32 6
  %y46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p245, i32 0, i32 1
  %40 = load i32, i32* %y46, align 4, !tbaa !171
  %41 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt47 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %41, i32 0, i32 4
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt47, i32 0, i32 1
  %42 = load i32, i32* %y48, align 4, !tbaa !172
  %cmp49 = icmp slt i32 %40, %42
  br i1 %cmp49, label %cond.true.51, label %cond.false.54

cond.true.51:                                     ; preds = %cond.false.44
  %43 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p252 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %43, i32 0, i32 6
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p252, i32 0, i32 1
  %44 = load i32, i32* %y53, align 4, !tbaa !171
  br label %cond.end.57

cond.false.54:                                    ; preds = %cond.false.44
  %45 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt55 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %45, i32 0, i32 4
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt55, i32 0, i32 1
  %46 = load i32, i32* %y56, align 4, !tbaa !172
  br label %cond.end.57

cond.end.57:                                      ; preds = %cond.false.54, %cond.true.51
  %cond58 = phi i32 [ %44, %cond.true.51 ], [ %46, %cond.false.54 ]
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.end.57, %cond.end.42
  %cond60 = phi i32 [ %cond43, %cond.end.42 ], [ %cond58, %cond.end.57 ]
  store i32 %cond60, i32* %ymin, align 4, !tbaa !5
  %47 = bitcast i32* %ymax to i8*
  call void @llvm.lifetime.start(i64 4, i8* %47) #1
  %48 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev61 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %48, i32 0, i32 0
  %49 = load %struct.segment_s*, %struct.segment_s** %prev61, align 8, !tbaa !153
  %pt62 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %49, i32 0, i32 4
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt62, i32 0, i32 1
  %50 = load i32, i32* %y63, align 4, !tbaa !152
  %51 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p164 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %51, i32 0, i32 5
  %y65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p164, i32 0, i32 1
  %52 = load i32, i32* %y65, align 4, !tbaa !169
  %cmp66 = icmp sgt i32 %50, %52
  br i1 %cmp66, label %cond.true.68, label %cond.false.72

cond.true.68:                                     ; preds = %cond.end.59
  %53 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev69 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %53, i32 0, i32 0
  %54 = load %struct.segment_s*, %struct.segment_s** %prev69, align 8, !tbaa !153
  %pt70 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %54, i32 0, i32 4
  %y71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt70, i32 0, i32 1
  %55 = load i32, i32* %y71, align 4, !tbaa !152
  br label %cond.end.75

cond.false.72:                                    ; preds = %cond.end.59
  %56 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p173 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %56, i32 0, i32 5
  %y74 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p173, i32 0, i32 1
  %57 = load i32, i32* %y74, align 4, !tbaa !169
  br label %cond.end.75

cond.end.75:                                      ; preds = %cond.false.72, %cond.true.68
  %cond76 = phi i32 [ %55, %cond.true.68 ], [ %57, %cond.false.72 ]
  %58 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p277 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %58, i32 0, i32 6
  %y78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p277, i32 0, i32 1
  %59 = load i32, i32* %y78, align 4, !tbaa !171
  %60 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt79 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %60, i32 0, i32 4
  %y80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt79, i32 0, i32 1
  %61 = load i32, i32* %y80, align 4, !tbaa !172
  %cmp81 = icmp sgt i32 %59, %61
  br i1 %cmp81, label %cond.true.83, label %cond.false.86

cond.true.83:                                     ; preds = %cond.end.75
  %62 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p284 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %62, i32 0, i32 6
  %y85 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p284, i32 0, i32 1
  %63 = load i32, i32* %y85, align 4, !tbaa !171
  br label %cond.end.89

cond.false.86:                                    ; preds = %cond.end.75
  %64 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt87 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %64, i32 0, i32 4
  %y88 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt87, i32 0, i32 1
  %65 = load i32, i32* %y88, align 4, !tbaa !172
  br label %cond.end.89

cond.end.89:                                      ; preds = %cond.false.86, %cond.true.83
  %cond90 = phi i32 [ %63, %cond.true.83 ], [ %65, %cond.false.86 ]
  %cmp91 = icmp sgt i32 %cond76, %cond90
  br i1 %cmp91, label %cond.true.93, label %cond.false.110

cond.true.93:                                     ; preds = %cond.end.89
  %66 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev94 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %66, i32 0, i32 0
  %67 = load %struct.segment_s*, %struct.segment_s** %prev94, align 8, !tbaa !153
  %pt95 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %67, i32 0, i32 4
  %y96 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt95, i32 0, i32 1
  %68 = load i32, i32* %y96, align 4, !tbaa !152
  %69 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p197 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %69, i32 0, i32 5
  %y98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p197, i32 0, i32 1
  %70 = load i32, i32* %y98, align 4, !tbaa !169
  %cmp99 = icmp sgt i32 %68, %70
  br i1 %cmp99, label %cond.true.101, label %cond.false.105

cond.true.101:                                    ; preds = %cond.true.93
  %71 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev102 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %71, i32 0, i32 0
  %72 = load %struct.segment_s*, %struct.segment_s** %prev102, align 8, !tbaa !153
  %pt103 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %72, i32 0, i32 4
  %y104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt103, i32 0, i32 1
  %73 = load i32, i32* %y104, align 4, !tbaa !152
  br label %cond.end.108

cond.false.105:                                   ; preds = %cond.true.93
  %74 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1106 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %74, i32 0, i32 5
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1106, i32 0, i32 1
  %75 = load i32, i32* %y107, align 4, !tbaa !169
  br label %cond.end.108

cond.end.108:                                     ; preds = %cond.false.105, %cond.true.101
  %cond109 = phi i32 [ %73, %cond.true.101 ], [ %75, %cond.false.105 ]
  br label %cond.end.125

cond.false.110:                                   ; preds = %cond.end.89
  %76 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2111 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %76, i32 0, i32 6
  %y112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2111, i32 0, i32 1
  %77 = load i32, i32* %y112, align 4, !tbaa !171
  %78 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt113 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %78, i32 0, i32 4
  %y114 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt113, i32 0, i32 1
  %79 = load i32, i32* %y114, align 4, !tbaa !172
  %cmp115 = icmp sgt i32 %77, %79
  br i1 %cmp115, label %cond.true.117, label %cond.false.120

cond.true.117:                                    ; preds = %cond.false.110
  %80 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2118 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %80, i32 0, i32 6
  %y119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2118, i32 0, i32 1
  %81 = load i32, i32* %y119, align 4, !tbaa !171
  br label %cond.end.123

cond.false.120:                                   ; preds = %cond.false.110
  %82 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt121 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %82, i32 0, i32 4
  %y122 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt121, i32 0, i32 1
  %83 = load i32, i32* %y122, align 4, !tbaa !172
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.false.120, %cond.true.117
  %cond124 = phi i32 [ %81, %cond.true.117 ], [ %83, %cond.false.120 ]
  br label %cond.end.125

cond.end.125:                                     ; preds = %cond.end.123, %cond.end.108
  %cond126 = phi i32 [ %cond109, %cond.end.108 ], [ %cond124, %cond.end.123 ]
  store i32 %cond126, i32* %ymax, align 4, !tbaa !5
  %84 = bitcast i32* %in_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %84) #1
  %85 = load i32, i32* %ymin, align 4, !tbaa !5
  %86 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymax127 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %86, i32 0, i32 2
  %87 = load i32, i32* %ymax127, align 4, !tbaa !95
  %cmp128 = icmp sle i32 %85, %87
  br i1 %cmp128, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end.125
  %88 = load i32, i32* %ymax, align 4, !tbaa !5
  %89 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin130 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %89, i32 0, i32 1
  %90 = load i32, i32* %ymin130, align 4, !tbaa !94
  %cmp131 = icmp sge i32 %88, %90
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end.125
  %91 = phi i1 [ false, %cond.end.125 ], [ %cmp131, %land.rhs ]
  %land.ext = zext i1 %91 to i32
  store i32 %land.ext, i32* %in_band, align 4, !tbaa !5
  %92 = load i32, i32* %ymin, align 4, !tbaa !5
  %93 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin133 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %93, i32 0, i32 1
  %94 = load i32, i32* %ymin133, align 4, !tbaa !94
  %cmp134 = icmp slt i32 %92, %94
  br i1 %cmp134, label %land.rhs.136, label %land.end.140

land.rhs.136:                                     ; preds = %land.end
  %95 = load i32, i32* %ymax, align 4, !tbaa !5
  %96 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin137 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %96, i32 0, i32 1
  %97 = load i32, i32* %ymin137, align 4, !tbaa !94
  %cmp138 = icmp sge i32 %95, %97
  br label %land.end.140

land.end.140:                                     ; preds = %land.rhs.136, %land.end
  %98 = phi i1 [ false, %land.end ], [ %cmp138, %land.rhs.136 ]
  %land.ext141 = zext i1 %98 to i32
  %99 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %crossing = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %99, i32 0, i32 10
  store i32 %land.ext141, i32* %crossing, align 4, !tbaa !173
  %100 = load i32, i32* %in_band, align 4, !tbaa !5
  %tobool = icmp ne i32 %100, 0
  br i1 %tobool, label %lor.rhs, label %lor.end.191

lor.rhs:                                          ; preds = %land.end.140
  %101 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %crossing142 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %101, i32 0, i32 10
  %102 = load i32, i32* %crossing142, align 4, !tbaa !173
  %tobool143 = icmp ne i32 %102, 0
  br i1 %tobool143, label %land.end.189, label %land.rhs.144

land.rhs.144:                                     ; preds = %lor.rhs
  %103 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev145 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %103, i32 0, i32 0
  %104 = load %struct.segment_s*, %struct.segment_s** %prev145, align 8, !tbaa !153
  %pt146 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %104, i32 0, i32 4
  %y147 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt146, i32 0, i32 1
  %105 = load i32, i32* %y147, align 4, !tbaa !152
  %106 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1148 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %106, i32 0, i32 5
  %y149 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1148, i32 0, i32 1
  %107 = load i32, i32* %y149, align 4, !tbaa !169
  %cmp150 = icmp sle i32 %105, %107
  br i1 %cmp150, label %land.lhs.true, label %lor.rhs.165

land.lhs.true:                                    ; preds = %land.rhs.144
  %108 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1152 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %108, i32 0, i32 5
  %y153 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1152, i32 0, i32 1
  %109 = load i32, i32* %y153, align 4, !tbaa !169
  %110 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2154 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %110, i32 0, i32 6
  %y155 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2154, i32 0, i32 1
  %111 = load i32, i32* %y155, align 4, !tbaa !171
  %cmp156 = icmp sle i32 %109, %111
  br i1 %cmp156, label %land.lhs.true.158, label %lor.rhs.165

land.lhs.true.158:                                ; preds = %land.lhs.true
  %112 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2159 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %112, i32 0, i32 6
  %y160 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2159, i32 0, i32 1
  %113 = load i32, i32* %y160, align 4, !tbaa !171
  %114 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt161 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %114, i32 0, i32 4
  %y162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt161, i32 0, i32 1
  %115 = load i32, i32* %y162, align 4, !tbaa !172
  %cmp163 = icmp sle i32 %113, %115
  br i1 %cmp163, label %lor.end, label %lor.rhs.165

lor.rhs.165:                                      ; preds = %land.lhs.true.158, %land.lhs.true, %land.rhs.144
  %116 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev166 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %116, i32 0, i32 0
  %117 = load %struct.segment_s*, %struct.segment_s** %prev166, align 8, !tbaa !153
  %pt167 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %117, i32 0, i32 4
  %y168 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt167, i32 0, i32 1
  %118 = load i32, i32* %y168, align 4, !tbaa !152
  %119 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1169 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %119, i32 0, i32 5
  %y170 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1169, i32 0, i32 1
  %120 = load i32, i32* %y170, align 4, !tbaa !169
  %cmp171 = icmp sge i32 %118, %120
  br i1 %cmp171, label %land.lhs.true.173, label %land.end.187

land.lhs.true.173:                                ; preds = %lor.rhs.165
  %121 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1174 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %121, i32 0, i32 5
  %y175 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1174, i32 0, i32 1
  %122 = load i32, i32* %y175, align 4, !tbaa !169
  %123 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2176 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %123, i32 0, i32 6
  %y177 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2176, i32 0, i32 1
  %124 = load i32, i32* %y177, align 4, !tbaa !171
  %cmp178 = icmp sge i32 %122, %124
  br i1 %cmp178, label %land.rhs.180, label %land.end.187

land.rhs.180:                                     ; preds = %land.lhs.true.173
  %125 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2181 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %125, i32 0, i32 6
  %y182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2181, i32 0, i32 1
  %126 = load i32, i32* %y182, align 4, !tbaa !171
  %127 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt183 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %127, i32 0, i32 4
  %y184 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt183, i32 0, i32 1
  %128 = load i32, i32* %y184, align 4, !tbaa !172
  %cmp185 = icmp sge i32 %126, %128
  br label %land.end.187

land.end.187:                                     ; preds = %land.rhs.180, %land.lhs.true.173, %lor.rhs.165
  %129 = phi i1 [ false, %land.lhs.true.173 ], [ false, %lor.rhs.165 ], [ %cmp185, %land.rhs.180 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.187, %land.lhs.true.158
  %130 = phi i1 [ true, %land.lhs.true.158 ], [ %129, %land.end.187 ]
  br label %land.end.189

land.end.189:                                     ; preds = %lor.end, %lor.rhs
  %131 = phi i1 [ false, %lor.rhs ], [ %130, %lor.end ]
  br label %lor.end.191

lor.end.191:                                      ; preds = %land.end.189, %land.end.140
  %132 = phi i1 [ true, %land.end.140 ], [ %131, %land.end.189 ]
  %lor.ext = zext i1 %132 to i32
  %133 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_y = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %133, i32 0, i32 8
  store i32 %lor.ext, i32* %monotonic_y, align 4, !tbaa !168
  %134 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev192 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %134, i32 0, i32 0
  %135 = load %struct.segment_s*, %struct.segment_s** %prev192, align 8, !tbaa !153
  %pt193 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %135, i32 0, i32 4
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt193, i32 0, i32 0
  %136 = load i32, i32* %x, align 4, !tbaa !151
  %137 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1194 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %137, i32 0, i32 5
  %x195 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1194, i32 0, i32 0
  %138 = load i32, i32* %x195, align 4, !tbaa !174
  %cmp196 = icmp sle i32 %136, %138
  br i1 %cmp196, label %land.lhs.true.198, label %lor.rhs.212

land.lhs.true.198:                                ; preds = %lor.end.191
  %139 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1199 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %139, i32 0, i32 5
  %x200 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1199, i32 0, i32 0
  %140 = load i32, i32* %x200, align 4, !tbaa !174
  %141 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2201 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %141, i32 0, i32 6
  %x202 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2201, i32 0, i32 0
  %142 = load i32, i32* %x202, align 4, !tbaa !175
  %cmp203 = icmp sle i32 %140, %142
  br i1 %cmp203, label %land.lhs.true.205, label %lor.rhs.212

land.lhs.true.205:                                ; preds = %land.lhs.true.198
  %143 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2206 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %143, i32 0, i32 6
  %x207 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2206, i32 0, i32 0
  %144 = load i32, i32* %x207, align 4, !tbaa !175
  %145 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt208 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %145, i32 0, i32 4
  %x209 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt208, i32 0, i32 0
  %146 = load i32, i32* %x209, align 4, !tbaa !176
  %cmp210 = icmp sle i32 %144, %146
  br i1 %cmp210, label %lor.end.236, label %lor.rhs.212

lor.rhs.212:                                      ; preds = %land.lhs.true.205, %land.lhs.true.198, %lor.end.191
  %147 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev213 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %147, i32 0, i32 0
  %148 = load %struct.segment_s*, %struct.segment_s** %prev213, align 8, !tbaa !153
  %pt214 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %148, i32 0, i32 4
  %x215 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt214, i32 0, i32 0
  %149 = load i32, i32* %x215, align 4, !tbaa !151
  %150 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1216 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %150, i32 0, i32 5
  %x217 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1216, i32 0, i32 0
  %151 = load i32, i32* %x217, align 4, !tbaa !174
  %cmp218 = icmp sge i32 %149, %151
  br i1 %cmp218, label %land.lhs.true.220, label %land.end.234

land.lhs.true.220:                                ; preds = %lor.rhs.212
  %152 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p1221 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %152, i32 0, i32 5
  %x222 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1221, i32 0, i32 0
  %153 = load i32, i32* %x222, align 4, !tbaa !174
  %154 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2223 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %154, i32 0, i32 6
  %x224 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2223, i32 0, i32 0
  %155 = load i32, i32* %x224, align 4, !tbaa !175
  %cmp225 = icmp sge i32 %153, %155
  br i1 %cmp225, label %land.rhs.227, label %land.end.234

land.rhs.227:                                     ; preds = %land.lhs.true.220
  %156 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %p2228 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %156, i32 0, i32 6
  %x229 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2228, i32 0, i32 0
  %157 = load i32, i32* %x229, align 4, !tbaa !175
  %158 = load %struct.curve_segment*, %struct.curve_segment** %s, align 8, !tbaa !1
  %pt230 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %158, i32 0, i32 4
  %x231 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt230, i32 0, i32 0
  %159 = load i32, i32* %x231, align 4, !tbaa !176
  %cmp232 = icmp sge i32 %157, %159
  br label %land.end.234

land.end.234:                                     ; preds = %land.rhs.227, %land.lhs.true.220, %lor.rhs.212
  %160 = phi i1 [ false, %land.lhs.true.220 ], [ false, %lor.rhs.212 ], [ %cmp232, %land.rhs.227 ]
  br label %lor.end.236

lor.end.236:                                      ; preds = %land.end.234, %land.lhs.true.205
  %161 = phi i1 [ true, %land.lhs.true.205 ], [ %160, %land.end.234 ]
  %lor.ext237 = zext i1 %161 to i32
  %162 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_x = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %162, i32 0, i32 9
  store i32 %lor.ext237, i32* %monotonic_x, align 4, !tbaa !135
  %163 = bitcast i32* %in_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %163) #1
  %164 = bitcast i32* %ymax to i8*
  call void @llvm.lifetime.end(i64 4, i8* %164) #1
  %165 = bitcast i32* %ymin to i8*
  call void @llvm.lifetime.end(i64 4, i8* %165) #1
  %166 = bitcast %struct.curve_segment** %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %166) #1
  br label %if.end

if.else:                                          ; preds = %entry
  %167 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_y238 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %167, i32 0, i32 8
  store i32 1, i32* %monotonic_y238, align 4, !tbaa !168
  br label %if.end

if.end:                                           ; preds = %if.else, %lor.end.236
  %168 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_y239 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %168, i32 0, i32 8
  %169 = load i32, i32* %monotonic_y239, align 4, !tbaa !168
  %tobool240 = icmp ne i32 %169, 0
  br i1 %tobool240, label %if.else.261, label %if.then.241

if.then.241:                                      ; preds = %if.end
  %170 = bitcast %struct.curve_segment** %s242 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %170) #1
  %171 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg243 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %171, i32 0, i32 1
  %172 = load %struct.segment_s*, %struct.segment_s** %pseg243, align 8, !tbaa !154
  %173 = bitcast %struct.segment_s* %172 to %struct.curve_segment*
  store %struct.curve_segment* %173, %struct.curve_segment** %s242, align 8, !tbaa !1
  %174 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %174) #1
  %175 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev244 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %175, i32 0, i32 0
  %176 = load %struct.segment_s*, %struct.segment_s** %prev244, align 8, !tbaa !153
  %pt245 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %176, i32 0, i32 4
  %x246 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt245, i32 0, i32 0
  %177 = load i32, i32* %x246, align 4, !tbaa !151
  %178 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev247 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %178, i32 0, i32 0
  %179 = load %struct.segment_s*, %struct.segment_s** %prev247, align 8, !tbaa !153
  %pt248 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %179, i32 0, i32 4
  %y249 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt248, i32 0, i32 1
  %180 = load i32, i32* %y249, align 4, !tbaa !152
  %181 = load %struct.curve_segment*, %struct.curve_segment** %s242, align 8, !tbaa !1
  %182 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fixed_flat = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %182, i32 0, i32 6
  %183 = load i32, i32* %fixed_flat, align 4, !tbaa !93
  %call = call i32 @gx_curve_log2_samples(i32 %177, i32 %180, %struct.curve_segment* %181, i32 %183) #5
  store i32 %call, i32* %k, align 4, !tbaa !5
  %184 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %184, i32 0, i32 4
  %185 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi, align 8, !tbaa !141
  %186 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev250 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %186, i32 0, i32 0
  %187 = load %struct.segment_s*, %struct.segment_s** %prev250, align 8, !tbaa !153
  %pt251 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %187, i32 0, i32 4
  %x252 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt251, i32 0, i32 0
  %188 = load i32, i32* %x252, align 4, !tbaa !151
  %189 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev253 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %189, i32 0, i32 0
  %190 = load %struct.segment_s*, %struct.segment_s** %prev253, align 8, !tbaa !153
  %pt254 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %190, i32 0, i32 4
  %y255 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt254, i32 0, i32 1
  %191 = load i32, i32* %y255, align 4, !tbaa !152
  %192 = load %struct.curve_segment*, %struct.curve_segment** %s242, align 8, !tbaa !1
  %193 = load i32, i32* %k, align 4, !tbaa !5
  %call256 = call i32 @gx_flattened_iterator__init(%struct.gx_flattened_iterator_s* %185, i32 %188, i32 %191, %struct.curve_segment* %192, i32 %193) #5
  %tobool257 = icmp ne i32 %call256, 0
  br i1 %tobool257, label %if.end.259, label %if.then.258

if.then.258:                                      ; preds = %if.then.241
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.259:                                       ; preds = %if.then.241
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.259, %if.then.258
  %194 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %194) #1
  %195 = bitcast %struct.curve_segment** %s242 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %195) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.284 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.283

if.else.261:                                      ; preds = %if.end
  %196 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %197 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev262 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %197, i32 0, i32 0
  %198 = load %struct.segment_s*, %struct.segment_s** %prev262, align 8, !tbaa !153
  %pt263 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %198, i32 0, i32 4
  %y264 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt263, i32 0, i32 1
  %199 = load i32, i32* %y264, align 4, !tbaa !152
  %200 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg265 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %200, i32 0, i32 1
  %201 = load %struct.segment_s*, %struct.segment_s** %pseg265, align 8, !tbaa !154
  %pt266 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %201, i32 0, i32 4
  %y267 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt266, i32 0, i32 1
  %202 = load i32, i32* %y267, align 4, !tbaa !152
  %call268 = call i32 @compute_dir(%struct.fill_options_s* %196, i32 %199, i32 %202) #5
  %203 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %203, i32 0, i32 7
  store i32 %call268, i32* %dir, align 4, !tbaa !160
  %204 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi269 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %204, i32 0, i32 4
  %205 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi269, align 8, !tbaa !141
  %206 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev270 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %206, i32 0, i32 0
  %207 = load %struct.segment_s*, %struct.segment_s** %prev270, align 8, !tbaa !153
  %pt271 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %207, i32 0, i32 4
  %x272 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt271, i32 0, i32 0
  %208 = load i32, i32* %x272, align 4, !tbaa !151
  %209 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev273 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %209, i32 0, i32 0
  %210 = load %struct.segment_s*, %struct.segment_s** %prev273, align 8, !tbaa !153
  %pt274 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %210, i32 0, i32 4
  %y275 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt274, i32 0, i32 1
  %211 = load i32, i32* %y275, align 4, !tbaa !152
  %212 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg276 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %212, i32 0, i32 1
  %213 = load %struct.segment_s*, %struct.segment_s** %pseg276, align 8, !tbaa !154
  %pt277 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %213, i32 0, i32 4
  %x278 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt277, i32 0, i32 0
  %214 = load i32, i32* %x278, align 4, !tbaa !151
  %215 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg279 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %215, i32 0, i32 1
  %216 = load %struct.segment_s*, %struct.segment_s** %pseg279, align 8, !tbaa !154
  %pt280 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %216, i32 0, i32 4
  %y281 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt280, i32 0, i32 1
  %217 = load i32, i32* %y281, align 4, !tbaa !152
  %call282 = call i32 @gx_flattened_iterator__init_line(%struct.gx_flattened_iterator_s* %205, i32 %208, i32 %211, i32 %214, i32 %217) #5
  br label %do.body

do.body:                                          ; preds = %if.else.261
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.283

if.end.283:                                       ; preds = %do.end, %cleanup.cont
  %218 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %first_flattened = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %218, i32 0, i32 6
  store i32 1, i32* %first_flattened, align 4, !tbaa !162
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.284

cleanup.284:                                      ; preds = %if.end.283, %cleanup
  %219 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %219) #1
  %220 = load i32, i32* %retval
  ret i32 %220
}

declare i32 @gx_flattened_iterator__next(%struct.gx_flattened_iterator_s*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @compute_dir(%struct.fill_options_s* %fo, i32 %y0, i32 %y1) #3 {
entry:
  %retval = alloca i32, align 4
  %fo.addr = alloca %struct.fill_options_s*, align 8
  %y0.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  store %struct.fill_options_s* %fo, %struct.fill_options_s** %fo.addr, align 8, !tbaa !1
  store i32 %y0, i32* %y0.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = load i32, i32* %y0.addr, align 4, !tbaa !5
  %1 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %cmp = icmp sgt i32 %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %y0.addr, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %y1.addr, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  %4 = load %struct.fill_options_s*, %struct.fill_options_s** %fo.addr, align 8, !tbaa !1
  %ymin = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %4, i32 0, i32 1
  %5 = load i32, i32* %ymin, align 4, !tbaa !94
  %cmp1 = icmp slt i32 %cond, %5
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 2, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %6 = load i32, i32* %y0.addr, align 4, !tbaa !5
  %7 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %cmp2 = icmp slt i32 %6, %7
  br i1 %cmp2, label %cond.true.3, label %cond.false.4

cond.true.3:                                      ; preds = %if.end
  %8 = load i32, i32* %y0.addr, align 4, !tbaa !5
  br label %cond.end.5

cond.false.4:                                     ; preds = %if.end
  %9 = load i32, i32* %y1.addr, align 4, !tbaa !5
  br label %cond.end.5

cond.end.5:                                       ; preds = %cond.false.4, %cond.true.3
  %cond6 = phi i32 [ %8, %cond.true.3 ], [ %9, %cond.false.4 ]
  %10 = load %struct.fill_options_s*, %struct.fill_options_s** %fo.addr, align 8, !tbaa !1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %10, i32 0, i32 2
  %11 = load i32, i32* %ymax, align 4, !tbaa !95
  %cmp7 = icmp sgt i32 %cond6, %11
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %cond.end.5
  store i32 2, i32* %retval
  br label %return

if.end.9:                                         ; preds = %cond.end.5
  %12 = load i32, i32* %y0.addr, align 4, !tbaa !5
  %13 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %cmp10 = icmp slt i32 %12, %13
  br i1 %cmp10, label %cond.true.11, label %cond.false.12

cond.true.11:                                     ; preds = %if.end.9
  br label %cond.end.15

cond.false.12:                                    ; preds = %if.end.9
  %14 = load i32, i32* %y0.addr, align 4, !tbaa !5
  %15 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %cmp13 = icmp sgt i32 %14, %15
  %cond14 = select i1 %cmp13, i32 -1, i32 0
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.12, %cond.true.11
  %cond16 = phi i32 [ 1, %cond.true.11 ], [ %cond14, %cond.false.12 ]
  store i32 %cond16, i32* %retval
  br label %return

return:                                           ; preds = %cond.end.15, %if.then.8, %if.then
  %16 = load i32, i32* %retval
  ret i32 %16
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @add_y_line(%struct.segment_s* %prev_lp, %struct.segment_s* %lp, i32 %dir, %struct.line_list_s* %ll) #3 {
entry:
  %prev_lp.addr = alloca %struct.segment_s*, align 8
  %lp.addr = alloca %struct.segment_s*, align 8
  %dir.addr = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  store %struct.segment_s* %prev_lp, %struct.segment_s** %prev_lp.addr, align 8, !tbaa !1
  store %struct.segment_s* %lp, %struct.segment_s** %lp.addr, align 8, !tbaa !1
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !5
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = load %struct.segment_s*, %struct.segment_s** %prev_lp.addr, align 8, !tbaa !1
  %1 = load %struct.segment_s*, %struct.segment_s** %lp.addr, align 8, !tbaa !1
  %2 = load %struct.segment_s*, %struct.segment_s** %lp.addr, align 8, !tbaa !1
  %pt = getelementptr inbounds %struct.segment_s, %struct.segment_s* %2, i32 0, i32 4
  %3 = load %struct.segment_s*, %struct.segment_s** %prev_lp.addr, align 8, !tbaa !1
  %pt1 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %3, i32 0, i32 4
  %4 = load i32, i32* %dir.addr, align 4, !tbaa !5
  %5 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call = call i32 @add_y_line_aux(%struct.segment_s* %0, %struct.segment_s* %1, %struct.gs_fixed_point_s* %pt, %struct.gs_fixed_point_s* %pt1, i32 %4, %struct.line_list_s* %5) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @start_al_pair(%struct.line_list_s* %ll, %struct.contour_cursor_s* %q, %struct.contour_cursor_s* %p) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %q.addr = alloca %struct.contour_cursor_s*, align 8
  %p.addr = alloca %struct.contour_cursor_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.contour_cursor_s* %q, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  store %struct.contour_cursor_s* %p, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_y = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %1, i32 0, i32 8
  %2 = load i32, i32* %monotonic_y, align 4, !tbaa !168
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %3, i32 0, i32 0
  %4 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !153
  %5 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %5, i32 0, i32 1
  %6 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !154
  %7 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call = call i32 @add_y_line(%struct.segment_s* %4, %struct.segment_s* %6, i32 -1, %struct.line_list_s* %7) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %entry
  %8 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %9 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev1 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %9, i32 0, i32 0
  %10 = load %struct.segment_s*, %struct.segment_s** %prev1, align 8, !tbaa !153
  %11 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg2 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %11, i32 0, i32 1
  %12 = load %struct.segment_s*, %struct.segment_s** %pseg2, align 8, !tbaa !154
  %13 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %13, i32 0, i32 4
  %14 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi, align 8, !tbaa !141
  %15 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %first_flattened = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %15, i32 0, i32 6
  %16 = load i32, i32* %first_flattened, align 4, !tbaa !162
  %tobool3 = icmp ne i32 %16, 0
  %lnot = xor i1 %tobool3, true
  %lnot.ext = zext i1 %lnot to i32
  %17 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_x = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %17, i32 0, i32 9
  %18 = load i32, i32* %monotonic_x, align 4, !tbaa !135
  %call4 = call i32 @add_y_curve_part(%struct.line_list_s* %8, %struct.segment_s* %10, %struct.segment_s* %12, i32 -1, %struct.gx_flattened_iterator_s* %14, i32 %lnot.ext, i32 0, i32 %18) #5
  store i32 %call4, i32* %code, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %19, 0
  br i1 %cmp, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  %20 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %21 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %monotonic_y7 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %21, i32 0, i32 8
  %22 = load i32, i32* %monotonic_y7, align 4, !tbaa !168
  %tobool8 = icmp ne i32 %22, 0
  br i1 %tobool8, label %if.then.9, label %if.else.13

if.then.9:                                        ; preds = %if.end.6
  %23 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %prev10 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %23, i32 0, i32 0
  %24 = load %struct.segment_s*, %struct.segment_s** %prev10, align 8, !tbaa !153
  %25 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %pseg11 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %25, i32 0, i32 1
  %26 = load %struct.segment_s*, %struct.segment_s** %pseg11, align 8, !tbaa !154
  %27 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call12 = call i32 @add_y_line(%struct.segment_s* %24, %struct.segment_s* %26, i32 1, %struct.line_list_s* %27) #5
  store i32 %call12, i32* %code, align 4, !tbaa !5
  br label %if.end.19

if.else.13:                                       ; preds = %if.end.6
  %28 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %29 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %prev14 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %29, i32 0, i32 0
  %30 = load %struct.segment_s*, %struct.segment_s** %prev14, align 8, !tbaa !153
  %31 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %pseg15 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %31, i32 0, i32 1
  %32 = load %struct.segment_s*, %struct.segment_s** %pseg15, align 8, !tbaa !154
  %33 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %fi16 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %33, i32 0, i32 4
  %34 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi16, align 8, !tbaa !141
  %35 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %35, i32 0, i32 5
  %36 = load i32, i32* %more_flattened, align 4, !tbaa !165
  %37 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %p.addr, align 8, !tbaa !1
  %monotonic_x17 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %37, i32 0, i32 9
  %38 = load i32, i32* %monotonic_x17, align 4, !tbaa !135
  %call18 = call i32 @add_y_curve_part(%struct.line_list_s* %28, %struct.segment_s* %30, %struct.segment_s* %32, i32 1, %struct.gx_flattened_iterator_s* %34, i32 %36, i32 0, i32 %38) #5
  store i32 %call18, i32* %code, align 4, !tbaa !5
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.13, %if.then.9
  %39 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %39, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.then.5
  %40 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #1
  %41 = load i32, i32* %retval
  ret i32 %41
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @add_y_curve_part(%struct.line_list_s* %ll, %struct.segment_s* %s0, %struct.segment_s* %s1, i32 %dir, %struct.gx_flattened_iterator_s* %fi, i32 %more1, i32 %step_back, i32 %monotonic_x) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %s0.addr = alloca %struct.segment_s*, align 8
  %s1.addr = alloca %struct.segment_s*, align 8
  %dir.addr = alloca i32, align 4
  %fi.addr = alloca %struct.gx_flattened_iterator_s*, align 8
  %more1.addr = alloca i32, align 4
  %step_back.addr = alloca i32, align 4
  %monotonic_x.addr = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.segment_s* %s0, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  store %struct.segment_s* %s1, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !5
  store %struct.gx_flattened_iterator_s* %fi, %struct.gx_flattened_iterator_s** %fi.addr, align 8, !tbaa !1
  store i32 %more1, i32* %more1.addr, align 4, !tbaa !5
  store i32 %step_back, i32* %step_back.addr, align 4, !tbaa !5
  store i32 %monotonic_x, i32* %monotonic_x.addr, align 4, !tbaa !5
  %0 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call = call %struct.active_line_s* @make_al(%struct.line_list_s* %1) #5
  store %struct.active_line_s* %call, %struct.active_line_s** %alp, align 8, !tbaa !1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %dir.addr, align 4, !tbaa !5
  %cmp1 = icmp eq i32 %4, 1
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %5 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %6 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.segment_s* [ %5, %cond.true ], [ %6, %cond.false ]
  %7 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %7, i32 0, i32 7
  store %struct.segment_s* %cond, %struct.segment_s** %pseg, align 8, !tbaa !177
  %8 = load i32, i32* %dir.addr, align 4, !tbaa !5
  %9 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 8
  store i32 %8, i32* %direction, align 4, !tbaa !178
  %10 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi2 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %10, i32 0, i32 11
  %11 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi.addr, align 8, !tbaa !1
  %12 = bitcast %struct.gx_flattened_iterator_s* %fi2 to i8*
  %13 = bitcast %struct.gx_flattened_iterator_s* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 136, i32 4, i1 false), !tbaa.struct !167
  %14 = load i32, i32* %more1.addr, align 4, !tbaa !5
  %15 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %15, i32 0, i32 12
  store i32 %14, i32* %more_flattened, align 4, !tbaa !179
  %16 = load i32, i32* %dir.addr, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %16, 1
  br i1 %cmp3, label %land.lhs.true, label %if.end.6

land.lhs.true:                                    ; preds = %cond.end
  %17 = load i32, i32* %more1.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then.4, label %if.end.6

if.then.4:                                        ; preds = %land.lhs.true
  %18 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi5 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %18, i32 0, i32 11
  %19 = load i32, i32* %more1.addr, align 4, !tbaa !5
  call void @gx_flattened_iterator__switch_to_backscan(%struct.gx_flattened_iterator_s* %fi5, i32 %19) #5
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.4, %land.lhs.true, %cond.end
  %20 = load i32, i32* %step_back.addr, align 4, !tbaa !5
  %tobool7 = icmp ne i32 %20, 0
  br i1 %tobool7, label %if.then.8, label %if.end.23

if.then.8:                                        ; preds = %if.end.6
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then.8
  %21 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi9 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %21, i32 0, i32 11
  %call10 = call i32 @gx_flattened_iterator__prev(%struct.gx_flattened_iterator_s* %fi9) #5
  store i32 %call10, i32* %code, align 4, !tbaa !5
  %22 = load i32, i32* %code, align 4, !tbaa !5
  %cmp11 = icmp slt i32 %22, 0
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %do.body
  %23 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %do.body
  %24 = load i32, i32* %code, align 4, !tbaa !5
  %25 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened14 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %25, i32 0, i32 12
  store i32 %24, i32* %more_flattened14, align 4, !tbaa !179
  %26 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %26, i32 0, i32 19
  %27 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %28 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi15 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %28, i32 0, i32 11
  %ly0 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi15, i32 0, i32 31
  %29 = load i32, i32* %ly0, align 4, !tbaa !180
  %30 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi16 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 11
  %ly1 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi16, i32 0, i32 33
  %31 = load i32, i32* %ly1, align 4, !tbaa !181
  %call17 = call i32 @compute_dir(%struct.fill_options_s* %27, i32 %29, i32 %31) #5
  %cmp18 = icmp ne i32 %call17, 2
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.13
  br label %do.end

if.end.20:                                        ; preds = %if.end.13
  br label %do.cond

do.cond:                                          ; preds = %if.end.20
  %32 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened21 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %32, i32 0, i32 12
  %33 = load i32, i32* %more_flattened21, align 4, !tbaa !179
  %tobool22 = icmp ne i32 %33, 0
  br i1 %tobool22, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %if.then.19
  br label %if.end.23

if.end.23:                                        ; preds = %do.end, %if.end.6
  %34 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %call24 = call i32 @step_al(%struct.active_line_s* %34, i32 0) #5
  store i32 %call24, i32* %code, align 4, !tbaa !5
  %35 = load i32, i32* %code, align 4, !tbaa !5
  %cmp25 = icmp slt i32 %35, 0
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.23
  %36 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.23
  %37 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %monotonic_y = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %37, i32 0, i32 10
  store i32 0, i32* %monotonic_y, align 4, !tbaa !182
  %38 = load i32, i32* %monotonic_x.addr, align 4, !tbaa !5
  %39 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %monotonic_x28 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %39, i32 0, i32 9
  store i32 %38, i32* %monotonic_x28, align 4, !tbaa !183
  %40 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %41 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  call void @insert_y_line(%struct.line_list_s* %40, %struct.active_line_s* %41) #5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.27, %if.then.26, %if.then.12, %if.then
  %42 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #1
  %43 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %43) #1
  %44 = load i32, i32* %retval
  ret i32 %44
}

; Function Attrs: nounwind uwtable
define internal i32 @start_al_pair_from_min(%struct.line_list_s* %ll, %struct.contour_cursor_s* %q) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %q.addr = alloca %struct.contour_cursor_s*, align 8
  %dir = alloca i32, align 4
  %code = alloca i32, align 4
  %fo = alloca %struct.fill_options_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.contour_cursor_s* %q, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %0 = bitcast i32* %dir to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %3, i32 0, i32 19
  %4 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %4, %struct.fill_options_s** %fo, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %5 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %5, i32 0, i32 4
  %6 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi, align 8, !tbaa !141
  %call = call i32 @gx_flattened_iterator__next(%struct.gx_flattened_iterator_s* %6) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %7 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %8 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %do.body
  %9 = load i32, i32* %code, align 4, !tbaa !5
  %10 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %10, i32 0, i32 5
  store i32 %9, i32* %more_flattened, align 4, !tbaa !165
  %11 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %12 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi2 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %12, i32 0, i32 4
  %13 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi2, align 8, !tbaa !141
  %ly0 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %13, i32 0, i32 31
  %14 = load i32, i32* %ly0, align 4, !tbaa !163
  %15 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi3 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %15, i32 0, i32 4
  %16 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi3, align 8, !tbaa !141
  %ly1 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %16, i32 0, i32 33
  %17 = load i32, i32* %ly1, align 4, !tbaa !164
  %call4 = call i32 @compute_dir(%struct.fill_options_s* %11, i32 %14, i32 %17) #5
  store i32 %call4, i32* %dir, align 4, !tbaa !5
  %18 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi5 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %18, i32 0, i32 4
  %19 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi5, align 8, !tbaa !141
  %ly06 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %19, i32 0, i32 31
  %20 = load i32, i32* %ly06, align 4, !tbaa !163
  %21 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %21, i32 0, i32 2
  %22 = load i32, i32* %ymax, align 4, !tbaa !95
  %cmp7 = icmp sgt i32 %20, %22
  br i1 %cmp7, label %land.lhs.true, label %if.end.14

land.lhs.true:                                    ; preds = %if.end
  %23 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %23, i32 0, i32 18
  %24 = load i32, i32* %y_break, align 4, !tbaa !137
  %25 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi8 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %25, i32 0, i32 4
  %26 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi8, align 8, !tbaa !141
  %y0 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %26, i32 0, i32 1
  %27 = load i32, i32* %y0, align 4, !tbaa !184
  %cmp9 = icmp sgt i32 %24, %27
  br i1 %cmp9, label %if.then.10, label %if.end.14

if.then.10:                                       ; preds = %land.lhs.true
  %28 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi11 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %28, i32 0, i32 4
  %29 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi11, align 8, !tbaa !141
  %ly012 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %29, i32 0, i32 31
  %30 = load i32, i32* %ly012, align 4, !tbaa !163
  %31 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break13 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %31, i32 0, i32 18
  store i32 %30, i32* %y_break13, align 4, !tbaa !137
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.10, %land.lhs.true, %if.end
  %32 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi15 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %32, i32 0, i32 4
  %33 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi15, align 8, !tbaa !141
  %ly116 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %33, i32 0, i32 33
  %34 = load i32, i32* %ly116, align 4, !tbaa !164
  %35 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymax17 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %35, i32 0, i32 2
  %36 = load i32, i32* %ymax17, align 4, !tbaa !95
  %cmp18 = icmp sgt i32 %34, %36
  br i1 %cmp18, label %land.lhs.true.19, label %if.end.28

land.lhs.true.19:                                 ; preds = %if.end.14
  %37 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break20 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %37, i32 0, i32 18
  %38 = load i32, i32* %y_break20, align 4, !tbaa !137
  %39 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi21 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %39, i32 0, i32 4
  %40 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi21, align 8, !tbaa !141
  %ly122 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %40, i32 0, i32 33
  %41 = load i32, i32* %ly122, align 4, !tbaa !164
  %cmp23 = icmp sgt i32 %38, %41
  br i1 %cmp23, label %if.then.24, label %if.end.28

if.then.24:                                       ; preds = %land.lhs.true.19
  %42 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi25 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %42, i32 0, i32 4
  %43 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi25, align 8, !tbaa !141
  %ly126 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %43, i32 0, i32 33
  %44 = load i32, i32* %ly126, align 4, !tbaa !164
  %45 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %45, i32 0, i32 18
  store i32 %44, i32* %y_break27, align 4, !tbaa !137
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.24, %land.lhs.true.19, %if.end.14
  %46 = load i32, i32* %dir, align 4, !tbaa !5
  %cmp29 = icmp eq i32 %46, 1
  br i1 %cmp29, label %land.lhs.true.30, label %if.else

land.lhs.true.30:                                 ; preds = %if.end.28
  %47 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %47, i32 0, i32 17
  %48 = load i32, i32* %main_dir, align 4, !tbaa !161
  %cmp31 = icmp eq i32 %48, -1
  br i1 %cmp31, label %land.lhs.true.32, label %if.else

land.lhs.true.32:                                 ; preds = %land.lhs.true.30
  %49 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi33 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %49, i32 0, i32 4
  %50 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi33, align 8, !tbaa !141
  %ly034 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %50, i32 0, i32 31
  %51 = load i32, i32* %ly034, align 4, !tbaa !163
  %52 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %52, i32 0, i32 1
  %53 = load i32, i32* %ymin, align 4, !tbaa !94
  %cmp35 = icmp sge i32 %51, %53
  br i1 %cmp35, label %if.then.36, label %if.else

if.then.36:                                       ; preds = %land.lhs.true.32
  %54 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %55 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %55, i32 0, i32 0
  %56 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !153
  %57 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %57, i32 0, i32 1
  %58 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !154
  %59 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi37 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %59, i32 0, i32 4
  %60 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi37, align 8, !tbaa !141
  %61 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_x = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %61, i32 0, i32 9
  %62 = load i32, i32* %monotonic_x, align 4, !tbaa !135
  %call38 = call i32 @add_y_curve_part(%struct.line_list_s* %54, %struct.segment_s* %56, %struct.segment_s* %58, i32 -1, %struct.gx_flattened_iterator_s* %60, i32 1, i32 1, i32 %62) #5
  store i32 %call38, i32* %code, align 4, !tbaa !5
  %63 = load i32, i32* %code, align 4, !tbaa !5
  %cmp39 = icmp slt i32 %63, 0
  br i1 %cmp39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.then.36
  %64 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %64, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.then.36
  %65 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %66 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev42 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %66, i32 0, i32 0
  %67 = load %struct.segment_s*, %struct.segment_s** %prev42, align 8, !tbaa !153
  %68 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg43 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %68, i32 0, i32 1
  %69 = load %struct.segment_s*, %struct.segment_s** %pseg43, align 8, !tbaa !154
  %70 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi44 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %70, i32 0, i32 4
  %71 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi44, align 8, !tbaa !141
  %72 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %more_flattened45 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %72, i32 0, i32 5
  %73 = load i32, i32* %more_flattened45, align 4, !tbaa !165
  %74 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_x46 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %74, i32 0, i32 9
  %75 = load i32, i32* %monotonic_x46, align 4, !tbaa !135
  %call47 = call i32 @add_y_curve_part(%struct.line_list_s* %65, %struct.segment_s* %67, %struct.segment_s* %69, i32 1, %struct.gx_flattened_iterator_s* %71, i32 %73, i32 0, i32 %75) #5
  store i32 %call47, i32* %code, align 4, !tbaa !5
  %76 = load i32, i32* %code, align 4, !tbaa !5
  %cmp48 = icmp slt i32 %76, 0
  br i1 %cmp48, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.end.41
  %77 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %77, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.50:                                        ; preds = %if.end.41
  br label %if.end.91

if.else:                                          ; preds = %land.lhs.true.32, %land.lhs.true.30, %if.end.28
  %78 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi51 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %78, i32 0, i32 4
  %79 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi51, align 8, !tbaa !141
  %ly052 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %79, i32 0, i32 31
  %80 = load i32, i32* %ly052, align 4, !tbaa !163
  %81 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin53 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %81, i32 0, i32 1
  %82 = load i32, i32* %ymin53, align 4, !tbaa !94
  %cmp54 = icmp slt i32 %80, %82
  br i1 %cmp54, label %land.lhs.true.55, label %if.else.70

land.lhs.true.55:                                 ; preds = %if.else
  %83 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi56 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %83, i32 0, i32 4
  %84 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi56, align 8, !tbaa !141
  %ly157 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %84, i32 0, i32 33
  %85 = load i32, i32* %ly157, align 4, !tbaa !164
  %86 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin58 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %86, i32 0, i32 1
  %87 = load i32, i32* %ymin58, align 4, !tbaa !94
  %cmp59 = icmp sge i32 %85, %87
  br i1 %cmp59, label %if.then.60, label %if.else.70

if.then.60:                                       ; preds = %land.lhs.true.55
  %88 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %89 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev61 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %89, i32 0, i32 0
  %90 = load %struct.segment_s*, %struct.segment_s** %prev61, align 8, !tbaa !153
  %91 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg62 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %91, i32 0, i32 1
  %92 = load %struct.segment_s*, %struct.segment_s** %pseg62, align 8, !tbaa !154
  %93 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi63 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %93, i32 0, i32 4
  %94 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi63, align 8, !tbaa !141
  %95 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %more_flattened64 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %95, i32 0, i32 5
  %96 = load i32, i32* %more_flattened64, align 4, !tbaa !165
  %97 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_x65 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %97, i32 0, i32 9
  %98 = load i32, i32* %monotonic_x65, align 4, !tbaa !135
  %call66 = call i32 @add_y_curve_part(%struct.line_list_s* %88, %struct.segment_s* %90, %struct.segment_s* %92, i32 1, %struct.gx_flattened_iterator_s* %94, i32 %96, i32 0, i32 %98) #5
  store i32 %call66, i32* %code, align 4, !tbaa !5
  %99 = load i32, i32* %code, align 4, !tbaa !5
  %cmp67 = icmp slt i32 %99, 0
  br i1 %cmp67, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.then.60
  %100 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %100, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.69:                                        ; preds = %if.then.60
  br label %if.end.90

if.else.70:                                       ; preds = %land.lhs.true.55, %if.else
  %101 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi71 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %101, i32 0, i32 4
  %102 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi71, align 8, !tbaa !141
  %ly072 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %102, i32 0, i32 31
  %103 = load i32, i32* %ly072, align 4, !tbaa !163
  %104 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin73 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %104, i32 0, i32 1
  %105 = load i32, i32* %ymin73, align 4, !tbaa !94
  %cmp74 = icmp sge i32 %103, %105
  br i1 %cmp74, label %land.lhs.true.75, label %if.end.89

land.lhs.true.75:                                 ; preds = %if.else.70
  %106 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi76 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %106, i32 0, i32 4
  %107 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi76, align 8, !tbaa !141
  %ly177 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %107, i32 0, i32 33
  %108 = load i32, i32* %ly177, align 4, !tbaa !164
  %109 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %ymin78 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %109, i32 0, i32 1
  %110 = load i32, i32* %ymin78, align 4, !tbaa !94
  %cmp79 = icmp slt i32 %108, %110
  br i1 %cmp79, label %if.then.80, label %if.end.89

if.then.80:                                       ; preds = %land.lhs.true.75
  %111 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %112 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %prev81 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %112, i32 0, i32 0
  %113 = load %struct.segment_s*, %struct.segment_s** %prev81, align 8, !tbaa !153
  %114 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %pseg82 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %114, i32 0, i32 1
  %115 = load %struct.segment_s*, %struct.segment_s** %pseg82, align 8, !tbaa !154
  %116 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %fi83 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %116, i32 0, i32 4
  %117 = load %struct.gx_flattened_iterator_s*, %struct.gx_flattened_iterator_s** %fi83, align 8, !tbaa !141
  %118 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %monotonic_x84 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %118, i32 0, i32 9
  %119 = load i32, i32* %monotonic_x84, align 4, !tbaa !135
  %call85 = call i32 @add_y_curve_part(%struct.line_list_s* %111, %struct.segment_s* %113, %struct.segment_s* %115, i32 -1, %struct.gx_flattened_iterator_s* %117, i32 1, i32 0, i32 %119) #5
  store i32 %call85, i32* %code, align 4, !tbaa !5
  %120 = load i32, i32* %code, align 4, !tbaa !5
  %cmp86 = icmp slt i32 %120, 0
  br i1 %cmp86, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.then.80
  %121 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %121, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.88:                                        ; preds = %if.then.80
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88, %land.lhs.true.75, %if.else.70
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.end.69
  br label %if.end.91

if.end.91:                                        ; preds = %if.end.90, %if.end.50
  %122 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %first_flattened = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %122, i32 0, i32 6
  store i32 0, i32* %first_flattened, align 4, !tbaa !162
  %123 = load i32, i32* %dir, align 4, !tbaa !5
  %124 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %dir92 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %124, i32 0, i32 7
  store i32 %123, i32* %dir92, align 4, !tbaa !160
  %125 = load i32, i32* %dir, align 4, !tbaa !5
  %cmp93 = icmp eq i32 %125, -1
  br i1 %cmp93, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.91
  br label %cond.end.98

cond.false:                                       ; preds = %if.end.91
  %126 = load i32, i32* %dir, align 4, !tbaa !5
  %cmp94 = icmp eq i32 %126, 1
  br i1 %cmp94, label %cond.true.95, label %cond.false.96

cond.true.95:                                     ; preds = %cond.false
  br label %cond.end

cond.false.96:                                    ; preds = %cond.false
  %127 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir97 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %127, i32 0, i32 17
  %128 = load i32, i32* %main_dir97, align 4, !tbaa !161
  br label %cond.end

cond.end:                                         ; preds = %cond.false.96, %cond.true.95
  %cond = phi i32 [ 1, %cond.true.95 ], [ %128, %cond.false.96 ]
  br label %cond.end.98

cond.end.98:                                      ; preds = %cond.end, %cond.true
  %cond99 = phi i32 [ -1, %cond.true ], [ %cond, %cond.end ]
  %129 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %main_dir100 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %129, i32 0, i32 17
  store i32 %cond99, i32* %main_dir100, align 4, !tbaa !161
  %130 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %more_flattened101 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %130, i32 0, i32 5
  %131 = load i32, i32* %more_flattened101, align 4, !tbaa !165
  %tobool = icmp ne i32 %131, 0
  br i1 %tobool, label %if.end.103, label %if.then.102

if.then.102:                                      ; preds = %cond.end.98
  br label %do.end

if.end.103:                                       ; preds = %cond.end.98
  br label %do.cond

do.cond:                                          ; preds = %if.end.103
  %132 = load %struct.contour_cursor_s*, %struct.contour_cursor_s** %q.addr, align 8, !tbaa !1
  %more_flattened104 = getelementptr inbounds %struct.contour_cursor_s, %struct.contour_cursor_s* %132, i32 0, i32 5
  %133 = load i32, i32* %more_flattened104, align 4, !tbaa !165
  %tobool105 = icmp ne i32 %133, 0
  br i1 %tobool105, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %if.then.102
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then.87, %if.then.68, %if.then.49, %if.then.40, %if.then
  %134 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %134) #1
  %135 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %135) #1
  %136 = bitcast i32* %dir to i8*
  call void @llvm.lifetime.end(i64 4, i8* %136) #1
  %137 = load i32, i32* %retval
  ret i32 %137
}

declare i32 @gx_curve_log2_samples(i32, i32, %struct.curve_segment*, i32) #2

declare i32 @gx_flattened_iterator__init(%struct.gx_flattened_iterator_s*, i32, i32, %struct.curve_segment*, i32) #2

declare i32 @gx_flattened_iterator__init_line(%struct.gx_flattened_iterator_s*, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @add_y_line_aux(%struct.segment_s* %prev_lp, %struct.segment_s* %lp, %struct.gs_fixed_point_s* %curr, %struct.gs_fixed_point_s* %prev, i32 %dir, %struct.line_list_s* %ll) #0 {
entry:
  %retval = alloca i32, align 4
  %prev_lp.addr = alloca %struct.segment_s*, align 8
  %lp.addr = alloca %struct.segment_s*, align 8
  %curr.addr = alloca %struct.gs_fixed_point_s*, align 8
  %prev.addr = alloca %struct.gs_fixed_point_s*, align 8
  %dir.addr = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %code = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.segment_s* %prev_lp, %struct.segment_s** %prev_lp.addr, align 8, !tbaa !1
  store %struct.segment_s* %lp, %struct.segment_s** %lp.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %curr, %struct.gs_fixed_point_s** %curr.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %prev, %struct.gs_fixed_point_s** %prev.addr, align 8, !tbaa !1
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !5
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call = call %struct.active_line_s* @make_al(%struct.line_list_s* %2) #5
  store %struct.active_line_s* %call, %struct.active_line_s** %alp, align 8, !tbaa !1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %4, i32 0, i32 12
  store i32 0, i32* %more_flattened, align 4, !tbaa !179
  %5 = load i32, i32* %dir.addr, align 4, !tbaa !5
  %6 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %6, i32 0, i32 8
  store i32 %5, i32* %direction, align 4, !tbaa !178
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 -1, label %sw.bb.5
    i32 0, label %sw.bb.10
  ]

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %8 = load %struct.segment_s*, %struct.segment_s** %prev_lp.addr, align 8, !tbaa !1
  %9 = load %struct.segment_s*, %struct.segment_s** %lp.addr, align 8, !tbaa !1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call1 = call i32 @init_al(%struct.active_line_s* %7, %struct.segment_s* %8, %struct.segment_s* %9, %struct.line_list_s* %10) #5
  store i32 %call1, i32* %code, align 4, !tbaa !5
  %11 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2 = icmp slt i32 %11, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %sw.bb
  %12 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %sw.bb
  br label %sw.epilog

sw.bb.5:                                          ; preds = %if.end
  %13 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %14 = load %struct.segment_s*, %struct.segment_s** %lp.addr, align 8, !tbaa !1
  %15 = load %struct.segment_s*, %struct.segment_s** %prev_lp.addr, align 8, !tbaa !1
  %16 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call6 = call i32 @init_al(%struct.active_line_s* %13, %struct.segment_s* %14, %struct.segment_s* %15, %struct.line_list_s* %16) #5
  store i32 %call6, i32* %code, align 4, !tbaa !5
  %17 = load i32, i32* %code, align 4, !tbaa !5
  %cmp7 = icmp slt i32 %17, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %sw.bb.5
  %18 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %sw.bb.5
  br label %sw.epilog

sw.bb.10:                                         ; preds = %if.end
  %19 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %19, i32 0, i32 0
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %prev.addr, align 8, !tbaa !1
  %21 = bitcast %struct.gs_fixed_point_s* %start to i8*
  %22 = bitcast %struct.gs_fixed_point_s* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !tbaa.struct !73
  %23 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %23, i32 0, i32 1
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %curr.addr, align 8, !tbaa !1
  %25 = bitcast %struct.gs_fixed_point_s* %end to i8*
  %26 = bitcast %struct.gs_fixed_point_s* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 4, i1 false), !tbaa.struct !73
  %27 = load %struct.segment_s*, %struct.segment_s** %prev_lp.addr, align 8, !tbaa !1
  %28 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %28, i32 0, i32 7
  store %struct.segment_s* %27, %struct.segment_s** %pseg, align 8, !tbaa !177
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb.10, %if.end.9, %if.end.4
  %29 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %30 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  call void @insert_y_line(%struct.line_list_s* %29, %struct.active_line_s* %30) #5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.then.8, %if.then.3, %if.then
  %31 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  %32 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #1
  %33 = load i32, i32* %retval
  ret i32 %33
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.active_line_s* @make_al(%struct.line_list_s* %ll) #3 {
entry:
  %retval = alloca %struct.active_line_s*, align 8
  %ll.addr = alloca %struct.line_list_s*, align 8
  %alp = alloca %struct.active_line_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %next_active = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 2
  %2 = load %struct.active_line_s*, %struct.active_line_s** %next_active, align 8, !tbaa !119
  store %struct.active_line_s* %2, %struct.active_line_s** %alp, align 8, !tbaa !1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %4 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %limit = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %4, i32 0, i32 3
  %5 = load %struct.active_line_s*, %struct.active_line_s** %limit, align 8, !tbaa !120
  %cmp = icmp eq %struct.active_line_s* %3, %5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %6, i32 0, i32 0
  %7 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !117
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %7, i32 0, i32 1
  %alloc_struct = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 8
  %8 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %alloc_struct, align 8, !tbaa !185
  %9 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %9, i32 0, i32 0
  %10 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1, align 8, !tbaa !117
  %call = call i8* %8(%struct.gs_memory_s* %10, %struct.gs_memory_struct_type_s* @st_active_line, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0)) #5
  %11 = bitcast i8* %call to %struct.active_line_s*
  store %struct.active_line_s* %11, %struct.active_line_s** %alp, align 8, !tbaa !1
  %12 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp2 = icmp eq %struct.active_line_s* %12, null
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  store %struct.active_line_s* null, %struct.active_line_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %13 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %active_area = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %13, i32 0, i32 1
  %14 = load %struct.active_line_s*, %struct.active_line_s** %active_area, align 8, !tbaa !118
  %15 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %alloc_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %15, i32 0, i32 16
  store %struct.active_line_s* %14, %struct.active_line_s** %alloc_next, align 8, !tbaa !159
  %16 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %17 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %active_area4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %17, i32 0, i32 1
  store %struct.active_line_s* %16, %struct.active_line_s** %active_area4, align 8, !tbaa !118
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.6

if.else:                                          ; preds = %entry
  %18 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %next_active5 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %18, i32 0, i32 2
  %19 = load %struct.active_line_s*, %struct.active_line_s** %next_active5, align 8, !tbaa !119
  %incdec.ptr = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %19, i32 1
  store %struct.active_line_s* %incdec.ptr, %struct.active_line_s** %next_active5, align 8, !tbaa !119
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %do.end
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 20
  %21 = load i32, i32* %contour_count, align 4, !tbaa !74
  %22 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count7 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %22, i32 0, i32 13
  store i32 %21, i32* %contour_count7, align 4, !tbaa !186
  %23 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %23, %struct.active_line_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.6, %if.then.3
  %24 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  %25 = load %struct.active_line_s*, %struct.active_line_s** %retval
  ret %struct.active_line_s* %25
}

; Function Attrs: nounwind uwtable
define internal i32 @init_al(%struct.active_line_s* %alp, %struct.segment_s* %s0, %struct.segment_s* %s1, %struct.line_list_s* %ll) #0 {
entry:
  %retval = alloca i32, align 4
  %alp.addr = alloca %struct.active_line_s*, align 8
  %s0.addr = alloca %struct.segment_s*, align 8
  %s1.addr = alloca %struct.segment_s*, align 8
  %ll.addr = alloca %struct.line_list_s*, align 8
  %ss = alloca %struct.segment_s*, align 8
  %curve = alloca i32, align 4
  %code = alloca i32, align 4
  %cs = alloca %struct.curve_segment*, align 8
  %k = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %cs84 = alloca %struct.curve_segment*, align 8
  %k85 = alloca i32, align 4
  %more = alloca i32, align 4
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store %struct.segment_s* %s0, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  store %struct.segment_s* %s1, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = bitcast %struct.segment_s** %ss to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %1, i32 0, i32 8
  %2 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.segment_s* [ %3, %cond.true ], [ %4, %cond.false ]
  store %struct.segment_s* %cond, %struct.segment_s** %ss, align 8, !tbaa !1
  %5 = bitcast i32* %curve to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.segment_s*, %struct.segment_s** %ss, align 8, !tbaa !1
  %cmp1 = icmp ne %struct.segment_s* %6, null
  br i1 %cmp1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cond.end
  %7 = load %struct.segment_s*, %struct.segment_s** %ss, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.segment_s, %struct.segment_s* %7, i32 0, i32 2
  %8 = load i16, i16* %type, align 2, !tbaa !142
  %conv = zext i16 %8 to i32
  %cmp2 = icmp eq i32 %conv, 3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %9 = phi i1 [ false, %cond.end ], [ %cmp2, %land.rhs ]
  %land.ext = zext i1 %9 to i32
  store i32 %land.ext, i32* %curve, align 4, !tbaa !5
  %10 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = load i32, i32* %curve, align 4, !tbaa !5
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then, label %if.else.194

if.then:                                          ; preds = %land.end
  %12 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %direction4 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %12, i32 0, i32 8
  %13 = load i32, i32* %direction4, align 4, !tbaa !178
  %cmp5 = icmp eq i32 %13, 1
  br i1 %cmp5, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.then
  %14 = bitcast %struct.curve_segment** %cs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %15 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %16 = bitcast %struct.segment_s* %15 to %struct.curve_segment*
  store %struct.curve_segment* %16, %struct.curve_segment** %cs, align 8, !tbaa !1
  %17 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  %18 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt = getelementptr inbounds %struct.segment_s, %struct.segment_s* %18, i32 0, i32 4
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt, i32 0, i32 0
  %19 = load i32, i32* %x, align 4, !tbaa !151
  %20 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt8 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %20, i32 0, i32 4
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt8, i32 0, i32 1
  %21 = load i32, i32* %y, align 4, !tbaa !152
  %22 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %23 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %23, i32 0, i32 19
  %24 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %fixed_flat = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %24, i32 0, i32 6
  %25 = load i32, i32* %fixed_flat, align 4, !tbaa !93
  %call = call i32 @gx_curve_log2_samples(i32 %19, i32 %21, %struct.curve_segment* %22, i32 %25) #5
  store i32 %call, i32* %k, align 4, !tbaa !5
  %26 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %26, i32 0, i32 11
  %27 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt9 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %27, i32 0, i32 4
  %x10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt9, i32 0, i32 0
  %28 = load i32, i32* %x10, align 4, !tbaa !151
  %29 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt11 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %29, i32 0, i32 4
  %y12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt11, i32 0, i32 1
  %30 = load i32, i32* %y12, align 4, !tbaa !152
  %31 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %32 = bitcast %struct.segment_s* %31 to %struct.curve_segment*
  %33 = load i32, i32* %k, align 4, !tbaa !5
  %call13 = call i32 @gx_flattened_iterator__init(%struct.gx_flattened_iterator_s* %fi, i32 %28, i32 %30, %struct.curve_segment* %32, i32 %33) #5
  %34 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %call14 = call i32 @step_al(%struct.active_line_s* %34, i32 1) #5
  store i32 %call14, i32* %code, align 4, !tbaa !5
  %35 = load i32, i32* %code, align 4, !tbaa !5
  %cmp15 = icmp slt i32 %35, 0
  br i1 %cmp15, label %if.then.17, label %if.end

if.then.17:                                       ; preds = %if.then.7
  %36 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.7
  %37 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo18 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %37, i32 0, i32 19
  %38 = load %struct.fill_options_s*, %struct.fill_options_s** %fo18, align 8, !tbaa !150
  %fill_by_trapezoids = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %38, i32 0, i32 7
  %39 = load i32, i32* %fill_by_trapezoids, align 4, !tbaa !106
  %tobool19 = icmp ne i32 %39, 0
  br i1 %tobool19, label %if.end.82, label %if.then.20

if.then.20:                                       ; preds = %if.end
  %40 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt21 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %40, i32 0, i32 4
  %y22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt21, i32 0, i32 1
  %41 = load i32, i32* %y22, align 4, !tbaa !152
  %42 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %42, i32 0, i32 5
  %y23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1, i32 0, i32 1
  %43 = load i32, i32* %y23, align 4, !tbaa !169
  %cmp24 = icmp sle i32 %41, %43
  br i1 %cmp24, label %land.lhs.true, label %land.end.38

land.lhs.true:                                    ; preds = %if.then.20
  %44 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p126 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %44, i32 0, i32 5
  %y27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p126, i32 0, i32 1
  %45 = load i32, i32* %y27, align 4, !tbaa !169
  %46 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p2 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %46, i32 0, i32 6
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2, i32 0, i32 1
  %47 = load i32, i32* %y28, align 4, !tbaa !171
  %cmp29 = icmp sle i32 %45, %47
  br i1 %cmp29, label %land.rhs.31, label %land.end.38

land.rhs.31:                                      ; preds = %land.lhs.true
  %48 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p232 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %48, i32 0, i32 6
  %y33 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p232, i32 0, i32 1
  %49 = load i32, i32* %y33, align 4, !tbaa !171
  %50 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %pt34 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %50, i32 0, i32 4
  %y35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt34, i32 0, i32 1
  %51 = load i32, i32* %y35, align 4, !tbaa !172
  %cmp36 = icmp sle i32 %49, %51
  br label %land.end.38

land.end.38:                                      ; preds = %land.rhs.31, %land.lhs.true, %if.then.20
  %52 = phi i1 [ false, %land.lhs.true ], [ false, %if.then.20 ], [ %cmp36, %land.rhs.31 ]
  %land.ext39 = zext i1 %52 to i32
  %53 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %monotonic_y = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %53, i32 0, i32 10
  store i32 %land.ext39, i32* %monotonic_y, align 4, !tbaa !182
  %54 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt40 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %54, i32 0, i32 4
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt40, i32 0, i32 0
  %55 = load i32, i32* %x41, align 4, !tbaa !151
  %56 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p142 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %56, i32 0, i32 5
  %x43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p142, i32 0, i32 0
  %57 = load i32, i32* %x43, align 4, !tbaa !174
  %cmp44 = icmp sle i32 %55, %57
  br i1 %cmp44, label %land.lhs.true.46, label %lor.rhs

land.lhs.true.46:                                 ; preds = %land.end.38
  %58 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p147 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %58, i32 0, i32 5
  %x48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p147, i32 0, i32 0
  %59 = load i32, i32* %x48, align 4, !tbaa !174
  %60 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p249 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %60, i32 0, i32 6
  %x50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p249, i32 0, i32 0
  %61 = load i32, i32* %x50, align 4, !tbaa !175
  %cmp51 = icmp sle i32 %59, %61
  br i1 %cmp51, label %land.lhs.true.53, label %lor.rhs

land.lhs.true.53:                                 ; preds = %land.lhs.true.46
  %62 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p254 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %62, i32 0, i32 6
  %x55 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p254, i32 0, i32 0
  %63 = load i32, i32* %x55, align 4, !tbaa !175
  %64 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %pt56 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %64, i32 0, i32 4
  %x57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt56, i32 0, i32 0
  %65 = load i32, i32* %x57, align 4, !tbaa !176
  %cmp58 = icmp sle i32 %63, %65
  br i1 %cmp58, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true.53, %land.lhs.true.46, %land.end.38
  %66 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt60 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %66, i32 0, i32 4
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt60, i32 0, i32 0
  %67 = load i32, i32* %x61, align 4, !tbaa !151
  %68 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p162 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %68, i32 0, i32 5
  %x63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p162, i32 0, i32 0
  %69 = load i32, i32* %x63, align 4, !tbaa !174
  %cmp64 = icmp sge i32 %67, %69
  br i1 %cmp64, label %land.lhs.true.66, label %land.end.80

land.lhs.true.66:                                 ; preds = %lor.rhs
  %70 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p167 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %70, i32 0, i32 5
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p167, i32 0, i32 0
  %71 = load i32, i32* %x68, align 4, !tbaa !174
  %72 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p269 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %72, i32 0, i32 6
  %x70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p269, i32 0, i32 0
  %73 = load i32, i32* %x70, align 4, !tbaa !175
  %cmp71 = icmp sge i32 %71, %73
  br i1 %cmp71, label %land.rhs.73, label %land.end.80

land.rhs.73:                                      ; preds = %land.lhs.true.66
  %74 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %p274 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %74, i32 0, i32 6
  %x75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p274, i32 0, i32 0
  %75 = load i32, i32* %x75, align 4, !tbaa !175
  %76 = load %struct.curve_segment*, %struct.curve_segment** %cs, align 8, !tbaa !1
  %pt76 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %76, i32 0, i32 4
  %x77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt76, i32 0, i32 0
  %77 = load i32, i32* %x77, align 4, !tbaa !176
  %cmp78 = icmp sge i32 %75, %77
  br label %land.end.80

land.end.80:                                      ; preds = %land.rhs.73, %land.lhs.true.66, %lor.rhs
  %78 = phi i1 [ false, %land.lhs.true.66 ], [ false, %lor.rhs ], [ %cmp78, %land.rhs.73 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end.80, %land.lhs.true.53
  %79 = phi i1 [ true, %land.lhs.true.53 ], [ %78, %land.end.80 ]
  %lor.ext = zext i1 %79 to i32
  %80 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %monotonic_x = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %80, i32 0, i32 9
  store i32 %lor.ext, i32* %monotonic_x, align 4, !tbaa !183
  br label %if.end.82

if.end.82:                                        ; preds = %lor.end, %if.end
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.17
  %81 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %81) #1
  %82 = bitcast %struct.curve_segment** %cs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.213 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.193

if.else:                                          ; preds = %if.then
  %83 = bitcast %struct.curve_segment** %cs84 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %83) #1
  %84 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %85 = bitcast %struct.segment_s* %84 to %struct.curve_segment*
  store %struct.curve_segment* %85, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %86 = bitcast i32* %k85 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %86) #1
  %87 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %pt86 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %87, i32 0, i32 4
  %x87 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt86, i32 0, i32 0
  %88 = load i32, i32* %x87, align 4, !tbaa !151
  %89 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %pt88 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %89, i32 0, i32 4
  %y89 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt88, i32 0, i32 1
  %90 = load i32, i32* %y89, align 4, !tbaa !152
  %91 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo90 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %92, i32 0, i32 19
  %93 = load %struct.fill_options_s*, %struct.fill_options_s** %fo90, align 8, !tbaa !150
  %fixed_flat91 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %93, i32 0, i32 6
  %94 = load i32, i32* %fixed_flat91, align 4, !tbaa !93
  %call92 = call i32 @gx_curve_log2_samples(i32 %88, i32 %90, %struct.curve_segment* %91, i32 %94) #5
  store i32 %call92, i32* %k85, align 4, !tbaa !5
  %95 = bitcast i32* %more to i8*
  call void @llvm.lifetime.start(i64 4, i8* %95) #1
  %96 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi93 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %96, i32 0, i32 11
  %97 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %pt94 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %97, i32 0, i32 4
  %x95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt94, i32 0, i32 0
  %98 = load i32, i32* %x95, align 4, !tbaa !151
  %99 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %pt96 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %99, i32 0, i32 4
  %y97 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt96, i32 0, i32 1
  %100 = load i32, i32* %y97, align 4, !tbaa !152
  %101 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %102 = bitcast %struct.segment_s* %101 to %struct.curve_segment*
  %103 = load i32, i32* %k85, align 4, !tbaa !5
  %call98 = call i32 @gx_flattened_iterator__init(%struct.gx_flattened_iterator_s* %fi93, i32 %98, i32 %100, %struct.curve_segment* %102, i32 %103) #5
  %104 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %104, i32 0, i32 12
  store i32 0, i32* %more_flattened, align 4, !tbaa !179
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.else
  %105 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi99 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %105, i32 0, i32 11
  %call100 = call i32 @gx_flattened_iterator__next(%struct.gx_flattened_iterator_s* %fi99) #5
  store i32 %call100, i32* %code, align 4, !tbaa !5
  %106 = load i32, i32* %code, align 4, !tbaa !5
  %cmp101 = icmp slt i32 %106, 0
  br i1 %cmp101, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %do.body
  %107 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %107, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.188

if.end.104:                                       ; preds = %do.body
  %108 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %108, i32* %more, align 4, !tbaa !5
  %109 = load i32, i32* %more, align 4, !tbaa !5
  %110 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %more_flattened105 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %110, i32 0, i32 12
  %111 = load i32, i32* %more_flattened105, align 4, !tbaa !179
  %or = or i32 %111, %109
  store i32 %or, i32* %more_flattened105, align 4, !tbaa !179
  br label %do.cond

do.cond:                                          ; preds = %if.end.104
  %112 = load i32, i32* %more, align 4, !tbaa !5
  %tobool106 = icmp ne i32 %112, 0
  br i1 %tobool106, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %113 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi107 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 11
  %114 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %more_flattened108 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %114, i32 0, i32 12
  %115 = load i32, i32* %more_flattened108, align 4, !tbaa !179
  call void @gx_flattened_iterator__switch_to_backscan(%struct.gx_flattened_iterator_s* %fi107, i32 %115) #5
  %116 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %call109 = call i32 @step_al(%struct.active_line_s* %116, i32 0) #5
  store i32 %call109, i32* %code, align 4, !tbaa !5
  %117 = load i32, i32* %code, align 4, !tbaa !5
  %cmp110 = icmp slt i32 %117, 0
  br i1 %cmp110, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %do.end
  %118 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %118, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.188

if.end.113:                                       ; preds = %do.end
  %119 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo114 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %119, i32 0, i32 19
  %120 = load %struct.fill_options_s*, %struct.fill_options_s** %fo114, align 8, !tbaa !150
  %fill_by_trapezoids115 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %120, i32 0, i32 7
  %121 = load i32, i32* %fill_by_trapezoids115, align 4, !tbaa !106
  %tobool116 = icmp ne i32 %121, 0
  br i1 %tobool116, label %if.end.187, label %if.then.117

if.then.117:                                      ; preds = %if.end.113
  %122 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt118 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %122, i32 0, i32 4
  %y119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt118, i32 0, i32 1
  %123 = load i32, i32* %y119, align 4, !tbaa !152
  %124 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p1120 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %124, i32 0, i32 5
  %y121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1120, i32 0, i32 1
  %125 = load i32, i32* %y121, align 4, !tbaa !169
  %cmp122 = icmp sge i32 %123, %125
  br i1 %cmp122, label %land.lhs.true.124, label %land.end.138

land.lhs.true.124:                                ; preds = %if.then.117
  %126 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p1125 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %126, i32 0, i32 5
  %y126 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1125, i32 0, i32 1
  %127 = load i32, i32* %y126, align 4, !tbaa !169
  %128 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p2127 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %128, i32 0, i32 6
  %y128 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2127, i32 0, i32 1
  %129 = load i32, i32* %y128, align 4, !tbaa !171
  %cmp129 = icmp sge i32 %127, %129
  br i1 %cmp129, label %land.rhs.131, label %land.end.138

land.rhs.131:                                     ; preds = %land.lhs.true.124
  %130 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p2132 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %130, i32 0, i32 6
  %y133 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2132, i32 0, i32 1
  %131 = load i32, i32* %y133, align 4, !tbaa !171
  %132 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %pt134 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %132, i32 0, i32 4
  %y135 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt134, i32 0, i32 1
  %133 = load i32, i32* %y135, align 4, !tbaa !172
  %cmp136 = icmp sge i32 %131, %133
  br label %land.end.138

land.end.138:                                     ; preds = %land.rhs.131, %land.lhs.true.124, %if.then.117
  %134 = phi i1 [ false, %land.lhs.true.124 ], [ false, %if.then.117 ], [ %cmp136, %land.rhs.131 ]
  %land.ext139 = zext i1 %134 to i32
  %135 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %monotonic_y140 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %135, i32 0, i32 10
  store i32 %land.ext139, i32* %monotonic_y140, align 4, !tbaa !182
  %136 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt141 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %136, i32 0, i32 4
  %x142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt141, i32 0, i32 0
  %137 = load i32, i32* %x142, align 4, !tbaa !151
  %138 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p1143 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %138, i32 0, i32 5
  %x144 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1143, i32 0, i32 0
  %139 = load i32, i32* %x144, align 4, !tbaa !174
  %cmp145 = icmp sle i32 %137, %139
  br i1 %cmp145, label %land.lhs.true.147, label %lor.rhs.161

land.lhs.true.147:                                ; preds = %land.end.138
  %140 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p1148 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %140, i32 0, i32 5
  %x149 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1148, i32 0, i32 0
  %141 = load i32, i32* %x149, align 4, !tbaa !174
  %142 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p2150 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %142, i32 0, i32 6
  %x151 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2150, i32 0, i32 0
  %143 = load i32, i32* %x151, align 4, !tbaa !175
  %cmp152 = icmp sle i32 %141, %143
  br i1 %cmp152, label %land.lhs.true.154, label %lor.rhs.161

land.lhs.true.154:                                ; preds = %land.lhs.true.147
  %144 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p2155 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %144, i32 0, i32 6
  %x156 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2155, i32 0, i32 0
  %145 = load i32, i32* %x156, align 4, !tbaa !175
  %146 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %pt157 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %146, i32 0, i32 4
  %x158 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt157, i32 0, i32 0
  %147 = load i32, i32* %x158, align 4, !tbaa !176
  %cmp159 = icmp sle i32 %145, %147
  br i1 %cmp159, label %lor.end.184, label %lor.rhs.161

lor.rhs.161:                                      ; preds = %land.lhs.true.154, %land.lhs.true.147, %land.end.138
  %148 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt162 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %148, i32 0, i32 4
  %x163 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt162, i32 0, i32 0
  %149 = load i32, i32* %x163, align 4, !tbaa !151
  %150 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p1164 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %150, i32 0, i32 5
  %x165 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1164, i32 0, i32 0
  %151 = load i32, i32* %x165, align 4, !tbaa !174
  %cmp166 = icmp sge i32 %149, %151
  br i1 %cmp166, label %land.lhs.true.168, label %land.end.182

land.lhs.true.168:                                ; preds = %lor.rhs.161
  %152 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p1169 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %152, i32 0, i32 5
  %x170 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1169, i32 0, i32 0
  %153 = load i32, i32* %x170, align 4, !tbaa !174
  %154 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p2171 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %154, i32 0, i32 6
  %x172 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2171, i32 0, i32 0
  %155 = load i32, i32* %x172, align 4, !tbaa !175
  %cmp173 = icmp sge i32 %153, %155
  br i1 %cmp173, label %land.rhs.175, label %land.end.182

land.rhs.175:                                     ; preds = %land.lhs.true.168
  %156 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %p2176 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %156, i32 0, i32 6
  %x177 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2176, i32 0, i32 0
  %157 = load i32, i32* %x177, align 4, !tbaa !175
  %158 = load %struct.curve_segment*, %struct.curve_segment** %cs84, align 8, !tbaa !1
  %pt178 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %158, i32 0, i32 4
  %x179 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt178, i32 0, i32 0
  %159 = load i32, i32* %x179, align 4, !tbaa !176
  %cmp180 = icmp sge i32 %157, %159
  br label %land.end.182

land.end.182:                                     ; preds = %land.rhs.175, %land.lhs.true.168, %lor.rhs.161
  %160 = phi i1 [ false, %land.lhs.true.168 ], [ false, %lor.rhs.161 ], [ %cmp180, %land.rhs.175 ]
  br label %lor.end.184

lor.end.184:                                      ; preds = %land.end.182, %land.lhs.true.154
  %161 = phi i1 [ true, %land.lhs.true.154 ], [ %160, %land.end.182 ]
  %lor.ext185 = zext i1 %161 to i32
  %162 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %monotonic_x186 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %162, i32 0, i32 9
  store i32 %lor.ext185, i32* %monotonic_x186, align 4, !tbaa !183
  br label %if.end.187

if.end.187:                                       ; preds = %lor.end.184, %if.end.113
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.188

cleanup.188:                                      ; preds = %if.end.187, %if.then.112, %if.then.103
  %163 = bitcast i32* %more to i8*
  call void @llvm.lifetime.end(i64 4, i8* %163) #1
  %164 = bitcast i32* %k85 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %164) #1
  %165 = bitcast %struct.curve_segment** %cs84 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %165) #1
  %cleanup.dest.191 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.191, label %cleanup.213 [
    i32 0, label %cleanup.cont.192
  ]

cleanup.cont.192:                                 ; preds = %cleanup.188
  br label %if.end.193

if.end.193:                                       ; preds = %cleanup.cont.192, %cleanup.cont
  br label %if.end.212

if.else.194:                                      ; preds = %land.end
  %166 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi195 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %166, i32 0, i32 11
  %167 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt196 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %167, i32 0, i32 4
  %x197 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt196, i32 0, i32 0
  %168 = load i32, i32* %x197, align 4, !tbaa !151
  %169 = load %struct.segment_s*, %struct.segment_s** %s0.addr, align 8, !tbaa !1
  %pt198 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %169, i32 0, i32 4
  %y199 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt198, i32 0, i32 1
  %170 = load i32, i32* %y199, align 4, !tbaa !152
  %171 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %pt200 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %171, i32 0, i32 4
  %x201 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt200, i32 0, i32 0
  %172 = load i32, i32* %x201, align 4, !tbaa !151
  %173 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %pt202 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %173, i32 0, i32 4
  %y203 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt202, i32 0, i32 1
  %174 = load i32, i32* %y203, align 4, !tbaa !152
  %call204 = call i32 @gx_flattened_iterator__init_line(%struct.gx_flattened_iterator_s* %fi195, i32 %168, i32 %170, i32 %172, i32 %174) #5
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %call205 = call i32 @step_al(%struct.active_line_s* %175, i32 1) #5
  store i32 %call205, i32* %code, align 4, !tbaa !5
  %176 = load i32, i32* %code, align 4, !tbaa !5
  %cmp206 = icmp slt i32 %176, 0
  br i1 %cmp206, label %if.then.208, label %if.end.209

if.then.208:                                      ; preds = %if.else.194
  %177 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %177, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.213

if.end.209:                                       ; preds = %if.else.194
  %178 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %monotonic_y210 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %178, i32 0, i32 10
  store i32 1, i32* %monotonic_y210, align 4, !tbaa !182
  %179 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %monotonic_x211 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %179, i32 0, i32 9
  store i32 1, i32* %monotonic_x211, align 4, !tbaa !183
  br label %if.end.212

if.end.212:                                       ; preds = %if.end.209, %if.end.193
  %180 = load %struct.segment_s*, %struct.segment_s** %s1.addr, align 8, !tbaa !1
  %181 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %181, i32 0, i32 7
  store %struct.segment_s* %180, %struct.segment_s** %pseg, align 8, !tbaa !177
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.213

cleanup.213:                                      ; preds = %if.end.212, %if.then.208, %cleanup.188, %cleanup
  %182 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %182) #1
  %183 = bitcast i32* %curve to i8*
  call void @llvm.lifetime.end(i64 4, i8* %183) #1
  %184 = bitcast %struct.segment_s** %ss to i8*
  call void @llvm.lifetime.end(i64 8, i8* %184) #1
  %185 = load i32, i32* %retval
  ret i32 %185
}

; Function Attrs: nounwind uwtable
define internal void @insert_y_line(%struct.line_list_s* %ll, %struct.active_line_s* %alp) #0 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %yp = alloca %struct.active_line_s*, align 8
  %nyp = alloca %struct.active_line_s*, align 8
  %y_start = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %0 = bitcast %struct.active_line_s** %yp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 6
  %2 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  store %struct.active_line_s* %2, %struct.active_line_s** %yp, align 8, !tbaa !1
  %3 = bitcast %struct.active_line_s** %nyp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %y_start to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %5, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %6 = load i32, i32* %y, align 4, !tbaa !187
  store i32 %6, i32* %y_start, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %7 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %7, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.end
  %8 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %8, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  %9 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !189
  %10 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %11 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %11, i32 0, i32 5
  store %struct.active_line_s* %10, %struct.active_line_s** %y_list, align 8, !tbaa !121
  br label %if.end.36

if.else:                                          ; preds = %do.end
  %12 = load i32, i32* %y_start, align 4, !tbaa !5
  %13 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %start1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %13, i32 0, i32 0
  %y2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start1, i32 0, i32 1
  %14 = load i32, i32* %y2, align 4, !tbaa !187
  %cmp3 = icmp sge i32 %12, %14
  br i1 %cmp3, label %if.then.4, label %if.else.15

if.then.4:                                        ; preds = %if.else
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.4
  %15 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %next5 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %15, i32 0, i32 15
  %16 = load %struct.active_line_s*, %struct.active_line_s** %next5, align 8, !tbaa !189
  store %struct.active_line_s* %16, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %cmp6 = icmp ne %struct.active_line_s* %16, null
  br i1 %cmp6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %17 = load i32, i32* %y_start, align 4, !tbaa !5
  %18 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %start7 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %18, i32 0, i32 0
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start7, i32 0, i32 1
  %19 = load i32, i32* %y8, align 4, !tbaa !187
  %cmp9 = icmp sgt i32 %17, %19
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %cmp9, %land.rhs ]
  br i1 %20, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %21 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  store %struct.active_line_s* %21, %struct.active_line_s** %yp, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %land.end
  %22 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %23 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next10 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %23, i32 0, i32 15
  store %struct.active_line_s* %22, %struct.active_line_s** %next10, align 8, !tbaa !189
  %24 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %25 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev11 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %25, i32 0, i32 14
  store %struct.active_line_s* %24, %struct.active_line_s** %prev11, align 8, !tbaa !188
  %26 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %27 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %next12 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %27, i32 0, i32 15
  store %struct.active_line_s* %26, %struct.active_line_s** %next12, align 8, !tbaa !189
  %28 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %tobool = icmp ne %struct.active_line_s* %28, null
  br i1 %tobool, label %if.then.13, label %if.end

if.then.13:                                       ; preds = %while.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %30 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %prev14 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 14
  store %struct.active_line_s* %29, %struct.active_line_s** %prev14, align 8, !tbaa !188
  br label %if.end

if.end:                                           ; preds = %if.then.13, %while.end
  br label %if.end.35

if.else.15:                                       ; preds = %if.else
  br label %while.cond.16

while.cond.16:                                    ; preds = %while.body.24, %if.else.15
  %31 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %prev17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %31, i32 0, i32 14
  %32 = load %struct.active_line_s*, %struct.active_line_s** %prev17, align 8, !tbaa !188
  store %struct.active_line_s* %32, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %cmp18 = icmp ne %struct.active_line_s* %32, null
  br i1 %cmp18, label %land.rhs.19, label %land.end.23

land.rhs.19:                                      ; preds = %while.cond.16
  %33 = load i32, i32* %y_start, align 4, !tbaa !5
  %34 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %start20 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %34, i32 0, i32 0
  %y21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start20, i32 0, i32 1
  %35 = load i32, i32* %y21, align 4, !tbaa !187
  %cmp22 = icmp slt i32 %33, %35
  br label %land.end.23

land.end.23:                                      ; preds = %land.rhs.19, %while.cond.16
  %36 = phi i1 [ false, %while.cond.16 ], [ %cmp22, %land.rhs.19 ]
  br i1 %36, label %while.body.24, label %while.end.25

while.body.24:                                    ; preds = %land.end.23
  %37 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  store %struct.active_line_s* %37, %struct.active_line_s** %yp, align 8, !tbaa !1
  br label %while.cond.16

while.end.25:                                     ; preds = %land.end.23
  %38 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %39 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev26 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %39, i32 0, i32 14
  store %struct.active_line_s* %38, %struct.active_line_s** %prev26, align 8, !tbaa !188
  %40 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %41 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next27 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %41, i32 0, i32 15
  store %struct.active_line_s* %40, %struct.active_line_s** %next27, align 8, !tbaa !189
  %42 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %43 = load %struct.active_line_s*, %struct.active_line_s** %yp, align 8, !tbaa !1
  %prev28 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %43, i32 0, i32 14
  store %struct.active_line_s* %42, %struct.active_line_s** %prev28, align 8, !tbaa !188
  %44 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %tobool29 = icmp ne %struct.active_line_s* %44, null
  br i1 %tobool29, label %if.then.30, label %if.else.32

if.then.30:                                       ; preds = %while.end.25
  %45 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %46 = load %struct.active_line_s*, %struct.active_line_s** %nyp, align 8, !tbaa !1
  %next31 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 15
  store %struct.active_line_s* %45, %struct.active_line_s** %next31, align 8, !tbaa !189
  br label %if.end.34

if.else.32:                                       ; preds = %while.end.25
  %47 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %48 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list33 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %48, i32 0, i32 5
  store %struct.active_line_s* %47, %struct.active_line_s** %y_list33, align 8, !tbaa !121
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.32, %if.then.30
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.end
  br label %if.end.36

if.end.36:                                        ; preds = %if.end.35, %if.then
  %49 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %50 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line37 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %50, i32 0, i32 6
  store %struct.active_line_s* %49, %struct.active_line_s** %y_line37, align 8, !tbaa !122
  br label %do.body.38

do.body.38:                                       ; preds = %if.end.36
  br label %do.cond.39

do.cond.39:                                       ; preds = %do.body.38
  br label %do.end.40

do.end.40:                                        ; preds = %do.cond.39
  br label %do.body.41

do.body.41:                                       ; preds = %do.end.40
  br label %do.cond.42

do.cond.42:                                       ; preds = %do.body.41
  br label %do.end.43

do.end.43:                                        ; preds = %do.cond.42
  %51 = bitcast i32* %y_start to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = bitcast %struct.active_line_s** %nyp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  %53 = bitcast %struct.active_line_s** %yp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  ret void
}

declare %struct.gs_ptr_procs_s* @gs_no_struct_enum_ptrs(%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*) #2

declare void @gs_no_struct_reloc_ptrs(i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @step_al(%struct.active_line_s* %alp, i32 %move_iterator) #0 {
entry:
  %retval = alloca i32, align 4
  %alp.addr = alloca %struct.active_line_s*, align 8
  %move_iterator.addr = alloca i32, align 4
  %forth = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %move_iterator, i32* %move_iterator.addr, align 4, !tbaa !5
  %0 = bitcast i32* %forth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %1, i32 0, i32 8
  %2 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %3, i32 0, i32 11
  %curve = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi, i32 0, i32 29
  %4 = load i32, i32* %curve, align 4, !tbaa !190
  %tobool = icmp ne i32 %4, 0
  %lnot = xor i1 %tobool, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32
  store i32 %lor.ext, i32* %forth, align 4, !tbaa !5
  %6 = load i32, i32* %move_iterator.addr, align 4, !tbaa !5
  %tobool1 = icmp ne i32 %6, 0
  br i1 %tobool1, label %if.then, label %if.else.10

if.then:                                          ; preds = %lor.end
  %7 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = load i32, i32* %forth, align 4, !tbaa !5
  %tobool2 = icmp ne i32 %8, 0
  br i1 %tobool2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.then
  %9 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi4 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 11
  %call = call i32 @gx_flattened_iterator__next(%struct.gx_flattened_iterator_s* %fi4) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  br label %if.end

if.else:                                          ; preds = %if.then
  %10 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi5 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %10, i32 0, i32 11
  %call6 = call i32 @gx_flattened_iterator__prev(%struct.gx_flattened_iterator_s* %fi5) #5
  store i32 %call6, i32* %code, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %11 = load i32, i32* %code, align 4, !tbaa !5
  %cmp7 = icmp slt i32 %11, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end
  %12 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end
  %13 = load i32, i32* %code, align 4, !tbaa !5
  %14 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %14, i32 0, i32 12
  store i32 %13, i32* %more_flattened, align 4, !tbaa !179
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.9, %if.then.8
  %15 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.85 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.11

if.else.10:                                       ; preds = %lor.end
  br label %do.body

do.body:                                          ; preds = %if.else.10
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.11

if.end.11:                                        ; preds = %do.end, %cleanup.cont
  %16 = load i32, i32* %forth, align 4, !tbaa !5
  %tobool12 = icmp ne i32 %16, 0
  br i1 %tobool12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.11
  %17 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi13 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 11
  %lx0 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi13, i32 0, i32 30
  %18 = load i32, i32* %lx0, align 4, !tbaa !191
  br label %cond.end

cond.false:                                       ; preds = %if.end.11
  %19 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi14 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %19, i32 0, i32 11
  %lx1 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi14, i32 0, i32 32
  %20 = load i32, i32* %lx1, align 4, !tbaa !192
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ]
  %21 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %21, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  store i32 %cond, i32* %x, align 4, !tbaa !193
  %22 = load i32, i32* %forth, align 4, !tbaa !5
  %tobool15 = icmp ne i32 %22, 0
  br i1 %tobool15, label %cond.true.16, label %cond.false.18

cond.true.16:                                     ; preds = %cond.end
  %23 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %23, i32 0, i32 11
  %ly0 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi17, i32 0, i32 31
  %24 = load i32, i32* %ly0, align 4, !tbaa !180
  br label %cond.end.20

cond.false.18:                                    ; preds = %cond.end
  %25 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi19 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %25, i32 0, i32 11
  %ly1 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi19, i32 0, i32 33
  %26 = load i32, i32* %ly1, align 4, !tbaa !181
  br label %cond.end.20

cond.end.20:                                      ; preds = %cond.false.18, %cond.true.16
  %cond21 = phi i32 [ %24, %cond.true.16 ], [ %26, %cond.false.18 ]
  %27 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %27, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start22, i32 0, i32 1
  store i32 %cond21, i32* %y, align 4, !tbaa !187
  %28 = load i32, i32* %forth, align 4, !tbaa !5
  %tobool23 = icmp ne i32 %28, 0
  br i1 %tobool23, label %cond.true.24, label %cond.false.27

cond.true.24:                                     ; preds = %cond.end.20
  %29 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi25 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %29, i32 0, i32 11
  %lx126 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi25, i32 0, i32 32
  %30 = load i32, i32* %lx126, align 4, !tbaa !192
  br label %cond.end.30

cond.false.27:                                    ; preds = %cond.end.20
  %31 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi28 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %31, i32 0, i32 11
  %lx029 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi28, i32 0, i32 30
  %32 = load i32, i32* %lx029, align 4, !tbaa !191
  br label %cond.end.30

cond.end.30:                                      ; preds = %cond.false.27, %cond.true.24
  %cond31 = phi i32 [ %30, %cond.true.24 ], [ %32, %cond.false.27 ]
  %33 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %33, i32 0, i32 1
  %x32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  store i32 %cond31, i32* %x32, align 4, !tbaa !194
  %34 = load i32, i32* %forth, align 4, !tbaa !5
  %tobool33 = icmp ne i32 %34, 0
  br i1 %tobool33, label %cond.true.34, label %cond.false.37

cond.true.34:                                     ; preds = %cond.end.30
  %35 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi35 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 11
  %ly136 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi35, i32 0, i32 33
  %36 = load i32, i32* %ly136, align 4, !tbaa !181
  br label %cond.end.40

cond.false.37:                                    ; preds = %cond.end.30
  %37 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %fi38 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %37, i32 0, i32 11
  %ly039 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi38, i32 0, i32 31
  %38 = load i32, i32* %ly039, align 4, !tbaa !180
  br label %cond.end.40

cond.end.40:                                      ; preds = %cond.false.37, %cond.true.34
  %cond41 = phi i32 [ %36, %cond.true.34 ], [ %38, %cond.false.37 ]
  %39 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end42 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %39, i32 0, i32 1
  %y43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end42, i32 0, i32 1
  store i32 %cond41, i32* %y43, align 4, !tbaa !195
  %40 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end44 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %40, i32 0, i32 1
  %x45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end44, i32 0, i32 0
  %41 = load i32, i32* %x45, align 4, !tbaa !194
  %42 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %42, i32 0, i32 0
  %x47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start46, i32 0, i32 0
  %43 = load i32, i32* %x47, align 4, !tbaa !193
  %sub = sub nsw i32 %41, %43
  %44 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %44, i32 0, i32 2
  %x48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff, i32 0, i32 0
  store i32 %sub, i32* %x48, align 4, !tbaa !196
  %45 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end49 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 1
  %y50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end49, i32 0, i32 1
  %46 = load i32, i32* %y50, align 4, !tbaa !195
  %47 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start51 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %47, i32 0, i32 0
  %y52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start51, i32 0, i32 1
  %48 = load i32, i32* %y52, align 4, !tbaa !187
  %sub53 = sub nsw i32 %46, %48
  %49 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff54 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %49, i32 0, i32 2
  %y55 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff54, i32 0, i32 1
  store i32 %sub53, i32* %y55, align 4, !tbaa !197
  %50 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff56 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %50, i32 0, i32 2
  %x57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff56, i32 0, i32 0
  %51 = load i32, i32* %x57, align 4, !tbaa !196
  %cmp58 = icmp sge i32 %51, 0
  br i1 %cmp58, label %cond.true.59, label %cond.false.60

cond.true.59:                                     ; preds = %cond.end.40
  br label %cond.end.64

cond.false.60:                                    ; preds = %cond.end.40
  %52 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff61 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 2
  %y62 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff61, i32 0, i32 1
  %53 = load i32, i32* %y62, align 4, !tbaa !197
  %sub63 = sub nsw i32 0, %53
  %conv = sext i32 %sub63 to i64
  %add = add nsw i64 %conv, 1
  br label %cond.end.64

cond.end.64:                                      ; preds = %cond.false.60, %cond.true.59
  %cond65 = phi i64 [ 0, %cond.true.59 ], [ %add, %cond.false.60 ]
  %conv66 = trunc i64 %cond65 to i32
  %54 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %num_adjust = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 4
  store i32 %conv66, i32* %num_adjust, align 4, !tbaa !198
  %55 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %num_adjust67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %55, i32 0, i32 4
  %56 = load i32, i32* %num_adjust67, align 4, !tbaa !198
  %add68 = add nsw i32 2147483647, %56
  %57 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff69 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %57, i32 0, i32 2
  %x70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff69, i32 0, i32 0
  %58 = load i32, i32* %x70, align 4, !tbaa !196
  %cmp71 = icmp sge i32 %58, 0
  br i1 %cmp71, label %cond.true.73, label %cond.false.76

cond.true.73:                                     ; preds = %cond.end.64
  %59 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff74 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %59, i32 0, i32 2
  %x75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff74, i32 0, i32 0
  %60 = load i32, i32* %x75, align 4, !tbaa !196
  br label %cond.end.80

cond.false.76:                                    ; preds = %cond.end.64
  %61 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff77 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %61, i32 0, i32 2
  %x78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff77, i32 0, i32 0
  %62 = load i32, i32* %x78, align 4, !tbaa !196
  %sub79 = sub nsw i32 0, %62
  br label %cond.end.80

cond.end.80:                                      ; preds = %cond.false.76, %cond.true.73
  %cond81 = phi i32 [ %60, %cond.true.73 ], [ %sub79, %cond.false.76 ]
  %or = or i32 %cond81, 1
  %div = sdiv i32 %add68, %or
  %63 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start82 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 0
  %y83 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start82, i32 0, i32 1
  %64 = load i32, i32* %y83, align 4, !tbaa !187
  %add84 = add nsw i32 %div, %64
  %65 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %y_fast_max = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %65, i32 0, i32 3
  store i32 %add84, i32* %y_fast_max, align 4, !tbaa !199
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.85

cleanup.85:                                       ; preds = %cond.end.80, %cleanup
  %66 = bitcast i32* %forth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #1
  %67 = load i32, i32* %retval
  ret i32 %67
}

declare void @gx_flattened_iterator__switch_to_backscan(%struct.gx_flattened_iterator_s*, i32) #2

declare i32 @gx_flattened_iterator__prev(%struct.gx_flattened_iterator_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__spotan(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %yi = alloca i32, align 4
  %xi = alloca i32, align 4
  %wi = alloca i32, align 4
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code188 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.296

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.294, %cleanup.289, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %cleanup.cont.89, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else.85

if.then.35:                                       ; preds = %if.end.32
  %48 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = load i32, i32* %y, align 4, !tbaa !5
  %sub36 = sub nsw i32 %49, 0
  %conv37 = sext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, 127
  %shr = ashr i64 %add38, 8
  %conv39 = trunc i64 %shr to i32
  store i32 %conv39, i32* %yi, align 4, !tbaa !5
  %50 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #1
  %51 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #1
  %52 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 0
  %53 = load i32, i32* %x, align 4, !tbaa !193
  %54 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %55 = load i32, i32* %x41, align 4, !tbaa !194
  %cmp42 = icmp sle i32 %53, %55
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.35
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start45, i32 0, i32 0
  %57 = load i32, i32* %x46, align 4, !tbaa !193
  %sub47 = sub nsw i32 %57, 0
  %conv48 = sext i32 %sub47 to i64
  %add49 = add nsw i64 %conv48, 127
  %shr50 = ashr i64 %add49, 8
  %conv51 = trunc i64 %shr50 to i32
  store i32 %conv51, i32* %xi, align 4, !tbaa !5
  %58 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end52, i32 0, i32 0
  %59 = load i32, i32* %x53, align 4, !tbaa !194
  %add54 = add nsw i32 %59, 0
  %conv55 = sext i32 %add54 to i64
  %add56 = add nsw i64 %conv55, 127
  %shr57 = ashr i64 %add56, 8
  %conv58 = trunc i64 %shr57 to i32
  %60 = load i32, i32* %xi, align 4, !tbaa !5
  %sub59 = sub nsw i32 %conv58, %60
  store i32 %sub59, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.else:                                          ; preds = %if.then.35
  %61 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %61, i32 0, i32 1
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end60, i32 0, i32 0
  %62 = load i32, i32* %x61, align 4, !tbaa !194
  %sub62 = sub nsw i32 %62, 0
  %conv63 = sext i32 %sub62 to i64
  %add64 = add nsw i64 %conv63, 127
  %shr65 = ashr i64 %add64, 8
  %conv66 = trunc i64 %shr65 to i32
  store i32 %conv66, i32* %xi, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 0
  %64 = load i32, i32* %x68, align 4, !tbaa !193
  %add69 = add nsw i32 %64, 0
  %conv70 = sext i32 %add69 to i64
  %add71 = add nsw i64 %conv70, 127
  %shr72 = ashr i64 %add71, 8
  %conv73 = trunc i64 %shr72 to i32
  %65 = load i32, i32* %xi, align 4, !tbaa !5
  %sub74 = sub nsw i32 %conv73, %65
  store i32 %sub74, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.end.75:                                        ; preds = %if.else, %if.then.44
  br label %do.body.76

do.body.76:                                       ; preds = %if.end.75
  br label %do.cond.77

do.cond.77:                                       ; preds = %do.body.76
  br label %do.end.78

do.end.78:                                        ; preds = %do.cond.77
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %66 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %67 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %68 = load i32, i32* %xi, align 4, !tbaa !5
  %69 = load i32, i32* %yi, align 4, !tbaa !5
  %70 = load i32, i32* %wi, align 4, !tbaa !5
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %71 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %71, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %72 = load i64, i64* %pure, align 8, !tbaa !203
  %call = call i32 %66(%struct.gx_device_s* %67, i32 %68, i32 %69, i32 %70, i32 1, i64 %72) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %73 = load i32, i32* %code, align 4, !tbaa !5
  %cmp79 = icmp slt i32 %73, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %do.end.78
  %74 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %74, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %do.end.78
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.81
  %75 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %75) #1
  %76 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %76) #1
  %77 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.87 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.86

if.else.85:                                       ; preds = %if.end.32
  %78 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %79 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %78, %struct.line_list_s* %79) #5
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.85, %cleanup.cont
  %80 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %80, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.87

cleanup.87:                                       ; preds = %if.end.86, %cleanup
  %81 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %cleanup.dest.88 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.88, label %cleanup.289 [
    i32 0, label %cleanup.cont.89
  ]

cleanup.cont.89:                                  ; preds = %cleanup.87
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %82 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head90 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %82, i32 0, i32 7
  %next91 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head90, i32 0, i32 15
  %83 = load %struct.active_line_s*, %struct.active_line_s** %next91, align 8, !tbaa !201
  %cmp92 = icmp eq %struct.active_line_s* %83, null
  br i1 %cmp92, label %if.then.94, label %if.end.102

if.then.94:                                       ; preds = %while.end
  %84 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp95 = icmp eq %struct.active_line_s* %84, null
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.then.94
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.289

if.end.98:                                        ; preds = %if.then.94
  %85 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start99 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %85, i32 0, i32 0
  %y100 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start99, i32 0, i32 1
  %86 = load i32, i32* %y100, align 4, !tbaa !187
  store i32 %86, i32* %y, align 4, !tbaa !5
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %87, i32 0, i32 8
  %88 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %89 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %89, i32 0, i32 9
  store %struct.active_line_s* %88, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %90 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0101 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %90, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0101, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.289

if.end.102:                                       ; preds = %while.end
  %91 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp103 = icmp ne %struct.active_line_s* %91, null
  br i1 %cmp103, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.102
  %92 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start105 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %92, i32 0, i32 0
  %y106 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start105, i32 0, i32 1
  %93 = load i32, i32* %y106, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.102
  %94 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %94, i32 0, i32 18
  %95 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %93, %cond.true ], [ %95, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %96 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %96) #1
  %97 = load i32, i32* %y, align 4, !tbaa !5
  %98 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %98, -1
  %or = or i32 %97, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %99 = load i32, i32* %y1, align 4, !tbaa !5
  %100 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp107 = icmp sgt i32 %99, %100
  br i1 %cmp107, label %if.then.109, label %if.end.111

if.then.109:                                      ; preds = %cond.end
  %101 = load i32, i32* %y_band, align 4, !tbaa !5
  %add110 = add nsw i32 %101, 1
  store i32 %add110, i32* %y1, align 4, !tbaa !5
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.109, %cond.end
  %102 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #1
  %103 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head112 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %103, i32 0, i32 7
  %next113 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head112, i32 0, i32 15
  %104 = load %struct.active_line_s*, %struct.active_line_s** %next113, align 8, !tbaa !201
  store %struct.active_line_s* %104, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.111
  %105 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp114 = icmp ne %struct.active_line_s* %105, null
  br i1 %cmp114, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %106 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end116 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %106, i32 0, i32 1
  %y117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end116, i32 0, i32 1
  %107 = load i32, i32* %y117, align 4, !tbaa !195
  %108 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp118 = icmp slt i32 %107, %108
  br i1 %cmp118, label %if.then.120, label %if.end.123

if.then.120:                                      ; preds = %for.body
  %109 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end121 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %109, i32 0, i32 1
  %y122 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end121, i32 0, i32 1
  %110 = load i32, i32* %y122, align 4, !tbaa !195
  store i32 %110, i32* %y1, align 4, !tbaa !5
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.120, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.123
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next124 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 15
  %112 = load %struct.active_line_s*, %struct.active_line_s** %next124, align 8, !tbaa !189
  store %struct.active_line_s* %112, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %113 = load i32, i32* %y, align 4, !tbaa !5
  %114 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp125 = icmp eq i32 %113, %114
  br i1 %cmp125, label %if.then.127, label %if.end.146

if.then.127:                                      ; preds = %for.end
  %115 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %116 = load i32, i32* %y, align 4, !tbaa !5
  %call128 = call i32 @process_h_segments(%struct.line_list_s* %115, i32 %116) #5
  store i32 %call128, i32* %code, align 4, !tbaa !5
  %117 = load i32, i32* %code, align 4, !tbaa !5
  %cmp129 = icmp slt i32 %117, 0
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.then.127
  %118 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %118, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.289

if.end.132:                                       ; preds = %if.then.127
  %119 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119) #1
  %120 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %121 = load i32, i32* %y1, align 4, !tbaa !5
  %call133 = call i32 @move_al_by_y(%struct.line_list_s* %120, i32 %121) #5
  store i32 %call133, i32* %code1, align 4, !tbaa !5
  %122 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp134 = icmp slt i32 %122, 0
  br i1 %cmp134, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %if.end.132
  %123 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %123, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.137:                                       ; preds = %if.end.132
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.138

cleanup.138:                                      ; preds = %if.end.137, %if.then.136
  %124 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %124) #1
  %cleanup.dest.139 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.139, label %cleanup.289 [
    i32 0, label %cleanup.cont.140
  ]

cleanup.cont.140:                                 ; preds = %cleanup.138
  %125 = load i32, i32* %code, align 4, !tbaa !5
  %cmp141 = icmp sgt i32 %125, 0
  br i1 %cmp141, label %if.then.143, label %if.end.145

if.then.143:                                      ; preds = %cleanup.cont.140
  %126 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list144 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %126, i32 0, i32 5
  %127 = load %struct.active_line_s*, %struct.active_line_s** %y_list144, align 8, !tbaa !121
  store %struct.active_line_s* %127, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.289

if.end.145:                                       ; preds = %cleanup.cont.140
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %for.end
  %128 = load i32, i32* %y, align 4, !tbaa !5
  %129 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp147 = icmp sge i32 %128, %129
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %if.end.146
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.289

if.end.150:                                       ; preds = %if.end.146
  %130 = load i32, i32* %y, align 4, !tbaa !5
  %sub151 = sub nsw i32 %130, 0
  %conv152 = sext i32 %sub151 to i64
  %add153 = add nsw i64 %conv152, 127
  %and154 = and i64 %add153, -256
  %131 = load i32, i32* %y1, align 4, !tbaa !5
  %add155 = add nsw i32 %131, 0
  %conv156 = sext i32 %add155 to i64
  %add157 = add nsw i64 %conv156, 127
  %and158 = and i64 %add157, -256
  %cmp159 = icmp slt i64 %and154, %and158
  %conv160 = zext i1 %cmp159 to i32
  store i32 %conv160, i32* %covering_pixel_centers, align 4, !tbaa !5
  %132 = load i32, i32* %y, align 4, !tbaa !5
  %133 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp161 = icmp ne i32 %132, %133
  br i1 %cmp161, label %if.then.163, label %if.end.175

if.then.163:                                      ; preds = %if.end.150
  %134 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %135 = load i32, i32* %y, align 4, !tbaa !5
  %136 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %136, 0
  %cond164 = select i1 %tobool, i32 1, i32 -1
  %137 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %134, i32 %135, i32* %y1, i32 %cond164, i32 %137) #5
  %138 = load i32, i32* %y, align 4, !tbaa !5
  %sub165 = sub nsw i32 %138, 0
  %conv166 = sext i32 %sub165 to i64
  %add167 = add nsw i64 %conv166, 127
  %and168 = and i64 %add167, -256
  %139 = load i32, i32* %y1, align 4, !tbaa !5
  %add169 = add nsw i32 %139, 0
  %conv170 = sext i32 %add169 to i64
  %add171 = add nsw i64 %conv170, 127
  %and172 = and i64 %add171, -256
  %cmp173 = icmp slt i64 %and168, %and172
  %conv174 = zext i1 %cmp173 to i32
  store i32 %conv174, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.175

if.end.175:                                       ; preds = %if.then.163, %if.end.150
  %140 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool176 = icmp ne i32 %140, 0
  br i1 %tobool176, label %if.then.178, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.175
  %141 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool177 = icmp ne i32 %141, 0
  br i1 %tobool177, label %if.then.178, label %if.else.279

if.then.178:                                      ; preds = %lor.lhs.false, %if.end.175
  %142 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %142) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %143 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %143) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %do.body.179

do.body.179:                                      ; preds = %if.then.178
  br label %do.cond.180

do.cond.180:                                      ; preds = %do.body.179
  br label %do.end.181

do.end.181:                                       ; preds = %do.cond.180
  %144 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head182 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %144, i32 0, i32 7
  %next183 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head182, i32 0, i32 15
  %145 = load %struct.active_line_s*, %struct.active_line_s** %next183, align 8, !tbaa !201
  store %struct.active_line_s* %145, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.184

for.cond.184:                                     ; preds = %for.inc.272, %do.end.181
  %146 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp185 = icmp ne %struct.active_line_s* %146, null
  br i1 %cmp185, label %for.body.187, label %for.end.274

for.body.187:                                     ; preds = %for.cond.184
  %147 = bitcast i32* %code188 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %147) #1
  br label %do.body.189

do.body.189:                                      ; preds = %for.body.187
  br label %do.cond.190

do.cond.190:                                      ; preds = %do.body.189
  br label %do.end.191

do.end.191:                                       ; preds = %do.cond.190
  br label %do.body.192

do.body.192:                                      ; preds = %do.end.191
  br label %do.cond.193

do.cond.193:                                      ; preds = %do.body.192
  br label %do.end.194

do.end.194:                                       ; preds = %do.cond.193
  %148 = load i32, i32* %inside, align 4, !tbaa !5
  %149 = load i32, i32* %rule, align 4, !tbaa !5
  %and195 = and i32 %148, %149
  %cmp196 = icmp ne i32 %and195, 0
  br i1 %cmp196, label %if.end.206, label %if.then.198

if.then.198:                                      ; preds = %do.end.194
  %150 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction199 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %150, i32 0, i32 8
  %151 = load i32, i32* %direction199, align 4, !tbaa !178
  %152 = load i32, i32* %inside, align 4, !tbaa !5
  %add200 = add nsw i32 %152, %151
  store i32 %add200, i32* %inside, align 4, !tbaa !5
  %153 = load i32, i32* %inside, align 4, !tbaa !5
  %154 = load i32, i32* %rule, align 4, !tbaa !5
  %and201 = and i32 %153, %154
  %cmp202 = icmp ne i32 %and201, 0
  br i1 %cmp202, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.then.198
  %155 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %155, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.204, %if.then.198
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.269

if.end.206:                                       ; preds = %do.end.194
  %156 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction207 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %156, i32 0, i32 8
  %157 = load i32, i32* %direction207, align 4, !tbaa !178
  %158 = load i32, i32* %inside, align 4, !tbaa !5
  %add208 = add nsw i32 %158, %157
  store i32 %add208, i32* %inside, align 4, !tbaa !5
  %159 = load i32, i32* %inside, align 4, !tbaa !5
  %160 = load i32, i32* %rule, align 4, !tbaa !5
  %and209 = and i32 %159, %160
  %cmp210 = icmp ne i32 %and209, 0
  br i1 %cmp210, label %if.then.212, label %if.end.213

if.then.212:                                      ; preds = %if.end.206
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.269

if.end.213:                                       ; preds = %if.end.206
  %161 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next214 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %161, i32 0, i32 15
  %162 = load %struct.active_line_s*, %struct.active_line_s** %next214, align 8, !tbaa !189
  %cmp215 = icmp ne %struct.active_line_s* %162, null
  br i1 %cmp215, label %land.lhs.true, label %if.end.231

land.lhs.true:                                    ; preds = %if.end.213
  %163 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current217 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %163, i32 0, i32 5
  %164 = load i32, i32* %x_current217, align 4, !tbaa !204
  %165 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next218 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %165, i32 0, i32 15
  %166 = load %struct.active_line_s*, %struct.active_line_s** %next218, align 8, !tbaa !189
  %x_current219 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %166, i32 0, i32 5
  %167 = load i32, i32* %x_current219, align 4, !tbaa !204
  %cmp220 = icmp eq i32 %164, %167
  br i1 %cmp220, label %land.lhs.true.222, label %if.end.231

land.lhs.true.222:                                ; preds = %land.lhs.true
  %168 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %168, i32 0, i32 6
  %169 = load i32, i32* %x_next, align 4, !tbaa !205
  %170 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next223 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %170, i32 0, i32 15
  %171 = load %struct.active_line_s*, %struct.active_line_s** %next223, align 8, !tbaa !189
  %x_next224 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %171, i32 0, i32 6
  %172 = load i32, i32* %x_next224, align 4, !tbaa !205
  %cmp225 = icmp eq i32 %169, %172
  br i1 %cmp225, label %if.then.227, label %if.end.231

if.then.227:                                      ; preds = %land.lhs.true.222
  %173 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next228 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 15
  %174 = load %struct.active_line_s*, %struct.active_line_s** %next228, align 8, !tbaa !189
  store %struct.active_line_s* %174, %struct.active_line_s** %alp, align 8, !tbaa !1
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction229 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 8
  %176 = load i32, i32* %direction229, align 4, !tbaa !178
  %177 = load i32, i32* %inside, align 4, !tbaa !5
  %add230 = add nsw i32 %177, %176
  store i32 %add230, i32* %inside, align 4, !tbaa !5
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.269

if.end.231:                                       ; preds = %land.lhs.true.222, %land.lhs.true, %if.end.213
  br label %do.body.232

do.body.232:                                      ; preds = %if.end.231
  br label %do.cond.233

do.cond.233:                                      ; preds = %do.body.232
  br label %do.end.234

do.end.234:                                       ; preds = %do.cond.233
  %178 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %178) #1
  %179 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %180 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %180, i32 0, i32 0
  %y235 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %181 = load i32, i32* %y235, align 4, !tbaa !38
  %cmp236 = icmp sgt i32 %179, %181
  br i1 %cmp236, label %cond.true.238, label %cond.false.239

cond.true.238:                                    ; preds = %do.end.234
  %182 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.243

cond.false.239:                                   ; preds = %do.end.234
  %pbox240 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %183 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox240, align 8, !tbaa !97
  %p241 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %183, i32 0, i32 0
  %y242 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p241, i32 0, i32 1
  %184 = load i32, i32* %y242, align 4, !tbaa !38
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.false.239, %cond.true.238
  %cond244 = phi i32 [ %182, %cond.true.238 ], [ %184, %cond.false.239 ]
  store i32 %cond244, i32* %ybot, align 4, !tbaa !5
  %185 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %185) #1
  %186 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox245 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %187 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox245, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %187, i32 0, i32 1
  %y246 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %188 = load i32, i32* %y246, align 4, !tbaa !42
  %cmp247 = icmp slt i32 %186, %188
  br i1 %cmp247, label %cond.true.249, label %cond.false.250

cond.true.249:                                    ; preds = %cond.end.243
  %189 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.254

cond.false.250:                                   ; preds = %cond.end.243
  %pbox251 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %190 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox251, align 8, !tbaa !97
  %q252 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %190, i32 0, i32 1
  %y253 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q252, i32 0, i32 1
  %191 = load i32, i32* %y253, align 4, !tbaa !42
  br label %cond.end.254

cond.end.254:                                     ; preds = %cond.false.250, %cond.true.249
  %cond255 = phi i32 [ %189, %cond.true.249 ], [ %191, %cond.false.250 ]
  store i32 %cond255, i32* %ytop, align 4, !tbaa !5
  %dev256 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %192 = load %struct.gx_device_s*, %struct.gx_device_s** %dev256, align 8, !tbaa !96
  %193 = bitcast %struct.gx_device_s* %192 to %struct.gx_device_spot_analyzer_s*
  %194 = load i32, i32* %y, align 4, !tbaa !5
  %195 = load i32, i32* %y1, align 4, !tbaa !5
  %196 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %x_current257 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %196, i32 0, i32 5
  %197 = load i32, i32* %x_current257, align 4, !tbaa !204
  %198 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current258 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %198, i32 0, i32 5
  %199 = load i32, i32* %x_current258, align 4, !tbaa !204
  %200 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %x_next259 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %200, i32 0, i32 6
  %201 = load i32, i32* %x_next259, align 4, !tbaa !205
  %202 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next260 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %202, i32 0, i32 6
  %203 = load i32, i32* %x_next260, align 4, !tbaa !205
  %204 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %pseg = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %204, i32 0, i32 7
  %205 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !177
  %206 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %pseg261 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %206, i32 0, i32 7
  %207 = load %struct.segment_s*, %struct.segment_s** %pseg261, align 8, !tbaa !177
  %208 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %direction262 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %208, i32 0, i32 8
  %209 = load i32, i32* %direction262, align 4, !tbaa !178
  %210 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction263 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %210, i32 0, i32 8
  %211 = load i32, i32* %direction263, align 4, !tbaa !178
  %call264 = call i32 @gx_san_trap_store(%struct.gx_device_spot_analyzer_s* %193, i32 %194, i32 %195, i32 %197, i32 %199, i32 %201, i32 %203, %struct.segment_s* %205, %struct.segment_s* %207, i32 %209, i32 %211) #5
  store i32 %call264, i32* %code188, align 4, !tbaa !5
  %212 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %212) #1
  %213 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %213) #1
  %214 = load i32, i32* %code188, align 4, !tbaa !5
  %cmp265 = icmp slt i32 %214, 0
  br i1 %cmp265, label %if.then.267, label %if.end.268

if.then.267:                                      ; preds = %cond.end.254
  %215 = load i32, i32* %code188, align 4, !tbaa !5
  store i32 %215, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.269

if.end.268:                                       ; preds = %cond.end.254
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.269

cleanup.269:                                      ; preds = %if.end.268, %if.then.267, %if.then.227, %if.then.212, %if.end.205
  %216 = bitcast i32* %code188 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %216) #1
  %cleanup.dest.270 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.270, label %cleanup.275 [
    i32 0, label %cleanup.cont.271
    i32 17, label %for.inc.272
  ]

cleanup.cont.271:                                 ; preds = %cleanup.269
  br label %for.inc.272

for.inc.272:                                      ; preds = %cleanup.cont.271, %cleanup.269
  %217 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next273 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %217, i32 0, i32 15
  %218 = load %struct.active_line_s*, %struct.active_line_s** %next273, align 8, !tbaa !189
  store %struct.active_line_s* %218, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.184

for.end.274:                                      ; preds = %for.cond.184
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.275

cleanup.275:                                      ; preds = %for.end.274, %cleanup.269
  %219 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %219) #1
  %220 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %220) #1
  %cleanup.dest.277 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.277, label %cleanup.289 [
    i32 0, label %cleanup.cont.278
  ]

cleanup.cont.278:                                 ; preds = %cleanup.275
  br label %if.end.280

if.else.279:                                      ; preds = %lor.lhs.false
  br label %if.end.280

if.end.280:                                       ; preds = %if.else.279, %cleanup.cont.278
  %221 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %222 = load i32, i32* %y1, align 4, !tbaa !5
  %call281 = call i32 @move_al_by_y(%struct.line_list_s* %221, i32 %222) #5
  store i32 %call281, i32* %code, align 4, !tbaa !5
  %223 = load i32, i32* %code, align 4, !tbaa !5
  %cmp282 = icmp slt i32 %223, 0
  br i1 %cmp282, label %if.then.284, label %if.end.285

if.then.284:                                      ; preds = %if.end.280
  %224 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %224, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.289

if.end.285:                                       ; preds = %if.end.280
  %225 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0286 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %225, i32 0, i32 8
  %226 = load %struct.active_line_s*, %struct.active_line_s** %h_list0286, align 8, !tbaa !124
  %227 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1287 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %227, i32 0, i32 9
  store %struct.active_line_s* %226, %struct.active_line_s** %h_list1287, align 8, !tbaa !123
  %228 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0288 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %228, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0288, align 8, !tbaa !124
  %229 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %229, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.289

cleanup.289:                                      ; preds = %if.end.285, %if.then.284, %cleanup.275, %if.then.149, %if.then.143, %cleanup.138, %if.then.131, %if.end.98, %if.then.97, %cleanup.87
  %230 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %230) #1
  %231 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %231) #1
  %232 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %232) #1
  %233 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %233) #1
  %cleanup.dest.293 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.293, label %cleanup.296 [
    i32 0, label %cleanup.cont.294
    i32 3, label %while.end.295
    i32 2, label %while.cond
  ]

cleanup.cont.294:                                 ; preds = %cleanup.289
  br label %while.cond

while.end.295:                                    ; preds = %cleanup.289
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.296

cleanup.296:                                      ; preds = %while.end.295, %cleanup.289, %if.then
  %234 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %234) #1
  %235 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %235) #1
  %236 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %236) #1
  %237 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %237) #1
  %238 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %238) #1
  %239 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %239) #1
  %240 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %240) #1
  %241 = load i32, i32* %retval
  ret i32 %241
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__pr_fd_sw(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code137 = alloca i32, align 4
  %k = alloca i32, align 4
  %v = alloca i32, align 4
  %k193 = alloca i32, align 4
  %v195 = alloca i32, align 4
  %k256 = alloca i32, align 4
  %v258 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi = alloca i32, align 4
  %xx = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %flags = alloca i32, align 4
  %flp483 = alloca %struct.active_line_s*, align 8
  %inside484 = alloca i32, align 4
  %k500 = alloca i32, align 4
  %v502 = alloca i32, align 4
  %k549 = alloca i32, align 4
  %v551 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.655

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.637, %cleanup.632, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %if.end.36, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %if.end.32
  %48 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %49 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_h_new(%struct.active_line_s* %48, %struct.line_list_s* %49) #5
  br label %if.end.36

if.else:                                          ; preds = %if.end.32
  %50 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %51 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %50, %struct.line_list_s* %51) #5
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.35
  %52 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %52, %struct.active_line_s** %yll, align 8, !tbaa !1
  %53 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %54 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head37 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %54, i32 0, i32 7
  %next38 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head37, i32 0, i32 15
  %55 = load %struct.active_line_s*, %struct.active_line_s** %next38, align 8, !tbaa !201
  %cmp39 = icmp eq %struct.active_line_s* %55, null
  br i1 %cmp39, label %if.then.41, label %if.end.49

if.then.41:                                       ; preds = %while.end
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp42 = icmp eq %struct.active_line_s* %56, null
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.then.41
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.45:                                        ; preds = %if.then.41
  %57 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %57, i32 0, i32 0
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start46, i32 0, i32 1
  %58 = load i32, i32* %y47, align 4, !tbaa !187
  store i32 %58, i32* %y, align 4, !tbaa !5
  %59 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %59, i32 0, i32 8
  %60 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %61 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %61, i32 0, i32 9
  store %struct.active_line_s* %60, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %62 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list048 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %62, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list048, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.49:                                        ; preds = %while.end
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp50 = icmp ne %struct.active_line_s* %63, null
  br i1 %cmp50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.49
  %64 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 0
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start52, i32 0, i32 1
  %65 = load i32, i32* %y53, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.49
  %66 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %66, i32 0, i32 18
  %67 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %65, %cond.true ], [ %67, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %68 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68) #1
  %69 = load i32, i32* %y, align 4, !tbaa !5
  %70 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %70, -1
  %or = or i32 %69, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %71 = load i32, i32* %y1, align 4, !tbaa !5
  %72 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp54 = icmp sgt i32 %71, %72
  br i1 %cmp54, label %if.then.56, label %if.end.58

if.then.56:                                       ; preds = %cond.end
  %73 = load i32, i32* %y_band, align 4, !tbaa !5
  %add57 = add nsw i32 %73, 1
  store i32 %add57, i32* %y1, align 4, !tbaa !5
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.56, %cond.end
  %74 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #1
  %75 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head59 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %75, i32 0, i32 7
  %next60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head59, i32 0, i32 15
  %76 = load %struct.active_line_s*, %struct.active_line_s** %next60, align 8, !tbaa !201
  store %struct.active_line_s* %76, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.58
  %77 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp61 = icmp ne %struct.active_line_s* %77, null
  br i1 %cmp61, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %78 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %78, i32 0, i32 1
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %79 = load i32, i32* %y63, align 4, !tbaa !195
  %80 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp64 = icmp slt i32 %79, %80
  br i1 %cmp64, label %if.then.66, label %if.end.69

if.then.66:                                       ; preds = %for.body
  %81 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %81, i32 0, i32 1
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end67, i32 0, i32 1
  %82 = load i32, i32* %y68, align 4, !tbaa !195
  store i32 %82, i32* %y1, align 4, !tbaa !5
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.66, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.69
  %83 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next70 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %83, i32 0, i32 15
  %84 = load %struct.active_line_s*, %struct.active_line_s** %next70, align 8, !tbaa !189
  store %struct.active_line_s* %84, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %85 = load i32, i32* %y, align 4, !tbaa !5
  %86 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp71 = icmp eq i32 %85, %86
  br i1 %cmp71, label %if.then.73, label %if.end.88

if.then.73:                                       ; preds = %for.end
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %88 = load i32, i32* %y, align 4, !tbaa !5
  %call = call i32 @process_h_segments(%struct.line_list_s* %87, i32 %88) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %89 = load i32, i32* %code, align 4, !tbaa !5
  %cmp74 = icmp slt i32 %89, 0
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %if.then.73
  %90 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %90, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.77:                                        ; preds = %if.then.73
  %91 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #1
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %93 = load i32, i32* %y1, align 4, !tbaa !5
  %call78 = call i32 @move_al_by_y(%struct.line_list_s* %92, i32 %93) #5
  store i32 %call78, i32* %code1, align 4, !tbaa !5
  %94 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp79 = icmp slt i32 %94, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.77
  %95 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %95, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %if.end.77
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.81
  %96 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %96) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.632 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %97 = load i32, i32* %code, align 4, !tbaa !5
  %cmp83 = icmp sgt i32 %97, 0
  br i1 %cmp83, label %if.then.85, label %if.end.87

if.then.85:                                       ; preds = %cleanup.cont
  %98 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list86 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %98, i32 0, i32 5
  %99 = load %struct.active_line_s*, %struct.active_line_s** %y_list86, align 8, !tbaa !121
  store %struct.active_line_s* %99, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.87:                                        ; preds = %cleanup.cont
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %for.end
  %100 = load i32, i32* %y, align 4, !tbaa !5
  %101 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp89 = icmp sge i32 %100, %101
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %if.end.88
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.92:                                        ; preds = %if.end.88
  %102 = load i32, i32* %y, align 4, !tbaa !5
  %sub93 = sub nsw i32 %102, 0
  %conv94 = sext i32 %sub93 to i64
  %add95 = add nsw i64 %conv94, 127
  %and96 = and i64 %add95, -256
  %103 = load i32, i32* %y1, align 4, !tbaa !5
  %add97 = add nsw i32 %103, 0
  %conv98 = sext i32 %add97 to i64
  %add99 = add nsw i64 %conv98, 127
  %and100 = and i64 %add99, -256
  %cmp101 = icmp slt i64 %and96, %and100
  %conv102 = zext i1 %cmp101 to i32
  store i32 %conv102, i32* %covering_pixel_centers, align 4, !tbaa !5
  %104 = load i32, i32* %y, align 4, !tbaa !5
  %105 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp103 = icmp ne i32 %104, %105
  br i1 %cmp103, label %if.then.105, label %if.end.117

if.then.105:                                      ; preds = %if.end.92
  %106 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %107 = load i32, i32* %y, align 4, !tbaa !5
  %108 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %108, 0
  %cond106 = select i1 %tobool, i32 1, i32 -1
  %109 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %106, i32 %107, i32* %y1, i32 %cond106, i32 %109) #5
  %110 = load i32, i32* %y, align 4, !tbaa !5
  %sub107 = sub nsw i32 %110, 0
  %conv108 = sext i32 %sub107 to i64
  %add109 = add nsw i64 %conv108, 127
  %and110 = and i64 %add109, -256
  %111 = load i32, i32* %y1, align 4, !tbaa !5
  %add111 = add nsw i32 %111, 0
  %conv112 = sext i32 %add111 to i64
  %add113 = add nsw i64 %conv112, 127
  %and114 = and i64 %add113, -256
  %cmp115 = icmp slt i64 %and110, %and114
  %conv116 = zext i1 %cmp115 to i32
  store i32 %conv116, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.105, %if.end.92
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %112 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %113 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %114 = load i32, i32* %y1, align 4, !tbaa !5
  %call118 = call i32 @start_margin_set(%struct.gx_device_s* %112, %struct.line_list_s* %113, i32 %114) #5
  store i32 %call118, i32* %code, align 4, !tbaa !5
  %115 = load i32, i32* %code, align 4, !tbaa !5
  %cmp119 = icmp slt i32 %115, 0
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.end.117
  %116 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %116, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.122:                                       ; preds = %if.end.117
  %117 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool123 = icmp ne i32 %117, 0
  br i1 %tobool123, label %if.then.125, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.122
  %118 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool124 = icmp ne i32 %118, 0
  br i1 %tobool124, label %if.then.125, label %if.else.482

if.then.125:                                      ; preds = %lor.lhs.false, %if.end.122
  %119 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %120 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %120) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  %121 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %121, i32 0, i32 13
  %122 = load i32*, i32** %windings, align 8, !tbaa !79
  %123 = bitcast i32* %122 to i8*
  %124 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %124, i32 0, i32 20
  %125 = load i32, i32* %contour_count, align 4, !tbaa !74
  %conv126 = sext i32 %125 to i64
  %mul = mul i64 4, %conv126
  %call127 = call i8* @memset(i8* %123, i32 0, i64 %mul) #6
  br label %do.body.128

do.body.128:                                      ; preds = %if.then.125
  br label %do.cond.129

do.cond.129:                                      ; preds = %do.body.128
  br label %do.end.130

do.end.130:                                       ; preds = %do.cond.129
  %126 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head131 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %126, i32 0, i32 7
  %next132 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head131, i32 0, i32 15
  %127 = load %struct.active_line_s*, %struct.active_line_s** %next132, align 8, !tbaa !201
  store %struct.active_line_s* %127, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.133

for.cond.133:                                     ; preds = %for.inc.475, %do.end.130
  %128 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp134 = icmp ne %struct.active_line_s* %128, null
  br i1 %cmp134, label %for.body.136, label %for.end.477

for.body.136:                                     ; preds = %for.cond.133
  %129 = bitcast i32* %code137 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %129) #1
  br label %do.body.138

do.body.138:                                      ; preds = %for.body.136
  br label %do.cond.139

do.cond.139:                                      ; preds = %do.body.138
  br label %do.end.140

do.end.140:                                       ; preds = %do.cond.139
  br label %do.body.141

do.body.141:                                      ; preds = %do.end.140
  br label %do.cond.142

do.cond.142:                                      ; preds = %do.body.141
  br label %do.end.143

do.end.143:                                       ; preds = %do.cond.142
  %130 = load i32, i32* %inside, align 4, !tbaa !5
  %131 = load i32, i32* %rule, align 4, !tbaa !5
  %and144 = and i32 %130, %131
  %cmp145 = icmp ne i32 %and144, 0
  br i1 %cmp145, label %if.end.192, label %if.then.147

if.then.147:                                      ; preds = %do.end.143
  %132 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %132) #1
  %133 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count148 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %133, i32 0, i32 13
  %134 = load i32, i32* %contour_count148, align 4, !tbaa !186
  store i32 %134, i32* %k, align 4, !tbaa !5
  %135 = bitcast i32* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %135) #1
  %136 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom = sext i32 %136 to i64
  %137 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings149 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %137, i32 0, i32 13
  %138 = load i32*, i32** %windings149, align 8, !tbaa !79
  %arrayidx = getelementptr inbounds i32, i32* %138, i64 %idxprom
  %139 = load i32, i32* %arrayidx, align 4, !tbaa !5
  store i32 %139, i32* %v, align 4, !tbaa !5
  %140 = load i32, i32* %v, align 4, !tbaa !5
  %cmp150 = icmp slt i32 %140, 0
  br i1 %cmp150, label %cond.true.152, label %cond.false.155

cond.true.152:                                    ; preds = %if.then.147
  %141 = load i32, i32* %v, align 4, !tbaa !5
  %and153 = and i32 %141, 1
  %sub154 = sub nsw i32 0, %and153
  br label %cond.end.163

cond.false.155:                                   ; preds = %if.then.147
  %142 = load i32, i32* %v, align 4, !tbaa !5
  %cmp156 = icmp sgt i32 %142, 0
  br i1 %cmp156, label %cond.true.158, label %cond.false.160

cond.true.158:                                    ; preds = %cond.false.155
  %143 = load i32, i32* %v, align 4, !tbaa !5
  %and159 = and i32 %143, 1
  br label %cond.end.161

cond.false.160:                                   ; preds = %cond.false.155
  br label %cond.end.161

cond.end.161:                                     ; preds = %cond.false.160, %cond.true.158
  %cond162 = phi i32 [ %and159, %cond.true.158 ], [ 0, %cond.false.160 ]
  br label %cond.end.163

cond.end.163:                                     ; preds = %cond.end.161, %cond.true.152
  %cond164 = phi i32 [ %sub154, %cond.true.152 ], [ %cond162, %cond.end.161 ]
  %144 = load i32, i32* %inside, align 4, !tbaa !5
  %sub165 = sub nsw i32 %144, %cond164
  store i32 %sub165, i32* %inside, align 4, !tbaa !5
  %145 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction166 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %145, i32 0, i32 8
  %146 = load i32, i32* %direction166, align 4, !tbaa !178
  %147 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom167 = sext i32 %147 to i64
  %148 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings168 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %148, i32 0, i32 13
  %149 = load i32*, i32** %windings168, align 8, !tbaa !79
  %arrayidx169 = getelementptr inbounds i32, i32* %149, i64 %idxprom167
  %150 = load i32, i32* %arrayidx169, align 4, !tbaa !5
  %add170 = add nsw i32 %150, %146
  store i32 %add170, i32* %arrayidx169, align 4, !tbaa !5
  store i32 %add170, i32* %v, align 4, !tbaa !5
  %151 = load i32, i32* %v, align 4, !tbaa !5
  %cmp171 = icmp slt i32 %151, 0
  br i1 %cmp171, label %cond.true.173, label %cond.false.176

cond.true.173:                                    ; preds = %cond.end.163
  %152 = load i32, i32* %v, align 4, !tbaa !5
  %and174 = and i32 %152, 1
  %sub175 = sub nsw i32 0, %and174
  br label %cond.end.184

cond.false.176:                                   ; preds = %cond.end.163
  %153 = load i32, i32* %v, align 4, !tbaa !5
  %cmp177 = icmp sgt i32 %153, 0
  br i1 %cmp177, label %cond.true.179, label %cond.false.181

cond.true.179:                                    ; preds = %cond.false.176
  %154 = load i32, i32* %v, align 4, !tbaa !5
  %and180 = and i32 %154, 1
  br label %cond.end.182

cond.false.181:                                   ; preds = %cond.false.176
  br label %cond.end.182

cond.end.182:                                     ; preds = %cond.false.181, %cond.true.179
  %cond183 = phi i32 [ %and180, %cond.true.179 ], [ 0, %cond.false.181 ]
  br label %cond.end.184

cond.end.184:                                     ; preds = %cond.end.182, %cond.true.173
  %cond185 = phi i32 [ %sub175, %cond.true.173 ], [ %cond183, %cond.end.182 ]
  %155 = load i32, i32* %inside, align 4, !tbaa !5
  %add186 = add nsw i32 %155, %cond185
  store i32 %add186, i32* %inside, align 4, !tbaa !5
  %156 = bitcast i32* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %156) #1
  %157 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %157) #1
  %158 = load i32, i32* %inside, align 4, !tbaa !5
  %159 = load i32, i32* %rule, align 4, !tbaa !5
  %and187 = and i32 %158, %159
  %cmp188 = icmp ne i32 %and187, 0
  br i1 %cmp188, label %if.then.190, label %if.end.191

if.then.190:                                      ; preds = %cond.end.184
  %160 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %160, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.191

if.end.191:                                       ; preds = %if.then.190, %cond.end.184
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.472

if.end.192:                                       ; preds = %do.end.143
  %161 = bitcast i32* %k193 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %161) #1
  %162 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count194 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %162, i32 0, i32 13
  %163 = load i32, i32* %contour_count194, align 4, !tbaa !186
  store i32 %163, i32* %k193, align 4, !tbaa !5
  %164 = bitcast i32* %v195 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %164) #1
  %165 = load i32, i32* %k193, align 4, !tbaa !5
  %idxprom196 = sext i32 %165 to i64
  %166 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings197 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %166, i32 0, i32 13
  %167 = load i32*, i32** %windings197, align 8, !tbaa !79
  %arrayidx198 = getelementptr inbounds i32, i32* %167, i64 %idxprom196
  %168 = load i32, i32* %arrayidx198, align 4, !tbaa !5
  store i32 %168, i32* %v195, align 4, !tbaa !5
  %169 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp199 = icmp slt i32 %169, 0
  br i1 %cmp199, label %cond.true.201, label %cond.false.204

cond.true.201:                                    ; preds = %if.end.192
  %170 = load i32, i32* %v195, align 4, !tbaa !5
  %and202 = and i32 %170, 1
  %sub203 = sub nsw i32 0, %and202
  br label %cond.end.212

cond.false.204:                                   ; preds = %if.end.192
  %171 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp205 = icmp sgt i32 %171, 0
  br i1 %cmp205, label %cond.true.207, label %cond.false.209

cond.true.207:                                    ; preds = %cond.false.204
  %172 = load i32, i32* %v195, align 4, !tbaa !5
  %and208 = and i32 %172, 1
  br label %cond.end.210

cond.false.209:                                   ; preds = %cond.false.204
  br label %cond.end.210

cond.end.210:                                     ; preds = %cond.false.209, %cond.true.207
  %cond211 = phi i32 [ %and208, %cond.true.207 ], [ 0, %cond.false.209 ]
  br label %cond.end.212

cond.end.212:                                     ; preds = %cond.end.210, %cond.true.201
  %cond213 = phi i32 [ %sub203, %cond.true.201 ], [ %cond211, %cond.end.210 ]
  %173 = load i32, i32* %inside, align 4, !tbaa !5
  %sub214 = sub nsw i32 %173, %cond213
  store i32 %sub214, i32* %inside, align 4, !tbaa !5
  %174 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction215 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %174, i32 0, i32 8
  %175 = load i32, i32* %direction215, align 4, !tbaa !178
  %176 = load i32, i32* %k193, align 4, !tbaa !5
  %idxprom216 = sext i32 %176 to i64
  %177 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings217 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %177, i32 0, i32 13
  %178 = load i32*, i32** %windings217, align 8, !tbaa !79
  %arrayidx218 = getelementptr inbounds i32, i32* %178, i64 %idxprom216
  %179 = load i32, i32* %arrayidx218, align 4, !tbaa !5
  %add219 = add nsw i32 %179, %175
  store i32 %add219, i32* %arrayidx218, align 4, !tbaa !5
  store i32 %add219, i32* %v195, align 4, !tbaa !5
  %180 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp220 = icmp slt i32 %180, 0
  br i1 %cmp220, label %cond.true.222, label %cond.false.225

cond.true.222:                                    ; preds = %cond.end.212
  %181 = load i32, i32* %v195, align 4, !tbaa !5
  %and223 = and i32 %181, 1
  %sub224 = sub nsw i32 0, %and223
  br label %cond.end.233

cond.false.225:                                   ; preds = %cond.end.212
  %182 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp226 = icmp sgt i32 %182, 0
  br i1 %cmp226, label %cond.true.228, label %cond.false.230

cond.true.228:                                    ; preds = %cond.false.225
  %183 = load i32, i32* %v195, align 4, !tbaa !5
  %and229 = and i32 %183, 1
  br label %cond.end.231

cond.false.230:                                   ; preds = %cond.false.225
  br label %cond.end.231

cond.end.231:                                     ; preds = %cond.false.230, %cond.true.228
  %cond232 = phi i32 [ %and229, %cond.true.228 ], [ 0, %cond.false.230 ]
  br label %cond.end.233

cond.end.233:                                     ; preds = %cond.end.231, %cond.true.222
  %cond234 = phi i32 [ %sub224, %cond.true.222 ], [ %cond232, %cond.end.231 ]
  %184 = load i32, i32* %inside, align 4, !tbaa !5
  %add235 = add nsw i32 %184, %cond234
  store i32 %add235, i32* %inside, align 4, !tbaa !5
  %185 = bitcast i32* %v195 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %185) #1
  %186 = bitcast i32* %k193 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %186) #1
  %187 = load i32, i32* %inside, align 4, !tbaa !5
  %188 = load i32, i32* %rule, align 4, !tbaa !5
  %and236 = and i32 %187, %188
  %cmp237 = icmp ne i32 %and236, 0
  br i1 %cmp237, label %if.then.239, label %if.end.240

if.then.239:                                      ; preds = %cond.end.233
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.472

if.end.240:                                       ; preds = %cond.end.233
  %189 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next241 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %189, i32 0, i32 15
  %190 = load %struct.active_line_s*, %struct.active_line_s** %next241, align 8, !tbaa !189
  %cmp242 = icmp ne %struct.active_line_s* %190, null
  br i1 %cmp242, label %land.lhs.true, label %if.end.299

land.lhs.true:                                    ; preds = %if.end.240
  %191 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current244 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %191, i32 0, i32 5
  %192 = load i32, i32* %x_current244, align 4, !tbaa !204
  %193 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next245 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %193, i32 0, i32 15
  %194 = load %struct.active_line_s*, %struct.active_line_s** %next245, align 8, !tbaa !189
  %x_current246 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %194, i32 0, i32 5
  %195 = load i32, i32* %x_current246, align 4, !tbaa !204
  %cmp247 = icmp eq i32 %192, %195
  br i1 %cmp247, label %land.lhs.true.249, label %if.end.299

land.lhs.true.249:                                ; preds = %land.lhs.true
  %196 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %196, i32 0, i32 6
  %197 = load i32, i32* %x_next, align 4, !tbaa !205
  %198 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next250 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %198, i32 0, i32 15
  %199 = load %struct.active_line_s*, %struct.active_line_s** %next250, align 8, !tbaa !189
  %x_next251 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %199, i32 0, i32 6
  %200 = load i32, i32* %x_next251, align 4, !tbaa !205
  %cmp252 = icmp eq i32 %197, %200
  br i1 %cmp252, label %if.then.254, label %if.end.299

if.then.254:                                      ; preds = %land.lhs.true.249
  %201 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next255 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %201, i32 0, i32 15
  %202 = load %struct.active_line_s*, %struct.active_line_s** %next255, align 8, !tbaa !189
  store %struct.active_line_s* %202, %struct.active_line_s** %alp, align 8, !tbaa !1
  %203 = bitcast i32* %k256 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %203) #1
  %204 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count257 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %204, i32 0, i32 13
  %205 = load i32, i32* %contour_count257, align 4, !tbaa !186
  store i32 %205, i32* %k256, align 4, !tbaa !5
  %206 = bitcast i32* %v258 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %206) #1
  %207 = load i32, i32* %k256, align 4, !tbaa !5
  %idxprom259 = sext i32 %207 to i64
  %208 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings260 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %208, i32 0, i32 13
  %209 = load i32*, i32** %windings260, align 8, !tbaa !79
  %arrayidx261 = getelementptr inbounds i32, i32* %209, i64 %idxprom259
  %210 = load i32, i32* %arrayidx261, align 4, !tbaa !5
  store i32 %210, i32* %v258, align 4, !tbaa !5
  %211 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp262 = icmp slt i32 %211, 0
  br i1 %cmp262, label %cond.true.264, label %cond.false.267

cond.true.264:                                    ; preds = %if.then.254
  %212 = load i32, i32* %v258, align 4, !tbaa !5
  %and265 = and i32 %212, 1
  %sub266 = sub nsw i32 0, %and265
  br label %cond.end.275

cond.false.267:                                   ; preds = %if.then.254
  %213 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp268 = icmp sgt i32 %213, 0
  br i1 %cmp268, label %cond.true.270, label %cond.false.272

cond.true.270:                                    ; preds = %cond.false.267
  %214 = load i32, i32* %v258, align 4, !tbaa !5
  %and271 = and i32 %214, 1
  br label %cond.end.273

cond.false.272:                                   ; preds = %cond.false.267
  br label %cond.end.273

cond.end.273:                                     ; preds = %cond.false.272, %cond.true.270
  %cond274 = phi i32 [ %and271, %cond.true.270 ], [ 0, %cond.false.272 ]
  br label %cond.end.275

cond.end.275:                                     ; preds = %cond.end.273, %cond.true.264
  %cond276 = phi i32 [ %sub266, %cond.true.264 ], [ %cond274, %cond.end.273 ]
  %215 = load i32, i32* %inside, align 4, !tbaa !5
  %sub277 = sub nsw i32 %215, %cond276
  store i32 %sub277, i32* %inside, align 4, !tbaa !5
  %216 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction278 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %216, i32 0, i32 8
  %217 = load i32, i32* %direction278, align 4, !tbaa !178
  %218 = load i32, i32* %k256, align 4, !tbaa !5
  %idxprom279 = sext i32 %218 to i64
  %219 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings280 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %219, i32 0, i32 13
  %220 = load i32*, i32** %windings280, align 8, !tbaa !79
  %arrayidx281 = getelementptr inbounds i32, i32* %220, i64 %idxprom279
  %221 = load i32, i32* %arrayidx281, align 4, !tbaa !5
  %add282 = add nsw i32 %221, %217
  store i32 %add282, i32* %arrayidx281, align 4, !tbaa !5
  store i32 %add282, i32* %v258, align 4, !tbaa !5
  %222 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp283 = icmp slt i32 %222, 0
  br i1 %cmp283, label %cond.true.285, label %cond.false.288

cond.true.285:                                    ; preds = %cond.end.275
  %223 = load i32, i32* %v258, align 4, !tbaa !5
  %and286 = and i32 %223, 1
  %sub287 = sub nsw i32 0, %and286
  br label %cond.end.296

cond.false.288:                                   ; preds = %cond.end.275
  %224 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp289 = icmp sgt i32 %224, 0
  br i1 %cmp289, label %cond.true.291, label %cond.false.293

cond.true.291:                                    ; preds = %cond.false.288
  %225 = load i32, i32* %v258, align 4, !tbaa !5
  %and292 = and i32 %225, 1
  br label %cond.end.294

cond.false.293:                                   ; preds = %cond.false.288
  br label %cond.end.294

cond.end.294:                                     ; preds = %cond.false.293, %cond.true.291
  %cond295 = phi i32 [ %and292, %cond.true.291 ], [ 0, %cond.false.293 ]
  br label %cond.end.296

cond.end.296:                                     ; preds = %cond.end.294, %cond.true.285
  %cond297 = phi i32 [ %sub287, %cond.true.285 ], [ %cond295, %cond.end.294 ]
  %226 = load i32, i32* %inside, align 4, !tbaa !5
  %add298 = add nsw i32 %226, %cond297
  store i32 %add298, i32* %inside, align 4, !tbaa !5
  %227 = bitcast i32* %v258 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %227) #1
  %228 = bitcast i32* %k256 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %228) #1
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.472

if.end.299:                                       ; preds = %land.lhs.true.249, %land.lhs.true, %if.end.240
  br label %do.body.300

do.body.300:                                      ; preds = %if.end.299
  br label %do.cond.301

do.cond.301:                                      ; preds = %do.body.300
  br label %do.end.302

do.end.302:                                       ; preds = %do.cond.301
  %229 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %229) #1
  %230 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %231 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %231, i32 0, i32 0
  %y303 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %232 = load i32, i32* %y303, align 4, !tbaa !38
  %cmp304 = icmp sgt i32 %230, %232
  br i1 %cmp304, label %cond.true.306, label %cond.false.307

cond.true.306:                                    ; preds = %do.end.302
  %233 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.311

cond.false.307:                                   ; preds = %do.end.302
  %pbox308 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %234 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox308, align 8, !tbaa !97
  %p309 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %234, i32 0, i32 0
  %y310 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p309, i32 0, i32 1
  %235 = load i32, i32* %y310, align 4, !tbaa !38
  br label %cond.end.311

cond.end.311:                                     ; preds = %cond.false.307, %cond.true.306
  %cond312 = phi i32 [ %233, %cond.true.306 ], [ %235, %cond.false.307 ]
  store i32 %cond312, i32* %ybot, align 4, !tbaa !5
  %236 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %236) #1
  %237 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox313 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %238 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox313, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %238, i32 0, i32 1
  %y314 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %239 = load i32, i32* %y314, align 4, !tbaa !42
  %cmp315 = icmp slt i32 %237, %239
  br i1 %cmp315, label %cond.true.317, label %cond.false.318

cond.true.317:                                    ; preds = %cond.end.311
  %240 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.322

cond.false.318:                                   ; preds = %cond.end.311
  %pbox319 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %241 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox319, align 8, !tbaa !97
  %q320 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %241, i32 0, i32 1
  %y321 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q320, i32 0, i32 1
  %242 = load i32, i32* %y321, align 4, !tbaa !42
  br label %cond.end.322

cond.end.322:                                     ; preds = %cond.false.318, %cond.true.317
  %cond323 = phi i32 [ %240, %cond.true.317 ], [ %242, %cond.false.318 ]
  store i32 %cond323, i32* %ytop, align 4, !tbaa !5
  %243 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end324 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %243, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end324, i32 0, i32 0
  %244 = load i32, i32* %x, align 4, !tbaa !194
  %245 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start325 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %245, i32 0, i32 0
  %x326 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start325, i32 0, i32 0
  %246 = load i32, i32* %x326, align 4, !tbaa !193
  %cmp327 = icmp eq i32 %244, %246
  br i1 %cmp327, label %land.lhs.true.329, label %if.else.385

land.lhs.true.329:                                ; preds = %cond.end.322
  %247 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end330 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %247, i32 0, i32 1
  %x331 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end330, i32 0, i32 0
  %248 = load i32, i32* %x331, align 4, !tbaa !194
  %249 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start332 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %249, i32 0, i32 0
  %x333 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start332, i32 0, i32 0
  %250 = load i32, i32* %x333, align 4, !tbaa !193
  %cmp334 = icmp eq i32 %248, %250
  br i1 %cmp334, label %if.then.336, label %if.else.385

if.then.336:                                      ; preds = %land.lhs.true.329
  %251 = load i32, i32* %ytop, align 4, !tbaa !5
  %252 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp337 = icmp sgt i32 %251, %252
  br i1 %cmp337, label %if.then.339, label %if.else.383

if.then.339:                                      ; preds = %if.then.336
  %253 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %253) #1
  %254 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv340 = sext i32 %254 to i64
  %add341 = add nsw i64 %conv340, 127
  %shr = ashr i64 %add341, 8
  %conv342 = trunc i64 %shr to i32
  store i32 %conv342, i32* %yi, align 4, !tbaa !5
  %255 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %255) #1
  %256 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv343 = sext i32 %256 to i64
  %add344 = add nsw i64 %conv343, 127
  %shr345 = ashr i64 %add344, 8
  %conv346 = trunc i64 %shr345 to i32
  %257 = load i32, i32* %yi, align 4, !tbaa !5
  %sub347 = sub nsw i32 %conv346, %257
  store i32 %sub347, i32* %hi, align 4, !tbaa !5
  %258 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %258) #1
  %259 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end348 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %259, i32 0, i32 1
  %x349 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end348, i32 0, i32 0
  %260 = load i32, i32* %x349, align 4, !tbaa !194
  %sub350 = sub nsw i32 %260, 0
  %conv351 = sext i32 %sub350 to i64
  %add352 = add nsw i64 %conv351, 127
  %shr353 = ashr i64 %add352, 8
  %conv354 = trunc i64 %shr353 to i32
  store i32 %conv354, i32* %xli, align 4, !tbaa !5
  %261 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %261) #1
  %262 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end355 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %262, i32 0, i32 1
  %x356 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end355, i32 0, i32 0
  %263 = load i32, i32* %x356, align 4, !tbaa !194
  %add357 = add nsw i32 %263, 0
  %conv358 = sext i32 %add357 to i64
  %add359 = add nsw i64 %conv358, 127
  %shr360 = ashr i64 %add359, 8
  %conv361 = trunc i64 %shr360 to i32
  store i32 %conv361, i32* %xi, align 4, !tbaa !5
  %264 = load i32, i32* %xli, align 4, !tbaa !5
  %265 = load i32, i32* %xi, align 4, !tbaa !5
  %cmp362 = icmp eq i32 %264, %265
  br i1 %cmp362, label %if.then.364, label %if.end.376

if.then.364:                                      ; preds = %if.then.339
  %266 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %266) #1
  %267 = load i32, i32* %xli, align 4, !tbaa !5
  %shl = shl i32 %267, 8
  store i32 %shl, i32* %xx, align 4, !tbaa !5
  %268 = load i32, i32* %xx, align 4, !tbaa !5
  %269 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end365 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %269, i32 0, i32 1
  %x366 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end365, i32 0, i32 0
  %270 = load i32, i32* %x366, align 4, !tbaa !194
  %sub367 = sub nsw i32 %268, %270
  %271 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end368 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %271, i32 0, i32 1
  %x369 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end368, i32 0, i32 0
  %272 = load i32, i32* %x369, align 4, !tbaa !194
  %273 = load i32, i32* %xx, align 4, !tbaa !5
  %sub370 = sub nsw i32 %272, %273
  %cmp371 = icmp slt i32 %sub367, %sub370
  br i1 %cmp371, label %if.then.373, label %if.else.374

if.then.373:                                      ; preds = %if.then.364
  %274 = load i32, i32* %xi, align 4, !tbaa !5
  %inc = add nsw i32 %274, 1
  store i32 %inc, i32* %xi, align 4, !tbaa !5
  br label %if.end.375

if.else.374:                                      ; preds = %if.then.364
  %275 = load i32, i32* %xli, align 4, !tbaa !5
  %dec = add nsw i32 %275, -1
  store i32 %dec, i32* %xli, align 4, !tbaa !5
  br label %if.end.375

if.end.375:                                       ; preds = %if.else.374, %if.then.373
  %276 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %276) #1
  br label %if.end.376

if.end.376:                                       ; preds = %if.end.375, %if.then.339
  br label %do.body.377

do.body.377:                                      ; preds = %if.end.376
  br label %do.cond.378

do.cond.378:                                      ; preds = %do.body.377
  br label %do.end.379

do.end.379:                                       ; preds = %do.cond.378
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %277 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %dev380 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %278 = load %struct.gx_device_s*, %struct.gx_device_s** %dev380, align 8, !tbaa !96
  %279 = load i32, i32* %xli, align 4, !tbaa !5
  %280 = load i32, i32* %yi, align 4, !tbaa !5
  %281 = load i32, i32* %xi, align 4, !tbaa !5
  %282 = load i32, i32* %xli, align 4, !tbaa !5
  %sub381 = sub nsw i32 %281, %282
  %283 = load i32, i32* %hi, align 4, !tbaa !5
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %284 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %284, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %285 = load i64, i64* %pure, align 8, !tbaa !203
  %call382 = call i32 %277(%struct.gx_device_s* %278, i32 %279, i32 %280, i32 %sub381, i32 %283, i64 %285) #5
  store i32 %call382, i32* %code137, align 4, !tbaa !5
  %286 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %286) #1
  %287 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %287) #1
  %288 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %288) #1
  %289 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %289) #1
  br label %if.end.384

if.else.383:                                      ; preds = %if.then.336
  store i32 0, i32* %code137, align 4, !tbaa !5
  br label %if.end.384

if.end.384:                                       ; preds = %if.else.383, %do.end.379
  br label %if.end.443

if.else.385:                                      ; preds = %land.lhs.true.329, %cond.end.322
  %290 = load i32, i32* %ybot, align 4, !tbaa !5
  %291 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp386 = icmp slt i32 %290, %291
  br i1 %cmp386, label %if.then.388, label %if.else.441

if.then.388:                                      ; preds = %if.else.385
  %292 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %292) #1
  %293 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %293) #1
  %start389 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %294 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start390 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %294, i32 0, i32 0
  %295 = bitcast %struct.gs_fixed_point_s* %start389 to i8*
  %296 = bitcast %struct.gs_fixed_point_s* %start390 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %295, i8* %296, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end391 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %297 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end392 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %297, i32 0, i32 1
  %298 = bitcast %struct.gs_fixed_point_s* %end391 to i8*
  %299 = bitcast %struct.gs_fixed_point_s* %end392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %298, i8* %299, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start393 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %300 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start394 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %300, i32 0, i32 0
  %301 = bitcast %struct.gs_fixed_point_s* %start393 to i8*
  %302 = bitcast %struct.gs_fixed_point_s* %start394 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %301, i8* %302, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end395 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %303 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end396 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %303, i32 0, i32 1
  %304 = bitcast %struct.gs_fixed_point_s* %end395 to i8*
  %305 = bitcast %struct.gs_fixed_point_s* %end396 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %304, i8* %305, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.397

do.body.397:                                      ; preds = %if.then.388
  br label %do.cond.398

do.cond.398:                                      ; preds = %do.body.397
  br label %do.end.399

do.end.399:                                       ; preds = %do.cond.398
  %306 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.start(i64 4, i8* %306) #1
  store i32 4, i32* %flags, align 4, !tbaa !5
  %307 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start400 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %307, i32 0, i32 0
  %x401 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start400, i32 0, i32 0
  %308 = load i32, i32* %x401, align 4, !tbaa !193
  %309 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start402 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %309, i32 0, i32 0
  %x403 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start402, i32 0, i32 0
  %310 = load i32, i32* %x403, align 4, !tbaa !193
  %cmp404 = icmp eq i32 %308, %310
  br i1 %cmp404, label %land.lhs.true.406, label %if.end.418

land.lhs.true.406:                                ; preds = %do.end.399
  %311 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start407 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %311, i32 0, i32 0
  %y408 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start407, i32 0, i32 1
  %312 = load i32, i32* %y408, align 4, !tbaa !187
  %313 = load i32, i32* %y, align 4, !tbaa !5
  %cmp409 = icmp eq i32 %312, %313
  br i1 %cmp409, label %land.lhs.true.411, label %if.end.418

land.lhs.true.411:                                ; preds = %land.lhs.true.406
  %314 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start412 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %314, i32 0, i32 0
  %y413 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start412, i32 0, i32 1
  %315 = load i32, i32* %y413, align 4, !tbaa !187
  %316 = load i32, i32* %y, align 4, !tbaa !5
  %cmp414 = icmp eq i32 %315, %316
  br i1 %cmp414, label %if.then.416, label %if.end.418

if.then.416:                                      ; preds = %land.lhs.true.411
  %317 = load i32, i32* %flags, align 4, !tbaa !5
  %or417 = or i32 %317, 1
  store i32 %or417, i32* %flags, align 4, !tbaa !5
  br label %if.end.418

if.end.418:                                       ; preds = %if.then.416, %land.lhs.true.411, %land.lhs.true.406, %do.end.399
  %318 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end419 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %318, i32 0, i32 1
  %x420 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end419, i32 0, i32 0
  %319 = load i32, i32* %x420, align 4, !tbaa !194
  %320 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end421 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %320, i32 0, i32 1
  %x422 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end421, i32 0, i32 0
  %321 = load i32, i32* %x422, align 4, !tbaa !194
  %cmp423 = icmp eq i32 %319, %321
  br i1 %cmp423, label %land.lhs.true.425, label %if.end.437

land.lhs.true.425:                                ; preds = %if.end.418
  %322 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end426 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %322, i32 0, i32 1
  %y427 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end426, i32 0, i32 1
  %323 = load i32, i32* %y427, align 4, !tbaa !195
  %324 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp428 = icmp eq i32 %323, %324
  br i1 %cmp428, label %land.lhs.true.430, label %if.end.437

land.lhs.true.430:                                ; preds = %land.lhs.true.425
  %325 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end431 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %325, i32 0, i32 1
  %y432 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end431, i32 0, i32 1
  %326 = load i32, i32* %y432, align 4, !tbaa !195
  %327 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp433 = icmp eq i32 %326, %327
  br i1 %cmp433, label %if.then.435, label %if.end.437

if.then.435:                                      ; preds = %land.lhs.true.430
  %328 = load i32, i32* %flags, align 4, !tbaa !5
  %or436 = or i32 %328, 1
  store i32 %or436, i32* %flags, align 4, !tbaa !5
  br label %if.end.437

if.end.437:                                       ; preds = %if.then.435, %land.lhs.true.430, %land.lhs.true.425, %if.end.418
  %dev438 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %329 = load %struct.gx_device_s*, %struct.gx_device_s** %dev438, align 8, !tbaa !96
  %330 = load i32, i32* %ybot, align 4, !tbaa !5
  %331 = load i32, i32* %ytop, align 4, !tbaa !5
  %332 = load i32, i32* %flags, align 4, !tbaa !5
  %pdevc439 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %333 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc439, align 8, !tbaa !90
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %334 = load i32, i32* %lop, align 4, !tbaa !91
  %call440 = call i32 @gx_fill_trapezoid_cf_fd(%struct.gx_device_s* %329, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %330, i32 %331, i32 %332, %struct.gx_device_color_s* %333, i32 %334) #5
  store i32 %call440, i32* %code137, align 4, !tbaa !5
  %335 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.end(i64 4, i8* %335) #1
  %336 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %336) #1
  %337 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %337) #1
  br label %if.end.442

if.else.441:                                      ; preds = %if.else.385
  store i32 0, i32* %code137, align 4, !tbaa !5
  br label %if.end.442

if.end.442:                                       ; preds = %if.else.441, %if.end.437
  br label %if.end.443

if.end.443:                                       ; preds = %if.end.442, %if.end.384
  %338 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp444 = icmp slt i32 %338, 0
  br i1 %cmp444, label %if.then.446, label %if.end.447

if.then.446:                                      ; preds = %if.end.443
  %339 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %339, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.464

if.end.447:                                       ; preds = %if.end.443
  %340 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %341 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %342 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %343 = load i32, i32* %y, align 4, !tbaa !5
  %344 = load i32, i32* %y1, align 4, !tbaa !5
  %call448 = call i32 @complete_margin(%struct.line_list_s* %340, %struct.active_line_s* %341, %struct.active_line_s* %342, i32 %343, i32 %344) #5
  store i32 %call448, i32* %code137, align 4, !tbaa !5
  %345 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp449 = icmp slt i32 %345, 0
  br i1 %cmp449, label %if.then.451, label %if.end.452

if.then.451:                                      ; preds = %if.end.447
  %346 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %346, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.464

if.end.452:                                       ; preds = %if.end.447
  %347 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %348 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %349 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %350 = load i32, i32* %y, align 4, !tbaa !5
  %351 = load i32, i32* %y1, align 4, !tbaa !5
  %call453 = call i32 @margin_interior(%struct.line_list_s* %347, %struct.active_line_s* %348, %struct.active_line_s* %349, i32 %350, i32 %351) #5
  store i32 %call453, i32* %code137, align 4, !tbaa !5
  %352 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp454 = icmp slt i32 %352, 0
  br i1 %cmp454, label %if.then.456, label %if.end.457

if.then.456:                                      ; preds = %if.end.452
  %353 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %353, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.464

if.end.457:                                       ; preds = %if.end.452
  %354 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %355 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %356 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %357 = load i32, i32* %y, align 4, !tbaa !5
  %358 = load i32, i32* %y1, align 4, !tbaa !5
  %call458 = call i32 @add_margin(%struct.line_list_s* %354, %struct.active_line_s* %355, %struct.active_line_s* %356, i32 %357, i32 %358) #5
  store i32 %call458, i32* %code137, align 4, !tbaa !5
  %359 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp459 = icmp slt i32 %359, 0
  br i1 %cmp459, label %if.then.461, label %if.end.462

if.then.461:                                      ; preds = %if.end.457
  %360 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %360, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.464

if.end.462:                                       ; preds = %if.end.457
  %361 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %362 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %363 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %364 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %365 = load i32, i32* %y, align 4, !tbaa !5
  %366 = load i32, i32* %y1, align 4, !tbaa !5
  %call463 = call i32 @process_h_lists(%struct.line_list_s* %361, %struct.active_line_s* %362, %struct.active_line_s* %363, %struct.active_line_s* %364, i32 %365, i32 %366) #5
  store i32 %call463, i32* %code137, align 4, !tbaa !5
  %367 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %367, %struct.active_line_s** %plp, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.464

cleanup.464:                                      ; preds = %if.end.462, %if.then.461, %if.then.456, %if.then.451, %if.then.446
  %368 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %368) #1
  %369 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %369) #1
  %cleanup.dest.466 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.466, label %cleanup.472 [
    i32 0, label %cleanup.cont.467
  ]

cleanup.cont.467:                                 ; preds = %cleanup.464
  %370 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp468 = icmp slt i32 %370, 0
  br i1 %cmp468, label %if.then.470, label %if.end.471

if.then.470:                                      ; preds = %cleanup.cont.467
  %371 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %371, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.472

if.end.471:                                       ; preds = %cleanup.cont.467
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.472

cleanup.472:                                      ; preds = %if.end.471, %if.then.470, %cleanup.464, %cond.end.296, %if.then.239, %if.end.191
  %372 = bitcast i32* %code137 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %372) #1
  %cleanup.dest.473 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.473, label %cleanup.478 [
    i32 0, label %cleanup.cont.474
    i32 15, label %for.inc.475
  ]

cleanup.cont.474:                                 ; preds = %cleanup.472
  br label %for.inc.475

for.inc.475:                                      ; preds = %cleanup.cont.474, %cleanup.472
  %373 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next476 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %373, i32 0, i32 15
  %374 = load %struct.active_line_s*, %struct.active_line_s** %next476, align 8, !tbaa !189
  store %struct.active_line_s* %374, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.133

for.end.477:                                      ; preds = %for.cond.133
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.478

cleanup.478:                                      ; preds = %for.end.477, %cleanup.472
  %375 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %375) #1
  %376 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %376) #1
  %cleanup.dest.480 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.480, label %cleanup.632 [
    i32 0, label %cleanup.cont.481
  ]

cleanup.cont.481:                                 ; preds = %cleanup.478
  br label %if.end.614

if.else.482:                                      ; preds = %lor.lhs.false
  %377 = bitcast %struct.active_line_s** %flp483 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %377) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp483, align 8, !tbaa !1
  %378 = bitcast i32* %inside484 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %378) #1
  store i32 0, i32* %inside484, align 4, !tbaa !5
  %379 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings485 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %379, i32 0, i32 13
  %380 = load i32*, i32** %windings485, align 8, !tbaa !79
  %381 = bitcast i32* %380 to i8*
  %382 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count486 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %382, i32 0, i32 20
  %383 = load i32, i32* %contour_count486, align 4, !tbaa !74
  %conv487 = sext i32 %383 to i64
  %mul488 = mul i64 4, %conv487
  %call489 = call i8* @memset(i8* %381, i32 0, i64 %mul488) #6
  %384 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head490 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %384, i32 0, i32 7
  %next491 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head490, i32 0, i32 15
  %385 = load %struct.active_line_s*, %struct.active_line_s** %next491, align 8, !tbaa !201
  store %struct.active_line_s* %385, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.492

for.cond.492:                                     ; preds = %for.inc.607, %if.else.482
  %386 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp493 = icmp ne %struct.active_line_s* %386, null
  br i1 %cmp493, label %for.body.495, label %for.end.609

for.body.495:                                     ; preds = %for.cond.492
  %387 = load i32, i32* %inside484, align 4, !tbaa !5
  %388 = load i32, i32* %rule, align 4, !tbaa !5
  %and496 = and i32 %387, %388
  %cmp497 = icmp ne i32 %and496, 0
  br i1 %cmp497, label %if.end.548, label %if.then.499

if.then.499:                                      ; preds = %for.body.495
  %389 = bitcast i32* %k500 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %389) #1
  %390 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count501 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %390, i32 0, i32 13
  %391 = load i32, i32* %contour_count501, align 4, !tbaa !186
  store i32 %391, i32* %k500, align 4, !tbaa !5
  %392 = bitcast i32* %v502 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %392) #1
  %393 = load i32, i32* %k500, align 4, !tbaa !5
  %idxprom503 = sext i32 %393 to i64
  %394 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings504 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %394, i32 0, i32 13
  %395 = load i32*, i32** %windings504, align 8, !tbaa !79
  %arrayidx505 = getelementptr inbounds i32, i32* %395, i64 %idxprom503
  %396 = load i32, i32* %arrayidx505, align 4, !tbaa !5
  store i32 %396, i32* %v502, align 4, !tbaa !5
  %397 = load i32, i32* %v502, align 4, !tbaa !5
  %cmp506 = icmp slt i32 %397, 0
  br i1 %cmp506, label %cond.true.508, label %cond.false.511

cond.true.508:                                    ; preds = %if.then.499
  %398 = load i32, i32* %v502, align 4, !tbaa !5
  %and509 = and i32 %398, 1
  %sub510 = sub nsw i32 0, %and509
  br label %cond.end.519

cond.false.511:                                   ; preds = %if.then.499
  %399 = load i32, i32* %v502, align 4, !tbaa !5
  %cmp512 = icmp sgt i32 %399, 0
  br i1 %cmp512, label %cond.true.514, label %cond.false.516

cond.true.514:                                    ; preds = %cond.false.511
  %400 = load i32, i32* %v502, align 4, !tbaa !5
  %and515 = and i32 %400, 1
  br label %cond.end.517

cond.false.516:                                   ; preds = %cond.false.511
  br label %cond.end.517

cond.end.517:                                     ; preds = %cond.false.516, %cond.true.514
  %cond518 = phi i32 [ %and515, %cond.true.514 ], [ 0, %cond.false.516 ]
  br label %cond.end.519

cond.end.519:                                     ; preds = %cond.end.517, %cond.true.508
  %cond520 = phi i32 [ %sub510, %cond.true.508 ], [ %cond518, %cond.end.517 ]
  %401 = load i32, i32* %inside484, align 4, !tbaa !5
  %sub521 = sub nsw i32 %401, %cond520
  store i32 %sub521, i32* %inside484, align 4, !tbaa !5
  %402 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction522 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %402, i32 0, i32 8
  %403 = load i32, i32* %direction522, align 4, !tbaa !178
  %404 = load i32, i32* %k500, align 4, !tbaa !5
  %idxprom523 = sext i32 %404 to i64
  %405 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings524 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %405, i32 0, i32 13
  %406 = load i32*, i32** %windings524, align 8, !tbaa !79
  %arrayidx525 = getelementptr inbounds i32, i32* %406, i64 %idxprom523
  %407 = load i32, i32* %arrayidx525, align 4, !tbaa !5
  %add526 = add nsw i32 %407, %403
  store i32 %add526, i32* %arrayidx525, align 4, !tbaa !5
  store i32 %add526, i32* %v502, align 4, !tbaa !5
  %408 = load i32, i32* %v502, align 4, !tbaa !5
  %cmp527 = icmp slt i32 %408, 0
  br i1 %cmp527, label %cond.true.529, label %cond.false.532

cond.true.529:                                    ; preds = %cond.end.519
  %409 = load i32, i32* %v502, align 4, !tbaa !5
  %and530 = and i32 %409, 1
  %sub531 = sub nsw i32 0, %and530
  br label %cond.end.540

cond.false.532:                                   ; preds = %cond.end.519
  %410 = load i32, i32* %v502, align 4, !tbaa !5
  %cmp533 = icmp sgt i32 %410, 0
  br i1 %cmp533, label %cond.true.535, label %cond.false.537

cond.true.535:                                    ; preds = %cond.false.532
  %411 = load i32, i32* %v502, align 4, !tbaa !5
  %and536 = and i32 %411, 1
  br label %cond.end.538

cond.false.537:                                   ; preds = %cond.false.532
  br label %cond.end.538

cond.end.538:                                     ; preds = %cond.false.537, %cond.true.535
  %cond539 = phi i32 [ %and536, %cond.true.535 ], [ 0, %cond.false.537 ]
  br label %cond.end.540

cond.end.540:                                     ; preds = %cond.end.538, %cond.true.529
  %cond541 = phi i32 [ %sub531, %cond.true.529 ], [ %cond539, %cond.end.538 ]
  %412 = load i32, i32* %inside484, align 4, !tbaa !5
  %add542 = add nsw i32 %412, %cond541
  store i32 %add542, i32* %inside484, align 4, !tbaa !5
  %413 = bitcast i32* %v502 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %413) #1
  %414 = bitcast i32* %k500 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %414) #1
  %415 = load i32, i32* %inside484, align 4, !tbaa !5
  %416 = load i32, i32* %rule, align 4, !tbaa !5
  %and543 = and i32 %415, %416
  %cmp544 = icmp ne i32 %and543, 0
  br i1 %cmp544, label %if.then.546, label %if.end.547

if.then.546:                                      ; preds = %cond.end.540
  %417 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %417, %struct.active_line_s** %flp483, align 8, !tbaa !1
  br label %if.end.547

if.end.547:                                       ; preds = %if.then.546, %cond.end.540
  br label %for.inc.607

if.end.548:                                       ; preds = %for.body.495
  %418 = bitcast i32* %k549 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %418) #1
  %419 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count550 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %419, i32 0, i32 13
  %420 = load i32, i32* %contour_count550, align 4, !tbaa !186
  store i32 %420, i32* %k549, align 4, !tbaa !5
  %421 = bitcast i32* %v551 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %421) #1
  %422 = load i32, i32* %k549, align 4, !tbaa !5
  %idxprom552 = sext i32 %422 to i64
  %423 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings553 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %423, i32 0, i32 13
  %424 = load i32*, i32** %windings553, align 8, !tbaa !79
  %arrayidx554 = getelementptr inbounds i32, i32* %424, i64 %idxprom552
  %425 = load i32, i32* %arrayidx554, align 4, !tbaa !5
  store i32 %425, i32* %v551, align 4, !tbaa !5
  %426 = load i32, i32* %v551, align 4, !tbaa !5
  %cmp555 = icmp slt i32 %426, 0
  br i1 %cmp555, label %cond.true.557, label %cond.false.560

cond.true.557:                                    ; preds = %if.end.548
  %427 = load i32, i32* %v551, align 4, !tbaa !5
  %and558 = and i32 %427, 1
  %sub559 = sub nsw i32 0, %and558
  br label %cond.end.568

cond.false.560:                                   ; preds = %if.end.548
  %428 = load i32, i32* %v551, align 4, !tbaa !5
  %cmp561 = icmp sgt i32 %428, 0
  br i1 %cmp561, label %cond.true.563, label %cond.false.565

cond.true.563:                                    ; preds = %cond.false.560
  %429 = load i32, i32* %v551, align 4, !tbaa !5
  %and564 = and i32 %429, 1
  br label %cond.end.566

cond.false.565:                                   ; preds = %cond.false.560
  br label %cond.end.566

cond.end.566:                                     ; preds = %cond.false.565, %cond.true.563
  %cond567 = phi i32 [ %and564, %cond.true.563 ], [ 0, %cond.false.565 ]
  br label %cond.end.568

cond.end.568:                                     ; preds = %cond.end.566, %cond.true.557
  %cond569 = phi i32 [ %sub559, %cond.true.557 ], [ %cond567, %cond.end.566 ]
  %430 = load i32, i32* %inside484, align 4, !tbaa !5
  %sub570 = sub nsw i32 %430, %cond569
  store i32 %sub570, i32* %inside484, align 4, !tbaa !5
  %431 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction571 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %431, i32 0, i32 8
  %432 = load i32, i32* %direction571, align 4, !tbaa !178
  %433 = load i32, i32* %k549, align 4, !tbaa !5
  %idxprom572 = sext i32 %433 to i64
  %434 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings573 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %434, i32 0, i32 13
  %435 = load i32*, i32** %windings573, align 8, !tbaa !79
  %arrayidx574 = getelementptr inbounds i32, i32* %435, i64 %idxprom572
  %436 = load i32, i32* %arrayidx574, align 4, !tbaa !5
  %add575 = add nsw i32 %436, %432
  store i32 %add575, i32* %arrayidx574, align 4, !tbaa !5
  store i32 %add575, i32* %v551, align 4, !tbaa !5
  %437 = load i32, i32* %v551, align 4, !tbaa !5
  %cmp576 = icmp slt i32 %437, 0
  br i1 %cmp576, label %cond.true.578, label %cond.false.581

cond.true.578:                                    ; preds = %cond.end.568
  %438 = load i32, i32* %v551, align 4, !tbaa !5
  %and579 = and i32 %438, 1
  %sub580 = sub nsw i32 0, %and579
  br label %cond.end.589

cond.false.581:                                   ; preds = %cond.end.568
  %439 = load i32, i32* %v551, align 4, !tbaa !5
  %cmp582 = icmp sgt i32 %439, 0
  br i1 %cmp582, label %cond.true.584, label %cond.false.586

cond.true.584:                                    ; preds = %cond.false.581
  %440 = load i32, i32* %v551, align 4, !tbaa !5
  %and585 = and i32 %440, 1
  br label %cond.end.587

cond.false.586:                                   ; preds = %cond.false.581
  br label %cond.end.587

cond.end.587:                                     ; preds = %cond.false.586, %cond.true.584
  %cond588 = phi i32 [ %and585, %cond.true.584 ], [ 0, %cond.false.586 ]
  br label %cond.end.589

cond.end.589:                                     ; preds = %cond.end.587, %cond.true.578
  %cond590 = phi i32 [ %sub580, %cond.true.578 ], [ %cond588, %cond.end.587 ]
  %441 = load i32, i32* %inside484, align 4, !tbaa !5
  %add591 = add nsw i32 %441, %cond590
  store i32 %add591, i32* %inside484, align 4, !tbaa !5
  %442 = bitcast i32* %v551 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %442) #1
  %443 = bitcast i32* %k549 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %443) #1
  %444 = load i32, i32* %inside484, align 4, !tbaa !5
  %445 = load i32, i32* %rule, align 4, !tbaa !5
  %and592 = and i32 %444, %445
  %cmp593 = icmp ne i32 %and592, 0
  br i1 %cmp593, label %if.then.595, label %if.end.596

if.then.595:                                      ; preds = %cond.end.589
  br label %for.inc.607

if.end.596:                                       ; preds = %cond.end.589
  %446 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %447 = load %struct.active_line_s*, %struct.active_line_s** %flp483, align 8, !tbaa !1
  %448 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %449 = load i32, i32* %y, align 4, !tbaa !5
  %450 = load i32, i32* %y1, align 4, !tbaa !5
  %call597 = call i32 @continue_margin(%struct.line_list_s* %446, %struct.active_line_s* %447, %struct.active_line_s* %448, i32 %449, i32 %450) #5
  store i32 %call597, i32* %code, align 4, !tbaa !5
  %451 = load i32, i32* %code, align 4, !tbaa !5
  %cmp598 = icmp slt i32 %451, 0
  br i1 %cmp598, label %if.then.600, label %if.end.601

if.then.600:                                      ; preds = %if.end.596
  %452 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %452, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.610

if.end.601:                                       ; preds = %if.end.596
  %453 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %454 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %455 = load %struct.active_line_s*, %struct.active_line_s** %flp483, align 8, !tbaa !1
  %456 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %457 = load i32, i32* %y, align 4, !tbaa !5
  %458 = load i32, i32* %y1, align 4, !tbaa !5
  %call602 = call i32 @process_h_lists(%struct.line_list_s* %453, %struct.active_line_s* %454, %struct.active_line_s* %455, %struct.active_line_s* %456, i32 %457, i32 %458) #5
  store i32 %call602, i32* %code, align 4, !tbaa !5
  %459 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %459, %struct.active_line_s** %plp, align 8, !tbaa !1
  %460 = load i32, i32* %code, align 4, !tbaa !5
  %cmp603 = icmp slt i32 %460, 0
  br i1 %cmp603, label %if.then.605, label %if.end.606

if.then.605:                                      ; preds = %if.end.601
  %461 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %461, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.610

if.end.606:                                       ; preds = %if.end.601
  br label %for.inc.607

for.inc.607:                                      ; preds = %if.end.606, %if.then.595, %if.end.547
  %462 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next608 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %462, i32 0, i32 15
  %463 = load %struct.active_line_s*, %struct.active_line_s** %next608, align 8, !tbaa !189
  store %struct.active_line_s* %463, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.492

for.end.609:                                      ; preds = %for.cond.492
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.610

cleanup.610:                                      ; preds = %for.end.609, %if.then.605, %if.then.600
  %464 = bitcast i32* %inside484 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %464) #1
  %465 = bitcast %struct.active_line_s** %flp483 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %465) #1
  %cleanup.dest.612 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.612, label %cleanup.632 [
    i32 0, label %cleanup.cont.613
  ]

cleanup.cont.613:                                 ; preds = %cleanup.610
  br label %if.end.614

if.end.614:                                       ; preds = %cleanup.cont.613, %cleanup.cont.481
  %466 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %cmp615 = icmp ne %struct.active_line_s* %466, null
  br i1 %cmp615, label %if.then.617, label %if.end.623

if.then.617:                                      ; preds = %if.end.614
  %467 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %468 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %469 = load i32, i32* %y, align 4, !tbaa !5
  %470 = load i32, i32* %y1, align 4, !tbaa !5
  %call618 = call i32 @process_h_lists(%struct.line_list_s* %467, %struct.active_line_s* %468, %struct.active_line_s* null, %struct.active_line_s* null, i32 %469, i32 %470) #5
  store i32 %call618, i32* %code, align 4, !tbaa !5
  %471 = load i32, i32* %code, align 4, !tbaa !5
  %cmp619 = icmp slt i32 %471, 0
  br i1 %cmp619, label %if.then.621, label %if.end.622

if.then.621:                                      ; preds = %if.then.617
  %472 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %472, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.622:                                       ; preds = %if.then.617
  br label %if.end.623

if.end.623:                                       ; preds = %if.end.622, %if.end.614
  %473 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %474 = load i32, i32* %y1, align 4, !tbaa !5
  %call624 = call i32 @move_al_by_y(%struct.line_list_s* %473, i32 %474) #5
  store i32 %call624, i32* %code, align 4, !tbaa !5
  %475 = load i32, i32* %code, align 4, !tbaa !5
  %cmp625 = icmp slt i32 %475, 0
  br i1 %cmp625, label %if.then.627, label %if.end.628

if.then.627:                                      ; preds = %if.end.623
  %476 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %476, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.632

if.end.628:                                       ; preds = %if.end.623
  %477 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0629 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %477, i32 0, i32 8
  %478 = load %struct.active_line_s*, %struct.active_line_s** %h_list0629, align 8, !tbaa !124
  %479 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1630 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %479, i32 0, i32 9
  store %struct.active_line_s* %478, %struct.active_line_s** %h_list1630, align 8, !tbaa !123
  %480 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0631 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %480, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0631, align 8, !tbaa !124
  %481 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %481, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.632

cleanup.632:                                      ; preds = %if.end.628, %if.then.627, %if.then.621, %cleanup.610, %cleanup.478, %if.then.121, %if.then.91, %if.then.85, %cleanup, %if.then.76, %if.end.45, %if.then.44
  %482 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %482) #1
  %483 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %483) #1
  %484 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %484) #1
  %485 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %485) #1
  %cleanup.dest.636 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.636, label %cleanup.655 [
    i32 0, label %cleanup.cont.637
    i32 3, label %while.end.638
    i32 2, label %while.cond
  ]

cleanup.cont.637:                                 ; preds = %cleanup.632
  br label %while.cond

while.end.638:                                    ; preds = %cleanup.632
  %486 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %487 = load i32, i32* %y, align 4, !tbaa !5
  %488 = load i32, i32* %y, align 4, !tbaa !5
  %add639 = add nsw i32 %488, 1
  %call640 = call i32 @process_h_lists(%struct.line_list_s* %486, %struct.active_line_s* null, %struct.active_line_s* null, %struct.active_line_s* null, i32 %487, i32 %add639) #5
  store i32 %call640, i32* %code, align 4, !tbaa !5
  %489 = load i32, i32* %code, align 4, !tbaa !5
  %cmp641 = icmp slt i32 %489, 0
  br i1 %cmp641, label %if.then.643, label %if.end.644

if.then.643:                                      ; preds = %while.end.638
  %490 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %490, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.655

if.end.644:                                       ; preds = %while.end.638
  %dev645 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %491 = load %struct.gx_device_s*, %struct.gx_device_s** %dev645, align 8, !tbaa !96
  %492 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %493 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1646 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %493, i32 0, i32 11
  %call647 = call i32 @close_margins(%struct.gx_device_s* %491, %struct.line_list_s* %492, %struct.margin_set_s* %margin_set1646) #5
  store i32 %call647, i32* %code, align 4, !tbaa !5
  %494 = load i32, i32* %code, align 4, !tbaa !5
  %cmp648 = icmp slt i32 %494, 0
  br i1 %cmp648, label %if.then.650, label %if.end.651

if.then.650:                                      ; preds = %if.end.644
  %495 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %495, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.655

if.end.651:                                       ; preds = %if.end.644
  %dev652 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %496 = load %struct.gx_device_s*, %struct.gx_device_s** %dev652, align 8, !tbaa !96
  %497 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %498 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0653 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %498, i32 0, i32 10
  %call654 = call i32 @close_margins(%struct.gx_device_s* %496, %struct.line_list_s* %497, %struct.margin_set_s* %margin_set0653) #5
  store i32 %call654, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.655

cleanup.655:                                      ; preds = %if.end.651, %if.then.650, %if.then.643, %cleanup.632, %if.then
  %499 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %499) #1
  %500 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %500) #1
  %501 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %501) #1
  %502 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %502) #1
  %503 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %503) #1
  %504 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %504) #1
  %505 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %505) #1
  %506 = load i32, i32* %retval
  ret i32 %506
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__pr_nd_sw(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code137 = alloca i32, align 4
  %k = alloca i32, align 4
  %v = alloca i32, align 4
  %k193 = alloca i32, align 4
  %v195 = alloca i32, align 4
  %k256 = alloca i32, align 4
  %v258 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi = alloca i32, align 4
  %xx = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %flags = alloca i32, align 4
  %flp485 = alloca %struct.active_line_s*, align 8
  %inside486 = alloca i32, align 4
  %k502 = alloca i32, align 4
  %v504 = alloca i32, align 4
  %k551 = alloca i32, align 4
  %v553 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.657

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.639, %cleanup.634, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %if.end.36, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %if.end.32
  %48 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %49 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_h_new(%struct.active_line_s* %48, %struct.line_list_s* %49) #5
  br label %if.end.36

if.else:                                          ; preds = %if.end.32
  %50 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %51 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %50, %struct.line_list_s* %51) #5
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.35
  %52 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %52, %struct.active_line_s** %yll, align 8, !tbaa !1
  %53 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %54 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head37 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %54, i32 0, i32 7
  %next38 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head37, i32 0, i32 15
  %55 = load %struct.active_line_s*, %struct.active_line_s** %next38, align 8, !tbaa !201
  %cmp39 = icmp eq %struct.active_line_s* %55, null
  br i1 %cmp39, label %if.then.41, label %if.end.49

if.then.41:                                       ; preds = %while.end
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp42 = icmp eq %struct.active_line_s* %56, null
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.then.41
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.45:                                        ; preds = %if.then.41
  %57 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %57, i32 0, i32 0
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start46, i32 0, i32 1
  %58 = load i32, i32* %y47, align 4, !tbaa !187
  store i32 %58, i32* %y, align 4, !tbaa !5
  %59 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %59, i32 0, i32 8
  %60 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %61 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %61, i32 0, i32 9
  store %struct.active_line_s* %60, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %62 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list048 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %62, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list048, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.49:                                        ; preds = %while.end
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp50 = icmp ne %struct.active_line_s* %63, null
  br i1 %cmp50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.49
  %64 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 0
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start52, i32 0, i32 1
  %65 = load i32, i32* %y53, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.49
  %66 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %66, i32 0, i32 18
  %67 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %65, %cond.true ], [ %67, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %68 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68) #1
  %69 = load i32, i32* %y, align 4, !tbaa !5
  %70 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %70, -1
  %or = or i32 %69, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %71 = load i32, i32* %y1, align 4, !tbaa !5
  %72 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp54 = icmp sgt i32 %71, %72
  br i1 %cmp54, label %if.then.56, label %if.end.58

if.then.56:                                       ; preds = %cond.end
  %73 = load i32, i32* %y_band, align 4, !tbaa !5
  %add57 = add nsw i32 %73, 1
  store i32 %add57, i32* %y1, align 4, !tbaa !5
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.56, %cond.end
  %74 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #1
  %75 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head59 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %75, i32 0, i32 7
  %next60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head59, i32 0, i32 15
  %76 = load %struct.active_line_s*, %struct.active_line_s** %next60, align 8, !tbaa !201
  store %struct.active_line_s* %76, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.58
  %77 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp61 = icmp ne %struct.active_line_s* %77, null
  br i1 %cmp61, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %78 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %78, i32 0, i32 1
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %79 = load i32, i32* %y63, align 4, !tbaa !195
  %80 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp64 = icmp slt i32 %79, %80
  br i1 %cmp64, label %if.then.66, label %if.end.69

if.then.66:                                       ; preds = %for.body
  %81 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %81, i32 0, i32 1
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end67, i32 0, i32 1
  %82 = load i32, i32* %y68, align 4, !tbaa !195
  store i32 %82, i32* %y1, align 4, !tbaa !5
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.66, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.69
  %83 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next70 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %83, i32 0, i32 15
  %84 = load %struct.active_line_s*, %struct.active_line_s** %next70, align 8, !tbaa !189
  store %struct.active_line_s* %84, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %85 = load i32, i32* %y, align 4, !tbaa !5
  %86 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp71 = icmp eq i32 %85, %86
  br i1 %cmp71, label %if.then.73, label %if.end.88

if.then.73:                                       ; preds = %for.end
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %88 = load i32, i32* %y, align 4, !tbaa !5
  %call = call i32 @process_h_segments(%struct.line_list_s* %87, i32 %88) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %89 = load i32, i32* %code, align 4, !tbaa !5
  %cmp74 = icmp slt i32 %89, 0
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %if.then.73
  %90 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %90, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.77:                                        ; preds = %if.then.73
  %91 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #1
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %93 = load i32, i32* %y1, align 4, !tbaa !5
  %call78 = call i32 @move_al_by_y(%struct.line_list_s* %92, i32 %93) #5
  store i32 %call78, i32* %code1, align 4, !tbaa !5
  %94 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp79 = icmp slt i32 %94, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.77
  %95 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %95, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %if.end.77
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.81
  %96 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %96) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.634 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %97 = load i32, i32* %code, align 4, !tbaa !5
  %cmp83 = icmp sgt i32 %97, 0
  br i1 %cmp83, label %if.then.85, label %if.end.87

if.then.85:                                       ; preds = %cleanup.cont
  %98 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list86 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %98, i32 0, i32 5
  %99 = load %struct.active_line_s*, %struct.active_line_s** %y_list86, align 8, !tbaa !121
  store %struct.active_line_s* %99, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.87:                                        ; preds = %cleanup.cont
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %for.end
  %100 = load i32, i32* %y, align 4, !tbaa !5
  %101 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp89 = icmp sge i32 %100, %101
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %if.end.88
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.92:                                        ; preds = %if.end.88
  %102 = load i32, i32* %y, align 4, !tbaa !5
  %sub93 = sub nsw i32 %102, 0
  %conv94 = sext i32 %sub93 to i64
  %add95 = add nsw i64 %conv94, 127
  %and96 = and i64 %add95, -256
  %103 = load i32, i32* %y1, align 4, !tbaa !5
  %add97 = add nsw i32 %103, 0
  %conv98 = sext i32 %add97 to i64
  %add99 = add nsw i64 %conv98, 127
  %and100 = and i64 %add99, -256
  %cmp101 = icmp slt i64 %and96, %and100
  %conv102 = zext i1 %cmp101 to i32
  store i32 %conv102, i32* %covering_pixel_centers, align 4, !tbaa !5
  %104 = load i32, i32* %y, align 4, !tbaa !5
  %105 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp103 = icmp ne i32 %104, %105
  br i1 %cmp103, label %if.then.105, label %if.end.117

if.then.105:                                      ; preds = %if.end.92
  %106 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %107 = load i32, i32* %y, align 4, !tbaa !5
  %108 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %108, 0
  %cond106 = select i1 %tobool, i32 1, i32 -1
  %109 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %106, i32 %107, i32* %y1, i32 %cond106, i32 %109) #5
  %110 = load i32, i32* %y, align 4, !tbaa !5
  %sub107 = sub nsw i32 %110, 0
  %conv108 = sext i32 %sub107 to i64
  %add109 = add nsw i64 %conv108, 127
  %and110 = and i64 %add109, -256
  %111 = load i32, i32* %y1, align 4, !tbaa !5
  %add111 = add nsw i32 %111, 0
  %conv112 = sext i32 %add111 to i64
  %add113 = add nsw i64 %conv112, 127
  %and114 = and i64 %add113, -256
  %cmp115 = icmp slt i64 %and110, %and114
  %conv116 = zext i1 %cmp115 to i32
  store i32 %conv116, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.105, %if.end.92
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %112 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %113 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %114 = load i32, i32* %y1, align 4, !tbaa !5
  %call118 = call i32 @start_margin_set(%struct.gx_device_s* %112, %struct.line_list_s* %113, i32 %114) #5
  store i32 %call118, i32* %code, align 4, !tbaa !5
  %115 = load i32, i32* %code, align 4, !tbaa !5
  %cmp119 = icmp slt i32 %115, 0
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.end.117
  %116 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %116, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.122:                                       ; preds = %if.end.117
  %117 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool123 = icmp ne i32 %117, 0
  br i1 %tobool123, label %if.then.125, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.122
  %118 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool124 = icmp ne i32 %118, 0
  br i1 %tobool124, label %if.then.125, label %if.else.484

if.then.125:                                      ; preds = %lor.lhs.false, %if.end.122
  %119 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %120 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %120) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  %121 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %121, i32 0, i32 13
  %122 = load i32*, i32** %windings, align 8, !tbaa !79
  %123 = bitcast i32* %122 to i8*
  %124 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %124, i32 0, i32 20
  %125 = load i32, i32* %contour_count, align 4, !tbaa !74
  %conv126 = sext i32 %125 to i64
  %mul = mul i64 4, %conv126
  %call127 = call i8* @memset(i8* %123, i32 0, i64 %mul) #6
  br label %do.body.128

do.body.128:                                      ; preds = %if.then.125
  br label %do.cond.129

do.cond.129:                                      ; preds = %do.body.128
  br label %do.end.130

do.end.130:                                       ; preds = %do.cond.129
  %126 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head131 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %126, i32 0, i32 7
  %next132 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head131, i32 0, i32 15
  %127 = load %struct.active_line_s*, %struct.active_line_s** %next132, align 8, !tbaa !201
  store %struct.active_line_s* %127, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.133

for.cond.133:                                     ; preds = %for.inc.477, %do.end.130
  %128 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp134 = icmp ne %struct.active_line_s* %128, null
  br i1 %cmp134, label %for.body.136, label %for.end.479

for.body.136:                                     ; preds = %for.cond.133
  %129 = bitcast i32* %code137 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %129) #1
  br label %do.body.138

do.body.138:                                      ; preds = %for.body.136
  br label %do.cond.139

do.cond.139:                                      ; preds = %do.body.138
  br label %do.end.140

do.end.140:                                       ; preds = %do.cond.139
  br label %do.body.141

do.body.141:                                      ; preds = %do.end.140
  br label %do.cond.142

do.cond.142:                                      ; preds = %do.body.141
  br label %do.end.143

do.end.143:                                       ; preds = %do.cond.142
  %130 = load i32, i32* %inside, align 4, !tbaa !5
  %131 = load i32, i32* %rule, align 4, !tbaa !5
  %and144 = and i32 %130, %131
  %cmp145 = icmp ne i32 %and144, 0
  br i1 %cmp145, label %if.end.192, label %if.then.147

if.then.147:                                      ; preds = %do.end.143
  %132 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %132) #1
  %133 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count148 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %133, i32 0, i32 13
  %134 = load i32, i32* %contour_count148, align 4, !tbaa !186
  store i32 %134, i32* %k, align 4, !tbaa !5
  %135 = bitcast i32* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %135) #1
  %136 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom = sext i32 %136 to i64
  %137 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings149 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %137, i32 0, i32 13
  %138 = load i32*, i32** %windings149, align 8, !tbaa !79
  %arrayidx = getelementptr inbounds i32, i32* %138, i64 %idxprom
  %139 = load i32, i32* %arrayidx, align 4, !tbaa !5
  store i32 %139, i32* %v, align 4, !tbaa !5
  %140 = load i32, i32* %v, align 4, !tbaa !5
  %cmp150 = icmp slt i32 %140, 0
  br i1 %cmp150, label %cond.true.152, label %cond.false.155

cond.true.152:                                    ; preds = %if.then.147
  %141 = load i32, i32* %v, align 4, !tbaa !5
  %and153 = and i32 %141, 1
  %sub154 = sub nsw i32 0, %and153
  br label %cond.end.163

cond.false.155:                                   ; preds = %if.then.147
  %142 = load i32, i32* %v, align 4, !tbaa !5
  %cmp156 = icmp sgt i32 %142, 0
  br i1 %cmp156, label %cond.true.158, label %cond.false.160

cond.true.158:                                    ; preds = %cond.false.155
  %143 = load i32, i32* %v, align 4, !tbaa !5
  %and159 = and i32 %143, 1
  br label %cond.end.161

cond.false.160:                                   ; preds = %cond.false.155
  br label %cond.end.161

cond.end.161:                                     ; preds = %cond.false.160, %cond.true.158
  %cond162 = phi i32 [ %and159, %cond.true.158 ], [ 0, %cond.false.160 ]
  br label %cond.end.163

cond.end.163:                                     ; preds = %cond.end.161, %cond.true.152
  %cond164 = phi i32 [ %sub154, %cond.true.152 ], [ %cond162, %cond.end.161 ]
  %144 = load i32, i32* %inside, align 4, !tbaa !5
  %sub165 = sub nsw i32 %144, %cond164
  store i32 %sub165, i32* %inside, align 4, !tbaa !5
  %145 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction166 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %145, i32 0, i32 8
  %146 = load i32, i32* %direction166, align 4, !tbaa !178
  %147 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom167 = sext i32 %147 to i64
  %148 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings168 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %148, i32 0, i32 13
  %149 = load i32*, i32** %windings168, align 8, !tbaa !79
  %arrayidx169 = getelementptr inbounds i32, i32* %149, i64 %idxprom167
  %150 = load i32, i32* %arrayidx169, align 4, !tbaa !5
  %add170 = add nsw i32 %150, %146
  store i32 %add170, i32* %arrayidx169, align 4, !tbaa !5
  store i32 %add170, i32* %v, align 4, !tbaa !5
  %151 = load i32, i32* %v, align 4, !tbaa !5
  %cmp171 = icmp slt i32 %151, 0
  br i1 %cmp171, label %cond.true.173, label %cond.false.176

cond.true.173:                                    ; preds = %cond.end.163
  %152 = load i32, i32* %v, align 4, !tbaa !5
  %and174 = and i32 %152, 1
  %sub175 = sub nsw i32 0, %and174
  br label %cond.end.184

cond.false.176:                                   ; preds = %cond.end.163
  %153 = load i32, i32* %v, align 4, !tbaa !5
  %cmp177 = icmp sgt i32 %153, 0
  br i1 %cmp177, label %cond.true.179, label %cond.false.181

cond.true.179:                                    ; preds = %cond.false.176
  %154 = load i32, i32* %v, align 4, !tbaa !5
  %and180 = and i32 %154, 1
  br label %cond.end.182

cond.false.181:                                   ; preds = %cond.false.176
  br label %cond.end.182

cond.end.182:                                     ; preds = %cond.false.181, %cond.true.179
  %cond183 = phi i32 [ %and180, %cond.true.179 ], [ 0, %cond.false.181 ]
  br label %cond.end.184

cond.end.184:                                     ; preds = %cond.end.182, %cond.true.173
  %cond185 = phi i32 [ %sub175, %cond.true.173 ], [ %cond183, %cond.end.182 ]
  %155 = load i32, i32* %inside, align 4, !tbaa !5
  %add186 = add nsw i32 %155, %cond185
  store i32 %add186, i32* %inside, align 4, !tbaa !5
  %156 = bitcast i32* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %156) #1
  %157 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %157) #1
  %158 = load i32, i32* %inside, align 4, !tbaa !5
  %159 = load i32, i32* %rule, align 4, !tbaa !5
  %and187 = and i32 %158, %159
  %cmp188 = icmp ne i32 %and187, 0
  br i1 %cmp188, label %if.then.190, label %if.end.191

if.then.190:                                      ; preds = %cond.end.184
  %160 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %160, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.191

if.end.191:                                       ; preds = %if.then.190, %cond.end.184
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.474

if.end.192:                                       ; preds = %do.end.143
  %161 = bitcast i32* %k193 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %161) #1
  %162 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count194 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %162, i32 0, i32 13
  %163 = load i32, i32* %contour_count194, align 4, !tbaa !186
  store i32 %163, i32* %k193, align 4, !tbaa !5
  %164 = bitcast i32* %v195 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %164) #1
  %165 = load i32, i32* %k193, align 4, !tbaa !5
  %idxprom196 = sext i32 %165 to i64
  %166 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings197 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %166, i32 0, i32 13
  %167 = load i32*, i32** %windings197, align 8, !tbaa !79
  %arrayidx198 = getelementptr inbounds i32, i32* %167, i64 %idxprom196
  %168 = load i32, i32* %arrayidx198, align 4, !tbaa !5
  store i32 %168, i32* %v195, align 4, !tbaa !5
  %169 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp199 = icmp slt i32 %169, 0
  br i1 %cmp199, label %cond.true.201, label %cond.false.204

cond.true.201:                                    ; preds = %if.end.192
  %170 = load i32, i32* %v195, align 4, !tbaa !5
  %and202 = and i32 %170, 1
  %sub203 = sub nsw i32 0, %and202
  br label %cond.end.212

cond.false.204:                                   ; preds = %if.end.192
  %171 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp205 = icmp sgt i32 %171, 0
  br i1 %cmp205, label %cond.true.207, label %cond.false.209

cond.true.207:                                    ; preds = %cond.false.204
  %172 = load i32, i32* %v195, align 4, !tbaa !5
  %and208 = and i32 %172, 1
  br label %cond.end.210

cond.false.209:                                   ; preds = %cond.false.204
  br label %cond.end.210

cond.end.210:                                     ; preds = %cond.false.209, %cond.true.207
  %cond211 = phi i32 [ %and208, %cond.true.207 ], [ 0, %cond.false.209 ]
  br label %cond.end.212

cond.end.212:                                     ; preds = %cond.end.210, %cond.true.201
  %cond213 = phi i32 [ %sub203, %cond.true.201 ], [ %cond211, %cond.end.210 ]
  %173 = load i32, i32* %inside, align 4, !tbaa !5
  %sub214 = sub nsw i32 %173, %cond213
  store i32 %sub214, i32* %inside, align 4, !tbaa !5
  %174 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction215 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %174, i32 0, i32 8
  %175 = load i32, i32* %direction215, align 4, !tbaa !178
  %176 = load i32, i32* %k193, align 4, !tbaa !5
  %idxprom216 = sext i32 %176 to i64
  %177 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings217 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %177, i32 0, i32 13
  %178 = load i32*, i32** %windings217, align 8, !tbaa !79
  %arrayidx218 = getelementptr inbounds i32, i32* %178, i64 %idxprom216
  %179 = load i32, i32* %arrayidx218, align 4, !tbaa !5
  %add219 = add nsw i32 %179, %175
  store i32 %add219, i32* %arrayidx218, align 4, !tbaa !5
  store i32 %add219, i32* %v195, align 4, !tbaa !5
  %180 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp220 = icmp slt i32 %180, 0
  br i1 %cmp220, label %cond.true.222, label %cond.false.225

cond.true.222:                                    ; preds = %cond.end.212
  %181 = load i32, i32* %v195, align 4, !tbaa !5
  %and223 = and i32 %181, 1
  %sub224 = sub nsw i32 0, %and223
  br label %cond.end.233

cond.false.225:                                   ; preds = %cond.end.212
  %182 = load i32, i32* %v195, align 4, !tbaa !5
  %cmp226 = icmp sgt i32 %182, 0
  br i1 %cmp226, label %cond.true.228, label %cond.false.230

cond.true.228:                                    ; preds = %cond.false.225
  %183 = load i32, i32* %v195, align 4, !tbaa !5
  %and229 = and i32 %183, 1
  br label %cond.end.231

cond.false.230:                                   ; preds = %cond.false.225
  br label %cond.end.231

cond.end.231:                                     ; preds = %cond.false.230, %cond.true.228
  %cond232 = phi i32 [ %and229, %cond.true.228 ], [ 0, %cond.false.230 ]
  br label %cond.end.233

cond.end.233:                                     ; preds = %cond.end.231, %cond.true.222
  %cond234 = phi i32 [ %sub224, %cond.true.222 ], [ %cond232, %cond.end.231 ]
  %184 = load i32, i32* %inside, align 4, !tbaa !5
  %add235 = add nsw i32 %184, %cond234
  store i32 %add235, i32* %inside, align 4, !tbaa !5
  %185 = bitcast i32* %v195 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %185) #1
  %186 = bitcast i32* %k193 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %186) #1
  %187 = load i32, i32* %inside, align 4, !tbaa !5
  %188 = load i32, i32* %rule, align 4, !tbaa !5
  %and236 = and i32 %187, %188
  %cmp237 = icmp ne i32 %and236, 0
  br i1 %cmp237, label %if.then.239, label %if.end.240

if.then.239:                                      ; preds = %cond.end.233
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.474

if.end.240:                                       ; preds = %cond.end.233
  %189 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next241 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %189, i32 0, i32 15
  %190 = load %struct.active_line_s*, %struct.active_line_s** %next241, align 8, !tbaa !189
  %cmp242 = icmp ne %struct.active_line_s* %190, null
  br i1 %cmp242, label %land.lhs.true, label %if.end.299

land.lhs.true:                                    ; preds = %if.end.240
  %191 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current244 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %191, i32 0, i32 5
  %192 = load i32, i32* %x_current244, align 4, !tbaa !204
  %193 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next245 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %193, i32 0, i32 15
  %194 = load %struct.active_line_s*, %struct.active_line_s** %next245, align 8, !tbaa !189
  %x_current246 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %194, i32 0, i32 5
  %195 = load i32, i32* %x_current246, align 4, !tbaa !204
  %cmp247 = icmp eq i32 %192, %195
  br i1 %cmp247, label %land.lhs.true.249, label %if.end.299

land.lhs.true.249:                                ; preds = %land.lhs.true
  %196 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %196, i32 0, i32 6
  %197 = load i32, i32* %x_next, align 4, !tbaa !205
  %198 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next250 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %198, i32 0, i32 15
  %199 = load %struct.active_line_s*, %struct.active_line_s** %next250, align 8, !tbaa !189
  %x_next251 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %199, i32 0, i32 6
  %200 = load i32, i32* %x_next251, align 4, !tbaa !205
  %cmp252 = icmp eq i32 %197, %200
  br i1 %cmp252, label %if.then.254, label %if.end.299

if.then.254:                                      ; preds = %land.lhs.true.249
  %201 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next255 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %201, i32 0, i32 15
  %202 = load %struct.active_line_s*, %struct.active_line_s** %next255, align 8, !tbaa !189
  store %struct.active_line_s* %202, %struct.active_line_s** %alp, align 8, !tbaa !1
  %203 = bitcast i32* %k256 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %203) #1
  %204 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count257 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %204, i32 0, i32 13
  %205 = load i32, i32* %contour_count257, align 4, !tbaa !186
  store i32 %205, i32* %k256, align 4, !tbaa !5
  %206 = bitcast i32* %v258 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %206) #1
  %207 = load i32, i32* %k256, align 4, !tbaa !5
  %idxprom259 = sext i32 %207 to i64
  %208 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings260 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %208, i32 0, i32 13
  %209 = load i32*, i32** %windings260, align 8, !tbaa !79
  %arrayidx261 = getelementptr inbounds i32, i32* %209, i64 %idxprom259
  %210 = load i32, i32* %arrayidx261, align 4, !tbaa !5
  store i32 %210, i32* %v258, align 4, !tbaa !5
  %211 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp262 = icmp slt i32 %211, 0
  br i1 %cmp262, label %cond.true.264, label %cond.false.267

cond.true.264:                                    ; preds = %if.then.254
  %212 = load i32, i32* %v258, align 4, !tbaa !5
  %and265 = and i32 %212, 1
  %sub266 = sub nsw i32 0, %and265
  br label %cond.end.275

cond.false.267:                                   ; preds = %if.then.254
  %213 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp268 = icmp sgt i32 %213, 0
  br i1 %cmp268, label %cond.true.270, label %cond.false.272

cond.true.270:                                    ; preds = %cond.false.267
  %214 = load i32, i32* %v258, align 4, !tbaa !5
  %and271 = and i32 %214, 1
  br label %cond.end.273

cond.false.272:                                   ; preds = %cond.false.267
  br label %cond.end.273

cond.end.273:                                     ; preds = %cond.false.272, %cond.true.270
  %cond274 = phi i32 [ %and271, %cond.true.270 ], [ 0, %cond.false.272 ]
  br label %cond.end.275

cond.end.275:                                     ; preds = %cond.end.273, %cond.true.264
  %cond276 = phi i32 [ %sub266, %cond.true.264 ], [ %cond274, %cond.end.273 ]
  %215 = load i32, i32* %inside, align 4, !tbaa !5
  %sub277 = sub nsw i32 %215, %cond276
  store i32 %sub277, i32* %inside, align 4, !tbaa !5
  %216 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction278 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %216, i32 0, i32 8
  %217 = load i32, i32* %direction278, align 4, !tbaa !178
  %218 = load i32, i32* %k256, align 4, !tbaa !5
  %idxprom279 = sext i32 %218 to i64
  %219 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings280 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %219, i32 0, i32 13
  %220 = load i32*, i32** %windings280, align 8, !tbaa !79
  %arrayidx281 = getelementptr inbounds i32, i32* %220, i64 %idxprom279
  %221 = load i32, i32* %arrayidx281, align 4, !tbaa !5
  %add282 = add nsw i32 %221, %217
  store i32 %add282, i32* %arrayidx281, align 4, !tbaa !5
  store i32 %add282, i32* %v258, align 4, !tbaa !5
  %222 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp283 = icmp slt i32 %222, 0
  br i1 %cmp283, label %cond.true.285, label %cond.false.288

cond.true.285:                                    ; preds = %cond.end.275
  %223 = load i32, i32* %v258, align 4, !tbaa !5
  %and286 = and i32 %223, 1
  %sub287 = sub nsw i32 0, %and286
  br label %cond.end.296

cond.false.288:                                   ; preds = %cond.end.275
  %224 = load i32, i32* %v258, align 4, !tbaa !5
  %cmp289 = icmp sgt i32 %224, 0
  br i1 %cmp289, label %cond.true.291, label %cond.false.293

cond.true.291:                                    ; preds = %cond.false.288
  %225 = load i32, i32* %v258, align 4, !tbaa !5
  %and292 = and i32 %225, 1
  br label %cond.end.294

cond.false.293:                                   ; preds = %cond.false.288
  br label %cond.end.294

cond.end.294:                                     ; preds = %cond.false.293, %cond.true.291
  %cond295 = phi i32 [ %and292, %cond.true.291 ], [ 0, %cond.false.293 ]
  br label %cond.end.296

cond.end.296:                                     ; preds = %cond.end.294, %cond.true.285
  %cond297 = phi i32 [ %sub287, %cond.true.285 ], [ %cond295, %cond.end.294 ]
  %226 = load i32, i32* %inside, align 4, !tbaa !5
  %add298 = add nsw i32 %226, %cond297
  store i32 %add298, i32* %inside, align 4, !tbaa !5
  %227 = bitcast i32* %v258 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %227) #1
  %228 = bitcast i32* %k256 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %228) #1
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.474

if.end.299:                                       ; preds = %land.lhs.true.249, %land.lhs.true, %if.end.240
  br label %do.body.300

do.body.300:                                      ; preds = %if.end.299
  br label %do.cond.301

do.cond.301:                                      ; preds = %do.body.300
  br label %do.end.302

do.end.302:                                       ; preds = %do.cond.301
  %229 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %229) #1
  %230 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %231 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %231, i32 0, i32 0
  %y303 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %232 = load i32, i32* %y303, align 4, !tbaa !38
  %cmp304 = icmp sgt i32 %230, %232
  br i1 %cmp304, label %cond.true.306, label %cond.false.307

cond.true.306:                                    ; preds = %do.end.302
  %233 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.311

cond.false.307:                                   ; preds = %do.end.302
  %pbox308 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %234 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox308, align 8, !tbaa !97
  %p309 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %234, i32 0, i32 0
  %y310 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p309, i32 0, i32 1
  %235 = load i32, i32* %y310, align 4, !tbaa !38
  br label %cond.end.311

cond.end.311:                                     ; preds = %cond.false.307, %cond.true.306
  %cond312 = phi i32 [ %233, %cond.true.306 ], [ %235, %cond.false.307 ]
  store i32 %cond312, i32* %ybot, align 4, !tbaa !5
  %236 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %236) #1
  %237 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox313 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %238 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox313, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %238, i32 0, i32 1
  %y314 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %239 = load i32, i32* %y314, align 4, !tbaa !42
  %cmp315 = icmp slt i32 %237, %239
  br i1 %cmp315, label %cond.true.317, label %cond.false.318

cond.true.317:                                    ; preds = %cond.end.311
  %240 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.322

cond.false.318:                                   ; preds = %cond.end.311
  %pbox319 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %241 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox319, align 8, !tbaa !97
  %q320 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %241, i32 0, i32 1
  %y321 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q320, i32 0, i32 1
  %242 = load i32, i32* %y321, align 4, !tbaa !42
  br label %cond.end.322

cond.end.322:                                     ; preds = %cond.false.318, %cond.true.317
  %cond323 = phi i32 [ %240, %cond.true.317 ], [ %242, %cond.false.318 ]
  store i32 %cond323, i32* %ytop, align 4, !tbaa !5
  %243 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end324 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %243, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end324, i32 0, i32 0
  %244 = load i32, i32* %x, align 4, !tbaa !194
  %245 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start325 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %245, i32 0, i32 0
  %x326 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start325, i32 0, i32 0
  %246 = load i32, i32* %x326, align 4, !tbaa !193
  %cmp327 = icmp eq i32 %244, %246
  br i1 %cmp327, label %land.lhs.true.329, label %if.else.386

land.lhs.true.329:                                ; preds = %cond.end.322
  %247 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end330 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %247, i32 0, i32 1
  %x331 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end330, i32 0, i32 0
  %248 = load i32, i32* %x331, align 4, !tbaa !194
  %249 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start332 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %249, i32 0, i32 0
  %x333 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start332, i32 0, i32 0
  %250 = load i32, i32* %x333, align 4, !tbaa !193
  %cmp334 = icmp eq i32 %248, %250
  br i1 %cmp334, label %if.then.336, label %if.else.386

if.then.336:                                      ; preds = %land.lhs.true.329
  %251 = load i32, i32* %ytop, align 4, !tbaa !5
  %252 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp337 = icmp sgt i32 %251, %252
  br i1 %cmp337, label %if.then.339, label %if.else.384

if.then.339:                                      ; preds = %if.then.336
  %253 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %253) #1
  %254 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv340 = sext i32 %254 to i64
  %add341 = add nsw i64 %conv340, 127
  %shr = ashr i64 %add341, 8
  %conv342 = trunc i64 %shr to i32
  store i32 %conv342, i32* %yi, align 4, !tbaa !5
  %255 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %255) #1
  %256 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv343 = sext i32 %256 to i64
  %add344 = add nsw i64 %conv343, 127
  %shr345 = ashr i64 %add344, 8
  %conv346 = trunc i64 %shr345 to i32
  %257 = load i32, i32* %yi, align 4, !tbaa !5
  %sub347 = sub nsw i32 %conv346, %257
  store i32 %sub347, i32* %hi, align 4, !tbaa !5
  %258 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %258) #1
  %259 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end348 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %259, i32 0, i32 1
  %x349 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end348, i32 0, i32 0
  %260 = load i32, i32* %x349, align 4, !tbaa !194
  %sub350 = sub nsw i32 %260, 0
  %conv351 = sext i32 %sub350 to i64
  %add352 = add nsw i64 %conv351, 127
  %shr353 = ashr i64 %add352, 8
  %conv354 = trunc i64 %shr353 to i32
  store i32 %conv354, i32* %xli, align 4, !tbaa !5
  %261 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %261) #1
  %262 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end355 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %262, i32 0, i32 1
  %x356 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end355, i32 0, i32 0
  %263 = load i32, i32* %x356, align 4, !tbaa !194
  %add357 = add nsw i32 %263, 0
  %conv358 = sext i32 %add357 to i64
  %add359 = add nsw i64 %conv358, 127
  %shr360 = ashr i64 %add359, 8
  %conv361 = trunc i64 %shr360 to i32
  store i32 %conv361, i32* %xi, align 4, !tbaa !5
  %264 = load i32, i32* %xli, align 4, !tbaa !5
  %265 = load i32, i32* %xi, align 4, !tbaa !5
  %cmp362 = icmp eq i32 %264, %265
  br i1 %cmp362, label %if.then.364, label %if.end.376

if.then.364:                                      ; preds = %if.then.339
  %266 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %266) #1
  %267 = load i32, i32* %xli, align 4, !tbaa !5
  %shl = shl i32 %267, 8
  store i32 %shl, i32* %xx, align 4, !tbaa !5
  %268 = load i32, i32* %xx, align 4, !tbaa !5
  %269 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end365 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %269, i32 0, i32 1
  %x366 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end365, i32 0, i32 0
  %270 = load i32, i32* %x366, align 4, !tbaa !194
  %sub367 = sub nsw i32 %268, %270
  %271 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end368 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %271, i32 0, i32 1
  %x369 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end368, i32 0, i32 0
  %272 = load i32, i32* %x369, align 4, !tbaa !194
  %273 = load i32, i32* %xx, align 4, !tbaa !5
  %sub370 = sub nsw i32 %272, %273
  %cmp371 = icmp slt i32 %sub367, %sub370
  br i1 %cmp371, label %if.then.373, label %if.else.374

if.then.373:                                      ; preds = %if.then.364
  %274 = load i32, i32* %xi, align 4, !tbaa !5
  %inc = add nsw i32 %274, 1
  store i32 %inc, i32* %xi, align 4, !tbaa !5
  br label %if.end.375

if.else.374:                                      ; preds = %if.then.364
  %275 = load i32, i32* %xli, align 4, !tbaa !5
  %dec = add nsw i32 %275, -1
  store i32 %dec, i32* %xli, align 4, !tbaa !5
  br label %if.end.375

if.end.375:                                       ; preds = %if.else.374, %if.then.373
  %276 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %276) #1
  br label %if.end.376

if.end.376:                                       ; preds = %if.end.375, %if.then.339
  br label %do.body.377

do.body.377:                                      ; preds = %if.end.376
  br label %do.cond.378

do.cond.378:                                      ; preds = %do.body.377
  br label %do.end.379

do.end.379:                                       ; preds = %do.cond.378
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %277 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %277, i32 0, i32 0
  %278 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %278, i32 0, i32 5
  %279 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %pdevc380 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %280 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc380, align 8, !tbaa !90
  %281 = load i32, i32* %xli, align 4, !tbaa !5
  %282 = load i32, i32* %yi, align 4, !tbaa !5
  %283 = load i32, i32* %xi, align 4, !tbaa !5
  %284 = load i32, i32* %xli, align 4, !tbaa !5
  %sub381 = sub nsw i32 %283, %284
  %285 = load i32, i32* %hi, align 4, !tbaa !5
  %dev382 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %286 = load %struct.gx_device_s*, %struct.gx_device_s** %dev382, align 8, !tbaa !96
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %287 = load i32, i32* %lop, align 4, !tbaa !91
  %call383 = call i32 %279(%struct.gx_device_color_s* %280, i32 %281, i32 %282, i32 %sub381, i32 %285, %struct.gx_device_s* %286, i32 %287, %struct.gx_rop_source_s* null) #5
  store i32 %call383, i32* %code137, align 4, !tbaa !5
  %288 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %288) #1
  %289 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %289) #1
  %290 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %290) #1
  %291 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %291) #1
  br label %if.end.385

if.else.384:                                      ; preds = %if.then.336
  store i32 0, i32* %code137, align 4, !tbaa !5
  br label %if.end.385

if.end.385:                                       ; preds = %if.else.384, %do.end.379
  br label %if.end.445

if.else.386:                                      ; preds = %land.lhs.true.329, %cond.end.322
  %292 = load i32, i32* %ybot, align 4, !tbaa !5
  %293 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp387 = icmp slt i32 %292, %293
  br i1 %cmp387, label %if.then.389, label %if.else.443

if.then.389:                                      ; preds = %if.else.386
  %294 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %294) #1
  %295 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %295) #1
  %start390 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %296 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start391 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %296, i32 0, i32 0
  %297 = bitcast %struct.gs_fixed_point_s* %start390 to i8*
  %298 = bitcast %struct.gs_fixed_point_s* %start391 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %297, i8* %298, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end392 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %299 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end393 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %299, i32 0, i32 1
  %300 = bitcast %struct.gs_fixed_point_s* %end392 to i8*
  %301 = bitcast %struct.gs_fixed_point_s* %end393 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %300, i8* %301, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start394 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %302 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start395 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %302, i32 0, i32 0
  %303 = bitcast %struct.gs_fixed_point_s* %start394 to i8*
  %304 = bitcast %struct.gs_fixed_point_s* %start395 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %303, i8* %304, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end396 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %305 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end397 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %305, i32 0, i32 1
  %306 = bitcast %struct.gs_fixed_point_s* %end396 to i8*
  %307 = bitcast %struct.gs_fixed_point_s* %end397 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %306, i8* %307, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.398

do.body.398:                                      ; preds = %if.then.389
  br label %do.cond.399

do.cond.399:                                      ; preds = %do.body.398
  br label %do.end.400

do.end.400:                                       ; preds = %do.cond.399
  %308 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.start(i64 4, i8* %308) #1
  store i32 4, i32* %flags, align 4, !tbaa !5
  %309 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start401 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %309, i32 0, i32 0
  %x402 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start401, i32 0, i32 0
  %310 = load i32, i32* %x402, align 4, !tbaa !193
  %311 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start403 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %311, i32 0, i32 0
  %x404 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start403, i32 0, i32 0
  %312 = load i32, i32* %x404, align 4, !tbaa !193
  %cmp405 = icmp eq i32 %310, %312
  br i1 %cmp405, label %land.lhs.true.407, label %if.end.419

land.lhs.true.407:                                ; preds = %do.end.400
  %313 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start408 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %313, i32 0, i32 0
  %y409 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start408, i32 0, i32 1
  %314 = load i32, i32* %y409, align 4, !tbaa !187
  %315 = load i32, i32* %y, align 4, !tbaa !5
  %cmp410 = icmp eq i32 %314, %315
  br i1 %cmp410, label %land.lhs.true.412, label %if.end.419

land.lhs.true.412:                                ; preds = %land.lhs.true.407
  %316 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start413 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %316, i32 0, i32 0
  %y414 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start413, i32 0, i32 1
  %317 = load i32, i32* %y414, align 4, !tbaa !187
  %318 = load i32, i32* %y, align 4, !tbaa !5
  %cmp415 = icmp eq i32 %317, %318
  br i1 %cmp415, label %if.then.417, label %if.end.419

if.then.417:                                      ; preds = %land.lhs.true.412
  %319 = load i32, i32* %flags, align 4, !tbaa !5
  %or418 = or i32 %319, 1
  store i32 %or418, i32* %flags, align 4, !tbaa !5
  br label %if.end.419

if.end.419:                                       ; preds = %if.then.417, %land.lhs.true.412, %land.lhs.true.407, %do.end.400
  %320 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end420 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %320, i32 0, i32 1
  %x421 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end420, i32 0, i32 0
  %321 = load i32, i32* %x421, align 4, !tbaa !194
  %322 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end422 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %322, i32 0, i32 1
  %x423 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end422, i32 0, i32 0
  %323 = load i32, i32* %x423, align 4, !tbaa !194
  %cmp424 = icmp eq i32 %321, %323
  br i1 %cmp424, label %land.lhs.true.426, label %if.end.438

land.lhs.true.426:                                ; preds = %if.end.419
  %324 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end427 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %324, i32 0, i32 1
  %y428 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end427, i32 0, i32 1
  %325 = load i32, i32* %y428, align 4, !tbaa !195
  %326 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp429 = icmp eq i32 %325, %326
  br i1 %cmp429, label %land.lhs.true.431, label %if.end.438

land.lhs.true.431:                                ; preds = %land.lhs.true.426
  %327 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end432 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %327, i32 0, i32 1
  %y433 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end432, i32 0, i32 1
  %328 = load i32, i32* %y433, align 4, !tbaa !195
  %329 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp434 = icmp eq i32 %328, %329
  br i1 %cmp434, label %if.then.436, label %if.end.438

if.then.436:                                      ; preds = %land.lhs.true.431
  %330 = load i32, i32* %flags, align 4, !tbaa !5
  %or437 = or i32 %330, 1
  store i32 %or437, i32* %flags, align 4, !tbaa !5
  br label %if.end.438

if.end.438:                                       ; preds = %if.then.436, %land.lhs.true.431, %land.lhs.true.426, %if.end.419
  %dev439 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %331 = load %struct.gx_device_s*, %struct.gx_device_s** %dev439, align 8, !tbaa !96
  %332 = load i32, i32* %ybot, align 4, !tbaa !5
  %333 = load i32, i32* %ytop, align 4, !tbaa !5
  %334 = load i32, i32* %flags, align 4, !tbaa !5
  %pdevc440 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %335 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc440, align 8, !tbaa !90
  %lop441 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %336 = load i32, i32* %lop441, align 4, !tbaa !91
  %call442 = call i32 @gx_fill_trapezoid_cf_nd(%struct.gx_device_s* %331, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %332, i32 %333, i32 %334, %struct.gx_device_color_s* %335, i32 %336) #5
  store i32 %call442, i32* %code137, align 4, !tbaa !5
  %337 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.end(i64 4, i8* %337) #1
  %338 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %338) #1
  %339 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %339) #1
  br label %if.end.444

if.else.443:                                      ; preds = %if.else.386
  store i32 0, i32* %code137, align 4, !tbaa !5
  br label %if.end.444

if.end.444:                                       ; preds = %if.else.443, %if.end.438
  br label %if.end.445

if.end.445:                                       ; preds = %if.end.444, %if.end.385
  %340 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp446 = icmp slt i32 %340, 0
  br i1 %cmp446, label %if.then.448, label %if.end.449

if.then.448:                                      ; preds = %if.end.445
  %341 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %341, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.466

if.end.449:                                       ; preds = %if.end.445
  %342 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %343 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %344 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %345 = load i32, i32* %y, align 4, !tbaa !5
  %346 = load i32, i32* %y1, align 4, !tbaa !5
  %call450 = call i32 @complete_margin(%struct.line_list_s* %342, %struct.active_line_s* %343, %struct.active_line_s* %344, i32 %345, i32 %346) #5
  store i32 %call450, i32* %code137, align 4, !tbaa !5
  %347 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp451 = icmp slt i32 %347, 0
  br i1 %cmp451, label %if.then.453, label %if.end.454

if.then.453:                                      ; preds = %if.end.449
  %348 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %348, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.466

if.end.454:                                       ; preds = %if.end.449
  %349 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %350 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %351 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %352 = load i32, i32* %y, align 4, !tbaa !5
  %353 = load i32, i32* %y1, align 4, !tbaa !5
  %call455 = call i32 @margin_interior(%struct.line_list_s* %349, %struct.active_line_s* %350, %struct.active_line_s* %351, i32 %352, i32 %353) #5
  store i32 %call455, i32* %code137, align 4, !tbaa !5
  %354 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp456 = icmp slt i32 %354, 0
  br i1 %cmp456, label %if.then.458, label %if.end.459

if.then.458:                                      ; preds = %if.end.454
  %355 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %355, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.466

if.end.459:                                       ; preds = %if.end.454
  %356 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %357 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %358 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %359 = load i32, i32* %y, align 4, !tbaa !5
  %360 = load i32, i32* %y1, align 4, !tbaa !5
  %call460 = call i32 @add_margin(%struct.line_list_s* %356, %struct.active_line_s* %357, %struct.active_line_s* %358, i32 %359, i32 %360) #5
  store i32 %call460, i32* %code137, align 4, !tbaa !5
  %361 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp461 = icmp slt i32 %361, 0
  br i1 %cmp461, label %if.then.463, label %if.end.464

if.then.463:                                      ; preds = %if.end.459
  %362 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %362, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.466

if.end.464:                                       ; preds = %if.end.459
  %363 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %364 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %365 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %366 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %367 = load i32, i32* %y, align 4, !tbaa !5
  %368 = load i32, i32* %y1, align 4, !tbaa !5
  %call465 = call i32 @process_h_lists(%struct.line_list_s* %363, %struct.active_line_s* %364, %struct.active_line_s* %365, %struct.active_line_s* %366, i32 %367, i32 %368) #5
  store i32 %call465, i32* %code137, align 4, !tbaa !5
  %369 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %369, %struct.active_line_s** %plp, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.466

cleanup.466:                                      ; preds = %if.end.464, %if.then.463, %if.then.458, %if.then.453, %if.then.448
  %370 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %370) #1
  %371 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %371) #1
  %cleanup.dest.468 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.468, label %cleanup.474 [
    i32 0, label %cleanup.cont.469
  ]

cleanup.cont.469:                                 ; preds = %cleanup.466
  %372 = load i32, i32* %code137, align 4, !tbaa !5
  %cmp470 = icmp slt i32 %372, 0
  br i1 %cmp470, label %if.then.472, label %if.end.473

if.then.472:                                      ; preds = %cleanup.cont.469
  %373 = load i32, i32* %code137, align 4, !tbaa !5
  store i32 %373, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.474

if.end.473:                                       ; preds = %cleanup.cont.469
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.474

cleanup.474:                                      ; preds = %if.end.473, %if.then.472, %cleanup.466, %cond.end.296, %if.then.239, %if.end.191
  %374 = bitcast i32* %code137 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %374) #1
  %cleanup.dest.475 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.475, label %cleanup.480 [
    i32 0, label %cleanup.cont.476
    i32 15, label %for.inc.477
  ]

cleanup.cont.476:                                 ; preds = %cleanup.474
  br label %for.inc.477

for.inc.477:                                      ; preds = %cleanup.cont.476, %cleanup.474
  %375 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next478 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %375, i32 0, i32 15
  %376 = load %struct.active_line_s*, %struct.active_line_s** %next478, align 8, !tbaa !189
  store %struct.active_line_s* %376, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.133

for.end.479:                                      ; preds = %for.cond.133
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.480

cleanup.480:                                      ; preds = %for.end.479, %cleanup.474
  %377 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %377) #1
  %378 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %378) #1
  %cleanup.dest.482 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.482, label %cleanup.634 [
    i32 0, label %cleanup.cont.483
  ]

cleanup.cont.483:                                 ; preds = %cleanup.480
  br label %if.end.616

if.else.484:                                      ; preds = %lor.lhs.false
  %379 = bitcast %struct.active_line_s** %flp485 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %379) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp485, align 8, !tbaa !1
  %380 = bitcast i32* %inside486 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %380) #1
  store i32 0, i32* %inside486, align 4, !tbaa !5
  %381 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings487 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %381, i32 0, i32 13
  %382 = load i32*, i32** %windings487, align 8, !tbaa !79
  %383 = bitcast i32* %382 to i8*
  %384 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count488 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %384, i32 0, i32 20
  %385 = load i32, i32* %contour_count488, align 4, !tbaa !74
  %conv489 = sext i32 %385 to i64
  %mul490 = mul i64 4, %conv489
  %call491 = call i8* @memset(i8* %383, i32 0, i64 %mul490) #6
  %386 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head492 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %386, i32 0, i32 7
  %next493 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head492, i32 0, i32 15
  %387 = load %struct.active_line_s*, %struct.active_line_s** %next493, align 8, !tbaa !201
  store %struct.active_line_s* %387, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.494

for.cond.494:                                     ; preds = %for.inc.609, %if.else.484
  %388 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp495 = icmp ne %struct.active_line_s* %388, null
  br i1 %cmp495, label %for.body.497, label %for.end.611

for.body.497:                                     ; preds = %for.cond.494
  %389 = load i32, i32* %inside486, align 4, !tbaa !5
  %390 = load i32, i32* %rule, align 4, !tbaa !5
  %and498 = and i32 %389, %390
  %cmp499 = icmp ne i32 %and498, 0
  br i1 %cmp499, label %if.end.550, label %if.then.501

if.then.501:                                      ; preds = %for.body.497
  %391 = bitcast i32* %k502 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %391) #1
  %392 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count503 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %392, i32 0, i32 13
  %393 = load i32, i32* %contour_count503, align 4, !tbaa !186
  store i32 %393, i32* %k502, align 4, !tbaa !5
  %394 = bitcast i32* %v504 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %394) #1
  %395 = load i32, i32* %k502, align 4, !tbaa !5
  %idxprom505 = sext i32 %395 to i64
  %396 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings506 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %396, i32 0, i32 13
  %397 = load i32*, i32** %windings506, align 8, !tbaa !79
  %arrayidx507 = getelementptr inbounds i32, i32* %397, i64 %idxprom505
  %398 = load i32, i32* %arrayidx507, align 4, !tbaa !5
  store i32 %398, i32* %v504, align 4, !tbaa !5
  %399 = load i32, i32* %v504, align 4, !tbaa !5
  %cmp508 = icmp slt i32 %399, 0
  br i1 %cmp508, label %cond.true.510, label %cond.false.513

cond.true.510:                                    ; preds = %if.then.501
  %400 = load i32, i32* %v504, align 4, !tbaa !5
  %and511 = and i32 %400, 1
  %sub512 = sub nsw i32 0, %and511
  br label %cond.end.521

cond.false.513:                                   ; preds = %if.then.501
  %401 = load i32, i32* %v504, align 4, !tbaa !5
  %cmp514 = icmp sgt i32 %401, 0
  br i1 %cmp514, label %cond.true.516, label %cond.false.518

cond.true.516:                                    ; preds = %cond.false.513
  %402 = load i32, i32* %v504, align 4, !tbaa !5
  %and517 = and i32 %402, 1
  br label %cond.end.519

cond.false.518:                                   ; preds = %cond.false.513
  br label %cond.end.519

cond.end.519:                                     ; preds = %cond.false.518, %cond.true.516
  %cond520 = phi i32 [ %and517, %cond.true.516 ], [ 0, %cond.false.518 ]
  br label %cond.end.521

cond.end.521:                                     ; preds = %cond.end.519, %cond.true.510
  %cond522 = phi i32 [ %sub512, %cond.true.510 ], [ %cond520, %cond.end.519 ]
  %403 = load i32, i32* %inside486, align 4, !tbaa !5
  %sub523 = sub nsw i32 %403, %cond522
  store i32 %sub523, i32* %inside486, align 4, !tbaa !5
  %404 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction524 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %404, i32 0, i32 8
  %405 = load i32, i32* %direction524, align 4, !tbaa !178
  %406 = load i32, i32* %k502, align 4, !tbaa !5
  %idxprom525 = sext i32 %406 to i64
  %407 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings526 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %407, i32 0, i32 13
  %408 = load i32*, i32** %windings526, align 8, !tbaa !79
  %arrayidx527 = getelementptr inbounds i32, i32* %408, i64 %idxprom525
  %409 = load i32, i32* %arrayidx527, align 4, !tbaa !5
  %add528 = add nsw i32 %409, %405
  store i32 %add528, i32* %arrayidx527, align 4, !tbaa !5
  store i32 %add528, i32* %v504, align 4, !tbaa !5
  %410 = load i32, i32* %v504, align 4, !tbaa !5
  %cmp529 = icmp slt i32 %410, 0
  br i1 %cmp529, label %cond.true.531, label %cond.false.534

cond.true.531:                                    ; preds = %cond.end.521
  %411 = load i32, i32* %v504, align 4, !tbaa !5
  %and532 = and i32 %411, 1
  %sub533 = sub nsw i32 0, %and532
  br label %cond.end.542

cond.false.534:                                   ; preds = %cond.end.521
  %412 = load i32, i32* %v504, align 4, !tbaa !5
  %cmp535 = icmp sgt i32 %412, 0
  br i1 %cmp535, label %cond.true.537, label %cond.false.539

cond.true.537:                                    ; preds = %cond.false.534
  %413 = load i32, i32* %v504, align 4, !tbaa !5
  %and538 = and i32 %413, 1
  br label %cond.end.540

cond.false.539:                                   ; preds = %cond.false.534
  br label %cond.end.540

cond.end.540:                                     ; preds = %cond.false.539, %cond.true.537
  %cond541 = phi i32 [ %and538, %cond.true.537 ], [ 0, %cond.false.539 ]
  br label %cond.end.542

cond.end.542:                                     ; preds = %cond.end.540, %cond.true.531
  %cond543 = phi i32 [ %sub533, %cond.true.531 ], [ %cond541, %cond.end.540 ]
  %414 = load i32, i32* %inside486, align 4, !tbaa !5
  %add544 = add nsw i32 %414, %cond543
  store i32 %add544, i32* %inside486, align 4, !tbaa !5
  %415 = bitcast i32* %v504 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %415) #1
  %416 = bitcast i32* %k502 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %416) #1
  %417 = load i32, i32* %inside486, align 4, !tbaa !5
  %418 = load i32, i32* %rule, align 4, !tbaa !5
  %and545 = and i32 %417, %418
  %cmp546 = icmp ne i32 %and545, 0
  br i1 %cmp546, label %if.then.548, label %if.end.549

if.then.548:                                      ; preds = %cond.end.542
  %419 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %419, %struct.active_line_s** %flp485, align 8, !tbaa !1
  br label %if.end.549

if.end.549:                                       ; preds = %if.then.548, %cond.end.542
  br label %for.inc.609

if.end.550:                                       ; preds = %for.body.497
  %420 = bitcast i32* %k551 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %420) #1
  %421 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count552 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %421, i32 0, i32 13
  %422 = load i32, i32* %contour_count552, align 4, !tbaa !186
  store i32 %422, i32* %k551, align 4, !tbaa !5
  %423 = bitcast i32* %v553 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %423) #1
  %424 = load i32, i32* %k551, align 4, !tbaa !5
  %idxprom554 = sext i32 %424 to i64
  %425 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings555 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %425, i32 0, i32 13
  %426 = load i32*, i32** %windings555, align 8, !tbaa !79
  %arrayidx556 = getelementptr inbounds i32, i32* %426, i64 %idxprom554
  %427 = load i32, i32* %arrayidx556, align 4, !tbaa !5
  store i32 %427, i32* %v553, align 4, !tbaa !5
  %428 = load i32, i32* %v553, align 4, !tbaa !5
  %cmp557 = icmp slt i32 %428, 0
  br i1 %cmp557, label %cond.true.559, label %cond.false.562

cond.true.559:                                    ; preds = %if.end.550
  %429 = load i32, i32* %v553, align 4, !tbaa !5
  %and560 = and i32 %429, 1
  %sub561 = sub nsw i32 0, %and560
  br label %cond.end.570

cond.false.562:                                   ; preds = %if.end.550
  %430 = load i32, i32* %v553, align 4, !tbaa !5
  %cmp563 = icmp sgt i32 %430, 0
  br i1 %cmp563, label %cond.true.565, label %cond.false.567

cond.true.565:                                    ; preds = %cond.false.562
  %431 = load i32, i32* %v553, align 4, !tbaa !5
  %and566 = and i32 %431, 1
  br label %cond.end.568

cond.false.567:                                   ; preds = %cond.false.562
  br label %cond.end.568

cond.end.568:                                     ; preds = %cond.false.567, %cond.true.565
  %cond569 = phi i32 [ %and566, %cond.true.565 ], [ 0, %cond.false.567 ]
  br label %cond.end.570

cond.end.570:                                     ; preds = %cond.end.568, %cond.true.559
  %cond571 = phi i32 [ %sub561, %cond.true.559 ], [ %cond569, %cond.end.568 ]
  %432 = load i32, i32* %inside486, align 4, !tbaa !5
  %sub572 = sub nsw i32 %432, %cond571
  store i32 %sub572, i32* %inside486, align 4, !tbaa !5
  %433 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction573 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %433, i32 0, i32 8
  %434 = load i32, i32* %direction573, align 4, !tbaa !178
  %435 = load i32, i32* %k551, align 4, !tbaa !5
  %idxprom574 = sext i32 %435 to i64
  %436 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings575 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %436, i32 0, i32 13
  %437 = load i32*, i32** %windings575, align 8, !tbaa !79
  %arrayidx576 = getelementptr inbounds i32, i32* %437, i64 %idxprom574
  %438 = load i32, i32* %arrayidx576, align 4, !tbaa !5
  %add577 = add nsw i32 %438, %434
  store i32 %add577, i32* %arrayidx576, align 4, !tbaa !5
  store i32 %add577, i32* %v553, align 4, !tbaa !5
  %439 = load i32, i32* %v553, align 4, !tbaa !5
  %cmp578 = icmp slt i32 %439, 0
  br i1 %cmp578, label %cond.true.580, label %cond.false.583

cond.true.580:                                    ; preds = %cond.end.570
  %440 = load i32, i32* %v553, align 4, !tbaa !5
  %and581 = and i32 %440, 1
  %sub582 = sub nsw i32 0, %and581
  br label %cond.end.591

cond.false.583:                                   ; preds = %cond.end.570
  %441 = load i32, i32* %v553, align 4, !tbaa !5
  %cmp584 = icmp sgt i32 %441, 0
  br i1 %cmp584, label %cond.true.586, label %cond.false.588

cond.true.586:                                    ; preds = %cond.false.583
  %442 = load i32, i32* %v553, align 4, !tbaa !5
  %and587 = and i32 %442, 1
  br label %cond.end.589

cond.false.588:                                   ; preds = %cond.false.583
  br label %cond.end.589

cond.end.589:                                     ; preds = %cond.false.588, %cond.true.586
  %cond590 = phi i32 [ %and587, %cond.true.586 ], [ 0, %cond.false.588 ]
  br label %cond.end.591

cond.end.591:                                     ; preds = %cond.end.589, %cond.true.580
  %cond592 = phi i32 [ %sub582, %cond.true.580 ], [ %cond590, %cond.end.589 ]
  %443 = load i32, i32* %inside486, align 4, !tbaa !5
  %add593 = add nsw i32 %443, %cond592
  store i32 %add593, i32* %inside486, align 4, !tbaa !5
  %444 = bitcast i32* %v553 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %444) #1
  %445 = bitcast i32* %k551 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %445) #1
  %446 = load i32, i32* %inside486, align 4, !tbaa !5
  %447 = load i32, i32* %rule, align 4, !tbaa !5
  %and594 = and i32 %446, %447
  %cmp595 = icmp ne i32 %and594, 0
  br i1 %cmp595, label %if.then.597, label %if.end.598

if.then.597:                                      ; preds = %cond.end.591
  br label %for.inc.609

if.end.598:                                       ; preds = %cond.end.591
  %448 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %449 = load %struct.active_line_s*, %struct.active_line_s** %flp485, align 8, !tbaa !1
  %450 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %451 = load i32, i32* %y, align 4, !tbaa !5
  %452 = load i32, i32* %y1, align 4, !tbaa !5
  %call599 = call i32 @continue_margin(%struct.line_list_s* %448, %struct.active_line_s* %449, %struct.active_line_s* %450, i32 %451, i32 %452) #5
  store i32 %call599, i32* %code, align 4, !tbaa !5
  %453 = load i32, i32* %code, align 4, !tbaa !5
  %cmp600 = icmp slt i32 %453, 0
  br i1 %cmp600, label %if.then.602, label %if.end.603

if.then.602:                                      ; preds = %if.end.598
  %454 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %454, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.612

if.end.603:                                       ; preds = %if.end.598
  %455 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %456 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %457 = load %struct.active_line_s*, %struct.active_line_s** %flp485, align 8, !tbaa !1
  %458 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %459 = load i32, i32* %y, align 4, !tbaa !5
  %460 = load i32, i32* %y1, align 4, !tbaa !5
  %call604 = call i32 @process_h_lists(%struct.line_list_s* %455, %struct.active_line_s* %456, %struct.active_line_s* %457, %struct.active_line_s* %458, i32 %459, i32 %460) #5
  store i32 %call604, i32* %code, align 4, !tbaa !5
  %461 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %461, %struct.active_line_s** %plp, align 8, !tbaa !1
  %462 = load i32, i32* %code, align 4, !tbaa !5
  %cmp605 = icmp slt i32 %462, 0
  br i1 %cmp605, label %if.then.607, label %if.end.608

if.then.607:                                      ; preds = %if.end.603
  %463 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %463, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.612

if.end.608:                                       ; preds = %if.end.603
  br label %for.inc.609

for.inc.609:                                      ; preds = %if.end.608, %if.then.597, %if.end.549
  %464 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next610 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %464, i32 0, i32 15
  %465 = load %struct.active_line_s*, %struct.active_line_s** %next610, align 8, !tbaa !189
  store %struct.active_line_s* %465, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.494

for.end.611:                                      ; preds = %for.cond.494
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.612

cleanup.612:                                      ; preds = %for.end.611, %if.then.607, %if.then.602
  %466 = bitcast i32* %inside486 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %466) #1
  %467 = bitcast %struct.active_line_s** %flp485 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %467) #1
  %cleanup.dest.614 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.614, label %cleanup.634 [
    i32 0, label %cleanup.cont.615
  ]

cleanup.cont.615:                                 ; preds = %cleanup.612
  br label %if.end.616

if.end.616:                                       ; preds = %cleanup.cont.615, %cleanup.cont.483
  %468 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %cmp617 = icmp ne %struct.active_line_s* %468, null
  br i1 %cmp617, label %if.then.619, label %if.end.625

if.then.619:                                      ; preds = %if.end.616
  %469 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %470 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %471 = load i32, i32* %y, align 4, !tbaa !5
  %472 = load i32, i32* %y1, align 4, !tbaa !5
  %call620 = call i32 @process_h_lists(%struct.line_list_s* %469, %struct.active_line_s* %470, %struct.active_line_s* null, %struct.active_line_s* null, i32 %471, i32 %472) #5
  store i32 %call620, i32* %code, align 4, !tbaa !5
  %473 = load i32, i32* %code, align 4, !tbaa !5
  %cmp621 = icmp slt i32 %473, 0
  br i1 %cmp621, label %if.then.623, label %if.end.624

if.then.623:                                      ; preds = %if.then.619
  %474 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %474, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.624:                                       ; preds = %if.then.619
  br label %if.end.625

if.end.625:                                       ; preds = %if.end.624, %if.end.616
  %475 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %476 = load i32, i32* %y1, align 4, !tbaa !5
  %call626 = call i32 @move_al_by_y(%struct.line_list_s* %475, i32 %476) #5
  store i32 %call626, i32* %code, align 4, !tbaa !5
  %477 = load i32, i32* %code, align 4, !tbaa !5
  %cmp627 = icmp slt i32 %477, 0
  br i1 %cmp627, label %if.then.629, label %if.end.630

if.then.629:                                      ; preds = %if.end.625
  %478 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %478, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.634

if.end.630:                                       ; preds = %if.end.625
  %479 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0631 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %479, i32 0, i32 8
  %480 = load %struct.active_line_s*, %struct.active_line_s** %h_list0631, align 8, !tbaa !124
  %481 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1632 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %481, i32 0, i32 9
  store %struct.active_line_s* %480, %struct.active_line_s** %h_list1632, align 8, !tbaa !123
  %482 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0633 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %482, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0633, align 8, !tbaa !124
  %483 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %483, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.634

cleanup.634:                                      ; preds = %if.end.630, %if.then.629, %if.then.623, %cleanup.612, %cleanup.480, %if.then.121, %if.then.91, %if.then.85, %cleanup, %if.then.76, %if.end.45, %if.then.44
  %484 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %484) #1
  %485 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %485) #1
  %486 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %486) #1
  %487 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %487) #1
  %cleanup.dest.638 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.638, label %cleanup.657 [
    i32 0, label %cleanup.cont.639
    i32 3, label %while.end.640
    i32 2, label %while.cond
  ]

cleanup.cont.639:                                 ; preds = %cleanup.634
  br label %while.cond

while.end.640:                                    ; preds = %cleanup.634
  %488 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %489 = load i32, i32* %y, align 4, !tbaa !5
  %490 = load i32, i32* %y, align 4, !tbaa !5
  %add641 = add nsw i32 %490, 1
  %call642 = call i32 @process_h_lists(%struct.line_list_s* %488, %struct.active_line_s* null, %struct.active_line_s* null, %struct.active_line_s* null, i32 %489, i32 %add641) #5
  store i32 %call642, i32* %code, align 4, !tbaa !5
  %491 = load i32, i32* %code, align 4, !tbaa !5
  %cmp643 = icmp slt i32 %491, 0
  br i1 %cmp643, label %if.then.645, label %if.end.646

if.then.645:                                      ; preds = %while.end.640
  %492 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %492, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.657

if.end.646:                                       ; preds = %while.end.640
  %dev647 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %493 = load %struct.gx_device_s*, %struct.gx_device_s** %dev647, align 8, !tbaa !96
  %494 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %495 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1648 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %495, i32 0, i32 11
  %call649 = call i32 @close_margins(%struct.gx_device_s* %493, %struct.line_list_s* %494, %struct.margin_set_s* %margin_set1648) #5
  store i32 %call649, i32* %code, align 4, !tbaa !5
  %496 = load i32, i32* %code, align 4, !tbaa !5
  %cmp650 = icmp slt i32 %496, 0
  br i1 %cmp650, label %if.then.652, label %if.end.653

if.then.652:                                      ; preds = %if.end.646
  %497 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %497, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.657

if.end.653:                                       ; preds = %if.end.646
  %dev654 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %498 = load %struct.gx_device_s*, %struct.gx_device_s** %dev654, align 8, !tbaa !96
  %499 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %500 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0655 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %500, i32 0, i32 10
  %call656 = call i32 @close_margins(%struct.gx_device_s* %498, %struct.line_list_s* %499, %struct.margin_set_s* %margin_set0655) #5
  store i32 %call656, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.657

cleanup.657:                                      ; preds = %if.end.653, %if.then.652, %if.then.645, %cleanup.634, %if.then
  %501 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %501) #1
  %502 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %502) #1
  %503 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %503) #1
  %504 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %504) #1
  %505 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %505) #1
  %506 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %506) #1
  %507 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %507) #1
  %508 = load i32, i32* %retval
  ret i32 %508
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__pr_fd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code135 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi = alloca i32, align 4
  %xx = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %flags = alloca i32, align 4
  %flp362 = alloca %struct.active_line_s*, align 8
  %inside363 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.447

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.429, %cleanup.424, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %if.end.36, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %if.end.32
  %48 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %49 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_h_new(%struct.active_line_s* %48, %struct.line_list_s* %49) #5
  br label %if.end.36

if.else:                                          ; preds = %if.end.32
  %50 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %51 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %50, %struct.line_list_s* %51) #5
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.35
  %52 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %52, %struct.active_line_s** %yll, align 8, !tbaa !1
  %53 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %54 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head37 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %54, i32 0, i32 7
  %next38 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head37, i32 0, i32 15
  %55 = load %struct.active_line_s*, %struct.active_line_s** %next38, align 8, !tbaa !201
  %cmp39 = icmp eq %struct.active_line_s* %55, null
  br i1 %cmp39, label %if.then.41, label %if.end.49

if.then.41:                                       ; preds = %while.end
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp42 = icmp eq %struct.active_line_s* %56, null
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.then.41
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.45:                                        ; preds = %if.then.41
  %57 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %57, i32 0, i32 0
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start46, i32 0, i32 1
  %58 = load i32, i32* %y47, align 4, !tbaa !187
  store i32 %58, i32* %y, align 4, !tbaa !5
  %59 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %59, i32 0, i32 8
  %60 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %61 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %61, i32 0, i32 9
  store %struct.active_line_s* %60, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %62 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list048 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %62, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list048, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.49:                                        ; preds = %while.end
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp50 = icmp ne %struct.active_line_s* %63, null
  br i1 %cmp50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.49
  %64 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 0
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start52, i32 0, i32 1
  %65 = load i32, i32* %y53, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.49
  %66 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %66, i32 0, i32 18
  %67 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %65, %cond.true ], [ %67, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %68 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68) #1
  %69 = load i32, i32* %y, align 4, !tbaa !5
  %70 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %70, -1
  %or = or i32 %69, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %71 = load i32, i32* %y1, align 4, !tbaa !5
  %72 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp54 = icmp sgt i32 %71, %72
  br i1 %cmp54, label %if.then.56, label %if.end.58

if.then.56:                                       ; preds = %cond.end
  %73 = load i32, i32* %y_band, align 4, !tbaa !5
  %add57 = add nsw i32 %73, 1
  store i32 %add57, i32* %y1, align 4, !tbaa !5
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.56, %cond.end
  %74 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #1
  %75 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head59 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %75, i32 0, i32 7
  %next60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head59, i32 0, i32 15
  %76 = load %struct.active_line_s*, %struct.active_line_s** %next60, align 8, !tbaa !201
  store %struct.active_line_s* %76, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.58
  %77 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp61 = icmp ne %struct.active_line_s* %77, null
  br i1 %cmp61, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %78 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %78, i32 0, i32 1
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %79 = load i32, i32* %y63, align 4, !tbaa !195
  %80 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp64 = icmp slt i32 %79, %80
  br i1 %cmp64, label %if.then.66, label %if.end.69

if.then.66:                                       ; preds = %for.body
  %81 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %81, i32 0, i32 1
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end67, i32 0, i32 1
  %82 = load i32, i32* %y68, align 4, !tbaa !195
  store i32 %82, i32* %y1, align 4, !tbaa !5
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.66, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.69
  %83 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next70 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %83, i32 0, i32 15
  %84 = load %struct.active_line_s*, %struct.active_line_s** %next70, align 8, !tbaa !189
  store %struct.active_line_s* %84, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %85 = load i32, i32* %y, align 4, !tbaa !5
  %86 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp71 = icmp eq i32 %85, %86
  br i1 %cmp71, label %if.then.73, label %if.end.88

if.then.73:                                       ; preds = %for.end
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %88 = load i32, i32* %y, align 4, !tbaa !5
  %call = call i32 @process_h_segments(%struct.line_list_s* %87, i32 %88) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %89 = load i32, i32* %code, align 4, !tbaa !5
  %cmp74 = icmp slt i32 %89, 0
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %if.then.73
  %90 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %90, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.77:                                        ; preds = %if.then.73
  %91 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #1
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %93 = load i32, i32* %y1, align 4, !tbaa !5
  %call78 = call i32 @move_al_by_y(%struct.line_list_s* %92, i32 %93) #5
  store i32 %call78, i32* %code1, align 4, !tbaa !5
  %94 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp79 = icmp slt i32 %94, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.77
  %95 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %95, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %if.end.77
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.81
  %96 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %96) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.424 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %97 = load i32, i32* %code, align 4, !tbaa !5
  %cmp83 = icmp sgt i32 %97, 0
  br i1 %cmp83, label %if.then.85, label %if.end.87

if.then.85:                                       ; preds = %cleanup.cont
  %98 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list86 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %98, i32 0, i32 5
  %99 = load %struct.active_line_s*, %struct.active_line_s** %y_list86, align 8, !tbaa !121
  store %struct.active_line_s* %99, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.87:                                        ; preds = %cleanup.cont
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %for.end
  %100 = load i32, i32* %y, align 4, !tbaa !5
  %101 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp89 = icmp sge i32 %100, %101
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %if.end.88
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.92:                                        ; preds = %if.end.88
  %102 = load i32, i32* %y, align 4, !tbaa !5
  %sub93 = sub nsw i32 %102, 0
  %conv94 = sext i32 %sub93 to i64
  %add95 = add nsw i64 %conv94, 127
  %and96 = and i64 %add95, -256
  %103 = load i32, i32* %y1, align 4, !tbaa !5
  %add97 = add nsw i32 %103, 0
  %conv98 = sext i32 %add97 to i64
  %add99 = add nsw i64 %conv98, 127
  %and100 = and i64 %add99, -256
  %cmp101 = icmp slt i64 %and96, %and100
  %conv102 = zext i1 %cmp101 to i32
  store i32 %conv102, i32* %covering_pixel_centers, align 4, !tbaa !5
  %104 = load i32, i32* %y, align 4, !tbaa !5
  %105 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp103 = icmp ne i32 %104, %105
  br i1 %cmp103, label %if.then.105, label %if.end.117

if.then.105:                                      ; preds = %if.end.92
  %106 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %107 = load i32, i32* %y, align 4, !tbaa !5
  %108 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %108, 0
  %cond106 = select i1 %tobool, i32 1, i32 -1
  %109 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %106, i32 %107, i32* %y1, i32 %cond106, i32 %109) #5
  %110 = load i32, i32* %y, align 4, !tbaa !5
  %sub107 = sub nsw i32 %110, 0
  %conv108 = sext i32 %sub107 to i64
  %add109 = add nsw i64 %conv108, 127
  %and110 = and i64 %add109, -256
  %111 = load i32, i32* %y1, align 4, !tbaa !5
  %add111 = add nsw i32 %111, 0
  %conv112 = sext i32 %add111 to i64
  %add113 = add nsw i64 %conv112, 127
  %and114 = and i64 %add113, -256
  %cmp115 = icmp slt i64 %and110, %and114
  %conv116 = zext i1 %cmp115 to i32
  store i32 %conv116, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.105, %if.end.92
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %112 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %113 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %114 = load i32, i32* %y1, align 4, !tbaa !5
  %call118 = call i32 @start_margin_set(%struct.gx_device_s* %112, %struct.line_list_s* %113, i32 %114) #5
  store i32 %call118, i32* %code, align 4, !tbaa !5
  %115 = load i32, i32* %code, align 4, !tbaa !5
  %cmp119 = icmp slt i32 %115, 0
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.end.117
  %116 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %116, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.122:                                       ; preds = %if.end.117
  %117 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool123 = icmp ne i32 %117, 0
  br i1 %tobool123, label %if.then.125, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.122
  %118 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool124 = icmp ne i32 %118, 0
  br i1 %tobool124, label %if.then.125, label %if.else.361

if.then.125:                                      ; preds = %lor.lhs.false, %if.end.122
  %119 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %120 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %120) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %do.body.126

do.body.126:                                      ; preds = %if.then.125
  br label %do.cond.127

do.cond.127:                                      ; preds = %do.body.126
  br label %do.end.128

do.end.128:                                       ; preds = %do.cond.127
  %121 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head129 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %121, i32 0, i32 7
  %next130 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head129, i32 0, i32 15
  %122 = load %struct.active_line_s*, %struct.active_line_s** %next130, align 8, !tbaa !201
  store %struct.active_line_s* %122, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.131

for.cond.131:                                     ; preds = %for.inc.354, %do.end.128
  %123 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp132 = icmp ne %struct.active_line_s* %123, null
  br i1 %cmp132, label %for.body.134, label %for.end.356

for.body.134:                                     ; preds = %for.cond.131
  %124 = bitcast i32* %code135 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %124) #1
  br label %do.body.136

do.body.136:                                      ; preds = %for.body.134
  br label %do.cond.137

do.cond.137:                                      ; preds = %do.body.136
  br label %do.end.138

do.end.138:                                       ; preds = %do.cond.137
  br label %do.body.139

do.body.139:                                      ; preds = %do.end.138
  br label %do.cond.140

do.cond.140:                                      ; preds = %do.body.139
  br label %do.end.141

do.end.141:                                       ; preds = %do.cond.140
  %125 = load i32, i32* %inside, align 4, !tbaa !5
  %126 = load i32, i32* %rule, align 4, !tbaa !5
  %and142 = and i32 %125, %126
  %cmp143 = icmp ne i32 %and142, 0
  br i1 %cmp143, label %if.end.153, label %if.then.145

if.then.145:                                      ; preds = %do.end.141
  %127 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction146 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %127, i32 0, i32 8
  %128 = load i32, i32* %direction146, align 4, !tbaa !178
  %129 = load i32, i32* %inside, align 4, !tbaa !5
  %add147 = add nsw i32 %129, %128
  store i32 %add147, i32* %inside, align 4, !tbaa !5
  %130 = load i32, i32* %inside, align 4, !tbaa !5
  %131 = load i32, i32* %rule, align 4, !tbaa !5
  %and148 = and i32 %130, %131
  %cmp149 = icmp ne i32 %and148, 0
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.then.145
  %132 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %132, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.151, %if.then.145
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.351

if.end.153:                                       ; preds = %do.end.141
  %133 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction154 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %133, i32 0, i32 8
  %134 = load i32, i32* %direction154, align 4, !tbaa !178
  %135 = load i32, i32* %inside, align 4, !tbaa !5
  %add155 = add nsw i32 %135, %134
  store i32 %add155, i32* %inside, align 4, !tbaa !5
  %136 = load i32, i32* %inside, align 4, !tbaa !5
  %137 = load i32, i32* %rule, align 4, !tbaa !5
  %and156 = and i32 %136, %137
  %cmp157 = icmp ne i32 %and156, 0
  br i1 %cmp157, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.end.153
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.351

if.end.160:                                       ; preds = %if.end.153
  %138 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next161 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %138, i32 0, i32 15
  %139 = load %struct.active_line_s*, %struct.active_line_s** %next161, align 8, !tbaa !189
  %cmp162 = icmp ne %struct.active_line_s* %139, null
  br i1 %cmp162, label %land.lhs.true, label %if.end.178

land.lhs.true:                                    ; preds = %if.end.160
  %140 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current164 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %140, i32 0, i32 5
  %141 = load i32, i32* %x_current164, align 4, !tbaa !204
  %142 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next165 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %142, i32 0, i32 15
  %143 = load %struct.active_line_s*, %struct.active_line_s** %next165, align 8, !tbaa !189
  %x_current166 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %143, i32 0, i32 5
  %144 = load i32, i32* %x_current166, align 4, !tbaa !204
  %cmp167 = icmp eq i32 %141, %144
  br i1 %cmp167, label %land.lhs.true.169, label %if.end.178

land.lhs.true.169:                                ; preds = %land.lhs.true
  %145 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %145, i32 0, i32 6
  %146 = load i32, i32* %x_next, align 4, !tbaa !205
  %147 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next170 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %147, i32 0, i32 15
  %148 = load %struct.active_line_s*, %struct.active_line_s** %next170, align 8, !tbaa !189
  %x_next171 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %148, i32 0, i32 6
  %149 = load i32, i32* %x_next171, align 4, !tbaa !205
  %cmp172 = icmp eq i32 %146, %149
  br i1 %cmp172, label %if.then.174, label %if.end.178

if.then.174:                                      ; preds = %land.lhs.true.169
  %150 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next175 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %150, i32 0, i32 15
  %151 = load %struct.active_line_s*, %struct.active_line_s** %next175, align 8, !tbaa !189
  store %struct.active_line_s* %151, %struct.active_line_s** %alp, align 8, !tbaa !1
  %152 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction176 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %152, i32 0, i32 8
  %153 = load i32, i32* %direction176, align 4, !tbaa !178
  %154 = load i32, i32* %inside, align 4, !tbaa !5
  %add177 = add nsw i32 %154, %153
  store i32 %add177, i32* %inside, align 4, !tbaa !5
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.351

if.end.178:                                       ; preds = %land.lhs.true.169, %land.lhs.true, %if.end.160
  br label %do.body.179

do.body.179:                                      ; preds = %if.end.178
  br label %do.cond.180

do.cond.180:                                      ; preds = %do.body.179
  br label %do.end.181

do.end.181:                                       ; preds = %do.cond.180
  %155 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %155) #1
  %156 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %157 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %157, i32 0, i32 0
  %y182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %158 = load i32, i32* %y182, align 4, !tbaa !38
  %cmp183 = icmp sgt i32 %156, %158
  br i1 %cmp183, label %cond.true.185, label %cond.false.186

cond.true.185:                                    ; preds = %do.end.181
  %159 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.190

cond.false.186:                                   ; preds = %do.end.181
  %pbox187 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %160 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox187, align 8, !tbaa !97
  %p188 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %160, i32 0, i32 0
  %y189 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p188, i32 0, i32 1
  %161 = load i32, i32* %y189, align 4, !tbaa !38
  br label %cond.end.190

cond.end.190:                                     ; preds = %cond.false.186, %cond.true.185
  %cond191 = phi i32 [ %159, %cond.true.185 ], [ %161, %cond.false.186 ]
  store i32 %cond191, i32* %ybot, align 4, !tbaa !5
  %162 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %162) #1
  %163 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox192 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %164 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox192, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %164, i32 0, i32 1
  %y193 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %165 = load i32, i32* %y193, align 4, !tbaa !42
  %cmp194 = icmp slt i32 %163, %165
  br i1 %cmp194, label %cond.true.196, label %cond.false.197

cond.true.196:                                    ; preds = %cond.end.190
  %166 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.201

cond.false.197:                                   ; preds = %cond.end.190
  %pbox198 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %167 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox198, align 8, !tbaa !97
  %q199 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %167, i32 0, i32 1
  %y200 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q199, i32 0, i32 1
  %168 = load i32, i32* %y200, align 4, !tbaa !42
  br label %cond.end.201

cond.end.201:                                     ; preds = %cond.false.197, %cond.true.196
  %cond202 = phi i32 [ %166, %cond.true.196 ], [ %168, %cond.false.197 ]
  store i32 %cond202, i32* %ytop, align 4, !tbaa !5
  %169 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end203 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %169, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end203, i32 0, i32 0
  %170 = load i32, i32* %x, align 4, !tbaa !194
  %171 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start204 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %171, i32 0, i32 0
  %x205 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start204, i32 0, i32 0
  %172 = load i32, i32* %x205, align 4, !tbaa !193
  %cmp206 = icmp eq i32 %170, %172
  br i1 %cmp206, label %land.lhs.true.208, label %if.else.264

land.lhs.true.208:                                ; preds = %cond.end.201
  %173 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end209 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 1
  %x210 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end209, i32 0, i32 0
  %174 = load i32, i32* %x210, align 4, !tbaa !194
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start211 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 0
  %x212 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start211, i32 0, i32 0
  %176 = load i32, i32* %x212, align 4, !tbaa !193
  %cmp213 = icmp eq i32 %174, %176
  br i1 %cmp213, label %if.then.215, label %if.else.264

if.then.215:                                      ; preds = %land.lhs.true.208
  %177 = load i32, i32* %ytop, align 4, !tbaa !5
  %178 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp216 = icmp sgt i32 %177, %178
  br i1 %cmp216, label %if.then.218, label %if.else.262

if.then.218:                                      ; preds = %if.then.215
  %179 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %179) #1
  %180 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv219 = sext i32 %180 to i64
  %add220 = add nsw i64 %conv219, 127
  %shr = ashr i64 %add220, 8
  %conv221 = trunc i64 %shr to i32
  store i32 %conv221, i32* %yi, align 4, !tbaa !5
  %181 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %181) #1
  %182 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv222 = sext i32 %182 to i64
  %add223 = add nsw i64 %conv222, 127
  %shr224 = ashr i64 %add223, 8
  %conv225 = trunc i64 %shr224 to i32
  %183 = load i32, i32* %yi, align 4, !tbaa !5
  %sub226 = sub nsw i32 %conv225, %183
  store i32 %sub226, i32* %hi, align 4, !tbaa !5
  %184 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %184) #1
  %185 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end227 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %185, i32 0, i32 1
  %x228 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end227, i32 0, i32 0
  %186 = load i32, i32* %x228, align 4, !tbaa !194
  %sub229 = sub nsw i32 %186, 0
  %conv230 = sext i32 %sub229 to i64
  %add231 = add nsw i64 %conv230, 127
  %shr232 = ashr i64 %add231, 8
  %conv233 = trunc i64 %shr232 to i32
  store i32 %conv233, i32* %xli, align 4, !tbaa !5
  %187 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %187) #1
  %188 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end234 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %188, i32 0, i32 1
  %x235 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end234, i32 0, i32 0
  %189 = load i32, i32* %x235, align 4, !tbaa !194
  %add236 = add nsw i32 %189, 0
  %conv237 = sext i32 %add236 to i64
  %add238 = add nsw i64 %conv237, 127
  %shr239 = ashr i64 %add238, 8
  %conv240 = trunc i64 %shr239 to i32
  store i32 %conv240, i32* %xi, align 4, !tbaa !5
  %190 = load i32, i32* %xli, align 4, !tbaa !5
  %191 = load i32, i32* %xi, align 4, !tbaa !5
  %cmp241 = icmp eq i32 %190, %191
  br i1 %cmp241, label %if.then.243, label %if.end.255

if.then.243:                                      ; preds = %if.then.218
  %192 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %192) #1
  %193 = load i32, i32* %xli, align 4, !tbaa !5
  %shl = shl i32 %193, 8
  store i32 %shl, i32* %xx, align 4, !tbaa !5
  %194 = load i32, i32* %xx, align 4, !tbaa !5
  %195 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end244 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %195, i32 0, i32 1
  %x245 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end244, i32 0, i32 0
  %196 = load i32, i32* %x245, align 4, !tbaa !194
  %sub246 = sub nsw i32 %194, %196
  %197 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end247 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %197, i32 0, i32 1
  %x248 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end247, i32 0, i32 0
  %198 = load i32, i32* %x248, align 4, !tbaa !194
  %199 = load i32, i32* %xx, align 4, !tbaa !5
  %sub249 = sub nsw i32 %198, %199
  %cmp250 = icmp slt i32 %sub246, %sub249
  br i1 %cmp250, label %if.then.252, label %if.else.253

if.then.252:                                      ; preds = %if.then.243
  %200 = load i32, i32* %xi, align 4, !tbaa !5
  %inc = add nsw i32 %200, 1
  store i32 %inc, i32* %xi, align 4, !tbaa !5
  br label %if.end.254

if.else.253:                                      ; preds = %if.then.243
  %201 = load i32, i32* %xli, align 4, !tbaa !5
  %dec = add nsw i32 %201, -1
  store i32 %dec, i32* %xli, align 4, !tbaa !5
  br label %if.end.254

if.end.254:                                       ; preds = %if.else.253, %if.then.252
  %202 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %202) #1
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.254, %if.then.218
  br label %do.body.256

do.body.256:                                      ; preds = %if.end.255
  br label %do.cond.257

do.cond.257:                                      ; preds = %do.body.256
  br label %do.end.258

do.end.258:                                       ; preds = %do.cond.257
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %203 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %dev259 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %204 = load %struct.gx_device_s*, %struct.gx_device_s** %dev259, align 8, !tbaa !96
  %205 = load i32, i32* %xli, align 4, !tbaa !5
  %206 = load i32, i32* %yi, align 4, !tbaa !5
  %207 = load i32, i32* %xi, align 4, !tbaa !5
  %208 = load i32, i32* %xli, align 4, !tbaa !5
  %sub260 = sub nsw i32 %207, %208
  %209 = load i32, i32* %hi, align 4, !tbaa !5
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %210 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %210, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %211 = load i64, i64* %pure, align 8, !tbaa !203
  %call261 = call i32 %203(%struct.gx_device_s* %204, i32 %205, i32 %206, i32 %sub260, i32 %209, i64 %211) #5
  store i32 %call261, i32* %code135, align 4, !tbaa !5
  %212 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %212) #1
  %213 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %213) #1
  %214 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %214) #1
  %215 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %215) #1
  br label %if.end.263

if.else.262:                                      ; preds = %if.then.215
  store i32 0, i32* %code135, align 4, !tbaa !5
  br label %if.end.263

if.end.263:                                       ; preds = %if.else.262, %do.end.258
  br label %if.end.322

if.else.264:                                      ; preds = %land.lhs.true.208, %cond.end.201
  %216 = load i32, i32* %ybot, align 4, !tbaa !5
  %217 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp265 = icmp slt i32 %216, %217
  br i1 %cmp265, label %if.then.267, label %if.else.320

if.then.267:                                      ; preds = %if.else.264
  %218 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %218) #1
  %219 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %219) #1
  %start268 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %220 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start269 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %220, i32 0, i32 0
  %221 = bitcast %struct.gs_fixed_point_s* %start268 to i8*
  %222 = bitcast %struct.gs_fixed_point_s* %start269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %221, i8* %222, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end270 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %223 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end271 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %223, i32 0, i32 1
  %224 = bitcast %struct.gs_fixed_point_s* %end270 to i8*
  %225 = bitcast %struct.gs_fixed_point_s* %end271 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %224, i8* %225, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start272 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %226 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start273 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %226, i32 0, i32 0
  %227 = bitcast %struct.gs_fixed_point_s* %start272 to i8*
  %228 = bitcast %struct.gs_fixed_point_s* %start273 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %227, i8* %228, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end274 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %229 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end275 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %229, i32 0, i32 1
  %230 = bitcast %struct.gs_fixed_point_s* %end274 to i8*
  %231 = bitcast %struct.gs_fixed_point_s* %end275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %230, i8* %231, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.276

do.body.276:                                      ; preds = %if.then.267
  br label %do.cond.277

do.cond.277:                                      ; preds = %do.body.276
  br label %do.end.278

do.end.278:                                       ; preds = %do.cond.277
  %232 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.start(i64 4, i8* %232) #1
  store i32 4, i32* %flags, align 4, !tbaa !5
  %233 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start279 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %233, i32 0, i32 0
  %x280 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start279, i32 0, i32 0
  %234 = load i32, i32* %x280, align 4, !tbaa !193
  %235 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start281 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %235, i32 0, i32 0
  %x282 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start281, i32 0, i32 0
  %236 = load i32, i32* %x282, align 4, !tbaa !193
  %cmp283 = icmp eq i32 %234, %236
  br i1 %cmp283, label %land.lhs.true.285, label %if.end.297

land.lhs.true.285:                                ; preds = %do.end.278
  %237 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start286 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %237, i32 0, i32 0
  %y287 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start286, i32 0, i32 1
  %238 = load i32, i32* %y287, align 4, !tbaa !187
  %239 = load i32, i32* %y, align 4, !tbaa !5
  %cmp288 = icmp eq i32 %238, %239
  br i1 %cmp288, label %land.lhs.true.290, label %if.end.297

land.lhs.true.290:                                ; preds = %land.lhs.true.285
  %240 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start291 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %240, i32 0, i32 0
  %y292 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start291, i32 0, i32 1
  %241 = load i32, i32* %y292, align 4, !tbaa !187
  %242 = load i32, i32* %y, align 4, !tbaa !5
  %cmp293 = icmp eq i32 %241, %242
  br i1 %cmp293, label %if.then.295, label %if.end.297

if.then.295:                                      ; preds = %land.lhs.true.290
  %243 = load i32, i32* %flags, align 4, !tbaa !5
  %or296 = or i32 %243, 1
  store i32 %or296, i32* %flags, align 4, !tbaa !5
  br label %if.end.297

if.end.297:                                       ; preds = %if.then.295, %land.lhs.true.290, %land.lhs.true.285, %do.end.278
  %244 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end298 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %244, i32 0, i32 1
  %x299 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end298, i32 0, i32 0
  %245 = load i32, i32* %x299, align 4, !tbaa !194
  %246 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end300 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %246, i32 0, i32 1
  %x301 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end300, i32 0, i32 0
  %247 = load i32, i32* %x301, align 4, !tbaa !194
  %cmp302 = icmp eq i32 %245, %247
  br i1 %cmp302, label %land.lhs.true.304, label %if.end.316

land.lhs.true.304:                                ; preds = %if.end.297
  %248 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end305 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %248, i32 0, i32 1
  %y306 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end305, i32 0, i32 1
  %249 = load i32, i32* %y306, align 4, !tbaa !195
  %250 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp307 = icmp eq i32 %249, %250
  br i1 %cmp307, label %land.lhs.true.309, label %if.end.316

land.lhs.true.309:                                ; preds = %land.lhs.true.304
  %251 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end310 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %251, i32 0, i32 1
  %y311 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end310, i32 0, i32 1
  %252 = load i32, i32* %y311, align 4, !tbaa !195
  %253 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp312 = icmp eq i32 %252, %253
  br i1 %cmp312, label %if.then.314, label %if.end.316

if.then.314:                                      ; preds = %land.lhs.true.309
  %254 = load i32, i32* %flags, align 4, !tbaa !5
  %or315 = or i32 %254, 1
  store i32 %or315, i32* %flags, align 4, !tbaa !5
  br label %if.end.316

if.end.316:                                       ; preds = %if.then.314, %land.lhs.true.309, %land.lhs.true.304, %if.end.297
  %dev317 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %255 = load %struct.gx_device_s*, %struct.gx_device_s** %dev317, align 8, !tbaa !96
  %256 = load i32, i32* %ybot, align 4, !tbaa !5
  %257 = load i32, i32* %ytop, align 4, !tbaa !5
  %258 = load i32, i32* %flags, align 4, !tbaa !5
  %pdevc318 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %259 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc318, align 8, !tbaa !90
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %260 = load i32, i32* %lop, align 4, !tbaa !91
  %call319 = call i32 @gx_fill_trapezoid_cf_fd(%struct.gx_device_s* %255, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %256, i32 %257, i32 %258, %struct.gx_device_color_s* %259, i32 %260) #5
  store i32 %call319, i32* %code135, align 4, !tbaa !5
  %261 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.end(i64 4, i8* %261) #1
  %262 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %262) #1
  %263 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %263) #1
  br label %if.end.321

if.else.320:                                      ; preds = %if.else.264
  store i32 0, i32* %code135, align 4, !tbaa !5
  br label %if.end.321

if.end.321:                                       ; preds = %if.else.320, %if.end.316
  br label %if.end.322

if.end.322:                                       ; preds = %if.end.321, %if.end.263
  %264 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp323 = icmp slt i32 %264, 0
  br i1 %cmp323, label %if.then.325, label %if.end.326

if.then.325:                                      ; preds = %if.end.322
  %265 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %265, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.343

if.end.326:                                       ; preds = %if.end.322
  %266 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %267 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %268 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %269 = load i32, i32* %y, align 4, !tbaa !5
  %270 = load i32, i32* %y1, align 4, !tbaa !5
  %call327 = call i32 @complete_margin(%struct.line_list_s* %266, %struct.active_line_s* %267, %struct.active_line_s* %268, i32 %269, i32 %270) #5
  store i32 %call327, i32* %code135, align 4, !tbaa !5
  %271 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp328 = icmp slt i32 %271, 0
  br i1 %cmp328, label %if.then.330, label %if.end.331

if.then.330:                                      ; preds = %if.end.326
  %272 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %272, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.343

if.end.331:                                       ; preds = %if.end.326
  %273 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %274 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %275 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %276 = load i32, i32* %y, align 4, !tbaa !5
  %277 = load i32, i32* %y1, align 4, !tbaa !5
  %call332 = call i32 @margin_interior(%struct.line_list_s* %273, %struct.active_line_s* %274, %struct.active_line_s* %275, i32 %276, i32 %277) #5
  store i32 %call332, i32* %code135, align 4, !tbaa !5
  %278 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp333 = icmp slt i32 %278, 0
  br i1 %cmp333, label %if.then.335, label %if.end.336

if.then.335:                                      ; preds = %if.end.331
  %279 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %279, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.343

if.end.336:                                       ; preds = %if.end.331
  %280 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %281 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %282 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %283 = load i32, i32* %y, align 4, !tbaa !5
  %284 = load i32, i32* %y1, align 4, !tbaa !5
  %call337 = call i32 @add_margin(%struct.line_list_s* %280, %struct.active_line_s* %281, %struct.active_line_s* %282, i32 %283, i32 %284) #5
  store i32 %call337, i32* %code135, align 4, !tbaa !5
  %285 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp338 = icmp slt i32 %285, 0
  br i1 %cmp338, label %if.then.340, label %if.end.341

if.then.340:                                      ; preds = %if.end.336
  %286 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %286, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.343

if.end.341:                                       ; preds = %if.end.336
  %287 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %288 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %289 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %290 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %291 = load i32, i32* %y, align 4, !tbaa !5
  %292 = load i32, i32* %y1, align 4, !tbaa !5
  %call342 = call i32 @process_h_lists(%struct.line_list_s* %287, %struct.active_line_s* %288, %struct.active_line_s* %289, %struct.active_line_s* %290, i32 %291, i32 %292) #5
  store i32 %call342, i32* %code135, align 4, !tbaa !5
  %293 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %293, %struct.active_line_s** %plp, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.343

cleanup.343:                                      ; preds = %if.end.341, %if.then.340, %if.then.335, %if.then.330, %if.then.325
  %294 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %294) #1
  %295 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %295) #1
  %cleanup.dest.345 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.345, label %cleanup.351 [
    i32 0, label %cleanup.cont.346
  ]

cleanup.cont.346:                                 ; preds = %cleanup.343
  %296 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp347 = icmp slt i32 %296, 0
  br i1 %cmp347, label %if.then.349, label %if.end.350

if.then.349:                                      ; preds = %cleanup.cont.346
  %297 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %297, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.351

if.end.350:                                       ; preds = %cleanup.cont.346
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.351

cleanup.351:                                      ; preds = %if.end.350, %if.then.349, %cleanup.343, %if.then.174, %if.then.159, %if.end.152
  %298 = bitcast i32* %code135 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %298) #1
  %cleanup.dest.352 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.352, label %cleanup.357 [
    i32 0, label %cleanup.cont.353
    i32 15, label %for.inc.354
  ]

cleanup.cont.353:                                 ; preds = %cleanup.351
  br label %for.inc.354

for.inc.354:                                      ; preds = %cleanup.cont.353, %cleanup.351
  %299 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next355 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %299, i32 0, i32 15
  %300 = load %struct.active_line_s*, %struct.active_line_s** %next355, align 8, !tbaa !189
  store %struct.active_line_s* %300, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.131

for.end.356:                                      ; preds = %for.cond.131
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.357

cleanup.357:                                      ; preds = %for.end.356, %cleanup.351
  %301 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %301) #1
  %302 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %302) #1
  %cleanup.dest.359 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.359, label %cleanup.424 [
    i32 0, label %cleanup.cont.360
  ]

cleanup.cont.360:                                 ; preds = %cleanup.357
  br label %if.end.406

if.else.361:                                      ; preds = %lor.lhs.false
  %303 = bitcast %struct.active_line_s** %flp362 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %303) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp362, align 8, !tbaa !1
  %304 = bitcast i32* %inside363 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %304) #1
  store i32 0, i32* %inside363, align 4, !tbaa !5
  %305 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head364 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %305, i32 0, i32 7
  %next365 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head364, i32 0, i32 15
  %306 = load %struct.active_line_s*, %struct.active_line_s** %next365, align 8, !tbaa !201
  store %struct.active_line_s* %306, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.366

for.cond.366:                                     ; preds = %for.inc.399, %if.else.361
  %307 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp367 = icmp ne %struct.active_line_s* %307, null
  br i1 %cmp367, label %for.body.369, label %for.end.401

for.body.369:                                     ; preds = %for.cond.366
  %308 = load i32, i32* %inside363, align 4, !tbaa !5
  %309 = load i32, i32* %rule, align 4, !tbaa !5
  %and370 = and i32 %308, %309
  %cmp371 = icmp ne i32 %and370, 0
  br i1 %cmp371, label %if.end.381, label %if.then.373

if.then.373:                                      ; preds = %for.body.369
  %310 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction374 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %310, i32 0, i32 8
  %311 = load i32, i32* %direction374, align 4, !tbaa !178
  %312 = load i32, i32* %inside363, align 4, !tbaa !5
  %add375 = add nsw i32 %312, %311
  store i32 %add375, i32* %inside363, align 4, !tbaa !5
  %313 = load i32, i32* %inside363, align 4, !tbaa !5
  %314 = load i32, i32* %rule, align 4, !tbaa !5
  %and376 = and i32 %313, %314
  %cmp377 = icmp ne i32 %and376, 0
  br i1 %cmp377, label %if.then.379, label %if.end.380

if.then.379:                                      ; preds = %if.then.373
  %315 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %315, %struct.active_line_s** %flp362, align 8, !tbaa !1
  br label %if.end.380

if.end.380:                                       ; preds = %if.then.379, %if.then.373
  br label %for.inc.399

if.end.381:                                       ; preds = %for.body.369
  %316 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction382 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %316, i32 0, i32 8
  %317 = load i32, i32* %direction382, align 4, !tbaa !178
  %318 = load i32, i32* %inside363, align 4, !tbaa !5
  %add383 = add nsw i32 %318, %317
  store i32 %add383, i32* %inside363, align 4, !tbaa !5
  %319 = load i32, i32* %inside363, align 4, !tbaa !5
  %320 = load i32, i32* %rule, align 4, !tbaa !5
  %and384 = and i32 %319, %320
  %cmp385 = icmp ne i32 %and384, 0
  br i1 %cmp385, label %if.then.387, label %if.end.388

if.then.387:                                      ; preds = %if.end.381
  br label %for.inc.399

if.end.388:                                       ; preds = %if.end.381
  %321 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %322 = load %struct.active_line_s*, %struct.active_line_s** %flp362, align 8, !tbaa !1
  %323 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %324 = load i32, i32* %y, align 4, !tbaa !5
  %325 = load i32, i32* %y1, align 4, !tbaa !5
  %call389 = call i32 @continue_margin(%struct.line_list_s* %321, %struct.active_line_s* %322, %struct.active_line_s* %323, i32 %324, i32 %325) #5
  store i32 %call389, i32* %code, align 4, !tbaa !5
  %326 = load i32, i32* %code, align 4, !tbaa !5
  %cmp390 = icmp slt i32 %326, 0
  br i1 %cmp390, label %if.then.392, label %if.end.393

if.then.392:                                      ; preds = %if.end.388
  %327 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %327, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.402

if.end.393:                                       ; preds = %if.end.388
  %328 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %329 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %330 = load %struct.active_line_s*, %struct.active_line_s** %flp362, align 8, !tbaa !1
  %331 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %332 = load i32, i32* %y, align 4, !tbaa !5
  %333 = load i32, i32* %y1, align 4, !tbaa !5
  %call394 = call i32 @process_h_lists(%struct.line_list_s* %328, %struct.active_line_s* %329, %struct.active_line_s* %330, %struct.active_line_s* %331, i32 %332, i32 %333) #5
  store i32 %call394, i32* %code, align 4, !tbaa !5
  %334 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %334, %struct.active_line_s** %plp, align 8, !tbaa !1
  %335 = load i32, i32* %code, align 4, !tbaa !5
  %cmp395 = icmp slt i32 %335, 0
  br i1 %cmp395, label %if.then.397, label %if.end.398

if.then.397:                                      ; preds = %if.end.393
  %336 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %336, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.402

if.end.398:                                       ; preds = %if.end.393
  br label %for.inc.399

for.inc.399:                                      ; preds = %if.end.398, %if.then.387, %if.end.380
  %337 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next400 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %337, i32 0, i32 15
  %338 = load %struct.active_line_s*, %struct.active_line_s** %next400, align 8, !tbaa !189
  store %struct.active_line_s* %338, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.366

for.end.401:                                      ; preds = %for.cond.366
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.402

cleanup.402:                                      ; preds = %for.end.401, %if.then.397, %if.then.392
  %339 = bitcast i32* %inside363 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %339) #1
  %340 = bitcast %struct.active_line_s** %flp362 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %340) #1
  %cleanup.dest.404 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.404, label %cleanup.424 [
    i32 0, label %cleanup.cont.405
  ]

cleanup.cont.405:                                 ; preds = %cleanup.402
  br label %if.end.406

if.end.406:                                       ; preds = %cleanup.cont.405, %cleanup.cont.360
  %341 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %cmp407 = icmp ne %struct.active_line_s* %341, null
  br i1 %cmp407, label %if.then.409, label %if.end.415

if.then.409:                                      ; preds = %if.end.406
  %342 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %343 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %344 = load i32, i32* %y, align 4, !tbaa !5
  %345 = load i32, i32* %y1, align 4, !tbaa !5
  %call410 = call i32 @process_h_lists(%struct.line_list_s* %342, %struct.active_line_s* %343, %struct.active_line_s* null, %struct.active_line_s* null, i32 %344, i32 %345) #5
  store i32 %call410, i32* %code, align 4, !tbaa !5
  %346 = load i32, i32* %code, align 4, !tbaa !5
  %cmp411 = icmp slt i32 %346, 0
  br i1 %cmp411, label %if.then.413, label %if.end.414

if.then.413:                                      ; preds = %if.then.409
  %347 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %347, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.414:                                       ; preds = %if.then.409
  br label %if.end.415

if.end.415:                                       ; preds = %if.end.414, %if.end.406
  %348 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %349 = load i32, i32* %y1, align 4, !tbaa !5
  %call416 = call i32 @move_al_by_y(%struct.line_list_s* %348, i32 %349) #5
  store i32 %call416, i32* %code, align 4, !tbaa !5
  %350 = load i32, i32* %code, align 4, !tbaa !5
  %cmp417 = icmp slt i32 %350, 0
  br i1 %cmp417, label %if.then.419, label %if.end.420

if.then.419:                                      ; preds = %if.end.415
  %351 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %351, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.420:                                       ; preds = %if.end.415
  %352 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0421 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %352, i32 0, i32 8
  %353 = load %struct.active_line_s*, %struct.active_line_s** %h_list0421, align 8, !tbaa !124
  %354 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1422 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %354, i32 0, i32 9
  store %struct.active_line_s* %353, %struct.active_line_s** %h_list1422, align 8, !tbaa !123
  %355 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0423 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %355, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0423, align 8, !tbaa !124
  %356 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %356, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.424

cleanup.424:                                      ; preds = %if.end.420, %if.then.419, %if.then.413, %cleanup.402, %cleanup.357, %if.then.121, %if.then.91, %if.then.85, %cleanup, %if.then.76, %if.end.45, %if.then.44
  %357 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %357) #1
  %358 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %358) #1
  %359 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %359) #1
  %360 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %360) #1
  %cleanup.dest.428 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.428, label %cleanup.447 [
    i32 0, label %cleanup.cont.429
    i32 3, label %while.end.430
    i32 2, label %while.cond
  ]

cleanup.cont.429:                                 ; preds = %cleanup.424
  br label %while.cond

while.end.430:                                    ; preds = %cleanup.424
  %361 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %362 = load i32, i32* %y, align 4, !tbaa !5
  %363 = load i32, i32* %y, align 4, !tbaa !5
  %add431 = add nsw i32 %363, 1
  %call432 = call i32 @process_h_lists(%struct.line_list_s* %361, %struct.active_line_s* null, %struct.active_line_s* null, %struct.active_line_s* null, i32 %362, i32 %add431) #5
  store i32 %call432, i32* %code, align 4, !tbaa !5
  %364 = load i32, i32* %code, align 4, !tbaa !5
  %cmp433 = icmp slt i32 %364, 0
  br i1 %cmp433, label %if.then.435, label %if.end.436

if.then.435:                                      ; preds = %while.end.430
  %365 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %365, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.447

if.end.436:                                       ; preds = %while.end.430
  %dev437 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %366 = load %struct.gx_device_s*, %struct.gx_device_s** %dev437, align 8, !tbaa !96
  %367 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %368 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1438 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %368, i32 0, i32 11
  %call439 = call i32 @close_margins(%struct.gx_device_s* %366, %struct.line_list_s* %367, %struct.margin_set_s* %margin_set1438) #5
  store i32 %call439, i32* %code, align 4, !tbaa !5
  %369 = load i32, i32* %code, align 4, !tbaa !5
  %cmp440 = icmp slt i32 %369, 0
  br i1 %cmp440, label %if.then.442, label %if.end.443

if.then.442:                                      ; preds = %if.end.436
  %370 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %370, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.447

if.end.443:                                       ; preds = %if.end.436
  %dev444 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %371 = load %struct.gx_device_s*, %struct.gx_device_s** %dev444, align 8, !tbaa !96
  %372 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %373 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0445 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %373, i32 0, i32 10
  %call446 = call i32 @close_margins(%struct.gx_device_s* %371, %struct.line_list_s* %372, %struct.margin_set_s* %margin_set0445) #5
  store i32 %call446, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.447

cleanup.447:                                      ; preds = %if.end.443, %if.then.442, %if.then.435, %cleanup.424, %if.then
  %374 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %374) #1
  %375 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %375) #1
  %376 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %376) #1
  %377 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %377) #1
  %378 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %378) #1
  %379 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %379) #1
  %380 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %380) #1
  %381 = load i32, i32* %retval
  ret i32 %381
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__pr_nd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code135 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi = alloca i32, align 4
  %xx = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %flags = alloca i32, align 4
  %flp364 = alloca %struct.active_line_s*, align 8
  %inside365 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.449

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.431, %cleanup.426, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %if.end.36, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %if.end.32
  %48 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %49 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_h_new(%struct.active_line_s* %48, %struct.line_list_s* %49) #5
  br label %if.end.36

if.else:                                          ; preds = %if.end.32
  %50 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %51 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %50, %struct.line_list_s* %51) #5
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.then.35
  %52 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %52, %struct.active_line_s** %yll, align 8, !tbaa !1
  %53 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %53) #1
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %54 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head37 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %54, i32 0, i32 7
  %next38 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head37, i32 0, i32 15
  %55 = load %struct.active_line_s*, %struct.active_line_s** %next38, align 8, !tbaa !201
  %cmp39 = icmp eq %struct.active_line_s* %55, null
  br i1 %cmp39, label %if.then.41, label %if.end.49

if.then.41:                                       ; preds = %while.end
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp42 = icmp eq %struct.active_line_s* %56, null
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %if.then.41
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.45:                                        ; preds = %if.then.41
  %57 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %57, i32 0, i32 0
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start46, i32 0, i32 1
  %58 = load i32, i32* %y47, align 4, !tbaa !187
  store i32 %58, i32* %y, align 4, !tbaa !5
  %59 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %59, i32 0, i32 8
  %60 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %61 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %61, i32 0, i32 9
  store %struct.active_line_s* %60, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %62 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list048 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %62, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list048, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.49:                                        ; preds = %while.end
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp50 = icmp ne %struct.active_line_s* %63, null
  br i1 %cmp50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.49
  %64 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 0
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start52, i32 0, i32 1
  %65 = load i32, i32* %y53, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.49
  %66 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %66, i32 0, i32 18
  %67 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %65, %cond.true ], [ %67, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %68 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68) #1
  %69 = load i32, i32* %y, align 4, !tbaa !5
  %70 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %70, -1
  %or = or i32 %69, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %71 = load i32, i32* %y1, align 4, !tbaa !5
  %72 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp54 = icmp sgt i32 %71, %72
  br i1 %cmp54, label %if.then.56, label %if.end.58

if.then.56:                                       ; preds = %cond.end
  %73 = load i32, i32* %y_band, align 4, !tbaa !5
  %add57 = add nsw i32 %73, 1
  store i32 %add57, i32* %y1, align 4, !tbaa !5
  br label %if.end.58

if.end.58:                                        ; preds = %if.then.56, %cond.end
  %74 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #1
  %75 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head59 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %75, i32 0, i32 7
  %next60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head59, i32 0, i32 15
  %76 = load %struct.active_line_s*, %struct.active_line_s** %next60, align 8, !tbaa !201
  store %struct.active_line_s* %76, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.58
  %77 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp61 = icmp ne %struct.active_line_s* %77, null
  br i1 %cmp61, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %78 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %78, i32 0, i32 1
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %79 = load i32, i32* %y63, align 4, !tbaa !195
  %80 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp64 = icmp slt i32 %79, %80
  br i1 %cmp64, label %if.then.66, label %if.end.69

if.then.66:                                       ; preds = %for.body
  %81 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %81, i32 0, i32 1
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end67, i32 0, i32 1
  %82 = load i32, i32* %y68, align 4, !tbaa !195
  store i32 %82, i32* %y1, align 4, !tbaa !5
  br label %if.end.69

if.end.69:                                        ; preds = %if.then.66, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.69
  %83 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next70 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %83, i32 0, i32 15
  %84 = load %struct.active_line_s*, %struct.active_line_s** %next70, align 8, !tbaa !189
  store %struct.active_line_s* %84, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %85 = load i32, i32* %y, align 4, !tbaa !5
  %86 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp71 = icmp eq i32 %85, %86
  br i1 %cmp71, label %if.then.73, label %if.end.88

if.then.73:                                       ; preds = %for.end
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %88 = load i32, i32* %y, align 4, !tbaa !5
  %call = call i32 @process_h_segments(%struct.line_list_s* %87, i32 %88) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %89 = load i32, i32* %code, align 4, !tbaa !5
  %cmp74 = icmp slt i32 %89, 0
  br i1 %cmp74, label %if.then.76, label %if.end.77

if.then.76:                                       ; preds = %if.then.73
  %90 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %90, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.77:                                        ; preds = %if.then.73
  %91 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #1
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %93 = load i32, i32* %y1, align 4, !tbaa !5
  %call78 = call i32 @move_al_by_y(%struct.line_list_s* %92, i32 %93) #5
  store i32 %call78, i32* %code1, align 4, !tbaa !5
  %94 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp79 = icmp slt i32 %94, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.77
  %95 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %95, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %if.end.77
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.81
  %96 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %96) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.426 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %97 = load i32, i32* %code, align 4, !tbaa !5
  %cmp83 = icmp sgt i32 %97, 0
  br i1 %cmp83, label %if.then.85, label %if.end.87

if.then.85:                                       ; preds = %cleanup.cont
  %98 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list86 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %98, i32 0, i32 5
  %99 = load %struct.active_line_s*, %struct.active_line_s** %y_list86, align 8, !tbaa !121
  store %struct.active_line_s* %99, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.87:                                        ; preds = %cleanup.cont
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %for.end
  %100 = load i32, i32* %y, align 4, !tbaa !5
  %101 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp89 = icmp sge i32 %100, %101
  br i1 %cmp89, label %if.then.91, label %if.end.92

if.then.91:                                       ; preds = %if.end.88
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.92:                                        ; preds = %if.end.88
  %102 = load i32, i32* %y, align 4, !tbaa !5
  %sub93 = sub nsw i32 %102, 0
  %conv94 = sext i32 %sub93 to i64
  %add95 = add nsw i64 %conv94, 127
  %and96 = and i64 %add95, -256
  %103 = load i32, i32* %y1, align 4, !tbaa !5
  %add97 = add nsw i32 %103, 0
  %conv98 = sext i32 %add97 to i64
  %add99 = add nsw i64 %conv98, 127
  %and100 = and i64 %add99, -256
  %cmp101 = icmp slt i64 %and96, %and100
  %conv102 = zext i1 %cmp101 to i32
  store i32 %conv102, i32* %covering_pixel_centers, align 4, !tbaa !5
  %104 = load i32, i32* %y, align 4, !tbaa !5
  %105 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp103 = icmp ne i32 %104, %105
  br i1 %cmp103, label %if.then.105, label %if.end.117

if.then.105:                                      ; preds = %if.end.92
  %106 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %107 = load i32, i32* %y, align 4, !tbaa !5
  %108 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %108, 0
  %cond106 = select i1 %tobool, i32 1, i32 -1
  %109 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %106, i32 %107, i32* %y1, i32 %cond106, i32 %109) #5
  %110 = load i32, i32* %y, align 4, !tbaa !5
  %sub107 = sub nsw i32 %110, 0
  %conv108 = sext i32 %sub107 to i64
  %add109 = add nsw i64 %conv108, 127
  %and110 = and i64 %add109, -256
  %111 = load i32, i32* %y1, align 4, !tbaa !5
  %add111 = add nsw i32 %111, 0
  %conv112 = sext i32 %add111 to i64
  %add113 = add nsw i64 %conv112, 127
  %and114 = and i64 %add113, -256
  %cmp115 = icmp slt i64 %and110, %and114
  %conv116 = zext i1 %cmp115 to i32
  store i32 %conv116, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.105, %if.end.92
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %112 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %113 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %114 = load i32, i32* %y1, align 4, !tbaa !5
  %call118 = call i32 @start_margin_set(%struct.gx_device_s* %112, %struct.line_list_s* %113, i32 %114) #5
  store i32 %call118, i32* %code, align 4, !tbaa !5
  %115 = load i32, i32* %code, align 4, !tbaa !5
  %cmp119 = icmp slt i32 %115, 0
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.end.117
  %116 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %116, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.122:                                       ; preds = %if.end.117
  %117 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool123 = icmp ne i32 %117, 0
  br i1 %tobool123, label %if.then.125, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.122
  %118 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool124 = icmp ne i32 %118, 0
  br i1 %tobool124, label %if.then.125, label %if.else.363

if.then.125:                                      ; preds = %lor.lhs.false, %if.end.122
  %119 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %120 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %120) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %do.body.126

do.body.126:                                      ; preds = %if.then.125
  br label %do.cond.127

do.cond.127:                                      ; preds = %do.body.126
  br label %do.end.128

do.end.128:                                       ; preds = %do.cond.127
  %121 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head129 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %121, i32 0, i32 7
  %next130 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head129, i32 0, i32 15
  %122 = load %struct.active_line_s*, %struct.active_line_s** %next130, align 8, !tbaa !201
  store %struct.active_line_s* %122, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.131

for.cond.131:                                     ; preds = %for.inc.356, %do.end.128
  %123 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp132 = icmp ne %struct.active_line_s* %123, null
  br i1 %cmp132, label %for.body.134, label %for.end.358

for.body.134:                                     ; preds = %for.cond.131
  %124 = bitcast i32* %code135 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %124) #1
  br label %do.body.136

do.body.136:                                      ; preds = %for.body.134
  br label %do.cond.137

do.cond.137:                                      ; preds = %do.body.136
  br label %do.end.138

do.end.138:                                       ; preds = %do.cond.137
  br label %do.body.139

do.body.139:                                      ; preds = %do.end.138
  br label %do.cond.140

do.cond.140:                                      ; preds = %do.body.139
  br label %do.end.141

do.end.141:                                       ; preds = %do.cond.140
  %125 = load i32, i32* %inside, align 4, !tbaa !5
  %126 = load i32, i32* %rule, align 4, !tbaa !5
  %and142 = and i32 %125, %126
  %cmp143 = icmp ne i32 %and142, 0
  br i1 %cmp143, label %if.end.153, label %if.then.145

if.then.145:                                      ; preds = %do.end.141
  %127 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction146 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %127, i32 0, i32 8
  %128 = load i32, i32* %direction146, align 4, !tbaa !178
  %129 = load i32, i32* %inside, align 4, !tbaa !5
  %add147 = add nsw i32 %129, %128
  store i32 %add147, i32* %inside, align 4, !tbaa !5
  %130 = load i32, i32* %inside, align 4, !tbaa !5
  %131 = load i32, i32* %rule, align 4, !tbaa !5
  %and148 = and i32 %130, %131
  %cmp149 = icmp ne i32 %and148, 0
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.then.145
  %132 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %132, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.151, %if.then.145
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.353

if.end.153:                                       ; preds = %do.end.141
  %133 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction154 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %133, i32 0, i32 8
  %134 = load i32, i32* %direction154, align 4, !tbaa !178
  %135 = load i32, i32* %inside, align 4, !tbaa !5
  %add155 = add nsw i32 %135, %134
  store i32 %add155, i32* %inside, align 4, !tbaa !5
  %136 = load i32, i32* %inside, align 4, !tbaa !5
  %137 = load i32, i32* %rule, align 4, !tbaa !5
  %and156 = and i32 %136, %137
  %cmp157 = icmp ne i32 %and156, 0
  br i1 %cmp157, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.end.153
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.353

if.end.160:                                       ; preds = %if.end.153
  %138 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next161 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %138, i32 0, i32 15
  %139 = load %struct.active_line_s*, %struct.active_line_s** %next161, align 8, !tbaa !189
  %cmp162 = icmp ne %struct.active_line_s* %139, null
  br i1 %cmp162, label %land.lhs.true, label %if.end.178

land.lhs.true:                                    ; preds = %if.end.160
  %140 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current164 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %140, i32 0, i32 5
  %141 = load i32, i32* %x_current164, align 4, !tbaa !204
  %142 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next165 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %142, i32 0, i32 15
  %143 = load %struct.active_line_s*, %struct.active_line_s** %next165, align 8, !tbaa !189
  %x_current166 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %143, i32 0, i32 5
  %144 = load i32, i32* %x_current166, align 4, !tbaa !204
  %cmp167 = icmp eq i32 %141, %144
  br i1 %cmp167, label %land.lhs.true.169, label %if.end.178

land.lhs.true.169:                                ; preds = %land.lhs.true
  %145 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %145, i32 0, i32 6
  %146 = load i32, i32* %x_next, align 4, !tbaa !205
  %147 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next170 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %147, i32 0, i32 15
  %148 = load %struct.active_line_s*, %struct.active_line_s** %next170, align 8, !tbaa !189
  %x_next171 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %148, i32 0, i32 6
  %149 = load i32, i32* %x_next171, align 4, !tbaa !205
  %cmp172 = icmp eq i32 %146, %149
  br i1 %cmp172, label %if.then.174, label %if.end.178

if.then.174:                                      ; preds = %land.lhs.true.169
  %150 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next175 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %150, i32 0, i32 15
  %151 = load %struct.active_line_s*, %struct.active_line_s** %next175, align 8, !tbaa !189
  store %struct.active_line_s* %151, %struct.active_line_s** %alp, align 8, !tbaa !1
  %152 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction176 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %152, i32 0, i32 8
  %153 = load i32, i32* %direction176, align 4, !tbaa !178
  %154 = load i32, i32* %inside, align 4, !tbaa !5
  %add177 = add nsw i32 %154, %153
  store i32 %add177, i32* %inside, align 4, !tbaa !5
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup.353

if.end.178:                                       ; preds = %land.lhs.true.169, %land.lhs.true, %if.end.160
  br label %do.body.179

do.body.179:                                      ; preds = %if.end.178
  br label %do.cond.180

do.cond.180:                                      ; preds = %do.body.179
  br label %do.end.181

do.end.181:                                       ; preds = %do.cond.180
  %155 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %155) #1
  %156 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %157 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %157, i32 0, i32 0
  %y182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %158 = load i32, i32* %y182, align 4, !tbaa !38
  %cmp183 = icmp sgt i32 %156, %158
  br i1 %cmp183, label %cond.true.185, label %cond.false.186

cond.true.185:                                    ; preds = %do.end.181
  %159 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.190

cond.false.186:                                   ; preds = %do.end.181
  %pbox187 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %160 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox187, align 8, !tbaa !97
  %p188 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %160, i32 0, i32 0
  %y189 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p188, i32 0, i32 1
  %161 = load i32, i32* %y189, align 4, !tbaa !38
  br label %cond.end.190

cond.end.190:                                     ; preds = %cond.false.186, %cond.true.185
  %cond191 = phi i32 [ %159, %cond.true.185 ], [ %161, %cond.false.186 ]
  store i32 %cond191, i32* %ybot, align 4, !tbaa !5
  %162 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %162) #1
  %163 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox192 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %164 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox192, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %164, i32 0, i32 1
  %y193 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %165 = load i32, i32* %y193, align 4, !tbaa !42
  %cmp194 = icmp slt i32 %163, %165
  br i1 %cmp194, label %cond.true.196, label %cond.false.197

cond.true.196:                                    ; preds = %cond.end.190
  %166 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.201

cond.false.197:                                   ; preds = %cond.end.190
  %pbox198 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %167 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox198, align 8, !tbaa !97
  %q199 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %167, i32 0, i32 1
  %y200 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q199, i32 0, i32 1
  %168 = load i32, i32* %y200, align 4, !tbaa !42
  br label %cond.end.201

cond.end.201:                                     ; preds = %cond.false.197, %cond.true.196
  %cond202 = phi i32 [ %166, %cond.true.196 ], [ %168, %cond.false.197 ]
  store i32 %cond202, i32* %ytop, align 4, !tbaa !5
  %169 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end203 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %169, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end203, i32 0, i32 0
  %170 = load i32, i32* %x, align 4, !tbaa !194
  %171 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start204 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %171, i32 0, i32 0
  %x205 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start204, i32 0, i32 0
  %172 = load i32, i32* %x205, align 4, !tbaa !193
  %cmp206 = icmp eq i32 %170, %172
  br i1 %cmp206, label %land.lhs.true.208, label %if.else.265

land.lhs.true.208:                                ; preds = %cond.end.201
  %173 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end209 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 1
  %x210 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end209, i32 0, i32 0
  %174 = load i32, i32* %x210, align 4, !tbaa !194
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start211 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 0
  %x212 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start211, i32 0, i32 0
  %176 = load i32, i32* %x212, align 4, !tbaa !193
  %cmp213 = icmp eq i32 %174, %176
  br i1 %cmp213, label %if.then.215, label %if.else.265

if.then.215:                                      ; preds = %land.lhs.true.208
  %177 = load i32, i32* %ytop, align 4, !tbaa !5
  %178 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp216 = icmp sgt i32 %177, %178
  br i1 %cmp216, label %if.then.218, label %if.else.263

if.then.218:                                      ; preds = %if.then.215
  %179 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %179) #1
  %180 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv219 = sext i32 %180 to i64
  %add220 = add nsw i64 %conv219, 127
  %shr = ashr i64 %add220, 8
  %conv221 = trunc i64 %shr to i32
  store i32 %conv221, i32* %yi, align 4, !tbaa !5
  %181 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %181) #1
  %182 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv222 = sext i32 %182 to i64
  %add223 = add nsw i64 %conv222, 127
  %shr224 = ashr i64 %add223, 8
  %conv225 = trunc i64 %shr224 to i32
  %183 = load i32, i32* %yi, align 4, !tbaa !5
  %sub226 = sub nsw i32 %conv225, %183
  store i32 %sub226, i32* %hi, align 4, !tbaa !5
  %184 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %184) #1
  %185 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end227 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %185, i32 0, i32 1
  %x228 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end227, i32 0, i32 0
  %186 = load i32, i32* %x228, align 4, !tbaa !194
  %sub229 = sub nsw i32 %186, 0
  %conv230 = sext i32 %sub229 to i64
  %add231 = add nsw i64 %conv230, 127
  %shr232 = ashr i64 %add231, 8
  %conv233 = trunc i64 %shr232 to i32
  store i32 %conv233, i32* %xli, align 4, !tbaa !5
  %187 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %187) #1
  %188 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end234 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %188, i32 0, i32 1
  %x235 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end234, i32 0, i32 0
  %189 = load i32, i32* %x235, align 4, !tbaa !194
  %add236 = add nsw i32 %189, 0
  %conv237 = sext i32 %add236 to i64
  %add238 = add nsw i64 %conv237, 127
  %shr239 = ashr i64 %add238, 8
  %conv240 = trunc i64 %shr239 to i32
  store i32 %conv240, i32* %xi, align 4, !tbaa !5
  %190 = load i32, i32* %xli, align 4, !tbaa !5
  %191 = load i32, i32* %xi, align 4, !tbaa !5
  %cmp241 = icmp eq i32 %190, %191
  br i1 %cmp241, label %if.then.243, label %if.end.255

if.then.243:                                      ; preds = %if.then.218
  %192 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %192) #1
  %193 = load i32, i32* %xli, align 4, !tbaa !5
  %shl = shl i32 %193, 8
  store i32 %shl, i32* %xx, align 4, !tbaa !5
  %194 = load i32, i32* %xx, align 4, !tbaa !5
  %195 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end244 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %195, i32 0, i32 1
  %x245 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end244, i32 0, i32 0
  %196 = load i32, i32* %x245, align 4, !tbaa !194
  %sub246 = sub nsw i32 %194, %196
  %197 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end247 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %197, i32 0, i32 1
  %x248 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end247, i32 0, i32 0
  %198 = load i32, i32* %x248, align 4, !tbaa !194
  %199 = load i32, i32* %xx, align 4, !tbaa !5
  %sub249 = sub nsw i32 %198, %199
  %cmp250 = icmp slt i32 %sub246, %sub249
  br i1 %cmp250, label %if.then.252, label %if.else.253

if.then.252:                                      ; preds = %if.then.243
  %200 = load i32, i32* %xi, align 4, !tbaa !5
  %inc = add nsw i32 %200, 1
  store i32 %inc, i32* %xi, align 4, !tbaa !5
  br label %if.end.254

if.else.253:                                      ; preds = %if.then.243
  %201 = load i32, i32* %xli, align 4, !tbaa !5
  %dec = add nsw i32 %201, -1
  store i32 %dec, i32* %xli, align 4, !tbaa !5
  br label %if.end.254

if.end.254:                                       ; preds = %if.else.253, %if.then.252
  %202 = bitcast i32* %xx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %202) #1
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.254, %if.then.218
  br label %do.body.256

do.body.256:                                      ; preds = %if.end.255
  br label %do.cond.257

do.cond.257:                                      ; preds = %do.body.256
  br label %do.end.258

do.end.258:                                       ; preds = %do.cond.257
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %203 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %203, i32 0, i32 0
  %204 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %204, i32 0, i32 5
  %205 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %pdevc259 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %206 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc259, align 8, !tbaa !90
  %207 = load i32, i32* %xli, align 4, !tbaa !5
  %208 = load i32, i32* %yi, align 4, !tbaa !5
  %209 = load i32, i32* %xi, align 4, !tbaa !5
  %210 = load i32, i32* %xli, align 4, !tbaa !5
  %sub260 = sub nsw i32 %209, %210
  %211 = load i32, i32* %hi, align 4, !tbaa !5
  %dev261 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %212 = load %struct.gx_device_s*, %struct.gx_device_s** %dev261, align 8, !tbaa !96
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %213 = load i32, i32* %lop, align 4, !tbaa !91
  %call262 = call i32 %205(%struct.gx_device_color_s* %206, i32 %207, i32 %208, i32 %sub260, i32 %211, %struct.gx_device_s* %212, i32 %213, %struct.gx_rop_source_s* null) #5
  store i32 %call262, i32* %code135, align 4, !tbaa !5
  %214 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %214) #1
  %215 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %215) #1
  %216 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %216) #1
  %217 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %217) #1
  br label %if.end.264

if.else.263:                                      ; preds = %if.then.215
  store i32 0, i32* %code135, align 4, !tbaa !5
  br label %if.end.264

if.end.264:                                       ; preds = %if.else.263, %do.end.258
  br label %if.end.324

if.else.265:                                      ; preds = %land.lhs.true.208, %cond.end.201
  %218 = load i32, i32* %ybot, align 4, !tbaa !5
  %219 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp266 = icmp slt i32 %218, %219
  br i1 %cmp266, label %if.then.268, label %if.else.322

if.then.268:                                      ; preds = %if.else.265
  %220 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %220) #1
  %221 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %221) #1
  %start269 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %222 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start270 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %222, i32 0, i32 0
  %223 = bitcast %struct.gs_fixed_point_s* %start269 to i8*
  %224 = bitcast %struct.gs_fixed_point_s* %start270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %223, i8* %224, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end271 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %225 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end272 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %225, i32 0, i32 1
  %226 = bitcast %struct.gs_fixed_point_s* %end271 to i8*
  %227 = bitcast %struct.gs_fixed_point_s* %end272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %226, i8* %227, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start273 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %228 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start274 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %228, i32 0, i32 0
  %229 = bitcast %struct.gs_fixed_point_s* %start273 to i8*
  %230 = bitcast %struct.gs_fixed_point_s* %start274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %229, i8* %230, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end275 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %231 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end276 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %231, i32 0, i32 1
  %232 = bitcast %struct.gs_fixed_point_s* %end275 to i8*
  %233 = bitcast %struct.gs_fixed_point_s* %end276 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %232, i8* %233, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.277

do.body.277:                                      ; preds = %if.then.268
  br label %do.cond.278

do.cond.278:                                      ; preds = %do.body.277
  br label %do.end.279

do.end.279:                                       ; preds = %do.cond.278
  %234 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.start(i64 4, i8* %234) #1
  store i32 4, i32* %flags, align 4, !tbaa !5
  %235 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start280 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %235, i32 0, i32 0
  %x281 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start280, i32 0, i32 0
  %236 = load i32, i32* %x281, align 4, !tbaa !193
  %237 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start282 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %237, i32 0, i32 0
  %x283 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start282, i32 0, i32 0
  %238 = load i32, i32* %x283, align 4, !tbaa !193
  %cmp284 = icmp eq i32 %236, %238
  br i1 %cmp284, label %land.lhs.true.286, label %if.end.298

land.lhs.true.286:                                ; preds = %do.end.279
  %239 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start287 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %239, i32 0, i32 0
  %y288 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start287, i32 0, i32 1
  %240 = load i32, i32* %y288, align 4, !tbaa !187
  %241 = load i32, i32* %y, align 4, !tbaa !5
  %cmp289 = icmp eq i32 %240, %241
  br i1 %cmp289, label %land.lhs.true.291, label %if.end.298

land.lhs.true.291:                                ; preds = %land.lhs.true.286
  %242 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start292 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %242, i32 0, i32 0
  %y293 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start292, i32 0, i32 1
  %243 = load i32, i32* %y293, align 4, !tbaa !187
  %244 = load i32, i32* %y, align 4, !tbaa !5
  %cmp294 = icmp eq i32 %243, %244
  br i1 %cmp294, label %if.then.296, label %if.end.298

if.then.296:                                      ; preds = %land.lhs.true.291
  %245 = load i32, i32* %flags, align 4, !tbaa !5
  %or297 = or i32 %245, 1
  store i32 %or297, i32* %flags, align 4, !tbaa !5
  br label %if.end.298

if.end.298:                                       ; preds = %if.then.296, %land.lhs.true.291, %land.lhs.true.286, %do.end.279
  %246 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end299 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %246, i32 0, i32 1
  %x300 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end299, i32 0, i32 0
  %247 = load i32, i32* %x300, align 4, !tbaa !194
  %248 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end301 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %248, i32 0, i32 1
  %x302 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end301, i32 0, i32 0
  %249 = load i32, i32* %x302, align 4, !tbaa !194
  %cmp303 = icmp eq i32 %247, %249
  br i1 %cmp303, label %land.lhs.true.305, label %if.end.317

land.lhs.true.305:                                ; preds = %if.end.298
  %250 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end306 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %250, i32 0, i32 1
  %y307 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end306, i32 0, i32 1
  %251 = load i32, i32* %y307, align 4, !tbaa !195
  %252 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp308 = icmp eq i32 %251, %252
  br i1 %cmp308, label %land.lhs.true.310, label %if.end.317

land.lhs.true.310:                                ; preds = %land.lhs.true.305
  %253 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end311 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %253, i32 0, i32 1
  %y312 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end311, i32 0, i32 1
  %254 = load i32, i32* %y312, align 4, !tbaa !195
  %255 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp313 = icmp eq i32 %254, %255
  br i1 %cmp313, label %if.then.315, label %if.end.317

if.then.315:                                      ; preds = %land.lhs.true.310
  %256 = load i32, i32* %flags, align 4, !tbaa !5
  %or316 = or i32 %256, 1
  store i32 %or316, i32* %flags, align 4, !tbaa !5
  br label %if.end.317

if.end.317:                                       ; preds = %if.then.315, %land.lhs.true.310, %land.lhs.true.305, %if.end.298
  %dev318 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %257 = load %struct.gx_device_s*, %struct.gx_device_s** %dev318, align 8, !tbaa !96
  %258 = load i32, i32* %ybot, align 4, !tbaa !5
  %259 = load i32, i32* %ytop, align 4, !tbaa !5
  %260 = load i32, i32* %flags, align 4, !tbaa !5
  %pdevc319 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %261 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc319, align 8, !tbaa !90
  %lop320 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %262 = load i32, i32* %lop320, align 4, !tbaa !91
  %call321 = call i32 @gx_fill_trapezoid_cf_nd(%struct.gx_device_s* %257, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %258, i32 %259, i32 %260, %struct.gx_device_color_s* %261, i32 %262) #5
  store i32 %call321, i32* %code135, align 4, !tbaa !5
  %263 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.end(i64 4, i8* %263) #1
  %264 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %264) #1
  %265 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %265) #1
  br label %if.end.323

if.else.322:                                      ; preds = %if.else.265
  store i32 0, i32* %code135, align 4, !tbaa !5
  br label %if.end.323

if.end.323:                                       ; preds = %if.else.322, %if.end.317
  br label %if.end.324

if.end.324:                                       ; preds = %if.end.323, %if.end.264
  %266 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp325 = icmp slt i32 %266, 0
  br i1 %cmp325, label %if.then.327, label %if.end.328

if.then.327:                                      ; preds = %if.end.324
  %267 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %267, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.345

if.end.328:                                       ; preds = %if.end.324
  %268 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %269 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %270 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %271 = load i32, i32* %y, align 4, !tbaa !5
  %272 = load i32, i32* %y1, align 4, !tbaa !5
  %call329 = call i32 @complete_margin(%struct.line_list_s* %268, %struct.active_line_s* %269, %struct.active_line_s* %270, i32 %271, i32 %272) #5
  store i32 %call329, i32* %code135, align 4, !tbaa !5
  %273 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp330 = icmp slt i32 %273, 0
  br i1 %cmp330, label %if.then.332, label %if.end.333

if.then.332:                                      ; preds = %if.end.328
  %274 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %274, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.345

if.end.333:                                       ; preds = %if.end.328
  %275 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %276 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %277 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %278 = load i32, i32* %y, align 4, !tbaa !5
  %279 = load i32, i32* %y1, align 4, !tbaa !5
  %call334 = call i32 @margin_interior(%struct.line_list_s* %275, %struct.active_line_s* %276, %struct.active_line_s* %277, i32 %278, i32 %279) #5
  store i32 %call334, i32* %code135, align 4, !tbaa !5
  %280 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp335 = icmp slt i32 %280, 0
  br i1 %cmp335, label %if.then.337, label %if.end.338

if.then.337:                                      ; preds = %if.end.333
  %281 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %281, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.345

if.end.338:                                       ; preds = %if.end.333
  %282 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %283 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %284 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %285 = load i32, i32* %y, align 4, !tbaa !5
  %286 = load i32, i32* %y1, align 4, !tbaa !5
  %call339 = call i32 @add_margin(%struct.line_list_s* %282, %struct.active_line_s* %283, %struct.active_line_s* %284, i32 %285, i32 %286) #5
  store i32 %call339, i32* %code135, align 4, !tbaa !5
  %287 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp340 = icmp slt i32 %287, 0
  br i1 %cmp340, label %if.then.342, label %if.end.343

if.then.342:                                      ; preds = %if.end.338
  %288 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %288, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.345

if.end.343:                                       ; preds = %if.end.338
  %289 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %290 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %291 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %292 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %293 = load i32, i32* %y, align 4, !tbaa !5
  %294 = load i32, i32* %y1, align 4, !tbaa !5
  %call344 = call i32 @process_h_lists(%struct.line_list_s* %289, %struct.active_line_s* %290, %struct.active_line_s* %291, %struct.active_line_s* %292, i32 %293, i32 %294) #5
  store i32 %call344, i32* %code135, align 4, !tbaa !5
  %295 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %295, %struct.active_line_s** %plp, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.345

cleanup.345:                                      ; preds = %if.end.343, %if.then.342, %if.then.337, %if.then.332, %if.then.327
  %296 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %296) #1
  %297 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %297) #1
  %cleanup.dest.347 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.347, label %cleanup.353 [
    i32 0, label %cleanup.cont.348
  ]

cleanup.cont.348:                                 ; preds = %cleanup.345
  %298 = load i32, i32* %code135, align 4, !tbaa !5
  %cmp349 = icmp slt i32 %298, 0
  br i1 %cmp349, label %if.then.351, label %if.end.352

if.then.351:                                      ; preds = %cleanup.cont.348
  %299 = load i32, i32* %code135, align 4, !tbaa !5
  store i32 %299, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.353

if.end.352:                                       ; preds = %cleanup.cont.348
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.353

cleanup.353:                                      ; preds = %if.end.352, %if.then.351, %cleanup.345, %if.then.174, %if.then.159, %if.end.152
  %300 = bitcast i32* %code135 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %300) #1
  %cleanup.dest.354 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.354, label %cleanup.359 [
    i32 0, label %cleanup.cont.355
    i32 15, label %for.inc.356
  ]

cleanup.cont.355:                                 ; preds = %cleanup.353
  br label %for.inc.356

for.inc.356:                                      ; preds = %cleanup.cont.355, %cleanup.353
  %301 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next357 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %301, i32 0, i32 15
  %302 = load %struct.active_line_s*, %struct.active_line_s** %next357, align 8, !tbaa !189
  store %struct.active_line_s* %302, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.131

for.end.358:                                      ; preds = %for.cond.131
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.359

cleanup.359:                                      ; preds = %for.end.358, %cleanup.353
  %303 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %303) #1
  %304 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %304) #1
  %cleanup.dest.361 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.361, label %cleanup.426 [
    i32 0, label %cleanup.cont.362
  ]

cleanup.cont.362:                                 ; preds = %cleanup.359
  br label %if.end.408

if.else.363:                                      ; preds = %lor.lhs.false
  %305 = bitcast %struct.active_line_s** %flp364 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %305) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp364, align 8, !tbaa !1
  %306 = bitcast i32* %inside365 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %306) #1
  store i32 0, i32* %inside365, align 4, !tbaa !5
  %307 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head366 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %307, i32 0, i32 7
  %next367 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head366, i32 0, i32 15
  %308 = load %struct.active_line_s*, %struct.active_line_s** %next367, align 8, !tbaa !201
  store %struct.active_line_s* %308, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.368

for.cond.368:                                     ; preds = %for.inc.401, %if.else.363
  %309 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp369 = icmp ne %struct.active_line_s* %309, null
  br i1 %cmp369, label %for.body.371, label %for.end.403

for.body.371:                                     ; preds = %for.cond.368
  %310 = load i32, i32* %inside365, align 4, !tbaa !5
  %311 = load i32, i32* %rule, align 4, !tbaa !5
  %and372 = and i32 %310, %311
  %cmp373 = icmp ne i32 %and372, 0
  br i1 %cmp373, label %if.end.383, label %if.then.375

if.then.375:                                      ; preds = %for.body.371
  %312 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction376 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %312, i32 0, i32 8
  %313 = load i32, i32* %direction376, align 4, !tbaa !178
  %314 = load i32, i32* %inside365, align 4, !tbaa !5
  %add377 = add nsw i32 %314, %313
  store i32 %add377, i32* %inside365, align 4, !tbaa !5
  %315 = load i32, i32* %inside365, align 4, !tbaa !5
  %316 = load i32, i32* %rule, align 4, !tbaa !5
  %and378 = and i32 %315, %316
  %cmp379 = icmp ne i32 %and378, 0
  br i1 %cmp379, label %if.then.381, label %if.end.382

if.then.381:                                      ; preds = %if.then.375
  %317 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %317, %struct.active_line_s** %flp364, align 8, !tbaa !1
  br label %if.end.382

if.end.382:                                       ; preds = %if.then.381, %if.then.375
  br label %for.inc.401

if.end.383:                                       ; preds = %for.body.371
  %318 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction384 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %318, i32 0, i32 8
  %319 = load i32, i32* %direction384, align 4, !tbaa !178
  %320 = load i32, i32* %inside365, align 4, !tbaa !5
  %add385 = add nsw i32 %320, %319
  store i32 %add385, i32* %inside365, align 4, !tbaa !5
  %321 = load i32, i32* %inside365, align 4, !tbaa !5
  %322 = load i32, i32* %rule, align 4, !tbaa !5
  %and386 = and i32 %321, %322
  %cmp387 = icmp ne i32 %and386, 0
  br i1 %cmp387, label %if.then.389, label %if.end.390

if.then.389:                                      ; preds = %if.end.383
  br label %for.inc.401

if.end.390:                                       ; preds = %if.end.383
  %323 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %324 = load %struct.active_line_s*, %struct.active_line_s** %flp364, align 8, !tbaa !1
  %325 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %326 = load i32, i32* %y, align 4, !tbaa !5
  %327 = load i32, i32* %y1, align 4, !tbaa !5
  %call391 = call i32 @continue_margin(%struct.line_list_s* %323, %struct.active_line_s* %324, %struct.active_line_s* %325, i32 %326, i32 %327) #5
  store i32 %call391, i32* %code, align 4, !tbaa !5
  %328 = load i32, i32* %code, align 4, !tbaa !5
  %cmp392 = icmp slt i32 %328, 0
  br i1 %cmp392, label %if.then.394, label %if.end.395

if.then.394:                                      ; preds = %if.end.390
  %329 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %329, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.404

if.end.395:                                       ; preds = %if.end.390
  %330 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %331 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %332 = load %struct.active_line_s*, %struct.active_line_s** %flp364, align 8, !tbaa !1
  %333 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %334 = load i32, i32* %y, align 4, !tbaa !5
  %335 = load i32, i32* %y1, align 4, !tbaa !5
  %call396 = call i32 @process_h_lists(%struct.line_list_s* %330, %struct.active_line_s* %331, %struct.active_line_s* %332, %struct.active_line_s* %333, i32 %334, i32 %335) #5
  store i32 %call396, i32* %code, align 4, !tbaa !5
  %336 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %336, %struct.active_line_s** %plp, align 8, !tbaa !1
  %337 = load i32, i32* %code, align 4, !tbaa !5
  %cmp397 = icmp slt i32 %337, 0
  br i1 %cmp397, label %if.then.399, label %if.end.400

if.then.399:                                      ; preds = %if.end.395
  %338 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %338, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.404

if.end.400:                                       ; preds = %if.end.395
  br label %for.inc.401

for.inc.401:                                      ; preds = %if.end.400, %if.then.389, %if.end.382
  %339 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next402 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %339, i32 0, i32 15
  %340 = load %struct.active_line_s*, %struct.active_line_s** %next402, align 8, !tbaa !189
  store %struct.active_line_s* %340, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.368

for.end.403:                                      ; preds = %for.cond.368
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.404

cleanup.404:                                      ; preds = %for.end.403, %if.then.399, %if.then.394
  %341 = bitcast i32* %inside365 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %341) #1
  %342 = bitcast %struct.active_line_s** %flp364 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %342) #1
  %cleanup.dest.406 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.406, label %cleanup.426 [
    i32 0, label %cleanup.cont.407
  ]

cleanup.cont.407:                                 ; preds = %cleanup.404
  br label %if.end.408

if.end.408:                                       ; preds = %cleanup.cont.407, %cleanup.cont.362
  %343 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %cmp409 = icmp ne %struct.active_line_s* %343, null
  br i1 %cmp409, label %if.then.411, label %if.end.417

if.then.411:                                      ; preds = %if.end.408
  %344 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %345 = load %struct.active_line_s*, %struct.active_line_s** %plp, align 8, !tbaa !1
  %346 = load i32, i32* %y, align 4, !tbaa !5
  %347 = load i32, i32* %y1, align 4, !tbaa !5
  %call412 = call i32 @process_h_lists(%struct.line_list_s* %344, %struct.active_line_s* %345, %struct.active_line_s* null, %struct.active_line_s* null, i32 %346, i32 %347) #5
  store i32 %call412, i32* %code, align 4, !tbaa !5
  %348 = load i32, i32* %code, align 4, !tbaa !5
  %cmp413 = icmp slt i32 %348, 0
  br i1 %cmp413, label %if.then.415, label %if.end.416

if.then.415:                                      ; preds = %if.then.411
  %349 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %349, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.416:                                       ; preds = %if.then.411
  br label %if.end.417

if.end.417:                                       ; preds = %if.end.416, %if.end.408
  %350 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %351 = load i32, i32* %y1, align 4, !tbaa !5
  %call418 = call i32 @move_al_by_y(%struct.line_list_s* %350, i32 %351) #5
  store i32 %call418, i32* %code, align 4, !tbaa !5
  %352 = load i32, i32* %code, align 4, !tbaa !5
  %cmp419 = icmp slt i32 %352, 0
  br i1 %cmp419, label %if.then.421, label %if.end.422

if.then.421:                                      ; preds = %if.end.417
  %353 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %353, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.426

if.end.422:                                       ; preds = %if.end.417
  %354 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0423 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %354, i32 0, i32 8
  %355 = load %struct.active_line_s*, %struct.active_line_s** %h_list0423, align 8, !tbaa !124
  %356 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1424 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %356, i32 0, i32 9
  store %struct.active_line_s* %355, %struct.active_line_s** %h_list1424, align 8, !tbaa !123
  %357 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0425 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %357, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0425, align 8, !tbaa !124
  %358 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %358, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.426

cleanup.426:                                      ; preds = %if.end.422, %if.then.421, %if.then.415, %cleanup.404, %cleanup.359, %if.then.121, %if.then.91, %if.then.85, %cleanup, %if.then.76, %if.end.45, %if.then.44
  %359 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %359) #1
  %360 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %360) #1
  %361 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %361) #1
  %362 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %362) #1
  %cleanup.dest.430 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.430, label %cleanup.449 [
    i32 0, label %cleanup.cont.431
    i32 3, label %while.end.432
    i32 2, label %while.cond
  ]

cleanup.cont.431:                                 ; preds = %cleanup.426
  br label %while.cond

while.end.432:                                    ; preds = %cleanup.426
  %363 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %364 = load i32, i32* %y, align 4, !tbaa !5
  %365 = load i32, i32* %y, align 4, !tbaa !5
  %add433 = add nsw i32 %365, 1
  %call434 = call i32 @process_h_lists(%struct.line_list_s* %363, %struct.active_line_s* null, %struct.active_line_s* null, %struct.active_line_s* null, i32 %364, i32 %add433) #5
  store i32 %call434, i32* %code, align 4, !tbaa !5
  %366 = load i32, i32* %code, align 4, !tbaa !5
  %cmp435 = icmp slt i32 %366, 0
  br i1 %cmp435, label %if.then.437, label %if.end.438

if.then.437:                                      ; preds = %while.end.432
  %367 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %367, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.449

if.end.438:                                       ; preds = %while.end.432
  %dev439 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %368 = load %struct.gx_device_s*, %struct.gx_device_s** %dev439, align 8, !tbaa !96
  %369 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %370 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1440 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %370, i32 0, i32 11
  %call441 = call i32 @close_margins(%struct.gx_device_s* %368, %struct.line_list_s* %369, %struct.margin_set_s* %margin_set1440) #5
  store i32 %call441, i32* %code, align 4, !tbaa !5
  %371 = load i32, i32* %code, align 4, !tbaa !5
  %cmp442 = icmp slt i32 %371, 0
  br i1 %cmp442, label %if.then.444, label %if.end.445

if.then.444:                                      ; preds = %if.end.438
  %372 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %372, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.449

if.end.445:                                       ; preds = %if.end.438
  %dev446 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %373 = load %struct.gx_device_s*, %struct.gx_device_s** %dev446, align 8, !tbaa !96
  %374 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %375 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0447 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %375, i32 0, i32 10
  %call448 = call i32 @close_margins(%struct.gx_device_s* %373, %struct.line_list_s* %374, %struct.margin_set_s* %margin_set0447) #5
  store i32 %call448, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.449

cleanup.449:                                      ; preds = %if.end.445, %if.then.444, %if.then.437, %cleanup.426, %if.then
  %376 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %376) #1
  %377 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %377) #1
  %378 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %378) #1
  %379 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %379) #1
  %380 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %380) #1
  %381 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %381) #1
  %382 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %382) #1
  %383 = load i32, i32* %retval
  ret i32 %383
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__aj_fd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %yi = alloca i32, align 4
  %xi = alloca i32, align 4
  %wi = alloca i32, align 4
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code193 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi332 = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi350 = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.422, %cleanup.417, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %cleanup.cont.91, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else.87

if.then.35:                                       ; preds = %if.end.32
  %48 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %50 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %sub36 = sub nsw i32 %49, %50
  %conv37 = sext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, 127
  %shr = ashr i64 %add38, 8
  %conv39 = trunc i64 %shr to i32
  store i32 %conv39, i32* %yi, align 4, !tbaa !5
  %51 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #1
  %52 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52) #1
  %53 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %53, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 0
  %54 = load i32, i32* %x, align 4, !tbaa !193
  %55 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %55, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %56 = load i32, i32* %x41, align 4, !tbaa !194
  %cmp42 = icmp sle i32 %54, %56
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.35
  %57 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %57, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start45, i32 0, i32 0
  %58 = load i32, i32* %x46, align 4, !tbaa !193
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %59 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub47 = sub nsw i32 %58, %59
  %conv48 = sext i32 %sub47 to i64
  %add49 = add nsw i64 %conv48, 127
  %shr50 = ashr i64 %add49, 8
  %conv51 = trunc i64 %shr50 to i32
  store i32 %conv51, i32* %xi, align 4, !tbaa !5
  %60 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %60, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end52, i32 0, i32 0
  %61 = load i32, i32* %x53, align 4, !tbaa !194
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %62 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add54 = add nsw i32 %61, %62
  %conv55 = sext i32 %add54 to i64
  %add56 = add nsw i64 %conv55, 127
  %shr57 = ashr i64 %add56, 8
  %conv58 = trunc i64 %shr57 to i32
  %63 = load i32, i32* %xi, align 4, !tbaa !5
  %sub59 = sub nsw i32 %conv58, %63
  store i32 %sub59, i32* %wi, align 4, !tbaa !5
  br label %if.end.77

if.else:                                          ; preds = %if.then.35
  %64 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 1
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end60, i32 0, i32 0
  %65 = load i32, i32* %x61, align 4, !tbaa !194
  %adjust_left62 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %66 = load i32, i32* %adjust_left62, align 4, !tbaa !83
  %sub63 = sub nsw i32 %65, %66
  %conv64 = sext i32 %sub63 to i64
  %add65 = add nsw i64 %conv64, 127
  %shr66 = ashr i64 %add65, 8
  %conv67 = trunc i64 %shr66 to i32
  store i32 %conv67, i32* %xi, align 4, !tbaa !5
  %67 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start68 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %67, i32 0, i32 0
  %x69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start68, i32 0, i32 0
  %68 = load i32, i32* %x69, align 4, !tbaa !193
  %adjust_right70 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %69 = load i32, i32* %adjust_right70, align 4, !tbaa !85
  %add71 = add nsw i32 %68, %69
  %conv72 = sext i32 %add71 to i64
  %add73 = add nsw i64 %conv72, 127
  %shr74 = ashr i64 %add73, 8
  %conv75 = trunc i64 %shr74 to i32
  %70 = load i32, i32* %xi, align 4, !tbaa !5
  %sub76 = sub nsw i32 %conv75, %70
  store i32 %sub76, i32* %wi, align 4, !tbaa !5
  br label %if.end.77

if.end.77:                                        ; preds = %if.else, %if.then.44
  br label %do.body.78

do.body.78:                                       ; preds = %if.end.77
  br label %do.cond.79

do.cond.79:                                       ; preds = %do.body.78
  br label %do.end.80

do.end.80:                                        ; preds = %do.cond.79
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %71 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %72 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %73 = load i32, i32* %xi, align 4, !tbaa !5
  %74 = load i32, i32* %yi, align 4, !tbaa !5
  %75 = load i32, i32* %wi, align 4, !tbaa !5
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %76 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %76, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %77 = load i64, i64* %pure, align 8, !tbaa !203
  %call = call i32 %71(%struct.gx_device_s* %72, i32 %73, i32 %74, i32 %75, i32 1, i64 %77) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %78 = load i32, i32* %code, align 4, !tbaa !5
  %cmp81 = icmp slt i32 %78, 0
  br i1 %cmp81, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %do.end.80
  %79 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %79, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.84:                                        ; preds = %do.end.80
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.84, %if.then.83
  %80 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %80) #1
  %81 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %81) #1
  %82 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.89 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.88

if.else.87:                                       ; preds = %if.end.32
  %83 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %84 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %83, %struct.line_list_s* %84) #5
  br label %if.end.88

if.end.88:                                        ; preds = %if.else.87, %cleanup.cont
  %85 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %85, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.89

cleanup.89:                                       ; preds = %if.end.88, %cleanup
  %86 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86) #1
  %cleanup.dest.90 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.90, label %cleanup.417 [
    i32 0, label %cleanup.cont.91
  ]

cleanup.cont.91:                                  ; preds = %cleanup.89
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head92 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %87, i32 0, i32 7
  %next93 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head92, i32 0, i32 15
  %88 = load %struct.active_line_s*, %struct.active_line_s** %next93, align 8, !tbaa !201
  %cmp94 = icmp eq %struct.active_line_s* %88, null
  br i1 %cmp94, label %if.then.96, label %if.end.104

if.then.96:                                       ; preds = %while.end
  %89 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp97 = icmp eq %struct.active_line_s* %89, null
  br i1 %cmp97, label %if.then.99, label %if.end.100

if.then.99:                                       ; preds = %if.then.96
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.417

if.end.100:                                       ; preds = %if.then.96
  %90 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start101 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %90, i32 0, i32 0
  %y102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start101, i32 0, i32 1
  %91 = load i32, i32* %y102, align 4, !tbaa !187
  store i32 %91, i32* %y, align 4, !tbaa !5
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %92, i32 0, i32 8
  %93 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %94 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %94, i32 0, i32 9
  store %struct.active_line_s* %93, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %95 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0103 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %95, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0103, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.417

if.end.104:                                       ; preds = %while.end
  %96 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp105 = icmp ne %struct.active_line_s* %96, null
  br i1 %cmp105, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.104
  %97 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start107 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %97, i32 0, i32 0
  %y108 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start107, i32 0, i32 1
  %98 = load i32, i32* %y108, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.104
  %99 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %99, i32 0, i32 18
  %100 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %98, %cond.true ], [ %100, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %101 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %101) #1
  %102 = load i32, i32* %y, align 4, !tbaa !5
  %103 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %103, -1
  %or = or i32 %102, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %104 = load i32, i32* %y1, align 4, !tbaa !5
  %105 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp109 = icmp sgt i32 %104, %105
  br i1 %cmp109, label %if.then.111, label %if.end.113

if.then.111:                                      ; preds = %cond.end
  %106 = load i32, i32* %y_band, align 4, !tbaa !5
  %add112 = add nsw i32 %106, 1
  store i32 %add112, i32* %y1, align 4, !tbaa !5
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.111, %cond.end
  %107 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #1
  %108 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head114 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %108, i32 0, i32 7
  %next115 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head114, i32 0, i32 15
  %109 = load %struct.active_line_s*, %struct.active_line_s** %next115, align 8, !tbaa !201
  store %struct.active_line_s* %109, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.113
  %110 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp116 = icmp ne %struct.active_line_s* %110, null
  br i1 %cmp116, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end118 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 1
  %y119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end118, i32 0, i32 1
  %112 = load i32, i32* %y119, align 4, !tbaa !195
  %113 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp120 = icmp slt i32 %112, %113
  br i1 %cmp120, label %if.then.122, label %if.end.125

if.then.122:                                      ; preds = %for.body
  %114 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end123 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %114, i32 0, i32 1
  %y124 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end123, i32 0, i32 1
  %115 = load i32, i32* %y124, align 4, !tbaa !195
  store i32 %115, i32* %y1, align 4, !tbaa !5
  br label %if.end.125

if.end.125:                                       ; preds = %if.then.122, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.125
  %116 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next126 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %116, i32 0, i32 15
  %117 = load %struct.active_line_s*, %struct.active_line_s** %next126, align 8, !tbaa !189
  store %struct.active_line_s* %117, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %118 = load i32, i32* %y, align 4, !tbaa !5
  %119 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp127 = icmp eq i32 %118, %119
  br i1 %cmp127, label %if.then.129, label %if.end.148

if.then.129:                                      ; preds = %for.end
  %120 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %121 = load i32, i32* %y, align 4, !tbaa !5
  %call130 = call i32 @process_h_segments(%struct.line_list_s* %120, i32 %121) #5
  store i32 %call130, i32* %code, align 4, !tbaa !5
  %122 = load i32, i32* %code, align 4, !tbaa !5
  %cmp131 = icmp slt i32 %122, 0
  br i1 %cmp131, label %if.then.133, label %if.end.134

if.then.133:                                      ; preds = %if.then.129
  %123 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %123, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.417

if.end.134:                                       ; preds = %if.then.129
  %124 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %124) #1
  %125 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %126 = load i32, i32* %y1, align 4, !tbaa !5
  %call135 = call i32 @move_al_by_y(%struct.line_list_s* %125, i32 %126) #5
  store i32 %call135, i32* %code1, align 4, !tbaa !5
  %127 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp136 = icmp slt i32 %127, 0
  br i1 %cmp136, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %if.end.134
  %128 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %128, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.140

if.end.139:                                       ; preds = %if.end.134
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.140

cleanup.140:                                      ; preds = %if.end.139, %if.then.138
  %129 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %129) #1
  %cleanup.dest.141 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.141, label %cleanup.417 [
    i32 0, label %cleanup.cont.142
  ]

cleanup.cont.142:                                 ; preds = %cleanup.140
  %130 = load i32, i32* %code, align 4, !tbaa !5
  %cmp143 = icmp sgt i32 %130, 0
  br i1 %cmp143, label %if.then.145, label %if.end.147

if.then.145:                                      ; preds = %cleanup.cont.142
  %131 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list146 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %131, i32 0, i32 5
  %132 = load %struct.active_line_s*, %struct.active_line_s** %y_list146, align 8, !tbaa !121
  store %struct.active_line_s* %132, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.417

if.end.147:                                       ; preds = %cleanup.cont.142
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %for.end
  %133 = load i32, i32* %y, align 4, !tbaa !5
  %134 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp149 = icmp sge i32 %133, %134
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.end.148
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.417

if.end.152:                                       ; preds = %if.end.148
  %135 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below153 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %136 = load i32, i32* %adjust_below153, align 4, !tbaa !86
  %sub154 = sub nsw i32 %135, %136
  %conv155 = sext i32 %sub154 to i64
  %add156 = add nsw i64 %conv155, 127
  %and157 = and i64 %add156, -256
  %137 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %138 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %add158 = add nsw i32 %137, %138
  %conv159 = sext i32 %add158 to i64
  %add160 = add nsw i64 %conv159, 127
  %and161 = and i64 %add160, -256
  %cmp162 = icmp slt i64 %and157, %and161
  %conv163 = zext i1 %cmp162 to i32
  store i32 %conv163, i32* %covering_pixel_centers, align 4, !tbaa !5
  %139 = load i32, i32* %y, align 4, !tbaa !5
  %140 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp164 = icmp ne i32 %139, %140
  br i1 %cmp164, label %if.then.166, label %if.end.180

if.then.166:                                      ; preds = %if.end.152
  %141 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %142 = load i32, i32* %y, align 4, !tbaa !5
  %143 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %143, 0
  %cond167 = select i1 %tobool, i32 1, i32 -1
  %144 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %141, i32 %142, i32* %y1, i32 %cond167, i32 %144) #5
  %145 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below168 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %146 = load i32, i32* %adjust_below168, align 4, !tbaa !86
  %sub169 = sub nsw i32 %145, %146
  %conv170 = sext i32 %sub169 to i64
  %add171 = add nsw i64 %conv170, 127
  %and172 = and i64 %add171, -256
  %147 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above173 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %148 = load i32, i32* %adjust_above173, align 4, !tbaa !87
  %add174 = add nsw i32 %147, %148
  %conv175 = sext i32 %add174 to i64
  %add176 = add nsw i64 %conv175, 127
  %and177 = and i64 %add176, -256
  %cmp178 = icmp slt i64 %and172, %and177
  %conv179 = zext i1 %cmp178 to i32
  store i32 %conv179, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.180

if.end.180:                                       ; preds = %if.then.166, %if.end.152
  %149 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool181 = icmp ne i32 %149, 0
  br i1 %tobool181, label %if.then.183, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.180
  %150 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool182 = icmp ne i32 %150, 0
  br i1 %tobool182, label %if.then.183, label %if.else.407

if.then.183:                                      ; preds = %lor.lhs.false, %if.end.180
  %151 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %151) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %152 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %152) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %do.body.184

do.body.184:                                      ; preds = %if.then.183
  br label %do.cond.185

do.cond.185:                                      ; preds = %do.body.184
  br label %do.end.186

do.end.186:                                       ; preds = %do.cond.185
  %153 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head187 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %153, i32 0, i32 7
  %next188 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head187, i32 0, i32 15
  %154 = load %struct.active_line_s*, %struct.active_line_s** %next188, align 8, !tbaa !201
  store %struct.active_line_s* %154, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.189

for.cond.189:                                     ; preds = %for.inc.400, %do.end.186
  %155 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp190 = icmp ne %struct.active_line_s* %155, null
  br i1 %cmp190, label %for.body.192, label %for.end.402

for.body.192:                                     ; preds = %for.cond.189
  %156 = bitcast i32* %code193 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %156) #1
  br label %do.body.194

do.body.194:                                      ; preds = %for.body.192
  br label %do.cond.195

do.cond.195:                                      ; preds = %do.body.194
  br label %do.end.196

do.end.196:                                       ; preds = %do.cond.195
  br label %do.body.197

do.body.197:                                      ; preds = %do.end.196
  br label %do.cond.198

do.cond.198:                                      ; preds = %do.body.197
  br label %do.end.199

do.end.199:                                       ; preds = %do.cond.198
  %157 = load i32, i32* %inside, align 4, !tbaa !5
  %158 = load i32, i32* %rule, align 4, !tbaa !5
  %and200 = and i32 %157, %158
  %cmp201 = icmp ne i32 %and200, 0
  br i1 %cmp201, label %if.end.211, label %if.then.203

if.then.203:                                      ; preds = %do.end.199
  %159 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction204 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %159, i32 0, i32 8
  %160 = load i32, i32* %direction204, align 4, !tbaa !178
  %161 = load i32, i32* %inside, align 4, !tbaa !5
  %add205 = add nsw i32 %161, %160
  store i32 %add205, i32* %inside, align 4, !tbaa !5
  %162 = load i32, i32* %inside, align 4, !tbaa !5
  %163 = load i32, i32* %rule, align 4, !tbaa !5
  %and206 = and i32 %162, %163
  %cmp207 = icmp ne i32 %and206, 0
  br i1 %cmp207, label %if.then.209, label %if.end.210

if.then.209:                                      ; preds = %if.then.203
  %164 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %164, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.210

if.end.210:                                       ; preds = %if.then.209, %if.then.203
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.397

if.end.211:                                       ; preds = %do.end.199
  %165 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction212 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %165, i32 0, i32 8
  %166 = load i32, i32* %direction212, align 4, !tbaa !178
  %167 = load i32, i32* %inside, align 4, !tbaa !5
  %add213 = add nsw i32 %167, %166
  store i32 %add213, i32* %inside, align 4, !tbaa !5
  %168 = load i32, i32* %inside, align 4, !tbaa !5
  %169 = load i32, i32* %rule, align 4, !tbaa !5
  %and214 = and i32 %168, %169
  %cmp215 = icmp ne i32 %and214, 0
  br i1 %cmp215, label %if.then.217, label %if.end.218

if.then.217:                                      ; preds = %if.end.211
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.397

if.end.218:                                       ; preds = %if.end.211
  %170 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next219 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %170, i32 0, i32 15
  %171 = load %struct.active_line_s*, %struct.active_line_s** %next219, align 8, !tbaa !189
  %cmp220 = icmp ne %struct.active_line_s* %171, null
  br i1 %cmp220, label %land.lhs.true, label %if.end.236

land.lhs.true:                                    ; preds = %if.end.218
  %172 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current222 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %172, i32 0, i32 5
  %173 = load i32, i32* %x_current222, align 4, !tbaa !204
  %174 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next223 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %174, i32 0, i32 15
  %175 = load %struct.active_line_s*, %struct.active_line_s** %next223, align 8, !tbaa !189
  %x_current224 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 5
  %176 = load i32, i32* %x_current224, align 4, !tbaa !204
  %cmp225 = icmp eq i32 %173, %176
  br i1 %cmp225, label %land.lhs.true.227, label %if.end.236

land.lhs.true.227:                                ; preds = %land.lhs.true
  %177 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %177, i32 0, i32 6
  %178 = load i32, i32* %x_next, align 4, !tbaa !205
  %179 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next228 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %179, i32 0, i32 15
  %180 = load %struct.active_line_s*, %struct.active_line_s** %next228, align 8, !tbaa !189
  %x_next229 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %180, i32 0, i32 6
  %181 = load i32, i32* %x_next229, align 4, !tbaa !205
  %cmp230 = icmp eq i32 %178, %181
  br i1 %cmp230, label %if.then.232, label %if.end.236

if.then.232:                                      ; preds = %land.lhs.true.227
  %182 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next233 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %182, i32 0, i32 15
  %183 = load %struct.active_line_s*, %struct.active_line_s** %next233, align 8, !tbaa !189
  store %struct.active_line_s* %183, %struct.active_line_s** %alp, align 8, !tbaa !1
  %184 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction234 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %184, i32 0, i32 8
  %185 = load i32, i32* %direction234, align 4, !tbaa !178
  %186 = load i32, i32* %inside, align 4, !tbaa !5
  %add235 = add nsw i32 %186, %185
  store i32 %add235, i32* %inside, align 4, !tbaa !5
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.397

if.end.236:                                       ; preds = %land.lhs.true.227, %land.lhs.true, %if.end.218
  br label %do.body.237

do.body.237:                                      ; preds = %if.end.236
  br label %do.cond.238

do.cond.238:                                      ; preds = %do.body.237
  br label %do.end.239

do.end.239:                                       ; preds = %do.cond.238
  %187 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end240 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %187, i32 0, i32 1
  %x241 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end240, i32 0, i32 0
  %188 = load i32, i32* %x241, align 4, !tbaa !194
  %189 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start242 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %189, i32 0, i32 0
  %x243 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start242, i32 0, i32 0
  %190 = load i32, i32* %x243, align 4, !tbaa !193
  %cmp244 = icmp eq i32 %188, %190
  br i1 %cmp244, label %land.lhs.true.246, label %land.lhs.true.253

land.lhs.true.246:                                ; preds = %do.end.239
  %191 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end247 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %191, i32 0, i32 1
  %x248 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end247, i32 0, i32 0
  %192 = load i32, i32* %x248, align 4, !tbaa !194
  %193 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start249 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %193, i32 0, i32 0
  %x250 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start249, i32 0, i32 0
  %194 = load i32, i32* %x250, align 4, !tbaa !193
  %cmp251 = icmp eq i32 %192, %194
  br i1 %cmp251, label %if.else.261, label %land.lhs.true.253

land.lhs.true.253:                                ; preds = %land.lhs.true.246, %do.end.239
  %adjust_below254 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %195 = load i32, i32* %adjust_below254, align 4, !tbaa !86
  %adjust_above255 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %196 = load i32, i32* %adjust_above255, align 4, !tbaa !87
  %or256 = or i32 %195, %196
  %cmp257 = icmp ne i32 %or256, 0
  br i1 %cmp257, label %if.then.259, label %if.else.261

if.then.259:                                      ; preds = %land.lhs.true.253
  %197 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %198 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %199 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %200 = load i32, i32* %y, align 4, !tbaa !5
  %201 = load i32, i32* %y1, align 4, !tbaa !5
  %call260 = call i32 @slant_into_trapezoids__fd(%struct.line_list_s* %197, %struct.active_line_s* %198, %struct.active_line_s* %199, i32 %200, i32 %201) #5
  store i32 %call260, i32* %code193, align 4, !tbaa !5
  br label %if.end.392

if.else.261:                                      ; preds = %land.lhs.true.253, %land.lhs.true.246
  %202 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %202) #1
  %203 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %204 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %204, i32 0, i32 0
  %y262 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %205 = load i32, i32* %y262, align 4, !tbaa !38
  %cmp263 = icmp sgt i32 %203, %205
  br i1 %cmp263, label %cond.true.265, label %cond.false.266

cond.true.265:                                    ; preds = %if.else.261
  %206 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.270

cond.false.266:                                   ; preds = %if.else.261
  %pbox267 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %207 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox267, align 8, !tbaa !97
  %p268 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %207, i32 0, i32 0
  %y269 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p268, i32 0, i32 1
  %208 = load i32, i32* %y269, align 4, !tbaa !38
  br label %cond.end.270

cond.end.270:                                     ; preds = %cond.false.266, %cond.true.265
  %cond271 = phi i32 [ %206, %cond.true.265 ], [ %208, %cond.false.266 ]
  store i32 %cond271, i32* %ybot, align 4, !tbaa !5
  %209 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %209) #1
  %210 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox272 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %211 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox272, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %211, i32 0, i32 1
  %y273 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %212 = load i32, i32* %y273, align 4, !tbaa !42
  %cmp274 = icmp slt i32 %210, %212
  br i1 %cmp274, label %cond.true.276, label %cond.false.277

cond.true.276:                                    ; preds = %cond.end.270
  %213 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.281

cond.false.277:                                   ; preds = %cond.end.270
  %pbox278 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %214 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox278, align 8, !tbaa !97
  %q279 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %214, i32 0, i32 1
  %y280 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q279, i32 0, i32 1
  %215 = load i32, i32* %y280, align 4, !tbaa !42
  br label %cond.end.281

cond.end.281:                                     ; preds = %cond.false.277, %cond.true.276
  %cond282 = phi i32 [ %213, %cond.true.276 ], [ %215, %cond.false.277 ]
  store i32 %cond282, i32* %ytop, align 4, !tbaa !5
  %216 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end283 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %216, i32 0, i32 1
  %x284 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end283, i32 0, i32 0
  %217 = load i32, i32* %x284, align 4, !tbaa !194
  %218 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start285 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %218, i32 0, i32 0
  %x286 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start285, i32 0, i32 0
  %219 = load i32, i32* %x286, align 4, !tbaa !193
  %cmp287 = icmp eq i32 %217, %219
  br i1 %cmp287, label %land.lhs.true.289, label %if.else.371

land.lhs.true.289:                                ; preds = %cond.end.281
  %220 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end290 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %220, i32 0, i32 1
  %x291 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end290, i32 0, i32 0
  %221 = load i32, i32* %x291, align 4, !tbaa !194
  %222 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start292 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %222, i32 0, i32 0
  %x293 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start292, i32 0, i32 0
  %223 = load i32, i32* %x293, align 4, !tbaa !193
  %cmp294 = icmp eq i32 %221, %223
  br i1 %cmp294, label %if.then.296, label %if.else.371

if.then.296:                                      ; preds = %land.lhs.true.289
  %224 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below297 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %225 = load i32, i32* %adjust_below297, align 4, !tbaa !86
  %sub298 = sub nsw i32 %224, %225
  %pbox299 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %226 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox299, align 8, !tbaa !97
  %p300 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %226, i32 0, i32 0
  %y301 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p300, i32 0, i32 1
  %227 = load i32, i32* %y301, align 4, !tbaa !38
  %cmp302 = icmp sgt i32 %sub298, %227
  br i1 %cmp302, label %cond.true.304, label %cond.false.307

cond.true.304:                                    ; preds = %if.then.296
  %228 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below305 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %229 = load i32, i32* %adjust_below305, align 4, !tbaa !86
  %sub306 = sub nsw i32 %228, %229
  br label %cond.end.311

cond.false.307:                                   ; preds = %if.then.296
  %pbox308 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %230 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox308, align 8, !tbaa !97
  %p309 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %230, i32 0, i32 0
  %y310 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p309, i32 0, i32 1
  %231 = load i32, i32* %y310, align 4, !tbaa !38
  br label %cond.end.311

cond.end.311:                                     ; preds = %cond.false.307, %cond.true.304
  %cond312 = phi i32 [ %sub306, %cond.true.304 ], [ %231, %cond.false.307 ]
  store i32 %cond312, i32* %ybot, align 4, !tbaa !5
  %232 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above313 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %233 = load i32, i32* %adjust_above313, align 4, !tbaa !87
  %add314 = add nsw i32 %232, %233
  %pbox315 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %234 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox315, align 8, !tbaa !97
  %q316 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %234, i32 0, i32 1
  %y317 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q316, i32 0, i32 1
  %235 = load i32, i32* %y317, align 4, !tbaa !42
  %cmp318 = icmp slt i32 %add314, %235
  br i1 %cmp318, label %cond.true.320, label %cond.false.323

cond.true.320:                                    ; preds = %cond.end.311
  %236 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above321 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %237 = load i32, i32* %adjust_above321, align 4, !tbaa !87
  %add322 = add nsw i32 %236, %237
  br label %cond.end.327

cond.false.323:                                   ; preds = %cond.end.311
  %pbox324 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %238 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox324, align 8, !tbaa !97
  %q325 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %238, i32 0, i32 1
  %y326 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q325, i32 0, i32 1
  %239 = load i32, i32* %y326, align 4, !tbaa !42
  br label %cond.end.327

cond.end.327:                                     ; preds = %cond.false.323, %cond.true.320
  %cond328 = phi i32 [ %add322, %cond.true.320 ], [ %239, %cond.false.323 ]
  store i32 %cond328, i32* %ytop, align 4, !tbaa !5
  %240 = load i32, i32* %ytop, align 4, !tbaa !5
  %241 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp329 = icmp sgt i32 %240, %241
  br i1 %cmp329, label %if.then.331, label %if.else.369

if.then.331:                                      ; preds = %cond.end.327
  %242 = bitcast i32* %yi332 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %242) #1
  %243 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv333 = sext i32 %243 to i64
  %add334 = add nsw i64 %conv333, 127
  %shr335 = ashr i64 %add334, 8
  %conv336 = trunc i64 %shr335 to i32
  store i32 %conv336, i32* %yi332, align 4, !tbaa !5
  %244 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %244) #1
  %245 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv337 = sext i32 %245 to i64
  %add338 = add nsw i64 %conv337, 127
  %shr339 = ashr i64 %add338, 8
  %conv340 = trunc i64 %shr339 to i32
  %246 = load i32, i32* %yi332, align 4, !tbaa !5
  %sub341 = sub nsw i32 %conv340, %246
  store i32 %sub341, i32* %hi, align 4, !tbaa !5
  %247 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %247) #1
  %248 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end342 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %248, i32 0, i32 1
  %x343 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end342, i32 0, i32 0
  %249 = load i32, i32* %x343, align 4, !tbaa !194
  %adjust_left344 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %250 = load i32, i32* %adjust_left344, align 4, !tbaa !83
  %sub345 = sub nsw i32 %249, %250
  %conv346 = sext i32 %sub345 to i64
  %add347 = add nsw i64 %conv346, 127
  %shr348 = ashr i64 %add347, 8
  %conv349 = trunc i64 %shr348 to i32
  store i32 %conv349, i32* %xli, align 4, !tbaa !5
  %251 = bitcast i32* %xi350 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %251) #1
  %252 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end351 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %252, i32 0, i32 1
  %x352 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end351, i32 0, i32 0
  %253 = load i32, i32* %x352, align 4, !tbaa !194
  %adjust_right353 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %254 = load i32, i32* %adjust_right353, align 4, !tbaa !85
  %add354 = add nsw i32 %253, %254
  %conv355 = sext i32 %add354 to i64
  %add356 = add nsw i64 %conv355, 127
  %shr357 = ashr i64 %add356, 8
  %conv358 = trunc i64 %shr357 to i32
  store i32 %conv358, i32* %xi350, align 4, !tbaa !5
  br label %do.body.359

do.body.359:                                      ; preds = %if.then.331
  br label %do.cond.360

do.cond.360:                                      ; preds = %do.body.359
  br label %do.end.361

do.end.361:                                       ; preds = %do.cond.360
  %fill_rect362 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %255 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect362, align 8, !tbaa !102
  %dev363 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %256 = load %struct.gx_device_s*, %struct.gx_device_s** %dev363, align 8, !tbaa !96
  %257 = load i32, i32* %xli, align 4, !tbaa !5
  %258 = load i32, i32* %yi332, align 4, !tbaa !5
  %259 = load i32, i32* %xi350, align 4, !tbaa !5
  %260 = load i32, i32* %xli, align 4, !tbaa !5
  %sub364 = sub nsw i32 %259, %260
  %261 = load i32, i32* %hi, align 4, !tbaa !5
  %pdevc365 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %262 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc365, align 8, !tbaa !90
  %colors366 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %262, i32 0, i32 1
  %pure367 = bitcast %union._c* %colors366 to i64*
  %263 = load i64, i64* %pure367, align 8, !tbaa !203
  %call368 = call i32 %255(%struct.gx_device_s* %256, i32 %257, i32 %258, i32 %sub364, i32 %261, i64 %263) #5
  store i32 %call368, i32* %code193, align 4, !tbaa !5
  %264 = bitcast i32* %xi350 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %264) #1
  %265 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %265) #1
  %266 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %266) #1
  %267 = bitcast i32* %yi332 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %267) #1
  br label %if.end.370

if.else.369:                                      ; preds = %cond.end.327
  store i32 0, i32* %code193, align 4, !tbaa !5
  br label %if.end.370

if.end.370:                                       ; preds = %if.else.369, %do.end.361
  br label %if.end.391

if.else.371:                                      ; preds = %land.lhs.true.289, %cond.end.281
  %268 = load i32, i32* %ybot, align 4, !tbaa !5
  %269 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp372 = icmp slt i32 %268, %269
  br i1 %cmp372, label %if.then.374, label %if.else.389

if.then.374:                                      ; preds = %if.else.371
  %270 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %270) #1
  %271 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %271) #1
  %start375 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %272 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start376 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %272, i32 0, i32 0
  %273 = bitcast %struct.gs_fixed_point_s* %start375 to i8*
  %274 = bitcast %struct.gs_fixed_point_s* %start376 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %273, i8* %274, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end377 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %275 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end378 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %275, i32 0, i32 1
  %276 = bitcast %struct.gs_fixed_point_s* %end377 to i8*
  %277 = bitcast %struct.gs_fixed_point_s* %end378 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %276, i8* %277, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start379 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %278 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start380 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %278, i32 0, i32 0
  %279 = bitcast %struct.gs_fixed_point_s* %start379 to i8*
  %280 = bitcast %struct.gs_fixed_point_s* %start380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %279, i8* %280, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end381 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %281 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end382 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %281, i32 0, i32 1
  %282 = bitcast %struct.gs_fixed_point_s* %end381 to i8*
  %283 = bitcast %struct.gs_fixed_point_s* %end382 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %282, i8* %283, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.383

do.body.383:                                      ; preds = %if.then.374
  br label %do.cond.384

do.cond.384:                                      ; preds = %do.body.383
  br label %do.end.385

do.end.385:                                       ; preds = %do.cond.384
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 17
  %284 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %dev386 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %285 = load %struct.gx_device_s*, %struct.gx_device_s** %dev386, align 8, !tbaa !96
  %286 = load i32, i32* %ybot, align 4, !tbaa !5
  %287 = load i32, i32* %ytop, align 4, !tbaa !5
  %pdevc387 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %288 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc387, align 8, !tbaa !90
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %289 = load i32, i32* %lop, align 4, !tbaa !91
  %call388 = call i32 %284(%struct.gx_device_s* %285, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %286, i32 %287, i32 0, %struct.gx_device_color_s* %288, i32 %289) #5
  store i32 %call388, i32* %code193, align 4, !tbaa !5
  %290 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %290) #1
  %291 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %291) #1
  br label %if.end.390

if.else.389:                                      ; preds = %if.else.371
  store i32 0, i32* %code193, align 4, !tbaa !5
  br label %if.end.390

if.end.390:                                       ; preds = %if.else.389, %do.end.385
  br label %if.end.391

if.end.391:                                       ; preds = %if.end.390, %if.end.370
  %292 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %292) #1
  %293 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %293) #1
  br label %if.end.392

if.end.392:                                       ; preds = %if.end.391, %if.then.259
  %294 = load i32, i32* %code193, align 4, !tbaa !5
  %cmp393 = icmp slt i32 %294, 0
  br i1 %cmp393, label %if.then.395, label %if.end.396

if.then.395:                                      ; preds = %if.end.392
  %295 = load i32, i32* %code193, align 4, !tbaa !5
  store i32 %295, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.397

if.end.396:                                       ; preds = %if.end.392
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.397

cleanup.397:                                      ; preds = %if.end.396, %if.then.395, %if.then.232, %if.then.217, %if.end.210
  %296 = bitcast i32* %code193 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %296) #1
  %cleanup.dest.398 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.398, label %cleanup.403 [
    i32 0, label %cleanup.cont.399
    i32 17, label %for.inc.400
  ]

cleanup.cont.399:                                 ; preds = %cleanup.397
  br label %for.inc.400

for.inc.400:                                      ; preds = %cleanup.cont.399, %cleanup.397
  %297 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next401 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %297, i32 0, i32 15
  %298 = load %struct.active_line_s*, %struct.active_line_s** %next401, align 8, !tbaa !189
  store %struct.active_line_s* %298, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.189

for.end.402:                                      ; preds = %for.cond.189
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.403

cleanup.403:                                      ; preds = %for.end.402, %cleanup.397
  %299 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %299) #1
  %300 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %300) #1
  %cleanup.dest.405 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.405, label %cleanup.417 [
    i32 0, label %cleanup.cont.406
  ]

cleanup.cont.406:                                 ; preds = %cleanup.403
  br label %if.end.408

if.else.407:                                      ; preds = %lor.lhs.false
  br label %if.end.408

if.end.408:                                       ; preds = %if.else.407, %cleanup.cont.406
  %301 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %302 = load i32, i32* %y1, align 4, !tbaa !5
  %call409 = call i32 @move_al_by_y(%struct.line_list_s* %301, i32 %302) #5
  store i32 %call409, i32* %code, align 4, !tbaa !5
  %303 = load i32, i32* %code, align 4, !tbaa !5
  %cmp410 = icmp slt i32 %303, 0
  br i1 %cmp410, label %if.then.412, label %if.end.413

if.then.412:                                      ; preds = %if.end.408
  %304 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %304, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.417

if.end.413:                                       ; preds = %if.end.408
  %305 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0414 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %305, i32 0, i32 8
  %306 = load %struct.active_line_s*, %struct.active_line_s** %h_list0414, align 8, !tbaa !124
  %307 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1415 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %307, i32 0, i32 9
  store %struct.active_line_s* %306, %struct.active_line_s** %h_list1415, align 8, !tbaa !123
  %308 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0416 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %308, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0416, align 8, !tbaa !124
  %309 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %309, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.417

cleanup.417:                                      ; preds = %if.end.413, %if.then.412, %cleanup.403, %if.then.151, %if.then.145, %cleanup.140, %if.then.133, %if.end.100, %if.then.99, %cleanup.89
  %310 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %310) #1
  %311 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %311) #1
  %312 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %312) #1
  %313 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %313) #1
  %cleanup.dest.421 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.421, label %cleanup.424 [
    i32 0, label %cleanup.cont.422
    i32 3, label %while.end.423
    i32 2, label %while.cond
  ]

cleanup.cont.422:                                 ; preds = %cleanup.417
  br label %while.cond

while.end.423:                                    ; preds = %cleanup.417
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

cleanup.424:                                      ; preds = %while.end.423, %cleanup.417, %if.then
  %314 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %314) #1
  %315 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %315) #1
  %316 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %316) #1
  %317 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %317) #1
  %318 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %318) #1
  %319 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %319) #1
  %320 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %320) #1
  %321 = load i32, i32* %retval
  ret i32 %321
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__aj_nd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %yi = alloca i32, align 4
  %xi = alloca i32, align 4
  %wi = alloca i32, align 4
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code194 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi333 = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi351 = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.427

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.425, %cleanup.420, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %cleanup.cont.92, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else.88

if.then.35:                                       ; preds = %if.end.32
  %48 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %50 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %sub36 = sub nsw i32 %49, %50
  %conv37 = sext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, 127
  %shr = ashr i64 %add38, 8
  %conv39 = trunc i64 %shr to i32
  store i32 %conv39, i32* %yi, align 4, !tbaa !5
  %51 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #1
  %52 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52) #1
  %53 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %53, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 0
  %54 = load i32, i32* %x, align 4, !tbaa !193
  %55 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %55, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %56 = load i32, i32* %x41, align 4, !tbaa !194
  %cmp42 = icmp sle i32 %54, %56
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.35
  %57 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %57, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start45, i32 0, i32 0
  %58 = load i32, i32* %x46, align 4, !tbaa !193
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %59 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub47 = sub nsw i32 %58, %59
  %conv48 = sext i32 %sub47 to i64
  %add49 = add nsw i64 %conv48, 127
  %shr50 = ashr i64 %add49, 8
  %conv51 = trunc i64 %shr50 to i32
  store i32 %conv51, i32* %xi, align 4, !tbaa !5
  %60 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %60, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end52, i32 0, i32 0
  %61 = load i32, i32* %x53, align 4, !tbaa !194
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %62 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add54 = add nsw i32 %61, %62
  %conv55 = sext i32 %add54 to i64
  %add56 = add nsw i64 %conv55, 127
  %shr57 = ashr i64 %add56, 8
  %conv58 = trunc i64 %shr57 to i32
  %63 = load i32, i32* %xi, align 4, !tbaa !5
  %sub59 = sub nsw i32 %conv58, %63
  store i32 %sub59, i32* %wi, align 4, !tbaa !5
  br label %if.end.77

if.else:                                          ; preds = %if.then.35
  %64 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 1
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end60, i32 0, i32 0
  %65 = load i32, i32* %x61, align 4, !tbaa !194
  %adjust_left62 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %66 = load i32, i32* %adjust_left62, align 4, !tbaa !83
  %sub63 = sub nsw i32 %65, %66
  %conv64 = sext i32 %sub63 to i64
  %add65 = add nsw i64 %conv64, 127
  %shr66 = ashr i64 %add65, 8
  %conv67 = trunc i64 %shr66 to i32
  store i32 %conv67, i32* %xi, align 4, !tbaa !5
  %67 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start68 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %67, i32 0, i32 0
  %x69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start68, i32 0, i32 0
  %68 = load i32, i32* %x69, align 4, !tbaa !193
  %adjust_right70 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %69 = load i32, i32* %adjust_right70, align 4, !tbaa !85
  %add71 = add nsw i32 %68, %69
  %conv72 = sext i32 %add71 to i64
  %add73 = add nsw i64 %conv72, 127
  %shr74 = ashr i64 %add73, 8
  %conv75 = trunc i64 %shr74 to i32
  %70 = load i32, i32* %xi, align 4, !tbaa !5
  %sub76 = sub nsw i32 %conv75, %70
  store i32 %sub76, i32* %wi, align 4, !tbaa !5
  br label %if.end.77

if.end.77:                                        ; preds = %if.else, %if.then.44
  br label %do.body.78

do.body.78:                                       ; preds = %if.end.77
  br label %do.cond.79

do.cond.79:                                       ; preds = %do.body.78
  br label %do.end.80

do.end.80:                                        ; preds = %do.cond.79
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %71 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %71, i32 0, i32 0
  %72 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %72, i32 0, i32 5
  %73 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %pdevc81 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %74 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc81, align 8, !tbaa !90
  %75 = load i32, i32* %xi, align 4, !tbaa !5
  %76 = load i32, i32* %yi, align 4, !tbaa !5
  %77 = load i32, i32* %wi, align 4, !tbaa !5
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %78 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %79 = load i32, i32* %lop, align 4, !tbaa !91
  %call = call i32 %73(%struct.gx_device_color_s* %74, i32 %75, i32 %76, i32 %77, i32 1, %struct.gx_device_s* %78, i32 %79, %struct.gx_rop_source_s* null) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %80 = load i32, i32* %code, align 4, !tbaa !5
  %cmp82 = icmp slt i32 %80, 0
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %do.end.80
  %81 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %81, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.85:                                        ; preds = %do.end.80
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.85, %if.then.84
  %82 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #1
  %83 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #1
  %84 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.90 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.89

if.else.88:                                       ; preds = %if.end.32
  %85 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %86 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %85, %struct.line_list_s* %86) #5
  br label %if.end.89

if.end.89:                                        ; preds = %if.else.88, %cleanup.cont
  %87 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %87, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.90

cleanup.90:                                       ; preds = %if.end.89, %cleanup
  %88 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %cleanup.dest.91 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.91, label %cleanup.420 [
    i32 0, label %cleanup.cont.92
  ]

cleanup.cont.92:                                  ; preds = %cleanup.90
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %89 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head93 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %89, i32 0, i32 7
  %next94 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head93, i32 0, i32 15
  %90 = load %struct.active_line_s*, %struct.active_line_s** %next94, align 8, !tbaa !201
  %cmp95 = icmp eq %struct.active_line_s* %90, null
  br i1 %cmp95, label %if.then.97, label %if.end.105

if.then.97:                                       ; preds = %while.end
  %91 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp98 = icmp eq %struct.active_line_s* %91, null
  br i1 %cmp98, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %if.then.97
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.420

if.end.101:                                       ; preds = %if.then.97
  %92 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start102 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %92, i32 0, i32 0
  %y103 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start102, i32 0, i32 1
  %93 = load i32, i32* %y103, align 4, !tbaa !187
  store i32 %93, i32* %y, align 4, !tbaa !5
  %94 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %94, i32 0, i32 8
  %95 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %96 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %96, i32 0, i32 9
  store %struct.active_line_s* %95, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %97 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0104 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %97, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0104, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.420

if.end.105:                                       ; preds = %while.end
  %98 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp106 = icmp ne %struct.active_line_s* %98, null
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.105
  %99 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start108 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %99, i32 0, i32 0
  %y109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start108, i32 0, i32 1
  %100 = load i32, i32* %y109, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.105
  %101 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %101, i32 0, i32 18
  %102 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %100, %cond.true ], [ %102, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %103 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %103) #1
  %104 = load i32, i32* %y, align 4, !tbaa !5
  %105 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %105, -1
  %or = or i32 %104, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %106 = load i32, i32* %y1, align 4, !tbaa !5
  %107 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp110 = icmp sgt i32 %106, %107
  br i1 %cmp110, label %if.then.112, label %if.end.114

if.then.112:                                      ; preds = %cond.end
  %108 = load i32, i32* %y_band, align 4, !tbaa !5
  %add113 = add nsw i32 %108, 1
  store i32 %add113, i32* %y1, align 4, !tbaa !5
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.112, %cond.end
  %109 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #1
  %110 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head115 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %110, i32 0, i32 7
  %next116 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head115, i32 0, i32 15
  %111 = load %struct.active_line_s*, %struct.active_line_s** %next116, align 8, !tbaa !201
  store %struct.active_line_s* %111, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.114
  %112 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp117 = icmp ne %struct.active_line_s* %112, null
  br i1 %cmp117, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %113 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end119 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 1
  %y120 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end119, i32 0, i32 1
  %114 = load i32, i32* %y120, align 4, !tbaa !195
  %115 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp121 = icmp slt i32 %114, %115
  br i1 %cmp121, label %if.then.123, label %if.end.126

if.then.123:                                      ; preds = %for.body
  %116 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end124 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %116, i32 0, i32 1
  %y125 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end124, i32 0, i32 1
  %117 = load i32, i32* %y125, align 4, !tbaa !195
  store i32 %117, i32* %y1, align 4, !tbaa !5
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.123, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.126
  %118 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next127 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %118, i32 0, i32 15
  %119 = load %struct.active_line_s*, %struct.active_line_s** %next127, align 8, !tbaa !189
  store %struct.active_line_s* %119, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %120 = load i32, i32* %y, align 4, !tbaa !5
  %121 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp128 = icmp eq i32 %120, %121
  br i1 %cmp128, label %if.then.130, label %if.end.149

if.then.130:                                      ; preds = %for.end
  %122 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %123 = load i32, i32* %y, align 4, !tbaa !5
  %call131 = call i32 @process_h_segments(%struct.line_list_s* %122, i32 %123) #5
  store i32 %call131, i32* %code, align 4, !tbaa !5
  %124 = load i32, i32* %code, align 4, !tbaa !5
  %cmp132 = icmp slt i32 %124, 0
  br i1 %cmp132, label %if.then.134, label %if.end.135

if.then.134:                                      ; preds = %if.then.130
  %125 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %125, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.420

if.end.135:                                       ; preds = %if.then.130
  %126 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %126) #1
  %127 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %128 = load i32, i32* %y1, align 4, !tbaa !5
  %call136 = call i32 @move_al_by_y(%struct.line_list_s* %127, i32 %128) #5
  store i32 %call136, i32* %code1, align 4, !tbaa !5
  %129 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp137 = icmp slt i32 %129, 0
  br i1 %cmp137, label %if.then.139, label %if.end.140

if.then.139:                                      ; preds = %if.end.135
  %130 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %130, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.141

if.end.140:                                       ; preds = %if.end.135
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.141

cleanup.141:                                      ; preds = %if.end.140, %if.then.139
  %131 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %131) #1
  %cleanup.dest.142 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.142, label %cleanup.420 [
    i32 0, label %cleanup.cont.143
  ]

cleanup.cont.143:                                 ; preds = %cleanup.141
  %132 = load i32, i32* %code, align 4, !tbaa !5
  %cmp144 = icmp sgt i32 %132, 0
  br i1 %cmp144, label %if.then.146, label %if.end.148

if.then.146:                                      ; preds = %cleanup.cont.143
  %133 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list147 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %133, i32 0, i32 5
  %134 = load %struct.active_line_s*, %struct.active_line_s** %y_list147, align 8, !tbaa !121
  store %struct.active_line_s* %134, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.420

if.end.148:                                       ; preds = %cleanup.cont.143
  br label %if.end.149

if.end.149:                                       ; preds = %if.end.148, %for.end
  %135 = load i32, i32* %y, align 4, !tbaa !5
  %136 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp150 = icmp sge i32 %135, %136
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %if.end.149
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.420

if.end.153:                                       ; preds = %if.end.149
  %137 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below154 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %138 = load i32, i32* %adjust_below154, align 4, !tbaa !86
  %sub155 = sub nsw i32 %137, %138
  %conv156 = sext i32 %sub155 to i64
  %add157 = add nsw i64 %conv156, 127
  %and158 = and i64 %add157, -256
  %139 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %140 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %add159 = add nsw i32 %139, %140
  %conv160 = sext i32 %add159 to i64
  %add161 = add nsw i64 %conv160, 127
  %and162 = and i64 %add161, -256
  %cmp163 = icmp slt i64 %and158, %and162
  %conv164 = zext i1 %cmp163 to i32
  store i32 %conv164, i32* %covering_pixel_centers, align 4, !tbaa !5
  %141 = load i32, i32* %y, align 4, !tbaa !5
  %142 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp165 = icmp ne i32 %141, %142
  br i1 %cmp165, label %if.then.167, label %if.end.181

if.then.167:                                      ; preds = %if.end.153
  %143 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %144 = load i32, i32* %y, align 4, !tbaa !5
  %145 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %145, 0
  %cond168 = select i1 %tobool, i32 1, i32 -1
  %146 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %143, i32 %144, i32* %y1, i32 %cond168, i32 %146) #5
  %147 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below169 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %148 = load i32, i32* %adjust_below169, align 4, !tbaa !86
  %sub170 = sub nsw i32 %147, %148
  %conv171 = sext i32 %sub170 to i64
  %add172 = add nsw i64 %conv171, 127
  %and173 = and i64 %add172, -256
  %149 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above174 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %150 = load i32, i32* %adjust_above174, align 4, !tbaa !87
  %add175 = add nsw i32 %149, %150
  %conv176 = sext i32 %add175 to i64
  %add177 = add nsw i64 %conv176, 127
  %and178 = and i64 %add177, -256
  %cmp179 = icmp slt i64 %and173, %and178
  %conv180 = zext i1 %cmp179 to i32
  store i32 %conv180, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.181

if.end.181:                                       ; preds = %if.then.167, %if.end.153
  %151 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool182 = icmp ne i32 %151, 0
  br i1 %tobool182, label %if.then.184, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.181
  %152 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool183 = icmp ne i32 %152, 0
  br i1 %tobool183, label %if.then.184, label %if.else.410

if.then.184:                                      ; preds = %lor.lhs.false, %if.end.181
  %153 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %153) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %154 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %154) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %do.body.185

do.body.185:                                      ; preds = %if.then.184
  br label %do.cond.186

do.cond.186:                                      ; preds = %do.body.185
  br label %do.end.187

do.end.187:                                       ; preds = %do.cond.186
  %155 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head188 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %155, i32 0, i32 7
  %next189 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head188, i32 0, i32 15
  %156 = load %struct.active_line_s*, %struct.active_line_s** %next189, align 8, !tbaa !201
  store %struct.active_line_s* %156, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.190

for.cond.190:                                     ; preds = %for.inc.403, %do.end.187
  %157 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp191 = icmp ne %struct.active_line_s* %157, null
  br i1 %cmp191, label %for.body.193, label %for.end.405

for.body.193:                                     ; preds = %for.cond.190
  %158 = bitcast i32* %code194 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %158) #1
  br label %do.body.195

do.body.195:                                      ; preds = %for.body.193
  br label %do.cond.196

do.cond.196:                                      ; preds = %do.body.195
  br label %do.end.197

do.end.197:                                       ; preds = %do.cond.196
  br label %do.body.198

do.body.198:                                      ; preds = %do.end.197
  br label %do.cond.199

do.cond.199:                                      ; preds = %do.body.198
  br label %do.end.200

do.end.200:                                       ; preds = %do.cond.199
  %159 = load i32, i32* %inside, align 4, !tbaa !5
  %160 = load i32, i32* %rule, align 4, !tbaa !5
  %and201 = and i32 %159, %160
  %cmp202 = icmp ne i32 %and201, 0
  br i1 %cmp202, label %if.end.212, label %if.then.204

if.then.204:                                      ; preds = %do.end.200
  %161 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction205 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %161, i32 0, i32 8
  %162 = load i32, i32* %direction205, align 4, !tbaa !178
  %163 = load i32, i32* %inside, align 4, !tbaa !5
  %add206 = add nsw i32 %163, %162
  store i32 %add206, i32* %inside, align 4, !tbaa !5
  %164 = load i32, i32* %inside, align 4, !tbaa !5
  %165 = load i32, i32* %rule, align 4, !tbaa !5
  %and207 = and i32 %164, %165
  %cmp208 = icmp ne i32 %and207, 0
  br i1 %cmp208, label %if.then.210, label %if.end.211

if.then.210:                                      ; preds = %if.then.204
  %166 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %166, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.211

if.end.211:                                       ; preds = %if.then.210, %if.then.204
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.400

if.end.212:                                       ; preds = %do.end.200
  %167 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction213 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %167, i32 0, i32 8
  %168 = load i32, i32* %direction213, align 4, !tbaa !178
  %169 = load i32, i32* %inside, align 4, !tbaa !5
  %add214 = add nsw i32 %169, %168
  store i32 %add214, i32* %inside, align 4, !tbaa !5
  %170 = load i32, i32* %inside, align 4, !tbaa !5
  %171 = load i32, i32* %rule, align 4, !tbaa !5
  %and215 = and i32 %170, %171
  %cmp216 = icmp ne i32 %and215, 0
  br i1 %cmp216, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %if.end.212
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.400

if.end.219:                                       ; preds = %if.end.212
  %172 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next220 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %172, i32 0, i32 15
  %173 = load %struct.active_line_s*, %struct.active_line_s** %next220, align 8, !tbaa !189
  %cmp221 = icmp ne %struct.active_line_s* %173, null
  br i1 %cmp221, label %land.lhs.true, label %if.end.237

land.lhs.true:                                    ; preds = %if.end.219
  %174 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current223 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %174, i32 0, i32 5
  %175 = load i32, i32* %x_current223, align 4, !tbaa !204
  %176 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next224 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %176, i32 0, i32 15
  %177 = load %struct.active_line_s*, %struct.active_line_s** %next224, align 8, !tbaa !189
  %x_current225 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %177, i32 0, i32 5
  %178 = load i32, i32* %x_current225, align 4, !tbaa !204
  %cmp226 = icmp eq i32 %175, %178
  br i1 %cmp226, label %land.lhs.true.228, label %if.end.237

land.lhs.true.228:                                ; preds = %land.lhs.true
  %179 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %179, i32 0, i32 6
  %180 = load i32, i32* %x_next, align 4, !tbaa !205
  %181 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next229 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %181, i32 0, i32 15
  %182 = load %struct.active_line_s*, %struct.active_line_s** %next229, align 8, !tbaa !189
  %x_next230 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %182, i32 0, i32 6
  %183 = load i32, i32* %x_next230, align 4, !tbaa !205
  %cmp231 = icmp eq i32 %180, %183
  br i1 %cmp231, label %if.then.233, label %if.end.237

if.then.233:                                      ; preds = %land.lhs.true.228
  %184 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next234 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %184, i32 0, i32 15
  %185 = load %struct.active_line_s*, %struct.active_line_s** %next234, align 8, !tbaa !189
  store %struct.active_line_s* %185, %struct.active_line_s** %alp, align 8, !tbaa !1
  %186 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction235 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %186, i32 0, i32 8
  %187 = load i32, i32* %direction235, align 4, !tbaa !178
  %188 = load i32, i32* %inside, align 4, !tbaa !5
  %add236 = add nsw i32 %188, %187
  store i32 %add236, i32* %inside, align 4, !tbaa !5
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.400

if.end.237:                                       ; preds = %land.lhs.true.228, %land.lhs.true, %if.end.219
  br label %do.body.238

do.body.238:                                      ; preds = %if.end.237
  br label %do.cond.239

do.cond.239:                                      ; preds = %do.body.238
  br label %do.end.240

do.end.240:                                       ; preds = %do.cond.239
  %189 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end241 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %189, i32 0, i32 1
  %x242 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end241, i32 0, i32 0
  %190 = load i32, i32* %x242, align 4, !tbaa !194
  %191 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start243 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %191, i32 0, i32 0
  %x244 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start243, i32 0, i32 0
  %192 = load i32, i32* %x244, align 4, !tbaa !193
  %cmp245 = icmp eq i32 %190, %192
  br i1 %cmp245, label %land.lhs.true.247, label %land.lhs.true.254

land.lhs.true.247:                                ; preds = %do.end.240
  %193 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end248 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %193, i32 0, i32 1
  %x249 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end248, i32 0, i32 0
  %194 = load i32, i32* %x249, align 4, !tbaa !194
  %195 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start250 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %195, i32 0, i32 0
  %x251 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start250, i32 0, i32 0
  %196 = load i32, i32* %x251, align 4, !tbaa !193
  %cmp252 = icmp eq i32 %194, %196
  br i1 %cmp252, label %if.else.262, label %land.lhs.true.254

land.lhs.true.254:                                ; preds = %land.lhs.true.247, %do.end.240
  %adjust_below255 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %197 = load i32, i32* %adjust_below255, align 4, !tbaa !86
  %adjust_above256 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %198 = load i32, i32* %adjust_above256, align 4, !tbaa !87
  %or257 = or i32 %197, %198
  %cmp258 = icmp ne i32 %or257, 0
  br i1 %cmp258, label %if.then.260, label %if.else.262

if.then.260:                                      ; preds = %land.lhs.true.254
  %199 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %200 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %201 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %202 = load i32, i32* %y, align 4, !tbaa !5
  %203 = load i32, i32* %y1, align 4, !tbaa !5
  %call261 = call i32 @slant_into_trapezoids__nd(%struct.line_list_s* %199, %struct.active_line_s* %200, %struct.active_line_s* %201, i32 %202, i32 %203) #5
  store i32 %call261, i32* %code194, align 4, !tbaa !5
  br label %if.end.395

if.else.262:                                      ; preds = %land.lhs.true.254, %land.lhs.true.247
  %204 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %204) #1
  %205 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %206 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %206, i32 0, i32 0
  %y263 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %207 = load i32, i32* %y263, align 4, !tbaa !38
  %cmp264 = icmp sgt i32 %205, %207
  br i1 %cmp264, label %cond.true.266, label %cond.false.267

cond.true.266:                                    ; preds = %if.else.262
  %208 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.271

cond.false.267:                                   ; preds = %if.else.262
  %pbox268 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %209 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox268, align 8, !tbaa !97
  %p269 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %209, i32 0, i32 0
  %y270 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p269, i32 0, i32 1
  %210 = load i32, i32* %y270, align 4, !tbaa !38
  br label %cond.end.271

cond.end.271:                                     ; preds = %cond.false.267, %cond.true.266
  %cond272 = phi i32 [ %208, %cond.true.266 ], [ %210, %cond.false.267 ]
  store i32 %cond272, i32* %ybot, align 4, !tbaa !5
  %211 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %211) #1
  %212 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox273 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %213 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox273, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %213, i32 0, i32 1
  %y274 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %214 = load i32, i32* %y274, align 4, !tbaa !42
  %cmp275 = icmp slt i32 %212, %214
  br i1 %cmp275, label %cond.true.277, label %cond.false.278

cond.true.277:                                    ; preds = %cond.end.271
  %215 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.282

cond.false.278:                                   ; preds = %cond.end.271
  %pbox279 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %216 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox279, align 8, !tbaa !97
  %q280 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %216, i32 0, i32 1
  %y281 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q280, i32 0, i32 1
  %217 = load i32, i32* %y281, align 4, !tbaa !42
  br label %cond.end.282

cond.end.282:                                     ; preds = %cond.false.278, %cond.true.277
  %cond283 = phi i32 [ %215, %cond.true.277 ], [ %217, %cond.false.278 ]
  store i32 %cond283, i32* %ytop, align 4, !tbaa !5
  %218 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end284 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %218, i32 0, i32 1
  %x285 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end284, i32 0, i32 0
  %219 = load i32, i32* %x285, align 4, !tbaa !194
  %220 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start286 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %220, i32 0, i32 0
  %x287 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start286, i32 0, i32 0
  %221 = load i32, i32* %x287, align 4, !tbaa !193
  %cmp288 = icmp eq i32 %219, %221
  br i1 %cmp288, label %land.lhs.true.290, label %if.else.373

land.lhs.true.290:                                ; preds = %cond.end.282
  %222 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end291 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %222, i32 0, i32 1
  %x292 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end291, i32 0, i32 0
  %223 = load i32, i32* %x292, align 4, !tbaa !194
  %224 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start293 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %224, i32 0, i32 0
  %x294 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start293, i32 0, i32 0
  %225 = load i32, i32* %x294, align 4, !tbaa !193
  %cmp295 = icmp eq i32 %223, %225
  br i1 %cmp295, label %if.then.297, label %if.else.373

if.then.297:                                      ; preds = %land.lhs.true.290
  %226 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below298 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %227 = load i32, i32* %adjust_below298, align 4, !tbaa !86
  %sub299 = sub nsw i32 %226, %227
  %pbox300 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %228 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox300, align 8, !tbaa !97
  %p301 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %228, i32 0, i32 0
  %y302 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p301, i32 0, i32 1
  %229 = load i32, i32* %y302, align 4, !tbaa !38
  %cmp303 = icmp sgt i32 %sub299, %229
  br i1 %cmp303, label %cond.true.305, label %cond.false.308

cond.true.305:                                    ; preds = %if.then.297
  %230 = load i32, i32* %y, align 4, !tbaa !5
  %adjust_below306 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %231 = load i32, i32* %adjust_below306, align 4, !tbaa !86
  %sub307 = sub nsw i32 %230, %231
  br label %cond.end.312

cond.false.308:                                   ; preds = %if.then.297
  %pbox309 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %232 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox309, align 8, !tbaa !97
  %p310 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %232, i32 0, i32 0
  %y311 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p310, i32 0, i32 1
  %233 = load i32, i32* %y311, align 4, !tbaa !38
  br label %cond.end.312

cond.end.312:                                     ; preds = %cond.false.308, %cond.true.305
  %cond313 = phi i32 [ %sub307, %cond.true.305 ], [ %233, %cond.false.308 ]
  store i32 %cond313, i32* %ybot, align 4, !tbaa !5
  %234 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above314 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %235 = load i32, i32* %adjust_above314, align 4, !tbaa !87
  %add315 = add nsw i32 %234, %235
  %pbox316 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %236 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox316, align 8, !tbaa !97
  %q317 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %236, i32 0, i32 1
  %y318 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q317, i32 0, i32 1
  %237 = load i32, i32* %y318, align 4, !tbaa !42
  %cmp319 = icmp slt i32 %add315, %237
  br i1 %cmp319, label %cond.true.321, label %cond.false.324

cond.true.321:                                    ; preds = %cond.end.312
  %238 = load i32, i32* %y1, align 4, !tbaa !5
  %adjust_above322 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %239 = load i32, i32* %adjust_above322, align 4, !tbaa !87
  %add323 = add nsw i32 %238, %239
  br label %cond.end.328

cond.false.324:                                   ; preds = %cond.end.312
  %pbox325 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %240 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox325, align 8, !tbaa !97
  %q326 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %240, i32 0, i32 1
  %y327 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q326, i32 0, i32 1
  %241 = load i32, i32* %y327, align 4, !tbaa !42
  br label %cond.end.328

cond.end.328:                                     ; preds = %cond.false.324, %cond.true.321
  %cond329 = phi i32 [ %add323, %cond.true.321 ], [ %241, %cond.false.324 ]
  store i32 %cond329, i32* %ytop, align 4, !tbaa !5
  %242 = load i32, i32* %ytop, align 4, !tbaa !5
  %243 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp330 = icmp sgt i32 %242, %243
  br i1 %cmp330, label %if.then.332, label %if.else.371

if.then.332:                                      ; preds = %cond.end.328
  %244 = bitcast i32* %yi333 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %244) #1
  %245 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv334 = sext i32 %245 to i64
  %add335 = add nsw i64 %conv334, 127
  %shr336 = ashr i64 %add335, 8
  %conv337 = trunc i64 %shr336 to i32
  store i32 %conv337, i32* %yi333, align 4, !tbaa !5
  %246 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %246) #1
  %247 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv338 = sext i32 %247 to i64
  %add339 = add nsw i64 %conv338, 127
  %shr340 = ashr i64 %add339, 8
  %conv341 = trunc i64 %shr340 to i32
  %248 = load i32, i32* %yi333, align 4, !tbaa !5
  %sub342 = sub nsw i32 %conv341, %248
  store i32 %sub342, i32* %hi, align 4, !tbaa !5
  %249 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %249) #1
  %250 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end343 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %250, i32 0, i32 1
  %x344 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end343, i32 0, i32 0
  %251 = load i32, i32* %x344, align 4, !tbaa !194
  %adjust_left345 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %252 = load i32, i32* %adjust_left345, align 4, !tbaa !83
  %sub346 = sub nsw i32 %251, %252
  %conv347 = sext i32 %sub346 to i64
  %add348 = add nsw i64 %conv347, 127
  %shr349 = ashr i64 %add348, 8
  %conv350 = trunc i64 %shr349 to i32
  store i32 %conv350, i32* %xli, align 4, !tbaa !5
  %253 = bitcast i32* %xi351 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %253) #1
  %254 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end352 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %254, i32 0, i32 1
  %x353 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end352, i32 0, i32 0
  %255 = load i32, i32* %x353, align 4, !tbaa !194
  %adjust_right354 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %256 = load i32, i32* %adjust_right354, align 4, !tbaa !85
  %add355 = add nsw i32 %255, %256
  %conv356 = sext i32 %add355 to i64
  %add357 = add nsw i64 %conv356, 127
  %shr358 = ashr i64 %add357, 8
  %conv359 = trunc i64 %shr358 to i32
  store i32 %conv359, i32* %xi351, align 4, !tbaa !5
  br label %do.body.360

do.body.360:                                      ; preds = %if.then.332
  br label %do.cond.361

do.cond.361:                                      ; preds = %do.body.360
  br label %do.end.362

do.end.362:                                       ; preds = %do.cond.361
  %pdevc363 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %257 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc363, align 8, !tbaa !90
  %type364 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %257, i32 0, i32 0
  %258 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type364, align 8, !tbaa !7
  %fill_rectangle365 = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %258, i32 0, i32 5
  %259 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle365, align 8, !tbaa !50
  %pdevc366 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %260 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc366, align 8, !tbaa !90
  %261 = load i32, i32* %xli, align 4, !tbaa !5
  %262 = load i32, i32* %yi333, align 4, !tbaa !5
  %263 = load i32, i32* %xi351, align 4, !tbaa !5
  %264 = load i32, i32* %xli, align 4, !tbaa !5
  %sub367 = sub nsw i32 %263, %264
  %265 = load i32, i32* %hi, align 4, !tbaa !5
  %dev368 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %266 = load %struct.gx_device_s*, %struct.gx_device_s** %dev368, align 8, !tbaa !96
  %lop369 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %267 = load i32, i32* %lop369, align 4, !tbaa !91
  %call370 = call i32 %259(%struct.gx_device_color_s* %260, i32 %261, i32 %262, i32 %sub367, i32 %265, %struct.gx_device_s* %266, i32 %267, %struct.gx_rop_source_s* null) #5
  store i32 %call370, i32* %code194, align 4, !tbaa !5
  %268 = bitcast i32* %xi351 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %268) #1
  %269 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %269) #1
  %270 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %270) #1
  %271 = bitcast i32* %yi333 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %271) #1
  br label %if.end.372

if.else.371:                                      ; preds = %cond.end.328
  store i32 0, i32* %code194, align 4, !tbaa !5
  br label %if.end.372

if.end.372:                                       ; preds = %if.else.371, %do.end.362
  br label %if.end.394

if.else.373:                                      ; preds = %land.lhs.true.290, %cond.end.282
  %272 = load i32, i32* %ybot, align 4, !tbaa !5
  %273 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp374 = icmp slt i32 %272, %273
  br i1 %cmp374, label %if.then.376, label %if.else.392

if.then.376:                                      ; preds = %if.else.373
  %274 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %274) #1
  %275 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %275) #1
  %start377 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %276 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start378 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %276, i32 0, i32 0
  %277 = bitcast %struct.gs_fixed_point_s* %start377 to i8*
  %278 = bitcast %struct.gs_fixed_point_s* %start378 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %277, i8* %278, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end379 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %279 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end380 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %279, i32 0, i32 1
  %280 = bitcast %struct.gs_fixed_point_s* %end379 to i8*
  %281 = bitcast %struct.gs_fixed_point_s* %end380 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %280, i8* %281, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start381 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %282 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start382 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %282, i32 0, i32 0
  %283 = bitcast %struct.gs_fixed_point_s* %start381 to i8*
  %284 = bitcast %struct.gs_fixed_point_s* %start382 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %283, i8* %284, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end383 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %285 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end384 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %285, i32 0, i32 1
  %286 = bitcast %struct.gs_fixed_point_s* %end383 to i8*
  %287 = bitcast %struct.gs_fixed_point_s* %end384 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %286, i8* %287, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.385

do.body.385:                                      ; preds = %if.then.376
  br label %do.cond.386

do.cond.386:                                      ; preds = %do.body.385
  br label %do.end.387

do.end.387:                                       ; preds = %do.cond.386
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 17
  %288 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %dev388 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %289 = load %struct.gx_device_s*, %struct.gx_device_s** %dev388, align 8, !tbaa !96
  %290 = load i32, i32* %ybot, align 4, !tbaa !5
  %291 = load i32, i32* %ytop, align 4, !tbaa !5
  %pdevc389 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %292 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc389, align 8, !tbaa !90
  %lop390 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %293 = load i32, i32* %lop390, align 4, !tbaa !91
  %call391 = call i32 %288(%struct.gx_device_s* %289, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %290, i32 %291, i32 0, %struct.gx_device_color_s* %292, i32 %293) #5
  store i32 %call391, i32* %code194, align 4, !tbaa !5
  %294 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %294) #1
  %295 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %295) #1
  br label %if.end.393

if.else.392:                                      ; preds = %if.else.373
  store i32 0, i32* %code194, align 4, !tbaa !5
  br label %if.end.393

if.end.393:                                       ; preds = %if.else.392, %do.end.387
  br label %if.end.394

if.end.394:                                       ; preds = %if.end.393, %if.end.372
  %296 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %296) #1
  %297 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %297) #1
  br label %if.end.395

if.end.395:                                       ; preds = %if.end.394, %if.then.260
  %298 = load i32, i32* %code194, align 4, !tbaa !5
  %cmp396 = icmp slt i32 %298, 0
  br i1 %cmp396, label %if.then.398, label %if.end.399

if.then.398:                                      ; preds = %if.end.395
  %299 = load i32, i32* %code194, align 4, !tbaa !5
  store i32 %299, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.400

if.end.399:                                       ; preds = %if.end.395
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.400

cleanup.400:                                      ; preds = %if.end.399, %if.then.398, %if.then.233, %if.then.218, %if.end.211
  %300 = bitcast i32* %code194 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %300) #1
  %cleanup.dest.401 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.401, label %cleanup.406 [
    i32 0, label %cleanup.cont.402
    i32 17, label %for.inc.403
  ]

cleanup.cont.402:                                 ; preds = %cleanup.400
  br label %for.inc.403

for.inc.403:                                      ; preds = %cleanup.cont.402, %cleanup.400
  %301 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next404 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %301, i32 0, i32 15
  %302 = load %struct.active_line_s*, %struct.active_line_s** %next404, align 8, !tbaa !189
  store %struct.active_line_s* %302, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.190

for.end.405:                                      ; preds = %for.cond.190
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.406

cleanup.406:                                      ; preds = %for.end.405, %cleanup.400
  %303 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %303) #1
  %304 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %304) #1
  %cleanup.dest.408 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.408, label %cleanup.420 [
    i32 0, label %cleanup.cont.409
  ]

cleanup.cont.409:                                 ; preds = %cleanup.406
  br label %if.end.411

if.else.410:                                      ; preds = %lor.lhs.false
  br label %if.end.411

if.end.411:                                       ; preds = %if.else.410, %cleanup.cont.409
  %305 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %306 = load i32, i32* %y1, align 4, !tbaa !5
  %call412 = call i32 @move_al_by_y(%struct.line_list_s* %305, i32 %306) #5
  store i32 %call412, i32* %code, align 4, !tbaa !5
  %307 = load i32, i32* %code, align 4, !tbaa !5
  %cmp413 = icmp slt i32 %307, 0
  br i1 %cmp413, label %if.then.415, label %if.end.416

if.then.415:                                      ; preds = %if.end.411
  %308 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %308, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.420

if.end.416:                                       ; preds = %if.end.411
  %309 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0417 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %309, i32 0, i32 8
  %310 = load %struct.active_line_s*, %struct.active_line_s** %h_list0417, align 8, !tbaa !124
  %311 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1418 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %311, i32 0, i32 9
  store %struct.active_line_s* %310, %struct.active_line_s** %h_list1418, align 8, !tbaa !123
  %312 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0419 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %312, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0419, align 8, !tbaa !124
  %313 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %313, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.420

cleanup.420:                                      ; preds = %if.end.416, %if.then.415, %cleanup.406, %if.then.152, %if.then.146, %cleanup.141, %if.then.134, %if.end.101, %if.then.100, %cleanup.90
  %314 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %314) #1
  %315 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %315) #1
  %316 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %316) #1
  %317 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %317) #1
  %cleanup.dest.424 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.424, label %cleanup.427 [
    i32 0, label %cleanup.cont.425
    i32 3, label %while.end.426
    i32 2, label %while.cond
  ]

cleanup.cont.425:                                 ; preds = %cleanup.420
  br label %while.cond

while.end.426:                                    ; preds = %cleanup.420
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.427

cleanup.427:                                      ; preds = %while.end.426, %cleanup.420, %if.then
  %318 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %318) #1
  %319 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %319) #1
  %320 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %320) #1
  %321 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %321) #1
  %322 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %322) #1
  %323 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %323) #1
  %324 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %324) #1
  %325 = load i32, i32* %retval
  ret i32 %325
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__nj_fd_sw(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %yi = alloca i32, align 4
  %xi = alloca i32, align 4
  %wi = alloca i32, align 4
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code190 = alloca i32, align 4
  %k = alloca i32, align 4
  %v = alloca i32, align 4
  %k246 = alloca i32, align 4
  %v248 = alloca i32, align 4
  %k309 = alloca i32, align 4
  %v311 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi394 = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi411 = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.483

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.481, %cleanup.476, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %cleanup.cont.89, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else.85

if.then.35:                                       ; preds = %if.end.32
  %48 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = load i32, i32* %y, align 4, !tbaa !5
  %sub36 = sub nsw i32 %49, 0
  %conv37 = sext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, 127
  %shr = ashr i64 %add38, 8
  %conv39 = trunc i64 %shr to i32
  store i32 %conv39, i32* %yi, align 4, !tbaa !5
  %50 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #1
  %51 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #1
  %52 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 0
  %53 = load i32, i32* %x, align 4, !tbaa !193
  %54 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %55 = load i32, i32* %x41, align 4, !tbaa !194
  %cmp42 = icmp sle i32 %53, %55
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.35
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start45, i32 0, i32 0
  %57 = load i32, i32* %x46, align 4, !tbaa !193
  %sub47 = sub nsw i32 %57, 0
  %conv48 = sext i32 %sub47 to i64
  %add49 = add nsw i64 %conv48, 127
  %shr50 = ashr i64 %add49, 8
  %conv51 = trunc i64 %shr50 to i32
  store i32 %conv51, i32* %xi, align 4, !tbaa !5
  %58 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end52, i32 0, i32 0
  %59 = load i32, i32* %x53, align 4, !tbaa !194
  %add54 = add nsw i32 %59, 0
  %conv55 = sext i32 %add54 to i64
  %add56 = add nsw i64 %conv55, 127
  %shr57 = ashr i64 %add56, 8
  %conv58 = trunc i64 %shr57 to i32
  %60 = load i32, i32* %xi, align 4, !tbaa !5
  %sub59 = sub nsw i32 %conv58, %60
  store i32 %sub59, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.else:                                          ; preds = %if.then.35
  %61 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %61, i32 0, i32 1
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end60, i32 0, i32 0
  %62 = load i32, i32* %x61, align 4, !tbaa !194
  %sub62 = sub nsw i32 %62, 0
  %conv63 = sext i32 %sub62 to i64
  %add64 = add nsw i64 %conv63, 127
  %shr65 = ashr i64 %add64, 8
  %conv66 = trunc i64 %shr65 to i32
  store i32 %conv66, i32* %xi, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 0
  %64 = load i32, i32* %x68, align 4, !tbaa !193
  %add69 = add nsw i32 %64, 0
  %conv70 = sext i32 %add69 to i64
  %add71 = add nsw i64 %conv70, 127
  %shr72 = ashr i64 %add71, 8
  %conv73 = trunc i64 %shr72 to i32
  %65 = load i32, i32* %xi, align 4, !tbaa !5
  %sub74 = sub nsw i32 %conv73, %65
  store i32 %sub74, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.end.75:                                        ; preds = %if.else, %if.then.44
  br label %do.body.76

do.body.76:                                       ; preds = %if.end.75
  br label %do.cond.77

do.cond.77:                                       ; preds = %do.body.76
  br label %do.end.78

do.end.78:                                        ; preds = %do.cond.77
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %66 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %67 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %68 = load i32, i32* %xi, align 4, !tbaa !5
  %69 = load i32, i32* %yi, align 4, !tbaa !5
  %70 = load i32, i32* %wi, align 4, !tbaa !5
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %71 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %71, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %72 = load i64, i64* %pure, align 8, !tbaa !203
  %call = call i32 %66(%struct.gx_device_s* %67, i32 %68, i32 %69, i32 %70, i32 1, i64 %72) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %73 = load i32, i32* %code, align 4, !tbaa !5
  %cmp79 = icmp slt i32 %73, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %do.end.78
  %74 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %74, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %do.end.78
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.81
  %75 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %75) #1
  %76 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %76) #1
  %77 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.87 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.86

if.else.85:                                       ; preds = %if.end.32
  %78 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %79 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %78, %struct.line_list_s* %79) #5
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.85, %cleanup.cont
  %80 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %80, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.87

cleanup.87:                                       ; preds = %if.end.86, %cleanup
  %81 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %cleanup.dest.88 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.88, label %cleanup.476 [
    i32 0, label %cleanup.cont.89
  ]

cleanup.cont.89:                                  ; preds = %cleanup.87
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %82 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head90 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %82, i32 0, i32 7
  %next91 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head90, i32 0, i32 15
  %83 = load %struct.active_line_s*, %struct.active_line_s** %next91, align 8, !tbaa !201
  %cmp92 = icmp eq %struct.active_line_s* %83, null
  br i1 %cmp92, label %if.then.94, label %if.end.102

if.then.94:                                       ; preds = %while.end
  %84 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp95 = icmp eq %struct.active_line_s* %84, null
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.then.94
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.476

if.end.98:                                        ; preds = %if.then.94
  %85 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start99 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %85, i32 0, i32 0
  %y100 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start99, i32 0, i32 1
  %86 = load i32, i32* %y100, align 4, !tbaa !187
  store i32 %86, i32* %y, align 4, !tbaa !5
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %87, i32 0, i32 8
  %88 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %89 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %89, i32 0, i32 9
  store %struct.active_line_s* %88, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %90 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0101 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %90, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0101, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.476

if.end.102:                                       ; preds = %while.end
  %91 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp103 = icmp ne %struct.active_line_s* %91, null
  br i1 %cmp103, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.102
  %92 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start105 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %92, i32 0, i32 0
  %y106 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start105, i32 0, i32 1
  %93 = load i32, i32* %y106, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.102
  %94 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %94, i32 0, i32 18
  %95 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %93, %cond.true ], [ %95, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %96 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %96) #1
  %97 = load i32, i32* %y, align 4, !tbaa !5
  %98 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %98, -1
  %or = or i32 %97, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %99 = load i32, i32* %y1, align 4, !tbaa !5
  %100 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp107 = icmp sgt i32 %99, %100
  br i1 %cmp107, label %if.then.109, label %if.end.111

if.then.109:                                      ; preds = %cond.end
  %101 = load i32, i32* %y_band, align 4, !tbaa !5
  %add110 = add nsw i32 %101, 1
  store i32 %add110, i32* %y1, align 4, !tbaa !5
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.109, %cond.end
  %102 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #1
  %103 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head112 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %103, i32 0, i32 7
  %next113 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head112, i32 0, i32 15
  %104 = load %struct.active_line_s*, %struct.active_line_s** %next113, align 8, !tbaa !201
  store %struct.active_line_s* %104, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.111
  %105 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp114 = icmp ne %struct.active_line_s* %105, null
  br i1 %cmp114, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %106 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end116 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %106, i32 0, i32 1
  %y117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end116, i32 0, i32 1
  %107 = load i32, i32* %y117, align 4, !tbaa !195
  %108 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp118 = icmp slt i32 %107, %108
  br i1 %cmp118, label %if.then.120, label %if.end.123

if.then.120:                                      ; preds = %for.body
  %109 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end121 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %109, i32 0, i32 1
  %y122 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end121, i32 0, i32 1
  %110 = load i32, i32* %y122, align 4, !tbaa !195
  store i32 %110, i32* %y1, align 4, !tbaa !5
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.120, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.123
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next124 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 15
  %112 = load %struct.active_line_s*, %struct.active_line_s** %next124, align 8, !tbaa !189
  store %struct.active_line_s* %112, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %113 = load i32, i32* %y, align 4, !tbaa !5
  %114 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp125 = icmp eq i32 %113, %114
  br i1 %cmp125, label %if.then.127, label %if.end.146

if.then.127:                                      ; preds = %for.end
  %115 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %116 = load i32, i32* %y, align 4, !tbaa !5
  %call128 = call i32 @process_h_segments(%struct.line_list_s* %115, i32 %116) #5
  store i32 %call128, i32* %code, align 4, !tbaa !5
  %117 = load i32, i32* %code, align 4, !tbaa !5
  %cmp129 = icmp slt i32 %117, 0
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.then.127
  %118 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %118, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.476

if.end.132:                                       ; preds = %if.then.127
  %119 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119) #1
  %120 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %121 = load i32, i32* %y1, align 4, !tbaa !5
  %call133 = call i32 @move_al_by_y(%struct.line_list_s* %120, i32 %121) #5
  store i32 %call133, i32* %code1, align 4, !tbaa !5
  %122 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp134 = icmp slt i32 %122, 0
  br i1 %cmp134, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %if.end.132
  %123 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %123, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.137:                                       ; preds = %if.end.132
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.138

cleanup.138:                                      ; preds = %if.end.137, %if.then.136
  %124 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %124) #1
  %cleanup.dest.139 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.139, label %cleanup.476 [
    i32 0, label %cleanup.cont.140
  ]

cleanup.cont.140:                                 ; preds = %cleanup.138
  %125 = load i32, i32* %code, align 4, !tbaa !5
  %cmp141 = icmp sgt i32 %125, 0
  br i1 %cmp141, label %if.then.143, label %if.end.145

if.then.143:                                      ; preds = %cleanup.cont.140
  %126 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list144 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %126, i32 0, i32 5
  %127 = load %struct.active_line_s*, %struct.active_line_s** %y_list144, align 8, !tbaa !121
  store %struct.active_line_s* %127, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.476

if.end.145:                                       ; preds = %cleanup.cont.140
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %for.end
  %128 = load i32, i32* %y, align 4, !tbaa !5
  %129 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp147 = icmp sge i32 %128, %129
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %if.end.146
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.476

if.end.150:                                       ; preds = %if.end.146
  %130 = load i32, i32* %y, align 4, !tbaa !5
  %sub151 = sub nsw i32 %130, 0
  %conv152 = sext i32 %sub151 to i64
  %add153 = add nsw i64 %conv152, 127
  %and154 = and i64 %add153, -256
  %131 = load i32, i32* %y1, align 4, !tbaa !5
  %add155 = add nsw i32 %131, 0
  %conv156 = sext i32 %add155 to i64
  %add157 = add nsw i64 %conv156, 127
  %and158 = and i64 %add157, -256
  %cmp159 = icmp slt i64 %and154, %and158
  %conv160 = zext i1 %cmp159 to i32
  store i32 %conv160, i32* %covering_pixel_centers, align 4, !tbaa !5
  %132 = load i32, i32* %y, align 4, !tbaa !5
  %133 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp161 = icmp ne i32 %132, %133
  br i1 %cmp161, label %if.then.163, label %if.end.175

if.then.163:                                      ; preds = %if.end.150
  %134 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %135 = load i32, i32* %y, align 4, !tbaa !5
  %136 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %136, 0
  %cond164 = select i1 %tobool, i32 1, i32 -1
  %137 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %134, i32 %135, i32* %y1, i32 %cond164, i32 %137) #5
  %138 = load i32, i32* %y, align 4, !tbaa !5
  %sub165 = sub nsw i32 %138, 0
  %conv166 = sext i32 %sub165 to i64
  %add167 = add nsw i64 %conv166, 127
  %and168 = and i64 %add167, -256
  %139 = load i32, i32* %y1, align 4, !tbaa !5
  %add169 = add nsw i32 %139, 0
  %conv170 = sext i32 %add169 to i64
  %add171 = add nsw i64 %conv170, 127
  %and172 = and i64 %add171, -256
  %cmp173 = icmp slt i64 %and168, %and172
  %conv174 = zext i1 %cmp173 to i32
  store i32 %conv174, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.175

if.end.175:                                       ; preds = %if.then.163, %if.end.150
  %140 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool176 = icmp ne i32 %140, 0
  br i1 %tobool176, label %if.then.178, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.175
  %141 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool177 = icmp ne i32 %141, 0
  br i1 %tobool177, label %if.then.178, label %if.else.466

if.then.178:                                      ; preds = %lor.lhs.false, %if.end.175
  %142 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %142) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %143 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %143) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  %144 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %144, i32 0, i32 13
  %145 = load i32*, i32** %windings, align 8, !tbaa !79
  %146 = bitcast i32* %145 to i8*
  %147 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %147, i32 0, i32 20
  %148 = load i32, i32* %contour_count, align 4, !tbaa !74
  %conv179 = sext i32 %148 to i64
  %mul = mul i64 4, %conv179
  %call180 = call i8* @memset(i8* %146, i32 0, i64 %mul) #6
  br label %do.body.181

do.body.181:                                      ; preds = %if.then.178
  br label %do.cond.182

do.cond.182:                                      ; preds = %do.body.181
  br label %do.end.183

do.end.183:                                       ; preds = %do.cond.182
  %149 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head184 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %149, i32 0, i32 7
  %next185 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head184, i32 0, i32 15
  %150 = load %struct.active_line_s*, %struct.active_line_s** %next185, align 8, !tbaa !201
  store %struct.active_line_s* %150, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.186

for.cond.186:                                     ; preds = %for.inc.459, %do.end.183
  %151 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp187 = icmp ne %struct.active_line_s* %151, null
  br i1 %cmp187, label %for.body.189, label %for.end.461

for.body.189:                                     ; preds = %for.cond.186
  %152 = bitcast i32* %code190 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %152) #1
  br label %do.body.191

do.body.191:                                      ; preds = %for.body.189
  br label %do.cond.192

do.cond.192:                                      ; preds = %do.body.191
  br label %do.end.193

do.end.193:                                       ; preds = %do.cond.192
  br label %do.body.194

do.body.194:                                      ; preds = %do.end.193
  br label %do.cond.195

do.cond.195:                                      ; preds = %do.body.194
  br label %do.end.196

do.end.196:                                       ; preds = %do.cond.195
  %153 = load i32, i32* %inside, align 4, !tbaa !5
  %154 = load i32, i32* %rule, align 4, !tbaa !5
  %and197 = and i32 %153, %154
  %cmp198 = icmp ne i32 %and197, 0
  br i1 %cmp198, label %if.end.245, label %if.then.200

if.then.200:                                      ; preds = %do.end.196
  %155 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %155) #1
  %156 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count201 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %156, i32 0, i32 13
  %157 = load i32, i32* %contour_count201, align 4, !tbaa !186
  store i32 %157, i32* %k, align 4, !tbaa !5
  %158 = bitcast i32* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %158) #1
  %159 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom = sext i32 %159 to i64
  %160 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings202 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %160, i32 0, i32 13
  %161 = load i32*, i32** %windings202, align 8, !tbaa !79
  %arrayidx = getelementptr inbounds i32, i32* %161, i64 %idxprom
  %162 = load i32, i32* %arrayidx, align 4, !tbaa !5
  store i32 %162, i32* %v, align 4, !tbaa !5
  %163 = load i32, i32* %v, align 4, !tbaa !5
  %cmp203 = icmp slt i32 %163, 0
  br i1 %cmp203, label %cond.true.205, label %cond.false.208

cond.true.205:                                    ; preds = %if.then.200
  %164 = load i32, i32* %v, align 4, !tbaa !5
  %and206 = and i32 %164, 1
  %sub207 = sub nsw i32 0, %and206
  br label %cond.end.216

cond.false.208:                                   ; preds = %if.then.200
  %165 = load i32, i32* %v, align 4, !tbaa !5
  %cmp209 = icmp sgt i32 %165, 0
  br i1 %cmp209, label %cond.true.211, label %cond.false.213

cond.true.211:                                    ; preds = %cond.false.208
  %166 = load i32, i32* %v, align 4, !tbaa !5
  %and212 = and i32 %166, 1
  br label %cond.end.214

cond.false.213:                                   ; preds = %cond.false.208
  br label %cond.end.214

cond.end.214:                                     ; preds = %cond.false.213, %cond.true.211
  %cond215 = phi i32 [ %and212, %cond.true.211 ], [ 0, %cond.false.213 ]
  br label %cond.end.216

cond.end.216:                                     ; preds = %cond.end.214, %cond.true.205
  %cond217 = phi i32 [ %sub207, %cond.true.205 ], [ %cond215, %cond.end.214 ]
  %167 = load i32, i32* %inside, align 4, !tbaa !5
  %sub218 = sub nsw i32 %167, %cond217
  store i32 %sub218, i32* %inside, align 4, !tbaa !5
  %168 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction219 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %168, i32 0, i32 8
  %169 = load i32, i32* %direction219, align 4, !tbaa !178
  %170 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom220 = sext i32 %170 to i64
  %171 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings221 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %171, i32 0, i32 13
  %172 = load i32*, i32** %windings221, align 8, !tbaa !79
  %arrayidx222 = getelementptr inbounds i32, i32* %172, i64 %idxprom220
  %173 = load i32, i32* %arrayidx222, align 4, !tbaa !5
  %add223 = add nsw i32 %173, %169
  store i32 %add223, i32* %arrayidx222, align 4, !tbaa !5
  store i32 %add223, i32* %v, align 4, !tbaa !5
  %174 = load i32, i32* %v, align 4, !tbaa !5
  %cmp224 = icmp slt i32 %174, 0
  br i1 %cmp224, label %cond.true.226, label %cond.false.229

cond.true.226:                                    ; preds = %cond.end.216
  %175 = load i32, i32* %v, align 4, !tbaa !5
  %and227 = and i32 %175, 1
  %sub228 = sub nsw i32 0, %and227
  br label %cond.end.237

cond.false.229:                                   ; preds = %cond.end.216
  %176 = load i32, i32* %v, align 4, !tbaa !5
  %cmp230 = icmp sgt i32 %176, 0
  br i1 %cmp230, label %cond.true.232, label %cond.false.234

cond.true.232:                                    ; preds = %cond.false.229
  %177 = load i32, i32* %v, align 4, !tbaa !5
  %and233 = and i32 %177, 1
  br label %cond.end.235

cond.false.234:                                   ; preds = %cond.false.229
  br label %cond.end.235

cond.end.235:                                     ; preds = %cond.false.234, %cond.true.232
  %cond236 = phi i32 [ %and233, %cond.true.232 ], [ 0, %cond.false.234 ]
  br label %cond.end.237

cond.end.237:                                     ; preds = %cond.end.235, %cond.true.226
  %cond238 = phi i32 [ %sub228, %cond.true.226 ], [ %cond236, %cond.end.235 ]
  %178 = load i32, i32* %inside, align 4, !tbaa !5
  %add239 = add nsw i32 %178, %cond238
  store i32 %add239, i32* %inside, align 4, !tbaa !5
  %179 = bitcast i32* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %179) #1
  %180 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %180) #1
  %181 = load i32, i32* %inside, align 4, !tbaa !5
  %182 = load i32, i32* %rule, align 4, !tbaa !5
  %and240 = and i32 %181, %182
  %cmp241 = icmp ne i32 %and240, 0
  br i1 %cmp241, label %if.then.243, label %if.end.244

if.then.243:                                      ; preds = %cond.end.237
  %183 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %183, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.244

if.end.244:                                       ; preds = %if.then.243, %cond.end.237
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.456

if.end.245:                                       ; preds = %do.end.196
  %184 = bitcast i32* %k246 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %184) #1
  %185 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count247 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %185, i32 0, i32 13
  %186 = load i32, i32* %contour_count247, align 4, !tbaa !186
  store i32 %186, i32* %k246, align 4, !tbaa !5
  %187 = bitcast i32* %v248 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %187) #1
  %188 = load i32, i32* %k246, align 4, !tbaa !5
  %idxprom249 = sext i32 %188 to i64
  %189 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings250 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %189, i32 0, i32 13
  %190 = load i32*, i32** %windings250, align 8, !tbaa !79
  %arrayidx251 = getelementptr inbounds i32, i32* %190, i64 %idxprom249
  %191 = load i32, i32* %arrayidx251, align 4, !tbaa !5
  store i32 %191, i32* %v248, align 4, !tbaa !5
  %192 = load i32, i32* %v248, align 4, !tbaa !5
  %cmp252 = icmp slt i32 %192, 0
  br i1 %cmp252, label %cond.true.254, label %cond.false.257

cond.true.254:                                    ; preds = %if.end.245
  %193 = load i32, i32* %v248, align 4, !tbaa !5
  %and255 = and i32 %193, 1
  %sub256 = sub nsw i32 0, %and255
  br label %cond.end.265

cond.false.257:                                   ; preds = %if.end.245
  %194 = load i32, i32* %v248, align 4, !tbaa !5
  %cmp258 = icmp sgt i32 %194, 0
  br i1 %cmp258, label %cond.true.260, label %cond.false.262

cond.true.260:                                    ; preds = %cond.false.257
  %195 = load i32, i32* %v248, align 4, !tbaa !5
  %and261 = and i32 %195, 1
  br label %cond.end.263

cond.false.262:                                   ; preds = %cond.false.257
  br label %cond.end.263

cond.end.263:                                     ; preds = %cond.false.262, %cond.true.260
  %cond264 = phi i32 [ %and261, %cond.true.260 ], [ 0, %cond.false.262 ]
  br label %cond.end.265

cond.end.265:                                     ; preds = %cond.end.263, %cond.true.254
  %cond266 = phi i32 [ %sub256, %cond.true.254 ], [ %cond264, %cond.end.263 ]
  %196 = load i32, i32* %inside, align 4, !tbaa !5
  %sub267 = sub nsw i32 %196, %cond266
  store i32 %sub267, i32* %inside, align 4, !tbaa !5
  %197 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction268 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %197, i32 0, i32 8
  %198 = load i32, i32* %direction268, align 4, !tbaa !178
  %199 = load i32, i32* %k246, align 4, !tbaa !5
  %idxprom269 = sext i32 %199 to i64
  %200 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings270 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %200, i32 0, i32 13
  %201 = load i32*, i32** %windings270, align 8, !tbaa !79
  %arrayidx271 = getelementptr inbounds i32, i32* %201, i64 %idxprom269
  %202 = load i32, i32* %arrayidx271, align 4, !tbaa !5
  %add272 = add nsw i32 %202, %198
  store i32 %add272, i32* %arrayidx271, align 4, !tbaa !5
  store i32 %add272, i32* %v248, align 4, !tbaa !5
  %203 = load i32, i32* %v248, align 4, !tbaa !5
  %cmp273 = icmp slt i32 %203, 0
  br i1 %cmp273, label %cond.true.275, label %cond.false.278

cond.true.275:                                    ; preds = %cond.end.265
  %204 = load i32, i32* %v248, align 4, !tbaa !5
  %and276 = and i32 %204, 1
  %sub277 = sub nsw i32 0, %and276
  br label %cond.end.286

cond.false.278:                                   ; preds = %cond.end.265
  %205 = load i32, i32* %v248, align 4, !tbaa !5
  %cmp279 = icmp sgt i32 %205, 0
  br i1 %cmp279, label %cond.true.281, label %cond.false.283

cond.true.281:                                    ; preds = %cond.false.278
  %206 = load i32, i32* %v248, align 4, !tbaa !5
  %and282 = and i32 %206, 1
  br label %cond.end.284

cond.false.283:                                   ; preds = %cond.false.278
  br label %cond.end.284

cond.end.284:                                     ; preds = %cond.false.283, %cond.true.281
  %cond285 = phi i32 [ %and282, %cond.true.281 ], [ 0, %cond.false.283 ]
  br label %cond.end.286

cond.end.286:                                     ; preds = %cond.end.284, %cond.true.275
  %cond287 = phi i32 [ %sub277, %cond.true.275 ], [ %cond285, %cond.end.284 ]
  %207 = load i32, i32* %inside, align 4, !tbaa !5
  %add288 = add nsw i32 %207, %cond287
  store i32 %add288, i32* %inside, align 4, !tbaa !5
  %208 = bitcast i32* %v248 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %208) #1
  %209 = bitcast i32* %k246 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %209) #1
  %210 = load i32, i32* %inside, align 4, !tbaa !5
  %211 = load i32, i32* %rule, align 4, !tbaa !5
  %and289 = and i32 %210, %211
  %cmp290 = icmp ne i32 %and289, 0
  br i1 %cmp290, label %if.then.292, label %if.end.293

if.then.292:                                      ; preds = %cond.end.286
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.456

if.end.293:                                       ; preds = %cond.end.286
  %212 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next294 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %212, i32 0, i32 15
  %213 = load %struct.active_line_s*, %struct.active_line_s** %next294, align 8, !tbaa !189
  %cmp295 = icmp ne %struct.active_line_s* %213, null
  br i1 %cmp295, label %land.lhs.true, label %if.end.352

land.lhs.true:                                    ; preds = %if.end.293
  %214 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current297 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %214, i32 0, i32 5
  %215 = load i32, i32* %x_current297, align 4, !tbaa !204
  %216 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next298 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %216, i32 0, i32 15
  %217 = load %struct.active_line_s*, %struct.active_line_s** %next298, align 8, !tbaa !189
  %x_current299 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %217, i32 0, i32 5
  %218 = load i32, i32* %x_current299, align 4, !tbaa !204
  %cmp300 = icmp eq i32 %215, %218
  br i1 %cmp300, label %land.lhs.true.302, label %if.end.352

land.lhs.true.302:                                ; preds = %land.lhs.true
  %219 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %219, i32 0, i32 6
  %220 = load i32, i32* %x_next, align 4, !tbaa !205
  %221 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next303 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %221, i32 0, i32 15
  %222 = load %struct.active_line_s*, %struct.active_line_s** %next303, align 8, !tbaa !189
  %x_next304 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %222, i32 0, i32 6
  %223 = load i32, i32* %x_next304, align 4, !tbaa !205
  %cmp305 = icmp eq i32 %220, %223
  br i1 %cmp305, label %if.then.307, label %if.end.352

if.then.307:                                      ; preds = %land.lhs.true.302
  %224 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next308 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %224, i32 0, i32 15
  %225 = load %struct.active_line_s*, %struct.active_line_s** %next308, align 8, !tbaa !189
  store %struct.active_line_s* %225, %struct.active_line_s** %alp, align 8, !tbaa !1
  %226 = bitcast i32* %k309 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %226) #1
  %227 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count310 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %227, i32 0, i32 13
  %228 = load i32, i32* %contour_count310, align 4, !tbaa !186
  store i32 %228, i32* %k309, align 4, !tbaa !5
  %229 = bitcast i32* %v311 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %229) #1
  %230 = load i32, i32* %k309, align 4, !tbaa !5
  %idxprom312 = sext i32 %230 to i64
  %231 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings313 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %231, i32 0, i32 13
  %232 = load i32*, i32** %windings313, align 8, !tbaa !79
  %arrayidx314 = getelementptr inbounds i32, i32* %232, i64 %idxprom312
  %233 = load i32, i32* %arrayidx314, align 4, !tbaa !5
  store i32 %233, i32* %v311, align 4, !tbaa !5
  %234 = load i32, i32* %v311, align 4, !tbaa !5
  %cmp315 = icmp slt i32 %234, 0
  br i1 %cmp315, label %cond.true.317, label %cond.false.320

cond.true.317:                                    ; preds = %if.then.307
  %235 = load i32, i32* %v311, align 4, !tbaa !5
  %and318 = and i32 %235, 1
  %sub319 = sub nsw i32 0, %and318
  br label %cond.end.328

cond.false.320:                                   ; preds = %if.then.307
  %236 = load i32, i32* %v311, align 4, !tbaa !5
  %cmp321 = icmp sgt i32 %236, 0
  br i1 %cmp321, label %cond.true.323, label %cond.false.325

cond.true.323:                                    ; preds = %cond.false.320
  %237 = load i32, i32* %v311, align 4, !tbaa !5
  %and324 = and i32 %237, 1
  br label %cond.end.326

cond.false.325:                                   ; preds = %cond.false.320
  br label %cond.end.326

cond.end.326:                                     ; preds = %cond.false.325, %cond.true.323
  %cond327 = phi i32 [ %and324, %cond.true.323 ], [ 0, %cond.false.325 ]
  br label %cond.end.328

cond.end.328:                                     ; preds = %cond.end.326, %cond.true.317
  %cond329 = phi i32 [ %sub319, %cond.true.317 ], [ %cond327, %cond.end.326 ]
  %238 = load i32, i32* %inside, align 4, !tbaa !5
  %sub330 = sub nsw i32 %238, %cond329
  store i32 %sub330, i32* %inside, align 4, !tbaa !5
  %239 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction331 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %239, i32 0, i32 8
  %240 = load i32, i32* %direction331, align 4, !tbaa !178
  %241 = load i32, i32* %k309, align 4, !tbaa !5
  %idxprom332 = sext i32 %241 to i64
  %242 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings333 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %242, i32 0, i32 13
  %243 = load i32*, i32** %windings333, align 8, !tbaa !79
  %arrayidx334 = getelementptr inbounds i32, i32* %243, i64 %idxprom332
  %244 = load i32, i32* %arrayidx334, align 4, !tbaa !5
  %add335 = add nsw i32 %244, %240
  store i32 %add335, i32* %arrayidx334, align 4, !tbaa !5
  store i32 %add335, i32* %v311, align 4, !tbaa !5
  %245 = load i32, i32* %v311, align 4, !tbaa !5
  %cmp336 = icmp slt i32 %245, 0
  br i1 %cmp336, label %cond.true.338, label %cond.false.341

cond.true.338:                                    ; preds = %cond.end.328
  %246 = load i32, i32* %v311, align 4, !tbaa !5
  %and339 = and i32 %246, 1
  %sub340 = sub nsw i32 0, %and339
  br label %cond.end.349

cond.false.341:                                   ; preds = %cond.end.328
  %247 = load i32, i32* %v311, align 4, !tbaa !5
  %cmp342 = icmp sgt i32 %247, 0
  br i1 %cmp342, label %cond.true.344, label %cond.false.346

cond.true.344:                                    ; preds = %cond.false.341
  %248 = load i32, i32* %v311, align 4, !tbaa !5
  %and345 = and i32 %248, 1
  br label %cond.end.347

cond.false.346:                                   ; preds = %cond.false.341
  br label %cond.end.347

cond.end.347:                                     ; preds = %cond.false.346, %cond.true.344
  %cond348 = phi i32 [ %and345, %cond.true.344 ], [ 0, %cond.false.346 ]
  br label %cond.end.349

cond.end.349:                                     ; preds = %cond.end.347, %cond.true.338
  %cond350 = phi i32 [ %sub340, %cond.true.338 ], [ %cond348, %cond.end.347 ]
  %249 = load i32, i32* %inside, align 4, !tbaa !5
  %add351 = add nsw i32 %249, %cond350
  store i32 %add351, i32* %inside, align 4, !tbaa !5
  %250 = bitcast i32* %v311 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %250) #1
  %251 = bitcast i32* %k309 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %251) #1
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.456

if.end.352:                                       ; preds = %land.lhs.true.302, %land.lhs.true, %if.end.293
  br label %do.body.353

do.body.353:                                      ; preds = %if.end.352
  br label %do.cond.354

do.cond.354:                                      ; preds = %do.body.353
  br label %do.end.355

do.end.355:                                       ; preds = %do.cond.354
  %252 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %252) #1
  %253 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %254 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %254, i32 0, i32 0
  %y356 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %255 = load i32, i32* %y356, align 4, !tbaa !38
  %cmp357 = icmp sgt i32 %253, %255
  br i1 %cmp357, label %cond.true.359, label %cond.false.360

cond.true.359:                                    ; preds = %do.end.355
  %256 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.364

cond.false.360:                                   ; preds = %do.end.355
  %pbox361 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %257 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox361, align 8, !tbaa !97
  %p362 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %257, i32 0, i32 0
  %y363 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p362, i32 0, i32 1
  %258 = load i32, i32* %y363, align 4, !tbaa !38
  br label %cond.end.364

cond.end.364:                                     ; preds = %cond.false.360, %cond.true.359
  %cond365 = phi i32 [ %256, %cond.true.359 ], [ %258, %cond.false.360 ]
  store i32 %cond365, i32* %ybot, align 4, !tbaa !5
  %259 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %259) #1
  %260 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox366 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %261 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox366, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %261, i32 0, i32 1
  %y367 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %262 = load i32, i32* %y367, align 4, !tbaa !42
  %cmp368 = icmp slt i32 %260, %262
  br i1 %cmp368, label %cond.true.370, label %cond.false.371

cond.true.370:                                    ; preds = %cond.end.364
  %263 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.375

cond.false.371:                                   ; preds = %cond.end.364
  %pbox372 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %264 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox372, align 8, !tbaa !97
  %q373 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %264, i32 0, i32 1
  %y374 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q373, i32 0, i32 1
  %265 = load i32, i32* %y374, align 4, !tbaa !42
  br label %cond.end.375

cond.end.375:                                     ; preds = %cond.false.371, %cond.true.370
  %cond376 = phi i32 [ %263, %cond.true.370 ], [ %265, %cond.false.371 ]
  store i32 %cond376, i32* %ytop, align 4, !tbaa !5
  %266 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end377 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %266, i32 0, i32 1
  %x378 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end377, i32 0, i32 0
  %267 = load i32, i32* %x378, align 4, !tbaa !194
  %268 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start379 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %268, i32 0, i32 0
  %x380 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start379, i32 0, i32 0
  %269 = load i32, i32* %x380, align 4, !tbaa !193
  %cmp381 = icmp eq i32 %267, %269
  br i1 %cmp381, label %land.lhs.true.383, label %if.else.431

land.lhs.true.383:                                ; preds = %cond.end.375
  %270 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end384 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %270, i32 0, i32 1
  %x385 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end384, i32 0, i32 0
  %271 = load i32, i32* %x385, align 4, !tbaa !194
  %272 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start386 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %272, i32 0, i32 0
  %x387 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start386, i32 0, i32 0
  %273 = load i32, i32* %x387, align 4, !tbaa !193
  %cmp388 = icmp eq i32 %271, %273
  br i1 %cmp388, label %if.then.390, label %if.else.431

if.then.390:                                      ; preds = %land.lhs.true.383
  %274 = load i32, i32* %ytop, align 4, !tbaa !5
  %275 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp391 = icmp sgt i32 %274, %275
  br i1 %cmp391, label %if.then.393, label %if.else.429

if.then.393:                                      ; preds = %if.then.390
  %276 = bitcast i32* %yi394 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %276) #1
  %277 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv395 = sext i32 %277 to i64
  %add396 = add nsw i64 %conv395, 127
  %shr397 = ashr i64 %add396, 8
  %conv398 = trunc i64 %shr397 to i32
  store i32 %conv398, i32* %yi394, align 4, !tbaa !5
  %278 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %278) #1
  %279 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv399 = sext i32 %279 to i64
  %add400 = add nsw i64 %conv399, 127
  %shr401 = ashr i64 %add400, 8
  %conv402 = trunc i64 %shr401 to i32
  %280 = load i32, i32* %yi394, align 4, !tbaa !5
  %sub403 = sub nsw i32 %conv402, %280
  store i32 %sub403, i32* %hi, align 4, !tbaa !5
  %281 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %281) #1
  %282 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end404 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %282, i32 0, i32 1
  %x405 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end404, i32 0, i32 0
  %283 = load i32, i32* %x405, align 4, !tbaa !194
  %sub406 = sub nsw i32 %283, 0
  %conv407 = sext i32 %sub406 to i64
  %add408 = add nsw i64 %conv407, 127
  %shr409 = ashr i64 %add408, 8
  %conv410 = trunc i64 %shr409 to i32
  store i32 %conv410, i32* %xli, align 4, !tbaa !5
  %284 = bitcast i32* %xi411 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %284) #1
  %285 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end412 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %285, i32 0, i32 1
  %x413 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end412, i32 0, i32 0
  %286 = load i32, i32* %x413, align 4, !tbaa !194
  %add414 = add nsw i32 %286, 0
  %conv415 = sext i32 %add414 to i64
  %add416 = add nsw i64 %conv415, 127
  %shr417 = ashr i64 %add416, 8
  %conv418 = trunc i64 %shr417 to i32
  store i32 %conv418, i32* %xi411, align 4, !tbaa !5
  br label %do.body.419

do.body.419:                                      ; preds = %if.then.393
  br label %do.cond.420

do.cond.420:                                      ; preds = %do.body.419
  br label %do.end.421

do.end.421:                                       ; preds = %do.cond.420
  %fill_rect422 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %287 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect422, align 8, !tbaa !102
  %dev423 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %288 = load %struct.gx_device_s*, %struct.gx_device_s** %dev423, align 8, !tbaa !96
  %289 = load i32, i32* %xli, align 4, !tbaa !5
  %290 = load i32, i32* %yi394, align 4, !tbaa !5
  %291 = load i32, i32* %xi411, align 4, !tbaa !5
  %292 = load i32, i32* %xli, align 4, !tbaa !5
  %sub424 = sub nsw i32 %291, %292
  %293 = load i32, i32* %hi, align 4, !tbaa !5
  %pdevc425 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %294 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc425, align 8, !tbaa !90
  %colors426 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %294, i32 0, i32 1
  %pure427 = bitcast %union._c* %colors426 to i64*
  %295 = load i64, i64* %pure427, align 8, !tbaa !203
  %call428 = call i32 %287(%struct.gx_device_s* %288, i32 %289, i32 %290, i32 %sub424, i32 %293, i64 %295) #5
  store i32 %call428, i32* %code190, align 4, !tbaa !5
  %296 = bitcast i32* %xi411 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %296) #1
  %297 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %297) #1
  %298 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %298) #1
  %299 = bitcast i32* %yi394 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %299) #1
  br label %if.end.430

if.else.429:                                      ; preds = %if.then.390
  store i32 0, i32* %code190, align 4, !tbaa !5
  br label %if.end.430

if.end.430:                                       ; preds = %if.else.429, %do.end.421
  br label %if.end.451

if.else.431:                                      ; preds = %land.lhs.true.383, %cond.end.375
  %300 = load i32, i32* %ybot, align 4, !tbaa !5
  %301 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp432 = icmp slt i32 %300, %301
  br i1 %cmp432, label %if.then.434, label %if.else.449

if.then.434:                                      ; preds = %if.else.431
  %302 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %302) #1
  %303 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %303) #1
  %start435 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %304 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start436 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %304, i32 0, i32 0
  %305 = bitcast %struct.gs_fixed_point_s* %start435 to i8*
  %306 = bitcast %struct.gs_fixed_point_s* %start436 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %305, i8* %306, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end437 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %307 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end438 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %307, i32 0, i32 1
  %308 = bitcast %struct.gs_fixed_point_s* %end437 to i8*
  %309 = bitcast %struct.gs_fixed_point_s* %end438 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %308, i8* %309, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start439 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %310 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start440 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %310, i32 0, i32 0
  %311 = bitcast %struct.gs_fixed_point_s* %start439 to i8*
  %312 = bitcast %struct.gs_fixed_point_s* %start440 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %311, i8* %312, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end441 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %313 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end442 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %313, i32 0, i32 1
  %314 = bitcast %struct.gs_fixed_point_s* %end441 to i8*
  %315 = bitcast %struct.gs_fixed_point_s* %end442 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %314, i8* %315, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.443

do.body.443:                                      ; preds = %if.then.434
  br label %do.cond.444

do.cond.444:                                      ; preds = %do.body.443
  br label %do.end.445

do.end.445:                                       ; preds = %do.cond.444
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 17
  %316 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %dev446 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %317 = load %struct.gx_device_s*, %struct.gx_device_s** %dev446, align 8, !tbaa !96
  %318 = load i32, i32* %ybot, align 4, !tbaa !5
  %319 = load i32, i32* %ytop, align 4, !tbaa !5
  %pdevc447 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %320 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc447, align 8, !tbaa !90
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %321 = load i32, i32* %lop, align 4, !tbaa !91
  %call448 = call i32 %316(%struct.gx_device_s* %317, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %318, i32 %319, i32 0, %struct.gx_device_color_s* %320, i32 %321) #5
  store i32 %call448, i32* %code190, align 4, !tbaa !5
  %322 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %322) #1
  %323 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %323) #1
  br label %if.end.450

if.else.449:                                      ; preds = %if.else.431
  store i32 0, i32* %code190, align 4, !tbaa !5
  br label %if.end.450

if.end.450:                                       ; preds = %if.else.449, %do.end.445
  br label %if.end.451

if.end.451:                                       ; preds = %if.end.450, %if.end.430
  %324 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %324) #1
  %325 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %325) #1
  %326 = load i32, i32* %code190, align 4, !tbaa !5
  %cmp452 = icmp slt i32 %326, 0
  br i1 %cmp452, label %if.then.454, label %if.end.455

if.then.454:                                      ; preds = %if.end.451
  %327 = load i32, i32* %code190, align 4, !tbaa !5
  store i32 %327, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.456

if.end.455:                                       ; preds = %if.end.451
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.456

cleanup.456:                                      ; preds = %if.end.455, %if.then.454, %cond.end.349, %if.then.292, %if.end.244
  %328 = bitcast i32* %code190 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %328) #1
  %cleanup.dest.457 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.457, label %cleanup.462 [
    i32 0, label %cleanup.cont.458
    i32 17, label %for.inc.459
  ]

cleanup.cont.458:                                 ; preds = %cleanup.456
  br label %for.inc.459

for.inc.459:                                      ; preds = %cleanup.cont.458, %cleanup.456
  %329 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next460 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %329, i32 0, i32 15
  %330 = load %struct.active_line_s*, %struct.active_line_s** %next460, align 8, !tbaa !189
  store %struct.active_line_s* %330, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.186

for.end.461:                                      ; preds = %for.cond.186
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.462

cleanup.462:                                      ; preds = %for.end.461, %cleanup.456
  %331 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %331) #1
  %332 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %332) #1
  %cleanup.dest.464 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.464, label %cleanup.476 [
    i32 0, label %cleanup.cont.465
  ]

cleanup.cont.465:                                 ; preds = %cleanup.462
  br label %if.end.467

if.else.466:                                      ; preds = %lor.lhs.false
  br label %if.end.467

if.end.467:                                       ; preds = %if.else.466, %cleanup.cont.465
  %333 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %334 = load i32, i32* %y1, align 4, !tbaa !5
  %call468 = call i32 @move_al_by_y(%struct.line_list_s* %333, i32 %334) #5
  store i32 %call468, i32* %code, align 4, !tbaa !5
  %335 = load i32, i32* %code, align 4, !tbaa !5
  %cmp469 = icmp slt i32 %335, 0
  br i1 %cmp469, label %if.then.471, label %if.end.472

if.then.471:                                      ; preds = %if.end.467
  %336 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %336, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.476

if.end.472:                                       ; preds = %if.end.467
  %337 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0473 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %337, i32 0, i32 8
  %338 = load %struct.active_line_s*, %struct.active_line_s** %h_list0473, align 8, !tbaa !124
  %339 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1474 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %339, i32 0, i32 9
  store %struct.active_line_s* %338, %struct.active_line_s** %h_list1474, align 8, !tbaa !123
  %340 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0475 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %340, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0475, align 8, !tbaa !124
  %341 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %341, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.476

cleanup.476:                                      ; preds = %if.end.472, %if.then.471, %cleanup.462, %if.then.149, %if.then.143, %cleanup.138, %if.then.131, %if.end.98, %if.then.97, %cleanup.87
  %342 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %342) #1
  %343 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %343) #1
  %344 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %344) #1
  %345 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %345) #1
  %cleanup.dest.480 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.480, label %cleanup.483 [
    i32 0, label %cleanup.cont.481
    i32 3, label %while.end.482
    i32 2, label %while.cond
  ]

cleanup.cont.481:                                 ; preds = %cleanup.476
  br label %while.cond

while.end.482:                                    ; preds = %cleanup.476
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.483

cleanup.483:                                      ; preds = %while.end.482, %cleanup.476, %if.then
  %346 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %346) #1
  %347 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %347) #1
  %348 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %348) #1
  %349 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %349) #1
  %350 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %350) #1
  %351 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %351) #1
  %352 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %352) #1
  %353 = load i32, i32* %retval
  ret i32 %353
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__nj_nd_sw(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %yi = alloca i32, align 4
  %xi = alloca i32, align 4
  %wi = alloca i32, align 4
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code191 = alloca i32, align 4
  %k = alloca i32, align 4
  %v = alloca i32, align 4
  %k247 = alloca i32, align 4
  %v249 = alloca i32, align 4
  %k310 = alloca i32, align 4
  %v312 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi395 = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi412 = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.486

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.484, %cleanup.479, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %cleanup.cont.90, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else.86

if.then.35:                                       ; preds = %if.end.32
  %48 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = load i32, i32* %y, align 4, !tbaa !5
  %sub36 = sub nsw i32 %49, 0
  %conv37 = sext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, 127
  %shr = ashr i64 %add38, 8
  %conv39 = trunc i64 %shr to i32
  store i32 %conv39, i32* %yi, align 4, !tbaa !5
  %50 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #1
  %51 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #1
  %52 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 0
  %53 = load i32, i32* %x, align 4, !tbaa !193
  %54 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %55 = load i32, i32* %x41, align 4, !tbaa !194
  %cmp42 = icmp sle i32 %53, %55
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.35
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start45, i32 0, i32 0
  %57 = load i32, i32* %x46, align 4, !tbaa !193
  %sub47 = sub nsw i32 %57, 0
  %conv48 = sext i32 %sub47 to i64
  %add49 = add nsw i64 %conv48, 127
  %shr50 = ashr i64 %add49, 8
  %conv51 = trunc i64 %shr50 to i32
  store i32 %conv51, i32* %xi, align 4, !tbaa !5
  %58 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end52, i32 0, i32 0
  %59 = load i32, i32* %x53, align 4, !tbaa !194
  %add54 = add nsw i32 %59, 0
  %conv55 = sext i32 %add54 to i64
  %add56 = add nsw i64 %conv55, 127
  %shr57 = ashr i64 %add56, 8
  %conv58 = trunc i64 %shr57 to i32
  %60 = load i32, i32* %xi, align 4, !tbaa !5
  %sub59 = sub nsw i32 %conv58, %60
  store i32 %sub59, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.else:                                          ; preds = %if.then.35
  %61 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %61, i32 0, i32 1
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end60, i32 0, i32 0
  %62 = load i32, i32* %x61, align 4, !tbaa !194
  %sub62 = sub nsw i32 %62, 0
  %conv63 = sext i32 %sub62 to i64
  %add64 = add nsw i64 %conv63, 127
  %shr65 = ashr i64 %add64, 8
  %conv66 = trunc i64 %shr65 to i32
  store i32 %conv66, i32* %xi, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 0
  %64 = load i32, i32* %x68, align 4, !tbaa !193
  %add69 = add nsw i32 %64, 0
  %conv70 = sext i32 %add69 to i64
  %add71 = add nsw i64 %conv70, 127
  %shr72 = ashr i64 %add71, 8
  %conv73 = trunc i64 %shr72 to i32
  %65 = load i32, i32* %xi, align 4, !tbaa !5
  %sub74 = sub nsw i32 %conv73, %65
  store i32 %sub74, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.end.75:                                        ; preds = %if.else, %if.then.44
  br label %do.body.76

do.body.76:                                       ; preds = %if.end.75
  br label %do.cond.77

do.cond.77:                                       ; preds = %do.body.76
  br label %do.end.78

do.end.78:                                        ; preds = %do.cond.77
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %66 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %66, i32 0, i32 0
  %67 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %67, i32 0, i32 5
  %68 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %pdevc79 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %69 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc79, align 8, !tbaa !90
  %70 = load i32, i32* %xi, align 4, !tbaa !5
  %71 = load i32, i32* %yi, align 4, !tbaa !5
  %72 = load i32, i32* %wi, align 4, !tbaa !5
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %73 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %74 = load i32, i32* %lop, align 4, !tbaa !91
  %call = call i32 %68(%struct.gx_device_color_s* %69, i32 %70, i32 %71, i32 %72, i32 1, %struct.gx_device_s* %73, i32 %74, %struct.gx_rop_source_s* null) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %75 = load i32, i32* %code, align 4, !tbaa !5
  %cmp80 = icmp slt i32 %75, 0
  br i1 %cmp80, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %do.end.78
  %76 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %76, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.83:                                        ; preds = %do.end.78
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.83, %if.then.82
  %77 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #1
  %78 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #1
  %79 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.88 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.87

if.else.86:                                       ; preds = %if.end.32
  %80 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %81 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %80, %struct.line_list_s* %81) #5
  br label %if.end.87

if.end.87:                                        ; preds = %if.else.86, %cleanup.cont
  %82 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %82, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.88

cleanup.88:                                       ; preds = %if.end.87, %cleanup
  %83 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #1
  %cleanup.dest.89 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.89, label %cleanup.479 [
    i32 0, label %cleanup.cont.90
  ]

cleanup.cont.90:                                  ; preds = %cleanup.88
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %84 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head91 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %84, i32 0, i32 7
  %next92 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head91, i32 0, i32 15
  %85 = load %struct.active_line_s*, %struct.active_line_s** %next92, align 8, !tbaa !201
  %cmp93 = icmp eq %struct.active_line_s* %85, null
  br i1 %cmp93, label %if.then.95, label %if.end.103

if.then.95:                                       ; preds = %while.end
  %86 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp96 = icmp eq %struct.active_line_s* %86, null
  br i1 %cmp96, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %if.then.95
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.479

if.end.99:                                        ; preds = %if.then.95
  %87 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start100 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %87, i32 0, i32 0
  %y101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start100, i32 0, i32 1
  %88 = load i32, i32* %y101, align 4, !tbaa !187
  store i32 %88, i32* %y, align 4, !tbaa !5
  %89 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %89, i32 0, i32 8
  %90 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %91 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %91, i32 0, i32 9
  store %struct.active_line_s* %90, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0102 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %92, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0102, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.479

if.end.103:                                       ; preds = %while.end
  %93 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp104 = icmp ne %struct.active_line_s* %93, null
  br i1 %cmp104, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.103
  %94 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start106 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %94, i32 0, i32 0
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start106, i32 0, i32 1
  %95 = load i32, i32* %y107, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.103
  %96 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %96, i32 0, i32 18
  %97 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %95, %cond.true ], [ %97, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %98 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %98) #1
  %99 = load i32, i32* %y, align 4, !tbaa !5
  %100 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %100, -1
  %or = or i32 %99, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %101 = load i32, i32* %y1, align 4, !tbaa !5
  %102 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp108 = icmp sgt i32 %101, %102
  br i1 %cmp108, label %if.then.110, label %if.end.112

if.then.110:                                      ; preds = %cond.end
  %103 = load i32, i32* %y_band, align 4, !tbaa !5
  %add111 = add nsw i32 %103, 1
  store i32 %add111, i32* %y1, align 4, !tbaa !5
  br label %if.end.112

if.end.112:                                       ; preds = %if.then.110, %cond.end
  %104 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %104) #1
  %105 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head113 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %105, i32 0, i32 7
  %next114 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head113, i32 0, i32 15
  %106 = load %struct.active_line_s*, %struct.active_line_s** %next114, align 8, !tbaa !201
  store %struct.active_line_s* %106, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.112
  %107 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp115 = icmp ne %struct.active_line_s* %107, null
  br i1 %cmp115, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %108 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end117 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %108, i32 0, i32 1
  %y118 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end117, i32 0, i32 1
  %109 = load i32, i32* %y118, align 4, !tbaa !195
  %110 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp119 = icmp slt i32 %109, %110
  br i1 %cmp119, label %if.then.121, label %if.end.124

if.then.121:                                      ; preds = %for.body
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end122 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 1
  %y123 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end122, i32 0, i32 1
  %112 = load i32, i32* %y123, align 4, !tbaa !195
  store i32 %112, i32* %y1, align 4, !tbaa !5
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.121, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.124
  %113 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next125 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 15
  %114 = load %struct.active_line_s*, %struct.active_line_s** %next125, align 8, !tbaa !189
  store %struct.active_line_s* %114, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %115 = load i32, i32* %y, align 4, !tbaa !5
  %116 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp126 = icmp eq i32 %115, %116
  br i1 %cmp126, label %if.then.128, label %if.end.147

if.then.128:                                      ; preds = %for.end
  %117 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %118 = load i32, i32* %y, align 4, !tbaa !5
  %call129 = call i32 @process_h_segments(%struct.line_list_s* %117, i32 %118) #5
  store i32 %call129, i32* %code, align 4, !tbaa !5
  %119 = load i32, i32* %code, align 4, !tbaa !5
  %cmp130 = icmp slt i32 %119, 0
  br i1 %cmp130, label %if.then.132, label %if.end.133

if.then.132:                                      ; preds = %if.then.128
  %120 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %120, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.479

if.end.133:                                       ; preds = %if.then.128
  %121 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %121) #1
  %122 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %123 = load i32, i32* %y1, align 4, !tbaa !5
  %call134 = call i32 @move_al_by_y(%struct.line_list_s* %122, i32 %123) #5
  store i32 %call134, i32* %code1, align 4, !tbaa !5
  %124 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp135 = icmp slt i32 %124, 0
  br i1 %cmp135, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %if.end.133
  %125 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %125, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.139

if.end.138:                                       ; preds = %if.end.133
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.139

cleanup.139:                                      ; preds = %if.end.138, %if.then.137
  %126 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %126) #1
  %cleanup.dest.140 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.140, label %cleanup.479 [
    i32 0, label %cleanup.cont.141
  ]

cleanup.cont.141:                                 ; preds = %cleanup.139
  %127 = load i32, i32* %code, align 4, !tbaa !5
  %cmp142 = icmp sgt i32 %127, 0
  br i1 %cmp142, label %if.then.144, label %if.end.146

if.then.144:                                      ; preds = %cleanup.cont.141
  %128 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list145 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %128, i32 0, i32 5
  %129 = load %struct.active_line_s*, %struct.active_line_s** %y_list145, align 8, !tbaa !121
  store %struct.active_line_s* %129, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.479

if.end.146:                                       ; preds = %cleanup.cont.141
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %for.end
  %130 = load i32, i32* %y, align 4, !tbaa !5
  %131 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp148 = icmp sge i32 %130, %131
  br i1 %cmp148, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %if.end.147
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.479

if.end.151:                                       ; preds = %if.end.147
  %132 = load i32, i32* %y, align 4, !tbaa !5
  %sub152 = sub nsw i32 %132, 0
  %conv153 = sext i32 %sub152 to i64
  %add154 = add nsw i64 %conv153, 127
  %and155 = and i64 %add154, -256
  %133 = load i32, i32* %y1, align 4, !tbaa !5
  %add156 = add nsw i32 %133, 0
  %conv157 = sext i32 %add156 to i64
  %add158 = add nsw i64 %conv157, 127
  %and159 = and i64 %add158, -256
  %cmp160 = icmp slt i64 %and155, %and159
  %conv161 = zext i1 %cmp160 to i32
  store i32 %conv161, i32* %covering_pixel_centers, align 4, !tbaa !5
  %134 = load i32, i32* %y, align 4, !tbaa !5
  %135 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp162 = icmp ne i32 %134, %135
  br i1 %cmp162, label %if.then.164, label %if.end.176

if.then.164:                                      ; preds = %if.end.151
  %136 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %137 = load i32, i32* %y, align 4, !tbaa !5
  %138 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %138, 0
  %cond165 = select i1 %tobool, i32 1, i32 -1
  %139 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %136, i32 %137, i32* %y1, i32 %cond165, i32 %139) #5
  %140 = load i32, i32* %y, align 4, !tbaa !5
  %sub166 = sub nsw i32 %140, 0
  %conv167 = sext i32 %sub166 to i64
  %add168 = add nsw i64 %conv167, 127
  %and169 = and i64 %add168, -256
  %141 = load i32, i32* %y1, align 4, !tbaa !5
  %add170 = add nsw i32 %141, 0
  %conv171 = sext i32 %add170 to i64
  %add172 = add nsw i64 %conv171, 127
  %and173 = and i64 %add172, -256
  %cmp174 = icmp slt i64 %and169, %and173
  %conv175 = zext i1 %cmp174 to i32
  store i32 %conv175, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.176

if.end.176:                                       ; preds = %if.then.164, %if.end.151
  %142 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool177 = icmp ne i32 %142, 0
  br i1 %tobool177, label %if.then.179, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.176
  %143 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool178 = icmp ne i32 %143, 0
  br i1 %tobool178, label %if.then.179, label %if.else.469

if.then.179:                                      ; preds = %lor.lhs.false, %if.end.176
  %144 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %144) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %145 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %145) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  %146 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %146, i32 0, i32 13
  %147 = load i32*, i32** %windings, align 8, !tbaa !79
  %148 = bitcast i32* %147 to i8*
  %149 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %contour_count = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %149, i32 0, i32 20
  %150 = load i32, i32* %contour_count, align 4, !tbaa !74
  %conv180 = sext i32 %150 to i64
  %mul = mul i64 4, %conv180
  %call181 = call i8* @memset(i8* %148, i32 0, i64 %mul) #6
  br label %do.body.182

do.body.182:                                      ; preds = %if.then.179
  br label %do.cond.183

do.cond.183:                                      ; preds = %do.body.182
  br label %do.end.184

do.end.184:                                       ; preds = %do.cond.183
  %151 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head185 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %151, i32 0, i32 7
  %next186 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head185, i32 0, i32 15
  %152 = load %struct.active_line_s*, %struct.active_line_s** %next186, align 8, !tbaa !201
  store %struct.active_line_s* %152, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.187

for.cond.187:                                     ; preds = %for.inc.462, %do.end.184
  %153 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp188 = icmp ne %struct.active_line_s* %153, null
  br i1 %cmp188, label %for.body.190, label %for.end.464

for.body.190:                                     ; preds = %for.cond.187
  %154 = bitcast i32* %code191 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %154) #1
  br label %do.body.192

do.body.192:                                      ; preds = %for.body.190
  br label %do.cond.193

do.cond.193:                                      ; preds = %do.body.192
  br label %do.end.194

do.end.194:                                       ; preds = %do.cond.193
  br label %do.body.195

do.body.195:                                      ; preds = %do.end.194
  br label %do.cond.196

do.cond.196:                                      ; preds = %do.body.195
  br label %do.end.197

do.end.197:                                       ; preds = %do.cond.196
  %155 = load i32, i32* %inside, align 4, !tbaa !5
  %156 = load i32, i32* %rule, align 4, !tbaa !5
  %and198 = and i32 %155, %156
  %cmp199 = icmp ne i32 %and198, 0
  br i1 %cmp199, label %if.end.246, label %if.then.201

if.then.201:                                      ; preds = %do.end.197
  %157 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %157) #1
  %158 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count202 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %158, i32 0, i32 13
  %159 = load i32, i32* %contour_count202, align 4, !tbaa !186
  store i32 %159, i32* %k, align 4, !tbaa !5
  %160 = bitcast i32* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %160) #1
  %161 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom = sext i32 %161 to i64
  %162 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings203 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %162, i32 0, i32 13
  %163 = load i32*, i32** %windings203, align 8, !tbaa !79
  %arrayidx = getelementptr inbounds i32, i32* %163, i64 %idxprom
  %164 = load i32, i32* %arrayidx, align 4, !tbaa !5
  store i32 %164, i32* %v, align 4, !tbaa !5
  %165 = load i32, i32* %v, align 4, !tbaa !5
  %cmp204 = icmp slt i32 %165, 0
  br i1 %cmp204, label %cond.true.206, label %cond.false.209

cond.true.206:                                    ; preds = %if.then.201
  %166 = load i32, i32* %v, align 4, !tbaa !5
  %and207 = and i32 %166, 1
  %sub208 = sub nsw i32 0, %and207
  br label %cond.end.217

cond.false.209:                                   ; preds = %if.then.201
  %167 = load i32, i32* %v, align 4, !tbaa !5
  %cmp210 = icmp sgt i32 %167, 0
  br i1 %cmp210, label %cond.true.212, label %cond.false.214

cond.true.212:                                    ; preds = %cond.false.209
  %168 = load i32, i32* %v, align 4, !tbaa !5
  %and213 = and i32 %168, 1
  br label %cond.end.215

cond.false.214:                                   ; preds = %cond.false.209
  br label %cond.end.215

cond.end.215:                                     ; preds = %cond.false.214, %cond.true.212
  %cond216 = phi i32 [ %and213, %cond.true.212 ], [ 0, %cond.false.214 ]
  br label %cond.end.217

cond.end.217:                                     ; preds = %cond.end.215, %cond.true.206
  %cond218 = phi i32 [ %sub208, %cond.true.206 ], [ %cond216, %cond.end.215 ]
  %169 = load i32, i32* %inside, align 4, !tbaa !5
  %sub219 = sub nsw i32 %169, %cond218
  store i32 %sub219, i32* %inside, align 4, !tbaa !5
  %170 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction220 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %170, i32 0, i32 8
  %171 = load i32, i32* %direction220, align 4, !tbaa !178
  %172 = load i32, i32* %k, align 4, !tbaa !5
  %idxprom221 = sext i32 %172 to i64
  %173 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings222 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %173, i32 0, i32 13
  %174 = load i32*, i32** %windings222, align 8, !tbaa !79
  %arrayidx223 = getelementptr inbounds i32, i32* %174, i64 %idxprom221
  %175 = load i32, i32* %arrayidx223, align 4, !tbaa !5
  %add224 = add nsw i32 %175, %171
  store i32 %add224, i32* %arrayidx223, align 4, !tbaa !5
  store i32 %add224, i32* %v, align 4, !tbaa !5
  %176 = load i32, i32* %v, align 4, !tbaa !5
  %cmp225 = icmp slt i32 %176, 0
  br i1 %cmp225, label %cond.true.227, label %cond.false.230

cond.true.227:                                    ; preds = %cond.end.217
  %177 = load i32, i32* %v, align 4, !tbaa !5
  %and228 = and i32 %177, 1
  %sub229 = sub nsw i32 0, %and228
  br label %cond.end.238

cond.false.230:                                   ; preds = %cond.end.217
  %178 = load i32, i32* %v, align 4, !tbaa !5
  %cmp231 = icmp sgt i32 %178, 0
  br i1 %cmp231, label %cond.true.233, label %cond.false.235

cond.true.233:                                    ; preds = %cond.false.230
  %179 = load i32, i32* %v, align 4, !tbaa !5
  %and234 = and i32 %179, 1
  br label %cond.end.236

cond.false.235:                                   ; preds = %cond.false.230
  br label %cond.end.236

cond.end.236:                                     ; preds = %cond.false.235, %cond.true.233
  %cond237 = phi i32 [ %and234, %cond.true.233 ], [ 0, %cond.false.235 ]
  br label %cond.end.238

cond.end.238:                                     ; preds = %cond.end.236, %cond.true.227
  %cond239 = phi i32 [ %sub229, %cond.true.227 ], [ %cond237, %cond.end.236 ]
  %180 = load i32, i32* %inside, align 4, !tbaa !5
  %add240 = add nsw i32 %180, %cond239
  store i32 %add240, i32* %inside, align 4, !tbaa !5
  %181 = bitcast i32* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %181) #1
  %182 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %182) #1
  %183 = load i32, i32* %inside, align 4, !tbaa !5
  %184 = load i32, i32* %rule, align 4, !tbaa !5
  %and241 = and i32 %183, %184
  %cmp242 = icmp ne i32 %and241, 0
  br i1 %cmp242, label %if.then.244, label %if.end.245

if.then.244:                                      ; preds = %cond.end.238
  %185 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %185, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.245

if.end.245:                                       ; preds = %if.then.244, %cond.end.238
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.459

if.end.246:                                       ; preds = %do.end.197
  %186 = bitcast i32* %k247 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %186) #1
  %187 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count248 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %187, i32 0, i32 13
  %188 = load i32, i32* %contour_count248, align 4, !tbaa !186
  store i32 %188, i32* %k247, align 4, !tbaa !5
  %189 = bitcast i32* %v249 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %189) #1
  %190 = load i32, i32* %k247, align 4, !tbaa !5
  %idxprom250 = sext i32 %190 to i64
  %191 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings251 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %191, i32 0, i32 13
  %192 = load i32*, i32** %windings251, align 8, !tbaa !79
  %arrayidx252 = getelementptr inbounds i32, i32* %192, i64 %idxprom250
  %193 = load i32, i32* %arrayidx252, align 4, !tbaa !5
  store i32 %193, i32* %v249, align 4, !tbaa !5
  %194 = load i32, i32* %v249, align 4, !tbaa !5
  %cmp253 = icmp slt i32 %194, 0
  br i1 %cmp253, label %cond.true.255, label %cond.false.258

cond.true.255:                                    ; preds = %if.end.246
  %195 = load i32, i32* %v249, align 4, !tbaa !5
  %and256 = and i32 %195, 1
  %sub257 = sub nsw i32 0, %and256
  br label %cond.end.266

cond.false.258:                                   ; preds = %if.end.246
  %196 = load i32, i32* %v249, align 4, !tbaa !5
  %cmp259 = icmp sgt i32 %196, 0
  br i1 %cmp259, label %cond.true.261, label %cond.false.263

cond.true.261:                                    ; preds = %cond.false.258
  %197 = load i32, i32* %v249, align 4, !tbaa !5
  %and262 = and i32 %197, 1
  br label %cond.end.264

cond.false.263:                                   ; preds = %cond.false.258
  br label %cond.end.264

cond.end.264:                                     ; preds = %cond.false.263, %cond.true.261
  %cond265 = phi i32 [ %and262, %cond.true.261 ], [ 0, %cond.false.263 ]
  br label %cond.end.266

cond.end.266:                                     ; preds = %cond.end.264, %cond.true.255
  %cond267 = phi i32 [ %sub257, %cond.true.255 ], [ %cond265, %cond.end.264 ]
  %198 = load i32, i32* %inside, align 4, !tbaa !5
  %sub268 = sub nsw i32 %198, %cond267
  store i32 %sub268, i32* %inside, align 4, !tbaa !5
  %199 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction269 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %199, i32 0, i32 8
  %200 = load i32, i32* %direction269, align 4, !tbaa !178
  %201 = load i32, i32* %k247, align 4, !tbaa !5
  %idxprom270 = sext i32 %201 to i64
  %202 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings271 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %202, i32 0, i32 13
  %203 = load i32*, i32** %windings271, align 8, !tbaa !79
  %arrayidx272 = getelementptr inbounds i32, i32* %203, i64 %idxprom270
  %204 = load i32, i32* %arrayidx272, align 4, !tbaa !5
  %add273 = add nsw i32 %204, %200
  store i32 %add273, i32* %arrayidx272, align 4, !tbaa !5
  store i32 %add273, i32* %v249, align 4, !tbaa !5
  %205 = load i32, i32* %v249, align 4, !tbaa !5
  %cmp274 = icmp slt i32 %205, 0
  br i1 %cmp274, label %cond.true.276, label %cond.false.279

cond.true.276:                                    ; preds = %cond.end.266
  %206 = load i32, i32* %v249, align 4, !tbaa !5
  %and277 = and i32 %206, 1
  %sub278 = sub nsw i32 0, %and277
  br label %cond.end.287

cond.false.279:                                   ; preds = %cond.end.266
  %207 = load i32, i32* %v249, align 4, !tbaa !5
  %cmp280 = icmp sgt i32 %207, 0
  br i1 %cmp280, label %cond.true.282, label %cond.false.284

cond.true.282:                                    ; preds = %cond.false.279
  %208 = load i32, i32* %v249, align 4, !tbaa !5
  %and283 = and i32 %208, 1
  br label %cond.end.285

cond.false.284:                                   ; preds = %cond.false.279
  br label %cond.end.285

cond.end.285:                                     ; preds = %cond.false.284, %cond.true.282
  %cond286 = phi i32 [ %and283, %cond.true.282 ], [ 0, %cond.false.284 ]
  br label %cond.end.287

cond.end.287:                                     ; preds = %cond.end.285, %cond.true.276
  %cond288 = phi i32 [ %sub278, %cond.true.276 ], [ %cond286, %cond.end.285 ]
  %209 = load i32, i32* %inside, align 4, !tbaa !5
  %add289 = add nsw i32 %209, %cond288
  store i32 %add289, i32* %inside, align 4, !tbaa !5
  %210 = bitcast i32* %v249 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %210) #1
  %211 = bitcast i32* %k247 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %211) #1
  %212 = load i32, i32* %inside, align 4, !tbaa !5
  %213 = load i32, i32* %rule, align 4, !tbaa !5
  %and290 = and i32 %212, %213
  %cmp291 = icmp ne i32 %and290, 0
  br i1 %cmp291, label %if.then.293, label %if.end.294

if.then.293:                                      ; preds = %cond.end.287
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.459

if.end.294:                                       ; preds = %cond.end.287
  %214 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next295 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %214, i32 0, i32 15
  %215 = load %struct.active_line_s*, %struct.active_line_s** %next295, align 8, !tbaa !189
  %cmp296 = icmp ne %struct.active_line_s* %215, null
  br i1 %cmp296, label %land.lhs.true, label %if.end.353

land.lhs.true:                                    ; preds = %if.end.294
  %216 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current298 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %216, i32 0, i32 5
  %217 = load i32, i32* %x_current298, align 4, !tbaa !204
  %218 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next299 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %218, i32 0, i32 15
  %219 = load %struct.active_line_s*, %struct.active_line_s** %next299, align 8, !tbaa !189
  %x_current300 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %219, i32 0, i32 5
  %220 = load i32, i32* %x_current300, align 4, !tbaa !204
  %cmp301 = icmp eq i32 %217, %220
  br i1 %cmp301, label %land.lhs.true.303, label %if.end.353

land.lhs.true.303:                                ; preds = %land.lhs.true
  %221 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %221, i32 0, i32 6
  %222 = load i32, i32* %x_next, align 4, !tbaa !205
  %223 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next304 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %223, i32 0, i32 15
  %224 = load %struct.active_line_s*, %struct.active_line_s** %next304, align 8, !tbaa !189
  %x_next305 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %224, i32 0, i32 6
  %225 = load i32, i32* %x_next305, align 4, !tbaa !205
  %cmp306 = icmp eq i32 %222, %225
  br i1 %cmp306, label %if.then.308, label %if.end.353

if.then.308:                                      ; preds = %land.lhs.true.303
  %226 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next309 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %226, i32 0, i32 15
  %227 = load %struct.active_line_s*, %struct.active_line_s** %next309, align 8, !tbaa !189
  store %struct.active_line_s* %227, %struct.active_line_s** %alp, align 8, !tbaa !1
  %228 = bitcast i32* %k310 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %228) #1
  %229 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %contour_count311 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %229, i32 0, i32 13
  %230 = load i32, i32* %contour_count311, align 4, !tbaa !186
  store i32 %230, i32* %k310, align 4, !tbaa !5
  %231 = bitcast i32* %v312 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %231) #1
  %232 = load i32, i32* %k310, align 4, !tbaa !5
  %idxprom313 = sext i32 %232 to i64
  %233 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings314 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %233, i32 0, i32 13
  %234 = load i32*, i32** %windings314, align 8, !tbaa !79
  %arrayidx315 = getelementptr inbounds i32, i32* %234, i64 %idxprom313
  %235 = load i32, i32* %arrayidx315, align 4, !tbaa !5
  store i32 %235, i32* %v312, align 4, !tbaa !5
  %236 = load i32, i32* %v312, align 4, !tbaa !5
  %cmp316 = icmp slt i32 %236, 0
  br i1 %cmp316, label %cond.true.318, label %cond.false.321

cond.true.318:                                    ; preds = %if.then.308
  %237 = load i32, i32* %v312, align 4, !tbaa !5
  %and319 = and i32 %237, 1
  %sub320 = sub nsw i32 0, %and319
  br label %cond.end.329

cond.false.321:                                   ; preds = %if.then.308
  %238 = load i32, i32* %v312, align 4, !tbaa !5
  %cmp322 = icmp sgt i32 %238, 0
  br i1 %cmp322, label %cond.true.324, label %cond.false.326

cond.true.324:                                    ; preds = %cond.false.321
  %239 = load i32, i32* %v312, align 4, !tbaa !5
  %and325 = and i32 %239, 1
  br label %cond.end.327

cond.false.326:                                   ; preds = %cond.false.321
  br label %cond.end.327

cond.end.327:                                     ; preds = %cond.false.326, %cond.true.324
  %cond328 = phi i32 [ %and325, %cond.true.324 ], [ 0, %cond.false.326 ]
  br label %cond.end.329

cond.end.329:                                     ; preds = %cond.end.327, %cond.true.318
  %cond330 = phi i32 [ %sub320, %cond.true.318 ], [ %cond328, %cond.end.327 ]
  %240 = load i32, i32* %inside, align 4, !tbaa !5
  %sub331 = sub nsw i32 %240, %cond330
  store i32 %sub331, i32* %inside, align 4, !tbaa !5
  %241 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction332 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %241, i32 0, i32 8
  %242 = load i32, i32* %direction332, align 4, !tbaa !178
  %243 = load i32, i32* %k310, align 4, !tbaa !5
  %idxprom333 = sext i32 %243 to i64
  %244 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %windings334 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %244, i32 0, i32 13
  %245 = load i32*, i32** %windings334, align 8, !tbaa !79
  %arrayidx335 = getelementptr inbounds i32, i32* %245, i64 %idxprom333
  %246 = load i32, i32* %arrayidx335, align 4, !tbaa !5
  %add336 = add nsw i32 %246, %242
  store i32 %add336, i32* %arrayidx335, align 4, !tbaa !5
  store i32 %add336, i32* %v312, align 4, !tbaa !5
  %247 = load i32, i32* %v312, align 4, !tbaa !5
  %cmp337 = icmp slt i32 %247, 0
  br i1 %cmp337, label %cond.true.339, label %cond.false.342

cond.true.339:                                    ; preds = %cond.end.329
  %248 = load i32, i32* %v312, align 4, !tbaa !5
  %and340 = and i32 %248, 1
  %sub341 = sub nsw i32 0, %and340
  br label %cond.end.350

cond.false.342:                                   ; preds = %cond.end.329
  %249 = load i32, i32* %v312, align 4, !tbaa !5
  %cmp343 = icmp sgt i32 %249, 0
  br i1 %cmp343, label %cond.true.345, label %cond.false.347

cond.true.345:                                    ; preds = %cond.false.342
  %250 = load i32, i32* %v312, align 4, !tbaa !5
  %and346 = and i32 %250, 1
  br label %cond.end.348

cond.false.347:                                   ; preds = %cond.false.342
  br label %cond.end.348

cond.end.348:                                     ; preds = %cond.false.347, %cond.true.345
  %cond349 = phi i32 [ %and346, %cond.true.345 ], [ 0, %cond.false.347 ]
  br label %cond.end.350

cond.end.350:                                     ; preds = %cond.end.348, %cond.true.339
  %cond351 = phi i32 [ %sub341, %cond.true.339 ], [ %cond349, %cond.end.348 ]
  %251 = load i32, i32* %inside, align 4, !tbaa !5
  %add352 = add nsw i32 %251, %cond351
  store i32 %add352, i32* %inside, align 4, !tbaa !5
  %252 = bitcast i32* %v312 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %252) #1
  %253 = bitcast i32* %k310 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %253) #1
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.459

if.end.353:                                       ; preds = %land.lhs.true.303, %land.lhs.true, %if.end.294
  br label %do.body.354

do.body.354:                                      ; preds = %if.end.353
  br label %do.cond.355

do.cond.355:                                      ; preds = %do.body.354
  br label %do.end.356

do.end.356:                                       ; preds = %do.cond.355
  %254 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %254) #1
  %255 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %256 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %256, i32 0, i32 0
  %y357 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %257 = load i32, i32* %y357, align 4, !tbaa !38
  %cmp358 = icmp sgt i32 %255, %257
  br i1 %cmp358, label %cond.true.360, label %cond.false.361

cond.true.360:                                    ; preds = %do.end.356
  %258 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.365

cond.false.361:                                   ; preds = %do.end.356
  %pbox362 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %259 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox362, align 8, !tbaa !97
  %p363 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %259, i32 0, i32 0
  %y364 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p363, i32 0, i32 1
  %260 = load i32, i32* %y364, align 4, !tbaa !38
  br label %cond.end.365

cond.end.365:                                     ; preds = %cond.false.361, %cond.true.360
  %cond366 = phi i32 [ %258, %cond.true.360 ], [ %260, %cond.false.361 ]
  store i32 %cond366, i32* %ybot, align 4, !tbaa !5
  %261 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %261) #1
  %262 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox367 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %263 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox367, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %263, i32 0, i32 1
  %y368 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %264 = load i32, i32* %y368, align 4, !tbaa !42
  %cmp369 = icmp slt i32 %262, %264
  br i1 %cmp369, label %cond.true.371, label %cond.false.372

cond.true.371:                                    ; preds = %cond.end.365
  %265 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.376

cond.false.372:                                   ; preds = %cond.end.365
  %pbox373 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %266 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox373, align 8, !tbaa !97
  %q374 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %266, i32 0, i32 1
  %y375 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q374, i32 0, i32 1
  %267 = load i32, i32* %y375, align 4, !tbaa !42
  br label %cond.end.376

cond.end.376:                                     ; preds = %cond.false.372, %cond.true.371
  %cond377 = phi i32 [ %265, %cond.true.371 ], [ %267, %cond.false.372 ]
  store i32 %cond377, i32* %ytop, align 4, !tbaa !5
  %268 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end378 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %268, i32 0, i32 1
  %x379 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end378, i32 0, i32 0
  %269 = load i32, i32* %x379, align 4, !tbaa !194
  %270 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start380 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %270, i32 0, i32 0
  %x381 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start380, i32 0, i32 0
  %271 = load i32, i32* %x381, align 4, !tbaa !193
  %cmp382 = icmp eq i32 %269, %271
  br i1 %cmp382, label %land.lhs.true.384, label %if.else.433

land.lhs.true.384:                                ; preds = %cond.end.376
  %272 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end385 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %272, i32 0, i32 1
  %x386 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end385, i32 0, i32 0
  %273 = load i32, i32* %x386, align 4, !tbaa !194
  %274 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start387 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %274, i32 0, i32 0
  %x388 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start387, i32 0, i32 0
  %275 = load i32, i32* %x388, align 4, !tbaa !193
  %cmp389 = icmp eq i32 %273, %275
  br i1 %cmp389, label %if.then.391, label %if.else.433

if.then.391:                                      ; preds = %land.lhs.true.384
  %276 = load i32, i32* %ytop, align 4, !tbaa !5
  %277 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp392 = icmp sgt i32 %276, %277
  br i1 %cmp392, label %if.then.394, label %if.else.431

if.then.394:                                      ; preds = %if.then.391
  %278 = bitcast i32* %yi395 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %278) #1
  %279 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv396 = sext i32 %279 to i64
  %add397 = add nsw i64 %conv396, 127
  %shr398 = ashr i64 %add397, 8
  %conv399 = trunc i64 %shr398 to i32
  store i32 %conv399, i32* %yi395, align 4, !tbaa !5
  %280 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %280) #1
  %281 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv400 = sext i32 %281 to i64
  %add401 = add nsw i64 %conv400, 127
  %shr402 = ashr i64 %add401, 8
  %conv403 = trunc i64 %shr402 to i32
  %282 = load i32, i32* %yi395, align 4, !tbaa !5
  %sub404 = sub nsw i32 %conv403, %282
  store i32 %sub404, i32* %hi, align 4, !tbaa !5
  %283 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %283) #1
  %284 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end405 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %284, i32 0, i32 1
  %x406 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end405, i32 0, i32 0
  %285 = load i32, i32* %x406, align 4, !tbaa !194
  %sub407 = sub nsw i32 %285, 0
  %conv408 = sext i32 %sub407 to i64
  %add409 = add nsw i64 %conv408, 127
  %shr410 = ashr i64 %add409, 8
  %conv411 = trunc i64 %shr410 to i32
  store i32 %conv411, i32* %xli, align 4, !tbaa !5
  %286 = bitcast i32* %xi412 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %286) #1
  %287 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end413 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %287, i32 0, i32 1
  %x414 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end413, i32 0, i32 0
  %288 = load i32, i32* %x414, align 4, !tbaa !194
  %add415 = add nsw i32 %288, 0
  %conv416 = sext i32 %add415 to i64
  %add417 = add nsw i64 %conv416, 127
  %shr418 = ashr i64 %add417, 8
  %conv419 = trunc i64 %shr418 to i32
  store i32 %conv419, i32* %xi412, align 4, !tbaa !5
  br label %do.body.420

do.body.420:                                      ; preds = %if.then.394
  br label %do.cond.421

do.cond.421:                                      ; preds = %do.body.420
  br label %do.end.422

do.end.422:                                       ; preds = %do.cond.421
  %pdevc423 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %289 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc423, align 8, !tbaa !90
  %type424 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %289, i32 0, i32 0
  %290 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type424, align 8, !tbaa !7
  %fill_rectangle425 = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %290, i32 0, i32 5
  %291 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle425, align 8, !tbaa !50
  %pdevc426 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %292 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc426, align 8, !tbaa !90
  %293 = load i32, i32* %xli, align 4, !tbaa !5
  %294 = load i32, i32* %yi395, align 4, !tbaa !5
  %295 = load i32, i32* %xi412, align 4, !tbaa !5
  %296 = load i32, i32* %xli, align 4, !tbaa !5
  %sub427 = sub nsw i32 %295, %296
  %297 = load i32, i32* %hi, align 4, !tbaa !5
  %dev428 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %298 = load %struct.gx_device_s*, %struct.gx_device_s** %dev428, align 8, !tbaa !96
  %lop429 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %299 = load i32, i32* %lop429, align 4, !tbaa !91
  %call430 = call i32 %291(%struct.gx_device_color_s* %292, i32 %293, i32 %294, i32 %sub427, i32 %297, %struct.gx_device_s* %298, i32 %299, %struct.gx_rop_source_s* null) #5
  store i32 %call430, i32* %code191, align 4, !tbaa !5
  %300 = bitcast i32* %xi412 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %300) #1
  %301 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %301) #1
  %302 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %302) #1
  %303 = bitcast i32* %yi395 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %303) #1
  br label %if.end.432

if.else.431:                                      ; preds = %if.then.391
  store i32 0, i32* %code191, align 4, !tbaa !5
  br label %if.end.432

if.end.432:                                       ; preds = %if.else.431, %do.end.422
  br label %if.end.454

if.else.433:                                      ; preds = %land.lhs.true.384, %cond.end.376
  %304 = load i32, i32* %ybot, align 4, !tbaa !5
  %305 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp434 = icmp slt i32 %304, %305
  br i1 %cmp434, label %if.then.436, label %if.else.452

if.then.436:                                      ; preds = %if.else.433
  %306 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %306) #1
  %307 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %307) #1
  %start437 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %308 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start438 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %308, i32 0, i32 0
  %309 = bitcast %struct.gs_fixed_point_s* %start437 to i8*
  %310 = bitcast %struct.gs_fixed_point_s* %start438 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %309, i8* %310, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end439 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %311 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end440 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %311, i32 0, i32 1
  %312 = bitcast %struct.gs_fixed_point_s* %end439 to i8*
  %313 = bitcast %struct.gs_fixed_point_s* %end440 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %312, i8* %313, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start441 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %314 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start442 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %314, i32 0, i32 0
  %315 = bitcast %struct.gs_fixed_point_s* %start441 to i8*
  %316 = bitcast %struct.gs_fixed_point_s* %start442 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %315, i8* %316, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end443 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %317 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end444 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %317, i32 0, i32 1
  %318 = bitcast %struct.gs_fixed_point_s* %end443 to i8*
  %319 = bitcast %struct.gs_fixed_point_s* %end444 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %318, i8* %319, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.445

do.body.445:                                      ; preds = %if.then.436
  br label %do.cond.446

do.cond.446:                                      ; preds = %do.body.445
  br label %do.end.447

do.end.447:                                       ; preds = %do.cond.446
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 17
  %320 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %dev448 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %321 = load %struct.gx_device_s*, %struct.gx_device_s** %dev448, align 8, !tbaa !96
  %322 = load i32, i32* %ybot, align 4, !tbaa !5
  %323 = load i32, i32* %ytop, align 4, !tbaa !5
  %pdevc449 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %324 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc449, align 8, !tbaa !90
  %lop450 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %325 = load i32, i32* %lop450, align 4, !tbaa !91
  %call451 = call i32 %320(%struct.gx_device_s* %321, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %322, i32 %323, i32 0, %struct.gx_device_color_s* %324, i32 %325) #5
  store i32 %call451, i32* %code191, align 4, !tbaa !5
  %326 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %326) #1
  %327 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %327) #1
  br label %if.end.453

if.else.452:                                      ; preds = %if.else.433
  store i32 0, i32* %code191, align 4, !tbaa !5
  br label %if.end.453

if.end.453:                                       ; preds = %if.else.452, %do.end.447
  br label %if.end.454

if.end.454:                                       ; preds = %if.end.453, %if.end.432
  %328 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %328) #1
  %329 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %329) #1
  %330 = load i32, i32* %code191, align 4, !tbaa !5
  %cmp455 = icmp slt i32 %330, 0
  br i1 %cmp455, label %if.then.457, label %if.end.458

if.then.457:                                      ; preds = %if.end.454
  %331 = load i32, i32* %code191, align 4, !tbaa !5
  store i32 %331, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.459

if.end.458:                                       ; preds = %if.end.454
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.459

cleanup.459:                                      ; preds = %if.end.458, %if.then.457, %cond.end.350, %if.then.293, %if.end.245
  %332 = bitcast i32* %code191 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %332) #1
  %cleanup.dest.460 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.460, label %cleanup.465 [
    i32 0, label %cleanup.cont.461
    i32 17, label %for.inc.462
  ]

cleanup.cont.461:                                 ; preds = %cleanup.459
  br label %for.inc.462

for.inc.462:                                      ; preds = %cleanup.cont.461, %cleanup.459
  %333 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next463 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %333, i32 0, i32 15
  %334 = load %struct.active_line_s*, %struct.active_line_s** %next463, align 8, !tbaa !189
  store %struct.active_line_s* %334, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.187

for.end.464:                                      ; preds = %for.cond.187
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.465

cleanup.465:                                      ; preds = %for.end.464, %cleanup.459
  %335 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %335) #1
  %336 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %336) #1
  %cleanup.dest.467 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.467, label %cleanup.479 [
    i32 0, label %cleanup.cont.468
  ]

cleanup.cont.468:                                 ; preds = %cleanup.465
  br label %if.end.470

if.else.469:                                      ; preds = %lor.lhs.false
  br label %if.end.470

if.end.470:                                       ; preds = %if.else.469, %cleanup.cont.468
  %337 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %338 = load i32, i32* %y1, align 4, !tbaa !5
  %call471 = call i32 @move_al_by_y(%struct.line_list_s* %337, i32 %338) #5
  store i32 %call471, i32* %code, align 4, !tbaa !5
  %339 = load i32, i32* %code, align 4, !tbaa !5
  %cmp472 = icmp slt i32 %339, 0
  br i1 %cmp472, label %if.then.474, label %if.end.475

if.then.474:                                      ; preds = %if.end.470
  %340 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %340, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.479

if.end.475:                                       ; preds = %if.end.470
  %341 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0476 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %341, i32 0, i32 8
  %342 = load %struct.active_line_s*, %struct.active_line_s** %h_list0476, align 8, !tbaa !124
  %343 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1477 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %343, i32 0, i32 9
  store %struct.active_line_s* %342, %struct.active_line_s** %h_list1477, align 8, !tbaa !123
  %344 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0478 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %344, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0478, align 8, !tbaa !124
  %345 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %345, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.479

cleanup.479:                                      ; preds = %if.end.475, %if.then.474, %cleanup.465, %if.then.150, %if.then.144, %cleanup.139, %if.then.132, %if.end.99, %if.then.98, %cleanup.88
  %346 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %346) #1
  %347 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %347) #1
  %348 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %348) #1
  %349 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %349) #1
  %cleanup.dest.483 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.483, label %cleanup.486 [
    i32 0, label %cleanup.cont.484
    i32 3, label %while.end.485
    i32 2, label %while.cond
  ]

cleanup.cont.484:                                 ; preds = %cleanup.479
  br label %while.cond

while.end.485:                                    ; preds = %cleanup.479
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.486

cleanup.486:                                      ; preds = %while.end.485, %cleanup.479, %if.then
  %350 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %350) #1
  %351 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %351) #1
  %352 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %352) #1
  %353 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %353) #1
  %354 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %354) #1
  %355 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %355) #1
  %356 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %356) #1
  %357 = load i32, i32* %retval
  ret i32 %357
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__nj_fd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %yi = alloca i32, align 4
  %xi = alloca i32, align 4
  %wi = alloca i32, align 4
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code188 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi273 = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi290 = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.362

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.360, %cleanup.355, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %cleanup.cont.89, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else.85

if.then.35:                                       ; preds = %if.end.32
  %48 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = load i32, i32* %y, align 4, !tbaa !5
  %sub36 = sub nsw i32 %49, 0
  %conv37 = sext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, 127
  %shr = ashr i64 %add38, 8
  %conv39 = trunc i64 %shr to i32
  store i32 %conv39, i32* %yi, align 4, !tbaa !5
  %50 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #1
  %51 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #1
  %52 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 0
  %53 = load i32, i32* %x, align 4, !tbaa !193
  %54 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %55 = load i32, i32* %x41, align 4, !tbaa !194
  %cmp42 = icmp sle i32 %53, %55
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.35
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start45, i32 0, i32 0
  %57 = load i32, i32* %x46, align 4, !tbaa !193
  %sub47 = sub nsw i32 %57, 0
  %conv48 = sext i32 %sub47 to i64
  %add49 = add nsw i64 %conv48, 127
  %shr50 = ashr i64 %add49, 8
  %conv51 = trunc i64 %shr50 to i32
  store i32 %conv51, i32* %xi, align 4, !tbaa !5
  %58 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end52, i32 0, i32 0
  %59 = load i32, i32* %x53, align 4, !tbaa !194
  %add54 = add nsw i32 %59, 0
  %conv55 = sext i32 %add54 to i64
  %add56 = add nsw i64 %conv55, 127
  %shr57 = ashr i64 %add56, 8
  %conv58 = trunc i64 %shr57 to i32
  %60 = load i32, i32* %xi, align 4, !tbaa !5
  %sub59 = sub nsw i32 %conv58, %60
  store i32 %sub59, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.else:                                          ; preds = %if.then.35
  %61 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %61, i32 0, i32 1
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end60, i32 0, i32 0
  %62 = load i32, i32* %x61, align 4, !tbaa !194
  %sub62 = sub nsw i32 %62, 0
  %conv63 = sext i32 %sub62 to i64
  %add64 = add nsw i64 %conv63, 127
  %shr65 = ashr i64 %add64, 8
  %conv66 = trunc i64 %shr65 to i32
  store i32 %conv66, i32* %xi, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 0
  %64 = load i32, i32* %x68, align 4, !tbaa !193
  %add69 = add nsw i32 %64, 0
  %conv70 = sext i32 %add69 to i64
  %add71 = add nsw i64 %conv70, 127
  %shr72 = ashr i64 %add71, 8
  %conv73 = trunc i64 %shr72 to i32
  %65 = load i32, i32* %xi, align 4, !tbaa !5
  %sub74 = sub nsw i32 %conv73, %65
  store i32 %sub74, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.end.75:                                        ; preds = %if.else, %if.then.44
  br label %do.body.76

do.body.76:                                       ; preds = %if.end.75
  br label %do.cond.77

do.cond.77:                                       ; preds = %do.body.76
  br label %do.end.78

do.end.78:                                        ; preds = %do.cond.77
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %66 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %67 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %68 = load i32, i32* %xi, align 4, !tbaa !5
  %69 = load i32, i32* %yi, align 4, !tbaa !5
  %70 = load i32, i32* %wi, align 4, !tbaa !5
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %71 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %71, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %72 = load i64, i64* %pure, align 8, !tbaa !203
  %call = call i32 %66(%struct.gx_device_s* %67, i32 %68, i32 %69, i32 %70, i32 1, i64 %72) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %73 = load i32, i32* %code, align 4, !tbaa !5
  %cmp79 = icmp slt i32 %73, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %do.end.78
  %74 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %74, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %do.end.78
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.82, %if.then.81
  %75 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %75) #1
  %76 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %76) #1
  %77 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.87 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.86

if.else.85:                                       ; preds = %if.end.32
  %78 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %79 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %78, %struct.line_list_s* %79) #5
  br label %if.end.86

if.end.86:                                        ; preds = %if.else.85, %cleanup.cont
  %80 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %80, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.87

cleanup.87:                                       ; preds = %if.end.86, %cleanup
  %81 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %cleanup.dest.88 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.88, label %cleanup.355 [
    i32 0, label %cleanup.cont.89
  ]

cleanup.cont.89:                                  ; preds = %cleanup.87
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %82 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head90 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %82, i32 0, i32 7
  %next91 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head90, i32 0, i32 15
  %83 = load %struct.active_line_s*, %struct.active_line_s** %next91, align 8, !tbaa !201
  %cmp92 = icmp eq %struct.active_line_s* %83, null
  br i1 %cmp92, label %if.then.94, label %if.end.102

if.then.94:                                       ; preds = %while.end
  %84 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp95 = icmp eq %struct.active_line_s* %84, null
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.then.94
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.355

if.end.98:                                        ; preds = %if.then.94
  %85 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start99 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %85, i32 0, i32 0
  %y100 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start99, i32 0, i32 1
  %86 = load i32, i32* %y100, align 4, !tbaa !187
  store i32 %86, i32* %y, align 4, !tbaa !5
  %87 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %87, i32 0, i32 8
  %88 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %89 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %89, i32 0, i32 9
  store %struct.active_line_s* %88, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %90 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0101 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %90, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0101, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.355

if.end.102:                                       ; preds = %while.end
  %91 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp103 = icmp ne %struct.active_line_s* %91, null
  br i1 %cmp103, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.102
  %92 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start105 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %92, i32 0, i32 0
  %y106 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start105, i32 0, i32 1
  %93 = load i32, i32* %y106, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.102
  %94 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %94, i32 0, i32 18
  %95 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %93, %cond.true ], [ %95, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %96 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %96) #1
  %97 = load i32, i32* %y, align 4, !tbaa !5
  %98 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %98, -1
  %or = or i32 %97, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %99 = load i32, i32* %y1, align 4, !tbaa !5
  %100 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp107 = icmp sgt i32 %99, %100
  br i1 %cmp107, label %if.then.109, label %if.end.111

if.then.109:                                      ; preds = %cond.end
  %101 = load i32, i32* %y_band, align 4, !tbaa !5
  %add110 = add nsw i32 %101, 1
  store i32 %add110, i32* %y1, align 4, !tbaa !5
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.109, %cond.end
  %102 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #1
  %103 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head112 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %103, i32 0, i32 7
  %next113 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head112, i32 0, i32 15
  %104 = load %struct.active_line_s*, %struct.active_line_s** %next113, align 8, !tbaa !201
  store %struct.active_line_s* %104, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.111
  %105 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp114 = icmp ne %struct.active_line_s* %105, null
  br i1 %cmp114, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %106 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end116 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %106, i32 0, i32 1
  %y117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end116, i32 0, i32 1
  %107 = load i32, i32* %y117, align 4, !tbaa !195
  %108 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp118 = icmp slt i32 %107, %108
  br i1 %cmp118, label %if.then.120, label %if.end.123

if.then.120:                                      ; preds = %for.body
  %109 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end121 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %109, i32 0, i32 1
  %y122 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end121, i32 0, i32 1
  %110 = load i32, i32* %y122, align 4, !tbaa !195
  store i32 %110, i32* %y1, align 4, !tbaa !5
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.120, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.123
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next124 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 15
  %112 = load %struct.active_line_s*, %struct.active_line_s** %next124, align 8, !tbaa !189
  store %struct.active_line_s* %112, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %113 = load i32, i32* %y, align 4, !tbaa !5
  %114 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp125 = icmp eq i32 %113, %114
  br i1 %cmp125, label %if.then.127, label %if.end.146

if.then.127:                                      ; preds = %for.end
  %115 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %116 = load i32, i32* %y, align 4, !tbaa !5
  %call128 = call i32 @process_h_segments(%struct.line_list_s* %115, i32 %116) #5
  store i32 %call128, i32* %code, align 4, !tbaa !5
  %117 = load i32, i32* %code, align 4, !tbaa !5
  %cmp129 = icmp slt i32 %117, 0
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.then.127
  %118 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %118, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.355

if.end.132:                                       ; preds = %if.then.127
  %119 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %119) #1
  %120 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %121 = load i32, i32* %y1, align 4, !tbaa !5
  %call133 = call i32 @move_al_by_y(%struct.line_list_s* %120, i32 %121) #5
  store i32 %call133, i32* %code1, align 4, !tbaa !5
  %122 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp134 = icmp slt i32 %122, 0
  br i1 %cmp134, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %if.end.132
  %123 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %123, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.137:                                       ; preds = %if.end.132
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.138

cleanup.138:                                      ; preds = %if.end.137, %if.then.136
  %124 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %124) #1
  %cleanup.dest.139 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.139, label %cleanup.355 [
    i32 0, label %cleanup.cont.140
  ]

cleanup.cont.140:                                 ; preds = %cleanup.138
  %125 = load i32, i32* %code, align 4, !tbaa !5
  %cmp141 = icmp sgt i32 %125, 0
  br i1 %cmp141, label %if.then.143, label %if.end.145

if.then.143:                                      ; preds = %cleanup.cont.140
  %126 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list144 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %126, i32 0, i32 5
  %127 = load %struct.active_line_s*, %struct.active_line_s** %y_list144, align 8, !tbaa !121
  store %struct.active_line_s* %127, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.355

if.end.145:                                       ; preds = %cleanup.cont.140
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %for.end
  %128 = load i32, i32* %y, align 4, !tbaa !5
  %129 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp147 = icmp sge i32 %128, %129
  br i1 %cmp147, label %if.then.149, label %if.end.150

if.then.149:                                      ; preds = %if.end.146
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.355

if.end.150:                                       ; preds = %if.end.146
  %130 = load i32, i32* %y, align 4, !tbaa !5
  %sub151 = sub nsw i32 %130, 0
  %conv152 = sext i32 %sub151 to i64
  %add153 = add nsw i64 %conv152, 127
  %and154 = and i64 %add153, -256
  %131 = load i32, i32* %y1, align 4, !tbaa !5
  %add155 = add nsw i32 %131, 0
  %conv156 = sext i32 %add155 to i64
  %add157 = add nsw i64 %conv156, 127
  %and158 = and i64 %add157, -256
  %cmp159 = icmp slt i64 %and154, %and158
  %conv160 = zext i1 %cmp159 to i32
  store i32 %conv160, i32* %covering_pixel_centers, align 4, !tbaa !5
  %132 = load i32, i32* %y, align 4, !tbaa !5
  %133 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp161 = icmp ne i32 %132, %133
  br i1 %cmp161, label %if.then.163, label %if.end.175

if.then.163:                                      ; preds = %if.end.150
  %134 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %135 = load i32, i32* %y, align 4, !tbaa !5
  %136 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %136, 0
  %cond164 = select i1 %tobool, i32 1, i32 -1
  %137 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %134, i32 %135, i32* %y1, i32 %cond164, i32 %137) #5
  %138 = load i32, i32* %y, align 4, !tbaa !5
  %sub165 = sub nsw i32 %138, 0
  %conv166 = sext i32 %sub165 to i64
  %add167 = add nsw i64 %conv166, 127
  %and168 = and i64 %add167, -256
  %139 = load i32, i32* %y1, align 4, !tbaa !5
  %add169 = add nsw i32 %139, 0
  %conv170 = sext i32 %add169 to i64
  %add171 = add nsw i64 %conv170, 127
  %and172 = and i64 %add171, -256
  %cmp173 = icmp slt i64 %and168, %and172
  %conv174 = zext i1 %cmp173 to i32
  store i32 %conv174, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.175

if.end.175:                                       ; preds = %if.then.163, %if.end.150
  %140 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool176 = icmp ne i32 %140, 0
  br i1 %tobool176, label %if.then.178, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.175
  %141 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool177 = icmp ne i32 %141, 0
  br i1 %tobool177, label %if.then.178, label %if.else.345

if.then.178:                                      ; preds = %lor.lhs.false, %if.end.175
  %142 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %142) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %143 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %143) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %do.body.179

do.body.179:                                      ; preds = %if.then.178
  br label %do.cond.180

do.cond.180:                                      ; preds = %do.body.179
  br label %do.end.181

do.end.181:                                       ; preds = %do.cond.180
  %144 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head182 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %144, i32 0, i32 7
  %next183 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head182, i32 0, i32 15
  %145 = load %struct.active_line_s*, %struct.active_line_s** %next183, align 8, !tbaa !201
  store %struct.active_line_s* %145, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.184

for.cond.184:                                     ; preds = %for.inc.338, %do.end.181
  %146 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp185 = icmp ne %struct.active_line_s* %146, null
  br i1 %cmp185, label %for.body.187, label %for.end.340

for.body.187:                                     ; preds = %for.cond.184
  %147 = bitcast i32* %code188 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %147) #1
  br label %do.body.189

do.body.189:                                      ; preds = %for.body.187
  br label %do.cond.190

do.cond.190:                                      ; preds = %do.body.189
  br label %do.end.191

do.end.191:                                       ; preds = %do.cond.190
  br label %do.body.192

do.body.192:                                      ; preds = %do.end.191
  br label %do.cond.193

do.cond.193:                                      ; preds = %do.body.192
  br label %do.end.194

do.end.194:                                       ; preds = %do.cond.193
  %148 = load i32, i32* %inside, align 4, !tbaa !5
  %149 = load i32, i32* %rule, align 4, !tbaa !5
  %and195 = and i32 %148, %149
  %cmp196 = icmp ne i32 %and195, 0
  br i1 %cmp196, label %if.end.206, label %if.then.198

if.then.198:                                      ; preds = %do.end.194
  %150 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction199 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %150, i32 0, i32 8
  %151 = load i32, i32* %direction199, align 4, !tbaa !178
  %152 = load i32, i32* %inside, align 4, !tbaa !5
  %add200 = add nsw i32 %152, %151
  store i32 %add200, i32* %inside, align 4, !tbaa !5
  %153 = load i32, i32* %inside, align 4, !tbaa !5
  %154 = load i32, i32* %rule, align 4, !tbaa !5
  %and201 = and i32 %153, %154
  %cmp202 = icmp ne i32 %and201, 0
  br i1 %cmp202, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.then.198
  %155 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %155, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.204, %if.then.198
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.335

if.end.206:                                       ; preds = %do.end.194
  %156 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction207 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %156, i32 0, i32 8
  %157 = load i32, i32* %direction207, align 4, !tbaa !178
  %158 = load i32, i32* %inside, align 4, !tbaa !5
  %add208 = add nsw i32 %158, %157
  store i32 %add208, i32* %inside, align 4, !tbaa !5
  %159 = load i32, i32* %inside, align 4, !tbaa !5
  %160 = load i32, i32* %rule, align 4, !tbaa !5
  %and209 = and i32 %159, %160
  %cmp210 = icmp ne i32 %and209, 0
  br i1 %cmp210, label %if.then.212, label %if.end.213

if.then.212:                                      ; preds = %if.end.206
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.335

if.end.213:                                       ; preds = %if.end.206
  %161 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next214 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %161, i32 0, i32 15
  %162 = load %struct.active_line_s*, %struct.active_line_s** %next214, align 8, !tbaa !189
  %cmp215 = icmp ne %struct.active_line_s* %162, null
  br i1 %cmp215, label %land.lhs.true, label %if.end.231

land.lhs.true:                                    ; preds = %if.end.213
  %163 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current217 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %163, i32 0, i32 5
  %164 = load i32, i32* %x_current217, align 4, !tbaa !204
  %165 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next218 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %165, i32 0, i32 15
  %166 = load %struct.active_line_s*, %struct.active_line_s** %next218, align 8, !tbaa !189
  %x_current219 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %166, i32 0, i32 5
  %167 = load i32, i32* %x_current219, align 4, !tbaa !204
  %cmp220 = icmp eq i32 %164, %167
  br i1 %cmp220, label %land.lhs.true.222, label %if.end.231

land.lhs.true.222:                                ; preds = %land.lhs.true
  %168 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %168, i32 0, i32 6
  %169 = load i32, i32* %x_next, align 4, !tbaa !205
  %170 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next223 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %170, i32 0, i32 15
  %171 = load %struct.active_line_s*, %struct.active_line_s** %next223, align 8, !tbaa !189
  %x_next224 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %171, i32 0, i32 6
  %172 = load i32, i32* %x_next224, align 4, !tbaa !205
  %cmp225 = icmp eq i32 %169, %172
  br i1 %cmp225, label %if.then.227, label %if.end.231

if.then.227:                                      ; preds = %land.lhs.true.222
  %173 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next228 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 15
  %174 = load %struct.active_line_s*, %struct.active_line_s** %next228, align 8, !tbaa !189
  store %struct.active_line_s* %174, %struct.active_line_s** %alp, align 8, !tbaa !1
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction229 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 8
  %176 = load i32, i32* %direction229, align 4, !tbaa !178
  %177 = load i32, i32* %inside, align 4, !tbaa !5
  %add230 = add nsw i32 %177, %176
  store i32 %add230, i32* %inside, align 4, !tbaa !5
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.335

if.end.231:                                       ; preds = %land.lhs.true.222, %land.lhs.true, %if.end.213
  br label %do.body.232

do.body.232:                                      ; preds = %if.end.231
  br label %do.cond.233

do.cond.233:                                      ; preds = %do.body.232
  br label %do.end.234

do.end.234:                                       ; preds = %do.cond.233
  %178 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %178) #1
  %179 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %180 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %180, i32 0, i32 0
  %y235 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %181 = load i32, i32* %y235, align 4, !tbaa !38
  %cmp236 = icmp sgt i32 %179, %181
  br i1 %cmp236, label %cond.true.238, label %cond.false.239

cond.true.238:                                    ; preds = %do.end.234
  %182 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.243

cond.false.239:                                   ; preds = %do.end.234
  %pbox240 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %183 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox240, align 8, !tbaa !97
  %p241 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %183, i32 0, i32 0
  %y242 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p241, i32 0, i32 1
  %184 = load i32, i32* %y242, align 4, !tbaa !38
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.false.239, %cond.true.238
  %cond244 = phi i32 [ %182, %cond.true.238 ], [ %184, %cond.false.239 ]
  store i32 %cond244, i32* %ybot, align 4, !tbaa !5
  %185 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %185) #1
  %186 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox245 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %187 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox245, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %187, i32 0, i32 1
  %y246 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %188 = load i32, i32* %y246, align 4, !tbaa !42
  %cmp247 = icmp slt i32 %186, %188
  br i1 %cmp247, label %cond.true.249, label %cond.false.250

cond.true.249:                                    ; preds = %cond.end.243
  %189 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.254

cond.false.250:                                   ; preds = %cond.end.243
  %pbox251 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %190 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox251, align 8, !tbaa !97
  %q252 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %190, i32 0, i32 1
  %y253 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q252, i32 0, i32 1
  %191 = load i32, i32* %y253, align 4, !tbaa !42
  br label %cond.end.254

cond.end.254:                                     ; preds = %cond.false.250, %cond.true.249
  %cond255 = phi i32 [ %189, %cond.true.249 ], [ %191, %cond.false.250 ]
  store i32 %cond255, i32* %ytop, align 4, !tbaa !5
  %192 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end256 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %192, i32 0, i32 1
  %x257 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end256, i32 0, i32 0
  %193 = load i32, i32* %x257, align 4, !tbaa !194
  %194 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start258 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %194, i32 0, i32 0
  %x259 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start258, i32 0, i32 0
  %195 = load i32, i32* %x259, align 4, !tbaa !193
  %cmp260 = icmp eq i32 %193, %195
  br i1 %cmp260, label %land.lhs.true.262, label %if.else.310

land.lhs.true.262:                                ; preds = %cond.end.254
  %196 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end263 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %196, i32 0, i32 1
  %x264 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end263, i32 0, i32 0
  %197 = load i32, i32* %x264, align 4, !tbaa !194
  %198 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start265 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %198, i32 0, i32 0
  %x266 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start265, i32 0, i32 0
  %199 = load i32, i32* %x266, align 4, !tbaa !193
  %cmp267 = icmp eq i32 %197, %199
  br i1 %cmp267, label %if.then.269, label %if.else.310

if.then.269:                                      ; preds = %land.lhs.true.262
  %200 = load i32, i32* %ytop, align 4, !tbaa !5
  %201 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp270 = icmp sgt i32 %200, %201
  br i1 %cmp270, label %if.then.272, label %if.else.308

if.then.272:                                      ; preds = %if.then.269
  %202 = bitcast i32* %yi273 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %202) #1
  %203 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv274 = sext i32 %203 to i64
  %add275 = add nsw i64 %conv274, 127
  %shr276 = ashr i64 %add275, 8
  %conv277 = trunc i64 %shr276 to i32
  store i32 %conv277, i32* %yi273, align 4, !tbaa !5
  %204 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %204) #1
  %205 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv278 = sext i32 %205 to i64
  %add279 = add nsw i64 %conv278, 127
  %shr280 = ashr i64 %add279, 8
  %conv281 = trunc i64 %shr280 to i32
  %206 = load i32, i32* %yi273, align 4, !tbaa !5
  %sub282 = sub nsw i32 %conv281, %206
  store i32 %sub282, i32* %hi, align 4, !tbaa !5
  %207 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %207) #1
  %208 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end283 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %208, i32 0, i32 1
  %x284 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end283, i32 0, i32 0
  %209 = load i32, i32* %x284, align 4, !tbaa !194
  %sub285 = sub nsw i32 %209, 0
  %conv286 = sext i32 %sub285 to i64
  %add287 = add nsw i64 %conv286, 127
  %shr288 = ashr i64 %add287, 8
  %conv289 = trunc i64 %shr288 to i32
  store i32 %conv289, i32* %xli, align 4, !tbaa !5
  %210 = bitcast i32* %xi290 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %210) #1
  %211 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end291 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %211, i32 0, i32 1
  %x292 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end291, i32 0, i32 0
  %212 = load i32, i32* %x292, align 4, !tbaa !194
  %add293 = add nsw i32 %212, 0
  %conv294 = sext i32 %add293 to i64
  %add295 = add nsw i64 %conv294, 127
  %shr296 = ashr i64 %add295, 8
  %conv297 = trunc i64 %shr296 to i32
  store i32 %conv297, i32* %xi290, align 4, !tbaa !5
  br label %do.body.298

do.body.298:                                      ; preds = %if.then.272
  br label %do.cond.299

do.cond.299:                                      ; preds = %do.body.298
  br label %do.end.300

do.end.300:                                       ; preds = %do.cond.299
  %fill_rect301 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %213 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect301, align 8, !tbaa !102
  %dev302 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %214 = load %struct.gx_device_s*, %struct.gx_device_s** %dev302, align 8, !tbaa !96
  %215 = load i32, i32* %xli, align 4, !tbaa !5
  %216 = load i32, i32* %yi273, align 4, !tbaa !5
  %217 = load i32, i32* %xi290, align 4, !tbaa !5
  %218 = load i32, i32* %xli, align 4, !tbaa !5
  %sub303 = sub nsw i32 %217, %218
  %219 = load i32, i32* %hi, align 4, !tbaa !5
  %pdevc304 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %220 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc304, align 8, !tbaa !90
  %colors305 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %220, i32 0, i32 1
  %pure306 = bitcast %union._c* %colors305 to i64*
  %221 = load i64, i64* %pure306, align 8, !tbaa !203
  %call307 = call i32 %213(%struct.gx_device_s* %214, i32 %215, i32 %216, i32 %sub303, i32 %219, i64 %221) #5
  store i32 %call307, i32* %code188, align 4, !tbaa !5
  %222 = bitcast i32* %xi290 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %222) #1
  %223 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %223) #1
  %224 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %224) #1
  %225 = bitcast i32* %yi273 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %225) #1
  br label %if.end.309

if.else.308:                                      ; preds = %if.then.269
  store i32 0, i32* %code188, align 4, !tbaa !5
  br label %if.end.309

if.end.309:                                       ; preds = %if.else.308, %do.end.300
  br label %if.end.330

if.else.310:                                      ; preds = %land.lhs.true.262, %cond.end.254
  %226 = load i32, i32* %ybot, align 4, !tbaa !5
  %227 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp311 = icmp slt i32 %226, %227
  br i1 %cmp311, label %if.then.313, label %if.else.328

if.then.313:                                      ; preds = %if.else.310
  %228 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %228) #1
  %229 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %229) #1
  %start314 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %230 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start315 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %230, i32 0, i32 0
  %231 = bitcast %struct.gs_fixed_point_s* %start314 to i8*
  %232 = bitcast %struct.gs_fixed_point_s* %start315 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %231, i8* %232, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end316 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %233 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end317 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %233, i32 0, i32 1
  %234 = bitcast %struct.gs_fixed_point_s* %end316 to i8*
  %235 = bitcast %struct.gs_fixed_point_s* %end317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %234, i8* %235, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start318 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %236 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start319 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %236, i32 0, i32 0
  %237 = bitcast %struct.gs_fixed_point_s* %start318 to i8*
  %238 = bitcast %struct.gs_fixed_point_s* %start319 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end320 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %239 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end321 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %239, i32 0, i32 1
  %240 = bitcast %struct.gs_fixed_point_s* %end320 to i8*
  %241 = bitcast %struct.gs_fixed_point_s* %end321 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %240, i8* %241, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.322

do.body.322:                                      ; preds = %if.then.313
  br label %do.cond.323

do.cond.323:                                      ; preds = %do.body.322
  br label %do.end.324

do.end.324:                                       ; preds = %do.cond.323
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 17
  %242 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %dev325 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %243 = load %struct.gx_device_s*, %struct.gx_device_s** %dev325, align 8, !tbaa !96
  %244 = load i32, i32* %ybot, align 4, !tbaa !5
  %245 = load i32, i32* %ytop, align 4, !tbaa !5
  %pdevc326 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %246 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc326, align 8, !tbaa !90
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %247 = load i32, i32* %lop, align 4, !tbaa !91
  %call327 = call i32 %242(%struct.gx_device_s* %243, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %244, i32 %245, i32 0, %struct.gx_device_color_s* %246, i32 %247) #5
  store i32 %call327, i32* %code188, align 4, !tbaa !5
  %248 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %248) #1
  %249 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %249) #1
  br label %if.end.329

if.else.328:                                      ; preds = %if.else.310
  store i32 0, i32* %code188, align 4, !tbaa !5
  br label %if.end.329

if.end.329:                                       ; preds = %if.else.328, %do.end.324
  br label %if.end.330

if.end.330:                                       ; preds = %if.end.329, %if.end.309
  %250 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %250) #1
  %251 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %251) #1
  %252 = load i32, i32* %code188, align 4, !tbaa !5
  %cmp331 = icmp slt i32 %252, 0
  br i1 %cmp331, label %if.then.333, label %if.end.334

if.then.333:                                      ; preds = %if.end.330
  %253 = load i32, i32* %code188, align 4, !tbaa !5
  store i32 %253, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.335

if.end.334:                                       ; preds = %if.end.330
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.335

cleanup.335:                                      ; preds = %if.end.334, %if.then.333, %if.then.227, %if.then.212, %if.end.205
  %254 = bitcast i32* %code188 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %254) #1
  %cleanup.dest.336 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.336, label %cleanup.341 [
    i32 0, label %cleanup.cont.337
    i32 17, label %for.inc.338
  ]

cleanup.cont.337:                                 ; preds = %cleanup.335
  br label %for.inc.338

for.inc.338:                                      ; preds = %cleanup.cont.337, %cleanup.335
  %255 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next339 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %255, i32 0, i32 15
  %256 = load %struct.active_line_s*, %struct.active_line_s** %next339, align 8, !tbaa !189
  store %struct.active_line_s* %256, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.184

for.end.340:                                      ; preds = %for.cond.184
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.341

cleanup.341:                                      ; preds = %for.end.340, %cleanup.335
  %257 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %257) #1
  %258 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %258) #1
  %cleanup.dest.343 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.343, label %cleanup.355 [
    i32 0, label %cleanup.cont.344
  ]

cleanup.cont.344:                                 ; preds = %cleanup.341
  br label %if.end.346

if.else.345:                                      ; preds = %lor.lhs.false
  br label %if.end.346

if.end.346:                                       ; preds = %if.else.345, %cleanup.cont.344
  %259 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %260 = load i32, i32* %y1, align 4, !tbaa !5
  %call347 = call i32 @move_al_by_y(%struct.line_list_s* %259, i32 %260) #5
  store i32 %call347, i32* %code, align 4, !tbaa !5
  %261 = load i32, i32* %code, align 4, !tbaa !5
  %cmp348 = icmp slt i32 %261, 0
  br i1 %cmp348, label %if.then.350, label %if.end.351

if.then.350:                                      ; preds = %if.end.346
  %262 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %262, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.355

if.end.351:                                       ; preds = %if.end.346
  %263 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0352 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %263, i32 0, i32 8
  %264 = load %struct.active_line_s*, %struct.active_line_s** %h_list0352, align 8, !tbaa !124
  %265 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1353 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %265, i32 0, i32 9
  store %struct.active_line_s* %264, %struct.active_line_s** %h_list1353, align 8, !tbaa !123
  %266 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0354 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %266, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0354, align 8, !tbaa !124
  %267 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %267, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.355

cleanup.355:                                      ; preds = %if.end.351, %if.then.350, %cleanup.341, %if.then.149, %if.then.143, %cleanup.138, %if.then.131, %if.end.98, %if.then.97, %cleanup.87
  %268 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %268) #1
  %269 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %269) #1
  %270 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %270) #1
  %271 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %271) #1
  %cleanup.dest.359 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.359, label %cleanup.362 [
    i32 0, label %cleanup.cont.360
    i32 3, label %while.end.361
    i32 2, label %while.cond
  ]

cleanup.cont.360:                                 ; preds = %cleanup.355
  br label %while.cond

while.end.361:                                    ; preds = %cleanup.355
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.362

cleanup.362:                                      ; preds = %while.end.361, %cleanup.355, %if.then
  %272 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %272) #1
  %273 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %273) #1
  %274 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %274) #1
  %275 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %275) #1
  %276 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %276) #1
  %277 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %277) #1
  %278 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %278) #1
  %279 = load i32, i32* %retval
  ret i32 %279
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_trapezoids__nj_nd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %rule = alloca i32, align 4
  %y_limit = alloca i32, align 4
  %yll = alloca %struct.active_line_s*, align 8
  %y = alloca i32, align 4
  %code = alloca i32, align 4
  %all_bands = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %plp = alloca %struct.active_line_s*, align 8
  %covering_pixel_centers = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %yi = alloca i32, align 4
  %xi = alloca i32, align 4
  %wi = alloca i32, align 4
  %y_band = alloca i32, align 4
  %code1 = alloca i32, align 4
  %inside = alloca i32, align 4
  %flp = alloca %struct.active_line_s*, align 8
  %code189 = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %yi274 = alloca i32, align 4
  %hi = alloca i32, align 4
  %xli = alloca i32, align 4
  %xi291 = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %rule2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %6 = load i32, i32* %rule2, align 4, !tbaa !98
  store i32 %6, i32* %rule, align 4, !tbaa !5
  %7 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %8 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %8, i32* %y_limit, align 4, !tbaa !5
  %9 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 5
  %11 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %11, %struct.active_line_s** %yll, align 8, !tbaa !1
  %12 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %is_spotan = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 14
  %15 = load i32, i32* %is_spotan, align 4, !tbaa !99
  store i32 %15, i32* %all_bands, align 4, !tbaa !5
  %16 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp = icmp eq %struct.active_line_s* %16, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.365

if.end:                                           ; preds = %entry
  %17 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 0
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %18 = load i32, i32* %y3, align 4, !tbaa !187
  store i32 %18, i32* %y, align 4, !tbaa !5
  %19 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %19, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head4 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %20, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head4, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  %21 = load i32, i32* %y, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %sub = sub nsw i64 %and, 128
  %conv5 = trunc i64 %sub to i32
  %22 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %22, i32 0, i32 10
  %y6 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set0, i32 0, i32 0
  store i32 %conv5, i32* %y6, align 4, !tbaa !130
  %23 = load i32, i32* %y, align 4, !tbaa !5
  %conv7 = sext i32 %23 to i64
  %add8 = add nsw i64 %conv7, 127
  %and9 = and i64 %add8, -256
  %sub10 = sub nsw i64 %and9, 256
  %sub11 = sub nsw i64 %sub10, 128
  %conv12 = trunc i64 %sub11 to i32
  %24 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %24, i32 0, i32 11
  %y13 = getelementptr inbounds %struct.margin_set_s, %struct.margin_set_s* %margin_set1, i32 0, i32 0
  store i32 %conv12, i32* %y13, align 4, !tbaa !129
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont.363, %cleanup.358, %if.end
  br label %while.body

while.body:                                       ; preds = %while.cond
  %25 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  store %struct.active_line_s* null, %struct.active_line_s** %plp, align 8, !tbaa !1
  %28 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond.14

while.cond.14:                                    ; preds = %cleanup.cont.90, %do.end
  %29 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp15 = icmp ne %struct.active_line_s* %29, null
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.14
  %30 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 1
  %31 = load i32, i32* %y18, align 4, !tbaa !187
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %cmp19 = icmp eq i32 %31, %32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.14
  %33 = phi i1 [ false, %while.cond.14 ], [ %cmp19, %land.rhs ]
  br i1 %33, label %while.body.21, label %while.end

while.body.21:                                    ; preds = %land.end
  %34 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %34) #1
  %35 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next22, align 8, !tbaa !189
  store %struct.active_line_s* %36, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %37 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list23 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 5
  store %struct.active_line_s* %37, %struct.active_line_s** %y_list23, align 8, !tbaa !121
  %39 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %39, i32 0, i32 6
  %40 = load %struct.active_line_s*, %struct.active_line_s** %y_line, align 8, !tbaa !122
  %41 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp24 = icmp eq %struct.active_line_s* %40, %41
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %while.body.21
  %42 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %43 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_line27 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %43, i32 0, i32 6
  store %struct.active_line_s* %42, %struct.active_line_s** %y_line27, align 8, !tbaa !122
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %while.body.21
  %44 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %cmp29 = icmp ne %struct.active_line_s* %44, null
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %45 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %if.end.28
  %46 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 8
  %47 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp33 = icmp eq i32 %47, 0
  br i1 %cmp33, label %if.then.35, label %if.else.86

if.then.35:                                       ; preds = %if.end.32
  %48 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #1
  %49 = load i32, i32* %y, align 4, !tbaa !5
  %sub36 = sub nsw i32 %49, 0
  %conv37 = sext i32 %sub36 to i64
  %add38 = add nsw i64 %conv37, 127
  %shr = ashr i64 %add38, 8
  %conv39 = trunc i64 %shr to i32
  store i32 %conv39, i32* %yi, align 4, !tbaa !5
  %50 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #1
  %51 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #1
  %52 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 0
  %53 = load i32, i32* %x, align 4, !tbaa !193
  %54 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %55 = load i32, i32* %x41, align 4, !tbaa !194
  %cmp42 = icmp sle i32 %53, %55
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %if.then.35
  %56 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start45, i32 0, i32 0
  %57 = load i32, i32* %x46, align 4, !tbaa !193
  %sub47 = sub nsw i32 %57, 0
  %conv48 = sext i32 %sub47 to i64
  %add49 = add nsw i64 %conv48, 127
  %shr50 = ashr i64 %add49, 8
  %conv51 = trunc i64 %shr50 to i32
  store i32 %conv51, i32* %xi, align 4, !tbaa !5
  %58 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end52, i32 0, i32 0
  %59 = load i32, i32* %x53, align 4, !tbaa !194
  %add54 = add nsw i32 %59, 0
  %conv55 = sext i32 %add54 to i64
  %add56 = add nsw i64 %conv55, 127
  %shr57 = ashr i64 %add56, 8
  %conv58 = trunc i64 %shr57 to i32
  %60 = load i32, i32* %xi, align 4, !tbaa !5
  %sub59 = sub nsw i32 %conv58, %60
  store i32 %sub59, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.else:                                          ; preds = %if.then.35
  %61 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %end60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %61, i32 0, i32 1
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end60, i32 0, i32 0
  %62 = load i32, i32* %x61, align 4, !tbaa !194
  %sub62 = sub nsw i32 %62, 0
  %conv63 = sext i32 %sub62 to i64
  %add64 = add nsw i64 %conv63, 127
  %shr65 = ashr i64 %add64, 8
  %conv66 = trunc i64 %shr65 to i32
  store i32 %conv66, i32* %xi, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 0
  %64 = load i32, i32* %x68, align 4, !tbaa !193
  %add69 = add nsw i32 %64, 0
  %conv70 = sext i32 %add69 to i64
  %add71 = add nsw i64 %conv70, 127
  %shr72 = ashr i64 %add71, 8
  %conv73 = trunc i64 %shr72 to i32
  %65 = load i32, i32* %xi, align 4, !tbaa !5
  %sub74 = sub nsw i32 %conv73, %65
  store i32 %sub74, i32* %wi, align 4, !tbaa !5
  br label %if.end.75

if.end.75:                                        ; preds = %if.else, %if.then.44
  br label %do.body.76

do.body.76:                                       ; preds = %if.end.75
  br label %do.cond.77

do.cond.77:                                       ; preds = %do.body.76
  br label %do.end.78

do.end.78:                                        ; preds = %do.cond.77
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %66 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %66, i32 0, i32 0
  %67 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %67, i32 0, i32 5
  %68 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %pdevc79 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %69 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc79, align 8, !tbaa !90
  %70 = load i32, i32* %xi, align 4, !tbaa !5
  %71 = load i32, i32* %yi, align 4, !tbaa !5
  %72 = load i32, i32* %wi, align 4, !tbaa !5
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %73 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %74 = load i32, i32* %lop, align 4, !tbaa !91
  %call = call i32 %68(%struct.gx_device_color_s* %69, i32 %70, i32 %71, i32 %72, i32 1, %struct.gx_device_s* %73, i32 %74, %struct.gx_rop_source_s* null) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %75 = load i32, i32* %code, align 4, !tbaa !5
  %cmp80 = icmp slt i32 %75, 0
  br i1 %cmp80, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %do.end.78
  %76 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %76, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.83:                                        ; preds = %do.end.78
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.83, %if.then.82
  %77 = bitcast i32* %wi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #1
  %78 = bitcast i32* %xi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #1
  %79 = bitcast i32* %yi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.88 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.87

if.else.86:                                       ; preds = %if.end.32
  %80 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %81 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %80, %struct.line_list_s* %81) #5
  br label %if.end.87

if.end.87:                                        ; preds = %if.else.86, %cleanup.cont
  %82 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %82, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.88

cleanup.88:                                       ; preds = %if.end.87, %cleanup
  %83 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #1
  %cleanup.dest.89 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.89, label %cleanup.358 [
    i32 0, label %cleanup.cont.90
  ]

cleanup.cont.90:                                  ; preds = %cleanup.88
  br label %while.cond.14

while.end:                                        ; preds = %land.end
  %84 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head91 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %84, i32 0, i32 7
  %next92 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head91, i32 0, i32 15
  %85 = load %struct.active_line_s*, %struct.active_line_s** %next92, align 8, !tbaa !201
  %cmp93 = icmp eq %struct.active_line_s* %85, null
  br i1 %cmp93, label %if.then.95, label %if.end.103

if.then.95:                                       ; preds = %while.end
  %86 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp96 = icmp eq %struct.active_line_s* %86, null
  br i1 %cmp96, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %if.then.95
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.358

if.end.99:                                        ; preds = %if.then.95
  %87 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start100 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %87, i32 0, i32 0
  %y101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start100, i32 0, i32 1
  %88 = load i32, i32* %y101, align 4, !tbaa !187
  store i32 %88, i32* %y, align 4, !tbaa !5
  %89 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %89, i32 0, i32 8
  %90 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %91 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %91, i32 0, i32 9
  store %struct.active_line_s* %90, %struct.active_line_s** %h_list1, align 8, !tbaa !123
  %92 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0102 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %92, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0102, align 8, !tbaa !124
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.358

if.end.103:                                       ; preds = %while.end
  %93 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp104 = icmp ne %struct.active_line_s* %93, null
  br i1 %cmp104, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.103
  %94 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start106 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %94, i32 0, i32 0
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start106, i32 0, i32 1
  %95 = load i32, i32* %y107, align 4, !tbaa !187
  br label %cond.end

cond.false:                                       ; preds = %if.end.103
  %96 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %96, i32 0, i32 18
  %97 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %95, %cond.true ], [ %97, %cond.false ]
  store i32 %cond, i32* %y1, align 4, !tbaa !5
  %98 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %98) #1
  %99 = load i32, i32* %y, align 4, !tbaa !5
  %100 = load i32, i32* %band_mask.addr, align 4, !tbaa !5
  %neg = xor i32 %100, -1
  %or = or i32 %99, %neg
  store i32 %or, i32* %y_band, align 4, !tbaa !5
  %101 = load i32, i32* %y1, align 4, !tbaa !5
  %102 = load i32, i32* %y_band, align 4, !tbaa !5
  %cmp108 = icmp sgt i32 %101, %102
  br i1 %cmp108, label %if.then.110, label %if.end.112

if.then.110:                                      ; preds = %cond.end
  %103 = load i32, i32* %y_band, align 4, !tbaa !5
  %add111 = add nsw i32 %103, 1
  store i32 %add111, i32* %y1, align 4, !tbaa !5
  br label %if.end.112

if.end.112:                                       ; preds = %if.then.110, %cond.end
  %104 = bitcast i32* %y_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %104) #1
  %105 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head113 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %105, i32 0, i32 7
  %next114 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head113, i32 0, i32 15
  %106 = load %struct.active_line_s*, %struct.active_line_s** %next114, align 8, !tbaa !201
  store %struct.active_line_s* %106, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.112
  %107 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp115 = icmp ne %struct.active_line_s* %107, null
  br i1 %cmp115, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %108 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end117 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %108, i32 0, i32 1
  %y118 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end117, i32 0, i32 1
  %109 = load i32, i32* %y118, align 4, !tbaa !195
  %110 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp119 = icmp slt i32 %109, %110
  br i1 %cmp119, label %if.then.121, label %if.end.124

if.then.121:                                      ; preds = %for.body
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end122 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 1
  %y123 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end122, i32 0, i32 1
  %112 = load i32, i32* %y123, align 4, !tbaa !195
  store i32 %112, i32* %y1, align 4, !tbaa !5
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.121, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.124
  %113 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next125 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 15
  %114 = load %struct.active_line_s*, %struct.active_line_s** %next125, align 8, !tbaa !189
  store %struct.active_line_s* %114, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %115 = load i32, i32* %y, align 4, !tbaa !5
  %116 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp126 = icmp eq i32 %115, %116
  br i1 %cmp126, label %if.then.128, label %if.end.147

if.then.128:                                      ; preds = %for.end
  %117 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %118 = load i32, i32* %y, align 4, !tbaa !5
  %call129 = call i32 @process_h_segments(%struct.line_list_s* %117, i32 %118) #5
  store i32 %call129, i32* %code, align 4, !tbaa !5
  %119 = load i32, i32* %code, align 4, !tbaa !5
  %cmp130 = icmp slt i32 %119, 0
  br i1 %cmp130, label %if.then.132, label %if.end.133

if.then.132:                                      ; preds = %if.then.128
  %120 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %120, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.358

if.end.133:                                       ; preds = %if.then.128
  %121 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %121) #1
  %122 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %123 = load i32, i32* %y1, align 4, !tbaa !5
  %call134 = call i32 @move_al_by_y(%struct.line_list_s* %122, i32 %123) #5
  store i32 %call134, i32* %code1, align 4, !tbaa !5
  %124 = load i32, i32* %code1, align 4, !tbaa !5
  %cmp135 = icmp slt i32 %124, 0
  br i1 %cmp135, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %if.end.133
  %125 = load i32, i32* %code1, align 4, !tbaa !5
  store i32 %125, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.139

if.end.138:                                       ; preds = %if.end.133
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.139

cleanup.139:                                      ; preds = %if.end.138, %if.then.137
  %126 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %126) #1
  %cleanup.dest.140 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.140, label %cleanup.358 [
    i32 0, label %cleanup.cont.141
  ]

cleanup.cont.141:                                 ; preds = %cleanup.139
  %127 = load i32, i32* %code, align 4, !tbaa !5
  %cmp142 = icmp sgt i32 %127, 0
  br i1 %cmp142, label %if.then.144, label %if.end.146

if.then.144:                                      ; preds = %cleanup.cont.141
  %128 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list145 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %128, i32 0, i32 5
  %129 = load %struct.active_line_s*, %struct.active_line_s** %y_list145, align 8, !tbaa !121
  store %struct.active_line_s* %129, %struct.active_line_s** %yll, align 8, !tbaa !1
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.358

if.end.146:                                       ; preds = %cleanup.cont.141
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %for.end
  %130 = load i32, i32* %y, align 4, !tbaa !5
  %131 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp148 = icmp sge i32 %130, %131
  br i1 %cmp148, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %if.end.147
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup.358

if.end.151:                                       ; preds = %if.end.147
  %132 = load i32, i32* %y, align 4, !tbaa !5
  %sub152 = sub nsw i32 %132, 0
  %conv153 = sext i32 %sub152 to i64
  %add154 = add nsw i64 %conv153, 127
  %and155 = and i64 %add154, -256
  %133 = load i32, i32* %y1, align 4, !tbaa !5
  %add156 = add nsw i32 %133, 0
  %conv157 = sext i32 %add156 to i64
  %add158 = add nsw i64 %conv157, 127
  %and159 = and i64 %add158, -256
  %cmp160 = icmp slt i64 %and155, %and159
  %conv161 = zext i1 %cmp160 to i32
  store i32 %conv161, i32* %covering_pixel_centers, align 4, !tbaa !5
  %134 = load i32, i32* %y, align 4, !tbaa !5
  %135 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp162 = icmp ne i32 %134, %135
  br i1 %cmp162, label %if.then.164, label %if.end.176

if.then.164:                                      ; preds = %if.end.151
  %136 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %137 = load i32, i32* %y, align 4, !tbaa !5
  %138 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool = icmp ne i32 %138, 0
  %cond165 = select i1 %tobool, i32 1, i32 -1
  %139 = load i32, i32* %all_bands, align 4, !tbaa !5
  call void @intersect_al(%struct.line_list_s* %136, i32 %137, i32* %y1, i32 %cond165, i32 %139) #5
  %140 = load i32, i32* %y, align 4, !tbaa !5
  %sub166 = sub nsw i32 %140, 0
  %conv167 = sext i32 %sub166 to i64
  %add168 = add nsw i64 %conv167, 127
  %and169 = and i64 %add168, -256
  %141 = load i32, i32* %y1, align 4, !tbaa !5
  %add170 = add nsw i32 %141, 0
  %conv171 = sext i32 %add170 to i64
  %add172 = add nsw i64 %conv171, 127
  %and173 = and i64 %add172, -256
  %cmp174 = icmp slt i64 %and169, %and173
  %conv175 = zext i1 %cmp174 to i32
  store i32 %conv175, i32* %covering_pixel_centers, align 4, !tbaa !5
  br label %if.end.176

if.end.176:                                       ; preds = %if.then.164, %if.end.151
  %142 = load i32, i32* %covering_pixel_centers, align 4, !tbaa !5
  %tobool177 = icmp ne i32 %142, 0
  br i1 %tobool177, label %if.then.179, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.176
  %143 = load i32, i32* %all_bands, align 4, !tbaa !5
  %tobool178 = icmp ne i32 %143, 0
  br i1 %tobool178, label %if.then.179, label %if.else.348

if.then.179:                                      ; preds = %lor.lhs.false, %if.end.176
  %144 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %144) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  %145 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %145) #1
  store %struct.active_line_s* null, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %do.body.180

do.body.180:                                      ; preds = %if.then.179
  br label %do.cond.181

do.cond.181:                                      ; preds = %do.body.180
  br label %do.end.182

do.end.182:                                       ; preds = %do.cond.181
  %146 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head183 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %146, i32 0, i32 7
  %next184 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head183, i32 0, i32 15
  %147 = load %struct.active_line_s*, %struct.active_line_s** %next184, align 8, !tbaa !201
  store %struct.active_line_s* %147, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.185

for.cond.185:                                     ; preds = %for.inc.341, %do.end.182
  %148 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp186 = icmp ne %struct.active_line_s* %148, null
  br i1 %cmp186, label %for.body.188, label %for.end.343

for.body.188:                                     ; preds = %for.cond.185
  %149 = bitcast i32* %code189 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %149) #1
  br label %do.body.190

do.body.190:                                      ; preds = %for.body.188
  br label %do.cond.191

do.cond.191:                                      ; preds = %do.body.190
  br label %do.end.192

do.end.192:                                       ; preds = %do.cond.191
  br label %do.body.193

do.body.193:                                      ; preds = %do.end.192
  br label %do.cond.194

do.cond.194:                                      ; preds = %do.body.193
  br label %do.end.195

do.end.195:                                       ; preds = %do.cond.194
  %150 = load i32, i32* %inside, align 4, !tbaa !5
  %151 = load i32, i32* %rule, align 4, !tbaa !5
  %and196 = and i32 %150, %151
  %cmp197 = icmp ne i32 %and196, 0
  br i1 %cmp197, label %if.end.207, label %if.then.199

if.then.199:                                      ; preds = %do.end.195
  %152 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction200 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %152, i32 0, i32 8
  %153 = load i32, i32* %direction200, align 4, !tbaa !178
  %154 = load i32, i32* %inside, align 4, !tbaa !5
  %add201 = add nsw i32 %154, %153
  store i32 %add201, i32* %inside, align 4, !tbaa !5
  %155 = load i32, i32* %inside, align 4, !tbaa !5
  %156 = load i32, i32* %rule, align 4, !tbaa !5
  %and202 = and i32 %155, %156
  %cmp203 = icmp ne i32 %and202, 0
  br i1 %cmp203, label %if.then.205, label %if.end.206

if.then.205:                                      ; preds = %if.then.199
  %157 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %157, %struct.active_line_s** %flp, align 8, !tbaa !1
  br label %if.end.206

if.end.206:                                       ; preds = %if.then.205, %if.then.199
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.338

if.end.207:                                       ; preds = %do.end.195
  %158 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction208 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %158, i32 0, i32 8
  %159 = load i32, i32* %direction208, align 4, !tbaa !178
  %160 = load i32, i32* %inside, align 4, !tbaa !5
  %add209 = add nsw i32 %160, %159
  store i32 %add209, i32* %inside, align 4, !tbaa !5
  %161 = load i32, i32* %inside, align 4, !tbaa !5
  %162 = load i32, i32* %rule, align 4, !tbaa !5
  %and210 = and i32 %161, %162
  %cmp211 = icmp ne i32 %and210, 0
  br i1 %cmp211, label %if.then.213, label %if.end.214

if.then.213:                                      ; preds = %if.end.207
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.338

if.end.214:                                       ; preds = %if.end.207
  %163 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next215 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %163, i32 0, i32 15
  %164 = load %struct.active_line_s*, %struct.active_line_s** %next215, align 8, !tbaa !189
  %cmp216 = icmp ne %struct.active_line_s* %164, null
  br i1 %cmp216, label %land.lhs.true, label %if.end.232

land.lhs.true:                                    ; preds = %if.end.214
  %165 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current218 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %165, i32 0, i32 5
  %166 = load i32, i32* %x_current218, align 4, !tbaa !204
  %167 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next219 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %167, i32 0, i32 15
  %168 = load %struct.active_line_s*, %struct.active_line_s** %next219, align 8, !tbaa !189
  %x_current220 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %168, i32 0, i32 5
  %169 = load i32, i32* %x_current220, align 4, !tbaa !204
  %cmp221 = icmp eq i32 %166, %169
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.232

land.lhs.true.223:                                ; preds = %land.lhs.true
  %170 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %170, i32 0, i32 6
  %171 = load i32, i32* %x_next, align 4, !tbaa !205
  %172 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next224 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %172, i32 0, i32 15
  %173 = load %struct.active_line_s*, %struct.active_line_s** %next224, align 8, !tbaa !189
  %x_next225 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 6
  %174 = load i32, i32* %x_next225, align 4, !tbaa !205
  %cmp226 = icmp eq i32 %171, %174
  br i1 %cmp226, label %if.then.228, label %if.end.232

if.then.228:                                      ; preds = %land.lhs.true.223
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next229 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 15
  %176 = load %struct.active_line_s*, %struct.active_line_s** %next229, align 8, !tbaa !189
  store %struct.active_line_s* %176, %struct.active_line_s** %alp, align 8, !tbaa !1
  %177 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction230 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %177, i32 0, i32 8
  %178 = load i32, i32* %direction230, align 4, !tbaa !178
  %179 = load i32, i32* %inside, align 4, !tbaa !5
  %add231 = add nsw i32 %179, %178
  store i32 %add231, i32* %inside, align 4, !tbaa !5
  store i32 17, i32* %cleanup.dest.slot
  br label %cleanup.338

if.end.232:                                       ; preds = %land.lhs.true.223, %land.lhs.true, %if.end.214
  br label %do.body.233

do.body.233:                                      ; preds = %if.end.232
  br label %do.cond.234

do.cond.234:                                      ; preds = %do.body.233
  br label %do.end.235

do.end.235:                                       ; preds = %do.cond.234
  %180 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %180) #1
  %181 = load i32, i32* %y, align 4, !tbaa !5
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %182 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %182, i32 0, i32 0
  %y236 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %183 = load i32, i32* %y236, align 4, !tbaa !38
  %cmp237 = icmp sgt i32 %181, %183
  br i1 %cmp237, label %cond.true.239, label %cond.false.240

cond.true.239:                                    ; preds = %do.end.235
  %184 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.244

cond.false.240:                                   ; preds = %do.end.235
  %pbox241 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %185 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox241, align 8, !tbaa !97
  %p242 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %185, i32 0, i32 0
  %y243 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p242, i32 0, i32 1
  %186 = load i32, i32* %y243, align 4, !tbaa !38
  br label %cond.end.244

cond.end.244:                                     ; preds = %cond.false.240, %cond.true.239
  %cond245 = phi i32 [ %184, %cond.true.239 ], [ %186, %cond.false.240 ]
  store i32 %cond245, i32* %ybot, align 4, !tbaa !5
  %187 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %187) #1
  %188 = load i32, i32* %y1, align 4, !tbaa !5
  %pbox246 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %189 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox246, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %189, i32 0, i32 1
  %y247 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %190 = load i32, i32* %y247, align 4, !tbaa !42
  %cmp248 = icmp slt i32 %188, %190
  br i1 %cmp248, label %cond.true.250, label %cond.false.251

cond.true.250:                                    ; preds = %cond.end.244
  %191 = load i32, i32* %y1, align 4, !tbaa !5
  br label %cond.end.255

cond.false.251:                                   ; preds = %cond.end.244
  %pbox252 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 13
  %192 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox252, align 8, !tbaa !97
  %q253 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %192, i32 0, i32 1
  %y254 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q253, i32 0, i32 1
  %193 = load i32, i32* %y254, align 4, !tbaa !42
  br label %cond.end.255

cond.end.255:                                     ; preds = %cond.false.251, %cond.true.250
  %cond256 = phi i32 [ %191, %cond.true.250 ], [ %193, %cond.false.251 ]
  store i32 %cond256, i32* %ytop, align 4, !tbaa !5
  %194 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end257 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %194, i32 0, i32 1
  %x258 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end257, i32 0, i32 0
  %195 = load i32, i32* %x258, align 4, !tbaa !194
  %196 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start259 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %196, i32 0, i32 0
  %x260 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start259, i32 0, i32 0
  %197 = load i32, i32* %x260, align 4, !tbaa !193
  %cmp261 = icmp eq i32 %195, %197
  br i1 %cmp261, label %land.lhs.true.263, label %if.else.312

land.lhs.true.263:                                ; preds = %cond.end.255
  %198 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end264 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %198, i32 0, i32 1
  %x265 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end264, i32 0, i32 0
  %199 = load i32, i32* %x265, align 4, !tbaa !194
  %200 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start266 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %200, i32 0, i32 0
  %x267 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start266, i32 0, i32 0
  %201 = load i32, i32* %x267, align 4, !tbaa !193
  %cmp268 = icmp eq i32 %199, %201
  br i1 %cmp268, label %if.then.270, label %if.else.312

if.then.270:                                      ; preds = %land.lhs.true.263
  %202 = load i32, i32* %ytop, align 4, !tbaa !5
  %203 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp271 = icmp sgt i32 %202, %203
  br i1 %cmp271, label %if.then.273, label %if.else.310

if.then.273:                                      ; preds = %if.then.270
  %204 = bitcast i32* %yi274 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %204) #1
  %205 = load i32, i32* %ybot, align 4, !tbaa !5
  %conv275 = sext i32 %205 to i64
  %add276 = add nsw i64 %conv275, 127
  %shr277 = ashr i64 %add276, 8
  %conv278 = trunc i64 %shr277 to i32
  store i32 %conv278, i32* %yi274, align 4, !tbaa !5
  %206 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.start(i64 4, i8* %206) #1
  %207 = load i32, i32* %ytop, align 4, !tbaa !5
  %conv279 = sext i32 %207 to i64
  %add280 = add nsw i64 %conv279, 127
  %shr281 = ashr i64 %add280, 8
  %conv282 = trunc i64 %shr281 to i32
  %208 = load i32, i32* %yi274, align 4, !tbaa !5
  %sub283 = sub nsw i32 %conv282, %208
  store i32 %sub283, i32* %hi, align 4, !tbaa !5
  %209 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %209) #1
  %210 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end284 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %210, i32 0, i32 1
  %x285 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end284, i32 0, i32 0
  %211 = load i32, i32* %x285, align 4, !tbaa !194
  %sub286 = sub nsw i32 %211, 0
  %conv287 = sext i32 %sub286 to i64
  %add288 = add nsw i64 %conv287, 127
  %shr289 = ashr i64 %add288, 8
  %conv290 = trunc i64 %shr289 to i32
  store i32 %conv290, i32* %xli, align 4, !tbaa !5
  %212 = bitcast i32* %xi291 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %212) #1
  %213 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end292 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %213, i32 0, i32 1
  %x293 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end292, i32 0, i32 0
  %214 = load i32, i32* %x293, align 4, !tbaa !194
  %add294 = add nsw i32 %214, 0
  %conv295 = sext i32 %add294 to i64
  %add296 = add nsw i64 %conv295, 127
  %shr297 = ashr i64 %add296, 8
  %conv298 = trunc i64 %shr297 to i32
  store i32 %conv298, i32* %xi291, align 4, !tbaa !5
  br label %do.body.299

do.body.299:                                      ; preds = %if.then.273
  br label %do.cond.300

do.cond.300:                                      ; preds = %do.body.299
  br label %do.end.301

do.end.301:                                       ; preds = %do.cond.300
  %pdevc302 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %215 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc302, align 8, !tbaa !90
  %type303 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %215, i32 0, i32 0
  %216 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type303, align 8, !tbaa !7
  %fill_rectangle304 = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %216, i32 0, i32 5
  %217 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle304, align 8, !tbaa !50
  %pdevc305 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %218 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc305, align 8, !tbaa !90
  %219 = load i32, i32* %xli, align 4, !tbaa !5
  %220 = load i32, i32* %yi274, align 4, !tbaa !5
  %221 = load i32, i32* %xi291, align 4, !tbaa !5
  %222 = load i32, i32* %xli, align 4, !tbaa !5
  %sub306 = sub nsw i32 %221, %222
  %223 = load i32, i32* %hi, align 4, !tbaa !5
  %dev307 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %224 = load %struct.gx_device_s*, %struct.gx_device_s** %dev307, align 8, !tbaa !96
  %lop308 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %225 = load i32, i32* %lop308, align 4, !tbaa !91
  %call309 = call i32 %217(%struct.gx_device_color_s* %218, i32 %219, i32 %220, i32 %sub306, i32 %223, %struct.gx_device_s* %224, i32 %225, %struct.gx_rop_source_s* null) #5
  store i32 %call309, i32* %code189, align 4, !tbaa !5
  %226 = bitcast i32* %xi291 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %226) #1
  %227 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %227) #1
  %228 = bitcast i32* %hi to i8*
  call void @llvm.lifetime.end(i64 4, i8* %228) #1
  %229 = bitcast i32* %yi274 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %229) #1
  br label %if.end.311

if.else.310:                                      ; preds = %if.then.270
  store i32 0, i32* %code189, align 4, !tbaa !5
  br label %if.end.311

if.end.311:                                       ; preds = %if.else.310, %do.end.301
  br label %if.end.333

if.else.312:                                      ; preds = %land.lhs.true.263, %cond.end.255
  %230 = load i32, i32* %ybot, align 4, !tbaa !5
  %231 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp313 = icmp slt i32 %230, %231
  br i1 %cmp313, label %if.then.315, label %if.else.331

if.then.315:                                      ; preds = %if.else.312
  %232 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %232) #1
  %233 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %233) #1
  %start316 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %234 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %start317 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %234, i32 0, i32 0
  %235 = bitcast %struct.gs_fixed_point_s* %start316 to i8*
  %236 = bitcast %struct.gs_fixed_point_s* %start317 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* %236, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end318 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %237 = load %struct.active_line_s*, %struct.active_line_s** %flp, align 8, !tbaa !1
  %end319 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %237, i32 0, i32 1
  %238 = bitcast %struct.gs_fixed_point_s* %end318 to i8*
  %239 = bitcast %struct.gs_fixed_point_s* %end319 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %238, i8* %239, i64 8, i32 4, i1 false), !tbaa.struct !73
  %start320 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %240 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start321 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %240, i32 0, i32 0
  %241 = bitcast %struct.gs_fixed_point_s* %start320 to i8*
  %242 = bitcast %struct.gs_fixed_point_s* %start321 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %241, i8* %242, i64 8, i32 4, i1 false), !tbaa.struct !73
  %end322 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %243 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end323 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %243, i32 0, i32 1
  %244 = bitcast %struct.gs_fixed_point_s* %end322 to i8*
  %245 = bitcast %struct.gs_fixed_point_s* %end323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %244, i8* %245, i64 8, i32 4, i1 false), !tbaa.struct !73
  br label %do.body.324

do.body.324:                                      ; preds = %if.then.315
  br label %do.cond.325

do.cond.325:                                      ; preds = %do.body.324
  br label %do.end.326

do.end.326:                                       ; preds = %do.cond.325
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 17
  %246 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %dev327 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %247 = load %struct.gx_device_s*, %struct.gx_device_s** %dev327, align 8, !tbaa !96
  %248 = load i32, i32* %ybot, align 4, !tbaa !5
  %249 = load i32, i32* %ytop, align 4, !tbaa !5
  %pdevc328 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %250 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc328, align 8, !tbaa !90
  %lop329 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %251 = load i32, i32* %lop329, align 4, !tbaa !91
  %call330 = call i32 %246(%struct.gx_device_s* %247, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %248, i32 %249, i32 0, %struct.gx_device_color_s* %250, i32 %251) #5
  store i32 %call330, i32* %code189, align 4, !tbaa !5
  %252 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %252) #1
  %253 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %253) #1
  br label %if.end.332

if.else.331:                                      ; preds = %if.else.312
  store i32 0, i32* %code189, align 4, !tbaa !5
  br label %if.end.332

if.end.332:                                       ; preds = %if.else.331, %do.end.326
  br label %if.end.333

if.end.333:                                       ; preds = %if.end.332, %if.end.311
  %254 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %254) #1
  %255 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %255) #1
  %256 = load i32, i32* %code189, align 4, !tbaa !5
  %cmp334 = icmp slt i32 %256, 0
  br i1 %cmp334, label %if.then.336, label %if.end.337

if.then.336:                                      ; preds = %if.end.333
  %257 = load i32, i32* %code189, align 4, !tbaa !5
  store i32 %257, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.338

if.end.337:                                       ; preds = %if.end.333
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.338

cleanup.338:                                      ; preds = %if.end.337, %if.then.336, %if.then.228, %if.then.213, %if.end.206
  %258 = bitcast i32* %code189 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %258) #1
  %cleanup.dest.339 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.339, label %cleanup.344 [
    i32 0, label %cleanup.cont.340
    i32 17, label %for.inc.341
  ]

cleanup.cont.340:                                 ; preds = %cleanup.338
  br label %for.inc.341

for.inc.341:                                      ; preds = %cleanup.cont.340, %cleanup.338
  %259 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next342 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %259, i32 0, i32 15
  %260 = load %struct.active_line_s*, %struct.active_line_s** %next342, align 8, !tbaa !189
  store %struct.active_line_s* %260, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.185

for.end.343:                                      ; preds = %for.cond.185
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.344

cleanup.344:                                      ; preds = %for.end.343, %cleanup.338
  %261 = bitcast %struct.active_line_s** %flp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %261) #1
  %262 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %262) #1
  %cleanup.dest.346 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.346, label %cleanup.358 [
    i32 0, label %cleanup.cont.347
  ]

cleanup.cont.347:                                 ; preds = %cleanup.344
  br label %if.end.349

if.else.348:                                      ; preds = %lor.lhs.false
  br label %if.end.349

if.end.349:                                       ; preds = %if.else.348, %cleanup.cont.347
  %263 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %264 = load i32, i32* %y1, align 4, !tbaa !5
  %call350 = call i32 @move_al_by_y(%struct.line_list_s* %263, i32 %264) #5
  store i32 %call350, i32* %code, align 4, !tbaa !5
  %265 = load i32, i32* %code, align 4, !tbaa !5
  %cmp351 = icmp slt i32 %265, 0
  br i1 %cmp351, label %if.then.353, label %if.end.354

if.then.353:                                      ; preds = %if.end.349
  %266 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %266, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.358

if.end.354:                                       ; preds = %if.end.349
  %267 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0355 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %267, i32 0, i32 8
  %268 = load %struct.active_line_s*, %struct.active_line_s** %h_list0355, align 8, !tbaa !124
  %269 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list1356 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %269, i32 0, i32 9
  store %struct.active_line_s* %268, %struct.active_line_s** %h_list1356, align 8, !tbaa !123
  %270 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0357 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %270, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0357, align 8, !tbaa !124
  %271 = load i32, i32* %y1, align 4, !tbaa !5
  store i32 %271, i32* %y, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.358

cleanup.358:                                      ; preds = %if.end.354, %if.then.353, %cleanup.344, %if.then.150, %if.then.144, %cleanup.139, %if.then.132, %if.end.99, %if.then.98, %cleanup.88
  %272 = bitcast i32* %covering_pixel_centers to i8*
  call void @llvm.lifetime.end(i64 4, i8* %272) #1
  %273 = bitcast %struct.active_line_s** %plp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %273) #1
  %274 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %274) #1
  %275 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %275) #1
  %cleanup.dest.362 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.362, label %cleanup.365 [
    i32 0, label %cleanup.cont.363
    i32 3, label %while.end.364
    i32 2, label %while.cond
  ]

cleanup.cont.363:                                 ; preds = %cleanup.358
  br label %while.cond

while.end.364:                                    ; preds = %cleanup.358
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.365

cleanup.365:                                      ; preds = %while.end.364, %cleanup.358, %if.then
  %276 = bitcast i32* %all_bands to i8*
  call void @llvm.lifetime.end(i64 4, i8* %276) #1
  %277 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %277) #1
  %278 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %278) #1
  %279 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %279) #1
  %280 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %280) #1
  %281 = bitcast i32* %rule to i8*
  call void @llvm.lifetime.end(i64 4, i8* %281) #1
  %282 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %282) #1
  %283 = load i32, i32* %retval
  ret i32 %283
}

; Function Attrs: nounwind uwtable
define internal void @insert_x_new(%struct.active_line_s* %alp, %struct.line_list_s* %ll) #0 {
entry:
  %alp.addr = alloca %struct.active_line_s*, align 8
  %ll.addr = alloca %struct.line_list_s*, align 8
  %next = alloca %struct.active_line_s*, align 8
  %prev = alloca %struct.active_line_s*, align 8
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = bitcast %struct.active_line_s** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast %struct.active_line_s** %prev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %2, i32 0, i32 7
  store %struct.active_line_s* %x_head, %struct.active_line_s** %prev, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %3, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %4 = load i32, i32* %x, align 4, !tbaa !193
  %5 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %5, i32 0, i32 5
  store i32 %4, i32* %x_current, align 4, !tbaa !204
  %6 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %6, i32 0, i32 0
  %x2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start1, i32 0, i32 0
  %7 = load i32, i32* %x2, align 4, !tbaa !193
  %8 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %8, i32 0, i32 6
  store i32 %7, i32* %x_next, align 4, !tbaa !205
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.end
  %9 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %next3 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 15
  %10 = load %struct.active_line_s*, %struct.active_line_s** %next3, align 8, !tbaa !189
  store %struct.active_line_s* %10, %struct.active_line_s** %next, align 8, !tbaa !1
  %cmp = icmp ne %struct.active_line_s* %10, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %11 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %12 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %call = call i32 @x_order(%struct.active_line_s* %11, %struct.active_line_s* %12) #5
  %cmp4 = icmp slt i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %13 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %13, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %14 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  store %struct.active_line_s* %14, %struct.active_line_s** %prev, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %land.end
  %15 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %16 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next5 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %16, i32 0, i32 15
  store %struct.active_line_s* %15, %struct.active_line_s** %next5, align 8, !tbaa !189
  %17 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %18 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev6 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %18, i32 0, i32 14
  store %struct.active_line_s* %17, %struct.active_line_s** %prev6, align 8, !tbaa !188
  %19 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %cmp7 = icmp ne %struct.active_line_s* %19, null
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  %20 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %21 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %prev8 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %21, i32 0, i32 14
  store %struct.active_line_s* %20, %struct.active_line_s** %prev8, align 8, !tbaa !188
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end
  %22 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %23 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %next9 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %23, i32 0, i32 15
  store %struct.active_line_s* %22, %struct.active_line_s** %next9, align 8, !tbaa !189
  %24 = bitcast %struct.active_line_s** %prev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  %25 = bitcast %struct.active_line_s** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #1
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @process_h_segments(%struct.line_list_s* %ll, i32 %y) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %y.addr = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %nlp = alloca %struct.active_line_s*, align 8
  %code = alloca i32, align 4
  %inserted = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %y, i32* %y.addr, align 4, !tbaa !5
  %0 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %inserted to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 0, i32* %inserted, align 4, !tbaa !5
  %4 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %4, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  %5 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !201
  store %struct.active_line_s* %5, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp = icmp ne %struct.active_line_s* %6, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %7, i32 0, i32 15
  %8 = load %struct.active_line_s*, %struct.active_line_s** %next1, align 8, !tbaa !189
  store %struct.active_line_s* %8, %struct.active_line_s** %nlp, align 8, !tbaa !1
  %9 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 0
  %y2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %10 = load i32, i32* %y2, align 4, !tbaa !187
  %11 = load i32, i32* %y.addr, align 4, !tbaa !5
  %cmp3 = icmp eq i32 %10, %11
  br i1 %cmp3, label %land.lhs.true, label %if.end.12

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %12, i32 0, i32 1
  %y4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %13 = load i32, i32* %y4, align 4, !tbaa !195
  %14 = load i32, i32* %y.addr, align 4, !tbaa !5
  %cmp5 = icmp eq i32 %13, %14
  br i1 %cmp5, label %if.then, label %if.end.12

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %15, i32 0, i32 19
  %16 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %pseudo_rasterization = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %16, i32 0, i32 0
  %17 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !89
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then.6, label %if.end.11

if.then.6:                                        ; preds = %if.then
  %18 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start7 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %18, i32 0, i32 0
  %19 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end8 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %19, i32 0, i32 1
  %20 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call = call i32 @add_y_line_aux(%struct.segment_s* null, %struct.segment_s* null, %struct.gs_fixed_point_s* %start7, %struct.gs_fixed_point_s* %end8, i32 0, %struct.line_list_s* %20) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %21 = load i32, i32* %code, align 4, !tbaa !5
  %cmp9 = icmp slt i32 %21, 0
  br i1 %cmp9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %if.then.6
  %22 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.6
  br label %if.end.11

if.end.11:                                        ; preds = %if.end, %if.then
  store i32 1, i32* %inserted, align 4, !tbaa !5
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.12
  %23 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  store %struct.active_line_s* %23, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %inserted, align 4, !tbaa !5
  store i32 %24, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.10
  %25 = bitcast i32* %inserted to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %28 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @move_al_by_y(%struct.line_list_s* %ll, i32 %y1) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %y1.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %nlp = alloca %struct.active_line_s*, align 8
  %code = alloca i32, align 4
  %notend = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %prev = alloca %struct.active_line_s*, align 8
  %next87 = alloca %struct.active_line_s*, align 8
  %next2 = alloca %struct.active_line_s*, align 8
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = bitcast i32* %x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 -2147483648, i32* %x, align 4, !tbaa !5
  %4 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %4, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  %5 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !201
  store %struct.active_line_s* %5, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp = icmp ne %struct.active_line_s* %6, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = bitcast i32* %notend to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  store i32 0, i32* %notend, align 4, !tbaa !5
  %8 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %8, i32 0, i32 6
  %9 = load i32, i32* %x_next, align 4, !tbaa !205
  %10 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %10, i32 0, i32 5
  store i32 %9, i32* %x_current, align 4, !tbaa !204
  %11 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %11, i32 0, i32 15
  %12 = load %struct.active_line_s*, %struct.active_line_s** %next1, align 8, !tbaa !189
  store %struct.active_line_s* %12, %struct.active_line_s** %nlp, align 8, !tbaa !1
  %13 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %13, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %14 = load i32, i32* %y, align 4, !tbaa !195
  %15 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %cmp2 = icmp eq i32 %14, %15
  br i1 %cmp2, label %land.lhs.true, label %if.end.13

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %16, i32 0, i32 12
  %17 = load i32, i32* %more_flattened, align 4, !tbaa !179
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then, label %if.end.13

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %call = call i32 @step_al(%struct.active_line_s* %18, i32 1) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %19 = load i32, i32* %code, align 4, !tbaa !5
  %cmp3 = icmp slt i32 %19, 0
  br i1 %cmp3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then
  %20 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %21 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %21, i32 0, i32 0
  %x5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %22 = load i32, i32* %x5, align 4, !tbaa !193
  %23 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next6 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %23, i32 0, i32 6
  store i32 %22, i32* %x_next6, align 4, !tbaa !205
  %24 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current7 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %24, i32 0, i32 5
  store i32 %22, i32* %x_current7, align 4, !tbaa !204
  %25 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end8 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %25, i32 0, i32 1
  %y9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end8, i32 0, i32 1
  %26 = load i32, i32* %y9, align 4, !tbaa !195
  %27 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start10 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %27, i32 0, i32 0
  %y11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start10, i32 0, i32 1
  %28 = load i32, i32* %y11, align 4, !tbaa !187
  %cmp12 = icmp sge i32 %26, %28
  %conv = zext i1 %cmp12 to i32
  store i32 %conv, i32* %notend, align 4, !tbaa !5
  br label %if.end.13

if.end.13:                                        ; preds = %if.end, %land.lhs.true, %for.body
  %29 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end14 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %29, i32 0, i32 1
  %y15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end14, i32 0, i32 1
  %30 = load i32, i32* %y15, align 4, !tbaa !195
  %31 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %cmp16 = icmp sgt i32 %30, %31
  br i1 %cmp16, label %if.then.19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.13
  %32 = load i32, i32* %notend, align 4, !tbaa !5
  %tobool18 = icmp ne i32 %32, 0
  br i1 %tobool18, label %if.then.19, label %if.else.26

if.then.19:                                       ; preds = %lor.lhs.false, %if.end.13
  %33 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next20 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %33, i32 0, i32 6
  %34 = load i32, i32* %x_next20, align 4, !tbaa !205
  %35 = load i32, i32* %x, align 4, !tbaa !5
  %cmp21 = icmp sle i32 %34, %35
  br i1 %cmp21, label %if.then.23, label %if.else

if.then.23:                                       ; preds = %if.then.19
  %36 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  call void @resort_x_line(%struct.active_line_s* %36) #5
  br label %if.end.25

if.else:                                          ; preds = %if.then.19
  %37 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next24 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %37, i32 0, i32 6
  %38 = load i32, i32* %x_next24, align 4, !tbaa !205
  store i32 %38, i32* %x, align 4, !tbaa !5
  br label %if.end.25

if.end.25:                                        ; preds = %if.else, %if.then.23
  br label %if.end.42

if.else.26:                                       ; preds = %lor.lhs.false
  %39 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %40 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call27 = call i32 @end_x_line(%struct.active_line_s* %39, %struct.line_list_s* %40, i32 1) #5
  store i32 %call27, i32* %code, align 4, !tbaa !5
  %41 = load i32, i32* %code, align 4, !tbaa !5
  %cmp28 = icmp slt i32 %41, 0
  br i1 %cmp28, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.else.26
  %42 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %42, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %if.else.26
  %43 = load i32, i32* %code, align 4, !tbaa !5
  %tobool32 = icmp ne i32 %43, 0
  br i1 %tobool32, label %if.end.41, label %if.then.33

if.then.33:                                       ; preds = %if.end.31
  %44 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next34 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %44, i32 0, i32 6
  %45 = load i32, i32* %x_next34, align 4, !tbaa !205
  %46 = load i32, i32* %x, align 4, !tbaa !5
  %cmp35 = icmp sle i32 %45, %46
  br i1 %cmp35, label %if.then.37, label %if.else.38

if.then.37:                                       ; preds = %if.then.33
  %47 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  call void @resort_x_line(%struct.active_line_s* %47) #5
  br label %if.end.40

if.else.38:                                       ; preds = %if.then.33
  %48 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next39 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %48, i32 0, i32 6
  %49 = load i32, i32* %x_next39, align 4, !tbaa !205
  store i32 %49, i32* %x, align 4, !tbaa !5
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.38, %if.then.37
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end.31
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.end.25
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.42, %if.then.30, %if.then.4
  %50 = bitcast i32* %notend to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.110 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %51 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  store %struct.active_line_s* %51, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %52 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head43 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %52, i32 0, i32 7
  %next44 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head43, i32 0, i32 15
  %53 = load %struct.active_line_s*, %struct.active_line_s** %next44, align 8, !tbaa !201
  %cmp45 = icmp ne %struct.active_line_s* %53, null
  br i1 %cmp45, label %land.lhs.true.47, label %if.end.109

land.lhs.true.47:                                 ; preds = %for.end
  %54 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %54, i32 0, i32 19
  %55 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %pseudo_rasterization = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %55, i32 0, i32 0
  %56 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !89
  %tobool48 = icmp ne i32 %56, 0
  br i1 %tobool48, label %if.then.49, label %if.end.109

if.then.49:                                       ; preds = %land.lhs.true.47
  %57 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head50 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %57, i32 0, i32 7
  %next51 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head50, i32 0, i32 15
  %58 = load %struct.active_line_s*, %struct.active_line_s** %next51, align 8, !tbaa !201
  store %struct.active_line_s* %58, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.52

for.cond.52:                                      ; preds = %if.end.107, %if.then.49
  %59 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next53 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %59, i32 0, i32 15
  %60 = load %struct.active_line_s*, %struct.active_line_s** %next53, align 8, !tbaa !189
  %cmp54 = icmp ne %struct.active_line_s* %60, null
  br i1 %cmp54, label %for.body.56, label %for.end.108

for.body.56:                                      ; preds = %for.cond.52
  %61 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start57 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %61, i32 0, i32 0
  %x58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start57, i32 0, i32 0
  %62 = load i32, i32* %x58, align 4, !tbaa !193
  %63 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end59 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 1
  %x60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end59, i32 0, i32 0
  %64 = load i32, i32* %x60, align 4, !tbaa !194
  %cmp61 = icmp eq i32 %62, %64
  br i1 %cmp61, label %land.lhs.true.63, label %if.else.105

land.lhs.true.63:                                 ; preds = %for.body.56
  %65 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start64 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %65, i32 0, i32 0
  %x65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start64, i32 0, i32 0
  %66 = load i32, i32* %x65, align 4, !tbaa !193
  %67 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next66 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %67, i32 0, i32 15
  %68 = load %struct.active_line_s*, %struct.active_line_s** %next66, align 8, !tbaa !189
  %start67 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %68, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 0
  %69 = load i32, i32* %x68, align 4, !tbaa !193
  %cmp69 = icmp eq i32 %66, %69
  br i1 %cmp69, label %land.lhs.true.71, label %if.else.105

land.lhs.true.71:                                 ; preds = %land.lhs.true.63
  %70 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next72 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %70, i32 0, i32 15
  %71 = load %struct.active_line_s*, %struct.active_line_s** %next72, align 8, !tbaa !189
  %start73 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %71, i32 0, i32 0
  %x74 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start73, i32 0, i32 0
  %72 = load i32, i32* %x74, align 4, !tbaa !193
  %73 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next75 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %73, i32 0, i32 15
  %74 = load %struct.active_line_s*, %struct.active_line_s** %next75, align 8, !tbaa !189
  %end76 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %74, i32 0, i32 1
  %x77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end76, i32 0, i32 0
  %75 = load i32, i32* %x77, align 4, !tbaa !194
  %cmp78 = icmp eq i32 %72, %75
  br i1 %cmp78, label %land.lhs.true.80, label %if.else.105

land.lhs.true.80:                                 ; preds = %land.lhs.true.71
  %76 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %76, i32 0, i32 8
  %77 = load i32, i32* %direction, align 4, !tbaa !178
  %78 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next81 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %78, i32 0, i32 15
  %79 = load %struct.active_line_s*, %struct.active_line_s** %next81, align 8, !tbaa !189
  %direction82 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %79, i32 0, i32 8
  %80 = load i32, i32* %direction82, align 4, !tbaa !178
  %cmp83 = icmp sgt i32 %77, %80
  br i1 %cmp83, label %if.then.85, label %if.else.105

if.then.85:                                       ; preds = %land.lhs.true.80
  %81 = bitcast %struct.active_line_s** %prev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %81) #1
  %82 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev86 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %82, i32 0, i32 14
  %83 = load %struct.active_line_s*, %struct.active_line_s** %prev86, align 8, !tbaa !188
  store %struct.active_line_s* %83, %struct.active_line_s** %prev, align 8, !tbaa !1
  %84 = bitcast %struct.active_line_s** %next87 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %84) #1
  %85 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next88 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %85, i32 0, i32 15
  %86 = load %struct.active_line_s*, %struct.active_line_s** %next88, align 8, !tbaa !189
  store %struct.active_line_s* %86, %struct.active_line_s** %next87, align 8, !tbaa !1
  %87 = bitcast %struct.active_line_s** %next2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %87) #1
  %88 = load %struct.active_line_s*, %struct.active_line_s** %next87, align 8, !tbaa !1
  %next89 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %88, i32 0, i32 15
  %89 = load %struct.active_line_s*, %struct.active_line_s** %next89, align 8, !tbaa !189
  store %struct.active_line_s* %89, %struct.active_line_s** %next2, align 8, !tbaa !1
  %90 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %tobool90 = icmp ne %struct.active_line_s* %90, null
  br i1 %tobool90, label %if.then.91, label %if.else.93

if.then.91:                                       ; preds = %if.then.85
  %91 = load %struct.active_line_s*, %struct.active_line_s** %next87, align 8, !tbaa !1
  %92 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %next92 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %92, i32 0, i32 15
  store %struct.active_line_s* %91, %struct.active_line_s** %next92, align 8, !tbaa !189
  br label %if.end.96

if.else.93:                                       ; preds = %if.then.85
  %93 = load %struct.active_line_s*, %struct.active_line_s** %next87, align 8, !tbaa !1
  %94 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head94 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %94, i32 0, i32 7
  %next95 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head94, i32 0, i32 15
  store %struct.active_line_s* %93, %struct.active_line_s** %next95, align 8, !tbaa !201
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.91
  %95 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %96 = load %struct.active_line_s*, %struct.active_line_s** %next87, align 8, !tbaa !1
  %prev97 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %96, i32 0, i32 14
  store %struct.active_line_s* %95, %struct.active_line_s** %prev97, align 8, !tbaa !188
  %97 = load %struct.active_line_s*, %struct.active_line_s** %next87, align 8, !tbaa !1
  %98 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev98 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %98, i32 0, i32 14
  store %struct.active_line_s* %97, %struct.active_line_s** %prev98, align 8, !tbaa !188
  %99 = load %struct.active_line_s*, %struct.active_line_s** %next2, align 8, !tbaa !1
  %100 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next99 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %100, i32 0, i32 15
  store %struct.active_line_s* %99, %struct.active_line_s** %next99, align 8, !tbaa !189
  %101 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %102 = load %struct.active_line_s*, %struct.active_line_s** %next87, align 8, !tbaa !1
  %next100 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %102, i32 0, i32 15
  store %struct.active_line_s* %101, %struct.active_line_s** %next100, align 8, !tbaa !189
  %103 = load %struct.active_line_s*, %struct.active_line_s** %next2, align 8, !tbaa !1
  %tobool101 = icmp ne %struct.active_line_s* %103, null
  br i1 %tobool101, label %if.then.102, label %if.end.104

if.then.102:                                      ; preds = %if.end.96
  %104 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %105 = load %struct.active_line_s*, %struct.active_line_s** %next2, align 8, !tbaa !1
  %prev103 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %105, i32 0, i32 14
  store %struct.active_line_s* %104, %struct.active_line_s** %prev103, align 8, !tbaa !188
  br label %if.end.104

if.end.104:                                       ; preds = %if.then.102, %if.end.96
  %106 = bitcast %struct.active_line_s** %next2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %106) #1
  %107 = bitcast %struct.active_line_s** %next87 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %107) #1
  %108 = bitcast %struct.active_line_s** %prev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %108) #1
  br label %if.end.107

if.else.105:                                      ; preds = %land.lhs.true.80, %land.lhs.true.71, %land.lhs.true.63, %for.body.56
  %109 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next106 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %109, i32 0, i32 15
  %110 = load %struct.active_line_s*, %struct.active_line_s** %next106, align 8, !tbaa !189
  store %struct.active_line_s* %110, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.105, %if.end.104
  br label %for.cond.52

for.end.108:                                      ; preds = %for.cond.52
  br label %if.end.109

if.end.109:                                       ; preds = %for.end.108, %land.lhs.true.47, %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

cleanup.110:                                      ; preds = %if.end.109, %cleanup
  %111 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #1
  %112 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %112) #1
  %113 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %113) #1
  %114 = bitcast i32* %x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %114) #1
  %115 = load i32, i32* %retval
  ret i32 %115
}

; Function Attrs: nounwind uwtable
define internal void @intersect_al(%struct.line_list_s* %ll, i32 %y, i32* %y_top, i32 %draw, i32 %all_bands) #0 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %y.addr = alloca i32, align 4
  %y_top.addr = alloca i32*, align 8
  %draw.addr = alloca i32, align 4
  %all_bands.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y1 = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %stopx = alloca %struct.active_line_s*, align 8
  %endp = alloca %struct.active_line_s*, align 8
  %nx = alloca i32, align 4
  %y_new = alloca i32, align 4
  %nx0 = alloca i32, align 4
  %nx1 = alloca i32, align 4
  %w0 = alloca i64, align 8
  %w1 = alloca i64, align 8
  %x1 = alloca i32, align 4
  %sx = alloca double, align 8
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %w = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %y, i32* %y.addr, align 4, !tbaa !5
  store i32* %y_top, i32** %y_top.addr, align 8, !tbaa !1
  store i32 %draw, i32* %draw.addr, align 4, !tbaa !5
  store i32 %all_bands, i32* %all_bands.addr, align 4, !tbaa !5
  %0 = bitcast i32* %x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 -2147483648, i32* %x, align 4, !tbaa !5
  %1 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load i32*, i32** %y_top.addr, align 8, !tbaa !1
  %3 = load i32, i32* %2, align 4, !tbaa !5
  store i32 %3, i32* %y1, align 4, !tbaa !5
  %4 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.active_line_s** %stopx to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.active_line_s* null, %struct.active_line_s** %stopx, align 8, !tbaa !1
  %6 = bitcast %struct.active_line_s** %endp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store %struct.active_line_s* null, %struct.active_line_s** %endp, align 8, !tbaa !1
  %7 = load i32, i32* %y.addr, align 4, !tbaa !5
  %8 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp = icmp eq i32 %7, %8
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %if.end.376

if.else:                                          ; preds = %entry
  %9 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %9, i32 0, i32 19
  %10 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %pseudo_rasterization = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %10, i32 0, i32 0
  %11 = load i32, i32* %pseudo_rasterization, align 4, !tbaa !89
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then.4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %12 = load i32, i32* %draw.addr, align 4, !tbaa !5
  %cmp1 = icmp sge i32 %12, 0
  br i1 %cmp1, label %if.then.4, label %lor.lhs.false.2

lor.lhs.false.2:                                  ; preds = %lor.lhs.false
  %13 = load i32, i32* %all_bands.addr, align 4, !tbaa !5
  %tobool3 = icmp ne i32 %13, 0
  br i1 %tobool3, label %if.then.4, label %if.else.325

if.then.4:                                        ; preds = %lor.lhs.false.2, %lor.lhs.false, %if.else
  %14 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %14, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  %15 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !201
  store %struct.active_line_s* %15, %struct.active_line_s** %stopx, align 8, !tbaa !1
  store %struct.active_line_s* %15, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.4
  %16 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.active_line_s* %16, null
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = bitcast i32* %nx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  %18 = load i32, i32* %y1, align 4, !tbaa !5
  %19 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %19, i32 0, i32 1
  %y6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %20 = load i32, i32* %y6, align 4, !tbaa !195
  %cmp7 = icmp eq i32 %18, %20
  br i1 %cmp7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %21 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end8 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %21, i32 0, i32 1
  %x9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end8, i32 0, i32 0
  %22 = load i32, i32* %x9, align 4, !tbaa !194
  br label %cond.end.27

cond.false:                                       ; preds = %for.body
  %23 = load i32, i32* %y1, align 4, !tbaa !5
  %24 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %y_fast_max = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %24, i32 0, i32 3
  %25 = load i32, i32* %y_fast_max, align 4, !tbaa !199
  %cmp10 = icmp sle i32 %23, %25
  br i1 %cmp10, label %cond.true.11, label %cond.false.16

cond.true.11:                                     ; preds = %cond.false
  %26 = load i32, i32* %y1, align 4, !tbaa !5
  %27 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %27, i32 0, i32 0
  %y12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %28 = load i32, i32* %y12, align 4, !tbaa !187
  %sub = sub nsw i32 %26, %28
  %29 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %29, i32 0, i32 2
  %x13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff, i32 0, i32 0
  %30 = load i32, i32* %x13, align 4, !tbaa !196
  %mul = mul nsw i32 %sub, %30
  %31 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %num_adjust = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %31, i32 0, i32 4
  %32 = load i32, i32* %num_adjust, align 4, !tbaa !198
  %add = add nsw i32 %mul, %32
  %33 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff14 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %33, i32 0, i32 2
  %y15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff14, i32 0, i32 1
  %34 = load i32, i32* %y15, align 4, !tbaa !197
  %div = sdiv i32 %add, %34
  br label %cond.end

cond.false.16:                                    ; preds = %cond.false
  %35 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %35, i32 0, i32 2
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff17, i32 0, i32 0
  %36 = load i32, i32* %x18, align 4, !tbaa !196
  %37 = load i32, i32* %y1, align 4, !tbaa !5
  %38 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start19 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %38, i32 0, i32 0
  %y20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start19, i32 0, i32 1
  %39 = load i32, i32* %y20, align 4, !tbaa !187
  %sub21 = sub nsw i32 %37, %39
  %40 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %40, i32 0, i32 2
  %y23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff22, i32 0, i32 1
  %41 = load i32, i32* %y23, align 4, !tbaa !197
  %call = call i32 @fixed_mult_quo(i32 %36, i32 %sub21, i32 %41) #5
  br label %cond.end

cond.end:                                         ; preds = %cond.false.16, %cond.true.11
  %cond = phi i32 [ %div, %cond.true.11 ], [ %call, %cond.false.16 ]
  %42 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start24 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %42, i32 0, i32 0
  %x25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start24, i32 0, i32 0
  %43 = load i32, i32* %x25, align 4, !tbaa !193
  %add26 = add nsw i32 %cond, %43
  br label %cond.end.27

cond.end.27:                                      ; preds = %cond.end, %cond.true
  %cond28 = phi i32 [ %22, %cond.true ], [ %add26, %cond.end ]
  store i32 %cond28, i32* %nx, align 4, !tbaa !5
  %44 = bitcast i32* %y_new to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #1
  %45 = load i32, i32* %nx, align 4, !tbaa !5
  %46 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 6
  store i32 %45, i32* %x_next, align 4, !tbaa !205
  %47 = load i32, i32* %nx, align 4, !tbaa !5
  %48 = load i32, i32* %x, align 4, !tbaa !5
  %cmp29 = icmp sge i32 %47, %48
  br i1 %cmp29, label %if.then.30, label %if.else.31

if.then.30:                                       ; preds = %cond.end.27
  %49 = load i32, i32* %nx, align 4, !tbaa !5
  store i32 %49, i32* %x, align 4, !tbaa !5
  br label %if.end.151

if.else.31:                                       ; preds = %cond.end.27
  %50 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %50, i32 0, i32 5
  %51 = load i32, i32* %x_current, align 4, !tbaa !204
  %52 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %x_current32 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 5
  %53 = load i32, i32* %x_current32, align 4, !tbaa !204
  %cmp33 = icmp sge i32 %51, %53
  br i1 %cmp33, label %land.lhs.true, label %if.end.150

land.lhs.true:                                    ; preds = %if.else.31
  %54 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %55 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %56 = load i32, i32* %y.addr, align 4, !tbaa !5
  %57 = load i32, i32* %y1, align 4, !tbaa !5
  %call34 = call i32 @intersect(%struct.active_line_s* %54, %struct.active_line_s* %55, i32 %56, i32 %57, i32* %y_new) #5
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.then.36, label %if.end.150

if.then.36:                                       ; preds = %land.lhs.true
  %58 = load i32, i32* %y_new, align 4, !tbaa !5
  %59 = load i32, i32* %y1, align 4, !tbaa !5
  %cmp37 = icmp sle i32 %58, %59
  br i1 %cmp37, label %if.then.38, label %if.end.145

if.then.38:                                       ; preds = %if.then.36
  %60 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  store %struct.active_line_s* %60, %struct.active_line_s** %stopx, align 8, !tbaa !1
  %61 = load i32, i32* %y_new, align 4, !tbaa !5
  store i32 %61, i32* %y1, align 4, !tbaa !5
  %62 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %diff39 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %62, i32 0, i32 2
  %x40 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff39, i32 0, i32 0
  %63 = load i32, i32* %x40, align 4, !tbaa !196
  %cmp41 = icmp eq i32 %63, 0
  br i1 %cmp41, label %if.then.42, label %if.else.45

if.then.42:                                       ; preds = %if.then.38
  %64 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %start43 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 0
  %x44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start43, i32 0, i32 0
  %65 = load i32, i32* %x44, align 4, !tbaa !193
  store i32 %65, i32* %nx, align 4, !tbaa !5
  br label %if.end.142

if.else.45:                                       ; preds = %if.then.38
  %66 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %66, i32 0, i32 2
  %x47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff46, i32 0, i32 0
  %67 = load i32, i32* %x47, align 4, !tbaa !196
  %cmp48 = icmp eq i32 %67, 0
  br i1 %cmp48, label %if.then.49, label %if.else.52

if.then.49:                                       ; preds = %if.else.45
  %68 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start50 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %68, i32 0, i32 0
  %x51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start50, i32 0, i32 0
  %69 = load i32, i32* %x51, align 4, !tbaa !193
  store i32 %69, i32* %nx, align 4, !tbaa !5
  br label %if.end.141

if.else.52:                                       ; preds = %if.else.45
  %70 = bitcast i32* %nx0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %70) #1
  %71 = load i32, i32* %y1, align 4, !tbaa !5
  %72 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %end53 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %72, i32 0, i32 1
  %y54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end53, i32 0, i32 1
  %73 = load i32, i32* %y54, align 4, !tbaa !195
  %cmp55 = icmp eq i32 %71, %73
  br i1 %cmp55, label %cond.true.56, label %cond.false.59

cond.true.56:                                     ; preds = %if.else.52
  %74 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %end57 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %74, i32 0, i32 1
  %x58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end57, i32 0, i32 0
  %75 = load i32, i32* %x58, align 4, !tbaa !194
  br label %cond.end.88

cond.false.59:                                    ; preds = %if.else.52
  %76 = load i32, i32* %y1, align 4, !tbaa !5
  %77 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %y_fast_max60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %77, i32 0, i32 3
  %78 = load i32, i32* %y_fast_max60, align 4, !tbaa !199
  %cmp61 = icmp sle i32 %76, %78
  br i1 %cmp61, label %cond.true.62, label %cond.false.74

cond.true.62:                                     ; preds = %cond.false.59
  %79 = load i32, i32* %y1, align 4, !tbaa !5
  %80 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %start63 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %80, i32 0, i32 0
  %y64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start63, i32 0, i32 1
  %81 = load i32, i32* %y64, align 4, !tbaa !187
  %sub65 = sub nsw i32 %79, %81
  %82 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %diff66 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %82, i32 0, i32 2
  %x67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff66, i32 0, i32 0
  %83 = load i32, i32* %x67, align 4, !tbaa !196
  %mul68 = mul nsw i32 %sub65, %83
  %84 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %num_adjust69 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %84, i32 0, i32 4
  %85 = load i32, i32* %num_adjust69, align 4, !tbaa !198
  %add70 = add nsw i32 %mul68, %85
  %86 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %diff71 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %86, i32 0, i32 2
  %y72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff71, i32 0, i32 1
  %87 = load i32, i32* %y72, align 4, !tbaa !197
  %div73 = sdiv i32 %add70, %87
  br label %cond.end.83

cond.false.74:                                    ; preds = %cond.false.59
  %88 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %diff75 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %88, i32 0, i32 2
  %x76 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff75, i32 0, i32 0
  %89 = load i32, i32* %x76, align 4, !tbaa !196
  %90 = load i32, i32* %y1, align 4, !tbaa !5
  %91 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %start77 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %91, i32 0, i32 0
  %y78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start77, i32 0, i32 1
  %92 = load i32, i32* %y78, align 4, !tbaa !187
  %sub79 = sub nsw i32 %90, %92
  %93 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %diff80 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %93, i32 0, i32 2
  %y81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff80, i32 0, i32 1
  %94 = load i32, i32* %y81, align 4, !tbaa !197
  %call82 = call i32 @fixed_mult_quo(i32 %89, i32 %sub79, i32 %94) #5
  br label %cond.end.83

cond.end.83:                                      ; preds = %cond.false.74, %cond.true.62
  %cond84 = phi i32 [ %div73, %cond.true.62 ], [ %call82, %cond.false.74 ]
  %95 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %start85 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %95, i32 0, i32 0
  %x86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start85, i32 0, i32 0
  %96 = load i32, i32* %x86, align 4, !tbaa !193
  %add87 = add nsw i32 %cond84, %96
  br label %cond.end.88

cond.end.88:                                      ; preds = %cond.end.83, %cond.true.56
  %cond89 = phi i32 [ %75, %cond.true.56 ], [ %add87, %cond.end.83 ]
  store i32 %cond89, i32* %nx0, align 4, !tbaa !5
  %97 = bitcast i32* %nx1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %97) #1
  %98 = load i32, i32* %y1, align 4, !tbaa !5
  %99 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end90 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %99, i32 0, i32 1
  %y91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end90, i32 0, i32 1
  %100 = load i32, i32* %y91, align 4, !tbaa !195
  %cmp92 = icmp eq i32 %98, %100
  br i1 %cmp92, label %cond.true.93, label %cond.false.96

cond.true.93:                                     ; preds = %cond.end.88
  %101 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end94 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %101, i32 0, i32 1
  %x95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end94, i32 0, i32 0
  %102 = load i32, i32* %x95, align 4, !tbaa !194
  br label %cond.end.125

cond.false.96:                                    ; preds = %cond.end.88
  %103 = load i32, i32* %y1, align 4, !tbaa !5
  %104 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %y_fast_max97 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %104, i32 0, i32 3
  %105 = load i32, i32* %y_fast_max97, align 4, !tbaa !199
  %cmp98 = icmp sle i32 %103, %105
  br i1 %cmp98, label %cond.true.99, label %cond.false.111

cond.true.99:                                     ; preds = %cond.false.96
  %106 = load i32, i32* %y1, align 4, !tbaa !5
  %107 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start100 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %107, i32 0, i32 0
  %y101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start100, i32 0, i32 1
  %108 = load i32, i32* %y101, align 4, !tbaa !187
  %sub102 = sub nsw i32 %106, %108
  %109 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff103 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %109, i32 0, i32 2
  %x104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff103, i32 0, i32 0
  %110 = load i32, i32* %x104, align 4, !tbaa !196
  %mul105 = mul nsw i32 %sub102, %110
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %num_adjust106 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 4
  %112 = load i32, i32* %num_adjust106, align 4, !tbaa !198
  %add107 = add nsw i32 %mul105, %112
  %113 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff108 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 2
  %y109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff108, i32 0, i32 1
  %114 = load i32, i32* %y109, align 4, !tbaa !197
  %div110 = sdiv i32 %add107, %114
  br label %cond.end.120

cond.false.111:                                   ; preds = %cond.false.96
  %115 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff112 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %115, i32 0, i32 2
  %x113 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff112, i32 0, i32 0
  %116 = load i32, i32* %x113, align 4, !tbaa !196
  %117 = load i32, i32* %y1, align 4, !tbaa !5
  %118 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start114 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %118, i32 0, i32 0
  %y115 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start114, i32 0, i32 1
  %119 = load i32, i32* %y115, align 4, !tbaa !187
  %sub116 = sub nsw i32 %117, %119
  %120 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff117 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %120, i32 0, i32 2
  %y118 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff117, i32 0, i32 1
  %121 = load i32, i32* %y118, align 4, !tbaa !197
  %call119 = call i32 @fixed_mult_quo(i32 %116, i32 %sub116, i32 %121) #5
  br label %cond.end.120

cond.end.120:                                     ; preds = %cond.false.111, %cond.true.99
  %cond121 = phi i32 [ %div110, %cond.true.99 ], [ %call119, %cond.false.111 ]
  %122 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start122 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %122, i32 0, i32 0
  %x123 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start122, i32 0, i32 0
  %123 = load i32, i32* %x123, align 4, !tbaa !193
  %add124 = add nsw i32 %cond121, %123
  br label %cond.end.125

cond.end.125:                                     ; preds = %cond.end.120, %cond.true.93
  %cond126 = phi i32 [ %102, %cond.true.93 ], [ %add124, %cond.end.120 ]
  store i32 %cond126, i32* %nx1, align 4, !tbaa !5
  %124 = load i32, i32* %nx0, align 4, !tbaa !5
  %125 = load i32, i32* %nx1, align 4, !tbaa !5
  %cmp127 = icmp ne i32 %124, %125
  br i1 %cmp127, label %if.then.128, label %if.else.140

if.then.128:                                      ; preds = %cond.end.125
  %126 = bitcast i64* %w0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %126) #1
  %127 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %call129 = call i32 @coord_weight(%struct.active_line_s* %127) #5
  %conv = sext i32 %call129 to i64
  store i64 %conv, i64* %w0, align 8, !tbaa !203
  %128 = bitcast i64* %w1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %128) #1
  %129 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %call130 = call i32 @coord_weight(%struct.active_line_s* %129) #5
  %conv131 = sext i32 %call130 to i64
  store i64 %conv131, i64* %w1, align 8, !tbaa !203
  %130 = load i64, i64* %w0, align 8, !tbaa !203
  %131 = load i32, i32* %nx0, align 4, !tbaa !5
  %conv132 = sext i32 %131 to i64
  %mul133 = mul nsw i64 %130, %conv132
  %132 = load i64, i64* %w1, align 8, !tbaa !203
  %133 = load i32, i32* %nx1, align 4, !tbaa !5
  %conv134 = sext i32 %133 to i64
  %mul135 = mul nsw i64 %132, %conv134
  %add136 = add nsw i64 %mul133, %mul135
  %134 = load i64, i64* %w0, align 8, !tbaa !203
  %135 = load i64, i64* %w1, align 8, !tbaa !203
  %add137 = add nsw i64 %134, %135
  %div138 = sdiv i64 %add136, %add137
  %conv139 = trunc i64 %div138 to i32
  store i32 %conv139, i32* %nx, align 4, !tbaa !5
  %136 = bitcast i64* %w1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %136) #1
  %137 = bitcast i64* %w0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %137) #1
  br label %if.end

if.else.140:                                      ; preds = %cond.end.125
  %138 = load i32, i32* %nx0, align 4, !tbaa !5
  store i32 %138, i32* %nx, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else.140, %if.then.128
  %139 = bitcast i32* %nx1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %139) #1
  %140 = bitcast i32* %nx0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %140) #1
  br label %if.end.141

if.end.141:                                       ; preds = %if.end, %if.then.49
  br label %if.end.142

if.end.142:                                       ; preds = %if.end.141, %if.then.42
  %141 = load i32, i32* %nx, align 4, !tbaa !5
  %142 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next143 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %142, i32 0, i32 6
  store i32 %141, i32* %x_next143, align 4, !tbaa !205
  %143 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %x_next144 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %143, i32 0, i32 6
  store i32 %141, i32* %x_next144, align 4, !tbaa !205
  store i32 0, i32* %draw.addr, align 4, !tbaa !5
  br label %if.end.145

if.end.145:                                       ; preds = %if.end.142, %if.then.36
  %144 = load i32, i32* %nx, align 4, !tbaa !5
  %145 = load i32, i32* %x, align 4, !tbaa !5
  %cmp146 = icmp sgt i32 %144, %145
  br i1 %cmp146, label %if.then.148, label %if.end.149

if.then.148:                                      ; preds = %if.end.145
  %146 = load i32, i32* %nx, align 4, !tbaa !5
  store i32 %146, i32* %x, align 4, !tbaa !5
  br label %if.end.149

if.end.149:                                       ; preds = %if.then.148, %if.end.145
  br label %if.end.150

if.end.150:                                       ; preds = %if.end.149, %land.lhs.true, %if.else.31
  br label %if.end.151

if.end.151:                                       ; preds = %if.end.150, %if.then.30
  %147 = bitcast i32* %y_new to i8*
  call void @llvm.lifetime.end(i64 4, i8* %147) #1
  %148 = bitcast i32* %nx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %148) #1
  br label %for.inc

for.inc:                                          ; preds = %if.end.151
  %149 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %149, %struct.active_line_s** %endp, align 8, !tbaa !1
  %150 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next152 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %150, i32 0, i32 15
  %151 = load %struct.active_line_s*, %struct.active_line_s** %next152, align 8, !tbaa !189
  store %struct.active_line_s* %151, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %152 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head153 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %152, i32 0, i32 7
  %next154 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head153, i32 0, i32 15
  %153 = load %struct.active_line_s*, %struct.active_line_s** %next154, align 8, !tbaa !201
  store %struct.active_line_s* %153, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.155

for.cond.155:                                     ; preds = %for.inc.199, %for.end
  %154 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %155 = load %struct.active_line_s*, %struct.active_line_s** %stopx, align 8, !tbaa !1
  %cmp156 = icmp ne %struct.active_line_s* %154, %155
  br i1 %cmp156, label %for.body.158, label %for.end.201

for.body.158:                                     ; preds = %for.cond.155
  %156 = load i32, i32* %y1, align 4, !tbaa !5
  %157 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end159 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %157, i32 0, i32 1
  %y160 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end159, i32 0, i32 1
  %158 = load i32, i32* %y160, align 4, !tbaa !195
  %cmp161 = icmp eq i32 %156, %158
  br i1 %cmp161, label %cond.true.163, label %cond.false.166

cond.true.163:                                    ; preds = %for.body.158
  %159 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end164 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %159, i32 0, i32 1
  %x165 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end164, i32 0, i32 0
  %160 = load i32, i32* %x165, align 4, !tbaa !194
  br label %cond.end.196

cond.false.166:                                   ; preds = %for.body.158
  %161 = load i32, i32* %y1, align 4, !tbaa !5
  %162 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %y_fast_max167 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %162, i32 0, i32 3
  %163 = load i32, i32* %y_fast_max167, align 4, !tbaa !199
  %cmp168 = icmp sle i32 %161, %163
  br i1 %cmp168, label %cond.true.170, label %cond.false.182

cond.true.170:                                    ; preds = %cond.false.166
  %164 = load i32, i32* %y1, align 4, !tbaa !5
  %165 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start171 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %165, i32 0, i32 0
  %y172 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start171, i32 0, i32 1
  %166 = load i32, i32* %y172, align 4, !tbaa !187
  %sub173 = sub nsw i32 %164, %166
  %167 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff174 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %167, i32 0, i32 2
  %x175 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff174, i32 0, i32 0
  %168 = load i32, i32* %x175, align 4, !tbaa !196
  %mul176 = mul nsw i32 %sub173, %168
  %169 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %num_adjust177 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %169, i32 0, i32 4
  %170 = load i32, i32* %num_adjust177, align 4, !tbaa !198
  %add178 = add nsw i32 %mul176, %170
  %171 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff179 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %171, i32 0, i32 2
  %y180 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff179, i32 0, i32 1
  %172 = load i32, i32* %y180, align 4, !tbaa !197
  %div181 = sdiv i32 %add178, %172
  br label %cond.end.191

cond.false.182:                                   ; preds = %cond.false.166
  %173 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff183 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 2
  %x184 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff183, i32 0, i32 0
  %174 = load i32, i32* %x184, align 4, !tbaa !196
  %175 = load i32, i32* %y1, align 4, !tbaa !5
  %176 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start185 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %176, i32 0, i32 0
  %y186 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start185, i32 0, i32 1
  %177 = load i32, i32* %y186, align 4, !tbaa !187
  %sub187 = sub nsw i32 %175, %177
  %178 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff188 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %178, i32 0, i32 2
  %y189 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff188, i32 0, i32 1
  %179 = load i32, i32* %y189, align 4, !tbaa !197
  %call190 = call i32 @fixed_mult_quo(i32 %174, i32 %sub187, i32 %179) #5
  br label %cond.end.191

cond.end.191:                                     ; preds = %cond.false.182, %cond.true.170
  %cond192 = phi i32 [ %div181, %cond.true.170 ], [ %call190, %cond.false.182 ]
  %180 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start193 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %180, i32 0, i32 0
  %x194 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start193, i32 0, i32 0
  %181 = load i32, i32* %x194, align 4, !tbaa !193
  %add195 = add nsw i32 %cond192, %181
  br label %cond.end.196

cond.end.196:                                     ; preds = %cond.end.191, %cond.true.163
  %cond197 = phi i32 [ %160, %cond.true.163 ], [ %add195, %cond.end.191 ]
  %182 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next198 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %182, i32 0, i32 6
  store i32 %cond197, i32* %x_next198, align 4, !tbaa !205
  br label %for.inc.199

for.inc.199:                                      ; preds = %cond.end.196
  %183 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next200 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %183, i32 0, i32 15
  %184 = load %struct.active_line_s*, %struct.active_line_s** %next200, align 8, !tbaa !189
  store %struct.active_line_s* %184, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.155

for.end.201:                                      ; preds = %for.cond.155
  %185 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head202 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %185, i32 0, i32 7
  %next203 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head202, i32 0, i32 15
  %186 = load %struct.active_line_s*, %struct.active_line_s** %next203, align 8, !tbaa !201
  %cmp204 = icmp ne %struct.active_line_s* %186, null
  br i1 %cmp204, label %if.then.206, label %if.end.324

if.then.206:                                      ; preds = %for.end.201
  br label %for.cond.207

for.cond.207:                                     ; preds = %cleanup.cont, %if.then.206
  %187 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %187) #1
  %188 = bitcast double* %sx to i8*
  call void @llvm.lifetime.start(i64 8, i8* %188) #1
  store double 0x41E755BE01A00000, double* %sx, align 8, !tbaa !206
  %189 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %189) #1
  store i32 -1163005939, i32* %k, align 4, !tbaa !5
  %190 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %190) #1
  %191 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head208 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %191, i32 0, i32 7
  %next209 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head208, i32 0, i32 15
  %192 = load %struct.active_line_s*, %struct.active_line_s** %next209, align 8, !tbaa !201
  store %struct.active_line_s* %192, %struct.active_line_s** %endp, align 8, !tbaa !1
  %193 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %x_next210 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %193, i32 0, i32 6
  %194 = load i32, i32* %x_next210, align 4, !tbaa !205
  store i32 %194, i32* %x1, align 4, !tbaa !5
  %195 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %next211 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %195, i32 0, i32 15
  %196 = load %struct.active_line_s*, %struct.active_line_s** %next211, align 8, !tbaa !189
  store %struct.active_line_s* %196, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.212

for.cond.212:                                     ; preds = %for.inc.221, %for.cond.207
  %197 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp213 = icmp ne %struct.active_line_s* %197, null
  br i1 %cmp213, label %for.body.215, label %for.end.224

for.body.215:                                     ; preds = %for.cond.212
  %198 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next216 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %198, i32 0, i32 6
  %199 = load i32, i32* %x_next216, align 4, !tbaa !205
  %200 = load i32, i32* %x1, align 4, !tbaa !5
  %cmp217 = icmp slt i32 %199, %200
  br i1 %cmp217, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %for.body.215
  br label %for.end.224

if.end.220:                                       ; preds = %for.body.215
  br label %for.inc.221

for.inc.221:                                      ; preds = %if.end.220
  %201 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next222 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %201, i32 0, i32 6
  %202 = load i32, i32* %x_next222, align 4, !tbaa !205
  store i32 %202, i32* %x1, align 4, !tbaa !5
  %203 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next223 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %203, i32 0, i32 15
  %204 = load %struct.active_line_s*, %struct.active_line_s** %next223, align 8, !tbaa !189
  store %struct.active_line_s* %204, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.212

for.end.224:                                      ; preds = %if.then.219, %for.cond.212
  %205 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp225 = icmp eq %struct.active_line_s* %205, null
  br i1 %cmp225, label %if.then.227, label %if.end.228

if.then.227:                                      ; preds = %for.end.224
  store i32 8, i32* %cleanup.dest.slot
  br label %cleanup

if.end.228:                                       ; preds = %for.end.224
  %206 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %x_next229 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %206, i32 0, i32 6
  %207 = load i32, i32* %x_next229, align 4, !tbaa !205
  store i32 %207, i32* %x1, align 4, !tbaa !5
  store i32 0, i32* %n, align 4, !tbaa !5
  %208 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %next230 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %208, i32 0, i32 15
  %209 = load %struct.active_line_s*, %struct.active_line_s** %next230, align 8, !tbaa !189
  store %struct.active_line_s* %209, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.231

for.cond.231:                                     ; preds = %for.inc.300, %if.end.228
  %210 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp232 = icmp ne %struct.active_line_s* %210, null
  br i1 %cmp232, label %for.body.234, label %for.end.302

for.body.234:                                     ; preds = %for.cond.231
  %211 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next235 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %211, i32 0, i32 6
  %212 = load i32, i32* %x_next235, align 4, !tbaa !205
  store i32 %212, i32* %x, align 4, !tbaa !5
  %213 = load i32, i32* %x, align 4, !tbaa !5
  %214 = load i32, i32* %x1, align 4, !tbaa !5
  %cmp236 = icmp slt i32 %213, %214
  br i1 %cmp236, label %if.then.238, label %if.else.280

if.then.238:                                      ; preds = %for.body.234
  %215 = load i32, i32* %n, align 4, !tbaa !5
  %cmp239 = icmp eq i32 %215, 0
  br i1 %cmp239, label %if.then.241, label %if.end.254

if.then.241:                                      ; preds = %if.then.238
  %216 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %diff242 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %216, i32 0, i32 2
  %x243 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff242, i32 0, i32 0
  %217 = load i32, i32* %x243, align 4, !tbaa !196
  %cmp244 = icmp eq i32 %217, 0
  br i1 %cmp244, label %if.then.246, label %if.else.248

if.then.246:                                      ; preds = %if.then.241
  store i32 -1, i32* %k, align 4, !tbaa !5
  %218 = load i32, i32* %x1, align 4, !tbaa !5
  %conv247 = sitofp i32 %218 to double
  store double %conv247, double* %sx, align 8, !tbaa !206
  br label %if.end.253

if.else.248:                                      ; preds = %if.then.241
  %219 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %call249 = call i32 @coord_weight(%struct.active_line_s* %219) #5
  store i32 %call249, i32* %k, align 4, !tbaa !5
  %220 = load i32, i32* %x1, align 4, !tbaa !5
  %conv250 = sitofp i32 %220 to double
  %221 = load i32, i32* %k, align 4, !tbaa !5
  %conv251 = sitofp i32 %221 to double
  %mul252 = fmul double %conv250, %conv251
  store double %mul252, double* %sx, align 8, !tbaa !206
  br label %if.end.253

if.end.253:                                       ; preds = %if.else.248, %if.then.246
  store i32 1, i32* %n, align 4, !tbaa !5
  br label %if.end.254

if.end.254:                                       ; preds = %if.end.253, %if.then.238
  %222 = load i32, i32* %n, align 4, !tbaa !5
  %inc = add nsw i32 %222, 1
  store i32 %inc, i32* %n, align 4, !tbaa !5
  %223 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff255 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %223, i32 0, i32 2
  %x256 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff255, i32 0, i32 0
  %224 = load i32, i32* %x256, align 4, !tbaa !196
  %cmp257 = icmp eq i32 %224, 0
  br i1 %cmp257, label %if.then.259, label %if.else.268

if.then.259:                                      ; preds = %if.end.254
  %225 = load i32, i32* %k, align 4, !tbaa !5
  %cmp260 = icmp sle i32 %225, -1
  br i1 %cmp260, label %if.then.262, label %if.else.265

if.then.262:                                      ; preds = %if.then.259
  %226 = load i32, i32* %x, align 4, !tbaa !5
  %conv263 = sitofp i32 %226 to double
  %227 = load double, double* %sx, align 8, !tbaa !206
  %add264 = fadd double %227, %conv263
  store double %add264, double* %sx, align 8, !tbaa !206
  %228 = load i32, i32* %k, align 4, !tbaa !5
  %dec = add nsw i32 %228, -1
  store i32 %dec, i32* %k, align 4, !tbaa !5
  br label %if.end.267

if.else.265:                                      ; preds = %if.then.259
  store i32 -1, i32* %k, align 4, !tbaa !5
  %229 = load i32, i32* %x, align 4, !tbaa !5
  %conv266 = sitofp i32 %229 to double
  store double %conv266, double* %sx, align 8, !tbaa !206
  br label %if.end.267

if.end.267:                                       ; preds = %if.else.265, %if.then.262
  br label %if.end.279

if.else.268:                                      ; preds = %if.end.254
  %230 = load i32, i32* %k, align 4, !tbaa !5
  %cmp269 = icmp sgt i32 %230, 0
  br i1 %cmp269, label %if.then.271, label %if.end.278

if.then.271:                                      ; preds = %if.else.268
  %231 = bitcast i32* %w to i8*
  call void @llvm.lifetime.start(i64 4, i8* %231) #1
  %232 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %call272 = call i32 @coord_weight(%struct.active_line_s* %232) #5
  store i32 %call272, i32* %w, align 4, !tbaa !5
  %233 = load i32, i32* %x, align 4, !tbaa !5
  %conv273 = sitofp i32 %233 to double
  %234 = load i32, i32* %w, align 4, !tbaa !5
  %conv274 = sitofp i32 %234 to double
  %mul275 = fmul double %conv273, %conv274
  %235 = load double, double* %sx, align 8, !tbaa !206
  %add276 = fadd double %235, %mul275
  store double %add276, double* %sx, align 8, !tbaa !206
  %236 = load i32, i32* %w, align 4, !tbaa !5
  %237 = load i32, i32* %k, align 4, !tbaa !5
  %add277 = add nsw i32 %237, %236
  store i32 %add277, i32* %k, align 4, !tbaa !5
  %238 = bitcast i32* %w to i8*
  call void @llvm.lifetime.end(i64 4, i8* %238) #1
  br label %if.end.278

if.end.278:                                       ; preds = %if.then.271, %if.else.268
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %if.end.267
  br label %if.end.299

if.else.280:                                      ; preds = %for.body.234
  %239 = load i32, i32* %n, align 4, !tbaa !5
  %cmp281 = icmp sgt i32 %239, 1
  br i1 %cmp281, label %if.then.283, label %if.end.297

if.then.283:                                      ; preds = %if.else.280
  %240 = load i32, i32* %k, align 4, !tbaa !5
  %cmp284 = icmp slt i32 %240, 0
  br i1 %cmp284, label %cond.true.286, label %cond.false.288

cond.true.286:                                    ; preds = %if.then.283
  %241 = load i32, i32* %k, align 4, !tbaa !5
  %sub287 = sub nsw i32 0, %241
  br label %cond.end.289

cond.false.288:                                   ; preds = %if.then.283
  %242 = load i32, i32* %k, align 4, !tbaa !5
  br label %cond.end.289

cond.end.289:                                     ; preds = %cond.false.288, %cond.true.286
  %cond290 = phi i32 [ %sub287, %cond.true.286 ], [ %242, %cond.false.288 ]
  store i32 %cond290, i32* %k, align 4, !tbaa !5
  %243 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %244 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %245 = load double, double* %sx, align 8, !tbaa !206
  %246 = load i32, i32* %k, align 4, !tbaa !5
  %div291 = sdiv i32 %246, 2
  %conv292 = sitofp i32 %div291 to double
  %add293 = fadd double %245, %conv292
  %247 = load i32, i32* %k, align 4, !tbaa !5
  %conv294 = sitofp i32 %247 to double
  %div295 = fdiv double %add293, %conv294
  %conv296 = fptosi double %div295 to i32
  call void @set_x_next(%struct.active_line_s* %243, %struct.active_line_s* %244, i32 %conv296) #5
  br label %if.end.297

if.end.297:                                       ; preds = %cond.end.289, %if.else.280
  %248 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next298 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %248, i32 0, i32 6
  %249 = load i32, i32* %x_next298, align 4, !tbaa !205
  store i32 %249, i32* %x1, align 4, !tbaa !5
  store i32 0, i32* %n, align 4, !tbaa !5
  %250 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %250, %struct.active_line_s** %endp, align 8, !tbaa !1
  br label %if.end.299

if.end.299:                                       ; preds = %if.end.297, %if.end.279
  br label %for.inc.300

for.inc.300:                                      ; preds = %if.end.299
  %251 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next301 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %251, i32 0, i32 15
  %252 = load %struct.active_line_s*, %struct.active_line_s** %next301, align 8, !tbaa !189
  store %struct.active_line_s* %252, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.231

for.end.302:                                      ; preds = %for.cond.231
  %253 = load i32, i32* %n, align 4, !tbaa !5
  %cmp303 = icmp sgt i32 %253, 1
  br i1 %cmp303, label %if.then.305, label %if.end.319

if.then.305:                                      ; preds = %for.end.302
  %254 = load i32, i32* %k, align 4, !tbaa !5
  %cmp306 = icmp slt i32 %254, 0
  br i1 %cmp306, label %cond.true.308, label %cond.false.310

cond.true.308:                                    ; preds = %if.then.305
  %255 = load i32, i32* %k, align 4, !tbaa !5
  %sub309 = sub nsw i32 0, %255
  br label %cond.end.311

cond.false.310:                                   ; preds = %if.then.305
  %256 = load i32, i32* %k, align 4, !tbaa !5
  br label %cond.end.311

cond.end.311:                                     ; preds = %cond.false.310, %cond.true.308
  %cond312 = phi i32 [ %sub309, %cond.true.308 ], [ %256, %cond.false.310 ]
  store i32 %cond312, i32* %k, align 4, !tbaa !5
  %257 = load %struct.active_line_s*, %struct.active_line_s** %endp, align 8, !tbaa !1
  %258 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %259 = load double, double* %sx, align 8, !tbaa !206
  %260 = load i32, i32* %k, align 4, !tbaa !5
  %div313 = sdiv i32 %260, 2
  %conv314 = sitofp i32 %div313 to double
  %add315 = fadd double %259, %conv314
  %261 = load i32, i32* %k, align 4, !tbaa !5
  %conv316 = sitofp i32 %261 to double
  %div317 = fdiv double %add315, %conv316
  %conv318 = fptosi double %div317 to i32
  call void @set_x_next(%struct.active_line_s* %257, %struct.active_line_s* %258, i32 %conv318) #5
  br label %if.end.319

if.end.319:                                       ; preds = %cond.end.311, %for.end.302
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.319, %if.then.227
  %262 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %262) #1
  %263 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %263) #1
  %264 = bitcast double* %sx to i8*
  call void @llvm.lifetime.end(i64 8, i8* %264) #1
  %265 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %265) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 8, label %for.end.323
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.cond.207

for.end.323:                                      ; preds = %cleanup
  br label %if.end.324

if.end.324:                                       ; preds = %for.end.323, %for.end.201
  br label %if.end.375

if.else.325:                                      ; preds = %lor.lhs.false.2
  %266 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head326 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %266, i32 0, i32 7
  %next327 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head326, i32 0, i32 15
  %267 = load %struct.active_line_s*, %struct.active_line_s** %next327, align 8, !tbaa !201
  store %struct.active_line_s* %267, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.328

for.cond.328:                                     ; preds = %for.inc.372, %if.else.325
  %268 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %269 = load %struct.active_line_s*, %struct.active_line_s** %stopx, align 8, !tbaa !1
  %cmp329 = icmp ne %struct.active_line_s* %268, %269
  br i1 %cmp329, label %for.body.331, label %for.end.374

for.body.331:                                     ; preds = %for.cond.328
  %270 = load i32, i32* %y1, align 4, !tbaa !5
  %271 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end332 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %271, i32 0, i32 1
  %y333 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end332, i32 0, i32 1
  %272 = load i32, i32* %y333, align 4, !tbaa !195
  %cmp334 = icmp eq i32 %270, %272
  br i1 %cmp334, label %cond.true.336, label %cond.false.339

cond.true.336:                                    ; preds = %for.body.331
  %273 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end337 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %273, i32 0, i32 1
  %x338 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end337, i32 0, i32 0
  %274 = load i32, i32* %x338, align 4, !tbaa !194
  br label %cond.end.369

cond.false.339:                                   ; preds = %for.body.331
  %275 = load i32, i32* %y1, align 4, !tbaa !5
  %276 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %y_fast_max340 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %276, i32 0, i32 3
  %277 = load i32, i32* %y_fast_max340, align 4, !tbaa !199
  %cmp341 = icmp sle i32 %275, %277
  br i1 %cmp341, label %cond.true.343, label %cond.false.355

cond.true.343:                                    ; preds = %cond.false.339
  %278 = load i32, i32* %y1, align 4, !tbaa !5
  %279 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start344 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %279, i32 0, i32 0
  %y345 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start344, i32 0, i32 1
  %280 = load i32, i32* %y345, align 4, !tbaa !187
  %sub346 = sub nsw i32 %278, %280
  %281 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff347 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %281, i32 0, i32 2
  %x348 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff347, i32 0, i32 0
  %282 = load i32, i32* %x348, align 4, !tbaa !196
  %mul349 = mul nsw i32 %sub346, %282
  %283 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %num_adjust350 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %283, i32 0, i32 4
  %284 = load i32, i32* %num_adjust350, align 4, !tbaa !198
  %add351 = add nsw i32 %mul349, %284
  %285 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff352 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %285, i32 0, i32 2
  %y353 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff352, i32 0, i32 1
  %286 = load i32, i32* %y353, align 4, !tbaa !197
  %div354 = sdiv i32 %add351, %286
  br label %cond.end.364

cond.false.355:                                   ; preds = %cond.false.339
  %287 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff356 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %287, i32 0, i32 2
  %x357 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff356, i32 0, i32 0
  %288 = load i32, i32* %x357, align 4, !tbaa !196
  %289 = load i32, i32* %y1, align 4, !tbaa !5
  %290 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start358 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %290, i32 0, i32 0
  %y359 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start358, i32 0, i32 1
  %291 = load i32, i32* %y359, align 4, !tbaa !187
  %sub360 = sub nsw i32 %289, %291
  %292 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff361 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %292, i32 0, i32 2
  %y362 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff361, i32 0, i32 1
  %293 = load i32, i32* %y362, align 4, !tbaa !197
  %call363 = call i32 @fixed_mult_quo(i32 %288, i32 %sub360, i32 %293) #5
  br label %cond.end.364

cond.end.364:                                     ; preds = %cond.false.355, %cond.true.343
  %cond365 = phi i32 [ %div354, %cond.true.343 ], [ %call363, %cond.false.355 ]
  %294 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start366 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %294, i32 0, i32 0
  %x367 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start366, i32 0, i32 0
  %295 = load i32, i32* %x367, align 4, !tbaa !193
  %add368 = add nsw i32 %cond365, %295
  br label %cond.end.369

cond.end.369:                                     ; preds = %cond.end.364, %cond.true.336
  %cond370 = phi i32 [ %274, %cond.true.336 ], [ %add368, %cond.end.364 ]
  %296 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_next371 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %296, i32 0, i32 6
  store i32 %cond370, i32* %x_next371, align 4, !tbaa !205
  br label %for.inc.372

for.inc.372:                                      ; preds = %cond.end.369
  %297 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next373 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %297, i32 0, i32 15
  %298 = load %struct.active_line_s*, %struct.active_line_s** %next373, align 8, !tbaa !189
  store %struct.active_line_s* %298, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.328

for.end.374:                                      ; preds = %for.cond.328
  br label %if.end.375

if.end.375:                                       ; preds = %for.end.374, %if.end.324
  br label %if.end.376

if.end.376:                                       ; preds = %if.end.375, %if.then
  %299 = load i32, i32* %y1, align 4, !tbaa !5
  %300 = load i32*, i32** %y_top.addr, align 8, !tbaa !1
  store i32 %299, i32* %300, align 4, !tbaa !5
  %301 = bitcast %struct.active_line_s** %endp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %301) #1
  %302 = bitcast %struct.active_line_s** %stopx to i8*
  call void @llvm.lifetime.end(i64 8, i8* %302) #1
  %303 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %303) #1
  %304 = bitcast i32* %y1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %304) #1
  %305 = bitcast i32* %x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %305) #1
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i32 @gx_san_trap_store(%struct.gx_device_spot_analyzer_s*, i32, i32, i32, i32, i32, i32, %struct.segment_s*, %struct.segment_s*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @x_order(%struct.active_line_s* %lp1, %struct.active_line_s* %lp2) #0 {
entry:
  %retval = alloca i32, align 4
  %lp1.addr = alloca %struct.active_line_s*, align 8
  %lp2.addr = alloca %struct.active_line_s*, align 8
  %s1 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %dx1 = alloca i32, align 4
  %dy1 = alloca i32, align 4
  %dx2 = alloca i32, align 4
  %dy2 = alloca i32, align 4
  %diff = alloca double, align 8
  store %struct.active_line_s* %lp1, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  store %struct.active_line_s* %lp2, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %0 = bitcast i32* %s1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %1 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %1, i32 0, i32 5
  %2 = load i32, i32* %x_current, align 4, !tbaa !204
  %3 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %x_current1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %3, i32 0, i32 5
  %4 = load i32, i32* %x_current1, align 4, !tbaa !204
  %cmp = icmp slt i32 %2, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.end
  store i32 -1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.end
  %5 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %x_current2 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %5, i32 0, i32 5
  %6 = load i32, i32* %x_current2, align 4, !tbaa !204
  %7 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %x_current3 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %7, i32 0, i32 5
  %8 = load i32, i32* %x_current3, align 4, !tbaa !204
  %cmp4 = icmp sgt i32 %6, %8
  br i1 %cmp4, label %if.then.5, label %if.end

if.then.5:                                        ; preds = %if.else
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.else
  br label %if.end.6

if.end.6:                                         ; preds = %if.end
  %9 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %10 = load i32, i32* %x, align 4, !tbaa !193
  %11 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %11, i32 0, i32 1
  %x7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %12 = load i32, i32* %x7, align 4, !tbaa !194
  %cmp8 = icmp slt i32 %10, %12
  %conv = zext i1 %cmp8 to i32
  store i32 %conv, i32* %s1, align 4, !tbaa !5
  %13 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %start9 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %13, i32 0, i32 0
  %x10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start9, i32 0, i32 0
  %14 = load i32, i32* %x10, align 4, !tbaa !193
  %15 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %end11 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %15, i32 0, i32 1
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end11, i32 0, i32 0
  %16 = load i32, i32* %x12, align 4, !tbaa !194
  %cmp13 = icmp slt i32 %14, %16
  %conv14 = zext i1 %cmp13 to i32
  %cmp15 = icmp ne i32 %conv, %conv14
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.6
  %17 = load i32, i32* %s1, align 4, !tbaa !5
  %tobool = icmp ne i32 %17, 0
  %cond = select i1 %tobool, i32 1, i32 -1
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.6
  br label %do.body.19

do.body.19:                                       ; preds = %if.end.18
  br label %do.cond.20

do.cond.20:                                       ; preds = %do.body.19
  br label %do.end.21

do.end.21:                                        ; preds = %do.cond.20
  %18 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #1
  %19 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %end22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %19, i32 0, i32 1
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end22, i32 0, i32 0
  %20 = load i32, i32* %x23, align 4, !tbaa !194
  %21 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %start24 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %21, i32 0, i32 0
  %x25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start24, i32 0, i32 0
  %22 = load i32, i32* %x25, align 4, !tbaa !193
  %sub = sub nsw i32 %20, %22
  store i32 %sub, i32* %dx1, align 4, !tbaa !5
  %23 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #1
  %24 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %end26 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %24, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end26, i32 0, i32 1
  %25 = load i32, i32* %y, align 4, !tbaa !195
  %26 = load %struct.active_line_s*, %struct.active_line_s** %lp1.addr, align 8, !tbaa !1
  %start27 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %26, i32 0, i32 0
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start27, i32 0, i32 1
  %27 = load i32, i32* %y28, align 4, !tbaa !187
  %sub29 = sub nsw i32 %25, %27
  store i32 %sub29, i32* %dy1, align 4, !tbaa !5
  %28 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  %29 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %end30 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %29, i32 0, i32 1
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end30, i32 0, i32 0
  %30 = load i32, i32* %x31, align 4, !tbaa !194
  %31 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %start32 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %31, i32 0, i32 0
  %x33 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start32, i32 0, i32 0
  %32 = load i32, i32* %x33, align 4, !tbaa !193
  %sub34 = sub nsw i32 %30, %32
  store i32 %sub34, i32* %dx2, align 4, !tbaa !5
  %33 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #1
  %34 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %end35 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %34, i32 0, i32 1
  %y36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end35, i32 0, i32 1
  %35 = load i32, i32* %y36, align 4, !tbaa !195
  %36 = load %struct.active_line_s*, %struct.active_line_s** %lp2.addr, align 8, !tbaa !1
  %start37 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %36, i32 0, i32 0
  %y38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start37, i32 0, i32 1
  %37 = load i32, i32* %y38, align 4, !tbaa !187
  %sub39 = sub nsw i32 %35, %37
  store i32 %sub39, i32* %dy2, align 4, !tbaa !5
  %38 = bitcast double* %diff to i8*
  call void @llvm.lifetime.start(i64 8, i8* %38) #1
  %39 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv40 = sitofp i32 %39 to double
  %40 = load i32, i32* %dy2, align 4, !tbaa !5
  %conv41 = sitofp i32 %40 to double
  %mul = fmul double %conv40, %conv41
  %41 = load i32, i32* %dx2, align 4, !tbaa !5
  %conv42 = sitofp i32 %41 to double
  %42 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv43 = sitofp i32 %42 to double
  %mul44 = fmul double %conv42, %conv43
  %sub45 = fsub double %mul, %mul44
  store double %sub45, double* %diff, align 8, !tbaa !206
  %43 = load double, double* %diff, align 8, !tbaa !206
  %cmp46 = fcmp olt double %43, 0.000000e+00
  br i1 %cmp46, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end.21
  br label %cond.end

cond.false:                                       ; preds = %do.end.21
  %44 = load double, double* %diff, align 8, !tbaa !206
  %cmp48 = fcmp ogt double %44, 0.000000e+00
  %cond50 = select i1 %cmp48, i32 1, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond51 = phi i32 [ -1, %cond.true ], [ %cond50, %cond.false ]
  store i32 %cond51, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %45 = bitcast double* %diff to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #1
  %46 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #1
  %47 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #1
  %48 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  %49 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.then.17, %if.then.5, %if.then
  %50 = bitcast i32* %s1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = load i32, i32* %retval
  ret i32 %51
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @resort_x_line(%struct.active_line_s* %alp) #3 {
entry:
  %alp.addr = alloca %struct.active_line_s*, align 8
  %prev = alloca %struct.active_line_s*, align 8
  %next = alloca %struct.active_line_s*, align 8
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %0 = bitcast %struct.active_line_s** %prev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %1, i32 0, i32 14
  %2 = load %struct.active_line_s*, %struct.active_line_s** %prev1, align 8, !tbaa !188
  store %struct.active_line_s* %2, %struct.active_line_s** %prev, align 8, !tbaa !1
  %3 = bitcast %struct.active_line_s** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next2 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %4, i32 0, i32 15
  %5 = load %struct.active_line_s*, %struct.active_line_s** %next2, align 8, !tbaa !189
  store %struct.active_line_s* %5, %struct.active_line_s** %next, align 8, !tbaa !1
  %6 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %7 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %next3 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %7, i32 0, i32 15
  store %struct.active_line_s* %6, %struct.active_line_s** %next3, align 8, !tbaa !189
  %8 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %tobool = icmp ne %struct.active_line_s* %8, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %10 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %prev4 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %10, i32 0, i32 14
  store %struct.active_line_s* %9, %struct.active_line_s** %prev4, align 8, !tbaa !188
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond

while.cond:                                       ; preds = %do.end, %if.end
  %11 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %12 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %call = call i32 @x_order(%struct.active_line_s* %11, %struct.active_line_s* %12) #5
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %13 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  store %struct.active_line_s* %13, %struct.active_line_s** %next, align 8, !tbaa !1
  %14 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %prev5 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %14, i32 0, i32 14
  %15 = load %struct.active_line_s*, %struct.active_line_s** %prev5, align 8, !tbaa !188
  store %struct.active_line_s* %15, %struct.active_line_s** %prev, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %16 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %17 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next6 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 15
  store %struct.active_line_s* %16, %struct.active_line_s** %next6, align 8, !tbaa !189
  %18 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %19 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev7 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %19, i32 0, i32 14
  store %struct.active_line_s* %18, %struct.active_line_s** %prev7, align 8, !tbaa !188
  %20 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %tobool8 = icmp ne %struct.active_line_s* %20, null
  br i1 %tobool8, label %if.then.9, label %if.end.11

if.then.9:                                        ; preds = %while.end
  %21 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %22 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !1
  %prev10 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %22, i32 0, i32 14
  store %struct.active_line_s* %21, %struct.active_line_s** %prev10, align 8, !tbaa !188
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.9, %while.end
  %23 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %24 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !1
  %next12 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %24, i32 0, i32 15
  store %struct.active_line_s* %23, %struct.active_line_s** %next12, align 8, !tbaa !189
  %25 = bitcast %struct.active_line_s** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #1
  %26 = bitcast %struct.active_line_s** %prev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @end_x_line(%struct.active_line_s* %alp, %struct.line_list_s* %ll, i32 %update) #0 {
entry:
  %retval = alloca i32, align 4
  %alp.addr = alloca %struct.active_line_s*, align 8
  %ll.addr = alloca %struct.line_list_s*, align 8
  %update.addr = alloca i32, align 4
  %pseg = alloca %struct.segment_s*, align 8
  %next = alloca %struct.segment_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %update, i32* %update.addr, align 4, !tbaa !5
  %0 = bitcast %struct.segment_s** %pseg to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %pseg1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %1, i32 0, i32 7
  %2 = load %struct.segment_s*, %struct.segment_s** %pseg1, align 8, !tbaa !177
  store %struct.segment_s* %2, %struct.segment_s** %pseg, align 8, !tbaa !1
  %3 = bitcast %struct.segment_s** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %4, i32 0, i32 8
  %5 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %cond.true, label %cond.false.7

cond.true:                                        ; preds = %entry
  %6 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.segment_s, %struct.segment_s* %6, i32 0, i32 2
  %7 = load i16, i16* %type, align 2, !tbaa !142
  %conv = zext i16 %7 to i32
  %cmp2 = icmp eq i32 %conv, 2
  br i1 %cmp2, label %cond.true.4, label %cond.false

cond.true.4:                                      ; preds = %cond.true
  %8 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %9 = bitcast %struct.segment_s* %8 to %struct.line_close_segment*
  %sub = getelementptr inbounds %struct.line_close_segment, %struct.line_close_segment* %9, i32 0, i32 5
  %10 = load %struct.subpath_s*, %struct.subpath_s** %sub, align 8, !tbaa !149
  %next5 = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %10, i32 0, i32 1
  %11 = load %struct.segment_s*, %struct.segment_s** %next5, align 8, !tbaa !207
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %12 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %next6 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %12, i32 0, i32 1
  %13 = load %struct.segment_s*, %struct.segment_s** %next6, align 8, !tbaa !144
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true.4
  %cond = phi %struct.segment_s* [ %11, %cond.true.4 ], [ %13, %cond.false ]
  br label %cond.end.17

cond.false.7:                                     ; preds = %entry
  %14 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %type8 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %14, i32 0, i32 2
  %15 = load i16, i16* %type8, align 2, !tbaa !142
  %conv9 = zext i16 %15 to i32
  %cmp10 = icmp eq i32 %conv9, 0
  br i1 %cmp10, label %cond.true.12, label %cond.false.13

cond.true.12:                                     ; preds = %cond.false.7
  %16 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %17 = bitcast %struct.segment_s* %16 to %struct.subpath_s*
  %last = getelementptr inbounds %struct.subpath_s, %struct.subpath_s* %17, i32 0, i32 5
  %18 = load %struct.segment_s*, %struct.segment_s** %last, align 8, !tbaa !138
  %prev = getelementptr inbounds %struct.segment_s, %struct.segment_s* %18, i32 0, i32 0
  %19 = load %struct.segment_s*, %struct.segment_s** %prev, align 8, !tbaa !147
  br label %cond.end.15

cond.false.13:                                    ; preds = %cond.false.7
  %20 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %prev14 = getelementptr inbounds %struct.segment_s, %struct.segment_s* %20, i32 0, i32 0
  %21 = load %struct.segment_s*, %struct.segment_s** %prev14, align 8, !tbaa !147
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.13, %cond.true.12
  %cond16 = phi %struct.segment_s* [ %19, %cond.true.12 ], [ %21, %cond.false.13 ]
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.end.15, %cond.end
  %cond18 = phi %struct.segment_s* [ %cond, %cond.end ], [ %cond16, %cond.end.15 ]
  store %struct.segment_s* %cond18, %struct.segment_s** %next, align 8, !tbaa !1
  %22 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #1
  %23 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %23, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %24 = load i32, i32* %y, align 4, !tbaa !195
  %25 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %25, i32 0, i32 0
  %y19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %26 = load i32, i32* %y19, align 4, !tbaa !187
  %cmp20 = icmp slt i32 %24, %26
  br i1 %cmp20, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.17
  %27 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %28 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  call void @remove_al(%struct.line_list_s* %27, %struct.active_line_s* %28) #5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %cond.end.17
  %29 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %29, i32 0, i32 12
  %30 = load i32, i32* %more_flattened, align 4, !tbaa !179
  %tobool = icmp ne i32 %30, 0
  br i1 %tobool, label %if.then.22, label %if.end

if.then.22:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.else
  br label %if.end.23

if.end.23:                                        ; preds = %if.end
  %31 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %32 = load %struct.segment_s*, %struct.segment_s** %pseg, align 8, !tbaa !1
  %33 = load %struct.segment_s*, %struct.segment_s** %next, align 8, !tbaa !1
  %34 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call = call i32 @init_al(%struct.active_line_s* %31, %struct.segment_s* %32, %struct.segment_s* %33, %struct.line_list_s* %34) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %35 = load i32, i32* %code, align 4, !tbaa !5
  %cmp24 = icmp slt i32 %35, 0
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.23
  %36 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.23
  %37 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start28 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %37, i32 0, i32 0
  %y29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start28, i32 0, i32 1
  %38 = load i32, i32* %y29, align 4, !tbaa !187
  %39 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end30 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %39, i32 0, i32 1
  %y31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end30, i32 0, i32 1
  %40 = load i32, i32* %y31, align 4, !tbaa !195
  %cmp32 = icmp sgt i32 %38, %40
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.end.27
  %41 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %42 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  call void @remove_al(%struct.line_list_s* %41, %struct.active_line_s* %42) #5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %if.end.27
  %43 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start36 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %43, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start36, i32 0, i32 0
  %44 = load i32, i32* %x, align 4, !tbaa !193
  %45 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 6
  store i32 %44, i32* %x_next, align 4, !tbaa !205
  %46 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 5
  store i32 %44, i32* %x_current, align 4, !tbaa !204
  br label %do.body

do.body:                                          ; preds = %if.end.35
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body.37

do.body.37:                                       ; preds = %do.end
  br label %do.cond.38

do.cond.38:                                       ; preds = %do.body.37
  br label %do.end.39

do.end.39:                                        ; preds = %do.cond.38
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end.39, %if.then.34, %if.then.26, %if.then.22, %if.then
  %47 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #1
  %48 = bitcast %struct.segment_s** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #1
  %49 = bitcast %struct.segment_s** %pseg to i8*
  call void @llvm.lifetime.end(i64 8, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @remove_al(%struct.line_list_s* %ll, %struct.active_line_s* %alp) #3 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %nlp = alloca %struct.active_line_s*, align 8
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %0 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %1, i32 0, i32 15
  %2 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !189
  store %struct.active_line_s* %2, %struct.active_line_s** %nlp, align 8, !tbaa !1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  %4 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %4, i32 0, i32 14
  %5 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !188
  %next1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %5, i32 0, i32 15
  store %struct.active_line_s* %3, %struct.active_line_s** %next1, align 8, !tbaa !189
  %6 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  %tobool = icmp ne %struct.active_line_s* %6, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev2 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %7, i32 0, i32 14
  %8 = load %struct.active_line_s*, %struct.active_line_s** %prev2, align 8, !tbaa !188
  %9 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  %prev3 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 14
  store %struct.active_line_s* %8, %struct.active_line_s** %prev3, align 8, !tbaa !188
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %10 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10) #1
  ret void
}

declare i32 @fixed_mult_quo(i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @intersect(%struct.active_line_s* %endp, %struct.active_line_s* %alp, i32 %y, i32 %y1, i32* %p_y_new) #0 {
entry:
  %retval = alloca i32, align 4
  %endp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %y.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %p_y_new.addr = alloca i32*, align 8
  %y_new = alloca i32, align 4
  %dy = alloca i32, align 4
  %dx_old = alloca i32, align 4
  %dx_den = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %ys = alloca i32, align 4
  %xs0 = alloca i32, align 4
  %xs1 = alloca i32, align 4
  %ye = alloca i32, align 4
  %xe0 = alloca i32, align 4
  %xe1 = alloca i32, align 4
  %dy14 = alloca i32, align 4
  %dx0 = alloca i32, align 4
  %dx1 = alloca i32, align 4
  %cross = alloca double, align 8
  store %struct.active_line_s* %endp, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %y, i32* %y.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  store i32* %p_y_new, i32** %p_y_new.addr, align 8, !tbaa !1
  %0 = bitcast i32* %y_new to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %dx_old to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %3, i32 0, i32 5
  %4 = load i32, i32* %x_current, align 4, !tbaa !204
  %5 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %x_current1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %5, i32 0, i32 5
  %6 = load i32, i32* %x_current1, align 4, !tbaa !204
  %sub = sub nsw i32 %4, %6
  store i32 %sub, i32* %dx_old, align 4, !tbaa !5
  %7 = bitcast i32* %dx_den to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = load i32, i32* %dx_old, align 4, !tbaa !5
  %9 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %9, i32 0, i32 6
  %10 = load i32, i32* %x_next, align 4, !tbaa !205
  %add = add nsw i32 %8, %10
  %11 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_next2 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %11, i32 0, i32 6
  %12 = load i32, i32* %x_next2, align 4, !tbaa !205
  %sub3 = sub nsw i32 %add, %12
  store i32 %sub3, i32* %dx_den, align 4, !tbaa !5
  %13 = load i32, i32* %dx_den, align 4, !tbaa !5
  %14 = load i32, i32* %dx_old, align 4, !tbaa !5
  %cmp = icmp sle i32 %13, %14
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %15 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %16 = load i32, i32* %y.addr, align 4, !tbaa !5
  %sub4 = sub nsw i32 %15, %16
  store i32 %sub4, i32* %dy, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %17 = load i32, i32* %dy, align 4, !tbaa !5
  %18 = load i32, i32* %dx_old, align 4, !tbaa !5
  %or = or i32 %17, %18
  %conv = sext i32 %or to i64
  %cmp5 = icmp slt i64 %conv, 32768
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %19 = load i32, i32* %dy, align 4, !tbaa !5
  %20 = load i32, i32* %dx_old, align 4, !tbaa !5
  %mul = mul nsw i32 %19, %20
  %21 = load i32, i32* %dx_den, align 4, !tbaa !5
  %div = sdiv i32 %mul, %21
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %22 = load i32, i32* %dy, align 4, !tbaa !5
  %23 = load i32, i32* %dx_old, align 4, !tbaa !5
  %24 = load i32, i32* %dx_den, align 4, !tbaa !5
  %call = call i32 @fixed_mult_quo(i32 %22, i32 %23, i32 %24) #5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div, %cond.true ], [ %call, %cond.false ]
  %25 = load i32, i32* %y.addr, align 4, !tbaa !5
  %add7 = add nsw i32 %cond, %25
  store i32 %add7, i32* %y_new, align 4, !tbaa !5
  br label %do.body.8

do.body.8:                                        ; preds = %cond.end
  br label %do.cond.9

do.cond.9:                                        ; preds = %do.body.8
  br label %do.end.10

do.end.10:                                        ; preds = %do.cond.9
  %26 = load i32, i32* %y_new, align 4, !tbaa !5
  %27 = load i32, i32* %y.addr, align 4, !tbaa !5
  %cmp11 = icmp sle i32 %26, %27
  br i1 %cmp11, label %if.then.13, label %if.end.229

if.then.13:                                       ; preds = %do.end.10
  %28 = bitcast i32* %ys to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  %29 = bitcast i32* %xs0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #1
  %30 = bitcast i32* %xs1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #1
  %31 = bitcast i32* %ye to i8*
  call void @llvm.lifetime.start(i64 4, i8* %31) #1
  %32 = bitcast i32* %xe0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %32) #1
  %33 = bitcast i32* %xe1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #1
  %34 = bitcast i32* %dy14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %34) #1
  %35 = bitcast i32* %dx0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %35) #1
  %36 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %36) #1
  br label %do.body.15

do.body.15:                                       ; preds = %if.then.13
  br label %do.cond.16

do.cond.16:                                       ; preds = %do.body.15
  br label %do.end.17

do.end.17:                                        ; preds = %do.cond.16
  %37 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %37, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %38 = load i32, i32* %y18, align 4, !tbaa !187
  %39 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start19 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %39, i32 0, i32 0
  %y20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start19, i32 0, i32 1
  %40 = load i32, i32* %y20, align 4, !tbaa !187
  %cmp21 = icmp slt i32 %38, %40
  br i1 %cmp21, label %if.then.23, label %if.else

if.then.23:                                       ; preds = %do.end.17
  %41 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start24 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %41, i32 0, i32 0
  %y25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start24, i32 0, i32 1
  %42 = load i32, i32* %y25, align 4, !tbaa !187
  store i32 %42, i32* %ys, align 4, !tbaa !5
  %43 = load i32, i32* %ys, align 4, !tbaa !5
  %44 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %44, i32 0, i32 1
  %y26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %45 = load i32, i32* %y26, align 4, !tbaa !195
  %cmp27 = icmp eq i32 %43, %45
  br i1 %cmp27, label %cond.true.29, label %cond.false.31

cond.true.29:                                     ; preds = %if.then.23
  %46 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %end30 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end30, i32 0, i32 0
  %47 = load i32, i32* %x, align 4, !tbaa !194
  br label %cond.end.58

cond.false.31:                                    ; preds = %if.then.23
  %48 = load i32, i32* %ys, align 4, !tbaa !5
  %49 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %y_fast_max = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %49, i32 0, i32 3
  %50 = load i32, i32* %y_fast_max, align 4, !tbaa !199
  %cmp32 = icmp sle i32 %48, %50
  br i1 %cmp32, label %cond.true.34, label %cond.false.44

cond.true.34:                                     ; preds = %cond.false.31
  %51 = load i32, i32* %ys, align 4, !tbaa !5
  %52 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start35 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %52, i32 0, i32 0
  %y36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start35, i32 0, i32 1
  %53 = load i32, i32* %y36, align 4, !tbaa !187
  %sub37 = sub nsw i32 %51, %53
  %54 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 2
  %x38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff, i32 0, i32 0
  %55 = load i32, i32* %x38, align 4, !tbaa !196
  %mul39 = mul nsw i32 %sub37, %55
  %56 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %num_adjust = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 4
  %57 = load i32, i32* %num_adjust, align 4, !tbaa !198
  %add40 = add nsw i32 %mul39, %57
  %58 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff41 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 2
  %y42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff41, i32 0, i32 1
  %59 = load i32, i32* %y42, align 4, !tbaa !197
  %div43 = sdiv i32 %add40, %59
  br label %cond.end.53

cond.false.44:                                    ; preds = %cond.false.31
  %60 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff45 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %60, i32 0, i32 2
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff45, i32 0, i32 0
  %61 = load i32, i32* %x46, align 4, !tbaa !196
  %62 = load i32, i32* %ys, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start47 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 0
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start47, i32 0, i32 1
  %64 = load i32, i32* %y48, align 4, !tbaa !187
  %sub49 = sub nsw i32 %62, %64
  %65 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff50 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %65, i32 0, i32 2
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff50, i32 0, i32 1
  %66 = load i32, i32* %y51, align 4, !tbaa !197
  %call52 = call i32 @fixed_mult_quo(i32 %61, i32 %sub49, i32 %66) #5
  br label %cond.end.53

cond.end.53:                                      ; preds = %cond.false.44, %cond.true.34
  %cond54 = phi i32 [ %div43, %cond.true.34 ], [ %call52, %cond.false.44 ]
  %67 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start55 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %67, i32 0, i32 0
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start55, i32 0, i32 0
  %68 = load i32, i32* %x56, align 4, !tbaa !193
  %add57 = add nsw i32 %cond54, %68
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.end.53, %cond.true.29
  %cond59 = phi i32 [ %47, %cond.true.29 ], [ %add57, %cond.end.53 ]
  store i32 %cond59, i32* %xs0, align 4, !tbaa !5
  %69 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %69, i32 0, i32 0
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start60, i32 0, i32 0
  %70 = load i32, i32* %x61, align 4, !tbaa !193
  store i32 %70, i32* %xs1, align 4, !tbaa !5
  br label %if.end.105

if.else:                                          ; preds = %do.end.17
  %71 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start62 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %71, i32 0, i32 0
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start62, i32 0, i32 1
  %72 = load i32, i32* %y63, align 4, !tbaa !187
  store i32 %72, i32* %ys, align 4, !tbaa !5
  %73 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start64 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %73, i32 0, i32 0
  %x65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start64, i32 0, i32 0
  %74 = load i32, i32* %x65, align 4, !tbaa !193
  store i32 %74, i32* %xs0, align 4, !tbaa !5
  %75 = load i32, i32* %ys, align 4, !tbaa !5
  %76 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end66 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %76, i32 0, i32 1
  %y67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end66, i32 0, i32 1
  %77 = load i32, i32* %y67, align 4, !tbaa !195
  %cmp68 = icmp eq i32 %75, %77
  br i1 %cmp68, label %cond.true.70, label %cond.false.73

cond.true.70:                                     ; preds = %if.else
  %78 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end71 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %78, i32 0, i32 1
  %x72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end71, i32 0, i32 0
  %79 = load i32, i32* %x72, align 4, !tbaa !194
  br label %cond.end.103

cond.false.73:                                    ; preds = %if.else
  %80 = load i32, i32* %ys, align 4, !tbaa !5
  %81 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %y_fast_max74 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %81, i32 0, i32 3
  %82 = load i32, i32* %y_fast_max74, align 4, !tbaa !199
  %cmp75 = icmp sle i32 %80, %82
  br i1 %cmp75, label %cond.true.77, label %cond.false.89

cond.true.77:                                     ; preds = %cond.false.73
  %83 = load i32, i32* %ys, align 4, !tbaa !5
  %84 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start78 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %84, i32 0, i32 0
  %y79 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start78, i32 0, i32 1
  %85 = load i32, i32* %y79, align 4, !tbaa !187
  %sub80 = sub nsw i32 %83, %85
  %86 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff81 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %86, i32 0, i32 2
  %x82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff81, i32 0, i32 0
  %87 = load i32, i32* %x82, align 4, !tbaa !196
  %mul83 = mul nsw i32 %sub80, %87
  %88 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %num_adjust84 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %88, i32 0, i32 4
  %89 = load i32, i32* %num_adjust84, align 4, !tbaa !198
  %add85 = add nsw i32 %mul83, %89
  %90 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff86 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %90, i32 0, i32 2
  %y87 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff86, i32 0, i32 1
  %91 = load i32, i32* %y87, align 4, !tbaa !197
  %div88 = sdiv i32 %add85, %91
  br label %cond.end.98

cond.false.89:                                    ; preds = %cond.false.73
  %92 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff90 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %92, i32 0, i32 2
  %x91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff90, i32 0, i32 0
  %93 = load i32, i32* %x91, align 4, !tbaa !196
  %94 = load i32, i32* %ys, align 4, !tbaa !5
  %95 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start92 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %95, i32 0, i32 0
  %y93 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start92, i32 0, i32 1
  %96 = load i32, i32* %y93, align 4, !tbaa !187
  %sub94 = sub nsw i32 %94, %96
  %97 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff95 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %97, i32 0, i32 2
  %y96 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff95, i32 0, i32 1
  %98 = load i32, i32* %y96, align 4, !tbaa !197
  %call97 = call i32 @fixed_mult_quo(i32 %93, i32 %sub94, i32 %98) #5
  br label %cond.end.98

cond.end.98:                                      ; preds = %cond.false.89, %cond.true.77
  %cond99 = phi i32 [ %div88, %cond.true.77 ], [ %call97, %cond.false.89 ]
  %99 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start100 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %99, i32 0, i32 0
  %x101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start100, i32 0, i32 0
  %100 = load i32, i32* %x101, align 4, !tbaa !193
  %add102 = add nsw i32 %cond99, %100
  br label %cond.end.103

cond.end.103:                                     ; preds = %cond.end.98, %cond.true.70
  %cond104 = phi i32 [ %79, %cond.true.70 ], [ %add102, %cond.end.98 ]
  store i32 %cond104, i32* %xs1, align 4, !tbaa !5
  br label %if.end.105

if.end.105:                                       ; preds = %cond.end.103, %cond.end.58
  %101 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %end106 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %101, i32 0, i32 1
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end106, i32 0, i32 1
  %102 = load i32, i32* %y107, align 4, !tbaa !195
  %103 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end108 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %103, i32 0, i32 1
  %y109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end108, i32 0, i32 1
  %104 = load i32, i32* %y109, align 4, !tbaa !195
  %cmp110 = icmp sgt i32 %102, %104
  br i1 %cmp110, label %if.then.112, label %if.else.156

if.then.112:                                      ; preds = %if.end.105
  %105 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end113 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %105, i32 0, i32 1
  %y114 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end113, i32 0, i32 1
  %106 = load i32, i32* %y114, align 4, !tbaa !195
  store i32 %106, i32* %ye, align 4, !tbaa !5
  %107 = load i32, i32* %ye, align 4, !tbaa !5
  %108 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %end115 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %108, i32 0, i32 1
  %y116 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end115, i32 0, i32 1
  %109 = load i32, i32* %y116, align 4, !tbaa !195
  %cmp117 = icmp eq i32 %107, %109
  br i1 %cmp117, label %cond.true.119, label %cond.false.122

cond.true.119:                                    ; preds = %if.then.112
  %110 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %end120 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %110, i32 0, i32 1
  %x121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end120, i32 0, i32 0
  %111 = load i32, i32* %x121, align 4, !tbaa !194
  br label %cond.end.152

cond.false.122:                                   ; preds = %if.then.112
  %112 = load i32, i32* %ye, align 4, !tbaa !5
  %113 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %y_fast_max123 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 3
  %114 = load i32, i32* %y_fast_max123, align 4, !tbaa !199
  %cmp124 = icmp sle i32 %112, %114
  br i1 %cmp124, label %cond.true.126, label %cond.false.138

cond.true.126:                                    ; preds = %cond.false.122
  %115 = load i32, i32* %ye, align 4, !tbaa !5
  %116 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start127 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %116, i32 0, i32 0
  %y128 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start127, i32 0, i32 1
  %117 = load i32, i32* %y128, align 4, !tbaa !187
  %sub129 = sub nsw i32 %115, %117
  %118 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff130 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %118, i32 0, i32 2
  %x131 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff130, i32 0, i32 0
  %119 = load i32, i32* %x131, align 4, !tbaa !196
  %mul132 = mul nsw i32 %sub129, %119
  %120 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %num_adjust133 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %120, i32 0, i32 4
  %121 = load i32, i32* %num_adjust133, align 4, !tbaa !198
  %add134 = add nsw i32 %mul132, %121
  %122 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff135 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %122, i32 0, i32 2
  %y136 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff135, i32 0, i32 1
  %123 = load i32, i32* %y136, align 4, !tbaa !197
  %div137 = sdiv i32 %add134, %123
  br label %cond.end.147

cond.false.138:                                   ; preds = %cond.false.122
  %124 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff139 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %124, i32 0, i32 2
  %x140 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff139, i32 0, i32 0
  %125 = load i32, i32* %x140, align 4, !tbaa !196
  %126 = load i32, i32* %ye, align 4, !tbaa !5
  %127 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start141 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %127, i32 0, i32 0
  %y142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start141, i32 0, i32 1
  %128 = load i32, i32* %y142, align 4, !tbaa !187
  %sub143 = sub nsw i32 %126, %128
  %129 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %diff144 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %129, i32 0, i32 2
  %y145 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff144, i32 0, i32 1
  %130 = load i32, i32* %y145, align 4, !tbaa !197
  %call146 = call i32 @fixed_mult_quo(i32 %125, i32 %sub143, i32 %130) #5
  br label %cond.end.147

cond.end.147:                                     ; preds = %cond.false.138, %cond.true.126
  %cond148 = phi i32 [ %div137, %cond.true.126 ], [ %call146, %cond.false.138 ]
  %131 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %start149 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %131, i32 0, i32 0
  %x150 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start149, i32 0, i32 0
  %132 = load i32, i32* %x150, align 4, !tbaa !193
  %add151 = add nsw i32 %cond148, %132
  br label %cond.end.152

cond.end.152:                                     ; preds = %cond.end.147, %cond.true.119
  %cond153 = phi i32 [ %111, %cond.true.119 ], [ %add151, %cond.end.147 ]
  store i32 %cond153, i32* %xe0, align 4, !tbaa !5
  %133 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end154 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %133, i32 0, i32 1
  %x155 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end154, i32 0, i32 0
  %134 = load i32, i32* %x155, align 4, !tbaa !194
  store i32 %134, i32* %xe1, align 4, !tbaa !5
  br label %if.end.200

if.else.156:                                      ; preds = %if.end.105
  %135 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %end157 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %135, i32 0, i32 1
  %y158 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end157, i32 0, i32 1
  %136 = load i32, i32* %y158, align 4, !tbaa !195
  store i32 %136, i32* %ye, align 4, !tbaa !5
  %137 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %end159 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %137, i32 0, i32 1
  %x160 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end159, i32 0, i32 0
  %138 = load i32, i32* %x160, align 4, !tbaa !194
  store i32 %138, i32* %xe0, align 4, !tbaa !5
  %139 = load i32, i32* %ye, align 4, !tbaa !5
  %140 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end161 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %140, i32 0, i32 1
  %y162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end161, i32 0, i32 1
  %141 = load i32, i32* %y162, align 4, !tbaa !195
  %cmp163 = icmp eq i32 %139, %141
  br i1 %cmp163, label %cond.true.165, label %cond.false.168

cond.true.165:                                    ; preds = %if.else.156
  %142 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end166 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %142, i32 0, i32 1
  %x167 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end166, i32 0, i32 0
  %143 = load i32, i32* %x167, align 4, !tbaa !194
  br label %cond.end.198

cond.false.168:                                   ; preds = %if.else.156
  %144 = load i32, i32* %ye, align 4, !tbaa !5
  %145 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %y_fast_max169 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %145, i32 0, i32 3
  %146 = load i32, i32* %y_fast_max169, align 4, !tbaa !199
  %cmp170 = icmp sle i32 %144, %146
  br i1 %cmp170, label %cond.true.172, label %cond.false.184

cond.true.172:                                    ; preds = %cond.false.168
  %147 = load i32, i32* %ye, align 4, !tbaa !5
  %148 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start173 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %148, i32 0, i32 0
  %y174 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start173, i32 0, i32 1
  %149 = load i32, i32* %y174, align 4, !tbaa !187
  %sub175 = sub nsw i32 %147, %149
  %150 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff176 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %150, i32 0, i32 2
  %x177 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff176, i32 0, i32 0
  %151 = load i32, i32* %x177, align 4, !tbaa !196
  %mul178 = mul nsw i32 %sub175, %151
  %152 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %num_adjust179 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %152, i32 0, i32 4
  %153 = load i32, i32* %num_adjust179, align 4, !tbaa !198
  %add180 = add nsw i32 %mul178, %153
  %154 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff181 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %154, i32 0, i32 2
  %y182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff181, i32 0, i32 1
  %155 = load i32, i32* %y182, align 4, !tbaa !197
  %div183 = sdiv i32 %add180, %155
  br label %cond.end.193

cond.false.184:                                   ; preds = %cond.false.168
  %156 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff185 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %156, i32 0, i32 2
  %x186 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff185, i32 0, i32 0
  %157 = load i32, i32* %x186, align 4, !tbaa !196
  %158 = load i32, i32* %ye, align 4, !tbaa !5
  %159 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start187 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %159, i32 0, i32 0
  %y188 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start187, i32 0, i32 1
  %160 = load i32, i32* %y188, align 4, !tbaa !187
  %sub189 = sub nsw i32 %158, %160
  %161 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff190 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %161, i32 0, i32 2
  %y191 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff190, i32 0, i32 1
  %162 = load i32, i32* %y191, align 4, !tbaa !197
  %call192 = call i32 @fixed_mult_quo(i32 %157, i32 %sub189, i32 %162) #5
  br label %cond.end.193

cond.end.193:                                     ; preds = %cond.false.184, %cond.true.172
  %cond194 = phi i32 [ %div183, %cond.true.172 ], [ %call192, %cond.false.184 ]
  %163 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start195 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %163, i32 0, i32 0
  %x196 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start195, i32 0, i32 0
  %164 = load i32, i32* %x196, align 4, !tbaa !193
  %add197 = add nsw i32 %cond194, %164
  br label %cond.end.198

cond.end.198:                                     ; preds = %cond.end.193, %cond.true.165
  %cond199 = phi i32 [ %143, %cond.true.165 ], [ %add197, %cond.end.193 ]
  store i32 %cond199, i32* %xe1, align 4, !tbaa !5
  br label %if.end.200

if.end.200:                                       ; preds = %cond.end.198, %cond.end.152
  %165 = load i32, i32* %ye, align 4, !tbaa !5
  %166 = load i32, i32* %ys, align 4, !tbaa !5
  %sub201 = sub nsw i32 %165, %166
  store i32 %sub201, i32* %dy14, align 4, !tbaa !5
  %167 = load i32, i32* %xe0, align 4, !tbaa !5
  %168 = load i32, i32* %xs0, align 4, !tbaa !5
  %sub202 = sub nsw i32 %167, %168
  store i32 %sub202, i32* %dx0, align 4, !tbaa !5
  %169 = load i32, i32* %xe1, align 4, !tbaa !5
  %170 = load i32, i32* %xs1, align 4, !tbaa !5
  %sub203 = sub nsw i32 %169, %170
  store i32 %sub203, i32* %dx1, align 4, !tbaa !5
  %171 = load i32, i32* %dx0, align 4, !tbaa !5
  %172 = load i32, i32* %dx1, align 4, !tbaa !5
  %cmp204 = icmp eq i32 %171, %172
  br i1 %cmp204, label %if.then.206, label %if.else.207

if.then.206:                                      ; preds = %if.end.200
  %173 = load i32, i32* %y1.addr, align 4, !tbaa !5
  store i32 %173, i32* %y_new, align 4, !tbaa !5
  br label %if.end.228

if.else.207:                                      ; preds = %if.end.200
  %174 = bitcast double* %cross to i8*
  call void @llvm.lifetime.start(i64 8, i8* %174) #1
  %175 = load i32, i32* %xs0, align 4, !tbaa !5
  %176 = load i32, i32* %xs1, align 4, !tbaa !5
  %sub208 = sub nsw i32 %175, %176
  %conv209 = sitofp i32 %sub208 to double
  %177 = load i32, i32* %dx1, align 4, !tbaa !5
  %178 = load i32, i32* %dx0, align 4, !tbaa !5
  %sub210 = sub nsw i32 %177, %178
  %conv211 = sitofp i32 %sub210 to double
  %div212 = fdiv double %conv209, %conv211
  store double %div212, double* %cross, align 8, !tbaa !206
  %179 = load i32, i32* %ys, align 4, !tbaa !5
  %conv213 = sitofp i32 %179 to double
  %180 = load double, double* %cross, align 8, !tbaa !206
  %181 = load i32, i32* %dy14, align 4, !tbaa !5
  %conv214 = sitofp i32 %181 to double
  %mul215 = fmul double %180, %conv214
  %add216 = fadd double %conv213, %mul215
  %conv217 = fptosi double %add216 to i32
  store i32 %conv217, i32* %y_new, align 4, !tbaa !5
  %182 = load i32, i32* %y_new, align 4, !tbaa !5
  %183 = load i32, i32* %y.addr, align 4, !tbaa !5
  %cmp218 = icmp sle i32 %182, %183
  br i1 %cmp218, label %if.then.220, label %if.end.227

if.then.220:                                      ; preds = %if.else.207
  br label %do.body.221

do.body.221:                                      ; preds = %if.then.220
  br label %do.cond.222

do.cond.222:                                      ; preds = %do.body.221
  br label %do.end.223

do.end.223:                                       ; preds = %do.cond.222
  %184 = load i32, i32* %y.addr, align 4, !tbaa !5
  %conv224 = sext i32 %184 to i64
  %add225 = add nsw i64 %conv224, 1
  %conv226 = trunc i64 %add225 to i32
  store i32 %conv226, i32* %y_new, align 4, !tbaa !5
  br label %if.end.227

if.end.227:                                       ; preds = %do.end.223, %if.else.207
  %185 = bitcast double* %cross to i8*
  call void @llvm.lifetime.end(i64 8, i8* %185) #1
  br label %if.end.228

if.end.228:                                       ; preds = %if.end.227, %if.then.206
  %186 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %186) #1
  %187 = bitcast i32* %dx0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %187) #1
  %188 = bitcast i32* %dy14 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %188) #1
  %189 = bitcast i32* %xe1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %189) #1
  %190 = bitcast i32* %xe0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %190) #1
  %191 = bitcast i32* %ye to i8*
  call void @llvm.lifetime.end(i64 4, i8* %191) #1
  %192 = bitcast i32* %xs1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %192) #1
  %193 = bitcast i32* %xs0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %193) #1
  %194 = bitcast i32* %ys to i8*
  call void @llvm.lifetime.end(i64 4, i8* %194) #1
  br label %if.end.229

if.end.229:                                       ; preds = %if.end.228, %do.end.10
  %195 = load i32, i32* %y_new, align 4, !tbaa !5
  %196 = load i32*, i32** %p_y_new.addr, align 8, !tbaa !1
  store i32 %195, i32* %196, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.229, %if.then
  %197 = bitcast i32* %dx_den to i8*
  call void @llvm.lifetime.end(i64 4, i8* %197) #1
  %198 = bitcast i32* %dx_old to i8*
  call void @llvm.lifetime.end(i64 4, i8* %198) #1
  %199 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %199) #1
  %200 = bitcast i32* %y_new to i8*
  call void @llvm.lifetime.end(i64 4, i8* %200) #1
  %201 = load i32, i32* %retval
  ret i32 %201
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @coord_weight(%struct.active_line_s* %alp) #3 {
entry:
  %alp.addr = alloca %struct.active_line_s*, align 8
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %0 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %0, i32 0, i32 2
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff, i32 0, i32 1
  %1 = load i32, i32* %y, align 4, !tbaa !197
  %conv = sext i32 %1 to i64
  %mul = mul nsw i64 %conv, 8
  %2 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff1 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %2, i32 0, i32 2
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff1, i32 0, i32 0
  %3 = load i32, i32* %x, align 4, !tbaa !196
  %conv2 = sext i32 %3 to i64
  %div = sdiv i64 %mul, %conv2
  %conv3 = trunc i64 %div to i32
  %cmp = icmp slt i32 %conv3, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff5 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %4, i32 0, i32 2
  %y6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff5, i32 0, i32 1
  %5 = load i32, i32* %y6, align 4, !tbaa !197
  %conv7 = sext i32 %5 to i64
  %mul8 = mul nsw i64 %conv7, 8
  %6 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff9 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %6, i32 0, i32 2
  %x10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff9, i32 0, i32 0
  %7 = load i32, i32* %x10, align 4, !tbaa !196
  %conv11 = sext i32 %7 to i64
  %div12 = sdiv i64 %mul8, %conv11
  %conv13 = trunc i64 %div12 to i32
  %sub = sub nsw i32 0, %conv13
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff14 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %8, i32 0, i32 2
  %y15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff14, i32 0, i32 1
  %9 = load i32, i32* %y15, align 4, !tbaa !197
  %conv16 = sext i32 %9 to i64
  %mul17 = mul nsw i64 %conv16, 8
  %10 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff18 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %10, i32 0, i32 2
  %x19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff18, i32 0, i32 0
  %11 = load i32, i32* %x19, align 4, !tbaa !196
  %conv20 = sext i32 %11 to i64
  %div21 = sdiv i64 %mul17, %conv20
  %conv22 = trunc i64 %div21 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %conv22, %cond.false ]
  %cmp23 = icmp slt i32 %cond, 256
  br i1 %cmp23, label %cond.true.25, label %cond.false.60

cond.true.25:                                     ; preds = %cond.end
  %12 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff26 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %12, i32 0, i32 2
  %y27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff26, i32 0, i32 1
  %13 = load i32, i32* %y27, align 4, !tbaa !197
  %conv28 = sext i32 %13 to i64
  %mul29 = mul nsw i64 %conv28, 8
  %14 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff30 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %14, i32 0, i32 2
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff30, i32 0, i32 0
  %15 = load i32, i32* %x31, align 4, !tbaa !196
  %conv32 = sext i32 %15 to i64
  %div33 = sdiv i64 %mul29, %conv32
  %conv34 = trunc i64 %div33 to i32
  %cmp35 = icmp slt i32 %conv34, 0
  br i1 %cmp35, label %cond.true.37, label %cond.false.48

cond.true.37:                                     ; preds = %cond.true.25
  %16 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff38 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %16, i32 0, i32 2
  %y39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff38, i32 0, i32 1
  %17 = load i32, i32* %y39, align 4, !tbaa !197
  %conv40 = sext i32 %17 to i64
  %mul41 = mul nsw i64 %conv40, 8
  %18 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff42 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %18, i32 0, i32 2
  %x43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff42, i32 0, i32 0
  %19 = load i32, i32* %x43, align 4, !tbaa !196
  %conv44 = sext i32 %19 to i64
  %div45 = sdiv i64 %mul41, %conv44
  %conv46 = trunc i64 %div45 to i32
  %sub47 = sub nsw i32 0, %conv46
  br label %cond.end.58

cond.false.48:                                    ; preds = %cond.true.25
  %20 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff49 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %20, i32 0, i32 2
  %y50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff49, i32 0, i32 1
  %21 = load i32, i32* %y50, align 4, !tbaa !197
  %conv51 = sext i32 %21 to i64
  %mul52 = mul nsw i64 %conv51, 8
  %22 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %diff53 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %22, i32 0, i32 2
  %x54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff53, i32 0, i32 0
  %23 = load i32, i32* %x54, align 4, !tbaa !196
  %conv55 = sext i32 %23 to i64
  %div56 = sdiv i64 %mul52, %conv55
  %conv57 = trunc i64 %div56 to i32
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.48, %cond.true.37
  %cond59 = phi i32 [ %sub47, %cond.true.37 ], [ %conv57, %cond.false.48 ]
  br label %cond.end.61

cond.false.60:                                    ; preds = %cond.end
  br label %cond.end.61

cond.end.61:                                      ; preds = %cond.false.60, %cond.end.58
  %cond62 = phi i32 [ %cond59, %cond.end.58 ], [ 256, %cond.false.60 ]
  %add = add nsw i32 1, %cond62
  ret i32 %add
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @set_x_next(%struct.active_line_s* %endp, %struct.active_line_s* %alp, i32 %x) #3 {
entry:
  %endp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %x.addr = alloca i32, align 4
  store %struct.active_line_s* %endp, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %x, i32* %x.addr, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %1 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.active_line_s* %0, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %x.addr, align 4, !tbaa !5
  %3 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %3, i32 0, i32 6
  store i32 %2, i32* %x_next, align 4, !tbaa !205
  %4 = load %struct.active_line_s*, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %4, i32 0, i32 15
  %5 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !189
  store %struct.active_line_s* %5, %struct.active_line_s** %endp.addr, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @insert_h_new(%struct.active_line_s* %alp, %struct.line_list_s* %ll) #3 {
entry:
  %alp.addr = alloca %struct.active_line_s*, align 8
  %ll.addr = alloca %struct.line_list_s*, align 8
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %0 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %0, i32 0, i32 8
  %1 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  %2 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %2, i32 0, i32 15
  store %struct.active_line_s* %1, %struct.active_line_s** %next, align 8, !tbaa !189
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %3, i32 0, i32 14
  store %struct.active_line_s* null, %struct.active_line_s** %prev, align 8, !tbaa !188
  %4 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list01 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %4, i32 0, i32 8
  %5 = load %struct.active_line_s*, %struct.active_line_s** %h_list01, align 8, !tbaa !124
  %cmp = icmp ne %struct.active_line_s* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %7 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list02 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %7, i32 0, i32 8
  %8 = load %struct.active_line_s*, %struct.active_line_s** %h_list02, align 8, !tbaa !124
  %prev3 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %8, i32 0, i32 14
  store %struct.active_line_s* %6, %struct.active_line_s** %prev3, align 8, !tbaa !188
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %10 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list04 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %10, i32 0, i32 8
  store %struct.active_line_s* %9, %struct.active_line_s** %h_list04, align 8, !tbaa !124
  ret void
}

declare i32 @start_margin_set(%struct.gx_device_s*, %struct.line_list_s*, i32) #2

declare i32 @gx_fill_trapezoid_cf_fd(%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @complete_margin(%struct.line_list_s* %ll, %struct.active_line_s* %flp, %struct.active_line_s* %alp, i32 %y0, i32 %y1) #3 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %flp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %y0.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %flp, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %y0, i32* %y0.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 11
  %2 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %4 = load i32, i32* %y0.addr, align 4, !tbaa !5
  %5 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %call = call i32 @continue_margin_common(%struct.line_list_s* %0, %struct.margin_set_s* %margin_set1, %struct.active_line_s* %2, %struct.active_line_s* %3, i32 %4, i32 %5) #5
  ret i32 %call
}

declare i32 @margin_interior(%struct.line_list_s*, %struct.active_line_s*, %struct.active_line_s*, i32, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @add_margin(%struct.line_list_s* %ll, %struct.active_line_s* %flp, %struct.active_line_s* %alp, i32 %y0, i32 %y1) #3 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %flp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %y0.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %flp, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %y0, i32* %y0.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %do.body.1

do.body.1:                                        ; preds = %do.end
  br label %do.end.2

do.end.2:                                         ; preds = %do.body.1
  %0 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 10
  %2 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %4 = load i32, i32* %y0.addr, align 4, !tbaa !5
  %5 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %call = call i32 @continue_margin_common(%struct.line_list_s* %0, %struct.margin_set_s* %margin_set0, %struct.active_line_s* %2, %struct.active_line_s* %3, i32 %4, i32 %5) #5
  ret i32 %call
}

declare i32 @process_h_lists(%struct.line_list_s*, %struct.active_line_s*, %struct.active_line_s*, %struct.active_line_s*, i32, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @continue_margin(%struct.line_list_s* %ll, %struct.active_line_s* %flp, %struct.active_line_s* %alp, i32 %y0, i32 %y1) #3 {
entry:
  %ll.addr = alloca %struct.line_list_s*, align 8
  %flp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %y0.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %flp, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %y0, i32* %y0.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %margin_set0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 10
  %2 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %3 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %4 = load i32, i32* %y0.addr, align 4, !tbaa !5
  %5 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %call = call i32 @continue_margin_common(%struct.line_list_s* %0, %struct.margin_set_s* %margin_set0, %struct.active_line_s* %2, %struct.active_line_s* %3, i32 %4, i32 %5) #5
  ret i32 %call
}

declare i32 @close_margins(%struct.gx_device_s*, %struct.line_list_s*, %struct.margin_set_s*) #2

declare i32 @continue_margin_common(%struct.line_list_s*, %struct.margin_set_s*, %struct.active_line_s*, %struct.active_line_s*, i32, i32) #2

declare i32 @gx_fill_trapezoid_cf_nd(%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @slant_into_trapezoids__fd(%struct.line_list_s* %ll, %struct.active_line_s* %flp, %struct.active_line_s* %alp, i32 %y, i32 %y1) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %flp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %y.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s*, align 8
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %code = alloca i32, align 4
  %y_span_delta = alloca i32, align 4
  %y_span_limit = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %xli = alloca i32, align 4
  %xri = alloca i32, align 4
  %xli204 = alloca i32, align 4
  %xri211 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %flp, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %y, i32* %y.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %2, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %3 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  store i32 0, i32* %code, align 4, !tbaa !5
  %6 = bitcast i32* %y_span_delta to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %7, i32 0, i32 11
  %8 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %conv = sext i32 %8 to i64
  %add = add nsw i64 127, %conv
  %conv2 = trunc i64 %add to i32
  store i32 %conv2, i32* %y_span_delta, align 4, !tbaa !5
  %9 = bitcast i32* %y_span_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %10, i32 0, i32 10
  %11 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %12 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above3 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %12, i32 0, i32 11
  %13 = load i32, i32* %adjust_above3, align 4, !tbaa !87
  %add4 = add nsw i32 %11, %13
  store i32 %add4, i32* %y_span_limit, align 4, !tbaa !5
  %14 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %14, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %15 = load i32, i32* %x, align 4, !tbaa !193
  %16 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %16, i32 0, i32 8
  %17 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub = sub nsw i32 %15, %17
  %start5 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start5, i32 0, i32 0
  store i32 %sub, i32* %x6, align 4, !tbaa !208
  %18 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %18, i32 0, i32 1
  %x7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %19 = load i32, i32* %x7, align 4, !tbaa !194
  %20 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left8 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %20, i32 0, i32 8
  %21 = load i32, i32* %adjust_left8, align 4, !tbaa !83
  %sub9 = sub nsw i32 %19, %21
  %end10 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end10, i32 0, i32 0
  store i32 %sub9, i32* %x11, align 4, !tbaa !210
  %22 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start12 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %22, i32 0, i32 0
  %x13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start12, i32 0, i32 0
  %23 = load i32, i32* %x13, align 4, !tbaa !193
  %24 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %24, i32 0, i32 9
  %25 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add14 = add nsw i32 %23, %25
  %start15 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start15, i32 0, i32 0
  store i32 %add14, i32* %x16, align 4, !tbaa !208
  %26 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %26, i32 0, i32 1
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end17, i32 0, i32 0
  %27 = load i32, i32* %x18, align 4, !tbaa !194
  %28 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right19 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %28, i32 0, i32 9
  %29 = load i32, i32* %adjust_right19, align 4, !tbaa !85
  %add20 = add nsw i32 %27, %29
  %end21 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end21, i32 0, i32 0
  store i32 %add20, i32* %x22, align 4, !tbaa !210
  %end23 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end23, i32 0, i32 0
  %30 = load i32, i32* %x24, align 4, !tbaa !210
  %start25 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start25, i32 0, i32 0
  %31 = load i32, i32* %x26, align 4, !tbaa !208
  %cmp = icmp eq i32 %30, %31
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %end28 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end28, i32 0, i32 0
  %32 = load i32, i32* %x29, align 4, !tbaa !210
  %start30 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start30, i32 0, i32 0
  %33 = load i32, i32* %x31, align 4, !tbaa !208
  %cmp32 = icmp eq i32 %32, %33
  br i1 %cmp32, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %start34 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start34, i32 0, i32 0
  %34 = load i32, i32* %x35, align 4, !tbaa !208
  %conv36 = sext i32 %34 to i64
  %add37 = add nsw i64 %conv36, 127
  %shr = ashr i64 %add37, 8
  %conv38 = trunc i64 %shr to i32
  %start39 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x40 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start39, i32 0, i32 0
  store i32 %conv38, i32* %x40, align 4, !tbaa !208
  %35 = load i32, i32* %y.addr, align 4, !tbaa !5
  %36 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below41 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %36, i32 0, i32 10
  %37 = load i32, i32* %adjust_below41, align 4, !tbaa !86
  %sub42 = sub nsw i32 %35, %37
  %conv43 = sext i32 %sub42 to i64
  %add44 = add nsw i64 %conv43, 127
  %shr45 = ashr i64 %add44, 8
  %conv46 = trunc i64 %shr45 to i32
  %start47 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start47, i32 0, i32 1
  store i32 %conv46, i32* %y48, align 4, !tbaa !211
  %start49 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start49, i32 0, i32 0
  %38 = load i32, i32* %x50, align 4, !tbaa !208
  %conv51 = sext i32 %38 to i64
  %add52 = add nsw i64 %conv51, 127
  %shr53 = ashr i64 %add52, 8
  %conv54 = trunc i64 %shr53 to i32
  %start55 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start55, i32 0, i32 0
  store i32 %conv54, i32* %x56, align 4, !tbaa !208
  %39 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %40 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above57 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %40, i32 0, i32 11
  %41 = load i32, i32* %adjust_above57, align 4, !tbaa !87
  %add58 = add nsw i32 %39, %41
  %conv59 = sext i32 %add58 to i64
  %add60 = add nsw i64 %conv59, 127
  %shr61 = ashr i64 %add60, 8
  %conv62 = trunc i64 %shr61 to i32
  %start63 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start63, i32 0, i32 1
  store i32 %conv62, i32* %y64, align 4, !tbaa !211
  %42 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %42, i32 0, i32 16
  %43 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %44 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %44, i32 0, i32 12
  %45 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %start65 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start65, i32 0, i32 0
  %46 = load i32, i32* %x66, align 4, !tbaa !208
  %start67 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 1
  %47 = load i32, i32* %y68, align 4, !tbaa !211
  %start69 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start69, i32 0, i32 0
  %48 = load i32, i32* %x70, align 4, !tbaa !208
  %start71 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start71, i32 0, i32 0
  %49 = load i32, i32* %x72, align 4, !tbaa !208
  %sub73 = sub nsw i32 %48, %49
  %start74 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start74, i32 0, i32 1
  %50 = load i32, i32* %y75, align 4, !tbaa !211
  %start76 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start76, i32 0, i32 1
  %51 = load i32, i32* %y77, align 4, !tbaa !211
  %sub78 = sub nsw i32 %50, %51
  %52 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %52, i32 0, i32 3
  %53 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %53, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %54 = load i64, i64* %pure, align 8, !tbaa !203
  %call = call i32 %43(%struct.gx_device_s* %45, i32 %46, i32 %47, i32 %sub73, i32 %sub78, i64 %54) #5
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.256

if.else:                                          ; preds = %land.lhs.true, %entry
  %end79 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end79, i32 0, i32 0
  %55 = load i32, i32* %x80, align 4, !tbaa !210
  %start81 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start81, i32 0, i32 0
  %56 = load i32, i32* %x82, align 4, !tbaa !208
  %cmp83 = icmp sle i32 %55, %56
  br i1 %cmp83, label %land.lhs.true.85, label %if.else.160

land.lhs.true.85:                                 ; preds = %if.else
  %end86 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x87 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end86, i32 0, i32 0
  %57 = load i32, i32* %x87, align 4, !tbaa !210
  %start88 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x89 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start88, i32 0, i32 0
  %58 = load i32, i32* %x89, align 4, !tbaa !208
  %cmp90 = icmp sge i32 %57, %58
  br i1 %cmp90, label %if.then.92, label %if.else.160

if.then.92:                                       ; preds = %land.lhs.true.85
  %59 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start93 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %59, i32 0, i32 0
  %y94 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start93, i32 0, i32 1
  %60 = load i32, i32* %y94, align 4, !tbaa !187
  %61 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below95 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %61, i32 0, i32 10
  %62 = load i32, i32* %adjust_below95, align 4, !tbaa !86
  %sub96 = sub nsw i32 %60, %62
  %start97 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start97, i32 0, i32 1
  store i32 %sub96, i32* %y98, align 4, !tbaa !211
  %63 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end99 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 1
  %y100 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end99, i32 0, i32 1
  %64 = load i32, i32* %y100, align 4, !tbaa !195
  %65 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below101 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %65, i32 0, i32 10
  %66 = load i32, i32* %adjust_below101, align 4, !tbaa !86
  %sub102 = sub nsw i32 %64, %66
  %end103 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end103, i32 0, i32 1
  store i32 %sub102, i32* %y104, align 4, !tbaa !212
  %67 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start105 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %67, i32 0, i32 0
  %y106 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start105, i32 0, i32 1
  %68 = load i32, i32* %y106, align 4, !tbaa !187
  %69 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below107 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %69, i32 0, i32 10
  %70 = load i32, i32* %adjust_below107, align 4, !tbaa !86
  %sub108 = sub nsw i32 %68, %70
  %start109 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y110 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start109, i32 0, i32 1
  store i32 %sub108, i32* %y110, align 4, !tbaa !211
  %71 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end111 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %71, i32 0, i32 1
  %y112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end111, i32 0, i32 1
  %72 = load i32, i32* %y112, align 4, !tbaa !195
  %73 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below113 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %73, i32 0, i32 10
  %74 = load i32, i32* %adjust_below113, align 4, !tbaa !86
  %sub114 = sub nsw i32 %72, %74
  %end115 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y116 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end115, i32 0, i32 1
  store i32 %sub114, i32* %y116, align 4, !tbaa !212
  %75 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %76 = load i32, i32* %y_span_delta, align 4, !tbaa !5
  %add117 = add nsw i32 %75, %76
  %and = and i32 %add117, 255
  %77 = load i32, i32* %y_span_limit, align 4, !tbaa !5
  %cmp118 = icmp slt i32 %and, %77
  br i1 %cmp118, label %if.then.120, label %if.end.154

if.then.120:                                      ; preds = %if.then.92
  %78 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %78) #1
  %79 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %79, i32 0, i32 6
  %80 = load i32, i32* %x_next, align 4, !tbaa !205
  %81 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left121 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %81, i32 0, i32 8
  %82 = load i32, i32* %adjust_left121, align 4, !tbaa !83
  %sub122 = sub nsw i32 %80, %82
  %conv123 = sext i32 %sub122 to i64
  %add124 = add nsw i64 %conv123, 127
  %shr125 = ashr i64 %add124, 8
  %conv126 = trunc i64 %shr125 to i32
  store i32 %conv126, i32* %xli, align 4, !tbaa !5
  %83 = bitcast i32* %xri to i8*
  call void @llvm.lifetime.start(i64 4, i8* %83) #1
  %84 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_next127 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %84, i32 0, i32 6
  %85 = load i32, i32* %x_next127, align 4, !tbaa !205
  %86 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right128 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %86, i32 0, i32 9
  %87 = load i32, i32* %adjust_right128, align 4, !tbaa !85
  %add129 = add nsw i32 %85, %87
  %conv130 = sext i32 %add129 to i64
  %add131 = add nsw i64 %conv130, 127
  %shr132 = ashr i64 %add131, 8
  %conv133 = trunc i64 %shr132 to i32
  store i32 %conv133, i32* %xri, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.then.120
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %88 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_rect134 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %88, i32 0, i32 16
  %89 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect134, align 8, !tbaa !102
  %90 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev135 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %90, i32 0, i32 12
  %91 = load %struct.gx_device_s*, %struct.gx_device_s** %dev135, align 8, !tbaa !96
  %92 = load i32, i32* %xli, align 4, !tbaa !5
  %93 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %94 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below136 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %94, i32 0, i32 10
  %95 = load i32, i32* %adjust_below136, align 4, !tbaa !86
  %sub137 = sub nsw i32 %93, %95
  %conv138 = sext i32 %sub137 to i64
  %add139 = add nsw i64 %conv138, 127
  %shr140 = ashr i64 %add139, 8
  %conv141 = trunc i64 %shr140 to i32
  %96 = load i32, i32* %xri, align 4, !tbaa !5
  %97 = load i32, i32* %xli, align 4, !tbaa !5
  %sub142 = sub nsw i32 %96, %97
  %98 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc143 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %98, i32 0, i32 3
  %99 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc143, align 8, !tbaa !90
  %colors144 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %99, i32 0, i32 1
  %pure145 = bitcast %union._c* %colors144 to i64*
  %100 = load i64, i64* %pure145, align 8, !tbaa !203
  %call146 = call i32 %89(%struct.gx_device_s* %91, i32 %92, i32 %conv141, i32 %sub142, i32 1, i64 %100) #5
  store i32 %call146, i32* %code, align 4, !tbaa !5
  br label %do.body.147

do.body.147:                                      ; preds = %do.end
  br label %do.cond.148

do.cond.148:                                      ; preds = %do.body.147
  br label %do.end.149

do.end.149:                                       ; preds = %do.cond.148
  %101 = load i32, i32* %code, align 4, !tbaa !5
  %cmp150 = icmp slt i32 %101, 0
  br i1 %cmp150, label %if.then.152, label %if.end

if.then.152:                                      ; preds = %do.end.149
  %102 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %102, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %do.end.149
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.152
  %103 = bitcast i32* %xri to i8*
  call void @llvm.lifetime.end(i64 4, i8* %103) #1
  %104 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %104) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.256 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.154

if.end.154:                                       ; preds = %cleanup.cont, %if.then.92
  %105 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %106 = load i32, i32* %y.addr, align 4, !tbaa !5
  %107 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below155 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %107, i32 0, i32 10
  %108 = load i32, i32* %adjust_below155, align 4, !tbaa !86
  %sub156 = sub nsw i32 %106, %108
  %109 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %110 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below157 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %110, i32 0, i32 10
  %111 = load i32, i32* %adjust_below157, align 4, !tbaa !86
  %sub158 = sub nsw i32 %109, %111
  %call159 = call i32 @loop_fill_trap_np(%struct.line_list_s* %105, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %sub156, i32 %sub158) #5
  store i32 %call159, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.256

if.else.160:                                      ; preds = %land.lhs.true.85, %if.else
  %end161 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end161, i32 0, i32 0
  %112 = load i32, i32* %x162, align 4, !tbaa !210
  %start163 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x164 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start163, i32 0, i32 0
  %113 = load i32, i32* %x164, align 4, !tbaa !208
  %cmp165 = icmp sge i32 %112, %113
  br i1 %cmp165, label %land.lhs.true.167, label %if.end.252

land.lhs.true.167:                                ; preds = %if.else.160
  %end168 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x169 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end168, i32 0, i32 0
  %114 = load i32, i32* %x169, align 4, !tbaa !210
  %start170 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x171 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start170, i32 0, i32 0
  %115 = load i32, i32* %x171, align 4, !tbaa !208
  %cmp172 = icmp sle i32 %114, %115
  br i1 %cmp172, label %if.then.174, label %if.end.252

if.then.174:                                      ; preds = %land.lhs.true.167
  %116 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start175 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %116, i32 0, i32 0
  %y176 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start175, i32 0, i32 1
  %117 = load i32, i32* %y176, align 4, !tbaa !187
  %118 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above177 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %118, i32 0, i32 11
  %119 = load i32, i32* %adjust_above177, align 4, !tbaa !87
  %add178 = add nsw i32 %117, %119
  %start179 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y180 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start179, i32 0, i32 1
  store i32 %add178, i32* %y180, align 4, !tbaa !211
  %120 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end181 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %120, i32 0, i32 1
  %y182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end181, i32 0, i32 1
  %121 = load i32, i32* %y182, align 4, !tbaa !195
  %122 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above183 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %122, i32 0, i32 11
  %123 = load i32, i32* %adjust_above183, align 4, !tbaa !87
  %add184 = add nsw i32 %121, %123
  %end185 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y186 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end185, i32 0, i32 1
  store i32 %add184, i32* %y186, align 4, !tbaa !212
  %124 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start187 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %124, i32 0, i32 0
  %y188 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start187, i32 0, i32 1
  %125 = load i32, i32* %y188, align 4, !tbaa !187
  %126 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above189 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %126, i32 0, i32 11
  %127 = load i32, i32* %adjust_above189, align 4, !tbaa !87
  %add190 = add nsw i32 %125, %127
  %start191 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y192 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start191, i32 0, i32 1
  store i32 %add190, i32* %y192, align 4, !tbaa !211
  %128 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end193 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %128, i32 0, i32 1
  %y194 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end193, i32 0, i32 1
  %129 = load i32, i32* %y194, align 4, !tbaa !195
  %130 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above195 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %130, i32 0, i32 11
  %131 = load i32, i32* %adjust_above195, align 4, !tbaa !87
  %add196 = add nsw i32 %129, %131
  %end197 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y198 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end197, i32 0, i32 1
  store i32 %add196, i32* %y198, align 4, !tbaa !212
  %132 = load i32, i32* %y.addr, align 4, !tbaa !5
  %133 = load i32, i32* %y_span_delta, align 4, !tbaa !5
  %add199 = add nsw i32 %132, %133
  %and200 = and i32 %add199, 255
  %134 = load i32, i32* %y_span_limit, align 4, !tbaa !5
  %cmp201 = icmp slt i32 %and200, %134
  br i1 %cmp201, label %if.then.203, label %if.end.246

if.then.203:                                      ; preds = %if.then.174
  %135 = bitcast i32* %xli204 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %135) #1
  %136 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %136, i32 0, i32 5
  %137 = load i32, i32* %x_current, align 4, !tbaa !204
  %138 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left205 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %138, i32 0, i32 8
  %139 = load i32, i32* %adjust_left205, align 4, !tbaa !83
  %sub206 = sub nsw i32 %137, %139
  %conv207 = sext i32 %sub206 to i64
  %add208 = add nsw i64 %conv207, 127
  %shr209 = ashr i64 %add208, 8
  %conv210 = trunc i64 %shr209 to i32
  store i32 %conv210, i32* %xli204, align 4, !tbaa !5
  %140 = bitcast i32* %xri211 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %140) #1
  %141 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_current212 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %141, i32 0, i32 5
  %142 = load i32, i32* %x_current212, align 4, !tbaa !204
  %143 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right213 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %143, i32 0, i32 9
  %144 = load i32, i32* %adjust_right213, align 4, !tbaa !85
  %add214 = add nsw i32 %142, %144
  %conv215 = sext i32 %add214 to i64
  %add216 = add nsw i64 %conv215, 127
  %shr217 = ashr i64 %add216, 8
  %conv218 = trunc i64 %shr217 to i32
  store i32 %conv218, i32* %xri211, align 4, !tbaa !5
  br label %do.body.219

do.body.219:                                      ; preds = %if.then.203
  br label %do.cond.220

do.cond.220:                                      ; preds = %do.body.219
  br label %do.end.221

do.end.221:                                       ; preds = %do.cond.220
  %145 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_rect222 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %145, i32 0, i32 16
  %146 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect222, align 8, !tbaa !102
  %147 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev223 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %147, i32 0, i32 12
  %148 = load %struct.gx_device_s*, %struct.gx_device_s** %dev223, align 8, !tbaa !96
  %149 = load i32, i32* %xli204, align 4, !tbaa !5
  %150 = load i32, i32* %y.addr, align 4, !tbaa !5
  %151 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below224 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %151, i32 0, i32 10
  %152 = load i32, i32* %adjust_below224, align 4, !tbaa !86
  %sub225 = sub nsw i32 %150, %152
  %conv226 = sext i32 %sub225 to i64
  %add227 = add nsw i64 %conv226, 127
  %shr228 = ashr i64 %add227, 8
  %conv229 = trunc i64 %shr228 to i32
  %153 = load i32, i32* %xri211, align 4, !tbaa !5
  %154 = load i32, i32* %xli204, align 4, !tbaa !5
  %sub230 = sub nsw i32 %153, %154
  %155 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc231 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %155, i32 0, i32 3
  %156 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc231, align 8, !tbaa !90
  %colors232 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %156, i32 0, i32 1
  %pure233 = bitcast %union._c* %colors232 to i64*
  %157 = load i64, i64* %pure233, align 8, !tbaa !203
  %call234 = call i32 %146(%struct.gx_device_s* %148, i32 %149, i32 %conv229, i32 %sub230, i32 1, i64 %157) #5
  store i32 %call234, i32* %code, align 4, !tbaa !5
  br label %do.body.235

do.body.235:                                      ; preds = %do.end.221
  br label %do.cond.236

do.cond.236:                                      ; preds = %do.body.235
  br label %do.end.237

do.end.237:                                       ; preds = %do.cond.236
  %158 = load i32, i32* %code, align 4, !tbaa !5
  %cmp238 = icmp slt i32 %158, 0
  br i1 %cmp238, label %if.then.240, label %if.end.241

if.then.240:                                      ; preds = %do.end.237
  %159 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %159, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

if.end.241:                                       ; preds = %do.end.237
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.242

cleanup.242:                                      ; preds = %if.end.241, %if.then.240
  %160 = bitcast i32* %xri211 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %160) #1
  %161 = bitcast i32* %xli204 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %161) #1
  %cleanup.dest.244 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.244, label %cleanup.256 [
    i32 0, label %cleanup.cont.245
  ]

cleanup.cont.245:                                 ; preds = %cleanup.242
  br label %if.end.246

if.end.246:                                       ; preds = %cleanup.cont.245, %if.then.174
  %162 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %163 = load i32, i32* %y.addr, align 4, !tbaa !5
  %164 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above247 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %164, i32 0, i32 11
  %165 = load i32, i32* %adjust_above247, align 4, !tbaa !87
  %add248 = add nsw i32 %163, %165
  %166 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %167 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above249 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %167, i32 0, i32 11
  %168 = load i32, i32* %adjust_above249, align 4, !tbaa !87
  %add250 = add nsw i32 %166, %168
  %call251 = call i32 @loop_fill_trap_np(%struct.line_list_s* %162, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %add248, i32 %add250) #5
  store i32 %call251, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.256

if.end.252:                                       ; preds = %land.lhs.true.167, %if.else.160
  br label %if.end.253

if.end.253:                                       ; preds = %if.end.252
  br label %if.end.254

if.end.254:                                       ; preds = %if.end.253
  %169 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %170 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %171 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %172 = load i32, i32* %y.addr, align 4, !tbaa !5
  %173 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %call255 = call i32 @fill_slant_adjust(%struct.line_list_s* %169, %struct.active_line_s* %170, %struct.active_line_s* %171, i32 %172, i32 %173) #5
  store i32 %call255, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.256

cleanup.256:                                      ; preds = %if.end.254, %if.end.246, %cleanup.242, %if.end.154, %cleanup, %if.then
  %174 = bitcast i32* %y_span_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %174) #1
  %175 = bitcast i32* %y_span_delta to i8*
  call void @llvm.lifetime.end(i64 4, i8* %175) #1
  %176 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %176) #1
  %177 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %177) #1
  %178 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %178) #1
  %179 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %179) #1
  %180 = load i32, i32* %retval
  ret i32 %180
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @loop_fill_trap_np(%struct.line_list_s* %ll, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %y, i32 %y1) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %le.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %re.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %y.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s*, align 8
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %re, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  store i32 %y, i32* %y.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %2, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %3 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %y.addr, align 4, !tbaa !5
  %5 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %5, i32 0, i32 13
  %6 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %6, i32 0, i32 0
  %y2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %7 = load i32, i32* %y2, align 4, !tbaa !38
  %cmp = icmp sgt i32 %4, %7
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %8 = load i32, i32* %y.addr, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %9 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox3 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %9, i32 0, i32 13
  %10 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox3, align 8, !tbaa !97
  %p4 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %10, i32 0, i32 0
  %y5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p4, i32 0, i32 1
  %11 = load i32, i32* %y5, align 4, !tbaa !38
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %11, %cond.false ]
  store i32 %cond, i32* %ybot, align 4, !tbaa !5
  %12 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %14 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox6 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %14, i32 0, i32 13
  %15 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox6, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %15, i32 0, i32 1
  %y7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %16 = load i32, i32* %y7, align 4, !tbaa !42
  %cmp8 = icmp slt i32 %13, %16
  br i1 %cmp8, label %cond.true.9, label %cond.false.10

cond.true.9:                                      ; preds = %cond.end
  %17 = load i32, i32* %y1.addr, align 4, !tbaa !5
  br label %cond.end.14

cond.false.10:                                    ; preds = %cond.end
  %18 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox11 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %18, i32 0, i32 13
  %19 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox11, align 8, !tbaa !97
  %q12 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %19, i32 0, i32 1
  %y13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q12, i32 0, i32 1
  %20 = load i32, i32* %y13, align 4, !tbaa !42
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.10, %cond.true.9
  %cond15 = phi i32 [ %17, %cond.true.9 ], [ %20, %cond.false.10 ]
  store i32 %cond15, i32* %ytop, align 4, !tbaa !5
  %21 = load i32, i32* %ybot, align 4, !tbaa !5
  %22 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp16 = icmp sge i32 %21, %22
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.14
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.14
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %23 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %23, i32 0, i32 17
  %24 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %25 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %25, i32 0, i32 12
  %26 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %27 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %28 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %29 = load i32, i32* %ybot, align 4, !tbaa !5
  %30 = load i32, i32* %ytop, align 4, !tbaa !5
  %31 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %31, i32 0, i32 3
  %32 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %33 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %33, i32 0, i32 4
  %34 = load i32, i32* %lop, align 4, !tbaa !91
  %call = call i32 %24(%struct.gx_device_s* %26, %struct.gs_fixed_edge_s* %27, %struct.gs_fixed_edge_s* %28, i32 %29, i32 %30, i32 0, %struct.gx_device_color_s* %32, i32 %34) #5
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then
  %35 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %36) #1
  %37 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #1
  %38 = load i32, i32* %retval
  ret i32 %38
}

; Function Attrs: nounwind uwtable
define internal i32 @fill_slant_adjust(%struct.line_list_s* %ll, %struct.active_line_s* %flp, %struct.active_line_s* %alp, i32 %y, i32 %y1) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %flp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %y.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s*, align 8
  %Yb = alloca i32, align 4
  %Ya = alloca i32, align 4
  %Y1b = alloca i32, align 4
  %Y1a = alloca i32, align 4
  %plbot = alloca %struct.gs_fixed_edge_s*, align 8
  %prbot = alloca %struct.gs_fixed_edge_s*, align 8
  %pltop = alloca %struct.gs_fixed_edge_s*, align 8
  %prtop = alloca %struct.gs_fixed_edge_s*, align 8
  %vert_left = alloca %struct.gs_fixed_edge_s, align 4
  %slant_left = alloca %struct.gs_fixed_edge_s, align 4
  %vert_right = alloca %struct.gs_fixed_edge_s, align 4
  %slant_right = alloca %struct.gs_fixed_edge_s, align 4
  %code = alloca i32, align 4
  %iYb = alloca i32, align 4
  %iYa = alloca i32, align 4
  %iY1b = alloca i32, align 4
  %iY1a = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %ix = alloca i32, align 4
  %iw = alloca i32, align 4
  %Yac = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %flp, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %y, i32* %y.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %2, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %3 = bitcast i32* %Yb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %y.addr, align 4, !tbaa !5
  %5 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %5, i32 0, i32 10
  %6 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %sub = sub nsw i32 %4, %6
  store i32 %sub, i32* %Yb, align 4, !tbaa !5
  %7 = bitcast i32* %Ya to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = load i32, i32* %y.addr, align 4, !tbaa !5
  %9 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %9, i32 0, i32 11
  %10 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %add = add nsw i32 %8, %10
  store i32 %add, i32* %Ya, align 4, !tbaa !5
  %11 = bitcast i32* %Y1b to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  %12 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %13 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below2 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %13, i32 0, i32 10
  %14 = load i32, i32* %adjust_below2, align 4, !tbaa !86
  %sub3 = sub nsw i32 %12, %14
  store i32 %sub3, i32* %Y1b, align 4, !tbaa !5
  %15 = bitcast i32* %Y1a to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  %16 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %17 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above4 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %17, i32 0, i32 11
  %18 = load i32, i32* %adjust_above4, align 4, !tbaa !87
  %add5 = add nsw i32 %16, %18
  store i32 %add5, i32* %Y1a, align 4, !tbaa !5
  %19 = bitcast %struct.gs_fixed_edge_s** %plbot to i8*
  call void @llvm.lifetime.start(i64 8, i8* %19) #1
  %20 = bitcast %struct.gs_fixed_edge_s** %prbot to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #1
  %21 = bitcast %struct.gs_fixed_edge_s** %pltop to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #1
  %22 = bitcast %struct.gs_fixed_edge_s** %prtop to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  %23 = bitcast %struct.gs_fixed_edge_s* %vert_left to i8*
  call void @llvm.lifetime.start(i64 16, i8* %23) #1
  %24 = bitcast %struct.gs_fixed_edge_s* %slant_left to i8*
  call void @llvm.lifetime.start(i64 16, i8* %24) #1
  %25 = bitcast %struct.gs_fixed_edge_s* %vert_right to i8*
  call void @llvm.lifetime.start(i64 16, i8* %25) #1
  %26 = bitcast %struct.gs_fixed_edge_s* %slant_right to i8*
  call void @llvm.lifetime.start(i64 16, i8* %26) #1
  %27 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body.6

do.body.6:                                        ; preds = %do.end
  br label %do.cond.7

do.cond.7:                                        ; preds = %do.body.6
  br label %do.end.8

do.end.8:                                         ; preds = %do.cond.7
  %28 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %28, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %29 = load i32, i32* %x, align 4, !tbaa !193
  %30 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %30, i32 0, i32 8
  %31 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub9 = sub nsw i32 %29, %31
  %start10 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_left, i32 0, i32 0
  %x11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start10, i32 0, i32 0
  store i32 %sub9, i32* %x11, align 4, !tbaa !208
  %32 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %32, i32 0, i32 1
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %33 = load i32, i32* %x12, align 4, !tbaa !194
  %34 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left13 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %34, i32 0, i32 8
  %35 = load i32, i32* %adjust_left13, align 4, !tbaa !83
  %sub14 = sub nsw i32 %33, %35
  %end15 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_left, i32 0, i32 1
  %x16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end15, i32 0, i32 0
  store i32 %sub14, i32* %x16, align 4, !tbaa !210
  %36 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %36, i32 0, i32 0
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start17, i32 0, i32 0
  %37 = load i32, i32* %x18, align 4, !tbaa !193
  %38 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %38, i32 0, i32 9
  %39 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add19 = add nsw i32 %37, %39
  %start20 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_right, i32 0, i32 0
  %x21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start20, i32 0, i32 0
  store i32 %add19, i32* %x21, align 4, !tbaa !208
  %40 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end22 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %40, i32 0, i32 1
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end22, i32 0, i32 0
  %41 = load i32, i32* %x23, align 4, !tbaa !194
  %42 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right24 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %42, i32 0, i32 9
  %43 = load i32, i32* %adjust_right24, align 4, !tbaa !85
  %add25 = add nsw i32 %41, %43
  %end26 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_right, i32 0, i32 1
  %x27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end26, i32 0, i32 0
  store i32 %add25, i32* %x27, align 4, !tbaa !210
  %44 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start28 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %44, i32 0, i32 0
  %x29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start28, i32 0, i32 0
  %45 = load i32, i32* %x29, align 4, !tbaa !193
  %46 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end30 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %46, i32 0, i32 1
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end30, i32 0, i32 0
  %47 = load i32, i32* %x31, align 4, !tbaa !194
  %cmp = icmp slt i32 %45, %47
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.end.8
  %48 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %48, i32 0, i32 5
  %49 = load i32, i32* %x_current, align 4, !tbaa !204
  %50 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left32 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %50, i32 0, i32 8
  %51 = load i32, i32* %adjust_left32, align 4, !tbaa !83
  %sub33 = sub nsw i32 %49, %51
  %end34 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 1
  %x35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end34, i32 0, i32 0
  store i32 %sub33, i32* %x35, align 4, !tbaa !210
  %start36 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 0
  %x37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start36, i32 0, i32 0
  store i32 %sub33, i32* %x37, align 4, !tbaa !208
  %52 = load i32, i32* %Yb, align 4, !tbaa !5
  %start38 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 0
  %y39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start38, i32 0, i32 1
  store i32 %52, i32* %y39, align 4, !tbaa !211
  %53 = load i32, i32* %Ya, align 4, !tbaa !5
  %end40 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 1
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end40, i32 0, i32 1
  store i32 %53, i32* %y41, align 4, !tbaa !212
  %54 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 6
  %55 = load i32, i32* %x_next, align 4, !tbaa !205
  %56 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right42 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %56, i32 0, i32 9
  %57 = load i32, i32* %adjust_right42, align 4, !tbaa !85
  %add43 = add nsw i32 %55, %57
  %end44 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 1
  %x45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end44, i32 0, i32 0
  store i32 %add43, i32* %x45, align 4, !tbaa !210
  %start46 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 0
  %x47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start46, i32 0, i32 0
  store i32 %add43, i32* %x47, align 4, !tbaa !208
  %58 = load i32, i32* %Y1b, align 4, !tbaa !5
  %start48 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 0
  %y49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start48, i32 0, i32 1
  store i32 %58, i32* %y49, align 4, !tbaa !211
  %59 = load i32, i32* %Y1a, align 4, !tbaa !5
  %end50 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 1
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end50, i32 0, i32 1
  store i32 %59, i32* %y51, align 4, !tbaa !212
  %60 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %60, i32 0, i32 0
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start52, i32 0, i32 1
  %61 = load i32, i32* %y53, align 4, !tbaa !187
  %62 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above54 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %62, i32 0, i32 11
  %63 = load i32, i32* %adjust_above54, align 4, !tbaa !87
  %add55 = add nsw i32 %61, %63
  %start56 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_left, i32 0, i32 0
  %y57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start56, i32 0, i32 1
  store i32 %add55, i32* %y57, align 4, !tbaa !211
  %64 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end58 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %64, i32 0, i32 1
  %y59 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end58, i32 0, i32 1
  %65 = load i32, i32* %y59, align 4, !tbaa !195
  %66 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above60 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %66, i32 0, i32 11
  %67 = load i32, i32* %adjust_above60, align 4, !tbaa !87
  %add61 = add nsw i32 %65, %67
  %end62 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_left, i32 0, i32 1
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end62, i32 0, i32 1
  store i32 %add61, i32* %y63, align 4, !tbaa !212
  %68 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start64 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %68, i32 0, i32 0
  %y65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start64, i32 0, i32 1
  %69 = load i32, i32* %y65, align 4, !tbaa !187
  %70 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below66 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %70, i32 0, i32 10
  %71 = load i32, i32* %adjust_below66, align 4, !tbaa !86
  %sub67 = sub nsw i32 %69, %71
  %start68 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_right, i32 0, i32 0
  %y69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start68, i32 0, i32 1
  store i32 %sub67, i32* %y69, align 4, !tbaa !211
  %72 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end70 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %72, i32 0, i32 1
  %y71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end70, i32 0, i32 1
  %73 = load i32, i32* %y71, align 4, !tbaa !195
  %74 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below72 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %74, i32 0, i32 10
  %75 = load i32, i32* %adjust_below72, align 4, !tbaa !86
  %sub73 = sub nsw i32 %73, %75
  %end74 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_right, i32 0, i32 1
  %y75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end74, i32 0, i32 1
  store i32 %sub73, i32* %y75, align 4, !tbaa !212
  store %struct.gs_fixed_edge_s* %vert_left, %struct.gs_fixed_edge_s** %plbot, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %slant_right, %struct.gs_fixed_edge_s** %prbot, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %slant_left, %struct.gs_fixed_edge_s** %pltop, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %vert_right, %struct.gs_fixed_edge_s** %prtop, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %do.end.8
  %76 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %x_next76 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %76, i32 0, i32 6
  %77 = load i32, i32* %x_next76, align 4, !tbaa !205
  %78 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left77 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %78, i32 0, i32 8
  %79 = load i32, i32* %adjust_left77, align 4, !tbaa !83
  %sub78 = sub nsw i32 %77, %79
  %end79 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 1
  %x80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end79, i32 0, i32 0
  store i32 %sub78, i32* %x80, align 4, !tbaa !210
  %start81 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 0
  %x82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start81, i32 0, i32 0
  store i32 %sub78, i32* %x82, align 4, !tbaa !208
  %80 = load i32, i32* %Y1b, align 4, !tbaa !5
  %start83 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 0
  %y84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start83, i32 0, i32 1
  store i32 %80, i32* %y84, align 4, !tbaa !211
  %81 = load i32, i32* %Y1a, align 4, !tbaa !5
  %end85 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 1
  %y86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end85, i32 0, i32 1
  store i32 %81, i32* %y86, align 4, !tbaa !212
  %82 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_current87 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %82, i32 0, i32 5
  %83 = load i32, i32* %x_current87, align 4, !tbaa !204
  %84 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right88 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %84, i32 0, i32 9
  %85 = load i32, i32* %adjust_right88, align 4, !tbaa !85
  %add89 = add nsw i32 %83, %85
  %end90 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 1
  %x91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end90, i32 0, i32 0
  store i32 %add89, i32* %x91, align 4, !tbaa !210
  %start92 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 0
  %x93 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start92, i32 0, i32 0
  store i32 %add89, i32* %x93, align 4, !tbaa !208
  %86 = load i32, i32* %Yb, align 4, !tbaa !5
  %start94 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 0
  %y95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start94, i32 0, i32 1
  store i32 %86, i32* %y95, align 4, !tbaa !211
  %87 = load i32, i32* %Ya, align 4, !tbaa !5
  %end96 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 1
  %y97 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end96, i32 0, i32 1
  store i32 %87, i32* %y97, align 4, !tbaa !212
  %88 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start98 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %88, i32 0, i32 0
  %y99 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start98, i32 0, i32 1
  %89 = load i32, i32* %y99, align 4, !tbaa !187
  %90 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below100 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %90, i32 0, i32 10
  %91 = load i32, i32* %adjust_below100, align 4, !tbaa !86
  %sub101 = sub nsw i32 %89, %91
  %start102 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_left, i32 0, i32 0
  %y103 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start102, i32 0, i32 1
  store i32 %sub101, i32* %y103, align 4, !tbaa !211
  %92 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end104 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %92, i32 0, i32 1
  %y105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end104, i32 0, i32 1
  %93 = load i32, i32* %y105, align 4, !tbaa !195
  %94 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below106 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %94, i32 0, i32 10
  %95 = load i32, i32* %adjust_below106, align 4, !tbaa !86
  %sub107 = sub nsw i32 %93, %95
  %end108 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_left, i32 0, i32 1
  %y109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end108, i32 0, i32 1
  store i32 %sub107, i32* %y109, align 4, !tbaa !212
  %96 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start110 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %96, i32 0, i32 0
  %y111 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start110, i32 0, i32 1
  %97 = load i32, i32* %y111, align 4, !tbaa !187
  %98 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above112 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %98, i32 0, i32 11
  %99 = load i32, i32* %adjust_above112, align 4, !tbaa !87
  %add113 = add nsw i32 %97, %99
  %start114 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_right, i32 0, i32 0
  %y115 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start114, i32 0, i32 1
  store i32 %add113, i32* %y115, align 4, !tbaa !211
  %100 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end116 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %100, i32 0, i32 1
  %y117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end116, i32 0, i32 1
  %101 = load i32, i32* %y117, align 4, !tbaa !195
  %102 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above118 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %102, i32 0, i32 11
  %103 = load i32, i32* %adjust_above118, align 4, !tbaa !87
  %add119 = add nsw i32 %101, %103
  %end120 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %slant_right, i32 0, i32 1
  %y121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end120, i32 0, i32 1
  store i32 %add119, i32* %y121, align 4, !tbaa !212
  store %struct.gs_fixed_edge_s* %slant_left, %struct.gs_fixed_edge_s** %plbot, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %vert_right, %struct.gs_fixed_edge_s** %prbot, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %vert_left, %struct.gs_fixed_edge_s** %pltop, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %slant_right, %struct.gs_fixed_edge_s** %prtop, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %104 = load i32, i32* %Ya, align 4, !tbaa !5
  %105 = load i32, i32* %Y1b, align 4, !tbaa !5
  %cmp122 = icmp sge i32 %104, %105
  br i1 %cmp122, label %if.then.123, label %if.else.193

if.then.123:                                      ; preds = %if.end
  %106 = bitcast i32* %iYb to i8*
  call void @llvm.lifetime.start(i64 4, i8* %106) #1
  %107 = load i32, i32* %Yb, align 4, !tbaa !5
  %conv = sext i32 %107 to i64
  %add124 = add nsw i64 %conv, 127
  %shr = ashr i64 %add124, 8
  %conv125 = trunc i64 %shr to i32
  store i32 %conv125, i32* %iYb, align 4, !tbaa !5
  %108 = bitcast i32* %iYa to i8*
  call void @llvm.lifetime.start(i64 4, i8* %108) #1
  %109 = load i32, i32* %Ya, align 4, !tbaa !5
  %conv126 = sext i32 %109 to i64
  %add127 = add nsw i64 %conv126, 127
  %shr128 = ashr i64 %add127, 8
  %conv129 = trunc i64 %shr128 to i32
  store i32 %conv129, i32* %iYa, align 4, !tbaa !5
  %110 = bitcast i32* %iY1b to i8*
  call void @llvm.lifetime.start(i64 4, i8* %110) #1
  %111 = load i32, i32* %Y1b, align 4, !tbaa !5
  %conv130 = sext i32 %111 to i64
  %add131 = add nsw i64 %conv130, 127
  %shr132 = ashr i64 %add131, 8
  %conv133 = trunc i64 %shr132 to i32
  store i32 %conv133, i32* %iY1b, align 4, !tbaa !5
  %112 = bitcast i32* %iY1a to i8*
  call void @llvm.lifetime.start(i64 4, i8* %112) #1
  %113 = load i32, i32* %Y1a, align 4, !tbaa !5
  %conv134 = sext i32 %113 to i64
  %add135 = add nsw i64 %conv134, 127
  %shr136 = ashr i64 %add135, 8
  %conv137 = trunc i64 %shr136 to i32
  store i32 %conv137, i32* %iY1a, align 4, !tbaa !5
  br label %do.body.138

do.body.138:                                      ; preds = %if.then.123
  br label %do.cond.139

do.cond.139:                                      ; preds = %do.body.138
  br label %do.end.140

do.end.140:                                       ; preds = %do.cond.139
  %114 = load i32, i32* %iY1b, align 4, !tbaa !5
  %115 = load i32, i32* %iYb, align 4, !tbaa !5
  %cmp141 = icmp sgt i32 %114, %115
  br i1 %cmp141, label %if.then.143, label %if.end.148

if.then.143:                                      ; preds = %do.end.140
  %116 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_trap = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %116, i32 0, i32 17
  %117 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap, align 8, !tbaa !104
  %118 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %118, i32 0, i32 12
  %119 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %120 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %plbot, align 8, !tbaa !1
  %121 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %prbot, align 8, !tbaa !1
  %122 = load i32, i32* %Yb, align 4, !tbaa !5
  %123 = load i32, i32* %Y1b, align 4, !tbaa !5
  %124 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %124, i32 0, i32 3
  %125 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %126 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %126, i32 0, i32 4
  %127 = load i32, i32* %lop, align 4, !tbaa !91
  %call = call i32 %117(%struct.gx_device_s* %119, %struct.gs_fixed_edge_s* %120, %struct.gs_fixed_edge_s* %121, i32 %122, i32 %123, i32 0, %struct.gx_device_color_s* %125, i32 %127) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %128 = load i32, i32* %code, align 4, !tbaa !5
  %cmp144 = icmp slt i32 %128, 0
  br i1 %cmp144, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %if.then.143
  %129 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %129, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.187

if.end.147:                                       ; preds = %if.then.143
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %do.end.140
  %130 = load i32, i32* %iYa, align 4, !tbaa !5
  %131 = load i32, i32* %iY1b, align 4, !tbaa !5
  %cmp149 = icmp sgt i32 %130, %131
  br i1 %cmp149, label %if.then.151, label %if.end.176

if.then.151:                                      ; preds = %if.end.148
  %132 = bitcast i32* %ix to i8*
  call void @llvm.lifetime.start(i64 4, i8* %132) #1
  %start152 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_left, i32 0, i32 0
  %x153 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start152, i32 0, i32 0
  %133 = load i32, i32* %x153, align 4, !tbaa !208
  %conv154 = sext i32 %133 to i64
  %add155 = add nsw i64 %conv154, 127
  %shr156 = ashr i64 %add155, 8
  %conv157 = trunc i64 %shr156 to i32
  store i32 %conv157, i32* %ix, align 4, !tbaa !5
  %134 = bitcast i32* %iw to i8*
  call void @llvm.lifetime.start(i64 4, i8* %134) #1
  %start158 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %vert_right, i32 0, i32 0
  %x159 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start158, i32 0, i32 0
  %135 = load i32, i32* %x159, align 4, !tbaa !208
  %conv160 = sext i32 %135 to i64
  %add161 = add nsw i64 %conv160, 127
  %shr162 = ashr i64 %add161, 8
  %conv163 = trunc i64 %shr162 to i32
  %136 = load i32, i32* %ix, align 4, !tbaa !5
  %sub164 = sub nsw i32 %conv163, %136
  store i32 %sub164, i32* %iw, align 4, !tbaa !5
  %137 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc165 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %137, i32 0, i32 3
  %138 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc165, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %138, i32 0, i32 0
  %139 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %139, i32 0, i32 5
  %140 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %141 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc166 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %141, i32 0, i32 3
  %142 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc166, align 8, !tbaa !90
  %143 = load i32, i32* %ix, align 4, !tbaa !5
  %144 = load i32, i32* %iY1b, align 4, !tbaa !5
  %145 = load i32, i32* %iw, align 4, !tbaa !5
  %146 = load i32, i32* %iYa, align 4, !tbaa !5
  %147 = load i32, i32* %iY1b, align 4, !tbaa !5
  %sub167 = sub nsw i32 %146, %147
  %148 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev168 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %148, i32 0, i32 12
  %149 = load %struct.gx_device_s*, %struct.gx_device_s** %dev168, align 8, !tbaa !96
  %150 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop169 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %150, i32 0, i32 4
  %151 = load i32, i32* %lop169, align 4, !tbaa !91
  %call170 = call i32 %140(%struct.gx_device_color_s* %142, i32 %143, i32 %144, i32 %145, i32 %sub167, %struct.gx_device_s* %149, i32 %151, %struct.gx_rop_source_s* null) #5
  store i32 %call170, i32* %code, align 4, !tbaa !5
  %152 = load i32, i32* %code, align 4, !tbaa !5
  %cmp171 = icmp slt i32 %152, 0
  br i1 %cmp171, label %if.then.173, label %if.end.174

if.then.173:                                      ; preds = %if.then.151
  %153 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %153, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.174:                                       ; preds = %if.then.151
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.174, %if.then.173
  %154 = bitcast i32* %iw to i8*
  call void @llvm.lifetime.end(i64 4, i8* %154) #1
  %155 = bitcast i32* %ix to i8*
  call void @llvm.lifetime.end(i64 4, i8* %155) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.187 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.176

if.end.176:                                       ; preds = %cleanup.cont, %if.end.148
  %156 = load i32, i32* %iY1a, align 4, !tbaa !5
  %157 = load i32, i32* %iYa, align 4, !tbaa !5
  %cmp177 = icmp sgt i32 %156, %157
  br i1 %cmp177, label %if.then.179, label %if.else.185

if.then.179:                                      ; preds = %if.end.176
  %158 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_trap180 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %158, i32 0, i32 17
  %159 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap180, align 8, !tbaa !104
  %160 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev181 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %160, i32 0, i32 12
  %161 = load %struct.gx_device_s*, %struct.gx_device_s** %dev181, align 8, !tbaa !96
  %162 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %pltop, align 8, !tbaa !1
  %163 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %prtop, align 8, !tbaa !1
  %164 = load i32, i32* %Ya, align 4, !tbaa !5
  %165 = load i32, i32* %Y1a, align 4, !tbaa !5
  %166 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc182 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %166, i32 0, i32 3
  %167 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc182, align 8, !tbaa !90
  %168 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop183 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %168, i32 0, i32 4
  %169 = load i32, i32* %lop183, align 4, !tbaa !91
  %call184 = call i32 %159(%struct.gx_device_s* %161, %struct.gs_fixed_edge_s* %162, %struct.gs_fixed_edge_s* %163, i32 %164, i32 %165, i32 0, %struct.gx_device_color_s* %167, i32 %169) #5
  store i32 %call184, i32* %code, align 4, !tbaa !5
  br label %if.end.186

if.else.185:                                      ; preds = %if.end.176
  store i32 0, i32* %code, align 4, !tbaa !5
  br label %if.end.186

if.end.186:                                       ; preds = %if.else.185, %if.then.179
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.187

cleanup.187:                                      ; preds = %if.end.186, %cleanup, %if.then.146
  %170 = bitcast i32* %iY1a to i8*
  call void @llvm.lifetime.end(i64 4, i8* %170) #1
  %171 = bitcast i32* %iY1b to i8*
  call void @llvm.lifetime.end(i64 4, i8* %171) #1
  %172 = bitcast i32* %iYa to i8*
  call void @llvm.lifetime.end(i64 4, i8* %172) #1
  %173 = bitcast i32* %iYb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %173) #1
  %cleanup.dest.191 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.191, label %cleanup.245 [
    i32 0, label %cleanup.cont.192
  ]

cleanup.cont.192:                                 ; preds = %cleanup.187
  br label %if.end.244

if.else.193:                                      ; preds = %if.end
  %174 = bitcast i32* %Yac to i8*
  call void @llvm.lifetime.start(i64 4, i8* %174) #1
  %175 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %175, i32 0, i32 13
  %176 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox, align 8, !tbaa !97
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %176, i32 0, i32 0
  %y194 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %177 = load i32, i32* %y194, align 4, !tbaa !38
  %178 = load i32, i32* %Ya, align 4, !tbaa !5
  %cmp195 = icmp slt i32 %177, %178
  br i1 %cmp195, label %if.then.197, label %if.else.207

if.then.197:                                      ; preds = %if.else.193
  %179 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_trap198 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %179, i32 0, i32 17
  %180 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap198, align 8, !tbaa !104
  %181 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev199 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %181, i32 0, i32 12
  %182 = load %struct.gx_device_s*, %struct.gx_device_s** %dev199, align 8, !tbaa !96
  %183 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %plbot, align 8, !tbaa !1
  %184 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %prbot, align 8, !tbaa !1
  %185 = load i32, i32* %Yb, align 4, !tbaa !5
  %186 = load i32, i32* %Ya, align 4, !tbaa !5
  %187 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc200 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %187, i32 0, i32 3
  %188 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc200, align 8, !tbaa !90
  %189 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop201 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %189, i32 0, i32 4
  %190 = load i32, i32* %lop201, align 4, !tbaa !91
  %call202 = call i32 %180(%struct.gx_device_s* %182, %struct.gs_fixed_edge_s* %183, %struct.gs_fixed_edge_s* %184, i32 %185, i32 %186, i32 0, %struct.gx_device_color_s* %188, i32 %190) #5
  store i32 %call202, i32* %code, align 4, !tbaa !5
  %191 = load i32, i32* %code, align 4, !tbaa !5
  %cmp203 = icmp slt i32 %191, 0
  br i1 %cmp203, label %if.then.205, label %if.end.206

if.then.205:                                      ; preds = %if.then.197
  %192 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %192, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.241

if.end.206:                                       ; preds = %if.then.197
  %193 = load i32, i32* %Ya, align 4, !tbaa !5
  store i32 %193, i32* %Yac, align 4, !tbaa !5
  br label %if.end.211

if.else.207:                                      ; preds = %if.else.193
  %194 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox208 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %194, i32 0, i32 13
  %195 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox208, align 8, !tbaa !97
  %p209 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %195, i32 0, i32 0
  %y210 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p209, i32 0, i32 1
  %196 = load i32, i32* %y210, align 4, !tbaa !38
  store i32 %196, i32* %Yac, align 4, !tbaa !5
  br label %if.end.211

if.end.211:                                       ; preds = %if.else.207, %if.end.206
  %197 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox212 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %197, i32 0, i32 13
  %198 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox212, align 8, !tbaa !97
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %198, i32 0, i32 1
  %y213 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %199 = load i32, i32* %y213, align 4, !tbaa !42
  %200 = load i32, i32* %Y1b, align 4, !tbaa !5
  %cmp214 = icmp sgt i32 %199, %200
  br i1 %cmp214, label %if.then.216, label %if.else.231

if.then.216:                                      ; preds = %if.end.211
  %201 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_trap217 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %201, i32 0, i32 17
  %202 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap217, align 8, !tbaa !104
  %203 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev218 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %203, i32 0, i32 12
  %204 = load %struct.gx_device_s*, %struct.gx_device_s** %dev218, align 8, !tbaa !96
  %205 = load i32, i32* %Yac, align 4, !tbaa !5
  %206 = load i32, i32* %Y1b, align 4, !tbaa !5
  %207 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc219 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %207, i32 0, i32 3
  %208 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc219, align 8, !tbaa !90
  %209 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop220 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %209, i32 0, i32 4
  %210 = load i32, i32* %lop220, align 4, !tbaa !91
  %call221 = call i32 %202(%struct.gx_device_s* %204, %struct.gs_fixed_edge_s* %slant_left, %struct.gs_fixed_edge_s* %slant_right, i32 %205, i32 %206, i32 0, %struct.gx_device_color_s* %208, i32 %210) #5
  store i32 %call221, i32* %code, align 4, !tbaa !5
  %211 = load i32, i32* %code, align 4, !tbaa !5
  %cmp222 = icmp slt i32 %211, 0
  br i1 %cmp222, label %if.then.224, label %if.end.225

if.then.224:                                      ; preds = %if.then.216
  %212 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %212, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.241

if.end.225:                                       ; preds = %if.then.216
  %213 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_trap226 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %213, i32 0, i32 17
  %214 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap226, align 8, !tbaa !104
  %215 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev227 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %215, i32 0, i32 12
  %216 = load %struct.gx_device_s*, %struct.gx_device_s** %dev227, align 8, !tbaa !96
  %217 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %pltop, align 8, !tbaa !1
  %218 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %prtop, align 8, !tbaa !1
  %219 = load i32, i32* %Y1b, align 4, !tbaa !5
  %220 = load i32, i32* %Y1a, align 4, !tbaa !5
  %221 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc228 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %221, i32 0, i32 3
  %222 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc228, align 8, !tbaa !90
  %223 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop229 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %223, i32 0, i32 4
  %224 = load i32, i32* %lop229, align 4, !tbaa !91
  %call230 = call i32 %214(%struct.gx_device_s* %216, %struct.gs_fixed_edge_s* %217, %struct.gs_fixed_edge_s* %218, i32 %219, i32 %220, i32 0, %struct.gx_device_color_s* %222, i32 %224) #5
  store i32 %call230, i32* %code, align 4, !tbaa !5
  br label %if.end.240

if.else.231:                                      ; preds = %if.end.211
  %225 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %fill_trap232 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %225, i32 0, i32 17
  %226 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trap232, align 8, !tbaa !104
  %227 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev233 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %227, i32 0, i32 12
  %228 = load %struct.gx_device_s*, %struct.gx_device_s** %dev233, align 8, !tbaa !96
  %229 = load i32, i32* %Yac, align 4, !tbaa !5
  %230 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pbox234 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %230, i32 0, i32 13
  %231 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %pbox234, align 8, !tbaa !97
  %q235 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %231, i32 0, i32 1
  %y236 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q235, i32 0, i32 1
  %232 = load i32, i32* %y236, align 4, !tbaa !42
  %233 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc237 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %233, i32 0, i32 3
  %234 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc237, align 8, !tbaa !90
  %235 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop238 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %235, i32 0, i32 4
  %236 = load i32, i32* %lop238, align 4, !tbaa !91
  %call239 = call i32 %226(%struct.gx_device_s* %228, %struct.gs_fixed_edge_s* %slant_left, %struct.gs_fixed_edge_s* %slant_right, i32 %229, i32 %232, i32 0, %struct.gx_device_color_s* %234, i32 %236) #5
  store i32 %call239, i32* %code, align 4, !tbaa !5
  br label %if.end.240

if.end.240:                                       ; preds = %if.else.231, %if.end.225
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.241

cleanup.241:                                      ; preds = %if.end.240, %if.then.224, %if.then.205
  %237 = bitcast i32* %Yac to i8*
  call void @llvm.lifetime.end(i64 4, i8* %237) #1
  %cleanup.dest.242 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.242, label %cleanup.245 [
    i32 0, label %cleanup.cont.243
  ]

cleanup.cont.243:                                 ; preds = %cleanup.241
  br label %if.end.244

if.end.244:                                       ; preds = %cleanup.cont.243, %cleanup.cont.192
  %238 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %238, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.245

cleanup.245:                                      ; preds = %if.end.244, %cleanup.241, %cleanup.187
  %239 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %239) #1
  %240 = bitcast %struct.gs_fixed_edge_s* %slant_right to i8*
  call void @llvm.lifetime.end(i64 16, i8* %240) #1
  %241 = bitcast %struct.gs_fixed_edge_s* %vert_right to i8*
  call void @llvm.lifetime.end(i64 16, i8* %241) #1
  %242 = bitcast %struct.gs_fixed_edge_s* %slant_left to i8*
  call void @llvm.lifetime.end(i64 16, i8* %242) #1
  %243 = bitcast %struct.gs_fixed_edge_s* %vert_left to i8*
  call void @llvm.lifetime.end(i64 16, i8* %243) #1
  %244 = bitcast %struct.gs_fixed_edge_s** %prtop to i8*
  call void @llvm.lifetime.end(i64 8, i8* %244) #1
  %245 = bitcast %struct.gs_fixed_edge_s** %pltop to i8*
  call void @llvm.lifetime.end(i64 8, i8* %245) #1
  %246 = bitcast %struct.gs_fixed_edge_s** %prbot to i8*
  call void @llvm.lifetime.end(i64 8, i8* %246) #1
  %247 = bitcast %struct.gs_fixed_edge_s** %plbot to i8*
  call void @llvm.lifetime.end(i64 8, i8* %247) #1
  %248 = bitcast i32* %Y1a to i8*
  call void @llvm.lifetime.end(i64 4, i8* %248) #1
  %249 = bitcast i32* %Y1b to i8*
  call void @llvm.lifetime.end(i64 4, i8* %249) #1
  %250 = bitcast i32* %Ya to i8*
  call void @llvm.lifetime.end(i64 4, i8* %250) #1
  %251 = bitcast i32* %Yb to i8*
  call void @llvm.lifetime.end(i64 4, i8* %251) #1
  %252 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %252) #1
  %253 = load i32, i32* %retval
  ret i32 %253
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @slant_into_trapezoids__nd(%struct.line_list_s* %ll, %struct.active_line_s* %flp, %struct.active_line_s* %alp, i32 %y, i32 %y1) #3 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %flp.addr = alloca %struct.active_line_s*, align 8
  %alp.addr = alloca %struct.active_line_s*, align 8
  %y.addr = alloca i32, align 4
  %y1.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s*, align 8
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %code = alloca i32, align 4
  %y_span_delta = alloca i32, align 4
  %y_span_limit = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %xli = alloca i32, align 4
  %xri = alloca i32, align 4
  %xli206 = alloca i32, align 4
  %xri213 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store %struct.active_line_s* %flp, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  store %struct.active_line_s* %alp, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  store i32 %y, i32* %y.addr, align 4, !tbaa !5
  store i32 %y1, i32* %y1.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  store %struct.fill_options_s* %2, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %3 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  store i32 0, i32* %code, align 4, !tbaa !5
  %6 = bitcast i32* %y_span_delta to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %7, i32 0, i32 11
  %8 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %conv = sext i32 %8 to i64
  %add = add nsw i64 127, %conv
  %conv2 = trunc i64 %add to i32
  store i32 %conv2, i32* %y_span_delta, align 4, !tbaa !5
  %9 = bitcast i32* %y_span_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %10, i32 0, i32 10
  %11 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %12 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above3 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %12, i32 0, i32 11
  %13 = load i32, i32* %adjust_above3, align 4, !tbaa !87
  %add4 = add nsw i32 %11, %13
  store i32 %add4, i32* %y_span_limit, align 4, !tbaa !5
  %14 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %14, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %15 = load i32, i32* %x, align 4, !tbaa !193
  %16 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %16, i32 0, i32 8
  %17 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub = sub nsw i32 %15, %17
  %start5 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start5, i32 0, i32 0
  store i32 %sub, i32* %x6, align 4, !tbaa !208
  %18 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %18, i32 0, i32 1
  %x7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %19 = load i32, i32* %x7, align 4, !tbaa !194
  %20 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left8 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %20, i32 0, i32 8
  %21 = load i32, i32* %adjust_left8, align 4, !tbaa !83
  %sub9 = sub nsw i32 %19, %21
  %end10 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end10, i32 0, i32 0
  store i32 %sub9, i32* %x11, align 4, !tbaa !210
  %22 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start12 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %22, i32 0, i32 0
  %x13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start12, i32 0, i32 0
  %23 = load i32, i32* %x13, align 4, !tbaa !193
  %24 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %24, i32 0, i32 9
  %25 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add14 = add nsw i32 %23, %25
  %start15 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start15, i32 0, i32 0
  store i32 %add14, i32* %x16, align 4, !tbaa !208
  %26 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %26, i32 0, i32 1
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end17, i32 0, i32 0
  %27 = load i32, i32* %x18, align 4, !tbaa !194
  %28 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right19 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %28, i32 0, i32 9
  %29 = load i32, i32* %adjust_right19, align 4, !tbaa !85
  %add20 = add nsw i32 %27, %29
  %end21 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end21, i32 0, i32 0
  store i32 %add20, i32* %x22, align 4, !tbaa !210
  %end23 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end23, i32 0, i32 0
  %30 = load i32, i32* %x24, align 4, !tbaa !210
  %start25 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start25, i32 0, i32 0
  %31 = load i32, i32* %x26, align 4, !tbaa !208
  %cmp = icmp eq i32 %30, %31
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %end28 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end28, i32 0, i32 0
  %32 = load i32, i32* %x29, align 4, !tbaa !210
  %start30 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start30, i32 0, i32 0
  %33 = load i32, i32* %x31, align 4, !tbaa !208
  %cmp32 = icmp eq i32 %32, %33
  br i1 %cmp32, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %start34 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start34, i32 0, i32 0
  %34 = load i32, i32* %x35, align 4, !tbaa !208
  %conv36 = sext i32 %34 to i64
  %add37 = add nsw i64 %conv36, 127
  %shr = ashr i64 %add37, 8
  %conv38 = trunc i64 %shr to i32
  %start39 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x40 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start39, i32 0, i32 0
  store i32 %conv38, i32* %x40, align 4, !tbaa !208
  %35 = load i32, i32* %y.addr, align 4, !tbaa !5
  %36 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below41 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %36, i32 0, i32 10
  %37 = load i32, i32* %adjust_below41, align 4, !tbaa !86
  %sub42 = sub nsw i32 %35, %37
  %conv43 = sext i32 %sub42 to i64
  %add44 = add nsw i64 %conv43, 127
  %shr45 = ashr i64 %add44, 8
  %conv46 = trunc i64 %shr45 to i32
  %start47 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start47, i32 0, i32 1
  store i32 %conv46, i32* %y48, align 4, !tbaa !211
  %start49 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start49, i32 0, i32 0
  %38 = load i32, i32* %x50, align 4, !tbaa !208
  %conv51 = sext i32 %38 to i64
  %add52 = add nsw i64 %conv51, 127
  %shr53 = ashr i64 %add52, 8
  %conv54 = trunc i64 %shr53 to i32
  %start55 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start55, i32 0, i32 0
  store i32 %conv54, i32* %x56, align 4, !tbaa !208
  %39 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %40 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above57 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %40, i32 0, i32 11
  %41 = load i32, i32* %adjust_above57, align 4, !tbaa !87
  %add58 = add nsw i32 %39, %41
  %conv59 = sext i32 %add58 to i64
  %add60 = add nsw i64 %conv59, 127
  %shr61 = ashr i64 %add60, 8
  %conv62 = trunc i64 %shr61 to i32
  %start63 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start63, i32 0, i32 1
  store i32 %conv62, i32* %y64, align 4, !tbaa !211
  %42 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %42, i32 0, i32 3
  %43 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %43, i32 0, i32 0
  %44 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %44, i32 0, i32 5
  %45 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %46 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc65 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %46, i32 0, i32 3
  %47 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc65, align 8, !tbaa !90
  %start66 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start66, i32 0, i32 0
  %48 = load i32, i32* %x67, align 4, !tbaa !208
  %start68 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start68, i32 0, i32 1
  %49 = load i32, i32* %y69, align 4, !tbaa !211
  %start70 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start70, i32 0, i32 0
  %50 = load i32, i32* %x71, align 4, !tbaa !208
  %start72 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x73 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start72, i32 0, i32 0
  %51 = load i32, i32* %x73, align 4, !tbaa !208
  %sub74 = sub nsw i32 %50, %51
  %start75 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y76 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start75, i32 0, i32 1
  %52 = load i32, i32* %y76, align 4, !tbaa !211
  %start77 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start77, i32 0, i32 1
  %53 = load i32, i32* %y78, align 4, !tbaa !211
  %sub79 = sub nsw i32 %52, %53
  %54 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %54, i32 0, i32 12
  %55 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %56 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %56, i32 0, i32 4
  %57 = load i32, i32* %lop, align 4, !tbaa !91
  %call = call i32 %45(%struct.gx_device_color_s* %47, i32 %48, i32 %49, i32 %sub74, i32 %sub79, %struct.gx_device_s* %55, i32 %57, %struct.gx_rop_source_s* null) #5
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.259

if.else:                                          ; preds = %land.lhs.true, %entry
  %end80 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end80, i32 0, i32 0
  %58 = load i32, i32* %x81, align 4, !tbaa !210
  %start82 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x83 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start82, i32 0, i32 0
  %59 = load i32, i32* %x83, align 4, !tbaa !208
  %cmp84 = icmp sle i32 %58, %59
  br i1 %cmp84, label %land.lhs.true.86, label %if.else.162

land.lhs.true.86:                                 ; preds = %if.else
  %end87 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x88 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end87, i32 0, i32 0
  %60 = load i32, i32* %x88, align 4, !tbaa !210
  %start89 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x90 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start89, i32 0, i32 0
  %61 = load i32, i32* %x90, align 4, !tbaa !208
  %cmp91 = icmp sge i32 %60, %61
  br i1 %cmp91, label %if.then.93, label %if.else.162

if.then.93:                                       ; preds = %land.lhs.true.86
  %62 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start94 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %62, i32 0, i32 0
  %y95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start94, i32 0, i32 1
  %63 = load i32, i32* %y95, align 4, !tbaa !187
  %64 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below96 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %64, i32 0, i32 10
  %65 = load i32, i32* %adjust_below96, align 4, !tbaa !86
  %sub97 = sub nsw i32 %63, %65
  %start98 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y99 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start98, i32 0, i32 1
  store i32 %sub97, i32* %y99, align 4, !tbaa !211
  %66 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end100 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %66, i32 0, i32 1
  %y101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end100, i32 0, i32 1
  %67 = load i32, i32* %y101, align 4, !tbaa !195
  %68 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below102 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %68, i32 0, i32 10
  %69 = load i32, i32* %adjust_below102, align 4, !tbaa !86
  %sub103 = sub nsw i32 %67, %69
  %end104 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end104, i32 0, i32 1
  store i32 %sub103, i32* %y105, align 4, !tbaa !212
  %70 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start106 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %70, i32 0, i32 0
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start106, i32 0, i32 1
  %71 = load i32, i32* %y107, align 4, !tbaa !187
  %72 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below108 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %72, i32 0, i32 10
  %73 = load i32, i32* %adjust_below108, align 4, !tbaa !86
  %sub109 = sub nsw i32 %71, %73
  %start110 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y111 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start110, i32 0, i32 1
  store i32 %sub109, i32* %y111, align 4, !tbaa !211
  %74 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end112 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %74, i32 0, i32 1
  %y113 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end112, i32 0, i32 1
  %75 = load i32, i32* %y113, align 4, !tbaa !195
  %76 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below114 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %76, i32 0, i32 10
  %77 = load i32, i32* %adjust_below114, align 4, !tbaa !86
  %sub115 = sub nsw i32 %75, %77
  %end116 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end116, i32 0, i32 1
  store i32 %sub115, i32* %y117, align 4, !tbaa !212
  %78 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %79 = load i32, i32* %y_span_delta, align 4, !tbaa !5
  %add118 = add nsw i32 %78, %79
  %and = and i32 %add118, 255
  %80 = load i32, i32* %y_span_limit, align 4, !tbaa !5
  %cmp119 = icmp slt i32 %and, %80
  br i1 %cmp119, label %if.then.121, label %if.end.156

if.then.121:                                      ; preds = %if.then.93
  %81 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.start(i64 4, i8* %81) #1
  %82 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %x_next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %82, i32 0, i32 6
  %83 = load i32, i32* %x_next, align 4, !tbaa !205
  %84 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left122 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %84, i32 0, i32 8
  %85 = load i32, i32* %adjust_left122, align 4, !tbaa !83
  %sub123 = sub nsw i32 %83, %85
  %conv124 = sext i32 %sub123 to i64
  %add125 = add nsw i64 %conv124, 127
  %shr126 = ashr i64 %add125, 8
  %conv127 = trunc i64 %shr126 to i32
  store i32 %conv127, i32* %xli, align 4, !tbaa !5
  %86 = bitcast i32* %xri to i8*
  call void @llvm.lifetime.start(i64 4, i8* %86) #1
  %87 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_next128 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %87, i32 0, i32 6
  %88 = load i32, i32* %x_next128, align 4, !tbaa !205
  %89 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right129 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %89, i32 0, i32 9
  %90 = load i32, i32* %adjust_right129, align 4, !tbaa !85
  %add130 = add nsw i32 %88, %90
  %conv131 = sext i32 %add130 to i64
  %add132 = add nsw i64 %conv131, 127
  %shr133 = ashr i64 %add132, 8
  %conv134 = trunc i64 %shr133 to i32
  store i32 %conv134, i32* %xri, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %if.then.121
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %91 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc135 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %91, i32 0, i32 3
  %92 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc135, align 8, !tbaa !90
  %type136 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %92, i32 0, i32 0
  %93 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type136, align 8, !tbaa !7
  %fill_rectangle137 = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %93, i32 0, i32 5
  %94 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle137, align 8, !tbaa !50
  %95 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc138 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %95, i32 0, i32 3
  %96 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc138, align 8, !tbaa !90
  %97 = load i32, i32* %xli, align 4, !tbaa !5
  %98 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %99 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below139 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %99, i32 0, i32 10
  %100 = load i32, i32* %adjust_below139, align 4, !tbaa !86
  %sub140 = sub nsw i32 %98, %100
  %conv141 = sext i32 %sub140 to i64
  %add142 = add nsw i64 %conv141, 127
  %shr143 = ashr i64 %add142, 8
  %conv144 = trunc i64 %shr143 to i32
  %101 = load i32, i32* %xri, align 4, !tbaa !5
  %102 = load i32, i32* %xli, align 4, !tbaa !5
  %sub145 = sub nsw i32 %101, %102
  %103 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev146 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %103, i32 0, i32 12
  %104 = load %struct.gx_device_s*, %struct.gx_device_s** %dev146, align 8, !tbaa !96
  %105 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop147 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %105, i32 0, i32 4
  %106 = load i32, i32* %lop147, align 4, !tbaa !91
  %call148 = call i32 %94(%struct.gx_device_color_s* %96, i32 %97, i32 %conv144, i32 %sub145, i32 1, %struct.gx_device_s* %104, i32 %106, %struct.gx_rop_source_s* null) #5
  store i32 %call148, i32* %code, align 4, !tbaa !5
  br label %do.body.149

do.body.149:                                      ; preds = %do.end
  br label %do.cond.150

do.cond.150:                                      ; preds = %do.body.149
  br label %do.end.151

do.end.151:                                       ; preds = %do.cond.150
  %107 = load i32, i32* %code, align 4, !tbaa !5
  %cmp152 = icmp slt i32 %107, 0
  br i1 %cmp152, label %if.then.154, label %if.end

if.then.154:                                      ; preds = %do.end.151
  %108 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %108, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %do.end.151
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.154
  %109 = bitcast i32* %xri to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #1
  %110 = bitcast i32* %xli to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.259 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.156

if.end.156:                                       ; preds = %cleanup.cont, %if.then.93
  %111 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %112 = load i32, i32* %y.addr, align 4, !tbaa !5
  %113 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below157 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %113, i32 0, i32 10
  %114 = load i32, i32* %adjust_below157, align 4, !tbaa !86
  %sub158 = sub nsw i32 %112, %114
  %115 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %116 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below159 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %116, i32 0, i32 10
  %117 = load i32, i32* %adjust_below159, align 4, !tbaa !86
  %sub160 = sub nsw i32 %115, %117
  %call161 = call i32 @loop_fill_trap_np(%struct.line_list_s* %111, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %sub158, i32 %sub160) #5
  store i32 %call161, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.259

if.else.162:                                      ; preds = %land.lhs.true.86, %if.else
  %end163 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x164 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end163, i32 0, i32 0
  %118 = load i32, i32* %x164, align 4, !tbaa !210
  %start165 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x166 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start165, i32 0, i32 0
  %119 = load i32, i32* %x166, align 4, !tbaa !208
  %cmp167 = icmp sge i32 %118, %119
  br i1 %cmp167, label %land.lhs.true.169, label %if.end.255

land.lhs.true.169:                                ; preds = %if.else.162
  %end170 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x171 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end170, i32 0, i32 0
  %120 = load i32, i32* %x171, align 4, !tbaa !210
  %start172 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x173 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start172, i32 0, i32 0
  %121 = load i32, i32* %x173, align 4, !tbaa !208
  %cmp174 = icmp sle i32 %120, %121
  br i1 %cmp174, label %if.then.176, label %if.end.255

if.then.176:                                      ; preds = %land.lhs.true.169
  %122 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %start177 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %122, i32 0, i32 0
  %y178 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start177, i32 0, i32 1
  %123 = load i32, i32* %y178, align 4, !tbaa !187
  %124 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above179 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %124, i32 0, i32 11
  %125 = load i32, i32* %adjust_above179, align 4, !tbaa !87
  %add180 = add nsw i32 %123, %125
  %start181 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start181, i32 0, i32 1
  store i32 %add180, i32* %y182, align 4, !tbaa !211
  %126 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %end183 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %126, i32 0, i32 1
  %y184 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end183, i32 0, i32 1
  %127 = load i32, i32* %y184, align 4, !tbaa !195
  %128 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above185 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %128, i32 0, i32 11
  %129 = load i32, i32* %adjust_above185, align 4, !tbaa !87
  %add186 = add nsw i32 %127, %129
  %end187 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y188 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end187, i32 0, i32 1
  store i32 %add186, i32* %y188, align 4, !tbaa !212
  %130 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %start189 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %130, i32 0, i32 0
  %y190 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start189, i32 0, i32 1
  %131 = load i32, i32* %y190, align 4, !tbaa !187
  %132 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above191 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %132, i32 0, i32 11
  %133 = load i32, i32* %adjust_above191, align 4, !tbaa !87
  %add192 = add nsw i32 %131, %133
  %start193 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y194 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start193, i32 0, i32 1
  store i32 %add192, i32* %y194, align 4, !tbaa !211
  %134 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %end195 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %134, i32 0, i32 1
  %y196 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end195, i32 0, i32 1
  %135 = load i32, i32* %y196, align 4, !tbaa !195
  %136 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above197 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %136, i32 0, i32 11
  %137 = load i32, i32* %adjust_above197, align 4, !tbaa !87
  %add198 = add nsw i32 %135, %137
  %end199 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y200 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end199, i32 0, i32 1
  store i32 %add198, i32* %y200, align 4, !tbaa !212
  %138 = load i32, i32* %y.addr, align 4, !tbaa !5
  %139 = load i32, i32* %y_span_delta, align 4, !tbaa !5
  %add201 = add nsw i32 %138, %139
  %and202 = and i32 %add201, 255
  %140 = load i32, i32* %y_span_limit, align 4, !tbaa !5
  %cmp203 = icmp slt i32 %and202, %140
  br i1 %cmp203, label %if.then.205, label %if.end.249

if.then.205:                                      ; preds = %if.then.176
  %141 = bitcast i32* %xli206 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %141) #1
  %142 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %142, i32 0, i32 5
  %143 = load i32, i32* %x_current, align 4, !tbaa !204
  %144 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_left207 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %144, i32 0, i32 8
  %145 = load i32, i32* %adjust_left207, align 4, !tbaa !83
  %sub208 = sub nsw i32 %143, %145
  %conv209 = sext i32 %sub208 to i64
  %add210 = add nsw i64 %conv209, 127
  %shr211 = ashr i64 %add210, 8
  %conv212 = trunc i64 %shr211 to i32
  store i32 %conv212, i32* %xli206, align 4, !tbaa !5
  %146 = bitcast i32* %xri213 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %146) #1
  %147 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %x_current214 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %147, i32 0, i32 5
  %148 = load i32, i32* %x_current214, align 4, !tbaa !204
  %149 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_right215 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %149, i32 0, i32 9
  %150 = load i32, i32* %adjust_right215, align 4, !tbaa !85
  %add216 = add nsw i32 %148, %150
  %conv217 = sext i32 %add216 to i64
  %add218 = add nsw i64 %conv217, 127
  %shr219 = ashr i64 %add218, 8
  %conv220 = trunc i64 %shr219 to i32
  store i32 %conv220, i32* %xri213, align 4, !tbaa !5
  br label %do.body.221

do.body.221:                                      ; preds = %if.then.205
  br label %do.cond.222

do.cond.222:                                      ; preds = %do.body.221
  br label %do.end.223

do.end.223:                                       ; preds = %do.cond.222
  %151 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc224 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %151, i32 0, i32 3
  %152 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc224, align 8, !tbaa !90
  %type225 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %152, i32 0, i32 0
  %153 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type225, align 8, !tbaa !7
  %fill_rectangle226 = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %153, i32 0, i32 5
  %154 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle226, align 8, !tbaa !50
  %155 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %pdevc227 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %155, i32 0, i32 3
  %156 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc227, align 8, !tbaa !90
  %157 = load i32, i32* %xli206, align 4, !tbaa !5
  %158 = load i32, i32* %y.addr, align 4, !tbaa !5
  %159 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_below228 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %159, i32 0, i32 10
  %160 = load i32, i32* %adjust_below228, align 4, !tbaa !86
  %sub229 = sub nsw i32 %158, %160
  %conv230 = sext i32 %sub229 to i64
  %add231 = add nsw i64 %conv230, 127
  %shr232 = ashr i64 %add231, 8
  %conv233 = trunc i64 %shr232 to i32
  %161 = load i32, i32* %xri213, align 4, !tbaa !5
  %162 = load i32, i32* %xli206, align 4, !tbaa !5
  %sub234 = sub nsw i32 %161, %162
  %163 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %dev235 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %163, i32 0, i32 12
  %164 = load %struct.gx_device_s*, %struct.gx_device_s** %dev235, align 8, !tbaa !96
  %165 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %lop236 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %165, i32 0, i32 4
  %166 = load i32, i32* %lop236, align 4, !tbaa !91
  %call237 = call i32 %154(%struct.gx_device_color_s* %156, i32 %157, i32 %conv233, i32 %sub234, i32 1, %struct.gx_device_s* %164, i32 %166, %struct.gx_rop_source_s* null) #5
  store i32 %call237, i32* %code, align 4, !tbaa !5
  br label %do.body.238

do.body.238:                                      ; preds = %do.end.223
  br label %do.cond.239

do.cond.239:                                      ; preds = %do.body.238
  br label %do.end.240

do.end.240:                                       ; preds = %do.cond.239
  %167 = load i32, i32* %code, align 4, !tbaa !5
  %cmp241 = icmp slt i32 %167, 0
  br i1 %cmp241, label %if.then.243, label %if.end.244

if.then.243:                                      ; preds = %do.end.240
  %168 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %168, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.245

if.end.244:                                       ; preds = %do.end.240
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.245

cleanup.245:                                      ; preds = %if.end.244, %if.then.243
  %169 = bitcast i32* %xri213 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %169) #1
  %170 = bitcast i32* %xli206 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %170) #1
  %cleanup.dest.247 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.247, label %cleanup.259 [
    i32 0, label %cleanup.cont.248
  ]

cleanup.cont.248:                                 ; preds = %cleanup.245
  br label %if.end.249

if.end.249:                                       ; preds = %cleanup.cont.248, %if.then.176
  %171 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %172 = load i32, i32* %y.addr, align 4, !tbaa !5
  %173 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above250 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %173, i32 0, i32 11
  %174 = load i32, i32* %adjust_above250, align 4, !tbaa !87
  %add251 = add nsw i32 %172, %174
  %175 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %176 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !1
  %adjust_above252 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %176, i32 0, i32 11
  %177 = load i32, i32* %adjust_above252, align 4, !tbaa !87
  %add253 = add nsw i32 %175, %177
  %call254 = call i32 @loop_fill_trap_np(%struct.line_list_s* %171, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %add251, i32 %add253) #5
  store i32 %call254, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.259

if.end.255:                                       ; preds = %land.lhs.true.169, %if.else.162
  br label %if.end.256

if.end.256:                                       ; preds = %if.end.255
  br label %if.end.257

if.end.257:                                       ; preds = %if.end.256
  %178 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %179 = load %struct.active_line_s*, %struct.active_line_s** %flp.addr, align 8, !tbaa !1
  %180 = load %struct.active_line_s*, %struct.active_line_s** %alp.addr, align 8, !tbaa !1
  %181 = load i32, i32* %y.addr, align 4, !tbaa !5
  %182 = load i32, i32* %y1.addr, align 4, !tbaa !5
  %call258 = call i32 @fill_slant_adjust(%struct.line_list_s* %178, %struct.active_line_s* %179, %struct.active_line_s* %180, i32 %181, i32 %182) #5
  store i32 %call258, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.259

cleanup.259:                                      ; preds = %if.end.257, %if.end.249, %cleanup.245, %if.end.156, %cleanup, %if.then
  %183 = bitcast i32* %y_span_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %183) #1
  %184 = bitcast i32* %y_span_delta to i8*
  call void @llvm.lifetime.end(i64 4, i8* %184) #1
  %185 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %185) #1
  %186 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %186) #1
  %187 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %187) #1
  %188 = bitcast %struct.fill_options_s** %fo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %188) #1
  %189 = load i32, i32* %retval
  ret i32 %189
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_scan_lines_fd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %yll = alloca %struct.active_line_s*, align 8
  %y_limit = alloca i32, align 4
  %y_frac_min = alloca i32, align 4
  %y_frac_max = alloca i32, align 4
  %y0 = alloca i32, align 4
  %y_bot = alloca i32, align 4
  %y_top = alloca i32, align 4
  %y = alloca i32, align 4
  %rlist = alloca %struct.coord_range_list_s, align 8
  %rlocal = alloca [20 x %struct.coord_range_s], align 16
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %alp = alloca %struct.active_line_s*, align 8
  %nlp = alloca %struct.active_line_s*, align 8
  %x = alloca i32, align 4
  %new_band = alloca i32, align 4
  %yy = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %nx = alloca i32, align 4
  %ilp = alloca %struct.active_line_s*, align 8
  %pcr = alloca %struct.coord_range_s*, align 8
  %x0 = alloca i32, align 4
  %x1 = alloca i32, align 4
  %y_min = alloca i32, align 4
  %inside = alloca i32, align 4
  %x0276 = alloca i32, align 4
  %x0327 = alloca i32, align 4
  %x1342 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %6, i32 0, i32 5
  %7 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %7, %struct.active_line_s** %yll, align 8, !tbaa !1
  %8 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %9 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %9, i32* %y_limit, align 4, !tbaa !5
  %10 = bitcast i32* %y_frac_min to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %11 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %conv = sext i32 %11 to i64
  %cmp = icmp eq i64 %conv, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %adjust_above3 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %12 = load i32, i32* %adjust_above3, align 4, !tbaa !87
  %conv4 = sext i32 %12 to i64
  %sub = sub nsw i64 129, %conv4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 128, %cond.true ], [ %sub, %cond.false ]
  %conv5 = trunc i64 %cond to i32
  store i32 %conv5, i32* %y_frac_min, align 4, !tbaa !5
  %13 = bitcast i32* %y_frac_max to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %14 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %conv6 = sext i32 %14 to i64
  %add = add nsw i64 128, %conv6
  %conv7 = trunc i64 %add to i32
  store i32 %conv7, i32* %y_frac_max, align 4, !tbaa !5
  %15 = bitcast i32* %y0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  store i32 -8388608, i32* %y0, align 4, !tbaa !5
  %16 = bitcast i32* %y_bot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  store i32 -2147483648, i32* %y_bot, align 4, !tbaa !5
  %17 = bitcast i32* %y_top to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  store i32 -2147483648, i32* %y_top, align 4, !tbaa !5
  %18 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #1
  store i32 -2147483648, i32* %y, align 4, !tbaa !5
  %19 = bitcast %struct.coord_range_list_s* %rlist to i8*
  call void @llvm.lifetime.start(i64 120, i8* %19) #1
  %20 = bitcast [20 x %struct.coord_range_s]* %rlocal to i8*
  call void @llvm.lifetime.start(i64 640, i8* %20) #1
  %21 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #1
  store i32 0, i32* %code, align 4, !tbaa !5
  %22 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp8 = icmp eq %struct.active_line_s* %22, null
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.393

if.end:                                           ; preds = %cond.end
  %arraydecay = getelementptr inbounds [20 x %struct.coord_range_s], [20 x %struct.coord_range_s]* %rlocal, i32 0, i32 0
  %23 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %23, i32 0, i32 0
  %24 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !117
  call void @range_list_init(%struct.coord_range_list_s* %rlist, %struct.coord_range_s* %arraydecay, i32 20, %struct.gs_memory_s* %24) #5
  %25 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %25, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %26 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head10 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %26, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head10, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  br label %do.body

do.body:                                          ; preds = %do.cond.389, %if.end
  %27 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  %28 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %28) #1
  %29 = bitcast i32* %x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #1
  %30 = bitcast i32* %new_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #1
  br label %do.body.11

do.body.11:                                       ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %do.body.11
  br label %do.end

do.end:                                           ; preds = %do.cond
  %31 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %call = call i32 @move_al_by_y(%struct.line_list_s* %31, i32 %32) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %33 = load i32, i32* %code, align 4, !tbaa !5
  %cmp12 = icmp slt i32 %33, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %do.end
  %34 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.383

if.end.15:                                        ; preds = %do.end
  %35 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head16 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %35, i32 0, i32 7
  %next17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head16, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next17, align 8, !tbaa !201
  %cmp18 = icmp eq %struct.active_line_s* %36, null
  br i1 %cmp18, label %if.then.20, label %if.else

if.then.20:                                       ; preds = %if.end.15
  %37 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp21 = icmp eq %struct.active_line_s* %37, null
  br i1 %cmp21, label %cond.true.23, label %cond.false.24

cond.true.23:                                     ; preds = %if.then.20
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 18
  %39 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end.26

cond.false.24:                                    ; preds = %if.then.20
  %40 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %40, i32 0, i32 0
  %y25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %41 = load i32, i32* %y25, align 4, !tbaa !187
  br label %cond.end.26

cond.end.26:                                      ; preds = %cond.false.24, %cond.true.23
  %cond27 = phi i32 [ %39, %cond.true.23 ], [ %41, %cond.false.24 ]
  store i32 %cond27, i32* %y, align 4, !tbaa !5
  br label %if.end.77

if.else:                                          ; preds = %if.end.15
  %42 = load i32, i32* %y_bot, align 4, !tbaa !5
  %conv28 = sext i32 %42 to i64
  %add29 = add nsw i64 %conv28, 256
  %conv30 = trunc i64 %add29 to i32
  store i32 %conv30, i32* %y, align 4, !tbaa !5
  %43 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp31 = icmp ne %struct.active_line_s* %43, null
  br i1 %cmp31, label %if.then.33, label %if.end.44

if.then.33:                                       ; preds = %if.else
  %44 = load i32, i32* %y, align 4, !tbaa !5
  %45 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start34 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 0
  %y35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start34, i32 0, i32 1
  %46 = load i32, i32* %y35, align 4, !tbaa !187
  %cmp36 = icmp slt i32 %44, %46
  br i1 %cmp36, label %cond.true.38, label %cond.false.39

cond.true.38:                                     ; preds = %if.then.33
  %47 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.42

cond.false.39:                                    ; preds = %if.then.33
  %48 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %48, i32 0, i32 0
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 1
  %49 = load i32, i32* %y41, align 4, !tbaa !187
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.false.39, %cond.true.38
  %cond43 = phi i32 [ %47, %cond.true.38 ], [ %49, %cond.false.39 ]
  store i32 %cond43, i32* %y, align 4, !tbaa !5
  br label %if.end.44

if.end.44:                                        ; preds = %cond.end.42, %if.else
  %50 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head45 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %50, i32 0, i32 7
  %next46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head45, i32 0, i32 15
  %51 = load %struct.active_line_s*, %struct.active_line_s** %next46, align 8, !tbaa !201
  store %struct.active_line_s* %51, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.44
  %52 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp47 = icmp ne %struct.active_line_s* %52, null
  br i1 %cmp47, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %53 = bitcast i32* %yy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %53) #1
  %54 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 11
  %y3 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi, i32 0, i32 3
  %55 = load i32, i32* %y3, align 4, !tbaa !213
  %56 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi49 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 11
  %y050 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi49, i32 0, i32 1
  %57 = load i32, i32* %y050, align 4, !tbaa !214
  %cmp51 = icmp sgt i32 %55, %57
  br i1 %cmp51, label %cond.true.53, label %cond.false.56

cond.true.53:                                     ; preds = %for.body
  %58 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi54 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 11
  %y355 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi54, i32 0, i32 3
  %59 = load i32, i32* %y355, align 4, !tbaa !213
  br label %cond.end.59

cond.false.56:                                    ; preds = %for.body
  %60 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi57 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %60, i32 0, i32 11
  %y058 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi57, i32 0, i32 1
  %61 = load i32, i32* %y058, align 4, !tbaa !214
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.56, %cond.true.53
  %cond60 = phi i32 [ %59, %cond.true.53 ], [ %61, %cond.false.56 ]
  store i32 %cond60, i32* %yy, align 4, !tbaa !5
  %62 = load i32, i32* %yy, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 1
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %64 = load i32, i32* %y61, align 4, !tbaa !195
  %cmp62 = icmp sgt i32 %62, %64
  br i1 %cmp62, label %cond.true.64, label %cond.false.65

cond.true.64:                                     ; preds = %cond.end.59
  %65 = load i32, i32* %yy, align 4, !tbaa !5
  br label %cond.end.68

cond.false.65:                                    ; preds = %cond.end.59
  %66 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end66 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %66, i32 0, i32 1
  %y67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end66, i32 0, i32 1
  %67 = load i32, i32* %y67, align 4, !tbaa !195
  br label %cond.end.68

cond.end.68:                                      ; preds = %cond.false.65, %cond.true.64
  %cond69 = phi i32 [ %65, %cond.true.64 ], [ %67, %cond.false.65 ]
  store i32 %cond69, i32* %yy, align 4, !tbaa !5
  %68 = load i32, i32* %y, align 4, !tbaa !5
  %69 = load i32, i32* %yy, align 4, !tbaa !5
  %cmp70 = icmp slt i32 %68, %69
  br i1 %cmp70, label %cond.true.72, label %cond.false.73

cond.true.72:                                     ; preds = %cond.end.68
  %70 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.74

cond.false.73:                                    ; preds = %cond.end.68
  %71 = load i32, i32* %yy, align 4, !tbaa !5
  br label %cond.end.74

cond.end.74:                                      ; preds = %cond.false.73, %cond.true.72
  %cond75 = phi i32 [ %70, %cond.true.72 ], [ %71, %cond.false.73 ]
  store i32 %cond75, i32* %y, align 4, !tbaa !5
  %72 = bitcast i32* %yy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #1
  br label %for.inc

for.inc:                                          ; preds = %cond.end.74
  %73 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next76 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %73, i32 0, i32 15
  %74 = load %struct.active_line_s*, %struct.active_line_s** %next76, align 8, !tbaa !189
  store %struct.active_line_s* %74, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.77

if.end.77:                                        ; preds = %for.end, %cond.end.26
  br label %while.cond

while.cond:                                       ; preds = %if.end.89, %if.end.77
  %75 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp78 = icmp ne %struct.active_line_s* %75, null
  br i1 %cmp78, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %76 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start80 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %76, i32 0, i32 0
  %y81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start80, i32 0, i32 1
  %77 = load i32, i32* %y81, align 4, !tbaa !187
  %78 = load i32, i32* %y, align 4, !tbaa !5
  %cmp82 = icmp eq i32 %77, %78
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %79 = phi i1 [ false, %while.cond ], [ %cmp82, %land.rhs ]
  br i1 %79, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %80 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %80) #1
  %81 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next84 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %81, i32 0, i32 15
  %82 = load %struct.active_line_s*, %struct.active_line_s** %next84, align 8, !tbaa !189
  store %struct.active_line_s* %82, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %83 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %83, i32 0, i32 8
  %84 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp85 = icmp eq i32 %84, 0
  br i1 %cmp85, label %if.then.87, label %if.else.88

if.then.87:                                       ; preds = %while.body
  %85 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %86 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_h_new(%struct.active_line_s* %85, %struct.line_list_s* %86) #5
  br label %if.end.89

if.else.88:                                       ; preds = %while.body
  %87 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %88 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %87, %struct.line_list_s* %88) #5
  br label %if.end.89

if.end.89:                                        ; preds = %if.else.88, %if.then.87
  %89 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %89, %struct.active_line_s** %yll, align 8, !tbaa !1
  %90 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %90) #1
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 -2147483648, i32* %x, align 4, !tbaa !5
  %91 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head90 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %91, i32 0, i32 7
  %next91 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head90, i32 0, i32 15
  %92 = load %struct.active_line_s*, %struct.active_line_s** %next91, align 8, !tbaa !201
  store %struct.active_line_s* %92, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.92

for.cond.92:                                      ; preds = %for.inc.211, %while.end
  %93 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp93 = icmp ne %struct.active_line_s* %93, null
  br i1 %cmp93, label %for.body.95, label %for.end.212

for.body.95:                                      ; preds = %for.cond.92
  %94 = bitcast i32* %nx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %94) #1
  %95 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next96 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %95, i32 0, i32 15
  %96 = load %struct.active_line_s*, %struct.active_line_s** %next96, align 8, !tbaa !189
  store %struct.active_line_s* %96, %struct.active_line_s** %nlp, align 8, !tbaa !1
  br label %e

e:                                                ; preds = %if.end.131, %for.body.95
  %97 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end97 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %97, i32 0, i32 1
  %y98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end97, i32 0, i32 1
  %98 = load i32, i32* %y98, align 4, !tbaa !195
  %99 = load i32, i32* %y, align 4, !tbaa !5
  %cmp99 = icmp sle i32 %98, %99
  br i1 %cmp99, label %if.then.107, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %e
  %100 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start101 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %100, i32 0, i32 0
  %y102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start101, i32 0, i32 1
  %101 = load i32, i32* %y102, align 4, !tbaa !187
  %102 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end103 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %102, i32 0, i32 1
  %y104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end103, i32 0, i32 1
  %103 = load i32, i32* %y104, align 4, !tbaa !195
  %cmp105 = icmp eq i32 %101, %103
  br i1 %cmp105, label %if.then.107, label %if.end.132

if.then.107:                                      ; preds = %lor.lhs.false, %e
  %104 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %105 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call108 = call i32 @end_x_line(%struct.active_line_s* %104, %struct.line_list_s* %105, i32 1) #5
  %tobool = icmp ne i32 %call108, 0
  br i1 %tobool, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %if.then.107
  store i32 13, i32* %cleanup.dest.slot
  br label %cleanup

if.end.110:                                       ; preds = %if.then.107
  %106 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %106, i32 0, i32 12
  %107 = load i32, i32* %more_flattened, align 4, !tbaa !179
  %tobool111 = icmp ne i32 %107, 0
  br i1 %tobool111, label %if.then.112, label %if.end.131

if.then.112:                                      ; preds = %if.end.110
  %108 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end113 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %108, i32 0, i32 1
  %y114 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end113, i32 0, i32 1
  %109 = load i32, i32* %y114, align 4, !tbaa !195
  %110 = load i32, i32* %y, align 4, !tbaa !5
  %cmp115 = icmp sle i32 %109, %110
  br i1 %cmp115, label %if.then.124, label %lor.lhs.false.117

lor.lhs.false.117:                                ; preds = %if.then.112
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start118 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 0
  %y119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start118, i32 0, i32 1
  %112 = load i32, i32* %y119, align 4, !tbaa !187
  %113 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end120 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 1
  %y121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end120, i32 0, i32 1
  %114 = load i32, i32* %y121, align 4, !tbaa !195
  %cmp122 = icmp eq i32 %112, %114
  br i1 %cmp122, label %if.then.124, label %if.end.130

if.then.124:                                      ; preds = %lor.lhs.false.117, %if.then.112
  %115 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %call125 = call i32 @step_al(%struct.active_line_s* %115, i32 1) #5
  store i32 %call125, i32* %code, align 4, !tbaa !5
  %116 = load i32, i32* %code, align 4, !tbaa !5
  %cmp126 = icmp slt i32 %116, 0
  br i1 %cmp126, label %if.then.128, label %if.end.129

if.then.128:                                      ; preds = %if.then.124
  %117 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %117, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.129:                                       ; preds = %if.then.124
  br label %if.end.130

if.end.130:                                       ; preds = %if.end.129, %lor.lhs.false.117
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %if.end.110
  br label %e

if.end.132:                                       ; preds = %lor.lhs.false
  %118 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start133 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %118, i32 0, i32 0
  %y134 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start133, i32 0, i32 1
  %119 = load i32, i32* %y134, align 4, !tbaa !187
  %120 = load i32, i32* %y, align 4, !tbaa !5
  %cmp135 = icmp sge i32 %119, %120
  br i1 %cmp135, label %cond.true.137, label %cond.false.140

cond.true.137:                                    ; preds = %if.end.132
  %121 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start138 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %121, i32 0, i32 0
  %x139 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start138, i32 0, i32 0
  %122 = load i32, i32* %x139, align 4, !tbaa !193
  br label %cond.end.175

cond.false.140:                                   ; preds = %if.end.132
  %123 = load i32, i32* %y, align 4, !tbaa !5
  %124 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end141 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %124, i32 0, i32 1
  %y142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end141, i32 0, i32 1
  %125 = load i32, i32* %y142, align 4, !tbaa !195
  %cmp143 = icmp eq i32 %123, %125
  br i1 %cmp143, label %cond.true.145, label %cond.false.148

cond.true.145:                                    ; preds = %cond.false.140
  %126 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end146 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %126, i32 0, i32 1
  %x147 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end146, i32 0, i32 0
  %127 = load i32, i32* %x147, align 4, !tbaa !194
  br label %cond.end.173

cond.false.148:                                   ; preds = %cond.false.140
  %128 = load i32, i32* %y, align 4, !tbaa !5
  %129 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %y_fast_max = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %129, i32 0, i32 3
  %130 = load i32, i32* %y_fast_max, align 4, !tbaa !199
  %cmp149 = icmp sle i32 %128, %130
  br i1 %cmp149, label %cond.true.151, label %cond.false.159

cond.true.151:                                    ; preds = %cond.false.148
  %131 = load i32, i32* %y, align 4, !tbaa !5
  %132 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start152 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %132, i32 0, i32 0
  %y153 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start152, i32 0, i32 1
  %133 = load i32, i32* %y153, align 4, !tbaa !187
  %sub154 = sub nsw i32 %131, %133
  %134 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %134, i32 0, i32 2
  %x155 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff, i32 0, i32 0
  %135 = load i32, i32* %x155, align 4, !tbaa !196
  %mul = mul nsw i32 %sub154, %135
  %136 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %num_adjust = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %136, i32 0, i32 4
  %137 = load i32, i32* %num_adjust, align 4, !tbaa !198
  %add156 = add nsw i32 %mul, %137
  %138 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff157 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %138, i32 0, i32 2
  %y158 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff157, i32 0, i32 1
  %139 = load i32, i32* %y158, align 4, !tbaa !197
  %div = sdiv i32 %add156, %139
  br label %cond.end.168

cond.false.159:                                   ; preds = %cond.false.148
  %140 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff160 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %140, i32 0, i32 2
  %x161 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff160, i32 0, i32 0
  %141 = load i32, i32* %x161, align 4, !tbaa !196
  %142 = load i32, i32* %y, align 4, !tbaa !5
  %143 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start162 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %143, i32 0, i32 0
  %y163 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start162, i32 0, i32 1
  %144 = load i32, i32* %y163, align 4, !tbaa !187
  %sub164 = sub nsw i32 %142, %144
  %145 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff165 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %145, i32 0, i32 2
  %y166 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff165, i32 0, i32 1
  %146 = load i32, i32* %y166, align 4, !tbaa !197
  %call167 = call i32 @fixed_mult_quo(i32 %141, i32 %sub164, i32 %146) #5
  br label %cond.end.168

cond.end.168:                                     ; preds = %cond.false.159, %cond.true.151
  %cond169 = phi i32 [ %div, %cond.true.151 ], [ %call167, %cond.false.159 ]
  %147 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start170 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %147, i32 0, i32 0
  %x171 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start170, i32 0, i32 0
  %148 = load i32, i32* %x171, align 4, !tbaa !193
  %add172 = add nsw i32 %cond169, %148
  br label %cond.end.173

cond.end.173:                                     ; preds = %cond.end.168, %cond.true.145
  %cond174 = phi i32 [ %127, %cond.true.145 ], [ %add172, %cond.end.168 ]
  br label %cond.end.175

cond.end.175:                                     ; preds = %cond.end.173, %cond.true.137
  %cond176 = phi i32 [ %122, %cond.true.137 ], [ %cond174, %cond.end.173 ]
  %149 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current177 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %149, i32 0, i32 5
  store i32 %cond176, i32* %x_current177, align 4, !tbaa !204
  store i32 %cond176, i32* %nx, align 4, !tbaa !5
  %150 = load i32, i32* %nx, align 4, !tbaa !5
  %151 = load i32, i32* %x, align 4, !tbaa !5
  %cmp178 = icmp slt i32 %150, %151
  br i1 %cmp178, label %if.then.180, label %if.end.210

if.then.180:                                      ; preds = %cond.end.175
  %152 = bitcast %struct.active_line_s** %ilp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %152) #1
  %153 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %153, %struct.active_line_s** %ilp, align 8, !tbaa !1
  br label %while.cond.181

while.cond.181:                                   ; preds = %do.end.188, %if.then.180
  %154 = load i32, i32* %nx, align 4, !tbaa !5
  %155 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %155, i32 0, i32 14
  %156 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !188
  store %struct.active_line_s* %156, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %x_current182 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %156, i32 0, i32 5
  %157 = load i32, i32* %x_current182, align 4, !tbaa !204
  %cmp183 = icmp slt i32 %154, %157
  br i1 %cmp183, label %while.body.185, label %while.end.189

while.body.185:                                   ; preds = %while.cond.181
  br label %do.body.186

do.body.186:                                      ; preds = %while.body.185
  br label %do.cond.187

do.cond.187:                                      ; preds = %do.body.186
  br label %do.end.188

do.end.188:                                       ; preds = %do.cond.187
  br label %while.cond.181

while.end.189:                                    ; preds = %while.cond.181
  %158 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next190 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %158, i32 0, i32 15
  %159 = load %struct.active_line_s*, %struct.active_line_s** %next190, align 8, !tbaa !189
  %160 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev191 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %160, i32 0, i32 14
  %161 = load %struct.active_line_s*, %struct.active_line_s** %prev191, align 8, !tbaa !188
  %next192 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %161, i32 0, i32 15
  store %struct.active_line_s* %159, %struct.active_line_s** %next192, align 8, !tbaa !189
  %162 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next193 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %162, i32 0, i32 15
  %163 = load %struct.active_line_s*, %struct.active_line_s** %next193, align 8, !tbaa !189
  %tobool194 = icmp ne %struct.active_line_s* %163, null
  br i1 %tobool194, label %if.then.195, label %if.end.199

if.then.195:                                      ; preds = %while.end.189
  %164 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev196 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %164, i32 0, i32 14
  %165 = load %struct.active_line_s*, %struct.active_line_s** %prev196, align 8, !tbaa !188
  %166 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next197 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %166, i32 0, i32 15
  %167 = load %struct.active_line_s*, %struct.active_line_s** %next197, align 8, !tbaa !189
  %prev198 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %167, i32 0, i32 14
  store %struct.active_line_s* %165, %struct.active_line_s** %prev198, align 8, !tbaa !188
  br label %if.end.199

if.end.199:                                       ; preds = %if.then.195, %while.end.189
  %168 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next200 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %168, i32 0, i32 15
  %169 = load %struct.active_line_s*, %struct.active_line_s** %next200, align 8, !tbaa !189
  %tobool201 = icmp ne %struct.active_line_s* %169, null
  br i1 %tobool201, label %if.then.202, label %if.end.205

if.then.202:                                      ; preds = %if.end.199
  %170 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %171 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next203 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %171, i32 0, i32 15
  %172 = load %struct.active_line_s*, %struct.active_line_s** %next203, align 8, !tbaa !189
  %prev204 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %172, i32 0, i32 14
  store %struct.active_line_s* %170, %struct.active_line_s** %prev204, align 8, !tbaa !188
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.202, %if.end.199
  %173 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next206 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 15
  %174 = load %struct.active_line_s*, %struct.active_line_s** %next206, align 8, !tbaa !189
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next207 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 15
  store %struct.active_line_s* %174, %struct.active_line_s** %next207, align 8, !tbaa !189
  %176 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %177 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next208 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %177, i32 0, i32 15
  store %struct.active_line_s* %176, %struct.active_line_s** %next208, align 8, !tbaa !189
  %178 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %179 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev209 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %179, i32 0, i32 14
  store %struct.active_line_s* %178, %struct.active_line_s** %prev209, align 8, !tbaa !188
  store i32 13, i32* %cleanup.dest.slot
  %180 = bitcast %struct.active_line_s** %ilp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %180) #1
  br label %cleanup

if.end.210:                                       ; preds = %cond.end.175
  %181 = load i32, i32* %nx, align 4, !tbaa !5
  store i32 %181, i32* %x, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.210, %if.end.205, %if.then.128, %if.then.109
  %182 = bitcast i32* %nx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %182) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.383 [
    i32 0, label %cleanup.cont
    i32 13, label %for.inc.211
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc.211

for.inc.211:                                      ; preds = %cleanup.cont, %cleanup
  %183 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  store %struct.active_line_s* %183, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.92

for.end.212:                                      ; preds = %for.cond.92
  %184 = load i32, i32* %y, align 4, !tbaa !5
  %185 = load i32, i32* %y_top, align 4, !tbaa !5
  %cmp213 = icmp sgt i32 %184, %185
  br i1 %cmp213, label %if.then.218, label %lor.lhs.false.215

lor.lhs.false.215:                                ; preds = %for.end.212
  %186 = load i32, i32* %y, align 4, !tbaa !5
  %187 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp216 = icmp sge i32 %186, %187
  br i1 %cmp216, label %if.then.218, label %if.else.260

if.then.218:                                      ; preds = %lor.lhs.false.215, %for.end.212
  %188 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %188) #1
  %first = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %rlist, i32 0, i32 5
  %next219 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first, i32 0, i32 3
  %189 = load %struct.coord_range_s*, %struct.coord_range_s** %next219, align 8, !tbaa !215
  store %struct.coord_range_s* %189, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  br label %for.cond.220

for.cond.220:                                     ; preds = %for.inc.243, %if.then.218
  %190 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %last = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %rlist, i32 0, i32 6
  %cmp221 = icmp ne %struct.coord_range_s* %190, %last
  br i1 %cmp221, label %for.body.223, label %for.end.245

for.body.223:                                     ; preds = %for.cond.220
  %191 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %191) #1
  %192 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmin = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %192, i32 0, i32 0
  %193 = load i32, i32* %rmin, align 4, !tbaa !219
  store i32 %193, i32* %x0, align 4, !tbaa !5
  %194 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %194) #1
  %195 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmax = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %195, i32 0, i32 1
  %196 = load i32, i32* %rmax, align 4, !tbaa !220
  store i32 %196, i32* %x1, align 4, !tbaa !5
  br label %do.body.224

do.body.224:                                      ; preds = %for.body.223
  br label %do.cond.225

do.cond.225:                                      ; preds = %do.body.224
  br label %do.end.226

do.end.226:                                       ; preds = %do.cond.225
  br label %do.body.227

do.body.227:                                      ; preds = %do.end.226
  br label %do.cond.228

do.cond.228:                                      ; preds = %do.body.227
  br label %do.end.229

do.end.229:                                       ; preds = %do.cond.228
  %fill_rect = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 16
  %197 = load i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)** %fill_rect, align 8, !tbaa !102
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %198 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %199 = load i32, i32* %x0, align 4, !tbaa !5
  %200 = load i32, i32* %y0, align 4, !tbaa !5
  %201 = load i32, i32* %x1, align 4, !tbaa !5
  %202 = load i32, i32* %x0, align 4, !tbaa !5
  %sub230 = sub nsw i32 %201, %202
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %203 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %203, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %204 = load i64, i64* %pure, align 8, !tbaa !203
  %call231 = call i32 %197(%struct.gx_device_s* %198, i32 %199, i32 %200, i32 %sub230, i32 1, i64 %204) #5
  store i32 %call231, i32* %code, align 4, !tbaa !5
  br label %do.body.232

do.body.232:                                      ; preds = %do.end.229
  br label %do.cond.233

do.cond.233:                                      ; preds = %do.body.232
  br label %do.end.234

do.end.234:                                       ; preds = %do.cond.233
  %205 = load i32, i32* %code, align 4, !tbaa !5
  %cmp235 = icmp slt i32 %205, 0
  br i1 %cmp235, label %if.then.237, label %if.end.238

if.then.237:                                      ; preds = %do.end.234
  store i32 28, i32* %cleanup.dest.slot
  br label %cleanup.239

if.end.238:                                       ; preds = %do.end.234
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.239

cleanup.239:                                      ; preds = %if.then.237, %if.end.238
  %206 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %206) #1
  %207 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %207) #1
  %cleanup.dest.241 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.241, label %cleanup.257 [
    i32 0, label %cleanup.cont.242
  ]

cleanup.cont.242:                                 ; preds = %cleanup.239
  br label %for.inc.243

for.inc.243:                                      ; preds = %cleanup.cont.242
  %208 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next244 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %208, i32 0, i32 3
  %209 = load %struct.coord_range_s*, %struct.coord_range_s** %next244, align 8, !tbaa !221
  store %struct.coord_range_s* %209, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  br label %for.cond.220

for.end.245:                                      ; preds = %for.cond.220
  call void @range_list_reset(%struct.coord_range_list_s* %rlist) #5
  %210 = load i32, i32* %y, align 4, !tbaa !5
  %211 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp246 = icmp sge i32 %210, %211
  br i1 %cmp246, label %if.then.248, label %if.end.249

if.then.248:                                      ; preds = %for.end.245
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.257

if.end.249:                                       ; preds = %for.end.245
  %212 = load i32, i32* %y, align 4, !tbaa !5
  %shr = ashr i32 %212, 8
  store i32 %shr, i32* %y0, align 4, !tbaa !5
  %213 = load i32, i32* %y, align 4, !tbaa !5
  %and = and i32 %213, 255
  %214 = load i32, i32* %y_frac_min, align 4, !tbaa !5
  %cmp250 = icmp slt i32 %and, %214
  br i1 %cmp250, label %if.then.252, label %if.end.253

if.then.252:                                      ; preds = %if.end.249
  %215 = load i32, i32* %y0, align 4, !tbaa !5
  %dec = add nsw i32 %215, -1
  store i32 %dec, i32* %y0, align 4, !tbaa !5
  br label %if.end.253

if.end.253:                                       ; preds = %if.then.252, %if.end.249
  %216 = load i32, i32* %y0, align 4, !tbaa !5
  %shl = shl i32 %216, 8
  %217 = load i32, i32* %y_frac_min, align 4, !tbaa !5
  %add254 = add nsw i32 %shl, %217
  store i32 %add254, i32* %y_bot, align 4, !tbaa !5
  %218 = load i32, i32* %y0, align 4, !tbaa !5
  %shl255 = shl i32 %218, 8
  %219 = load i32, i32* %y_frac_max, align 4, !tbaa !5
  %add256 = add nsw i32 %shl255, %219
  store i32 %add256, i32* %y_top, align 4, !tbaa !5
  store i32 1, i32* %new_band, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.257

cleanup.257:                                      ; preds = %if.end.253, %if.then.248, %cleanup.239
  %220 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %220) #1
  %cleanup.dest.258 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.258, label %cleanup.383 [
    i32 0, label %cleanup.cont.259
  ]

cleanup.cont.259:                                 ; preds = %cleanup.257
  br label %if.end.261

if.else.260:                                      ; preds = %lor.lhs.false.215
  store i32 0, i32* %new_band, align 4, !tbaa !5
  br label %if.end.261

if.end.261:                                       ; preds = %if.else.260, %cleanup.cont.259
  %221 = load i32, i32* %y, align 4, !tbaa !5
  %222 = load i32, i32* %y_top, align 4, !tbaa !5
  %cmp262 = icmp sle i32 %221, %222
  br i1 %cmp262, label %if.then.264, label %if.end.381

if.then.264:                                      ; preds = %if.end.261
  %223 = bitcast i32* %y_min to i8*
  call void @llvm.lifetime.start(i64 4, i8* %223) #1
  %224 = load i32, i32* %new_band, align 4, !tbaa !5
  %tobool265 = icmp ne i32 %224, 0
  br i1 %tobool265, label %if.then.266, label %if.else.321

if.then.266:                                      ; preds = %if.then.264
  %225 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %225) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  br label %do.body.267

do.body.267:                                      ; preds = %if.then.266
  br label %do.cond.268

do.cond.268:                                      ; preds = %do.body.267
  br label %do.end.269

do.end.269:                                       ; preds = %do.cond.268
  %226 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head270 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %226, i32 0, i32 7
  %next271 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head270, i32 0, i32 15
  %227 = load %struct.active_line_s*, %struct.active_line_s** %next271, align 8, !tbaa !201
  store %struct.active_line_s* %227, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.272

for.cond.272:                                     ; preds = %for.inc.315, %do.end.269
  %228 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp273 = icmp ne %struct.active_line_s* %228, null
  br i1 %cmp273, label %for.body.275, label %for.end.317

for.body.275:                                     ; preds = %for.cond.272
  %229 = bitcast i32* %x0276 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %229) #1
  %230 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current277 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %230, i32 0, i32 5
  %231 = load i32, i32* %x_current277, align 4, !tbaa !204
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %232 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub278 = sub nsw i32 %231, %232
  %conv279 = sext i32 %sub278 to i64
  %add280 = add nsw i64 %conv279, 127
  %shr281 = ashr i64 %add280, 8
  %conv282 = trunc i64 %shr281 to i32
  store i32 %conv282, i32* %x0276, align 4, !tbaa !5
  br label %for.cond.283

for.cond.283:                                     ; preds = %if.end.301, %for.body.275
  br label %do.body.284

do.body.284:                                      ; preds = %for.cond.283
  br label %do.cond.285

do.cond.285:                                      ; preds = %do.body.284
  br label %do.end.286

do.end.286:                                       ; preds = %do.cond.285
  br label %do.body.287

do.body.287:                                      ; preds = %do.end.286
  br label %do.cond.288

do.cond.288:                                      ; preds = %do.body.287
  br label %do.end.289

do.end.289:                                       ; preds = %do.cond.288
  %233 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction290 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %233, i32 0, i32 8
  %234 = load i32, i32* %direction290, align 4, !tbaa !178
  %235 = load i32, i32* %inside, align 4, !tbaa !5
  %add291 = add nsw i32 %235, %234
  store i32 %add291, i32* %inside, align 4, !tbaa !5
  %236 = load i32, i32* %inside, align 4, !tbaa !5
  %rule = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %237 = load i32, i32* %rule, align 4, !tbaa !98
  %and292 = and i32 %236, %237
  %cmp293 = icmp ne i32 %and292, 0
  br i1 %cmp293, label %if.end.296, label %if.then.295

if.then.295:                                      ; preds = %do.end.289
  br label %for.end.302

if.end.296:                                       ; preds = %do.end.289
  %238 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next297 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %238, i32 0, i32 15
  %239 = load %struct.active_line_s*, %struct.active_line_s** %next297, align 8, !tbaa !189
  store %struct.active_line_s* %239, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp298 = icmp eq %struct.active_line_s* %239, null
  br i1 %cmp298, label %if.then.300, label %if.end.301

if.then.300:                                      ; preds = %if.end.296
  store i32 40, i32* %cleanup.dest.slot
  br label %cleanup.312

if.end.301:                                       ; preds = %if.end.296
  br label %for.cond.283

for.end.302:                                      ; preds = %if.then.295
  %240 = load i32, i32* %x0276, align 4, !tbaa !5
  %241 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current303 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %241, i32 0, i32 5
  %242 = load i32, i32* %x_current303, align 4, !tbaa !204
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %243 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add304 = add nsw i32 %242, %243
  %add305 = add nsw i32 %add304, 128
  %shr306 = ashr i32 %add305, 8
  %call307 = call i32 @range_list_add(%struct.coord_range_list_s* %rlist, i32 %240, i32 %shr306) #5
  store i32 %call307, i32* %code, align 4, !tbaa !5
  %244 = load i32, i32* %code, align 4, !tbaa !5
  %cmp308 = icmp slt i32 %244, 0
  br i1 %cmp308, label %if.then.310, label %if.end.311

if.then.310:                                      ; preds = %for.end.302
  store i32 28, i32* %cleanup.dest.slot
  br label %cleanup.312

if.end.311:                                       ; preds = %for.end.302
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.312

cleanup.312:                                      ; preds = %if.then.310, %if.then.300, %if.end.311
  %245 = bitcast i32* %x0276 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %245) #1
  %cleanup.dest.313 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.313, label %cleanup.318 [
    i32 0, label %cleanup.cont.314
    i32 40, label %out
  ]

cleanup.cont.314:                                 ; preds = %cleanup.312
  br label %for.inc.315

for.inc.315:                                      ; preds = %cleanup.cont.314
  %246 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next316 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %246, i32 0, i32 15
  %247 = load %struct.active_line_s*, %struct.active_line_s** %next316, align 8, !tbaa !189
  store %struct.active_line_s* %247, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.272

for.end.317:                                      ; preds = %for.cond.272
  br label %out

out:                                              ; preds = %for.end.317, %cleanup.312
  store i32 -2147483648, i32* %y_min, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.318

cleanup.318:                                      ; preds = %out, %cleanup.312
  %248 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %248) #1
  %cleanup.dest.319 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.319, label %cleanup.378 [
    i32 0, label %cleanup.cont.320
  ]

cleanup.cont.320:                                 ; preds = %cleanup.318
  br label %if.end.322

if.else.321:                                      ; preds = %if.then.264
  %249 = load i32, i32* %y, align 4, !tbaa !5
  store i32 %249, i32* %y_min, align 4, !tbaa !5
  br label %if.end.322

if.end.322:                                       ; preds = %if.else.321, %cleanup.cont.320
  %250 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %250, i32 0, i32 8
  %251 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  store %struct.active_line_s* %251, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.323

for.cond.323:                                     ; preds = %for.inc.374, %if.end.322
  %252 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp324 = icmp ne %struct.active_line_s* %252, null
  br i1 %cmp324, label %for.body.326, label %for.end.376

for.body.326:                                     ; preds = %for.cond.323
  %253 = bitcast i32* %x0327 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %253) #1
  %254 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start328 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %254, i32 0, i32 0
  %x329 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start328, i32 0, i32 0
  %255 = load i32, i32* %x329, align 4, !tbaa !193
  %256 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end330 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %256, i32 0, i32 1
  %x331 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end330, i32 0, i32 0
  %257 = load i32, i32* %x331, align 4, !tbaa !194
  %cmp332 = icmp slt i32 %255, %257
  br i1 %cmp332, label %cond.true.334, label %cond.false.337

cond.true.334:                                    ; preds = %for.body.326
  %258 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start335 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %258, i32 0, i32 0
  %x336 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start335, i32 0, i32 0
  %259 = load i32, i32* %x336, align 4, !tbaa !193
  br label %cond.end.340

cond.false.337:                                   ; preds = %for.body.326
  %260 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end338 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %260, i32 0, i32 1
  %x339 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end338, i32 0, i32 0
  %261 = load i32, i32* %x339, align 4, !tbaa !194
  br label %cond.end.340

cond.end.340:                                     ; preds = %cond.false.337, %cond.true.334
  %cond341 = phi i32 [ %259, %cond.true.334 ], [ %261, %cond.false.337 ]
  store i32 %cond341, i32* %x0327, align 4, !tbaa !5
  %262 = bitcast i32* %x1342 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %262) #1
  %263 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start343 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %263, i32 0, i32 0
  %x344 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start343, i32 0, i32 0
  %264 = load i32, i32* %x344, align 4, !tbaa !193
  %265 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end345 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %265, i32 0, i32 1
  %x346 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end345, i32 0, i32 0
  %266 = load i32, i32* %x346, align 4, !tbaa !194
  %cmp347 = icmp sgt i32 %264, %266
  br i1 %cmp347, label %cond.true.349, label %cond.false.352

cond.true.349:                                    ; preds = %cond.end.340
  %267 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start350 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %267, i32 0, i32 0
  %x351 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start350, i32 0, i32 0
  %268 = load i32, i32* %x351, align 4, !tbaa !193
  br label %cond.end.355

cond.false.352:                                   ; preds = %cond.end.340
  %269 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end353 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %269, i32 0, i32 1
  %x354 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end353, i32 0, i32 0
  %270 = load i32, i32* %x354, align 4, !tbaa !194
  br label %cond.end.355

cond.end.355:                                     ; preds = %cond.false.352, %cond.true.349
  %cond356 = phi i32 [ %268, %cond.true.349 ], [ %270, %cond.false.352 ]
  store i32 %cond356, i32* %x1342, align 4, !tbaa !5
  %271 = load i32, i32* %x0327, align 4, !tbaa !5
  %adjust_left357 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %272 = load i32, i32* %adjust_left357, align 4, !tbaa !83
  %sub358 = sub nsw i32 %271, %272
  %add359 = add nsw i32 %sub358, 128
  %shr360 = ashr i32 %add359, 8
  %273 = load i32, i32* %x1342, align 4, !tbaa !5
  %adjust_right361 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %274 = load i32, i32* %adjust_right361, align 4, !tbaa !85
  %add362 = add nsw i32 %273, %274
  %add363 = add nsw i32 %add362, 128
  %shr364 = ashr i32 %add363, 8
  %call365 = call i32 @range_list_add(%struct.coord_range_list_s* %rlist, i32 %shr360, i32 %shr364) #5
  store i32 %call365, i32* %code, align 4, !tbaa !5
  %275 = load i32, i32* %code, align 4, !tbaa !5
  %cmp366 = icmp slt i32 %275, 0
  br i1 %cmp366, label %if.then.368, label %if.end.369

if.then.368:                                      ; preds = %cond.end.355
  store i32 28, i32* %cleanup.dest.slot
  br label %cleanup.370

if.end.369:                                       ; preds = %cond.end.355
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.370

cleanup.370:                                      ; preds = %if.then.368, %if.end.369
  %276 = bitcast i32* %x1342 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %276) #1
  %277 = bitcast i32* %x0327 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %277) #1
  %cleanup.dest.372 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.372, label %cleanup.378 [
    i32 0, label %cleanup.cont.373
  ]

cleanup.cont.373:                                 ; preds = %cleanup.370
  br label %for.inc.374

for.inc.374:                                      ; preds = %cleanup.cont.373
  %278 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next375 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %278, i32 0, i32 15
  %279 = load %struct.active_line_s*, %struct.active_line_s** %next375, align 8, !tbaa !189
  store %struct.active_line_s* %279, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.323

for.end.376:                                      ; preds = %for.cond.323
  %280 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %281 = load i32, i32* %y_min, align 4, !tbaa !5
  %282 = load i32, i32* %y_top, align 4, !tbaa !5
  %call377 = call i32 @merge_ranges(%struct.coord_range_list_s* %rlist, %struct.line_list_s* %280, i32 %281, i32 %282) #5
  store i32 %call377, i32* %code, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.378

cleanup.378:                                      ; preds = %for.end.376, %cleanup.370, %cleanup.318
  %283 = bitcast i32* %y_min to i8*
  call void @llvm.lifetime.end(i64 4, i8* %283) #1
  %cleanup.dest.379 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.379, label %cleanup.383 [
    i32 0, label %cleanup.cont.380
  ]

cleanup.cont.380:                                 ; preds = %cleanup.378
  br label %if.end.381

if.end.381:                                       ; preds = %cleanup.cont.380, %if.end.261
  %284 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0382 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %284, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0382, align 8, !tbaa !124
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.383

cleanup.383:                                      ; preds = %if.end.381, %cleanup.378, %cleanup.257, %cleanup, %if.then.14
  %285 = bitcast i32* %new_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %285) #1
  %286 = bitcast i32* %x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %286) #1
  %287 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %287) #1
  %288 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %288) #1
  %cleanup.dest.387 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.387, label %cleanup.393 [
    i32 0, label %cleanup.cont.388
    i32 2, label %do.end.392
    i32 28, label %done
  ]

cleanup.cont.388:                                 ; preds = %cleanup.383
  br label %do.cond.389

do.cond.389:                                      ; preds = %cleanup.cont.388
  %289 = load i32, i32* %code, align 4, !tbaa !5
  %cmp390 = icmp sge i32 %289, 0
  br i1 %cmp390, label %do.body, label %do.end.392

do.end.392:                                       ; preds = %do.cond.389, %cleanup.383
  br label %done

done:                                             ; preds = %do.end.392, %cleanup.383
  call void @range_list_free(%struct.coord_range_list_s* %rlist) #5
  %290 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %290, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.393

cleanup.393:                                      ; preds = %done, %cleanup.383, %if.then
  %291 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %291) #1
  %292 = bitcast [20 x %struct.coord_range_s]* %rlocal to i8*
  call void @llvm.lifetime.end(i64 640, i8* %292) #1
  %293 = bitcast %struct.coord_range_list_s* %rlist to i8*
  call void @llvm.lifetime.end(i64 120, i8* %293) #1
  %294 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %294) #1
  %295 = bitcast i32* %y_top to i8*
  call void @llvm.lifetime.end(i64 4, i8* %295) #1
  %296 = bitcast i32* %y_bot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %296) #1
  %297 = bitcast i32* %y0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %297) #1
  %298 = bitcast i32* %y_frac_max to i8*
  call void @llvm.lifetime.end(i64 4, i8* %298) #1
  %299 = bitcast i32* %y_frac_min to i8*
  call void @llvm.lifetime.end(i64 4, i8* %299) #1
  %300 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %300) #1
  %301 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %301) #1
  %302 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %302) #1
  %303 = load i32, i32* %retval
  ret i32 %303
}

; Function Attrs: nounwind uwtable
define internal i32 @spot_into_scan_lines_nd(%struct.line_list_s* %ll, i32 %band_mask) #0 {
entry:
  %retval = alloca i32, align 4
  %ll.addr = alloca %struct.line_list_s*, align 8
  %band_mask.addr = alloca i32, align 4
  %fo = alloca %struct.fill_options_s, align 8
  %yll = alloca %struct.active_line_s*, align 8
  %y_limit = alloca i32, align 4
  %y_frac_min = alloca i32, align 4
  %y_frac_max = alloca i32, align 4
  %y0 = alloca i32, align 4
  %y_bot = alloca i32, align 4
  %y_top = alloca i32, align 4
  %y = alloca i32, align 4
  %rlist = alloca %struct.coord_range_list_s, align 8
  %rlocal = alloca [20 x %struct.coord_range_s], align 16
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %alp = alloca %struct.active_line_s*, align 8
  %nlp = alloca %struct.active_line_s*, align 8
  %x = alloca i32, align 4
  %new_band = alloca i32, align 4
  %yy = alloca i32, align 4
  %ynext = alloca %struct.active_line_s*, align 8
  %nx = alloca i32, align 4
  %ilp = alloca %struct.active_line_s*, align 8
  %pcr = alloca %struct.coord_range_s*, align 8
  %x0 = alloca i32, align 4
  %x1 = alloca i32, align 4
  %y_min = alloca i32, align 4
  %inside = alloca i32, align 4
  %x0277 = alloca i32, align 4
  %x0328 = alloca i32, align 4
  %x1343 = alloca i32, align 4
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %band_mask, i32* %band_mask.addr, align 4, !tbaa !5
  %0 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo1 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %1, i32 0, i32 19
  %2 = load %struct.fill_options_s*, %struct.fill_options_s** %fo1, align 8, !tbaa !150
  %3 = bitcast %struct.fill_options_s* %fo to i8*
  %4 = bitcast %struct.fill_options_s* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 96, i32 8, i1 false), !tbaa.struct !200
  %5 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_list = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %6, i32 0, i32 5
  %7 = load %struct.active_line_s*, %struct.active_line_s** %y_list, align 8, !tbaa !121
  store %struct.active_line_s* %7, %struct.active_line_s** %yll, align 8, !tbaa !1
  %8 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %ymax = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 2
  %9 = load i32, i32* %ymax, align 4, !tbaa !95
  store i32 %9, i32* %y_limit, align 4, !tbaa !5
  %10 = bitcast i32* %y_frac_min to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %adjust_above = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %11 = load i32, i32* %adjust_above, align 4, !tbaa !87
  %conv = sext i32 %11 to i64
  %cmp = icmp eq i64 %conv, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %adjust_above3 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 11
  %12 = load i32, i32* %adjust_above3, align 4, !tbaa !87
  %conv4 = sext i32 %12 to i64
  %sub = sub nsw i64 129, %conv4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 128, %cond.true ], [ %sub, %cond.false ]
  %conv5 = trunc i64 %cond to i32
  store i32 %conv5, i32* %y_frac_min, align 4, !tbaa !5
  %13 = bitcast i32* %y_frac_max to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %adjust_below = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 10
  %14 = load i32, i32* %adjust_below, align 4, !tbaa !86
  %conv6 = sext i32 %14 to i64
  %add = add nsw i64 128, %conv6
  %conv7 = trunc i64 %add to i32
  store i32 %conv7, i32* %y_frac_max, align 4, !tbaa !5
  %15 = bitcast i32* %y0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  store i32 -8388608, i32* %y0, align 4, !tbaa !5
  %16 = bitcast i32* %y_bot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  store i32 -2147483648, i32* %y_bot, align 4, !tbaa !5
  %17 = bitcast i32* %y_top to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  store i32 -2147483648, i32* %y_top, align 4, !tbaa !5
  %18 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #1
  store i32 -2147483648, i32* %y, align 4, !tbaa !5
  %19 = bitcast %struct.coord_range_list_s* %rlist to i8*
  call void @llvm.lifetime.start(i64 120, i8* %19) #1
  %20 = bitcast [20 x %struct.coord_range_s]* %rlocal to i8*
  call void @llvm.lifetime.start(i64 640, i8* %20) #1
  %21 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #1
  store i32 0, i32* %code, align 4, !tbaa !5
  %22 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp8 = icmp eq %struct.active_line_s* %22, null
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.394

if.end:                                           ; preds = %cond.end
  %arraydecay = getelementptr inbounds [20 x %struct.coord_range_s], [20 x %struct.coord_range_s]* %rlocal, i32 0, i32 0
  %23 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %23, i32 0, i32 0
  %24 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !117
  call void @range_list_init(%struct.coord_range_list_s* %rlist, %struct.coord_range_s* %arraydecay, i32 20, %struct.gs_memory_s* %24) #5
  %25 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %25, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  store %struct.active_line_s* null, %struct.active_line_s** %next, align 8, !tbaa !201
  %26 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head10 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %26, i32 0, i32 7
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head10, i32 0, i32 5
  store i32 -2147483648, i32* %x_current, align 4, !tbaa !202
  br label %do.body

do.body:                                          ; preds = %do.cond.390, %if.end
  %27 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #1
  %28 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %28) #1
  %29 = bitcast i32* %x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #1
  %30 = bitcast i32* %new_band to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #1
  br label %do.body.11

do.body.11:                                       ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %do.body.11
  br label %do.end

do.end:                                           ; preds = %do.cond
  %31 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %32 = load i32, i32* %y, align 4, !tbaa !5
  %call = call i32 @move_al_by_y(%struct.line_list_s* %31, i32 %32) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %33 = load i32, i32* %code, align 4, !tbaa !5
  %cmp12 = icmp slt i32 %33, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %do.end
  %34 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.384

if.end.15:                                        ; preds = %do.end
  %35 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head16 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %35, i32 0, i32 7
  %next17 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head16, i32 0, i32 15
  %36 = load %struct.active_line_s*, %struct.active_line_s** %next17, align 8, !tbaa !201
  %cmp18 = icmp eq %struct.active_line_s* %36, null
  br i1 %cmp18, label %if.then.20, label %if.else

if.then.20:                                       ; preds = %if.end.15
  %37 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp21 = icmp eq %struct.active_line_s* %37, null
  br i1 %cmp21, label %cond.true.23, label %cond.false.24

cond.true.23:                                     ; preds = %if.then.20
  %38 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %y_break = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %38, i32 0, i32 18
  %39 = load i32, i32* %y_break, align 4, !tbaa !137
  br label %cond.end.26

cond.false.24:                                    ; preds = %if.then.20
  %40 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %40, i32 0, i32 0
  %y25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %41 = load i32, i32* %y25, align 4, !tbaa !187
  br label %cond.end.26

cond.end.26:                                      ; preds = %cond.false.24, %cond.true.23
  %cond27 = phi i32 [ %39, %cond.true.23 ], [ %41, %cond.false.24 ]
  store i32 %cond27, i32* %y, align 4, !tbaa !5
  br label %if.end.77

if.else:                                          ; preds = %if.end.15
  %42 = load i32, i32* %y_bot, align 4, !tbaa !5
  %conv28 = sext i32 %42 to i64
  %add29 = add nsw i64 %conv28, 256
  %conv30 = trunc i64 %add29 to i32
  store i32 %conv30, i32* %y, align 4, !tbaa !5
  %43 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp31 = icmp ne %struct.active_line_s* %43, null
  br i1 %cmp31, label %if.then.33, label %if.end.44

if.then.33:                                       ; preds = %if.else
  %44 = load i32, i32* %y, align 4, !tbaa !5
  %45 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start34 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %45, i32 0, i32 0
  %y35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start34, i32 0, i32 1
  %46 = load i32, i32* %y35, align 4, !tbaa !187
  %cmp36 = icmp slt i32 %44, %46
  br i1 %cmp36, label %cond.true.38, label %cond.false.39

cond.true.38:                                     ; preds = %if.then.33
  %47 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.42

cond.false.39:                                    ; preds = %if.then.33
  %48 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start40 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %48, i32 0, i32 0
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start40, i32 0, i32 1
  %49 = load i32, i32* %y41, align 4, !tbaa !187
  br label %cond.end.42

cond.end.42:                                      ; preds = %cond.false.39, %cond.true.38
  %cond43 = phi i32 [ %47, %cond.true.38 ], [ %49, %cond.false.39 ]
  store i32 %cond43, i32* %y, align 4, !tbaa !5
  br label %if.end.44

if.end.44:                                        ; preds = %cond.end.42, %if.else
  %50 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head45 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %50, i32 0, i32 7
  %next46 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head45, i32 0, i32 15
  %51 = load %struct.active_line_s*, %struct.active_line_s** %next46, align 8, !tbaa !201
  store %struct.active_line_s* %51, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.44
  %52 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp47 = icmp ne %struct.active_line_s* %52, null
  br i1 %cmp47, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %53 = bitcast i32* %yy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %53) #1
  %54 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %54, i32 0, i32 11
  %y3 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi, i32 0, i32 3
  %55 = load i32, i32* %y3, align 4, !tbaa !213
  %56 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi49 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %56, i32 0, i32 11
  %y050 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi49, i32 0, i32 1
  %57 = load i32, i32* %y050, align 4, !tbaa !214
  %cmp51 = icmp sgt i32 %55, %57
  br i1 %cmp51, label %cond.true.53, label %cond.false.56

cond.true.53:                                     ; preds = %for.body
  %58 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi54 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 11
  %y355 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi54, i32 0, i32 3
  %59 = load i32, i32* %y355, align 4, !tbaa !213
  br label %cond.end.59

cond.false.56:                                    ; preds = %for.body
  %60 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi57 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %60, i32 0, i32 11
  %y058 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi57, i32 0, i32 1
  %61 = load i32, i32* %y058, align 4, !tbaa !214
  br label %cond.end.59

cond.end.59:                                      ; preds = %cond.false.56, %cond.true.53
  %cond60 = phi i32 [ %59, %cond.true.53 ], [ %61, %cond.false.56 ]
  store i32 %cond60, i32* %yy, align 4, !tbaa !5
  %62 = load i32, i32* %yy, align 4, !tbaa !5
  %63 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 1
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %64 = load i32, i32* %y61, align 4, !tbaa !195
  %cmp62 = icmp sgt i32 %62, %64
  br i1 %cmp62, label %cond.true.64, label %cond.false.65

cond.true.64:                                     ; preds = %cond.end.59
  %65 = load i32, i32* %yy, align 4, !tbaa !5
  br label %cond.end.68

cond.false.65:                                    ; preds = %cond.end.59
  %66 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end66 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %66, i32 0, i32 1
  %y67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end66, i32 0, i32 1
  %67 = load i32, i32* %y67, align 4, !tbaa !195
  br label %cond.end.68

cond.end.68:                                      ; preds = %cond.false.65, %cond.true.64
  %cond69 = phi i32 [ %65, %cond.true.64 ], [ %67, %cond.false.65 ]
  store i32 %cond69, i32* %yy, align 4, !tbaa !5
  %68 = load i32, i32* %y, align 4, !tbaa !5
  %69 = load i32, i32* %yy, align 4, !tbaa !5
  %cmp70 = icmp slt i32 %68, %69
  br i1 %cmp70, label %cond.true.72, label %cond.false.73

cond.true.72:                                     ; preds = %cond.end.68
  %70 = load i32, i32* %y, align 4, !tbaa !5
  br label %cond.end.74

cond.false.73:                                    ; preds = %cond.end.68
  %71 = load i32, i32* %yy, align 4, !tbaa !5
  br label %cond.end.74

cond.end.74:                                      ; preds = %cond.false.73, %cond.true.72
  %cond75 = phi i32 [ %70, %cond.true.72 ], [ %71, %cond.false.73 ]
  store i32 %cond75, i32* %y, align 4, !tbaa !5
  %72 = bitcast i32* %yy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #1
  br label %for.inc

for.inc:                                          ; preds = %cond.end.74
  %73 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next76 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %73, i32 0, i32 15
  %74 = load %struct.active_line_s*, %struct.active_line_s** %next76, align 8, !tbaa !189
  store %struct.active_line_s* %74, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.77

if.end.77:                                        ; preds = %for.end, %cond.end.26
  br label %while.cond

while.cond:                                       ; preds = %if.end.89, %if.end.77
  %75 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %cmp78 = icmp ne %struct.active_line_s* %75, null
  br i1 %cmp78, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %76 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %start80 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %76, i32 0, i32 0
  %y81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start80, i32 0, i32 1
  %77 = load i32, i32* %y81, align 4, !tbaa !187
  %78 = load i32, i32* %y, align 4, !tbaa !5
  %cmp82 = icmp eq i32 %77, %78
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %79 = phi i1 [ false, %while.cond ], [ %cmp82, %land.rhs ]
  br i1 %79, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %80 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.start(i64 8, i8* %80) #1
  %81 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %next84 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %81, i32 0, i32 15
  %82 = load %struct.active_line_s*, %struct.active_line_s** %next84, align 8, !tbaa !189
  store %struct.active_line_s* %82, %struct.active_line_s** %ynext, align 8, !tbaa !1
  %83 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %83, i32 0, i32 8
  %84 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp85 = icmp eq i32 %84, 0
  br i1 %cmp85, label %if.then.87, label %if.else.88

if.then.87:                                       ; preds = %while.body
  %85 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %86 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_h_new(%struct.active_line_s* %85, %struct.line_list_s* %86) #5
  br label %if.end.89

if.else.88:                                       ; preds = %while.body
  %87 = load %struct.active_line_s*, %struct.active_line_s** %yll, align 8, !tbaa !1
  %88 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  call void @insert_x_new(%struct.active_line_s* %87, %struct.line_list_s* %88) #5
  br label %if.end.89

if.end.89:                                        ; preds = %if.else.88, %if.then.87
  %89 = load %struct.active_line_s*, %struct.active_line_s** %ynext, align 8, !tbaa !1
  store %struct.active_line_s* %89, %struct.active_line_s** %yll, align 8, !tbaa !1
  %90 = bitcast %struct.active_line_s** %ynext to i8*
  call void @llvm.lifetime.end(i64 8, i8* %90) #1
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 -2147483648, i32* %x, align 4, !tbaa !5
  %91 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head90 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %91, i32 0, i32 7
  %next91 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head90, i32 0, i32 15
  %92 = load %struct.active_line_s*, %struct.active_line_s** %next91, align 8, !tbaa !201
  store %struct.active_line_s* %92, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.92

for.cond.92:                                      ; preds = %for.inc.211, %while.end
  %93 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp93 = icmp ne %struct.active_line_s* %93, null
  br i1 %cmp93, label %for.body.95, label %for.end.212

for.body.95:                                      ; preds = %for.cond.92
  %94 = bitcast i32* %nx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %94) #1
  %95 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next96 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %95, i32 0, i32 15
  %96 = load %struct.active_line_s*, %struct.active_line_s** %next96, align 8, !tbaa !189
  store %struct.active_line_s* %96, %struct.active_line_s** %nlp, align 8, !tbaa !1
  br label %e

e:                                                ; preds = %if.end.131, %for.body.95
  %97 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end97 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %97, i32 0, i32 1
  %y98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end97, i32 0, i32 1
  %98 = load i32, i32* %y98, align 4, !tbaa !195
  %99 = load i32, i32* %y, align 4, !tbaa !5
  %cmp99 = icmp sle i32 %98, %99
  br i1 %cmp99, label %if.then.107, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %e
  %100 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start101 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %100, i32 0, i32 0
  %y102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start101, i32 0, i32 1
  %101 = load i32, i32* %y102, align 4, !tbaa !187
  %102 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end103 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %102, i32 0, i32 1
  %y104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end103, i32 0, i32 1
  %103 = load i32, i32* %y104, align 4, !tbaa !195
  %cmp105 = icmp eq i32 %101, %103
  br i1 %cmp105, label %if.then.107, label %if.end.132

if.then.107:                                      ; preds = %lor.lhs.false, %e
  %104 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %105 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %call108 = call i32 @end_x_line(%struct.active_line_s* %104, %struct.line_list_s* %105, i32 1) #5
  %tobool = icmp ne i32 %call108, 0
  br i1 %tobool, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %if.then.107
  store i32 13, i32* %cleanup.dest.slot
  br label %cleanup

if.end.110:                                       ; preds = %if.then.107
  %106 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %106, i32 0, i32 12
  %107 = load i32, i32* %more_flattened, align 4, !tbaa !179
  %tobool111 = icmp ne i32 %107, 0
  br i1 %tobool111, label %if.then.112, label %if.end.131

if.then.112:                                      ; preds = %if.end.110
  %108 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end113 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %108, i32 0, i32 1
  %y114 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end113, i32 0, i32 1
  %109 = load i32, i32* %y114, align 4, !tbaa !195
  %110 = load i32, i32* %y, align 4, !tbaa !5
  %cmp115 = icmp sle i32 %109, %110
  br i1 %cmp115, label %if.then.124, label %lor.lhs.false.117

lor.lhs.false.117:                                ; preds = %if.then.112
  %111 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start118 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %111, i32 0, i32 0
  %y119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start118, i32 0, i32 1
  %112 = load i32, i32* %y119, align 4, !tbaa !187
  %113 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end120 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %113, i32 0, i32 1
  %y121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end120, i32 0, i32 1
  %114 = load i32, i32* %y121, align 4, !tbaa !195
  %cmp122 = icmp eq i32 %112, %114
  br i1 %cmp122, label %if.then.124, label %if.end.130

if.then.124:                                      ; preds = %lor.lhs.false.117, %if.then.112
  %115 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %call125 = call i32 @step_al(%struct.active_line_s* %115, i32 1) #5
  store i32 %call125, i32* %code, align 4, !tbaa !5
  %116 = load i32, i32* %code, align 4, !tbaa !5
  %cmp126 = icmp slt i32 %116, 0
  br i1 %cmp126, label %if.then.128, label %if.end.129

if.then.128:                                      ; preds = %if.then.124
  %117 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %117, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.129:                                       ; preds = %if.then.124
  br label %if.end.130

if.end.130:                                       ; preds = %if.end.129, %lor.lhs.false.117
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %if.end.110
  br label %e

if.end.132:                                       ; preds = %lor.lhs.false
  %118 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start133 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %118, i32 0, i32 0
  %y134 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start133, i32 0, i32 1
  %119 = load i32, i32* %y134, align 4, !tbaa !187
  %120 = load i32, i32* %y, align 4, !tbaa !5
  %cmp135 = icmp sge i32 %119, %120
  br i1 %cmp135, label %cond.true.137, label %cond.false.140

cond.true.137:                                    ; preds = %if.end.132
  %121 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start138 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %121, i32 0, i32 0
  %x139 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start138, i32 0, i32 0
  %122 = load i32, i32* %x139, align 4, !tbaa !193
  br label %cond.end.175

cond.false.140:                                   ; preds = %if.end.132
  %123 = load i32, i32* %y, align 4, !tbaa !5
  %124 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end141 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %124, i32 0, i32 1
  %y142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end141, i32 0, i32 1
  %125 = load i32, i32* %y142, align 4, !tbaa !195
  %cmp143 = icmp eq i32 %123, %125
  br i1 %cmp143, label %cond.true.145, label %cond.false.148

cond.true.145:                                    ; preds = %cond.false.140
  %126 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end146 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %126, i32 0, i32 1
  %x147 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end146, i32 0, i32 0
  %127 = load i32, i32* %x147, align 4, !tbaa !194
  br label %cond.end.173

cond.false.148:                                   ; preds = %cond.false.140
  %128 = load i32, i32* %y, align 4, !tbaa !5
  %129 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %y_fast_max = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %129, i32 0, i32 3
  %130 = load i32, i32* %y_fast_max, align 4, !tbaa !199
  %cmp149 = icmp sle i32 %128, %130
  br i1 %cmp149, label %cond.true.151, label %cond.false.159

cond.true.151:                                    ; preds = %cond.false.148
  %131 = load i32, i32* %y, align 4, !tbaa !5
  %132 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start152 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %132, i32 0, i32 0
  %y153 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start152, i32 0, i32 1
  %133 = load i32, i32* %y153, align 4, !tbaa !187
  %sub154 = sub nsw i32 %131, %133
  %134 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %134, i32 0, i32 2
  %x155 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff, i32 0, i32 0
  %135 = load i32, i32* %x155, align 4, !tbaa !196
  %mul = mul nsw i32 %sub154, %135
  %136 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %num_adjust = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %136, i32 0, i32 4
  %137 = load i32, i32* %num_adjust, align 4, !tbaa !198
  %add156 = add nsw i32 %mul, %137
  %138 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff157 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %138, i32 0, i32 2
  %y158 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff157, i32 0, i32 1
  %139 = load i32, i32* %y158, align 4, !tbaa !197
  %div = sdiv i32 %add156, %139
  br label %cond.end.168

cond.false.159:                                   ; preds = %cond.false.148
  %140 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff160 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %140, i32 0, i32 2
  %x161 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff160, i32 0, i32 0
  %141 = load i32, i32* %x161, align 4, !tbaa !196
  %142 = load i32, i32* %y, align 4, !tbaa !5
  %143 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start162 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %143, i32 0, i32 0
  %y163 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start162, i32 0, i32 1
  %144 = load i32, i32* %y163, align 4, !tbaa !187
  %sub164 = sub nsw i32 %142, %144
  %145 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff165 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %145, i32 0, i32 2
  %y166 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff165, i32 0, i32 1
  %146 = load i32, i32* %y166, align 4, !tbaa !197
  %call167 = call i32 @fixed_mult_quo(i32 %141, i32 %sub164, i32 %146) #5
  br label %cond.end.168

cond.end.168:                                     ; preds = %cond.false.159, %cond.true.151
  %cond169 = phi i32 [ %div, %cond.true.151 ], [ %call167, %cond.false.159 ]
  %147 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start170 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %147, i32 0, i32 0
  %x171 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start170, i32 0, i32 0
  %148 = load i32, i32* %x171, align 4, !tbaa !193
  %add172 = add nsw i32 %cond169, %148
  br label %cond.end.173

cond.end.173:                                     ; preds = %cond.end.168, %cond.true.145
  %cond174 = phi i32 [ %127, %cond.true.145 ], [ %add172, %cond.end.168 ]
  br label %cond.end.175

cond.end.175:                                     ; preds = %cond.end.173, %cond.true.137
  %cond176 = phi i32 [ %122, %cond.true.137 ], [ %cond174, %cond.end.173 ]
  %149 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current177 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %149, i32 0, i32 5
  store i32 %cond176, i32* %x_current177, align 4, !tbaa !204
  store i32 %cond176, i32* %nx, align 4, !tbaa !5
  %150 = load i32, i32* %nx, align 4, !tbaa !5
  %151 = load i32, i32* %x, align 4, !tbaa !5
  %cmp178 = icmp slt i32 %150, %151
  br i1 %cmp178, label %if.then.180, label %if.end.210

if.then.180:                                      ; preds = %cond.end.175
  %152 = bitcast %struct.active_line_s** %ilp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %152) #1
  %153 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  store %struct.active_line_s* %153, %struct.active_line_s** %ilp, align 8, !tbaa !1
  br label %while.cond.181

while.cond.181:                                   ; preds = %do.end.188, %if.then.180
  %154 = load i32, i32* %nx, align 4, !tbaa !5
  %155 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %155, i32 0, i32 14
  %156 = load %struct.active_line_s*, %struct.active_line_s** %prev, align 8, !tbaa !188
  store %struct.active_line_s* %156, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %x_current182 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %156, i32 0, i32 5
  %157 = load i32, i32* %x_current182, align 4, !tbaa !204
  %cmp183 = icmp slt i32 %154, %157
  br i1 %cmp183, label %while.body.185, label %while.end.189

while.body.185:                                   ; preds = %while.cond.181
  br label %do.body.186

do.body.186:                                      ; preds = %while.body.185
  br label %do.cond.187

do.cond.187:                                      ; preds = %do.body.186
  br label %do.end.188

do.end.188:                                       ; preds = %do.cond.187
  br label %while.cond.181

while.end.189:                                    ; preds = %while.cond.181
  %158 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next190 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %158, i32 0, i32 15
  %159 = load %struct.active_line_s*, %struct.active_line_s** %next190, align 8, !tbaa !189
  %160 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev191 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %160, i32 0, i32 14
  %161 = load %struct.active_line_s*, %struct.active_line_s** %prev191, align 8, !tbaa !188
  %next192 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %161, i32 0, i32 15
  store %struct.active_line_s* %159, %struct.active_line_s** %next192, align 8, !tbaa !189
  %162 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next193 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %162, i32 0, i32 15
  %163 = load %struct.active_line_s*, %struct.active_line_s** %next193, align 8, !tbaa !189
  %tobool194 = icmp ne %struct.active_line_s* %163, null
  br i1 %tobool194, label %if.then.195, label %if.end.199

if.then.195:                                      ; preds = %while.end.189
  %164 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev196 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %164, i32 0, i32 14
  %165 = load %struct.active_line_s*, %struct.active_line_s** %prev196, align 8, !tbaa !188
  %166 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next197 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %166, i32 0, i32 15
  %167 = load %struct.active_line_s*, %struct.active_line_s** %next197, align 8, !tbaa !189
  %prev198 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %167, i32 0, i32 14
  store %struct.active_line_s* %165, %struct.active_line_s** %prev198, align 8, !tbaa !188
  br label %if.end.199

if.end.199:                                       ; preds = %if.then.195, %while.end.189
  %168 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next200 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %168, i32 0, i32 15
  %169 = load %struct.active_line_s*, %struct.active_line_s** %next200, align 8, !tbaa !189
  %tobool201 = icmp ne %struct.active_line_s* %169, null
  br i1 %tobool201, label %if.then.202, label %if.end.205

if.then.202:                                      ; preds = %if.end.199
  %170 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %171 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next203 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %171, i32 0, i32 15
  %172 = load %struct.active_line_s*, %struct.active_line_s** %next203, align 8, !tbaa !189
  %prev204 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %172, i32 0, i32 14
  store %struct.active_line_s* %170, %struct.active_line_s** %prev204, align 8, !tbaa !188
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.202, %if.end.199
  %173 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next206 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %173, i32 0, i32 15
  %174 = load %struct.active_line_s*, %struct.active_line_s** %next206, align 8, !tbaa !189
  %175 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next207 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %175, i32 0, i32 15
  store %struct.active_line_s* %174, %struct.active_line_s** %next207, align 8, !tbaa !189
  %176 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %177 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %next208 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %177, i32 0, i32 15
  store %struct.active_line_s* %176, %struct.active_line_s** %next208, align 8, !tbaa !189
  %178 = load %struct.active_line_s*, %struct.active_line_s** %ilp, align 8, !tbaa !1
  %179 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %prev209 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %179, i32 0, i32 14
  store %struct.active_line_s* %178, %struct.active_line_s** %prev209, align 8, !tbaa !188
  store i32 13, i32* %cleanup.dest.slot
  %180 = bitcast %struct.active_line_s** %ilp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %180) #1
  br label %cleanup

if.end.210:                                       ; preds = %cond.end.175
  %181 = load i32, i32* %nx, align 4, !tbaa !5
  store i32 %181, i32* %x, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.210, %if.end.205, %if.then.128, %if.then.109
  %182 = bitcast i32* %nx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %182) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.384 [
    i32 0, label %cleanup.cont
    i32 13, label %for.inc.211
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc.211

for.inc.211:                                      ; preds = %cleanup.cont, %cleanup
  %183 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  store %struct.active_line_s* %183, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.92

for.end.212:                                      ; preds = %for.cond.92
  %184 = load i32, i32* %y, align 4, !tbaa !5
  %185 = load i32, i32* %y_top, align 4, !tbaa !5
  %cmp213 = icmp sgt i32 %184, %185
  br i1 %cmp213, label %if.then.218, label %lor.lhs.false.215

lor.lhs.false.215:                                ; preds = %for.end.212
  %186 = load i32, i32* %y, align 4, !tbaa !5
  %187 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp216 = icmp sge i32 %186, %187
  br i1 %cmp216, label %if.then.218, label %if.else.261

if.then.218:                                      ; preds = %lor.lhs.false.215, %for.end.212
  %188 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %188) #1
  %first = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %rlist, i32 0, i32 5
  %next219 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first, i32 0, i32 3
  %189 = load %struct.coord_range_s*, %struct.coord_range_s** %next219, align 8, !tbaa !215
  store %struct.coord_range_s* %189, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  br label %for.cond.220

for.cond.220:                                     ; preds = %for.inc.244, %if.then.218
  %190 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %last = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %rlist, i32 0, i32 6
  %cmp221 = icmp ne %struct.coord_range_s* %190, %last
  br i1 %cmp221, label %for.body.223, label %for.end.246

for.body.223:                                     ; preds = %for.cond.220
  %191 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %191) #1
  %192 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmin = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %192, i32 0, i32 0
  %193 = load i32, i32* %rmin, align 4, !tbaa !219
  store i32 %193, i32* %x0, align 4, !tbaa !5
  %194 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %194) #1
  %195 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmax = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %195, i32 0, i32 1
  %196 = load i32, i32* %rmax, align 4, !tbaa !220
  store i32 %196, i32* %x1, align 4, !tbaa !5
  br label %do.body.224

do.body.224:                                      ; preds = %for.body.223
  br label %do.cond.225

do.cond.225:                                      ; preds = %do.body.224
  br label %do.end.226

do.end.226:                                       ; preds = %do.cond.225
  br label %do.body.227

do.body.227:                                      ; preds = %do.end.226
  br label %do.cond.228

do.cond.228:                                      ; preds = %do.body.227
  br label %do.end.229

do.end.229:                                       ; preds = %do.cond.228
  %pdevc = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %197 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc, align 8, !tbaa !90
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %197, i32 0, i32 0
  %198 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !7
  %fill_rectangle = getelementptr inbounds %struct.gx_device_color_type_s, %struct.gx_device_color_type_s* %198, i32 0, i32 5
  %199 = load i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)** %fill_rectangle, align 8, !tbaa !50
  %pdevc230 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 3
  %200 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc230, align 8, !tbaa !90
  %201 = load i32, i32* %x0, align 4, !tbaa !5
  %202 = load i32, i32* %y0, align 4, !tbaa !5
  %203 = load i32, i32* %x1, align 4, !tbaa !5
  %204 = load i32, i32* %x0, align 4, !tbaa !5
  %sub231 = sub nsw i32 %203, %204
  %dev = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 12
  %205 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !96
  %lop = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 4
  %206 = load i32, i32* %lop, align 4, !tbaa !91
  %call232 = call i32 %199(%struct.gx_device_color_s* %200, i32 %201, i32 %202, i32 %sub231, i32 1, %struct.gx_device_s* %205, i32 %206, %struct.gx_rop_source_s* null) #5
  store i32 %call232, i32* %code, align 4, !tbaa !5
  br label %do.body.233

do.body.233:                                      ; preds = %do.end.229
  br label %do.cond.234

do.cond.234:                                      ; preds = %do.body.233
  br label %do.end.235

do.end.235:                                       ; preds = %do.cond.234
  %207 = load i32, i32* %code, align 4, !tbaa !5
  %cmp236 = icmp slt i32 %207, 0
  br i1 %cmp236, label %if.then.238, label %if.end.239

if.then.238:                                      ; preds = %do.end.235
  store i32 28, i32* %cleanup.dest.slot
  br label %cleanup.240

if.end.239:                                       ; preds = %do.end.235
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.240

cleanup.240:                                      ; preds = %if.then.238, %if.end.239
  %208 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %208) #1
  %209 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %209) #1
  %cleanup.dest.242 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.242, label %cleanup.258 [
    i32 0, label %cleanup.cont.243
  ]

cleanup.cont.243:                                 ; preds = %cleanup.240
  br label %for.inc.244

for.inc.244:                                      ; preds = %cleanup.cont.243
  %210 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next245 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %210, i32 0, i32 3
  %211 = load %struct.coord_range_s*, %struct.coord_range_s** %next245, align 8, !tbaa !221
  store %struct.coord_range_s* %211, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  br label %for.cond.220

for.end.246:                                      ; preds = %for.cond.220
  call void @range_list_reset(%struct.coord_range_list_s* %rlist) #5
  %212 = load i32, i32* %y, align 4, !tbaa !5
  %213 = load i32, i32* %y_limit, align 4, !tbaa !5
  %cmp247 = icmp sge i32 %212, %213
  br i1 %cmp247, label %if.then.249, label %if.end.250

if.then.249:                                      ; preds = %for.end.246
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.258

if.end.250:                                       ; preds = %for.end.246
  %214 = load i32, i32* %y, align 4, !tbaa !5
  %shr = ashr i32 %214, 8
  store i32 %shr, i32* %y0, align 4, !tbaa !5
  %215 = load i32, i32* %y, align 4, !tbaa !5
  %and = and i32 %215, 255
  %216 = load i32, i32* %y_frac_min, align 4, !tbaa !5
  %cmp251 = icmp slt i32 %and, %216
  br i1 %cmp251, label %if.then.253, label %if.end.254

if.then.253:                                      ; preds = %if.end.250
  %217 = load i32, i32* %y0, align 4, !tbaa !5
  %dec = add nsw i32 %217, -1
  store i32 %dec, i32* %y0, align 4, !tbaa !5
  br label %if.end.254

if.end.254:                                       ; preds = %if.then.253, %if.end.250
  %218 = load i32, i32* %y0, align 4, !tbaa !5
  %shl = shl i32 %218, 8
  %219 = load i32, i32* %y_frac_min, align 4, !tbaa !5
  %add255 = add nsw i32 %shl, %219
  store i32 %add255, i32* %y_bot, align 4, !tbaa !5
  %220 = load i32, i32* %y0, align 4, !tbaa !5
  %shl256 = shl i32 %220, 8
  %221 = load i32, i32* %y_frac_max, align 4, !tbaa !5
  %add257 = add nsw i32 %shl256, %221
  store i32 %add257, i32* %y_top, align 4, !tbaa !5
  store i32 1, i32* %new_band, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.258

cleanup.258:                                      ; preds = %if.end.254, %if.then.249, %cleanup.240
  %222 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %222) #1
  %cleanup.dest.259 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.259, label %cleanup.384 [
    i32 0, label %cleanup.cont.260
  ]

cleanup.cont.260:                                 ; preds = %cleanup.258
  br label %if.end.262

if.else.261:                                      ; preds = %lor.lhs.false.215
  store i32 0, i32* %new_band, align 4, !tbaa !5
  br label %if.end.262

if.end.262:                                       ; preds = %if.else.261, %cleanup.cont.260
  %223 = load i32, i32* %y, align 4, !tbaa !5
  %224 = load i32, i32* %y_top, align 4, !tbaa !5
  %cmp263 = icmp sle i32 %223, %224
  br i1 %cmp263, label %if.then.265, label %if.end.382

if.then.265:                                      ; preds = %if.end.262
  %225 = bitcast i32* %y_min to i8*
  call void @llvm.lifetime.start(i64 4, i8* %225) #1
  %226 = load i32, i32* %new_band, align 4, !tbaa !5
  %tobool266 = icmp ne i32 %226, 0
  br i1 %tobool266, label %if.then.267, label %if.else.322

if.then.267:                                      ; preds = %if.then.265
  %227 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %227) #1
  store i32 0, i32* %inside, align 4, !tbaa !5
  br label %do.body.268

do.body.268:                                      ; preds = %if.then.267
  br label %do.cond.269

do.cond.269:                                      ; preds = %do.body.268
  br label %do.end.270

do.end.270:                                       ; preds = %do.cond.269
  %228 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head271 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %228, i32 0, i32 7
  %next272 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head271, i32 0, i32 15
  %229 = load %struct.active_line_s*, %struct.active_line_s** %next272, align 8, !tbaa !201
  store %struct.active_line_s* %229, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.273

for.cond.273:                                     ; preds = %for.inc.316, %do.end.270
  %230 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp274 = icmp ne %struct.active_line_s* %230, null
  br i1 %cmp274, label %for.body.276, label %for.end.318

for.body.276:                                     ; preds = %for.cond.273
  %231 = bitcast i32* %x0277 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %231) #1
  %232 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current278 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %232, i32 0, i32 5
  %233 = load i32, i32* %x_current278, align 4, !tbaa !204
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %234 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub279 = sub nsw i32 %233, %234
  %conv280 = sext i32 %sub279 to i64
  %add281 = add nsw i64 %conv280, 127
  %shr282 = ashr i64 %add281, 8
  %conv283 = trunc i64 %shr282 to i32
  store i32 %conv283, i32* %x0277, align 4, !tbaa !5
  br label %for.cond.284

for.cond.284:                                     ; preds = %if.end.302, %for.body.276
  br label %do.body.285

do.body.285:                                      ; preds = %for.cond.284
  br label %do.cond.286

do.cond.286:                                      ; preds = %do.body.285
  br label %do.end.287

do.end.287:                                       ; preds = %do.cond.286
  br label %do.body.288

do.body.288:                                      ; preds = %do.end.287
  br label %do.cond.289

do.cond.289:                                      ; preds = %do.body.288
  br label %do.end.290

do.end.290:                                       ; preds = %do.cond.289
  %235 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction291 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %235, i32 0, i32 8
  %236 = load i32, i32* %direction291, align 4, !tbaa !178
  %237 = load i32, i32* %inside, align 4, !tbaa !5
  %add292 = add nsw i32 %237, %236
  store i32 %add292, i32* %inside, align 4, !tbaa !5
  %238 = load i32, i32* %inside, align 4, !tbaa !5
  %rule = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 15
  %239 = load i32, i32* %rule, align 4, !tbaa !98
  %and293 = and i32 %238, %239
  %cmp294 = icmp ne i32 %and293, 0
  br i1 %cmp294, label %if.end.297, label %if.then.296

if.then.296:                                      ; preds = %do.end.290
  br label %for.end.303

if.end.297:                                       ; preds = %do.end.290
  %240 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next298 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %240, i32 0, i32 15
  %241 = load %struct.active_line_s*, %struct.active_line_s** %next298, align 8, !tbaa !189
  store %struct.active_line_s* %241, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp299 = icmp eq %struct.active_line_s* %241, null
  br i1 %cmp299, label %if.then.301, label %if.end.302

if.then.301:                                      ; preds = %if.end.297
  store i32 40, i32* %cleanup.dest.slot
  br label %cleanup.313

if.end.302:                                       ; preds = %if.end.297
  br label %for.cond.284

for.end.303:                                      ; preds = %if.then.296
  %242 = load i32, i32* %x0277, align 4, !tbaa !5
  %243 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current304 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %243, i32 0, i32 5
  %244 = load i32, i32* %x_current304, align 4, !tbaa !204
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %245 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add305 = add nsw i32 %244, %245
  %add306 = add nsw i32 %add305, 128
  %shr307 = ashr i32 %add306, 8
  %call308 = call i32 @range_list_add(%struct.coord_range_list_s* %rlist, i32 %242, i32 %shr307) #5
  store i32 %call308, i32* %code, align 4, !tbaa !5
  %246 = load i32, i32* %code, align 4, !tbaa !5
  %cmp309 = icmp slt i32 %246, 0
  br i1 %cmp309, label %if.then.311, label %if.end.312

if.then.311:                                      ; preds = %for.end.303
  store i32 28, i32* %cleanup.dest.slot
  br label %cleanup.313

if.end.312:                                       ; preds = %for.end.303
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.313

cleanup.313:                                      ; preds = %if.then.311, %if.then.301, %if.end.312
  %247 = bitcast i32* %x0277 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %247) #1
  %cleanup.dest.314 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.314, label %cleanup.319 [
    i32 0, label %cleanup.cont.315
    i32 40, label %out
  ]

cleanup.cont.315:                                 ; preds = %cleanup.313
  br label %for.inc.316

for.inc.316:                                      ; preds = %cleanup.cont.315
  %248 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next317 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %248, i32 0, i32 15
  %249 = load %struct.active_line_s*, %struct.active_line_s** %next317, align 8, !tbaa !189
  store %struct.active_line_s* %249, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.273

for.end.318:                                      ; preds = %for.cond.273
  br label %out

out:                                              ; preds = %for.end.318, %cleanup.313
  store i32 -2147483648, i32* %y_min, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.319

cleanup.319:                                      ; preds = %out, %cleanup.313
  %250 = bitcast i32* %inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %250) #1
  %cleanup.dest.320 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.320, label %cleanup.379 [
    i32 0, label %cleanup.cont.321
  ]

cleanup.cont.321:                                 ; preds = %cleanup.319
  br label %if.end.323

if.else.322:                                      ; preds = %if.then.265
  %251 = load i32, i32* %y, align 4, !tbaa !5
  store i32 %251, i32* %y_min, align 4, !tbaa !5
  br label %if.end.323

if.end.323:                                       ; preds = %if.else.322, %cleanup.cont.321
  %252 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %252, i32 0, i32 8
  %253 = load %struct.active_line_s*, %struct.active_line_s** %h_list0, align 8, !tbaa !124
  store %struct.active_line_s* %253, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.324

for.cond.324:                                     ; preds = %for.inc.375, %if.end.323
  %254 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp325 = icmp ne %struct.active_line_s* %254, null
  br i1 %cmp325, label %for.body.327, label %for.end.377

for.body.327:                                     ; preds = %for.cond.324
  %255 = bitcast i32* %x0328 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %255) #1
  %256 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start329 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %256, i32 0, i32 0
  %x330 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start329, i32 0, i32 0
  %257 = load i32, i32* %x330, align 4, !tbaa !193
  %258 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end331 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %258, i32 0, i32 1
  %x332 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end331, i32 0, i32 0
  %259 = load i32, i32* %x332, align 4, !tbaa !194
  %cmp333 = icmp slt i32 %257, %259
  br i1 %cmp333, label %cond.true.335, label %cond.false.338

cond.true.335:                                    ; preds = %for.body.327
  %260 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start336 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %260, i32 0, i32 0
  %x337 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start336, i32 0, i32 0
  %261 = load i32, i32* %x337, align 4, !tbaa !193
  br label %cond.end.341

cond.false.338:                                   ; preds = %for.body.327
  %262 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end339 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %262, i32 0, i32 1
  %x340 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end339, i32 0, i32 0
  %263 = load i32, i32* %x340, align 4, !tbaa !194
  br label %cond.end.341

cond.end.341:                                     ; preds = %cond.false.338, %cond.true.335
  %cond342 = phi i32 [ %261, %cond.true.335 ], [ %263, %cond.false.338 ]
  store i32 %cond342, i32* %x0328, align 4, !tbaa !5
  %264 = bitcast i32* %x1343 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %264) #1
  %265 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start344 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %265, i32 0, i32 0
  %x345 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start344, i32 0, i32 0
  %266 = load i32, i32* %x345, align 4, !tbaa !193
  %267 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end346 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %267, i32 0, i32 1
  %x347 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end346, i32 0, i32 0
  %268 = load i32, i32* %x347, align 4, !tbaa !194
  %cmp348 = icmp sgt i32 %266, %268
  br i1 %cmp348, label %cond.true.350, label %cond.false.353

cond.true.350:                                    ; preds = %cond.end.341
  %269 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start351 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %269, i32 0, i32 0
  %x352 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start351, i32 0, i32 0
  %270 = load i32, i32* %x352, align 4, !tbaa !193
  br label %cond.end.356

cond.false.353:                                   ; preds = %cond.end.341
  %271 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end354 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %271, i32 0, i32 1
  %x355 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end354, i32 0, i32 0
  %272 = load i32, i32* %x355, align 4, !tbaa !194
  br label %cond.end.356

cond.end.356:                                     ; preds = %cond.false.353, %cond.true.350
  %cond357 = phi i32 [ %270, %cond.true.350 ], [ %272, %cond.false.353 ]
  store i32 %cond357, i32* %x1343, align 4, !tbaa !5
  %273 = load i32, i32* %x0328, align 4, !tbaa !5
  %adjust_left358 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 8
  %274 = load i32, i32* %adjust_left358, align 4, !tbaa !83
  %sub359 = sub nsw i32 %273, %274
  %add360 = add nsw i32 %sub359, 128
  %shr361 = ashr i32 %add360, 8
  %275 = load i32, i32* %x1343, align 4, !tbaa !5
  %adjust_right362 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %fo, i32 0, i32 9
  %276 = load i32, i32* %adjust_right362, align 4, !tbaa !85
  %add363 = add nsw i32 %275, %276
  %add364 = add nsw i32 %add363, 128
  %shr365 = ashr i32 %add364, 8
  %call366 = call i32 @range_list_add(%struct.coord_range_list_s* %rlist, i32 %shr361, i32 %shr365) #5
  store i32 %call366, i32* %code, align 4, !tbaa !5
  %277 = load i32, i32* %code, align 4, !tbaa !5
  %cmp367 = icmp slt i32 %277, 0
  br i1 %cmp367, label %if.then.369, label %if.end.370

if.then.369:                                      ; preds = %cond.end.356
  store i32 28, i32* %cleanup.dest.slot
  br label %cleanup.371

if.end.370:                                       ; preds = %cond.end.356
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.371

cleanup.371:                                      ; preds = %if.then.369, %if.end.370
  %278 = bitcast i32* %x1343 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %278) #1
  %279 = bitcast i32* %x0328 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %279) #1
  %cleanup.dest.373 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.373, label %cleanup.379 [
    i32 0, label %cleanup.cont.374
  ]

cleanup.cont.374:                                 ; preds = %cleanup.371
  br label %for.inc.375

for.inc.375:                                      ; preds = %cleanup.cont.374
  %280 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next376 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %280, i32 0, i32 15
  %281 = load %struct.active_line_s*, %struct.active_line_s** %next376, align 8, !tbaa !189
  store %struct.active_line_s* %281, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond.324

for.end.377:                                      ; preds = %for.cond.324
  %282 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %283 = load i32, i32* %y_min, align 4, !tbaa !5
  %284 = load i32, i32* %y_top, align 4, !tbaa !5
  %call378 = call i32 @merge_ranges(%struct.coord_range_list_s* %rlist, %struct.line_list_s* %282, i32 %283, i32 %284) #5
  store i32 %call378, i32* %code, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.379

cleanup.379:                                      ; preds = %for.end.377, %cleanup.371, %cleanup.319
  %285 = bitcast i32* %y_min to i8*
  call void @llvm.lifetime.end(i64 4, i8* %285) #1
  %cleanup.dest.380 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.380, label %cleanup.384 [
    i32 0, label %cleanup.cont.381
  ]

cleanup.cont.381:                                 ; preds = %cleanup.379
  br label %if.end.382

if.end.382:                                       ; preds = %cleanup.cont.381, %if.end.262
  %286 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %h_list0383 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %286, i32 0, i32 8
  store %struct.active_line_s* null, %struct.active_line_s** %h_list0383, align 8, !tbaa !124
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.384

cleanup.384:                                      ; preds = %if.end.382, %cleanup.379, %cleanup.258, %cleanup, %if.then.14
  %287 = bitcast i32* %new_band to i8*
  call void @llvm.lifetime.end(i64 4, i8* %287) #1
  %288 = bitcast i32* %x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %288) #1
  %289 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %289) #1
  %290 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %290) #1
  %cleanup.dest.388 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.388, label %cleanup.394 [
    i32 0, label %cleanup.cont.389
    i32 2, label %do.end.393
    i32 28, label %done
  ]

cleanup.cont.389:                                 ; preds = %cleanup.384
  br label %do.cond.390

do.cond.390:                                      ; preds = %cleanup.cont.389
  %291 = load i32, i32* %code, align 4, !tbaa !5
  %cmp391 = icmp sge i32 %291, 0
  br i1 %cmp391, label %do.body, label %do.end.393

do.end.393:                                       ; preds = %do.cond.390, %cleanup.384
  br label %done

done:                                             ; preds = %do.end.393, %cleanup.384
  call void @range_list_free(%struct.coord_range_list_s* %rlist) #5
  %292 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %292, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.394

cleanup.394:                                      ; preds = %done, %cleanup.384, %if.then
  %293 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %293) #1
  %294 = bitcast [20 x %struct.coord_range_s]* %rlocal to i8*
  call void @llvm.lifetime.end(i64 640, i8* %294) #1
  %295 = bitcast %struct.coord_range_list_s* %rlist to i8*
  call void @llvm.lifetime.end(i64 120, i8* %295) #1
  %296 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %296) #1
  %297 = bitcast i32* %y_top to i8*
  call void @llvm.lifetime.end(i64 4, i8* %297) #1
  %298 = bitcast i32* %y_bot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %298) #1
  %299 = bitcast i32* %y0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %299) #1
  %300 = bitcast i32* %y_frac_max to i8*
  call void @llvm.lifetime.end(i64 4, i8* %300) #1
  %301 = bitcast i32* %y_frac_min to i8*
  call void @llvm.lifetime.end(i64 4, i8* %301) #1
  %302 = bitcast i32* %y_limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %302) #1
  %303 = bitcast %struct.active_line_s** %yll to i8*
  call void @llvm.lifetime.end(i64 8, i8* %303) #1
  %304 = bitcast %struct.fill_options_s* %fo to i8*
  call void @llvm.lifetime.end(i64 96, i8* %304) #1
  %305 = load i32, i32* %retval
  ret i32 %305
}

; Function Attrs: nounwind uwtable
define internal void @range_list_init(%struct.coord_range_list_s* %pcrl, %struct.coord_range_s* %pcr_local, i32 %num_local, %struct.gs_memory_s* %mem) #0 {
entry:
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  %pcr_local.addr = alloca %struct.coord_range_s*, align 8
  %num_local.addr = alloca i32, align 4
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  store %struct.coord_range_s* %pcr_local, %struct.coord_range_s** %pcr_local.addr, align 8, !tbaa !1
  store i32 %num_local, i32* %num_local.addr, align 4, !tbaa !5
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %0 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %1 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %1, i32 0, i32 0
  store %struct.gs_memory_s* %0, %struct.gs_memory_s** %memory, align 8, !tbaa !222
  %2 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr_local.addr, align 8, !tbaa !1
  %3 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %local = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %3, i32 0, i32 1
  %next = getelementptr inbounds %struct.rl_, %struct.rl_* %local, i32 0, i32 1
  store %struct.coord_range_s* %2, %struct.coord_range_s** %next, align 8, !tbaa !223
  %4 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %local1 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %4, i32 0, i32 1
  %first = getelementptr inbounds %struct.rl_, %struct.rl_* %local1, i32 0, i32 0
  store %struct.coord_range_s* %2, %struct.coord_range_s** %first, align 8, !tbaa !224
  %5 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr_local.addr, align 8, !tbaa !1
  %6 = load i32, i32* %num_local.addr, align 4, !tbaa !5
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %5, i64 %idx.ext
  %7 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %local2 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %7, i32 0, i32 1
  %limit = getelementptr inbounds %struct.rl_, %struct.rl_* %local2, i32 0, i32 2
  store %struct.coord_range_s* %add.ptr, %struct.coord_range_s** %limit, align 8, !tbaa !225
  %8 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %8, i32 0, i32 3
  store %struct.coord_range_s* null, %struct.coord_range_s** %freed, align 8, !tbaa !226
  %9 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %allocated = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %9, i32 0, i32 2
  store %struct.coord_range_s* null, %struct.coord_range_s** %allocated, align 8, !tbaa !227
  %10 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first3 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %10, i32 0, i32 5
  %rmax = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first3, i32 0, i32 1
  store i32 -2147483648, i32* %rmax, align 4, !tbaa !228
  %11 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first4 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %11, i32 0, i32 5
  %rmin = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first4, i32 0, i32 0
  store i32 -2147483648, i32* %rmin, align 4, !tbaa !229
  %12 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first5 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %12, i32 0, i32 5
  %prev = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first5, i32 0, i32 2
  store %struct.coord_range_s* null, %struct.coord_range_s** %prev, align 8, !tbaa !230
  %13 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %13, i32 0, i32 6
  %rmax6 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %last, i32 0, i32 1
  store i32 2147483647, i32* %rmax6, align 4, !tbaa !231
  %14 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last7 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %14, i32 0, i32 6
  %rmin8 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %last7, i32 0, i32 0
  store i32 2147483647, i32* %rmin8, align 4, !tbaa !232
  %15 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last9 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %15, i32 0, i32 6
  %next10 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %last9, i32 0, i32 3
  store %struct.coord_range_s* null, %struct.coord_range_s** %next10, align 8, !tbaa !233
  %16 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  call void @range_list_clear(%struct.coord_range_list_s* %16) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @range_list_reset(%struct.coord_range_list_s* %pcrl) #0 {
entry:
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %0 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %0, i32 0, i32 5
  %next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first, i32 0, i32 3
  %1 = load %struct.coord_range_s*, %struct.coord_range_s** %next, align 8, !tbaa !215
  %2 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %2, i32 0, i32 6
  %cmp = icmp ne %struct.coord_range_s* %1, %last
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %3, i32 0, i32 3
  %4 = load %struct.coord_range_s*, %struct.coord_range_s** %freed, align 8, !tbaa !226
  %5 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last1 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %5, i32 0, i32 6
  %prev = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %last1, i32 0, i32 2
  %6 = load %struct.coord_range_s*, %struct.coord_range_s** %prev, align 8, !tbaa !234
  %next2 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %6, i32 0, i32 3
  store %struct.coord_range_s* %4, %struct.coord_range_s** %next2, align 8, !tbaa !221
  %7 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first3 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %7, i32 0, i32 5
  %next4 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first3, i32 0, i32 3
  %8 = load %struct.coord_range_s*, %struct.coord_range_s** %next4, align 8, !tbaa !215
  %9 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed5 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %9, i32 0, i32 3
  store %struct.coord_range_s* %8, %struct.coord_range_s** %freed5, align 8, !tbaa !226
  %10 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  call void @range_list_clear(%struct.coord_range_list_s* %10) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @range_list_add(%struct.coord_range_list_s* %pcrl, i32 %rmin, i32 %rmax) #0 {
entry:
  %retval = alloca i32, align 4
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  %rmin.addr = alloca i32, align 4
  %rmax.addr = alloca i32, align 4
  %pcr = alloca %struct.coord_range_s*, align 8
  %cleanup.dest.slot = alloca i32
  %prev59 = alloca %struct.coord_range_s*, align 8
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  store i32 %rmin, i32* %rmin.addr, align 4, !tbaa !5
  store i32 %rmax, i32* %rmax.addr, align 4, !tbaa !5
  %0 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %current = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %1, i32 0, i32 4
  %2 = load %struct.coord_range_s*, %struct.coord_range_s** %current, align 8, !tbaa !235
  store %struct.coord_range_s* %2, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %3 = load i32, i32* %rmin.addr, align 4, !tbaa !5
  %4 = load i32, i32* %rmax.addr, align 4, !tbaa !5
  %cmp = icmp sge i32 %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.74

if.end:                                           ; preds = %entry
  br label %top

top:                                              ; preds = %if.end.16, %if.end.7, %if.end
  %5 = load i32, i32* %rmax.addr, align 4, !tbaa !5
  %6 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmin1 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %6, i32 0, i32 0
  %7 = load i32, i32* %rmin1, align 4, !tbaa !219
  %cmp2 = icmp slt i32 %5, %7
  br i1 %cmp2, label %if.then.3, label %if.end.9

if.then.3:                                        ; preds = %top
  %8 = load i32, i32* %rmin.addr, align 4, !tbaa !5
  %9 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %9, i32 0, i32 2
  %10 = load %struct.coord_range_s*, %struct.coord_range_s** %prev, align 8, !tbaa !236
  %rmax4 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %10, i32 0, i32 1
  %11 = load i32, i32* %rmax4, align 4, !tbaa !220
  %cmp5 = icmp sgt i32 %8, %11
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.then.3
  br label %ins

if.end.7:                                         ; preds = %if.then.3
  %12 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev8 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %12, i32 0, i32 2
  %13 = load %struct.coord_range_s*, %struct.coord_range_s** %prev8, align 8, !tbaa !236
  store %struct.coord_range_s* %13, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  br label %top

if.end.9:                                         ; preds = %top
  %14 = load i32, i32* %rmin.addr, align 4, !tbaa !5
  %15 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmax10 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %15, i32 0, i32 1
  %16 = load i32, i32* %rmax10, align 4, !tbaa !220
  %cmp11 = icmp sgt i32 %14, %16
  br i1 %cmp11, label %if.then.12, label %if.end.17

if.then.12:                                       ; preds = %if.end.9
  %17 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %17, i32 0, i32 3
  %18 = load %struct.coord_range_s*, %struct.coord_range_s** %next, align 8, !tbaa !221
  store %struct.coord_range_s* %18, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %19 = load i32, i32* %rmax.addr, align 4, !tbaa !5
  %20 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmin13 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %20, i32 0, i32 0
  %21 = load i32, i32* %rmin13, align 4, !tbaa !219
  %cmp14 = icmp slt i32 %19, %21
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.then.12
  br label %ins

if.end.16:                                        ; preds = %if.then.12
  br label %top

if.end.17:                                        ; preds = %if.end.9
  br label %while.cond

while.cond:                                       ; preds = %if.end.24, %if.end.17
  %22 = load i32, i32* %rmin.addr, align 4, !tbaa !5
  %23 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev18 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %23, i32 0, i32 2
  %24 = load %struct.coord_range_s*, %struct.coord_range_s** %prev18, align 8, !tbaa !236
  %rmax19 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %24, i32 0, i32 1
  %25 = load i32, i32* %rmax19, align 4, !tbaa !220
  %cmp20 = icmp sle i32 %22, %25
  br i1 %cmp20, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %26 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev21 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %26, i32 0, i32 2
  %27 = load %struct.coord_range_s*, %struct.coord_range_s** %prev21, align 8, !tbaa !236
  %prev22 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %27, i32 0, i32 2
  %28 = load %struct.coord_range_s*, %struct.coord_range_s** %prev22, align 8, !tbaa !236
  %tobool = icmp ne %struct.coord_range_s* %28, null
  br i1 %tobool, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %while.body
  br label %while.end

if.end.24:                                        ; preds = %while.body
  %29 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev25 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %29, i32 0, i32 2
  %30 = load %struct.coord_range_s*, %struct.coord_range_s** %prev25, align 8, !tbaa !236
  %rmin26 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %30, i32 0, i32 0
  %31 = load i32, i32* %rmin26, align 4, !tbaa !219
  %32 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmin27 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %32, i32 0, i32 0
  store i32 %31, i32* %rmin27, align 4, !tbaa !219
  %33 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %34 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev28 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %34, i32 0, i32 2
  %35 = load %struct.coord_range_s*, %struct.coord_range_s** %prev28, align 8, !tbaa !236
  call void @range_delete(%struct.coord_range_list_s* %33, %struct.coord_range_s* %35) #5
  br label %while.cond

while.end:                                        ; preds = %if.then.23, %while.cond
  br label %while.cond.29

while.cond.29:                                    ; preds = %if.end.38, %while.end
  %36 = load i32, i32* %rmax.addr, align 4, !tbaa !5
  %37 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next30 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %37, i32 0, i32 3
  %38 = load %struct.coord_range_s*, %struct.coord_range_s** %next30, align 8, !tbaa !221
  %rmin31 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %38, i32 0, i32 0
  %39 = load i32, i32* %rmin31, align 4, !tbaa !219
  %cmp32 = icmp sge i32 %36, %39
  br i1 %cmp32, label %while.body.33, label %while.end.43

while.body.33:                                    ; preds = %while.cond.29
  %40 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next34 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %40, i32 0, i32 3
  %41 = load %struct.coord_range_s*, %struct.coord_range_s** %next34, align 8, !tbaa !221
  %next35 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %41, i32 0, i32 3
  %42 = load %struct.coord_range_s*, %struct.coord_range_s** %next35, align 8, !tbaa !221
  %tobool36 = icmp ne %struct.coord_range_s* %42, null
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %while.body.33
  br label %while.end.43

if.end.38:                                        ; preds = %while.body.33
  %43 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next39 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %43, i32 0, i32 3
  %44 = load %struct.coord_range_s*, %struct.coord_range_s** %next39, align 8, !tbaa !221
  %rmax40 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %44, i32 0, i32 1
  %45 = load i32, i32* %rmax40, align 4, !tbaa !220
  %46 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmax41 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %46, i32 0, i32 1
  store i32 %45, i32* %rmax41, align 4, !tbaa !220
  %47 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %48 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next42 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %48, i32 0, i32 3
  %49 = load %struct.coord_range_s*, %struct.coord_range_s** %next42, align 8, !tbaa !221
  call void @range_delete(%struct.coord_range_list_s* %47, %struct.coord_range_s* %49) #5
  br label %while.cond.29

while.end.43:                                     ; preds = %if.then.37, %while.cond.29
  %50 = load i32, i32* %rmin.addr, align 4, !tbaa !5
  %51 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmin44 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %51, i32 0, i32 0
  %52 = load i32, i32* %rmin44, align 4, !tbaa !219
  %cmp45 = icmp slt i32 %50, %52
  br i1 %cmp45, label %if.then.46, label %if.end.48

if.then.46:                                       ; preds = %while.end.43
  br label %do.body

do.body:                                          ; preds = %if.then.46
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %53 = load i32, i32* %rmin.addr, align 4, !tbaa !5
  %54 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmin47 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %54, i32 0, i32 0
  store i32 %53, i32* %rmin47, align 4, !tbaa !219
  br label %if.end.48

if.end.48:                                        ; preds = %do.end, %while.end.43
  %55 = load i32, i32* %rmax.addr, align 4, !tbaa !5
  %56 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmax49 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %56, i32 0, i32 1
  %57 = load i32, i32* %rmax49, align 4, !tbaa !220
  %cmp50 = icmp sgt i32 %55, %57
  br i1 %cmp50, label %if.then.51, label %if.end.56

if.then.51:                                       ; preds = %if.end.48
  br label %do.body.52

do.body.52:                                       ; preds = %if.then.51
  br label %do.cond.53

do.cond.53:                                       ; preds = %do.body.52
  br label %do.end.54

do.end.54:                                        ; preds = %do.cond.53
  %58 = load i32, i32* %rmax.addr, align 4, !tbaa !5
  %59 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %rmax55 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %59, i32 0, i32 1
  store i32 %58, i32* %rmax55, align 4, !tbaa !220
  br label %if.end.56

if.end.56:                                        ; preds = %do.end.54, %if.end.48
  %60 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next57 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %60, i32 0, i32 3
  %61 = load %struct.coord_range_s*, %struct.coord_range_s** %next57, align 8, !tbaa !221
  %62 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %current58 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %62, i32 0, i32 4
  store %struct.coord_range_s* %61, %struct.coord_range_s** %current58, align 8, !tbaa !235
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.74

ins:                                              ; preds = %if.then.15, %if.then.6
  %63 = bitcast %struct.coord_range_s** %prev59 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %63) #1
  %64 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %call = call %struct.coord_range_s* @range_alloc(%struct.coord_range_list_s* %64) #5
  store %struct.coord_range_s* %call, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %65 = load %struct.coord_range_s*, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %cmp60 = icmp eq %struct.coord_range_s* %65, null
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %ins
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.62:                                        ; preds = %ins
  br label %do.body.63

do.body.63:                                       ; preds = %if.end.62
  br label %do.cond.64

do.cond.64:                                       ; preds = %do.body.63
  br label %do.end.65

do.end.65:                                        ; preds = %do.cond.64
  %66 = load i32, i32* %rmin.addr, align 4, !tbaa !5
  %67 = load %struct.coord_range_s*, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %rmin66 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %67, i32 0, i32 0
  store i32 %66, i32* %rmin66, align 4, !tbaa !219
  %68 = load i32, i32* %rmax.addr, align 4, !tbaa !5
  %69 = load %struct.coord_range_s*, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %rmax67 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %69, i32 0, i32 1
  store i32 %68, i32* %rmax67, align 4, !tbaa !220
  %70 = load %struct.coord_range_s*, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %71 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev68 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %71, i32 0, i32 2
  %72 = load %struct.coord_range_s*, %struct.coord_range_s** %prev68, align 8, !tbaa !236
  %73 = load %struct.coord_range_s*, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %prev69 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %73, i32 0, i32 2
  store %struct.coord_range_s* %72, %struct.coord_range_s** %prev69, align 8, !tbaa !236
  %next70 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %72, i32 0, i32 3
  store %struct.coord_range_s* %70, %struct.coord_range_s** %next70, align 8, !tbaa !221
  %74 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %75 = load %struct.coord_range_s*, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %next71 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %75, i32 0, i32 3
  store %struct.coord_range_s* %74, %struct.coord_range_s** %next71, align 8, !tbaa !221
  %76 = load %struct.coord_range_s*, %struct.coord_range_s** %prev59, align 8, !tbaa !1
  %77 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %prev72 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %77, i32 0, i32 2
  store %struct.coord_range_s* %76, %struct.coord_range_s** %prev72, align 8, !tbaa !236
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end.65, %if.then.61
  %78 = bitcast %struct.coord_range_s** %prev59 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %78) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.74 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %79 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %80 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %current73 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %80, i32 0, i32 4
  store %struct.coord_range_s* %79, %struct.coord_range_s** %current73, align 8, !tbaa !235
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.74

cleanup.74:                                       ; preds = %cleanup.cont, %cleanup, %if.end.56, %if.then
  %81 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %82 = load i32, i32* %retval
  ret i32 %82
}

; Function Attrs: nounwind uwtable
define internal i32 @merge_ranges(%struct.coord_range_list_s* %pcrl, %struct.line_list_s* %ll, i32 %y_min, i32 %y_top) #0 {
entry:
  %retval = alloca i32, align 4
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  %ll.addr = alloca %struct.line_list_s*, align 8
  %y_min.addr = alloca i32, align 4
  %y_top.addr = alloca i32, align 4
  %alp = alloca %struct.active_line_s*, align 8
  %nlp = alloca %struct.active_line_s*, align 8
  %code = alloca i32, align 4
  %x0 = alloca i32, align 4
  %x1 = alloca i32, align 4
  %xt = alloca i32, align 4
  %forth = alloca i32, align 4
  %xe = alloca i32, align 4
  %ye = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  store %struct.line_list_s* %ll, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  store i32 %y_min, i32* %y_min.addr, align 4, !tbaa !5
  store i32 %y_top, i32* %y_top.addr, align 4, !tbaa !5
  %0 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %code, align 4, !tbaa !5
  %3 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  call void @range_list_rescan(%struct.coord_range_list_s* %3) #5
  %4 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %x_head = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %4, i32 0, i32 7
  %next = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %x_head, i32 0, i32 15
  %5 = load %struct.active_line_s*, %struct.active_line_s** %next, align 8, !tbaa !201
  store %struct.active_line_s* %5, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %cmp = icmp ne %struct.active_line_s* %6, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %7 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1 = icmp sge i32 %7, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %8 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %8, label %for.body, label %for.end.123

for.body:                                         ; preds = %land.end
  %9 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %x_current = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %10, i32 0, i32 5
  %11 = load i32, i32* %x_current, align 4, !tbaa !204
  store i32 %11, i32* %x0, align 4, !tbaa !5
  %12 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %xt to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %forth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %15 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %direction = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %15, i32 0, i32 8
  %16 = load i32, i32* %direction, align 4, !tbaa !178
  %cmp2 = icmp eq i32 %16, 1
  br i1 %cmp2, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %for.body
  %17 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %17, i32 0, i32 11
  %curve = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi, i32 0, i32 29
  %18 = load i32, i32* %curve, align 4, !tbaa !190
  %tobool = icmp ne i32 %18, 0
  %lnot = xor i1 %tobool, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %for.body
  %19 = phi i1 [ true, %for.body ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %19 to i32
  store i32 %lor.ext, i32* %forth, align 4, !tbaa !5
  %20 = bitcast i32* %xe to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #1
  %21 = load i32, i32* %forth, align 4, !tbaa !5
  %tobool3 = icmp ne i32 %21, 0
  br i1 %tobool3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.end
  %22 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi4 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %22, i32 0, i32 11
  %x3 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi4, i32 0, i32 2
  %23 = load i32, i32* %x3, align 4, !tbaa !237
  br label %cond.end

cond.false:                                       ; preds = %lor.end
  %24 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi5 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %24, i32 0, i32 11
  %x06 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi5, i32 0, i32 0
  %25 = load i32, i32* %x06, align 4, !tbaa !238
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %25, %cond.false ]
  store i32 %cond, i32* %xe, align 4, !tbaa !5
  %26 = bitcast i32* %ye to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = load i32, i32* %forth, align 4, !tbaa !5
  %tobool7 = icmp ne i32 %27, 0
  br i1 %tobool7, label %cond.true.8, label %cond.false.10

cond.true.8:                                      ; preds = %cond.end
  %28 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi9 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %28, i32 0, i32 11
  %y3 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi9, i32 0, i32 3
  %29 = load i32, i32* %y3, align 4, !tbaa !213
  br label %cond.end.12

cond.false.10:                                    ; preds = %cond.end
  %30 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %fi11 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %30, i32 0, i32 11
  %y0 = getelementptr inbounds %struct.gx_flattened_iterator_s, %struct.gx_flattened_iterator_s* %fi11, i32 0, i32 1
  %31 = load i32, i32* %y0, align 4, !tbaa !214
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.false.10, %cond.true.8
  %cond13 = phi i32 [ %29, %cond.true.8 ], [ %31, %cond.false.10 ]
  store i32 %cond13, i32* %ye, align 4, !tbaa !5
  %32 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %next14 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %32, i32 0, i32 15
  %33 = load %struct.active_line_s*, %struct.active_line_s** %next14, align 8, !tbaa !189
  store %struct.active_line_s* %33, %struct.active_line_s** %nlp, align 8, !tbaa !1
  %34 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %34, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %35 = load i32, i32* %y, align 4, !tbaa !187
  %36 = load i32, i32* %y_min.addr, align 4, !tbaa !5
  %cmp15 = icmp slt i32 %35, %36
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.12
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.12
  %37 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %monotonic_x = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %37, i32 0, i32 9
  %38 = load i32, i32* %monotonic_x, align 4, !tbaa !183
  %tobool16 = icmp ne i32 %38, 0
  br i1 %tobool16, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %39 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %monotonic_y = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %39, i32 0, i32 10
  %40 = load i32, i32* %monotonic_y, align 4, !tbaa !182
  %tobool17 = icmp ne i32 %40, 0
  br i1 %tobool17, label %land.lhs.true.18, label %if.else

land.lhs.true.18:                                 ; preds = %land.lhs.true
  %41 = load i32, i32* %ye, align 4, !tbaa !5
  %42 = load i32, i32* %y_top.addr, align 4, !tbaa !5
  %cmp19 = icmp sle i32 %41, %42
  br i1 %cmp19, label %if.then.20, label %if.else

if.then.20:                                       ; preds = %land.lhs.true.18
  br label %do.body

do.body:                                          ; preds = %if.then.20
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %43 = load i32, i32* %xe, align 4, !tbaa !5
  store i32 %43, i32* %x1, align 4, !tbaa !5
  %44 = load i32, i32* %x0, align 4, !tbaa !5
  %45 = load i32, i32* %x1, align 4, !tbaa !5
  %cmp21 = icmp sgt i32 %44, %45
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %do.end
  %46 = load i32, i32* %x0, align 4, !tbaa !5
  store i32 %46, i32* %xt, align 4, !tbaa !5
  %47 = load i32, i32* %x1, align 4, !tbaa !5
  store i32 %47, i32* %x0, align 4, !tbaa !5
  %48 = load i32, i32* %xt, align 4, !tbaa !5
  store i32 %48, i32* %x1, align 4, !tbaa !5
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.22, %do.end
  %49 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %50 = load i32, i32* %x0, align 4, !tbaa !5
  %51 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %51, i32 0, i32 19
  %52 = load %struct.fill_options_s*, %struct.fill_options_s** %fo, align 8, !tbaa !150
  %adjust_left = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %52, i32 0, i32 8
  %53 = load i32, i32* %adjust_left, align 4, !tbaa !83
  %sub = sub nsw i32 %50, %53
  %conv = sext i32 %sub to i64
  %add = add nsw i64 %conv, 127
  %shr = ashr i64 %add, 8
  %conv24 = trunc i64 %shr to i32
  %54 = load i32, i32* %x1, align 4, !tbaa !5
  %55 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo25 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %55, i32 0, i32 19
  %56 = load %struct.fill_options_s*, %struct.fill_options_s** %fo25, align 8, !tbaa !150
  %adjust_right = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %56, i32 0, i32 9
  %57 = load i32, i32* %adjust_right, align 4, !tbaa !85
  %add26 = add nsw i32 %54, %57
  %add27 = add nsw i32 %add26, 128
  %shr28 = ashr i32 %add27, 8
  %call = call i32 @range_list_add(%struct.coord_range_list_s* %49, i32 %conv24, i32 %shr28) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %58 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %58, i32 0, i32 12
  store i32 0, i32* %more_flattened, align 4, !tbaa !179
  br label %if.end.117

if.else:                                          ; preds = %land.lhs.true.18, %land.lhs.true, %if.end
  %59 = load i32, i32* %x0, align 4, !tbaa !5
  store i32 %59, i32* %x1, align 4, !tbaa !5
  br label %for.cond.29

for.cond.29:                                      ; preds = %if.end.103, %if.else
  %60 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %60, i32 0, i32 1
  %y30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %61 = load i32, i32* %y30, align 4, !tbaa !195
  %62 = load i32, i32* %y_top.addr, align 4, !tbaa !5
  %cmp31 = icmp sle i32 %61, %62
  br i1 %cmp31, label %if.then.33, label %if.else.35

if.then.33:                                       ; preds = %for.cond.29
  %63 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end34 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %63, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end34, i32 0, i32 0
  %64 = load i32, i32* %x, align 4, !tbaa !194
  store i32 %64, i32* %xt, align 4, !tbaa !5
  br label %if.end.70

if.else.35:                                       ; preds = %for.cond.29
  %65 = load i32, i32* %y_top.addr, align 4, !tbaa !5
  %66 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end36 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %66, i32 0, i32 1
  %y37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end36, i32 0, i32 1
  %67 = load i32, i32* %y37, align 4, !tbaa !195
  %cmp38 = icmp eq i32 %65, %67
  br i1 %cmp38, label %cond.true.40, label %cond.false.43

cond.true.40:                                     ; preds = %if.else.35
  %68 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end41 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %68, i32 0, i32 1
  %x42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end41, i32 0, i32 0
  %69 = load i32, i32* %x42, align 4, !tbaa !194
  br label %cond.end.68

cond.false.43:                                    ; preds = %if.else.35
  %70 = load i32, i32* %y_top.addr, align 4, !tbaa !5
  %71 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %y_fast_max = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %71, i32 0, i32 3
  %72 = load i32, i32* %y_fast_max, align 4, !tbaa !199
  %cmp44 = icmp sle i32 %70, %72
  br i1 %cmp44, label %cond.true.46, label %cond.false.54

cond.true.46:                                     ; preds = %cond.false.43
  %73 = load i32, i32* %y_top.addr, align 4, !tbaa !5
  %74 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start47 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %74, i32 0, i32 0
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start47, i32 0, i32 1
  %75 = load i32, i32* %y48, align 4, !tbaa !187
  %sub49 = sub nsw i32 %73, %75
  %76 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %76, i32 0, i32 2
  %x50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff, i32 0, i32 0
  %77 = load i32, i32* %x50, align 4, !tbaa !196
  %mul = mul nsw i32 %sub49, %77
  %78 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %num_adjust = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %78, i32 0, i32 4
  %79 = load i32, i32* %num_adjust, align 4, !tbaa !198
  %add51 = add nsw i32 %mul, %79
  %80 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff52 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %80, i32 0, i32 2
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff52, i32 0, i32 1
  %81 = load i32, i32* %y53, align 4, !tbaa !197
  %div = sdiv i32 %add51, %81
  br label %cond.end.63

cond.false.54:                                    ; preds = %cond.false.43
  %82 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff55 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %82, i32 0, i32 2
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff55, i32 0, i32 0
  %83 = load i32, i32* %x56, align 4, !tbaa !196
  %84 = load i32, i32* %y_top.addr, align 4, !tbaa !5
  %85 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start57 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %85, i32 0, i32 0
  %y58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start57, i32 0, i32 1
  %86 = load i32, i32* %y58, align 4, !tbaa !187
  %sub59 = sub nsw i32 %84, %86
  %87 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %diff60 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %87, i32 0, i32 2
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %diff60, i32 0, i32 1
  %88 = load i32, i32* %y61, align 4, !tbaa !197
  %call62 = call i32 @fixed_mult_quo(i32 %83, i32 %sub59, i32 %88) #5
  br label %cond.end.63

cond.end.63:                                      ; preds = %cond.false.54, %cond.true.46
  %cond64 = phi i32 [ %div, %cond.true.46 ], [ %call62, %cond.false.54 ]
  %89 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start65 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %89, i32 0, i32 0
  %x66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start65, i32 0, i32 0
  %90 = load i32, i32* %x66, align 4, !tbaa !193
  %add67 = add nsw i32 %cond64, %90
  br label %cond.end.68

cond.end.68:                                      ; preds = %cond.end.63, %cond.true.40
  %cond69 = phi i32 [ %69, %cond.true.40 ], [ %add67, %cond.end.63 ]
  store i32 %cond69, i32* %xt, align 4, !tbaa !5
  br label %if.end.70

if.end.70:                                        ; preds = %cond.end.68, %if.then.33
  %91 = load i32, i32* %x0, align 4, !tbaa !5
  %92 = load i32, i32* %xt, align 4, !tbaa !5
  %cmp71 = icmp slt i32 %91, %92
  br i1 %cmp71, label %cond.true.73, label %cond.false.74

cond.true.73:                                     ; preds = %if.end.70
  %93 = load i32, i32* %x0, align 4, !tbaa !5
  br label %cond.end.75

cond.false.74:                                    ; preds = %if.end.70
  %94 = load i32, i32* %xt, align 4, !tbaa !5
  br label %cond.end.75

cond.end.75:                                      ; preds = %cond.false.74, %cond.true.73
  %cond76 = phi i32 [ %93, %cond.true.73 ], [ %94, %cond.false.74 ]
  store i32 %cond76, i32* %x0, align 4, !tbaa !5
  %95 = load i32, i32* %x1, align 4, !tbaa !5
  %96 = load i32, i32* %xt, align 4, !tbaa !5
  %cmp77 = icmp sgt i32 %95, %96
  br i1 %cmp77, label %cond.true.79, label %cond.false.80

cond.true.79:                                     ; preds = %cond.end.75
  %97 = load i32, i32* %x1, align 4, !tbaa !5
  br label %cond.end.81

cond.false.80:                                    ; preds = %cond.end.75
  %98 = load i32, i32* %xt, align 4, !tbaa !5
  br label %cond.end.81

cond.end.81:                                      ; preds = %cond.false.80, %cond.true.79
  %cond82 = phi i32 [ %97, %cond.true.79 ], [ %98, %cond.false.80 ]
  store i32 %cond82, i32* %x1, align 4, !tbaa !5
  %99 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %more_flattened83 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %99, i32 0, i32 12
  %100 = load i32, i32* %more_flattened83, align 4, !tbaa !179
  %tobool84 = icmp ne i32 %100, 0
  br i1 %tobool84, label %lor.lhs.false, label %if.then.89

lor.lhs.false:                                    ; preds = %cond.end.81
  %101 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end85 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %101, i32 0, i32 1
  %y86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end85, i32 0, i32 1
  %102 = load i32, i32* %y86, align 4, !tbaa !195
  %103 = load i32, i32* %y_top.addr, align 4, !tbaa !5
  %cmp87 = icmp sgt i32 %102, %103
  br i1 %cmp87, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %lor.lhs.false, %cond.end.81
  br label %for.end

if.end.90:                                        ; preds = %lor.lhs.false
  %104 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %call91 = call i32 @step_al(%struct.active_line_s* %104, i32 1) #5
  store i32 %call91, i32* %code, align 4, !tbaa !5
  %105 = load i32, i32* %code, align 4, !tbaa !5
  %cmp92 = icmp slt i32 %105, 0
  br i1 %cmp92, label %if.then.94, label %if.end.95

if.then.94:                                       ; preds = %if.end.90
  %106 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %106, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.95:                                        ; preds = %if.end.90
  %107 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %end96 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %107, i32 0, i32 1
  %y97 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end96, i32 0, i32 1
  %108 = load i32, i32* %y97, align 4, !tbaa !195
  %109 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  %start98 = getelementptr inbounds %struct.active_line_s, %struct.active_line_s* %109, i32 0, i32 0
  %y99 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start98, i32 0, i32 1
  %110 = load i32, i32* %y99, align 4, !tbaa !187
  %cmp100 = icmp slt i32 %108, %110
  br i1 %cmp100, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.end.95
  %111 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %112 = load %struct.active_line_s*, %struct.active_line_s** %alp, align 8, !tbaa !1
  call void @remove_al(%struct.line_list_s* %111, %struct.active_line_s* %112) #5
  br label %for.end

if.end.103:                                       ; preds = %if.end.95
  br label %for.cond.29

for.end:                                          ; preds = %if.then.102, %if.then.89
  %113 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %114 = load i32, i32* %x0, align 4, !tbaa !5
  %115 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo104 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %115, i32 0, i32 19
  %116 = load %struct.fill_options_s*, %struct.fill_options_s** %fo104, align 8, !tbaa !150
  %adjust_left105 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %116, i32 0, i32 8
  %117 = load i32, i32* %adjust_left105, align 4, !tbaa !83
  %sub106 = sub nsw i32 %114, %117
  %conv107 = sext i32 %sub106 to i64
  %add108 = add nsw i64 %conv107, 127
  %shr109 = ashr i64 %add108, 8
  %conv110 = trunc i64 %shr109 to i32
  %118 = load i32, i32* %x1, align 4, !tbaa !5
  %119 = load %struct.line_list_s*, %struct.line_list_s** %ll.addr, align 8, !tbaa !1
  %fo111 = getelementptr inbounds %struct.line_list_s, %struct.line_list_s* %119, i32 0, i32 19
  %120 = load %struct.fill_options_s*, %struct.fill_options_s** %fo111, align 8, !tbaa !150
  %adjust_right112 = getelementptr inbounds %struct.fill_options_s, %struct.fill_options_s* %120, i32 0, i32 9
  %121 = load i32, i32* %adjust_right112, align 4, !tbaa !85
  %add113 = add nsw i32 %118, %121
  %add114 = add nsw i32 %add113, 128
  %shr115 = ashr i32 %add114, 8
  %call116 = call i32 @range_list_add(%struct.coord_range_list_s* %113, i32 %conv110, i32 %shr115) #5
  store i32 %call116, i32* %code, align 4, !tbaa !5
  br label %if.end.117

if.end.117:                                       ; preds = %for.end, %if.end.23
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.117, %if.then.94, %if.then
  %122 = bitcast i32* %ye to i8*
  call void @llvm.lifetime.end(i64 4, i8* %122) #1
  %123 = bitcast i32* %xe to i8*
  call void @llvm.lifetime.end(i64 4, i8* %123) #1
  %124 = bitcast i32* %forth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %124) #1
  %125 = bitcast i32* %xt to i8*
  call void @llvm.lifetime.end(i64 4, i8* %125) #1
  %126 = bitcast i32* %x1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %126) #1
  %127 = bitcast i32* %x0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %127) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.124 [
    i32 0, label %cleanup.cont
    i32 4, label %for.inc
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont, %cleanup
  %128 = load %struct.active_line_s*, %struct.active_line_s** %nlp, align 8, !tbaa !1
  store %struct.active_line_s* %128, %struct.active_line_s** %alp, align 8, !tbaa !1
  br label %for.cond

for.end.123:                                      ; preds = %land.end
  %129 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %129, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.124

cleanup.124:                                      ; preds = %for.end.123, %cleanup
  %130 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %130) #1
  %131 = bitcast %struct.active_line_s** %nlp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %131) #1
  %132 = bitcast %struct.active_line_s** %alp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %132) #1
  %133 = load i32, i32* %retval
  ret i32 %133
}

; Function Attrs: nounwind uwtable
define internal void @range_list_free(%struct.coord_range_list_s* %pcrl) #0 {
entry:
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  %pcr = alloca %struct.coord_range_s*, align 8
  %next = alloca %struct.coord_range_s*, align 8
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %0 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %allocated = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %1, i32 0, i32 2
  %2 = load %struct.coord_range_s*, %struct.coord_range_s** %allocated, align 8, !tbaa !227
  store %struct.coord_range_s* %2, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %cmp = icmp ne %struct.coord_range_s* %2, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = bitcast %struct.coord_range_s** %next to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %alloc_next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %4, i32 0, i32 4
  %5 = load %struct.coord_range_s*, %struct.coord_range_s** %alloc_next, align 8, !tbaa !239
  store %struct.coord_range_s* %5, %struct.coord_range_s** %next, align 8, !tbaa !1
  %6 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %6, i32 0, i32 0
  %7 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !222
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %7, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 2
  %8 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !114
  %9 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %9, i32 0, i32 0
  %10 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1, align 8, !tbaa !222
  %11 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %12 = bitcast %struct.coord_range_s* %11 to i8*
  call void %8(%struct.gs_memory_s* %10, i8* %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i32 0, i32 0)) #5
  %13 = load %struct.coord_range_s*, %struct.coord_range_s** %next, align 8, !tbaa !1
  %14 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %allocated2 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %14, i32 0, i32 2
  store %struct.coord_range_s* %13, %struct.coord_range_s** %allocated2, align 8, !tbaa !227
  %15 = bitcast %struct.coord_range_s** %next to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %16 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @range_list_clear(%struct.coord_range_list_s* %pcrl) #0 {
entry:
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %0, i32 0, i32 6
  %1 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %1, i32 0, i32 5
  %next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first, i32 0, i32 3
  store %struct.coord_range_s* %last, %struct.coord_range_s** %next, align 8, !tbaa !215
  %2 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first1 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %2, i32 0, i32 5
  %3 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last2 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %3, i32 0, i32 6
  %prev = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %last2, i32 0, i32 2
  store %struct.coord_range_s* %first1, %struct.coord_range_s** %prev, align 8, !tbaa !234
  %4 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %last3 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %4, i32 0, i32 6
  %5 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %current = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %5, i32 0, i32 4
  store %struct.coord_range_s* %last3, %struct.coord_range_s** %current, align 8, !tbaa !235
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @range_delete(%struct.coord_range_list_s* %pcrl, %struct.coord_range_s* %pcr) #0 {
entry:
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  %pcr.addr = alloca %struct.coord_range_s*, align 8
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  store %struct.coord_range_s* %pcr, %struct.coord_range_s** %pcr.addr, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %0, i32 0, i32 3
  %1 = load %struct.coord_range_s*, %struct.coord_range_s** %next, align 8, !tbaa !221
  %2 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %2, i32 0, i32 2
  %3 = load %struct.coord_range_s*, %struct.coord_range_s** %prev, align 8, !tbaa !236
  %next1 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %3, i32 0, i32 3
  store %struct.coord_range_s* %1, %struct.coord_range_s** %next1, align 8, !tbaa !221
  %4 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr.addr, align 8, !tbaa !1
  %prev2 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %4, i32 0, i32 2
  %5 = load %struct.coord_range_s*, %struct.coord_range_s** %prev2, align 8, !tbaa !236
  %6 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr.addr, align 8, !tbaa !1
  %next3 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %6, i32 0, i32 3
  %7 = load %struct.coord_range_s*, %struct.coord_range_s** %next3, align 8, !tbaa !221
  %prev4 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %7, i32 0, i32 2
  store %struct.coord_range_s* %5, %struct.coord_range_s** %prev4, align 8, !tbaa !236
  %8 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %8, i32 0, i32 3
  %9 = load %struct.coord_range_s*, %struct.coord_range_s** %freed, align 8, !tbaa !226
  %10 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr.addr, align 8, !tbaa !1
  %next5 = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %10, i32 0, i32 3
  store %struct.coord_range_s* %9, %struct.coord_range_s** %next5, align 8, !tbaa !221
  %11 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr.addr, align 8, !tbaa !1
  %12 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed6 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %12, i32 0, i32 3
  store %struct.coord_range_s* %11, %struct.coord_range_s** %freed6, align 8, !tbaa !226
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.coord_range_s* @range_alloc(%struct.coord_range_list_s* %pcrl) #0 {
entry:
  %retval = alloca %struct.coord_range_s*, align 8
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  %pcr = alloca %struct.coord_range_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %0 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %1, i32 0, i32 3
  %2 = load %struct.coord_range_s*, %struct.coord_range_s** %freed, align 8, !tbaa !226
  %tobool = icmp ne %struct.coord_range_s* %2, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed1 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %3, i32 0, i32 3
  %4 = load %struct.coord_range_s*, %struct.coord_range_s** %freed1, align 8, !tbaa !226
  store %struct.coord_range_s* %4, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %5 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %5, i32 0, i32 3
  %6 = load %struct.coord_range_s*, %struct.coord_range_s** %next, align 8, !tbaa !221
  %7 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %freed2 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %7, i32 0, i32 3
  store %struct.coord_range_s* %6, %struct.coord_range_s** %freed2, align 8, !tbaa !226
  br label %if.end.14

if.else:                                          ; preds = %entry
  %8 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %local = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %8, i32 0, i32 1
  %next3 = getelementptr inbounds %struct.rl_, %struct.rl_* %local, i32 0, i32 1
  %9 = load %struct.coord_range_s*, %struct.coord_range_s** %next3, align 8, !tbaa !223
  %10 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %local4 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %10, i32 0, i32 1
  %limit = getelementptr inbounds %struct.rl_, %struct.rl_* %local4, i32 0, i32 2
  %11 = load %struct.coord_range_s*, %struct.coord_range_s** %limit, align 8, !tbaa !225
  %cmp = icmp ult %struct.coord_range_s* %9, %11
  br i1 %cmp, label %if.then.5, label %if.else.8

if.then.5:                                        ; preds = %if.else
  %12 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %local6 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %12, i32 0, i32 1
  %next7 = getelementptr inbounds %struct.rl_, %struct.rl_* %local6, i32 0, i32 1
  %13 = load %struct.coord_range_s*, %struct.coord_range_s** %next7, align 8, !tbaa !223
  %incdec.ptr = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %13, i32 1
  store %struct.coord_range_s* %incdec.ptr, %struct.coord_range_s** %next7, align 8, !tbaa !223
  store %struct.coord_range_s* %13, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  br label %if.end.13

if.else.8:                                        ; preds = %if.else
  %14 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %14, i32 0, i32 0
  %15 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !222
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %15, i32 0, i32 1
  %alloc_struct = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 8
  %16 = load i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)** %alloc_struct, align 8, !tbaa !185
  %17 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %memory9 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %17, i32 0, i32 0
  %18 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory9, align 8, !tbaa !222
  %call = call i8* %16(%struct.gs_memory_s* %18, %struct.gs_memory_struct_type_s* @st_coord_range, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0)) #5
  %19 = bitcast i8* %call to %struct.coord_range_s*
  store %struct.coord_range_s* %19, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %20 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %cmp10 = icmp eq %struct.coord_range_s* %20, null
  br i1 %cmp10, label %if.then.11, label %if.end

if.then.11:                                       ; preds = %if.else.8
  store %struct.coord_range_s* null, %struct.coord_range_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.else.8
  %21 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %allocated = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %21, i32 0, i32 2
  %22 = load %struct.coord_range_s*, %struct.coord_range_s** %allocated, align 8, !tbaa !227
  %23 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %alloc_next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %23, i32 0, i32 4
  store %struct.coord_range_s* %22, %struct.coord_range_s** %alloc_next, align 8, !tbaa !239
  %24 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  %25 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %allocated12 = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %25, i32 0, i32 2
  store %struct.coord_range_s* %24, %struct.coord_range_s** %allocated12, align 8, !tbaa !227
  br label %if.end.13

if.end.13:                                        ; preds = %if.end, %if.then.5
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %if.then
  %26 = load %struct.coord_range_s*, %struct.coord_range_s** %pcr, align 8, !tbaa !1
  store %struct.coord_range_s* %26, %struct.coord_range_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.11
  %27 = bitcast %struct.coord_range_s** %pcr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %28 = load %struct.coord_range_s*, %struct.coord_range_s** %retval
  ret %struct.coord_range_s* %28
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @range_list_rescan(%struct.coord_range_list_s* %pcrl) #3 {
entry:
  %pcrl.addr = alloca %struct.coord_range_list_s*, align 8
  store %struct.coord_range_list_s* %pcrl, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %0 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %first = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %0, i32 0, i32 5
  %next = getelementptr inbounds %struct.coord_range_s, %struct.coord_range_s* %first, i32 0, i32 3
  %1 = load %struct.coord_range_s*, %struct.coord_range_s** %next, align 8, !tbaa !215
  %2 = load %struct.coord_range_list_s*, %struct.coord_range_list_s** %pcrl.addr, align 8, !tbaa !1
  %current = getelementptr inbounds %struct.coord_range_list_s, %struct.coord_range_list_s* %2, i32 0, i32 4
  store %struct.coord_range_s* %1, %struct.coord_range_s** %current, align 8, !tbaa !235
  ret void
}

declare void @free_all_margins(%struct.line_list_s*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin }
attributes #6 = { nobuiltin nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !3, i64 0}
!7 = !{!8, !2, i64 0}
!8 = !{!"gx_device_color_s", !2, i64 0, !3, i64 8, !9, i64 352, !6, i64 360, !10, i64 368, !12, i64 632}
!9 = !{!"gs_int_point_s", !6, i64 0, !6, i64 4}
!10 = !{!"gs_client_color_s", !2, i64 0, !11, i64 8}
!11 = !{!"gs_paint_color_s", !3, i64 0}
!12 = !{!"_mask", !13, i64 0, !14, i64 8, !2, i64 16}
!13 = !{!"mp_", !6, i64 0, !6, i64 4}
!14 = !{!"long", !3, i64 0}
!15 = !{!16, !2, i64 0}
!16 = !{!"_pat", !2, i64 0}
!17 = !{!18, !2, i64 24}
!18 = !{!"gx_device_s", !6, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !6, i64 40, !2, i64 48, !19, i64 56, !6, i64 80, !6, i64 84, !6, i64 88, !20, i64 96, !23, i64 816, !6, i64 832, !6, i64 836, !6, i64 840, !6, i64 844, !6, i64 848, !6, i64 852, !3, i64 856, !3, i64 864, !6, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !14, i64 928, !14, i64 936, !6, i64 944, !6, i64 948, !6, i64 952, !6, i64 956, !6, i64 960, !14, i64 968, !14, i64 976, !24, i64 984, !6, i64 1052, !6, i64 1056, !25, i64 1064, !2, i64 1104, !3, i64 1112, !27, i64 1120, !28, i64 1144}
!19 = !{!"rc_header_s", !14, i64 0, !2, i64 8, !2, i64 16}
!20 = !{!"gx_device_color_info_s", !6, i64 0, !6, i64 4, !3, i64 8, !21, i64 12, !3, i64 14, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !22, i64 32, !3, i64 40, !3, i64 44, !3, i64 108, !3, i64 176, !2, i64 688, !3, i64 696, !14, i64 704, !6, i64 712}
!21 = !{!"short", !3, i64 0}
!22 = !{!"gx_device_anti_alias_info_s", !6, i64 0, !6, i64 4}
!23 = !{!"gx_device_cached_colors_s", !14, i64 0, !14, i64 8}
!24 = !{!"gx_stroked_gradient_recognizer_s", !6, i64 0, !3, i64 4, !3, i64 36}
!25 = !{!"gdev_space_params_s", !14, i64 0, !14, i64 8, !26, i64 16, !6, i64 32, !3, i64 36}
!26 = !{!"gx_band_params_s", !6, i64 0, !6, i64 4, !14, i64 8}
!27 = !{!"gx_page_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16}
!28 = !{!"gx_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176, !2, i64 184, !2, i64 192, !2, i64 200, !2, i64 208, !2, i64 216, !2, i64 224, !2, i64 232, !2, i64 240, !2, i64 248, !2, i64 256, !2, i64 264, !2, i64 272, !2, i64 280, !2, i64 288, !2, i64 296, !2, i64 304, !2, i64 312, !2, i64 320, !2, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !2, i64 376, !2, i64 384, !2, i64 392, !2, i64 400, !2, i64 408, !2, i64 416, !2, i64 424, !2, i64 432, !2, i64 440, !2, i64 448, !2, i64 456, !2, i64 464, !2, i64 472, !2, i64 480, !2, i64 488, !2, i64 496, !2, i64 504, !2, i64 512, !2, i64 520, !2, i64 528, !2, i64 536, !2, i64 544, !2, i64 552, !2, i64 560, !2, i64 568, !2, i64 576}
!29 = !{!18, !2, i64 1432}
!30 = !{!31, !6, i64 0}
!31 = !{!"gx_fill_params_s", !6, i64 0, !32, i64 4, !33, i64 12}
!32 = !{!"gs_fixed_point_s", !6, i64 0, !6, i64 4}
!33 = !{!"float", !3, i64 0}
!34 = !{!35, !6, i64 0}
!35 = !{!"gs_fixed_rect_s", !32, i64 0, !32, i64 8}
!36 = !{!37, !6, i64 0}
!37 = !{!"gs_int_rect_s", !9, i64 0, !9, i64 8}
!38 = !{!35, !6, i64 4}
!39 = !{!37, !6, i64 4}
!40 = !{!35, !6, i64 8}
!41 = !{!37, !6, i64 8}
!42 = !{!35, !6, i64 12}
!43 = !{!37, !6, i64 12}
!44 = !{!18, !2, i64 1664}
!45 = !{!18, !2, i64 1336}
!46 = !{!47, !2, i64 1336}
!47 = !{!"gx_device_clip_s", !6, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !6, i64 40, !2, i64 48, !19, i64 56, !6, i64 80, !6, i64 84, !6, i64 88, !20, i64 96, !23, i64 816, !6, i64 832, !6, i64 836, !6, i64 840, !6, i64 844, !6, i64 848, !6, i64 852, !3, i64 856, !3, i64 864, !6, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !14, i64 928, !14, i64 936, !6, i64 944, !6, i64 948, !6, i64 952, !6, i64 956, !6, i64 960, !14, i64 968, !14, i64 976, !24, i64 984, !6, i64 1052, !6, i64 1056, !25, i64 1064, !2, i64 1104, !3, i64 1112, !27, i64 1120, !28, i64 1144, !2, i64 1728, !48, i64 1736, !2, i64 1816, !9, i64 1824, !35, i64 1832, !6, i64 1848}
!48 = !{!"gx_clip_list_s", !49, i64 0, !2, i64 40, !2, i64 48, !2, i64 56, !6, i64 64, !6, i64 68, !6, i64 72}
!49 = !{!"gx_clip_rect_s", !2, i64 0, !2, i64 8, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !3, i64 32}
!50 = !{!51, !2, i64 40}
!51 = !{!"gx_device_color_type_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80}
!52 = !{!53, !6, i64 212}
!53 = !{!"gs_imager_state_s", !6, i64 0, !2, i64 8, !2, i64 16, !54, i64 24, !6, i64 128, !57, i64 132, !6, i64 168, !58, i64 176, !58, i64 192, !6, i64 208, !6, i64 212, !21, i64 216, !3, i64 220, !60, i64 224, !60, i64 228, !61, i64 232, !14, i64 240, !6, i64 248, !6, i64 252, !6, i64 256, !2, i64 264, !6, i64 272, !6, i64 276, !6, i64 280, !6, i64 284, !6, i64 288, !6, i64 292, !33, i64 296, !32, i64 300, !6, i64 308, !6, i64 312, !6, i64 316, !33, i64 320, !6, i64 324, !6, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !3, i64 376, !2, i64 392, !2, i64 400, !6, i64 408, !2, i64 416, !2, i64 424, !62, i64 432, !3, i64 496, !2, i64 1008, !2, i64 1016, !63, i64 1024, !2, i64 1304, !2, i64 1312, !2, i64 1320, !2, i64 1328, !63, i64 1336}
!54 = !{!"gx_line_params_s", !33, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !6, i64 20, !33, i64 24, !33, i64 28, !33, i64 32, !6, i64 36, !55, i64 40, !56, i64 64}
!55 = !{!"gs_matrix_s", !33, i64 0, !33, i64 4, !33, i64 8, !33, i64 12, !33, i64 16, !33, i64 20}
!56 = !{!"gx_dash_params_s", !2, i64 0, !6, i64 8, !33, i64 12, !6, i64 16, !33, i64 20, !6, i64 24, !6, i64 28, !33, i64 32}
!57 = !{!"gs_matrix_fixed_s", !33, i64 0, !33, i64 4, !33, i64 8, !33, i64 12, !33, i64 16, !33, i64 20, !6, i64 24, !6, i64 28, !6, i64 32}
!58 = !{!"gs_point_s", !59, i64 0, !59, i64 8}
!59 = !{!"double", !3, i64 0}
!60 = !{!"gs_transparency_source_s", !33, i64 0}
!61 = !{!"gs_xstate_trans_flags", !6, i64 0, !6, i64 4}
!62 = !{!"gx_transfer_s", !6, i64 0, !2, i64 8, !6, i64 16, !2, i64 24, !6, i64 32, !2, i64 40, !6, i64 48, !2, i64 56}
!63 = !{!"gs_devicen_color_map_s", !6, i64 0, !3, i64 4, !6, i64 8, !6, i64 12, !14, i64 16, !3, i64 24}
!64 = !{!47, !2, i64 1728}
!65 = !{!18, !6, i64 88}
!66 = !{!31, !6, i64 4}
!67 = !{!68, !6, i64 104}
!68 = !{!"gx_path_s", !69, i64 0, !2, i64 40, !3, i64 48, !2, i64 56, !2, i64 64, !35, i64 72, !2, i64 88, !3, i64 96, !3, i64 97, !3, i64 98, !3, i64 99, !3, i64 100, !6, i64 104, !6, i64 108, !32, i64 112, !2, i64 120}
!69 = !{!"gx_path_segments_s", !19, i64 0, !70, i64 24}
!70 = !{!"psc_", !2, i64 0, !2, i64 8}
!71 = !{!32, !6, i64 4}
!72 = !{!32, !6, i64 0}
!73 = !{i64 0, i64 4, !5, i64 4, i64 4, !5}
!74 = !{!75, !6, i64 416}
!75 = !{!"line_list_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !6, i64 32, !2, i64 40, !2, i64 48, !76, i64 56, !2, i64 288, !2, i64 296, !78, i64 304, !78, i64 336, !2, i64 368, !2, i64 376, !6, i64 384, !6, i64 388, !6, i64 392, !6, i64 396, !6, i64 400, !2, i64 408, !6, i64 416, !3, i64 424, !3, i64 5064, !3, i64 5544, !3, i64 6344, !3, i64 7144}
!76 = !{!"active_line_s", !32, i64 0, !32, i64 8, !32, i64 16, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !2, i64 40, !6, i64 48, !6, i64 52, !6, i64 56, !77, i64 60, !6, i64 196, !6, i64 200, !2, i64 208, !2, i64 216, !2, i64 224}
!77 = !{!"gx_flattened_iterator_s", !6, i64 0, !6, i64 4, !6, i64 8, !6, i64 12, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !6, i64 40, !6, i64 44, !6, i64 48, !6, i64 52, !6, i64 56, !6, i64 60, !6, i64 64, !6, i64 68, !6, i64 72, !6, i64 76, !6, i64 80, !6, i64 84, !6, i64 88, !6, i64 92, !6, i64 96, !6, i64 100, !6, i64 104, !6, i64 108, !6, i64 112, !6, i64 116, !6, i64 120, !6, i64 124, !6, i64 128, !6, i64 132}
!78 = !{!"margin_set_s", !6, i64 0, !2, i64 8, !2, i64 16, !2, i64 24}
!79 = !{!75, !2, i64 376}
!80 = !{!75, !6, i64 388}
!81 = !{!75, !6, i64 392}
!82 = !{!47, !6, i64 88}
!83 = !{!84, !6, i64 40}
!84 = !{!"fill_options_s", !6, i64 0, !6, i64 4, !6, i64 8, !2, i64 16, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !6, i64 40, !6, i64 44, !6, i64 48, !6, i64 52, !2, i64 56, !2, i64 64, !6, i64 72, !6, i64 76, !2, i64 80, !2, i64 88}
!85 = !{!84, !6, i64 44}
!86 = !{!84, !6, i64 48}
!87 = !{!84, !6, i64 52}
!88 = !{!68, !2, i64 40}
!89 = !{!84, !6, i64 0}
!90 = !{!84, !2, i64 16}
!91 = !{!84, !6, i64 24}
!92 = !{!31, !33, i64 12}
!93 = !{!84, !6, i64 32}
!94 = !{!84, !6, i64 4}
!95 = !{!84, !6, i64 8}
!96 = !{!84, !2, i64 56}
!97 = !{!84, !2, i64 64}
!98 = !{!84, !6, i64 76}
!99 = !{!84, !6, i64 72}
!100 = !{!84, !6, i64 28}
!101 = !{!18, !2, i64 1200}
!102 = !{!84, !2, i64 80}
!103 = !{!18, !2, i64 1360}
!104 = !{!84, !2, i64 88}
!105 = !{!68, !6, i64 108}
!106 = !{!84, !6, i64 36}
!107 = !{!108, !2, i64 104}
!108 = !{!"gs_memory_s", !2, i64 0, !109, i64 8, !2, i64 192, !2, i64 200, !2, i64 208}
!109 = !{!"gs_memory_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176}
!110 = !{!75, !2, i64 328}
!111 = !{!75, !2, i64 360}
!112 = !{!53, !2, i64 8}
!113 = !{!108, !2, i64 88}
!114 = !{!108, !2, i64 24}
!115 = !{!75, !6, i64 32}
!116 = !{!18, !2, i64 1144}
!117 = !{!75, !2, i64 0}
!118 = !{!75, !2, i64 8}
!119 = !{!75, !2, i64 16}
!120 = !{!75, !2, i64 24}
!121 = !{!75, !2, i64 40}
!122 = !{!75, !2, i64 48}
!123 = !{!75, !2, i64 296}
!124 = !{!75, !2, i64 288}
!125 = !{!75, !2, i64 344}
!126 = !{!75, !2, i64 312}
!127 = !{!75, !2, i64 352}
!128 = !{!75, !2, i64 320}
!129 = !{!75, !6, i64 336}
!130 = !{!75, !6, i64 304}
!131 = !{!75, !2, i64 368}
!132 = !{!75, !6, i64 384}
!133 = !{!68, !2, i64 56}
!134 = !{!69, !2, i64 24}
!135 = !{!136, !6, i64 56}
!136 = !{!"contour_cursor_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !6, i64 40, !6, i64 44, !6, i64 48, !6, i64 52, !6, i64 56, !6, i64 60}
!137 = !{!75, !6, i64 400}
!138 = !{!139, !2, i64 32}
!139 = !{!"subpath_s", !2, i64 0, !2, i64 8, !21, i64 16, !21, i64 18, !32, i64 20, !2, i64 32, !6, i64 40, !140, i64 48, !3, i64 88}
!140 = !{!"", !2, i64 0, !2, i64 8, !21, i64 16, !21, i64 18, !32, i64 20, !2, i64 32}
!141 = !{!136, !2, i64 32}
!142 = !{!143, !21, i64 16}
!143 = !{!"segment_s", !2, i64 0, !2, i64 8, !21, i64 16, !21, i64 18, !32, i64 20}
!144 = !{!143, !2, i64 8}
!145 = !{!140, !2, i64 8}
!146 = !{!140, !2, i64 0}
!147 = !{!143, !2, i64 0}
!148 = !{!140, !21, i64 16}
!149 = !{!140, !2, i64 32}
!150 = !{!75, !2, i64 408}
!151 = !{!143, !6, i64 20}
!152 = !{!143, !6, i64 24}
!153 = !{!136, !2, i64 0}
!154 = !{!136, !2, i64 8}
!155 = !{!136, !2, i64 16}
!156 = !{!136, !2, i64 24}
!157 = !{!139, !2, i64 48}
!158 = !{!139, !2, i64 56}
!159 = !{!76, !2, i64 224}
!160 = !{!136, !6, i64 48}
!161 = !{!75, !6, i64 396}
!162 = !{!136, !6, i64 44}
!163 = !{!77, !6, i64 124}
!164 = !{!77, !6, i64 132}
!165 = !{!136, !6, i64 40}
!166 = !{i64 0, i64 8, !1, i64 8, i64 8, !1, i64 16, i64 8, !1, i64 24, i64 8, !1, i64 32, i64 8, !1, i64 40, i64 4, !5, i64 44, i64 4, !5, i64 48, i64 4, !5, i64 52, i64 4, !5, i64 56, i64 4, !5, i64 60, i64 4, !5}
!167 = !{i64 0, i64 4, !5, i64 4, i64 4, !5, i64 8, i64 4, !5, i64 12, i64 4, !5, i64 16, i64 4, !5, i64 20, i64 4, !5, i64 24, i64 4, !5, i64 28, i64 4, !5, i64 32, i64 4, !5, i64 36, i64 4, !5, i64 40, i64 4, !5, i64 44, i64 4, !5, i64 48, i64 4, !5, i64 52, i64 4, !5, i64 56, i64 4, !5, i64 60, i64 4, !5, i64 64, i64 4, !5, i64 68, i64 4, !5, i64 72, i64 4, !5, i64 76, i64 4, !5, i64 80, i64 4, !5, i64 84, i64 4, !5, i64 88, i64 4, !5, i64 92, i64 4, !5, i64 96, i64 4, !5, i64 100, i64 4, !5, i64 104, i64 4, !5, i64 108, i64 4, !5, i64 112, i64 4, !5, i64 116, i64 4, !5, i64 120, i64 4, !5, i64 124, i64 4, !5, i64 128, i64 4, !5, i64 132, i64 4, !5}
!168 = !{!136, !6, i64 52}
!169 = !{!170, !6, i64 32}
!170 = !{!"", !2, i64 0, !2, i64 8, !21, i64 16, !21, i64 18, !32, i64 20, !32, i64 28, !32, i64 36}
!171 = !{!170, !6, i64 40}
!172 = !{!170, !6, i64 24}
!173 = !{!136, !6, i64 60}
!174 = !{!170, !6, i64 28}
!175 = !{!170, !6, i64 36}
!176 = !{!170, !6, i64 20}
!177 = !{!76, !2, i64 40}
!178 = !{!76, !6, i64 48}
!179 = !{!76, !6, i64 196}
!180 = !{!76, !6, i64 184}
!181 = !{!76, !6, i64 192}
!182 = !{!76, !6, i64 56}
!183 = !{!76, !6, i64 52}
!184 = !{!77, !6, i64 4}
!185 = !{!108, !2, i64 72}
!186 = !{!76, !6, i64 200}
!187 = !{!76, !6, i64 4}
!188 = !{!76, !2, i64 208}
!189 = !{!76, !2, i64 216}
!190 = !{!76, !6, i64 176}
!191 = !{!76, !6, i64 180}
!192 = !{!76, !6, i64 188}
!193 = !{!76, !6, i64 0}
!194 = !{!76, !6, i64 8}
!195 = !{!76, !6, i64 12}
!196 = !{!76, !6, i64 16}
!197 = !{!76, !6, i64 20}
!198 = !{!76, !6, i64 28}
!199 = !{!76, !6, i64 24}
!200 = !{i64 0, i64 4, !5, i64 4, i64 4, !5, i64 8, i64 4, !5, i64 16, i64 8, !1, i64 24, i64 4, !5, i64 28, i64 4, !5, i64 32, i64 4, !5, i64 36, i64 4, !5, i64 40, i64 4, !5, i64 44, i64 4, !5, i64 48, i64 4, !5, i64 52, i64 4, !5, i64 56, i64 8, !1, i64 64, i64 8, !1, i64 72, i64 4, !5, i64 76, i64 4, !5, i64 80, i64 8, !1, i64 88, i64 8, !1}
!201 = !{!75, !2, i64 272}
!202 = !{!75, !6, i64 88}
!203 = !{!14, !14, i64 0}
!204 = !{!76, !6, i64 32}
!205 = !{!76, !6, i64 36}
!206 = !{!59, !59, i64 0}
!207 = !{!139, !2, i64 8}
!208 = !{!209, !6, i64 0}
!209 = !{!"gs_fixed_edge_s", !32, i64 0, !32, i64 8}
!210 = !{!209, !6, i64 8}
!211 = !{!209, !6, i64 4}
!212 = !{!209, !6, i64 12}
!213 = !{!76, !6, i64 72}
!214 = !{!76, !6, i64 64}
!215 = !{!216, !2, i64 72}
!216 = !{!"coord_range_list_s", !2, i64 0, !217, i64 8, !2, i64 32, !2, i64 40, !2, i64 48, !218, i64 56, !218, i64 88}
!217 = !{!"rl_", !2, i64 0, !2, i64 8, !2, i64 16}
!218 = !{!"coord_range_s", !6, i64 0, !6, i64 4, !2, i64 8, !2, i64 16, !2, i64 24}
!219 = !{!218, !6, i64 0}
!220 = !{!218, !6, i64 4}
!221 = !{!218, !2, i64 16}
!222 = !{!216, !2, i64 0}
!223 = !{!216, !2, i64 16}
!224 = !{!216, !2, i64 8}
!225 = !{!216, !2, i64 24}
!226 = !{!216, !2, i64 40}
!227 = !{!216, !2, i64 32}
!228 = !{!216, !6, i64 60}
!229 = !{!216, !6, i64 56}
!230 = !{!216, !2, i64 64}
!231 = !{!216, !6, i64 92}
!232 = !{!216, !6, i64 88}
!233 = !{!216, !2, i64 104}
!234 = !{!216, !2, i64 96}
!235 = !{!216, !2, i64 48}
!236 = !{!218, !2, i64 8}
!237 = !{!76, !6, i64 68}
!238 = !{!76, !6, i64 60}
!239 = !{!218, !2, i64 24}
