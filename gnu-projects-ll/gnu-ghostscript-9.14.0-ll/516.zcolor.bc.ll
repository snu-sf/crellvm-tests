; ModuleID = './zcolor.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gx_device_color_type_s = type { %struct.gs_memory_struct_type_s*, void (%struct.gx_device_color_s*, %struct.gx_device_color_saved_s*)*, %struct.gx_device_halftone_s* (%struct.gx_device_color_s*)*, i32 (%struct.gx_device_color_s*, %struct.gs_int_point_s*)*, i32 (%struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_color_saved_s*, %struct.gx_device_s*, i64, i8*, i32*)*, i32 (%struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_device_s*, i64, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_s*, i64*)* }
%struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (%struct.gs_memory_s*, i8*)*, i8* }
%struct.struct_shared_procs_s = type opaque
%struct.gs_memory_s = type { %struct.gs_memory_s*, %struct.gs_memory_procs_s, %struct.gs_lib_ctx_s*, %struct.gs_memory_s*, %struct.gs_memory_s* }
%struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, %struct.gs_memory_s* (%struct.gs_memory_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32, i8*)*, void (%struct.gs_memory_s*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, i32)* }
%struct.gs_memory_status_s = type { i64, i64, i32 }
%struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i32 }
%struct.gs_ptr_procs_s = type { void (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i32 (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
%struct.enum_ptr_s = type { i8*, i32 }
%struct.gc_state_s = type opaque
%struct.gs_lib_ctx_s = type { %struct.gs_memory_s*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i64, i8*, %struct.name_table_s*, i32, %struct.gx_io_device_s**, i32, i32, [2 x i64], %struct.gs_font_dir_s*, i32, i8*, i32, i8*, %struct.gs_fapi_server_s** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.name_table_s = type opaque
%struct.gx_io_device_s = type { i8*, i8*, %struct.gx_io_device_procs_s, i8* }
%struct.gx_io_device_procs_s = type { i32 (%struct.gx_io_device_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, %struct.stream_s**, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, i32, i8*, %struct.stream_s**, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, i8*, %struct._IO_FILE**, i8*, i32)*, i32 (%struct.gx_io_device_s*, %struct._IO_FILE*)*, i32 (%struct.gx_io_device_s*, i8*)*, i32 (%struct.gx_io_device_s*, i8*, i8*)*, i32 (%struct.gx_io_device_s*, i8*, %struct.stat*)*, %struct.file_enum_s* (%struct.gx_io_device_s*, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.file_enum_s*, i8*, i32)*, void (%struct.file_enum_s*)*, i32 (%struct.gx_io_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_io_device_s*, %struct.gs_param_list_s*)* }
%struct.stream_s = type { %struct.stream_template_s*, %struct.gs_memory_s*, i32 (%struct.stream_state_s*, i8*)*, i32, [80 x i8], %union.stream_cursor_s, i8*, i32, i32, i16, i8, i8, %struct.gs_string_s, i64, %struct.stream_procs, %struct.stream_s*, i32, i32, %struct.stream_state_s*, i16, i16, %struct.stream_s*, %struct.stream_s*, i32, i32, i32 (%struct.stream_s*)*, %struct._IO_FILE*, %struct.gs_const_string_s, i32, i64, i64 }
%struct.stream_template_s = type opaque
%union.stream_cursor_s = type { %struct.stream_cursor_read_s }
%struct.stream_cursor_read_s = type { i8*, i8*, i8* }
%struct.gs_string_s = type { i8*, i32 }
%struct.stream_procs = type { i32 (%struct.stream_s*, i64*)*, i32 (%struct.stream_s*, i64)*, void (%struct.stream_s*)*, i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)*, i32 (%struct.stream_state_s*, %struct.stream_cursor_read_s*, %struct.stream_cursor_write_s*, i32)*, i32 (%struct.stream_s*, i32)* }
%struct.stream_cursor_write_s = type { i8*, i8*, i8* }
%struct.stream_state_s = type { %struct.stream_template_s*, %struct.gs_memory_s*, {}*, i32, [80 x i8] }
%struct.gs_const_string_s = type { i8*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.file_enum_s = type opaque
%struct.gs_param_list_s = type { %struct.gs_param_list_procs_s*, %struct.gs_memory_s*, i32 }
%struct.gs_param_list_procs_s = type { i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_typed_value_s*)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*, i32)*, i32 (%struct.gs_param_list_s*, i8*, %struct.gs_param_collection_s*)*, i32 (%struct.gs_param_list_s*, %union.gs_param_enumerator_s*, %struct.gs_param_string_s*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*)*, i32 (%struct.gs_param_list_s*, i8*, i32)*, i32 (%struct.gs_param_list_s*)* }
%struct.gs_param_typed_value_s = type { %union.gs_param_value_s, i32 }
%union.gs_param_value_s = type { %struct.gs_param_string_s }
%struct.gs_param_string_s = type { i8*, i32, i32 }
%struct.gs_param_collection_s = type { %struct.gs_param_list_s*, i32 }
%union.gs_param_enumerator_s = type { i64 }
%struct.gs_font_dir_s = type opaque
%struct.gs_fapi_server_s = type opaque
%struct.gx_device_color_s = type { %struct.gx_device_color_type_s*, %union._c, %struct.gs_int_point_s, i32, %struct.gs_client_color_s, %struct._mask }
%union._c = type { %struct._col }
%struct._col = type { %struct.gx_device_halftone_s*, i16, [64 x i8], [64 x i32], i16, i64 }
%struct.gx_device_halftone_s = type opaque
%struct.gs_int_point_s = type { i32, i32 }
%struct.gs_client_color_s = type { %struct.gs_pattern_instance_s*, %struct.gs_paint_color_s }
%struct.gs_pattern_instance_s = type { %struct.rc_header_s, %struct.gs_pattern_type_s*, %struct.gs_state_s*, i64 }
%struct.rc_header_s = type { i64, %struct.gs_memory_s*, void (%struct.gs_memory_s*, i8*, i8*)* }
%struct.gs_pattern_type_s = type { i32, %struct.pp_ }
%struct.pp_ = type { i32 (%struct.gs_pattern_template_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_pattern_template_s*, %struct.gs_matrix_s*, %struct.gs_state_s*, %struct.gs_memory_s*)*, %struct.gs_pattern_template_s* (%struct.gs_pattern_instance_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_state_s*)* }
%struct.gs_pattern_template_s = type { %struct.gs_pattern_type_s*, i32, %struct.gs_uid_s, i8* }
%struct.gs_uid_s = type { i64, i64* }
%struct.gs_matrix_s = type { float, float, float, float, float, float }
%struct.gs_color_space_s = type { %struct.gs_color_space_type_s*, %struct.rc_header_s, i64, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.client_color_space_data_s*, %struct.cmm_profile_s*, %union.anon }
%struct.gs_color_space_type_s = type { i32, i32, i32, %struct.gs_memory_struct_type_s*, i32 (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, %struct.gs_color_space_s* (%struct.gs_color_space_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i16*, %struct.gs_imager_state_s*, %struct.gx_device_s*)*, i32 (i16*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, void (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.stream_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)*, i32 (%struct.gs_color_space_s*)* }
%struct.gsicc_link_s = type { i8*, %struct.gscms_procs_s, %struct.gsicc_hashlink_s, %struct.gsicc_link_cache_s*, i32, %struct.gsicc_link_s*, %struct.gx_semaphore_s*, i32, i32, i32, i32, i32, i32, %struct.gscms_procs_s, i32, i32, i32 }
%struct.gsicc_hashlink_s = type { i64, i64, i64, i64 }
%struct.gsicc_link_cache_s = type { %struct.gsicc_link_s*, i32, %struct.rc_header_s, %struct.gs_memory_s*, %struct.gx_monitor_s*, %struct.gx_semaphore_s*, i32 }
%struct.gx_monitor_s = type { %struct.gs_memory_s*, %union.gp_monitor }
%union.gp_monitor = type { i8* }
%struct.gx_semaphore_s = type { %struct.gs_memory_s*, %union.gp_semaphore }
%union.gp_semaphore = type { i8* }
%struct.gscms_procs_s = type { void (%struct.gx_device_s*, %struct.gsicc_link_s*, %struct.gsicc_bufferdesc_s*, %struct.gsicc_bufferdesc_s*, i8*, i8*)*, void (%struct.gx_device_s*, %struct.gsicc_link_s*, i8*, i8*, i32)*, void (%struct.gsicc_link_s*)*, i32 (i8*, i32)* }
%struct.gsicc_bufferdesc_s = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.client_color_space_data_s = type { void (%struct.gs_color_space_s*, i32)* }
%struct.cmm_profile_s = type { i8, i8, i32, i32, i32, i32, %struct.gs_range_icc_s, i64, i32, [15 x i32], i32, i32, i32, %struct.gsicc_rendering_param_s, i8*, %struct.gx_device_s*, %struct.gsicc_namelist_s*, i8*, %struct.rc_header_s, i32, i8*, %struct.gs_memory_s*, %struct.gx_monitor_s* }
%struct.gs_range_icc_s = type { [15 x %struct.gs_range_s] }
%struct.gs_range_s = type { float, float }
%struct.gsicc_rendering_param_s = type { i32, i32, i32, i32, i32, i32 }
%struct.gsicc_namelist_s = type { i32, %struct.gsicc_colorname_s*, i8*, %struct.gs_devicen_color_map_s*, i32 }
%struct.gsicc_colorname_s = type { i8*, i32, %struct.gsicc_colorname_s* }
%struct.gs_devicen_color_map_s = type { i32, i32, i32, i32, i64, [64 x i32] }
%union.anon = type { %struct.gs_device_n_params_s }
%struct.gs_device_n_params_s = type { i64*, i32, %struct.gs_device_n_map_s*, %struct.gs_device_n_attributes_s*, i32, i32 (%struct.gs_memory_s*, i64, i8**, i32*)* }
%struct.gs_device_n_map_s = type opaque
%struct.gs_device_n_attributes_s = type opaque
%struct.gs_imager_state_s = type { i32, %struct.gs_memory_s*, i8*, %struct.gx_line_params_s, i32, %struct.gs_matrix_fixed_s, i32, %struct.gs_point_s, %struct.gs_point_s, i32, i32, i16, i32, %struct.gs_transparency_source_s, %struct.gs_transparency_source_s, %struct.gs_xstate_trans_flags, i64, i32, i32, i32, %struct.gx_device_s*, i32, i32, i32, i32, i32, i32, float, %struct.gs_fixed_point_s, i32, i32, i32, float, i32, i32, %struct.gsicc_manager_s*, %struct.gsicc_link_cache_s*, %struct.gsicc_profile_cache_s*, %struct.gx_color_map_procs_s* (%struct.gs_imager_state_s*, %struct.gx_device_s*)*, %struct.gs_halftone_s*, [2 x %struct.gs_int_point_s], %struct.gx_device_halftone_s*, %struct.gs_cie_render_s*, i32, %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s*, %struct.gx_transfer_s, [64 x %struct.gx_transfer_map_s*], %struct.gx_cie_joint_caches_s*, %struct.gx_color_map_procs_s*, %struct.gs_devicen_color_map_s, %struct.gx_pattern_cache_s*, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_devicen_color_map_s }
%struct.gx_line_params_s = type { float, i32, i32, i32, i32, i32, float, float, float, i32, %struct.gs_matrix_s, %struct.gx_dash_params_s }
%struct.gx_dash_params_s = type { float*, i32, float, i32, float, i32, i32, float }
%struct.gs_matrix_fixed_s = type { float, float, float, float, float, float, i32, i32, i32 }
%struct.gs_point_s = type { double, double }
%struct.gs_transparency_source_s = type { float }
%struct.gs_xstate_trans_flags = type { i32, i32 }
%struct.gs_fixed_point_s = type { i32, i32 }
%struct.gsicc_manager_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gsicc_devicen_s*, %struct.gsicc_smask_s*, i32, %struct.cmm_srcgtag_profile_s*, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.gsicc_devicen_s = type { %struct.gsicc_devicen_entry_s*, %struct.gsicc_devicen_entry_s*, i32 }
%struct.gsicc_devicen_entry_s = type { %struct.cmm_profile_s*, %struct.gsicc_devicen_entry_s* }
%struct.gsicc_smask_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gs_memory_s*, i32 }
%struct.cmm_srcgtag_profile_s = type { [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], %struct.cmm_profile_s*, %struct.gs_memory_s*, i32, i8*, %struct.rc_header_s }
%struct.gsicc_profile_cache_s = type { %struct.gsicc_profile_entry_s*, i32, %struct.rc_header_s, %struct.gs_memory_s* }
%struct.gsicc_profile_entry_s = type { %struct.gs_color_space_s*, %struct.gsicc_profile_entry_s*, i64 }
%struct.gs_halftone_s = type opaque
%struct.gs_cie_render_s = type opaque
%struct.gx_transfer_map_s = type { %struct.rc_header_s, float (double, %struct.gx_transfer_map_s*)*, %struct.gs_mapping_closure_s, i64, [256 x i16] }
%struct.gs_mapping_closure_s = type { float (double, %struct.gx_transfer_map_s*, i8*)*, i8* }
%struct.gx_transfer_s = type { i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s* }
%struct.gx_color_map_procs_s = type { void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32, %struct.gs_color_space_s*)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_imager_state_s*, %struct.gx_device_s*)* }
%struct.gx_pattern_cache_s = type { %struct.gs_memory_s*, %struct.gx_color_tile_s*, i32, i32, i32, i64, i64, void (%struct.gx_pattern_cache_s*)* }
%struct.gx_color_tile_s = type { i64, i32, %struct.gs_uid_s, i32, i32, %struct.gs_matrix_s, %struct.gs_rect_s, %struct.gx_strip_bitmap_s, %struct.gx_strip_bitmap_s, %struct.gx_pattern_trans_s*, %union.gx_device_clist_s*, i8, i8, i8, [2 x i8], i32, i32, i32 }
%struct.gs_rect_s = type { %struct.gs_point_s, %struct.gs_point_s }
%struct.gx_strip_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16, i16, i16, i32 }
%struct.gx_pattern_trans_s = type { %struct.gx_device_s*, i8*, %struct.gs_memory_s*, %struct.gx_pattern_trans_s*, %struct.gs_int_rect_s, i32, i32, i32, i32, i32, i32, %struct.pdf14_nonseparable_blending_procs_s*, i32, i32, %struct.gs_int_rect_s*, void (i32, i32, i32, i32, i32, i32, %struct.gx_color_tile_s*, %struct.gx_pattern_trans_s*)*, i32 (%struct.gx_image_enum_s*, i8*, i32, i32, i32, %struct.gx_device_s*)* }
%struct.gs_int_rect_s = type { %struct.gs_int_point_s, %struct.gs_int_point_s }
%struct.pdf14_nonseparable_blending_procs_s = type { void (i32, i8*, i8*, i8*)*, void (i32, i8*, i8*, i8*)* }
%struct.gx_image_enum_s = type opaque
%union.gx_device_clist_s = type opaque
%struct.gx_cie_joint_caches_s = type opaque
%struct.gx_device_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s }
%struct.gx_device_color_info_s = type { i32, i32, i32, i16, i8, i32, i32, i32, i32, %struct.gx_device_anti_alias_info_s, i32, [64 x i8], [64 x i8], [64 x i64], i8*, i32, i64, i32 }
%struct.gx_device_anti_alias_info_s = type { i32, i32 }
%struct.gx_device_cached_colors_s = type { i64, i64 }
%struct.gx_stroked_gradient_recognizer_s = type { i32, [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s] }
%struct.gdev_space_params_s = type { i64, i64, %struct.gx_band_params_s, i32, i32 }
%struct.gx_band_params_s = type { i32, i32, i64 }
%struct.cmm_dev_profile_s = type { [4 x %struct.cmm_profile_s*], %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, [4 x %struct.gsicc_rendering_param_s], i32, i32, i32, i32, i32, i32, %struct.gsicc_namelist_s*, i32, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.gx_page_device_procs_s = type { i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* }
%struct.gx_device_procs_s = type { i32 (%struct.gx_device_s*)*, void (%struct.gx_device_s*, %struct.gs_matrix_s*)*, i32 (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i8*, i8**)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i64 (%struct.gx_device_s*, i16*)*, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16, i16, i16, i16)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)*, i32 (%struct.gx_device_s*, i32, i32*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)*, i32 (%struct.gx_device_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, %struct.gs_devn_params_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)*, void (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* }
%struct.gx_tile_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16 }
%struct.gx_xfont_procs_s = type opaque
%struct.gx_path_s = type opaque
%struct.gx_fill_params_s = type opaque
%struct.gx_clip_path_s = type opaque
%struct.gx_stroke_params_s = type opaque
%struct.gs_fixed_edge_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_image1_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s, i32, i32, i32, [130 x float], i32, i32, i32, %struct.gs_color_space_s*, i32, i32, i32, i32 }
%struct.gx_image_type_s = type opaque
%struct.gx_image_enum_common_s = type opaque
%struct.gs_fixed_rect_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_image_common_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s }
%struct.gs_get_bits_params_s = type opaque
%struct.gs_composite_s = type { %struct.gs_composite_type_s*, i64, i32, %struct.gs_composite_s*, %struct.gs_composite_s* }
%struct.gs_composite_type_s = type { i8, %struct.gs_composite_type_procs_s }
%struct.gs_composite_type_procs_s = type { i32 (%struct.gs_composite_s*, %struct.gx_device_s**, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s*)*, i32 (%struct.gs_composite_s*, i8*, i32*, %struct.gx_device_clist_writer_s*)*, i32 (%struct.gs_composite_s**, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32, i32, %struct.gs_imager_state_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s**, %struct.gx_device_s*)*, i32 (%struct.gs_composite_s*, i8, i8)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32*, i32*, i32, i32)* }
%struct.gx_device_clist_writer_s = type opaque
%struct.gs_text_params_s = type { i32, %union.sd_, i32, %struct.gs_point_s, %struct.gs_point_s, %union.s_, float*, float*, i32 }
%union.sd_ = type { i8* }
%union.s_ = type { i64 }
%struct.gs_font_s = type opaque
%struct.gs_text_enum_s = type { %struct.gs_text_params_s, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_procs_s*, %struct.rc_header_s, i8*, %struct.gs_font_s*, i64, i32, %struct.gs_log2_scale_point_s, %struct.cached_fm_pair_s*, i32, i32, %struct.gx_font_stack_s, i32, i32, i32, %struct.gs_point_s, i64, i32, %struct.gs_log2_scale_point_s, %struct.gs_point_s, %struct.gs_text_returned_s }
%struct.gs_text_enum_procs_s = type { i32 (%struct.gs_text_enum_s*, %struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*, %struct.gs_point_s*)*, i32 (%struct.gs_text_enum_s*, double*, i32)*, i32 (%struct.gs_text_enum_s*)*, void (%struct.gs_text_enum_s*, i8*)* }
%struct.cached_fm_pair_s = type opaque
%struct.gx_font_stack_s = type { i32, [6 x %struct.gx_font_stack_item_s] }
%struct.gx_font_stack_item_s = type { %struct.gs_font_s*, i32 }
%struct.gs_log2_scale_point_s = type { i32, i32 }
%struct.gs_text_returned_s = type { i64, i64, %struct.gs_point_s }
%struct.gs_transparency_group_params_s = type { %struct.gs_color_space_s*, i32, i32, i32, i32, i32, i32, i32, i64, %struct.cmm_profile_s* }
%struct.gx_transparency_mask_params_s = type { i32, i32, i32, i32, [64 x float], float, i32, i32, i32, i32, [256 x i8], i64, %struct.cmm_profile_s* }
%struct.gx_cm_color_map_procs_s = type { void (%struct.gx_device_s*, i16, i16*)*, void (%struct.gx_device_s*, %struct.gs_imager_state_s*, i16, i16, i16, i16*)*, void (%struct.gx_device_s*, i16, i16, i16, i16, i16*)* }
%struct.gs_pattern1_instance_s = type { %struct.rc_header_s, %struct.gs_pattern_type_s*, %struct.gs_state_s*, i64, %struct.gs_pattern1_template_s, %struct.gs_matrix_s, %struct.gs_rect_s, i32, i32, i32, i32, i32, %struct.gs_int_point_s, i64 }
%struct.gs_pattern1_template_s = type { %struct.gs_pattern_type_s*, i32, %struct.gs_uid_s, i8*, i32, i32, i32, %struct.gs_rect_s, float, float, i32 (%struct.gs_client_color_s*, %struct.gs_state_s*)* }
%struct.gs_fill_attributes_s = type { %struct.gs_fixed_rect_s*, i32, %struct.gx_device_halftone_s*, i32, i32, i32, %struct.patch_fill_state_s* }
%struct.patch_fill_state_s = type opaque
%struct.gs_devn_params_s = type opaque
%struct.gx_process_page_options_s = type { i32 (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i32, i32, i8**)*, void (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_int_rect_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, i8*)*, i8*, i32 }
%struct.gs_state_s = type { i32, %struct.gs_memory_s*, i8*, %struct.gx_line_params_s, i32, %struct.gs_matrix_fixed_s, i32, %struct.gs_point_s, %struct.gs_point_s, i32, i32, i16, i32, %struct.gs_transparency_source_s, %struct.gs_transparency_source_s, %struct.gs_xstate_trans_flags, i64, i32, i32, i32, %struct.gx_device_s*, i32, i32, i32, i32, i32, i32, float, %struct.gs_fixed_point_s, i32, i32, i32, float, i32, i32, %struct.gsicc_manager_s*, %struct.gsicc_link_cache_s*, %struct.gsicc_profile_cache_s*, %struct.gx_color_map_procs_s* (%struct.gs_imager_state_s*, %struct.gx_device_s*)*, %struct.gs_halftone_s*, [2 x %struct.gs_int_point_s], %struct.gx_device_halftone_s*, %struct.gs_cie_render_s*, i32, %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s*, %struct.gx_transfer_s, [64 x %struct.gx_transfer_map_s*], %struct.gx_cie_joint_caches_s*, %struct.gx_color_map_procs_s*, %struct.gs_devicen_color_map_s, %struct.gx_pattern_cache_s*, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_devicen_color_map_s, %struct.gs_state_s*, %struct.gs_matrix_s, i32, %struct.gs_matrix_s, i32, %struct.gx_path_s*, %struct.gx_clip_path_s*, %struct.gx_clip_stack_s*, %struct.gx_clip_path_s*, i64, i64, %struct.gx_clip_path_s*, i32, [2 x %struct.anon], %struct.gs_font_s*, %struct.gs_font_s*, %struct.gs_matrix_fixed_s, i32, i32, i32, %struct.gs_state_s*, i32, %struct.gx_device_s*, %struct.gs_device_filter_stack_s*, %struct.gs_state_client_procs_s }
%struct.gx_clip_stack_s = type opaque
%struct.anon = type { %struct.gs_color_space_s*, %struct.gs_client_color_s*, %struct.gx_device_color_s* }
%struct.gs_device_filter_stack_s = type { %struct.gs_device_filter_stack_s*, %struct.gs_device_filter_s*, %struct.gx_device_s*, %struct.rc_header_s }
%struct.gs_device_filter_s = type opaque
%struct.gs_state_client_procs_s = type { i8* (%struct.gs_memory_s*)*, i32 (i8*, i8*)*, void (i8*, %struct.gs_memory_s*)*, i32 (i8*, i8*, i32)* }
%struct.gs_paint_color_s = type { [64 x float] }
%struct._mask = type { %struct.mp_, i64, %struct.gx_color_tile_s* }
%struct.mp_ = type { i32, i32 }
%struct.gx_device_color_saved_s = type { %struct.gx_device_color_type_s*, %union._svc, %struct.gs_int_point_s }
%union._svc = type { %struct._svbin, [304 x i8] }
%struct._svbin = type { [2 x i64], i32, i32 }
%struct.gx_rop_source_s = type { i8*, i32, i32, i64, [2 x i64], i32, i32 }
%struct.PS_colour_space_s = type { i8*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)*, i32 (%struct.gs_context_state_s*, %struct.ref_s**)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* }
%struct.gs_context_state_s = type { %struct.gs_state_s*, %struct.gs_dual_memory_s, i32, %struct.ref_s, %struct.ref_s, i64, i64, i64, i32, i32, %struct.ref_s, %struct.ref_s, i32, i32, i32, i32, %struct.gs_file_path_s*, [3 x %struct.ref_s], %struct.stream_s*, %struct.op_array_table_s, %struct.op_array_table_s, i32 (%struct.gs_context_state_s**)*, i32, i32 (%struct.gs_context_state_s**)*, %struct.dict_stack_s, %struct.exec_stack_s, %struct.op_stack_s, %struct.i_plugin_holder_s* }
%struct.gs_dual_memory_s = type { %struct.gs_ref_memory_s*, %struct.vm_spaces_s, i32, i32 (%struct.gs_dual_memory_s*, i32)*, i32, i32 }
%struct.gs_ref_memory_s = type opaque
%struct.vm_spaces_s = type { void (%struct.vm_spaces_s*, i32)*, %union.anon.2 }
%union.anon.2 = type { [4 x %struct.gs_ref_memory_s*] }
%struct.ref_s = type { %struct.tas_s, %union.v }
%struct.tas_s = type { i16, i16, i32 }
%union.v = type { i64 }
%struct.gs_file_path_s = type opaque
%struct.op_array_table_s = type { %struct.ref_s, i16*, i32, i32, i32 }
%struct.dict_stack_s = type { %struct.ref_stack_s, i32, i32, i32, i16*, i32, %struct.ref_s*, %struct.ref_s }
%struct.ref_stack_s = type { %struct.ref_s*, %struct.ref_s*, %struct.ref_s*, %struct.ref_s, i32, i32, %struct.ref_s, i32, i32, i32, %struct.ref_stack_params_s*, %struct.gs_ref_memory_s* }
%struct.ref_stack_params_s = type opaque
%struct.exec_stack_s = type { %struct.ref_stack_s, %struct.ref_s* }
%struct.op_stack_s = type { %struct.ref_stack_s }
%struct.i_plugin_holder_s = type opaque
%struct.op_def = type { i8*, i32 (%struct.gs_context_state_s*)* }
%struct.obj_header_s = type opaque
%struct.int_gstate_s = type { %struct.ref_s, %struct.anon.3, %struct.anon.3, %struct.ref_s, %struct.ref_s, [2 x %struct.ref_colorspace_s], [2 x %struct.ref_s], %struct.anon.7, %struct.ref_s, %struct.ref_s, %struct.ref_s, %struct.ref_s, %struct.ref_s, %struct.ref_s }
%struct.anon.3 = type { %struct.ref_s, %struct.ref_s, %struct.ref_s, %struct.ref_s }
%struct.ref_colorspace_s = type { %struct.ref_s, %struct.ref_color_procs_s }
%struct.ref_color_procs_s = type { %struct.ref_cie_procs_s, %union.anon.6 }
%struct.ref_cie_procs_s = type { %union.anon.4, %union.anon.5, %struct.ref_s }
%union.anon.4 = type { %struct.ref_s }
%union.anon.5 = type { %struct.ref_s }
%union.anon.6 = type { %struct.ref_device_n_params_s }
%struct.ref_device_n_params_s = type { %struct.ref_s, %struct.ref_s }
%struct.anon.7 = type { %struct.ref_s, %struct.ref_cie_render_procs_s }
%struct.ref_cie_render_procs_s = type { %struct.ref_s, %struct.ref_s, %struct.ref_s, %struct.ref_s }
%struct.name_s = type opaque
%struct.gs_function_s = type { %struct.gs_function_head_s, %struct.gs_function_params_s }
%struct.gs_function_head_s = type { i32, %struct.gs_function_procs_s }
%struct.gs_function_procs_s = type { i32 (%struct.gs_function_s*, float*, float*)*, i32 (%struct.gs_function_s*, float*, float*, i32*)*, void (%struct.gs_function_s*, %struct.gs_function_info_s*)*, i32 (%struct.gs_function_s*, %struct.gs_param_list_s*)*, i32 (%struct.gs_function_s*, %struct.gs_function_s**, %struct.gs_range_s*, %struct.gs_memory_s*)*, void (%struct.gs_function_params_s*, %struct.gs_memory_s*)*, void (%struct.gs_function_s*, i32, %struct.gs_memory_s*)*, i32 (%struct.gs_function_s*, %struct.stream_s*)* }
%struct.gs_function_info_s = type { %struct.gs_data_source_s*, i64, %struct.gs_function_s**, i32 }
%struct.gs_data_source_s = type opaque
%struct.gs_function_params_s = type { i32, float*, i32, float* }
%struct.gs_separation_params_s = type { i64, %struct.gs_device_n_map_s*, i32, i32, i32 (%struct.gs_memory_s*, i64, i8**, i32*)* }
%struct.ref_separation_params_s = type { %struct.ref_s, %struct.ref_s }
%struct.gs_indexed_map_s = type { %struct.rc_header_s, %union.anon.1, i8*, i32, float* }
%union.anon.1 = type { i32 (%struct.gs_color_space_s*, i32, float*)* }
%struct.gs_indexed_params_s = type { i32, i32, %union.anon.0, i32 }
%union.anon.0 = type { %struct.gs_const_string_s }
%struct.gs_pattern_params_s = type { i32 }

@zcolor_remap_one_ostack = constant i32 4, align 4
@zcolor_remap_one_estack = constant i32 3, align 4
@gx_dc_type_data_none = external constant %struct.gx_device_color_type_s, align 8
@.str = private unnamed_addr constant [11 x i8] c"DeviceGray\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"DeviceRGB\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"DeviceCMYK\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"CIEBasedA\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"CIEBasedABC\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"CIEBasedDEF\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"CIEBasedDEFG\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"Separation\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"DeviceN\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Indexed\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"Pattern\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"DevicePixel\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"ICCBased\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"Lab\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"CalGray\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"CalRGB\00", align 1
@colorProcs = global [16 x %struct.PS_colour_space_s] [%struct.PS_colour_space_s { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setgrayspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @onecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @grayrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @graydomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @graybasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @grayvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @truecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* @grayinitialproc }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setrgbspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @threecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @rgbrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @rgbdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @rgbbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @rgbvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @truecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* @rgbinitialproc }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setcmykspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @fourcomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @cmykrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @cmykdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @cmykbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @cmykvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @truecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* @cmykinitialproc }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setcieaspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatecieaspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @onecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @ciearange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @cieadomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @ciebasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @cieavalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @cieacompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setcieabcspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatecieabcspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @threecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @cieabcrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @cieabcdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @ciebasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @cieabcvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @cieabccompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setciedefspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validateciedefspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @threecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @ciedefrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @ciedefdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @ciebasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @ciedefvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @ciedefcompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setciedefgspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validateciedefgspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @fourcomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @ciedefgrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @ciedefgdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @ciebasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @ciedefgvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @ciedefgcompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setseparationspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validateseparationspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* @separationalternatespace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @onecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @seprange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @sepdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @sepbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* @septransform, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @sepvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @sepcompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* @sepinitialproc }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setdevicenspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatedevicenspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* @devicenalternatespace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @devicencomponents, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @devicenrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @devicendomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @devicenbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* @devicentransform, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @devicenvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @devicencompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* @deviceninitialproc }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setindexedspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validateindexedspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* @indexedalternatespace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @onecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @indexedrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @indexeddomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @indexedbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @indexedvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @falsecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setpatternspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatepatternspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* @patternalternatespace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @patterncomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @dummyrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @dummydomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @patternbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @patternvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @falsecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setdevicepspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatedevicepspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @onecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @deviceprange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @devicepdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @devicepbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @devicepvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @falsecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @seticcspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validateiccspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* @iccalternatespace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @icccomponents, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @iccrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @iccdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @iccbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @iccvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @iccompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setlabspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatelabspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @threecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @labrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @labdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @labbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @labvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @truecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* null }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setcalgrayspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatecalgrayspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @onecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @grayrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @graydomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @graybasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @grayvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @truecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* @grayinitialproc }, %struct.PS_colour_space_s { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)* @setcalrgbspace, i32 (%struct.gs_context_state_s*, %struct.ref_s**)* @validatecalrgbspace, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)* @threecomponent, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @rgbrange, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*)* @rgbdomain, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)* @rgbbasecolor, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* null, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* @rgbvalidate, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)* @truecompareproc, i32 (%struct.gs_context_state_s*, %struct.ref_s*)* @rgbinitialproc }], align 16
@.str.16 = private unnamed_addr constant [14 x i8] c"0currentcolor\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"0currentcolorspace\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"0.getuseciecolor\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"1setcolor\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"1setcolorspace\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"0currenttransfer\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"0processcolors\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"1settransfer\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"1%zcolor_remap_one_finish\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"1%zcolor_remap_one_signed_finish\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"0%zcolor_reset_transfer\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"0%zcolor_remap_color\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"0.color_test\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"1.color_test_all\00", align 1
@.str.30 = private unnamed_addr constant [20 x i8] c"0.includecolorspace\00", align 1
@zcolor_op_defs = constant [16 x %struct.op_def] [%struct.op_def { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcurrentcolor }, %struct.op_def { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcurrentcolorspace }, %struct.op_def { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zgetuseciecolor }, %struct.op_def { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zsetcolor }, %struct.op_def { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zsetcolorspace }, %struct.op_def { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcurrenttransfer }, %struct.op_def { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zprocesscolors }, %struct.op_def { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zsettransfer }, %struct.op_def { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcolor_remap_one_finish }, %struct.op_def { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcolor_remap_one_signed_finish }, %struct.op_def { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcolor_reset_transfer }, %struct.op_def { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcolor_remap_color }, %struct.op_def { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcolor_test }, %struct.op_def { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcolor_test_all }, %struct.op_def { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zincludecolorspace }, %struct.op_def zeroinitializer], align 16
@.str.31 = private unnamed_addr constant [13 x i8] c"0currentgray\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"1setgray\00", align 1
@.str.33 = private unnamed_addr constant [17 x i8] c"0currenthsbcolor\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"3sethsbcolor\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"0currentrgbcolor\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"3setrgbcolor\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"0currentcmykcolor\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"4setcmykcolor\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"1.swapcolors\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"0%setcolorspace_cont\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"0%setcolor_cont\00", align 1
@.str.42 = private unnamed_addr constant [24 x i8] c"0%devicencolorants_cont\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"0%indexed_cont\00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"0%setdevicecolor_cont\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"0%currentbasecolor_cont\00", align 1
@zcolor_ext_op_defs = constant [16 x %struct.op_def] [%struct.op_def { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcurrentgray }, %struct.op_def { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zsetgray }, %struct.op_def { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcurrenthsbcolor }, %struct.op_def { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zsethsbcolor }, %struct.op_def { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcurrentrgbcolor }, %struct.op_def { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zsetrgbcolor }, %struct.op_def { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zcurrentcmykcolor }, %struct.op_def { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zsetcmykcolor }, %struct.op_def { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @zswapcolors }, %struct.op_def { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @setcolorspace_cont }, %struct.op_def { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @setcolor_cont }, %struct.op_def { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @devicencolorants_cont }, %struct.op_def { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @indexed_cont }, %struct.op_def { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @setdevicecolor_cont }, %struct.op_def { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.45, i32 0, i32 0), i32 (%struct.gs_context_state_s*)* @currentbasecolor_cont }, %struct.op_def zeroinitializer], align 16
@.str.46 = private unnamed_addr constant [20 x i8] c"NOSUBSTDEVICECOLORS\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.48 = private unnamed_addr constant [33 x i8] c"/DefaultGray ..nosubstdevicetest\00", align 1
@.str.49 = private unnamed_addr constant [48 x i8] c"{/DefaultGray /ColorSpace findresource} stopped\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"zsetdevcspace\00", align 1
@.str.51 = private unnamed_addr constant [32 x i8] c"/DefaultRGB ..nosubstdevicetest\00", align 1
@.str.52 = private unnamed_addr constant [47 x i8] c"{/DefaultRGB /ColorSpace findresource} stopped\00", align 1
@.str.53 = private unnamed_addr constant [33 x i8] c"/DefaultCMYK ..nosubstdevicetest\00", align 1
@.str.54 = private unnamed_addr constant [48 x i8] c"{/DefaultCMYK /ColorSpace findresource} stopped\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"NOCIE\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"RangeA\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"DecodeA\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"MatrixA\00", align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"WhitePoint\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"RangeLMN\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"DecodeLMN\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"MatrixLMN\00", align 1
@.str.63 = private unnamed_addr constant [11 x i8] c"BlackPoint\00", align 1
@CIESpaces = internal constant [4 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0)], align 16
@.str.64 = private unnamed_addr constant [9 x i8] c"MatrixMN\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"RangeABC\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"DecodeABC\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"MatrixABC\00", align 1
@default_0_1 = internal constant [8 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00], align 16
@.str.68 = private unnamed_addr constant [6 x i8] c"Table\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"RangeDEF\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"DecodeDEF\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"RangeHIJ\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"RangeDEFG\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"DecodeDEFG\00", align 1
@.str.74 = private unnamed_addr constant [10 x i8] c"RangeHIJK\00", align 1
@.str.75 = private unnamed_addr constant [4 x i8] c"All\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"None\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"setseparationspace\00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"Colorants\00", align 1
@.str.79 = private unnamed_addr constant [16 x i8] c"setdevicenspace\00", align 1
@gs_color_space_type_Indexed = external constant %struct.gs_color_space_type_s, align 8
@.str.80 = private unnamed_addr constant [16 x i8] c"setindexedspace\00", align 1
@gs_color_space_type_Pattern = external constant %struct.gs_color_space_type_s, align 8
@.str.81 = private unnamed_addr constant [17 x i8] c"zsetpatternspace\00", align 1
@.str.82 = private unnamed_addr constant [15 x i8] c"Implementation\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.84 = private unnamed_addr constant [10 x i8] c"Alternate\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"DataSource\00", align 1
@.str.86 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@setlabspace.dflt_range = internal constant [4 x float] [float -1.000000e+02, float 1.000000e+02, float -1.000000e+02, float 1.000000e+02], align 16
@setlabspace.dflt_black = internal constant [3 x float] zeroinitializer, align 4
@setlabspace.dflt_white = internal constant [3 x float] zeroinitializer, align 4
@__func__.setlabspace = private unnamed_addr constant [12 x i8] c"setlabspace\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"./psi/zcolor.c\00", align 1
@.str.88 = private unnamed_addr constant [28 x i8] c"setting PDF lab color space\00", align 1
@setcalgrayspace.dflt_black = internal constant [3 x float] zeroinitializer, align 4
@setcalgrayspace.dflt_white = internal constant [3 x float] zeroinitializer, align 4
@.str.89 = private unnamed_addr constant [6 x i8] c"Gamma\00", align 1
@__func__.setcalgrayspace = private unnamed_addr constant [16 x i8] c"setcalgrayspace\00", align 1
@.str.90 = private unnamed_addr constant [29 x i8] c"setting CalGray  color space\00", align 1
@setcalrgbspace.dflt_gamma = internal constant [3 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@setcalrgbspace.dflt_black = internal constant [3 x float] zeroinitializer, align 4
@setcalrgbspace.dflt_white = internal constant [3 x float] zeroinitializer, align 4
@setcalrgbspace.dflt_matrix = internal constant [9 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 16
@.str.91 = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1
@__func__.setcalrgbspace = private unnamed_addr constant [15 x i8] c"setcalrgbspace\00", align 1
@.str.92 = private unnamed_addr constant [28 x i8] c"setting CalRGB  color space\00", align 1
@.str.93 = private unnamed_addr constant [33 x i8] c"systemdict /DeviceGray_array get\00", align 1
@.str.94 = private unnamed_addr constant [32 x i8] c"systemdict /DeviceRGB_array get\00", align 1
@.str.95 = private unnamed_addr constant [33 x i8] c"systemdict /DeviceCMYK_array get\00", align 1
@.str.96 = private unnamed_addr constant [18 x i8] c"currentcolorspace\00", align 1
@.str.97 = private unnamed_addr constant [27 x i8] c"Number of components = %d\0A\00", align 1
@.str.98 = private unnamed_addr constant [12 x i8] c"Depth = %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [35 x i8] c"max_gray = %d   dither_grays = %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [37 x i8] c"max_color = %d   dither_colors = %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"polarity = %s\0A\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"Additive\00", align 1
@.str.103 = private unnamed_addr constant [12 x i8] c"Subtractive\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.105 = private unnamed_addr constant [25 x i8] c"Zero color index:  %8lx\0A\00", align 1
@.str.106 = private unnamed_addr constant [27 x i8] c"separable_and_linear = %s\0A\00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"No\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"Yes\00", align 1
@.str.109 = private unnamed_addr constant [23 x i8] c"gray_index is unknown\0A\00", align 1
@.str.110 = private unnamed_addr constant [17 x i8] c"gray_index = %d\0A\00", align 1
@.str.111 = private unnamed_addr constant [23 x i8] c" Shift     Mask  Bits\0A\00", align 1
@.str.112 = private unnamed_addr constant [15 x i8] c" %5d %8x  %4d\0A\00", align 1
@.str.113 = private unnamed_addr constant [32 x i8] c"Failed separable_and_linear for\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.115 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.116 = private unnamed_addr constant [45 x i8] c"encode_color=%x  gx_default_encode_color=%x\0A\00", align 1
@.str.117 = private unnamed_addr constant [21 x i8] c"Maximum error %g %s\0A\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"is Ok\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"is POOR\00", align 1
@.str.120 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.121 = private unnamed_addr constant [42 x i8] c"Maximum linear_and_separable error %g %s\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @zcolor_remap_one(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %pproc, %struct.gx_transfer_map_s* %pmap, %struct.gs_state_s* %pgs, i32 (%struct.gs_context_state_s*)* %finish_proc) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %pproc.addr = alloca %struct.ref_s*, align 8
  %pmap.addr = alloca %struct.gx_transfer_map_s*, align 8
  %pgs.addr = alloca %struct.gs_state_s*, align 8
  %finish_proc.addr = alloca i32 (%struct.gs_context_state_s*)*, align 8
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %pproc, %struct.ref_s** %pproc.addr, align 8, !tbaa !1
  store %struct.gx_transfer_map_s* %pmap, %struct.gx_transfer_map_s** %pmap.addr, align 8, !tbaa !1
  store %struct.gs_state_s* %pgs, %struct.gs_state_s** %pgs.addr, align 8, !tbaa !1
  store i32 (%struct.gs_context_state_s*)* %finish_proc, i32 (%struct.gs_context_state_s*)** %finish_proc.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.ref_s*, %struct.ref_s** %pproc.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %1, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %2 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s** %pmap.addr, align 8, !tbaa !1
  call void @gx_set_identity_transfer(%struct.gx_transfer_map_s* %3) #7
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 4
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr1 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i64 -3
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr1, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  store float 0.000000e+00, float* %realval, align 4, !tbaa !20
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i64 -3
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr2, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  store i16 4096, i16* %type_attrs, align 2, !tbaa !22
  %8 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i64 -2
  %value5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr4, i32 0, i32 1
  %intval = bitcast %union.v* %value5 to i64*
  store i64 255, i64* %intval, align 8, !tbaa !23
  %9 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr6 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i64 -2
  %tas7 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr6, i32 0, i32 0
  %type_attrs8 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas7, i32 0, i32 0
  store i16 2816, i16* %type_attrs8, align 2, !tbaa !22
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i64 -1
  %value10 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr9, i32 0, i32 1
  %realval11 = bitcast %union.v* %value10 to float*
  store float 1.000000e+00, float* %realval11, align 4, !tbaa !20
  %11 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i64 -1
  %tas13 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr12, i32 0, i32 0
  %type_attrs14 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas13, i32 0, i32 0
  store i16 4096, i16* %type_attrs14, align 2, !tbaa !22
  %12 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %13 = load %struct.ref_s*, %struct.ref_s** %pproc.addr, align 8, !tbaa !1
  %14 = bitcast %struct.ref_s* %12 to i8*
  %15 = bitcast %struct.ref_s* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false), !tbaa.struct !24
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 25
  %stack15 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p16 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack15, i32 0, i32 0
  %17 = load %struct.ref_s*, %struct.ref_s** %p16, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p16, align 8, !tbaa !27
  %18 = load %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s** %pmap.addr, align 8, !tbaa !1
  %19 = bitcast %struct.gx_transfer_map_s* %18 to %struct.obj_header_s*
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 25
  %stack18 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack17, i32 0, i32 0
  %p19 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack18, i32 0, i32 0
  %21 = load %struct.ref_s*, %struct.ref_s** %p19, align 8, !tbaa !27
  %value20 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %21, i32 0, i32 1
  %pstruct = bitcast %union.v* %value20 to %struct.obj_header_s**
  store %struct.obj_header_s* %19, %struct.obj_header_s** %pstruct, align 8, !tbaa !1
  %22 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %22, i32 0, i32 1
  %23 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !28
  %24 = bitcast %struct.gs_memory_s* %23 to %struct.gs_ref_memory_s*
  %call = call i32 @imemory_space(%struct.gs_ref_memory_s* %24) #7
  %add = add i32 2048, %call
  %conv = trunc i32 %add to i16
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack22 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack21, i32 0, i32 0
  %p23 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 0
  %26 = load %struct.ref_s*, %struct.ref_s** %p23, align 8, !tbaa !27
  %tas24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i32 0, i32 0
  %type_attrs25 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas24, i32 0, i32 0
  store i16 %conv, i16* %type_attrs25, align 2, !tbaa !22
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack27 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack26, i32 0, i32 0
  %p28 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack27, i32 0, i32 0
  %28 = load %struct.ref_s*, %struct.ref_s** %p28, align 8, !tbaa !27
  %incdec.ptr29 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 1
  store %struct.ref_s* %incdec.ptr29, %struct.ref_s** %p28, align 8, !tbaa !27
  %29 = load i32 (%struct.gs_context_state_s*)*, i32 (%struct.gs_context_state_s*)** %finish_proc.addr, align 8, !tbaa !1
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack30 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 25
  %stack31 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack30, i32 0, i32 0
  %p32 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack31, i32 0, i32 0
  %31 = load %struct.ref_s*, %struct.ref_s** %p32, align 8, !tbaa !27
  %value33 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 0, i32 1
  %opproc = bitcast %union.v* %value33 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* %29, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack34 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 25
  %stack35 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack34, i32 0, i32 0
  %p36 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack35, i32 0, i32 0
  %33 = load %struct.ref_s*, %struct.ref_s** %p36, align 8, !tbaa !27
  %tas37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i32 0, i32 0
  %type_attrs38 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas37, i32 0, i32 0
  store i16 3968, i16* %type_attrs38, align 2, !tbaa !22
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack39 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 25
  %stack40 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack39, i32 0, i32 0
  %p41 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack40, i32 0, i32 0
  %35 = load %struct.ref_s*, %struct.ref_s** %p41, align 8, !tbaa !27
  %tas42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i32 0, i32 0
  %rsize43 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas42, i32 0, i32 2
  store i32 0, i32* %rsize43, align 4, !tbaa !5
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack44 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 25
  %stack45 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack44, i32 0, i32 0
  %p46 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack45, i32 0, i32 0
  %37 = load %struct.ref_s*, %struct.ref_s** %p46, align 8, !tbaa !27
  %incdec.ptr47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 1
  store %struct.ref_s* %incdec.ptr47, %struct.ref_s** %p46, align 8, !tbaa !27
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack48 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 25
  %stack49 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack48, i32 0, i32 0
  %p50 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack49, i32 0, i32 0
  %39 = load %struct.ref_s*, %struct.ref_s** %p50, align 8, !tbaa !27
  %value51 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i32 0, i32 1
  %opproc52 = bitcast %union.v* %value51 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @zfor_samples, i32 (%struct.gs_context_state_s*)** %opproc52, align 8, !tbaa !1
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack53 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 25
  %stack54 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack53, i32 0, i32 0
  %p55 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack54, i32 0, i32 0
  %41 = load %struct.ref_s*, %struct.ref_s** %p55, align 8, !tbaa !27
  %tas56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 0, i32 0
  %type_attrs57 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas56, i32 0, i32 0
  store i16 3968, i16* %type_attrs57, align 2, !tbaa !22
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack58 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 25
  %stack59 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack58, i32 0, i32 0
  %p60 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack59, i32 0, i32 0
  %43 = load %struct.ref_s*, %struct.ref_s** %p60, align 8, !tbaa !27
  %tas61 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i32 0, i32 0
  %rsize62 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas61, i32 0, i32 2
  store i32 0, i32* %rsize62, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %44 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #1
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

declare void @gx_set_identity_transfer(%struct.gx_transfer_map_s*) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @imemory_space(%struct.gs_ref_memory_s*) #2

declare i32 @zfor_samples(%struct.gs_context_state_s*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: nounwind uwtable
define i32 @zcolor_remap_one_finish(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call = call i32 @zcolor_remap_one_store(%struct.gs_context_state_s* %0, double 0.000000e+00) #7
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @zcolor_remap_one_store(%struct.gs_context_state_s* %i_ctx_p, double %min_value) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %min_value.addr = alloca double, align 8
  %i = alloca i32, align 4
  %pmap = alloca %struct.gx_transfer_map_s*, align 8
  %cleanup.dest.slot = alloca i32
  %v = alloca double, align 8
  %code = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store double %min_value, double* %min_value.addr, align 8, !tbaa !42
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.gx_transfer_map_s** %pmap to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %3 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i32 0, i32 1
  %pstruct = bitcast %union.v* %value to %struct.obj_header_s**
  %4 = load %struct.obj_header_s*, %struct.obj_header_s** %pstruct, align 8, !tbaa !1
  %5 = bitcast %struct.obj_header_s* %4 to %struct.gx_transfer_map_s*
  store %struct.gx_transfer_map_s* %5, %struct.gx_transfer_map_s** %pmap, align 8, !tbaa !1
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 26
  %stack1 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %call = call i32 @ref_stack_count(%struct.ref_stack_s* %stack1) #7
  %cmp = icmp ult i32 %call, 256
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.32

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %7, 256
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = bitcast double* %v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %10, i32 0, i32 26
  %stack4 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack3, i32 0, i32 0
  %11 = load i32, i32* %i, align 4, !tbaa !26
  %sub = sub nsw i32 255, %11
  %conv = sext i32 %sub to i64
  %call5 = call %struct.ref_s* @ref_stack_index(%struct.ref_stack_s* %stack4, i64 %conv) #7
  %call6 = call i32 @real_param(%struct.ref_s* %call5, double* %v) #7
  store i32 %call6, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %12, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %for.body
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %for.body
  %14 = load double, double* %v, align 8, !tbaa !42
  %15 = load double, double* %min_value.addr, align 8, !tbaa !42
  %cmp11 = fcmp olt double %14, %15
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.10
  %16 = load double, double* %min_value.addr, align 8, !tbaa !42
  %add = fadd double %16, 0x3EF0010010010010
  %mul = fmul double %add, 3.276000e+04
  %conv13 = fptosi double %mul to i16
  %conv14 = sext i16 %conv13 to i32
  br label %cond.end.23

cond.false:                                       ; preds = %if.end.10
  %17 = load double, double* %v, align 8, !tbaa !42
  %cmp15 = fcmp oge double %17, 1.000000e+00
  br i1 %cmp15, label %cond.true.17, label %cond.false.18

cond.true.17:                                     ; preds = %cond.false
  br label %cond.end

cond.false.18:                                    ; preds = %cond.false
  %18 = load double, double* %v, align 8, !tbaa !42
  %add19 = fadd double %18, 0x3EF0010010010010
  %mul20 = fmul double %add19, 3.276000e+04
  %conv21 = fptosi double %mul20 to i16
  %conv22 = sext i16 %conv21 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false.18, %cond.true.17
  %cond = phi i32 [ 32760, %cond.true.17 ], [ %conv22, %cond.false.18 ]
  br label %cond.end.23

cond.end.23:                                      ; preds = %cond.end, %cond.true
  %cond24 = phi i32 [ %conv14, %cond.true ], [ %cond, %cond.end ]
  %conv25 = trunc i32 %cond24 to i16
  %19 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %19 to i64
  %20 = load %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s** %pmap, align 8, !tbaa !1
  %values = getelementptr inbounds %struct.gx_transfer_map_s, %struct.gx_transfer_map_s* %20, i32 0, i32 4
  %arrayidx = getelementptr inbounds [256 x i16], [256 x i16]* %values, i32 0, i64 %idxprom
  store i16 %conv25, i16* %arrayidx, align 2, !tbaa !25
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %cond.end.23, %if.then.9
  %21 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #1
  %22 = bitcast double* %v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.32 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %23 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 26
  %stack28 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack27, i32 0, i32 0
  call void @ref_stack_pop(%struct.ref_stack_s* %stack28, i32 256) #7
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack30 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack29, i32 0, i32 0
  %p31 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack30, i32 0, i32 0
  %26 = load %struct.ref_s*, %struct.ref_s** %p31, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i32 -1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p31, align 8, !tbaa !27
  store i32 14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.32

cleanup.32:                                       ; preds = %for.end, %cleanup, %if.then
  %27 = bitcast %struct.gx_transfer_map_s** %pmap to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %28 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define i32 @zcolor_remap_one_signed_finish(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call = call i32 @zcolor_remap_one_store(%struct.gs_context_state_s* %0, double -1.000000e+00) #7
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @zcolor_reset_transfer(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %0, i32 0, i32 0
  %1 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  call void @gx_set_effective_transfer(%struct.gs_state_s* %1) #7
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call = call i32 @zcolor_remap_color(%struct.gs_context_state_s* %2) #7
  ret i32 %call
}

declare void @gx_set_effective_transfer(%struct.gs_state_s*) #2

; Function Attrs: nounwind uwtable
define i32 @zcolor_remap_color(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %0, i32 0, i32 0
  %1 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call i32 @gs_swapcolors(%struct.gs_state_s* %1) #7
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 0
  %3 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs1, align 8, !tbaa !43
  %color = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %3, i32 0, i32 69
  %arrayidx = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color, i32 0, i64 0
  %dev_color = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 2
  %4 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %dev_color, align 8, !tbaa !44
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %4, i32 0, i32 0
  store %struct.gx_device_color_type_s* @gx_dc_type_data_none, %struct.gx_device_color_type_s** %type, align 8, !tbaa !46
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs2 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %5, i32 0, i32 0
  %6 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs2, align 8, !tbaa !43
  %call3 = call i32 @gs_swapcolors(%struct.gs_state_s* %6) #7
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs4 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 0
  %8 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs4, align 8, !tbaa !43
  %color5 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %8, i32 0, i32 69
  %arrayidx6 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color5, i32 0, i64 0
  %dev_color7 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx6, i32 0, i32 2
  %9 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %dev_color7, align 8, !tbaa !44
  %type8 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %9, i32 0, i32 0
  store %struct.gx_device_color_type_s* @gx_dc_type_data_none, %struct.gx_device_color_type_s** %type8, align 8, !tbaa !46
  ret i32 0
}

declare i32 @gs_swapcolors(%struct.gs_state_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @setgrayspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %code = alloca i32, align 4
  %stref = alloca %struct.ref_s, align 8
  %body = alloca i8*, align 8
  %nosubst = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  %pcc = alloca %struct.gs_client_color_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %5 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %6 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %7 = load i32, i32* %6, align 4, !tbaa !26
  switch i32 %7, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.78
    i32 2, label %sw.bb.110
    i32 3, label %sw.bb.136
    i32 4, label %sw.bb.137
    i32 5, label %sw.bb.160
  ]

sw.bb:                                            ; preds = %do.body
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 0
  %9 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %9, i32 0, i32 2
  %10 = load i8*, i8** %client_data, align 8, !tbaa !53
  %11 = bitcast i8* %10 to %struct.int_gstate_s*
  %use_cie_color = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %11, i32 0, i32 8
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %use_cie_color, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %12 = load i16, i16* %boolval, align 2, !tbaa !25
  %conv = zext i16 %12 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.77

land.lhs.true:                                    ; preds = %sw.bb
  %13 = load i32, i32* %CIESubst.addr, align 4, !tbaa !26
  %tobool1 = icmp ne i32 %13, 0
  br i1 %tobool1, label %if.end.77, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %14 = bitcast i8** %body to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %15 = bitcast %struct.ref_s** %nosubst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0), %struct.ref_s** %nosubst) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp ne i32 %17, 0
  br i1 %cmp, label %if.then.3, label %if.end.8

if.then.3:                                        ; preds = %if.then
  %18 = load %struct.ref_s*, %struct.ref_s** %nosubst, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %19 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv4 = zext i8 %20 to i32
  %cmp5 = icmp eq i32 %conv4, 1
  br i1 %cmp5, label %if.end, label %if.then.7

if.then.7:                                        ; preds = %if.then.3
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.3
  br label %if.end.8

if.end.8:                                         ; preds = %if.end, %if.then
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp ne i32 %21, 0
  br i1 %cmp9, label %land.lhs.true.11, label %if.else

land.lhs.true.11:                                 ; preds = %if.end.8
  %22 = load %struct.ref_s*, %struct.ref_s** %nosubst, align 8, !tbaa !1
  %value12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 0, i32 1
  %boolval13 = bitcast %union.v* %value12 to i16*
  %23 = load i16, i16* %boolval13, align 2, !tbaa !25
  %conv14 = zext i16 %23 to i32
  %tobool15 = icmp ne i32 %conv14, 0
  br i1 %tobool15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %land.lhs.true.11
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 4, i32* %24, align 4, !tbaa !26
  %25 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %25, align 4, !tbaa !26
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %27 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %28 = bitcast %struct.gs_ref_memory_s* %27 to %struct.gs_memory_s*
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %28, i32 0, i32 1
  %alloc_string = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 16
  %29 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string, align 8, !tbaa !56
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 1
  %current18 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory17, i32 0, i32 0
  %31 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current18, align 8, !tbaa !55
  %32 = bitcast %struct.gs_ref_memory_s* %31 to %struct.gs_memory_s*
  %call19 = call i8* %29(%struct.gs_memory_s* %32, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call19, i8** %body, align 8, !tbaa !1
  %33 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp20 = icmp eq i8* %33, null
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.then.16
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.then.16
  %34 = load i8*, i8** %body, align 8, !tbaa !1
  %call24 = call i8* @memcpy(i8* %34, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.48, i32 0, i32 0), i64 32) #8
  %35 = load i8*, i8** %body, align 8, !tbaa !1
  %value25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes = bitcast %union.v* %value25 to i8**
  store i8* %35, i8** %bytes, align 8, !tbaa !1
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 1
  %current_space = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory26, i32 0, i32 2
  %37 = load i32, i32* %current_space, align 4, !tbaa !59
  %or = or i32 112, %37
  %add = add i32 4608, %or
  %conv27 = trunc i32 %add to i16
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs29 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 0
  store i16 %conv27, i16* %type_attrs29, align 2, !tbaa !22
  %tas30 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas30, i32 0, i32 2
  store i32 32, i32* %rsize, align 4, !tbaa !5
  %tas31 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs32 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas31, i32 0, i32 0
  %38 = load i16, i16* %type_attrs32, align 2, !tbaa !22
  %conv33 = zext i16 %38 to i32
  %or34 = or i32 %conv33, 128
  %conv35 = trunc i32 %or34 to i16
  store i16 %conv35, i16* %type_attrs32, align 2, !tbaa !22
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack36 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p37 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p37, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p37, align 8, !tbaa !27
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %43 = bitcast %struct.ref_s* %42 to i8*
  %44 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %land.lhs.true.11, %if.end.8
  %45 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 2, i32* %45, align 4, !tbaa !26
  %46 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %46, align 4, !tbaa !26
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 1
  %current42 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory41, i32 0, i32 0
  %48 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current42, align 8, !tbaa !55
  %49 = bitcast %struct.gs_ref_memory_s* %48 to %struct.gs_memory_s*
  %procs43 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %49, i32 0, i32 1
  %alloc_string44 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs43, i32 0, i32 16
  %50 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string44, align 8, !tbaa !56
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory45 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 1
  %current46 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory45, i32 0, i32 0
  %52 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current46, align 8, !tbaa !55
  %53 = bitcast %struct.gs_ref_memory_s* %52 to %struct.gs_memory_s*
  %call47 = call i8* %50(%struct.gs_memory_s* %53, i32 47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call47, i8** %body, align 8, !tbaa !1
  %54 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp48 = icmp eq i8* %54, null
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.else
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %if.else
  %55 = load i8*, i8** %body, align 8, !tbaa !1
  %call52 = call i8* @memcpy(i8* %55, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.49, i32 0, i32 0), i64 47) #8
  %56 = load i8*, i8** %body, align 8, !tbaa !1
  %value53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes54 = bitcast %union.v* %value53 to i8**
  store i8* %56, i8** %bytes54, align 8, !tbaa !1
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 1
  %current_space56 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory55, i32 0, i32 2
  %58 = load i32, i32* %current_space56, align 4, !tbaa !59
  %or57 = or i32 112, %58
  %add58 = add i32 4608, %or57
  %conv59 = trunc i32 %add58 to i16
  %tas60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs61 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas60, i32 0, i32 0
  store i16 %conv59, i16* %type_attrs61, align 2, !tbaa !22
  %tas62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize63 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas62, i32 0, i32 2
  store i32 47, i32* %rsize63, align 4, !tbaa !5
  %tas64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs65 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas64, i32 0, i32 0
  %59 = load i16, i16* %type_attrs65, align 2, !tbaa !22
  %conv66 = zext i16 %59 to i32
  %or67 = or i32 %conv66, 128
  %conv68 = trunc i32 %or67 to i16
  store i16 %conv68, i16* %type_attrs65, align 2, !tbaa !22
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack69 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %60, i32 0, i32 25
  %stack70 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack69, i32 0, i32 0
  %p71 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack70, i32 0, i32 0
  %61 = load %struct.ref_s*, %struct.ref_s** %p71, align 8, !tbaa !27
  %incdec.ptr72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %61, i32 1
  store %struct.ref_s* %incdec.ptr72, %struct.ref_s** %p71, align 8, !tbaa !27
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 25
  %stack74 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack73, i32 0, i32 0
  %p75 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack74, i32 0, i32 0
  %63 = load %struct.ref_s*, %struct.ref_s** %p75, align 8, !tbaa !27
  %64 = bitcast %struct.ref_s* %63 to i8*
  %65 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %if.then.50, %if.end.23, %if.then.22, %if.then.7
  %66 = bitcast %struct.ref_s** %nosubst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #1
  %67 = bitcast i8** %body to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67) #1
  br label %cleanup.167

if.end.77:                                        ; preds = %land.lhs.true, %sw.bb
  br label %sw.bb.78

sw.bb.78:                                         ; preds = %do.body, %if.end.77
  %68 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory79 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %68, i32 0, i32 1
  %current80 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory79, i32 0, i32 0
  %69 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current80, align 8, !tbaa !55
  %70 = bitcast %struct.gs_ref_memory_s* %69 to %struct.gs_memory_s*
  %call81 = call %struct.gs_color_space_s* @gs_cspace_new_DeviceGray(%struct.gs_memory_s* %70) #7
  store %struct.gs_color_space_s* %call81, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %71 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %cmp82 = icmp eq %struct.gs_color_space_s* %71, null
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %sw.bb.78
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.85:                                        ; preds = %sw.bb.78
  %72 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs86 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %72, i32 0, i32 0
  %73 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs86, align 8, !tbaa !43
  %74 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call87 = call i32 @gs_setcolorspace(%struct.gs_state_s* %73, %struct.gs_color_space_s* %74) #7
  store i32 %call87, i32* %code, align 4, !tbaa !26
  %75 = load i32, i32* %code, align 4, !tbaa !26
  %cmp88 = icmp sge i32 %75, 0
  br i1 %cmp88, label %if.then.90, label %if.end.109

if.then.90:                                       ; preds = %if.end.85
  %76 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %76) #1
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs91 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %77, i32 0, i32 0
  %78 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs91, align 8, !tbaa !43
  %color = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %78, i32 0, i32 69
  %arrayidx92 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color, i32 0, i64 0
  %ccolor = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx92, i32 0, i32 1
  %79 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %ccolor, align 8, !tbaa !60
  store %struct.gs_client_color_s* %79, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %80 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs93 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %80, i32 0, i32 0
  %81 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs93, align 8, !tbaa !43
  %color94 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %81, i32 0, i32 69
  %arrayidx95 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color94, i32 0, i64 0
  %color_space = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx95, i32 0, i32 0
  %82 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %color_space, align 8, !tbaa !61
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %82, i32 0, i32 0
  %83 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %adjust_color_count = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %83, i32 0, i32 14
  %84 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)** %adjust_color_count, align 8, !tbaa !65
  %85 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs96 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %85, i32 0, i32 0
  %86 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs96, align 8, !tbaa !43
  %color97 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %86, i32 0, i32 69
  %arrayidx98 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color97, i32 0, i64 0
  %ccolor99 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx98, i32 0, i32 1
  %87 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %ccolor99, align 8, !tbaa !60
  %88 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs100 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %88, i32 0, i32 0
  %89 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs100, align 8, !tbaa !43
  %color101 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %89, i32 0, i32 69
  %arrayidx102 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color101, i32 0, i64 0
  %color_space103 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx102, i32 0, i32 0
  %90 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %color_space103, align 8, !tbaa !61
  call void %84(%struct.gs_client_color_s* %87, %struct.gs_color_space_s* %90, i32 -1) #7
  %91 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %91, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx104, align 4, !tbaa !20
  %92 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %92, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %93 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs105 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %93, i32 0, i32 0
  %94 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs105, align 8, !tbaa !43
  %color106 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %94, i32 0, i32 69
  %arrayidx107 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color106, i32 0, i64 0
  %dev_color = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx107, i32 0, i32 2
  %95 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %dev_color, align 8, !tbaa !44
  %type108 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %95, i32 0, i32 0
  store %struct.gx_device_color_type_s* @gx_dc_type_data_none, %struct.gx_device_color_type_s** %type108, align 8, !tbaa !46
  %96 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %96) #1
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.90, %if.end.85
  %97 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %97, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0)) #7
  %98 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %98, align 4, !tbaa !26
  %99 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %99, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.110:                                        ; preds = %do.body
  %100 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas111 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %100, i32 0, i32 0
  %type_attrs112 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas111, i32 0, i32 0
  %101 = bitcast i16* %type_attrs112 to i8*
  %arrayidx113 = getelementptr inbounds i8, i8* %101, i64 1
  %102 = load i8, i8* %arrayidx113, align 1, !tbaa !54
  %conv114 = zext i8 %102 to i32
  %cmp115 = icmp eq i32 %conv114, 1
  br i1 %cmp115, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %sw.bb.110
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.118:                                       ; preds = %sw.bb.110
  %103 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value119 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %103, i32 0, i32 1
  %boolval120 = bitcast %union.v* %value119 to i16*
  %104 = load i16, i16* %boolval120, align 2, !tbaa !25
  %tobool121 = icmp ne i16 %104, 0
  br i1 %tobool121, label %if.then.122, label %if.end.126

if.then.122:                                      ; preds = %if.end.118
  %105 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack123 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %105, i32 0, i32 26
  %stack124 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack123, i32 0, i32 0
  %p125 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack124, i32 0, i32 0
  %106 = load %struct.ref_s*, %struct.ref_s** %p125, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %106, i64 -1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p125, align 8, !tbaa !10
  %107 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %107, align 4, !tbaa !26
  br label %sw.epilog

if.end.126:                                       ; preds = %if.end.118
  %108 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack127 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %108, i32 0, i32 26
  %stack128 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack127, i32 0, i32 0
  %p129 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack128, i32 0, i32 0
  %109 = load %struct.ref_s*, %struct.ref_s** %p129, align 8, !tbaa !10
  %add.ptr130 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %109, i64 -1
  store %struct.ref_s* %add.ptr130, %struct.ref_s** %p129, align 8, !tbaa !10
  %110 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %110, align 4, !tbaa !26
  %111 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 3, i32* %111, align 4, !tbaa !26
  %112 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call131 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %112) #7
  store i32 %call131, i32* %code, align 4, !tbaa !26
  %113 = load i32, i32* %code, align 4, !tbaa !26
  %cmp132 = icmp ne i32 %113, 0
  br i1 %cmp132, label %if.then.134, label %if.end.135

if.then.134:                                      ; preds = %if.end.126
  %114 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %114, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.135:                                       ; preds = %if.end.126
  br label %sw.epilog

sw.bb.136:                                        ; preds = %do.body
  %115 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %115, align 4, !tbaa !26
  %116 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %116, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.137:                                        ; preds = %do.body
  %117 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas138 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %117, i32 0, i32 0
  %type_attrs139 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas138, i32 0, i32 0
  %118 = bitcast i16* %type_attrs139 to i8*
  %arrayidx140 = getelementptr inbounds i8, i8* %118, i64 1
  %119 = load i8, i8* %arrayidx140, align 1, !tbaa !54
  %conv141 = zext i8 %119 to i32
  %cmp142 = icmp eq i32 %conv141, 1
  br i1 %cmp142, label %if.end.145, label %if.then.144

if.then.144:                                      ; preds = %sw.bb.137
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.145:                                       ; preds = %sw.bb.137
  %120 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack146 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %120, i32 0, i32 26
  %stack147 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack146, i32 0, i32 0
  %p148 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack147, i32 0, i32 0
  %121 = load %struct.ref_s*, %struct.ref_s** %p148, align 8, !tbaa !10
  %add.ptr149 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %121, i64 -1
  store %struct.ref_s* %add.ptr149, %struct.ref_s** %p148, align 8, !tbaa !10
  %122 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %122, align 4, !tbaa !26
  %123 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %123, align 4, !tbaa !26
  %124 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value150 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %124, i32 0, i32 1
  %boolval151 = bitcast %union.v* %value150 to i16*
  %125 = load i16, i16* %boolval151, align 2, !tbaa !25
  %tobool152 = icmp ne i16 %125, 0
  br i1 %tobool152, label %if.then.153, label %if.end.159

if.then.153:                                      ; preds = %if.end.145
  %126 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 5, i32* %126, align 4, !tbaa !26
  %127 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call154 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %127) #7
  store i32 %call154, i32* %code, align 4, !tbaa !26
  %128 = load i32, i32* %code, align 4, !tbaa !26
  %cmp155 = icmp ne i32 %128, 0
  br i1 %cmp155, label %if.then.157, label %if.end.158

if.then.157:                                      ; preds = %if.then.153
  %129 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %129, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.158:                                       ; preds = %if.then.153
  br label %if.end.159

if.end.159:                                       ; preds = %if.end.158, %if.end.145
  br label %sw.epilog

sw.bb.160:                                        ; preds = %do.body
  %130 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %130, align 4, !tbaa !26
  %131 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %131, align 4, !tbaa !26
  %132 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call161 = call i32 @zincludecolorspace(%struct.gs_context_state_s* %132) #7
  store i32 %call161, i32* %code, align 4, !tbaa !26
  %133 = load i32, i32* %code, align 4, !tbaa !26
  %cmp162 = icmp ne i32 %133, 0
  br i1 %cmp162, label %if.then.164, label %if.end.165

if.then.164:                                      ; preds = %sw.bb.160
  %134 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %134, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

if.end.165:                                       ; preds = %sw.bb.160
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.body, %if.end.165, %if.end.159, %sw.bb.136, %if.end.135, %if.then.122, %if.end.109
  br label %do.cond

do.cond:                                          ; preds = %sw.epilog
  %135 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %136 = load i32, i32* %135, align 4, !tbaa !26
  %tobool166 = icmp ne i32 %136, 0
  br i1 %tobool166, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %137 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %137, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.167

cleanup.167:                                      ; preds = %do.end, %if.then.164, %if.then.157, %if.then.144, %if.then.134, %if.then.117, %if.then.84, %cleanup
  %138 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %138) #1
  %139 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %139) #1
  %140 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %140) #1
  %141 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %141) #1
  %142 = load i32, i32* %retval
  ret i32 %142
}

; Function Attrs: nounwind uwtable
define internal i32 @onecomponent(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32* %n) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %n.addr = alloca i32*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32* %n, i32** %n.addr, align 8, !tbaa !1
  %0 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 1, i32* %0, align 4, !tbaa !26
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @grayrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %0, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %1 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1
  store float 1.000000e+00, float* %arrayidx1, align 4, !tbaa !20
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @graydomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %0, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %1 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1
  store float 1.000000e+00, float* %arrayidx1, align 4, !tbaa !20
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @graybasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %Gray = alloca float, align 4
  %RGB = alloca [3 x float], align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast float* %Gray to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.start(i64 12, i8* %4) #1
  %5 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %5, align 4, !tbaa !26
  %6 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %6, align 4, !tbaa !26
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %bot = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 1
  %9 = load %struct.ref_s*, %struct.ref_s** %bot, align 8, !tbaa !68
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i64 0
  %cmp = icmp ult %struct.ref_s* %7, %add.ptr
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 11
  br i1 %cmp3, label %if.else.14, label %if.then.5

if.then.5:                                        ; preds = %if.end
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas6 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 0, i32 0
  %type_attrs7 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas6, i32 0, i32 0
  %14 = bitcast i16* %type_attrs7 to i8*
  %arrayidx8 = getelementptr inbounds i8, i8* %14, i64 1
  %15 = load i8, i8* %arrayidx8, align 1, !tbaa !54
  %conv9 = zext i8 %15 to i32
  %cmp10 = icmp eq i32 %conv9, 16
  br i1 %cmp10, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %if.then.5
  %16 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %16, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  %17 = load float, float* %realval, align 4, !tbaa !20
  store float %17, float* %Gray, align 4, !tbaa !20
  br label %if.end.13

if.else:                                          ; preds = %if.then.5
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.then.12
  br label %if.end.17

if.else.14:                                       ; preds = %if.end
  %18 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value15 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 1
  %intval = bitcast %union.v* %value15 to i64*
  %19 = load i64, i64* %intval, align 8, !tbaa !23
  %conv16 = sitofp i64 %19 to float
  store float %conv16, float* %Gray, align 4, !tbaa !20
  br label %if.end.17

if.end.17:                                        ; preds = %if.else.14, %if.end.13
  %20 = load float, float* %Gray, align 4, !tbaa !20
  %cmp18 = fcmp olt float %20, 0.000000e+00
  br i1 %cmp18, label %if.then.22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.17
  %21 = load float, float* %Gray, align 4, !tbaa !20
  %cmp20 = fcmp ogt float %21, 1.000000e+00
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %lor.lhs.false, %if.end.17
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %lor.lhs.false
  %22 = load i32, i32* %base.addr, align 4, !tbaa !26
  switch i32 %22, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.28
    i32 2, label %sw.bb.28
    i32 3, label %sw.bb.68
  ]

sw.bb:                                            ; preds = %if.end.23
  %23 = load float, float* %Gray, align 4, !tbaa !20
  %24 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %24, i32 0, i32 1
  %realval25 = bitcast %union.v* %value24 to float*
  store float %23, float* %realval25, align 4, !tbaa !20
  %25 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas26 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i32 0, i32 0
  %type_attrs27 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas26, i32 0, i32 0
  store i16 4096, i16* %type_attrs27, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.28:                                         ; preds = %if.end.23, %if.end.23
  br label %do.body

do.body:                                          ; preds = %sw.bb.28
  %26 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr29 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i64 2
  store %struct.ref_s* %add.ptr29, %struct.ref_s** %op, align 8, !tbaa !1
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack30 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 26
  %stack31 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack30, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack31, i32 0, i32 2
  %28 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp32 = icmp ugt %struct.ref_s* %add.ptr29, %28
  br i1 %cmp32, label %if.then.34, label %if.else.37

if.then.34:                                       ; preds = %do.body
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack35 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 26
  %stack36 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack35, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 7
  store i32 2, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.37:                                       ; preds = %do.body
  %30 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 26
  %stack39 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  store %struct.ref_s* %30, %struct.ref_s** %p40, align 8, !tbaa !10
  br label %if.end.41

if.end.41:                                        ; preds = %if.else.37
  br label %do.cond

do.cond:                                          ; preds = %if.end.41
  br label %do.end

do.end:                                           ; preds = %do.cond
  %32 = load float, float* %Gray, align 4, !tbaa !20
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %32, float* %arrayidx42, align 4, !tbaa !20
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %32, float* %arrayidx43, align 4, !tbaa !20
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %32, float* %arrayidx44, align 4, !tbaa !20
  %33 = load i32, i32* %base.addr, align 4, !tbaa !26
  %cmp45 = icmp eq i32 %33, 1
  br i1 %cmp45, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %do.end
  %34 = bitcast [3 x float]* %RGB to float*
  %call = call i32 @rgb2hsb(float* %34) #7
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.47, %do.end
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %35 = load float, float* %arrayidx49, align 4, !tbaa !20
  %36 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i64 -2
  %value51 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx50, i32 0, i32 1
  %realval52 = bitcast %union.v* %value51 to float*
  store float %35, float* %realval52, align 4, !tbaa !20
  %37 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i64 -2
  %tas54 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx53, i32 0, i32 0
  %type_attrs55 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas54, i32 0, i32 0
  store i16 4096, i16* %type_attrs55, align 2, !tbaa !22
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %38 = load float, float* %arrayidx56, align 4, !tbaa !20
  %39 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx57 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i64 -1
  %value58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx57, i32 0, i32 1
  %realval59 = bitcast %union.v* %value58 to float*
  store float %38, float* %realval59, align 4, !tbaa !20
  %40 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i64 -1
  %tas61 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx60, i32 0, i32 0
  %type_attrs62 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas61, i32 0, i32 0
  store i16 4096, i16* %type_attrs62, align 2, !tbaa !22
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  %41 = load float, float* %arrayidx63, align 4, !tbaa !20
  %42 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %42, i32 0, i32 1
  %realval65 = bitcast %union.v* %value64 to float*
  store float %41, float* %realval65, align 4, !tbaa !20
  %43 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i32 0, i32 0
  %type_attrs67 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas66, i32 0, i32 0
  store i16 4096, i16* %type_attrs67, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.68:                                         ; preds = %if.end.23
  br label %do.body.69

do.body.69:                                       ; preds = %sw.bb.68
  %44 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i64 3
  store %struct.ref_s* %add.ptr70, %struct.ref_s** %op, align 8, !tbaa !1
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack71 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 26
  %stack72 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack71, i32 0, i32 0
  %top73 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack72, i32 0, i32 2
  %46 = load %struct.ref_s*, %struct.ref_s** %top73, align 8, !tbaa !69
  %cmp74 = icmp ugt %struct.ref_s* %add.ptr70, %46
  br i1 %cmp74, label %if.then.76, label %if.else.80

if.then.76:                                       ; preds = %do.body.69
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack77 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 26
  %stack78 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack77, i32 0, i32 0
  %requested79 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack78, i32 0, i32 7
  store i32 3, i32* %requested79, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.80:                                       ; preds = %do.body.69
  %48 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack81 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 26
  %stack82 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack81, i32 0, i32 0
  %p83 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack82, i32 0, i32 0
  store %struct.ref_s* %48, %struct.ref_s** %p83, align 8, !tbaa !10
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.80
  br label %do.cond.85

do.cond.85:                                       ; preds = %if.end.84
  br label %do.end.86

do.end.86:                                        ; preds = %do.cond.85
  %50 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 -3
  %value88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx87, i32 0, i32 1
  %realval89 = bitcast %union.v* %value88 to float*
  store float 0.000000e+00, float* %realval89, align 4, !tbaa !20
  %51 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx90 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i64 -3
  %tas91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx90, i32 0, i32 0
  %type_attrs92 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas91, i32 0, i32 0
  store i16 4096, i16* %type_attrs92, align 2, !tbaa !22
  %52 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx93 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i64 -2
  %value94 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx93, i32 0, i32 1
  %realval95 = bitcast %union.v* %value94 to float*
  store float 0.000000e+00, float* %realval95, align 4, !tbaa !20
  %53 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx96 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %53, i64 -2
  %tas97 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx96, i32 0, i32 0
  %type_attrs98 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas97, i32 0, i32 0
  store i16 4096, i16* %type_attrs98, align 2, !tbaa !22
  %54 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx99 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i64 -1
  %value100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx99, i32 0, i32 1
  %realval101 = bitcast %union.v* %value100 to float*
  store float 0.000000e+00, float* %realval101, align 4, !tbaa !20
  %55 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx102 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i64 -1
  %tas103 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx102, i32 0, i32 0
  %type_attrs104 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas103, i32 0, i32 0
  store i16 4096, i16* %type_attrs104, align 2, !tbaa !22
  %56 = load float, float* %Gray, align 4, !tbaa !20
  %sub = fsub float 1.000000e+00, %56
  %57 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value105 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %57, i32 0, i32 1
  %realval106 = bitcast %union.v* %value105 to float*
  store float %sub, float* %realval106, align 4, !tbaa !20
  %58 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas107 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i32 0, i32 0
  %type_attrs108 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas107, i32 0, i32 0
  store i16 4096, i16* %type_attrs108, align 2, !tbaa !22
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.23
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %do.end.86, %if.end.48, %sw.bb
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.then.76, %if.then.34, %if.then.22, %if.else, %if.then
  %59 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.end(i64 12, i8* %59) #1
  %60 = bitcast float* %Gray to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #1
  %61 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %61) #1
  %62 = load i32, i32* %retval
  ret i32 %62
}

; Function Attrs: nounwind uwtable
define internal i32 @grayvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %4 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 1
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 11
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %type_attrs3 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 0
  %7 = bitcast i16* %type_attrs3 to i8*
  %arrayidx4 = getelementptr inbounds i8, i8* %7, i64 1
  %8 = load i8, i8* %arrayidx4, align 1, !tbaa !54
  %conv5 = zext i8 %8 to i32
  %cmp6 = icmp eq i32 %conv5, 16
  br i1 %cmp6, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp8 = icmp slt i32 %9, 1
  br i1 %cmp8, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end
  %10 = load float*, float** %values.addr, align 8, !tbaa !1
  %11 = load float, float* %10, align 4, !tbaa !20
  %conv12 = fpext float %11 to double
  %cmp13 = fcmp ogt double %conv12, 1.000000e+00
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.11
  %12 = load float*, float** %values.addr, align 8, !tbaa !1
  store float 1.000000e+00, float* %12, align 4, !tbaa !20
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.15, %if.end.11
  %13 = load float*, float** %values.addr, align 8, !tbaa !1
  %14 = load float, float* %13, align 4, !tbaa !20
  %conv17 = fpext float %14 to double
  %cmp18 = fcmp olt double %conv17, 0.000000e+00
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.16
  %15 = load float*, float** %values.addr, align 8, !tbaa !1
  store float 0.000000e+00, float* %15, align 4, !tbaa !20
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.20, %if.end.16
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.21, %if.then.10, %if.then
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @truecompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @grayinitialproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %0) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 0
  %2 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call i32 @gs_setcolor(%struct.gs_state_s* %2, %struct.gs_client_color_s* %cc) #7
  %3 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %3) #1
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @setrgbspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %code = alloca i32, align 4
  %stref = alloca %struct.ref_s, align 8
  %body = alloca i8*, align 8
  %nosubst = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  %pcc = alloca %struct.gs_client_color_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %5 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %6 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %7 = load i32, i32* %6, align 4, !tbaa !26
  switch i32 %7, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.78
    i32 2, label %sw.bb.116
    i32 3, label %sw.bb.142
    i32 4, label %sw.bb.143
    i32 5, label %sw.bb.166
  ]

sw.bb:                                            ; preds = %do.body
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 0
  %9 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %9, i32 0, i32 2
  %10 = load i8*, i8** %client_data, align 8, !tbaa !53
  %11 = bitcast i8* %10 to %struct.int_gstate_s*
  %use_cie_color = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %11, i32 0, i32 8
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %use_cie_color, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %12 = load i16, i16* %boolval, align 2, !tbaa !25
  %conv = zext i16 %12 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.77

land.lhs.true:                                    ; preds = %sw.bb
  %13 = load i32, i32* %CIESubst.addr, align 4, !tbaa !26
  %tobool1 = icmp ne i32 %13, 0
  br i1 %tobool1, label %if.end.77, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %14 = bitcast i8** %body to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %15 = bitcast %struct.ref_s** %nosubst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0), %struct.ref_s** %nosubst) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp ne i32 %17, 0
  br i1 %cmp, label %if.then.3, label %if.end.8

if.then.3:                                        ; preds = %if.then
  %18 = load %struct.ref_s*, %struct.ref_s** %nosubst, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %19 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv4 = zext i8 %20 to i32
  %cmp5 = icmp eq i32 %conv4, 1
  br i1 %cmp5, label %if.end, label %if.then.7

if.then.7:                                        ; preds = %if.then.3
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.3
  br label %if.end.8

if.end.8:                                         ; preds = %if.end, %if.then
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp ne i32 %21, 0
  br i1 %cmp9, label %land.lhs.true.11, label %if.else

land.lhs.true.11:                                 ; preds = %if.end.8
  %22 = load %struct.ref_s*, %struct.ref_s** %nosubst, align 8, !tbaa !1
  %value12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 0, i32 1
  %boolval13 = bitcast %union.v* %value12 to i16*
  %23 = load i16, i16* %boolval13, align 2, !tbaa !25
  %conv14 = zext i16 %23 to i32
  %tobool15 = icmp ne i32 %conv14, 0
  br i1 %tobool15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %land.lhs.true.11
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 4, i32* %24, align 4, !tbaa !26
  %25 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %25, align 4, !tbaa !26
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %27 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %28 = bitcast %struct.gs_ref_memory_s* %27 to %struct.gs_memory_s*
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %28, i32 0, i32 1
  %alloc_string = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 16
  %29 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string, align 8, !tbaa !56
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 1
  %current18 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory17, i32 0, i32 0
  %31 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current18, align 8, !tbaa !55
  %32 = bitcast %struct.gs_ref_memory_s* %31 to %struct.gs_memory_s*
  %call19 = call i8* %29(%struct.gs_memory_s* %32, i32 31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call19, i8** %body, align 8, !tbaa !1
  %33 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp20 = icmp eq i8* %33, null
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.then.16
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.then.16
  %34 = load i8*, i8** %body, align 8, !tbaa !1
  %call24 = call i8* @memcpy(i8* %34, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i32 0, i32 0), i64 31) #8
  %35 = load i8*, i8** %body, align 8, !tbaa !1
  %value25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes = bitcast %union.v* %value25 to i8**
  store i8* %35, i8** %bytes, align 8, !tbaa !1
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 1
  %current_space = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory26, i32 0, i32 2
  %37 = load i32, i32* %current_space, align 4, !tbaa !59
  %or = or i32 112, %37
  %add = add i32 4608, %or
  %conv27 = trunc i32 %add to i16
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs29 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 0
  store i16 %conv27, i16* %type_attrs29, align 2, !tbaa !22
  %tas30 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas30, i32 0, i32 2
  store i32 31, i32* %rsize, align 4, !tbaa !5
  %tas31 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs32 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas31, i32 0, i32 0
  %38 = load i16, i16* %type_attrs32, align 2, !tbaa !22
  %conv33 = zext i16 %38 to i32
  %or34 = or i32 %conv33, 128
  %conv35 = trunc i32 %or34 to i16
  store i16 %conv35, i16* %type_attrs32, align 2, !tbaa !22
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack36 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p37 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p37, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p37, align 8, !tbaa !27
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %43 = bitcast %struct.ref_s* %42 to i8*
  %44 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %land.lhs.true.11, %if.end.8
  %45 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 2, i32* %45, align 4, !tbaa !26
  %46 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %46, align 4, !tbaa !26
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 1
  %current42 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory41, i32 0, i32 0
  %48 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current42, align 8, !tbaa !55
  %49 = bitcast %struct.gs_ref_memory_s* %48 to %struct.gs_memory_s*
  %procs43 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %49, i32 0, i32 1
  %alloc_string44 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs43, i32 0, i32 16
  %50 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string44, align 8, !tbaa !56
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory45 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 1
  %current46 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory45, i32 0, i32 0
  %52 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current46, align 8, !tbaa !55
  %53 = bitcast %struct.gs_ref_memory_s* %52 to %struct.gs_memory_s*
  %call47 = call i8* %50(%struct.gs_memory_s* %53, i32 46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call47, i8** %body, align 8, !tbaa !1
  %54 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp48 = icmp eq i8* %54, null
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.else
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %if.else
  %55 = load i8*, i8** %body, align 8, !tbaa !1
  %call52 = call i8* @memcpy(i8* %55, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.52, i32 0, i32 0), i64 46) #8
  %56 = load i8*, i8** %body, align 8, !tbaa !1
  %value53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes54 = bitcast %union.v* %value53 to i8**
  store i8* %56, i8** %bytes54, align 8, !tbaa !1
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 1
  %current_space56 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory55, i32 0, i32 2
  %58 = load i32, i32* %current_space56, align 4, !tbaa !59
  %or57 = or i32 112, %58
  %add58 = add i32 4608, %or57
  %conv59 = trunc i32 %add58 to i16
  %tas60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs61 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas60, i32 0, i32 0
  store i16 %conv59, i16* %type_attrs61, align 2, !tbaa !22
  %tas62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize63 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas62, i32 0, i32 2
  store i32 46, i32* %rsize63, align 4, !tbaa !5
  %tas64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs65 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas64, i32 0, i32 0
  %59 = load i16, i16* %type_attrs65, align 2, !tbaa !22
  %conv66 = zext i16 %59 to i32
  %or67 = or i32 %conv66, 128
  %conv68 = trunc i32 %or67 to i16
  store i16 %conv68, i16* %type_attrs65, align 2, !tbaa !22
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack69 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %60, i32 0, i32 25
  %stack70 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack69, i32 0, i32 0
  %p71 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack70, i32 0, i32 0
  %61 = load %struct.ref_s*, %struct.ref_s** %p71, align 8, !tbaa !27
  %incdec.ptr72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %61, i32 1
  store %struct.ref_s* %incdec.ptr72, %struct.ref_s** %p71, align 8, !tbaa !27
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 25
  %stack74 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack73, i32 0, i32 0
  %p75 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack74, i32 0, i32 0
  %63 = load %struct.ref_s*, %struct.ref_s** %p75, align 8, !tbaa !27
  %64 = bitcast %struct.ref_s* %63 to i8*
  %65 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %if.then.50, %if.end.23, %if.then.22, %if.then.7
  %66 = bitcast %struct.ref_s** %nosubst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #1
  %67 = bitcast i8** %body to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67) #1
  br label %cleanup.173

if.end.77:                                        ; preds = %land.lhs.true, %sw.bb
  br label %sw.bb.78

sw.bb.78:                                         ; preds = %do.body, %if.end.77
  %68 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory79 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %68, i32 0, i32 1
  %current80 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory79, i32 0, i32 0
  %69 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current80, align 8, !tbaa !55
  %70 = bitcast %struct.gs_ref_memory_s* %69 to %struct.gs_memory_s*
  %call81 = call %struct.gs_color_space_s* @gs_cspace_new_DeviceRGB(%struct.gs_memory_s* %70) #7
  store %struct.gs_color_space_s* %call81, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %71 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %cmp82 = icmp eq %struct.gs_color_space_s* %71, null
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %sw.bb.78
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.173

if.end.85:                                        ; preds = %sw.bb.78
  %72 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs86 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %72, i32 0, i32 0
  %73 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs86, align 8, !tbaa !43
  %74 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call87 = call i32 @gs_setcolorspace(%struct.gs_state_s* %73, %struct.gs_color_space_s* %74) #7
  store i32 %call87, i32* %code, align 4, !tbaa !26
  %75 = load i32, i32* %code, align 4, !tbaa !26
  %cmp88 = icmp sge i32 %75, 0
  br i1 %cmp88, label %if.then.90, label %if.end.115

if.then.90:                                       ; preds = %if.end.85
  %76 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %76) #1
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs91 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %77, i32 0, i32 0
  %78 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs91, align 8, !tbaa !43
  %color = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %78, i32 0, i32 69
  %arrayidx92 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color, i32 0, i64 0
  %ccolor = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx92, i32 0, i32 1
  %79 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %ccolor, align 8, !tbaa !60
  store %struct.gs_client_color_s* %79, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %80 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs93 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %80, i32 0, i32 0
  %81 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs93, align 8, !tbaa !43
  %color94 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %81, i32 0, i32 69
  %arrayidx95 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color94, i32 0, i64 0
  %color_space = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx95, i32 0, i32 0
  %82 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %color_space, align 8, !tbaa !61
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %82, i32 0, i32 0
  %83 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %adjust_color_count = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %83, i32 0, i32 14
  %84 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)** %adjust_color_count, align 8, !tbaa !65
  %85 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs96 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %85, i32 0, i32 0
  %86 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs96, align 8, !tbaa !43
  %color97 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %86, i32 0, i32 69
  %arrayidx98 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color97, i32 0, i64 0
  %ccolor99 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx98, i32 0, i32 1
  %87 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %ccolor99, align 8, !tbaa !60
  %88 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs100 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %88, i32 0, i32 0
  %89 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs100, align 8, !tbaa !43
  %color101 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %89, i32 0, i32 69
  %arrayidx102 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color101, i32 0, i64 0
  %color_space103 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx102, i32 0, i32 0
  %90 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %color_space103, align 8, !tbaa !61
  call void %84(%struct.gs_client_color_s* %87, %struct.gs_color_space_s* %90, i32 -1) #7
  %91 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %91, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx104, align 4, !tbaa !20
  %92 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint105 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %92, i32 0, i32 1
  %values106 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint105, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [64 x float], [64 x float]* %values106, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx107, align 4, !tbaa !20
  %93 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint108 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %93, i32 0, i32 1
  %values109 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint108, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [64 x float], [64 x float]* %values109, i32 0, i64 2
  store float 0.000000e+00, float* %arrayidx110, align 4, !tbaa !20
  %94 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %94, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %95 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs111 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %95, i32 0, i32 0
  %96 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs111, align 8, !tbaa !43
  %color112 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %96, i32 0, i32 69
  %arrayidx113 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color112, i32 0, i64 0
  %dev_color = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx113, i32 0, i32 2
  %97 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %dev_color, align 8, !tbaa !44
  %type114 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %97, i32 0, i32 0
  store %struct.gx_device_color_type_s* @gx_dc_type_data_none, %struct.gx_device_color_type_s** %type114, align 8, !tbaa !46
  %98 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %98) #1
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.90, %if.end.85
  %99 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %99, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0)) #7
  %100 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %100, align 4, !tbaa !26
  %101 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %101, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.116:                                        ; preds = %do.body
  %102 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas117 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %102, i32 0, i32 0
  %type_attrs118 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas117, i32 0, i32 0
  %103 = bitcast i16* %type_attrs118 to i8*
  %arrayidx119 = getelementptr inbounds i8, i8* %103, i64 1
  %104 = load i8, i8* %arrayidx119, align 1, !tbaa !54
  %conv120 = zext i8 %104 to i32
  %cmp121 = icmp eq i32 %conv120, 1
  br i1 %cmp121, label %if.end.124, label %if.then.123

if.then.123:                                      ; preds = %sw.bb.116
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.173

if.end.124:                                       ; preds = %sw.bb.116
  %105 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value125 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %105, i32 0, i32 1
  %boolval126 = bitcast %union.v* %value125 to i16*
  %106 = load i16, i16* %boolval126, align 2, !tbaa !25
  %tobool127 = icmp ne i16 %106, 0
  br i1 %tobool127, label %if.then.128, label %if.end.132

if.then.128:                                      ; preds = %if.end.124
  %107 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack129 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %107, i32 0, i32 26
  %stack130 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack129, i32 0, i32 0
  %p131 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack130, i32 0, i32 0
  %108 = load %struct.ref_s*, %struct.ref_s** %p131, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %108, i64 -1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p131, align 8, !tbaa !10
  %109 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %109, align 4, !tbaa !26
  br label %sw.epilog

if.end.132:                                       ; preds = %if.end.124
  %110 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack133 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %110, i32 0, i32 26
  %stack134 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack133, i32 0, i32 0
  %p135 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack134, i32 0, i32 0
  %111 = load %struct.ref_s*, %struct.ref_s** %p135, align 8, !tbaa !10
  %add.ptr136 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %111, i64 -1
  store %struct.ref_s* %add.ptr136, %struct.ref_s** %p135, align 8, !tbaa !10
  %112 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 3, i32* %112, align 4, !tbaa !26
  %113 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call137 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %113) #7
  store i32 %call137, i32* %code, align 4, !tbaa !26
  %114 = load i32, i32* %code, align 4, !tbaa !26
  %cmp138 = icmp ne i32 %114, 0
  br i1 %cmp138, label %if.then.140, label %if.end.141

if.then.140:                                      ; preds = %if.end.132
  %115 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %115, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.173

if.end.141:                                       ; preds = %if.end.132
  br label %sw.epilog

sw.bb.142:                                        ; preds = %do.body
  %116 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %116, align 4, !tbaa !26
  %117 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %117, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.143:                                        ; preds = %do.body
  %118 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas144 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %118, i32 0, i32 0
  %type_attrs145 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas144, i32 0, i32 0
  %119 = bitcast i16* %type_attrs145 to i8*
  %arrayidx146 = getelementptr inbounds i8, i8* %119, i64 1
  %120 = load i8, i8* %arrayidx146, align 1, !tbaa !54
  %conv147 = zext i8 %120 to i32
  %cmp148 = icmp eq i32 %conv147, 1
  br i1 %cmp148, label %if.end.151, label %if.then.150

if.then.150:                                      ; preds = %sw.bb.143
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.173

if.end.151:                                       ; preds = %sw.bb.143
  %121 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack152 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %121, i32 0, i32 26
  %stack153 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack152, i32 0, i32 0
  %p154 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack153, i32 0, i32 0
  %122 = load %struct.ref_s*, %struct.ref_s** %p154, align 8, !tbaa !10
  %add.ptr155 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %122, i64 -1
  store %struct.ref_s* %add.ptr155, %struct.ref_s** %p154, align 8, !tbaa !10
  %123 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %123, align 4, !tbaa !26
  %124 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %124, align 4, !tbaa !26
  %125 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value156 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %125, i32 0, i32 1
  %boolval157 = bitcast %union.v* %value156 to i16*
  %126 = load i16, i16* %boolval157, align 2, !tbaa !25
  %tobool158 = icmp ne i16 %126, 0
  br i1 %tobool158, label %if.then.159, label %if.end.165

if.then.159:                                      ; preds = %if.end.151
  %127 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 5, i32* %127, align 4, !tbaa !26
  %128 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call160 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %128) #7
  store i32 %call160, i32* %code, align 4, !tbaa !26
  %129 = load i32, i32* %code, align 4, !tbaa !26
  %cmp161 = icmp ne i32 %129, 0
  br i1 %cmp161, label %if.then.163, label %if.end.164

if.then.163:                                      ; preds = %if.then.159
  %130 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %130, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.173

if.end.164:                                       ; preds = %if.then.159
  br label %if.end.165

if.end.165:                                       ; preds = %if.end.164, %if.end.151
  br label %sw.epilog

sw.bb.166:                                        ; preds = %do.body
  %131 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %131, align 4, !tbaa !26
  %132 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %132, align 4, !tbaa !26
  %133 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call167 = call i32 @zincludecolorspace(%struct.gs_context_state_s* %133) #7
  store i32 %call167, i32* %code, align 4, !tbaa !26
  %134 = load i32, i32* %code, align 4, !tbaa !26
  %cmp168 = icmp ne i32 %134, 0
  br i1 %cmp168, label %if.then.170, label %if.end.171

if.then.170:                                      ; preds = %sw.bb.166
  %135 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %135, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.173

if.end.171:                                       ; preds = %sw.bb.166
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.body, %if.end.171, %if.end.165, %sw.bb.142, %if.end.141, %if.then.128, %if.end.115
  br label %do.cond

do.cond:                                          ; preds = %sw.epilog
  %136 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %137 = load i32, i32* %136, align 4, !tbaa !26
  %tobool172 = icmp ne i32 %137, 0
  br i1 %tobool172, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %138 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %138, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.173

cleanup.173:                                      ; preds = %do.end, %if.then.170, %if.then.163, %if.then.150, %if.then.140, %if.then.123, %if.then.84, %cleanup
  %139 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %139) #1
  %140 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %140) #1
  %141 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %141) #1
  %142 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %142) #1
  %143 = load i32, i32* %retval
  ret i32 %143
}

; Function Attrs: nounwind uwtable
define internal i32 @threecomponent(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32* %n) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %n.addr = alloca i32*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32* %n, i32** %n.addr, align 8, !tbaa !1
  %0 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 3, i32* %0, align 4, !tbaa !26
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @rgbrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp slt i32 %1, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %2 to i64
  %3 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %4 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %4, 1
  %idxprom1 = sext i32 %add to i64
  %5 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 %idxprom1
  store float 1.000000e+00, float* %arrayidx2, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %add3 = add nsw i32 %6, 2
  store i32 %add3, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %7) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @rgbdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp slt i32 %1, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %2 to i64
  %3 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %4 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %4, 1
  %idxprom1 = sext i32 %add to i64
  %5 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 %idxprom1
  store float 1.000000e+00, float* %arrayidx2, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %add3 = add nsw i32 %6, 2
  store i32 %add3, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %7) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @rgbbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %RGB = alloca [3 x float], align 4
  %CMYK = alloca [4 x float], align 16
  %Gray = alloca float, align 4
  %UCR = alloca float, align 4
  %BG = alloca float, align 4
  %i = alloca i32, align 4
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  %es_code_229 = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.start(i64 12, i8* %3) #1
  %4 = bitcast [4 x float]* %CMYK to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast float* %Gray to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast float* %UCR to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast float* %BG to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %10, i32 0, i32 0
  %11 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %11) #7
  store %struct.gs_color_space_s* %call, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %12 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %id = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %12, i32 0, i32 2
  %13 = load i64, i64* %id, align 8, !tbaa !71
  %cmp = icmp eq i64 %13, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %15 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %16 = load i32, i32* %base.addr, align 4, !tbaa !26
  %17 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %18 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  %19 = load i32*, i32** %stack_depth.addr, align 8, !tbaa !1
  %call1 = call i32 @graybasecolor(%struct.gs_context_state_s* %14, %struct.ref_s* %15, i32 %16, i32* %17, i32* %18, i32* %19) #7
  store i32 %call1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end:                                           ; preds = %entry
  %20 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %21 = load i32, i32* %20, align 4, !tbaa !26
  switch i32 %21, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.217
    i32 2, label %sw.bb.365
  ]

sw.bb:                                            ; preds = %if.end
  %22 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %22, align 4, !tbaa !26
  %23 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack2 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 26
  %stack3 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack2, i32 0, i32 0
  %bot = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack3, i32 0, i32 1
  %25 = load %struct.ref_s*, %struct.ref_s** %bot, align 8, !tbaa !68
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i64 2
  %cmp4 = icmp ult %struct.ref_s* %23, %add.ptr
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %sw.bb
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.6:                                         ; preds = %sw.bb
  %26 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr7 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i64 -2
  store %struct.ref_s* %add.ptr7, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.6
  %27 = load i32, i32* %i, align 4, !tbaa !26
  %cmp8 = icmp slt i32 %27, 3
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %28 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %29 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %30 to i32
  %cmp9 = icmp eq i32 %conv, 11
  br i1 %cmp9, label %if.else.21, label %if.then.11

if.then.11:                                       ; preds = %for.body
  %31 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 0, i32 0
  %type_attrs13 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas12, i32 0, i32 0
  %32 = bitcast i16* %type_attrs13 to i8*
  %arrayidx14 = getelementptr inbounds i8, i8* %32, i64 1
  %33 = load i8, i8* %arrayidx14, align 1, !tbaa !54
  %conv15 = zext i8 %33 to i32
  %cmp16 = icmp eq i32 %conv15, 16
  br i1 %cmp16, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %if.then.11
  %34 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  %35 = load float, float* %realval, align 4, !tbaa !20
  %36 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %36 to i64
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom
  store float %35, float* %arrayidx19, align 4, !tbaa !20
  br label %if.end.20

if.else:                                          ; preds = %if.then.11
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.20:                                        ; preds = %if.then.18
  br label %if.end.26

if.else.21:                                       ; preds = %for.body
  %37 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value22 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 1
  %intval = bitcast %union.v* %value22 to i64*
  %38 = load i64, i64* %intval, align 8, !tbaa !23
  %conv23 = sitofp i64 %38 to float
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom24 = sext i32 %39 to i64
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom24
  store float %conv23, float* %arrayidx25, align 4, !tbaa !20
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.21, %if.end.20
  %40 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom27 = sext i32 %40 to i64
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom27
  %41 = load float, float* %arrayidx28, align 4, !tbaa !20
  %cmp29 = fcmp olt float %41, 0.000000e+00
  br i1 %cmp29, label %if.then.35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.26
  %42 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom31 = sext i32 %42 to i64
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom31
  %43 = load float, float* %arrayidx32, align 4, !tbaa !20
  %cmp33 = fcmp ogt float %43, 1.000000e+00
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %lor.lhs.false, %if.end.26
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.36:                                        ; preds = %lor.lhs.false
  %44 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.36
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %45, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack37 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 26
  %stack38 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack37, i32 0, i32 0
  %p39 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack38, i32 0, i32 0
  %47 = load %struct.ref_s*, %struct.ref_s** %p39, align 8, !tbaa !10
  store %struct.ref_s* %47, %struct.ref_s** %op, align 8, !tbaa !1
  %48 = load i32, i32* %base.addr, align 4, !tbaa !26
  switch i32 %48, label %sw.default [
    i32 0, label %sw.bb.40
    i32 1, label %sw.bb.74
    i32 2, label %sw.bb.95
    i32 3, label %sw.bb.115
  ]

sw.bb.40:                                         ; preds = %for.end
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 26
  %stack42 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack41, i32 0, i32 0
  %p43 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack42, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p43, align 8, !tbaa !10
  %add.ptr44 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 -2
  store %struct.ref_s* %add.ptr44, %struct.ref_s** %p43, align 8, !tbaa !10
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack45 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 26
  %stack46 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack45, i32 0, i32 0
  %p47 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack46, i32 0, i32 0
  %52 = load %struct.ref_s*, %struct.ref_s** %p47, align 8, !tbaa !10
  store %struct.ref_s* %52, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %53 = load float, float* %arrayidx48, align 4, !tbaa !20
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %54 = load float, float* %arrayidx49, align 4, !tbaa !20
  %cmp50 = fcmp oeq float %53, %54
  br i1 %cmp50, label %land.lhs.true, label %if.else.58

land.lhs.true:                                    ; preds = %sw.bb.40
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %55 = load float, float* %arrayidx52, align 4, !tbaa !20
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  %56 = load float, float* %arrayidx53, align 4, !tbaa !20
  %cmp54 = fcmp oeq float %55, %56
  br i1 %cmp54, label %if.then.56, label %if.else.58

if.then.56:                                       ; preds = %land.lhs.true
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %57 = load float, float* %arrayidx57, align 4, !tbaa !20
  store float %57, float* %Gray, align 4, !tbaa !20
  br label %if.end.69

if.else.58:                                       ; preds = %land.lhs.true, %sw.bb.40
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %58 = load float, float* %arrayidx59, align 4, !tbaa !20
  %conv60 = fpext float %58 to double
  %mul = fmul double 3.000000e-01, %conv60
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %59 = load float, float* %arrayidx61, align 4, !tbaa !20
  %conv62 = fpext float %59 to double
  %mul63 = fmul double 5.900000e-01, %conv62
  %add = fadd double %mul, %mul63
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  %60 = load float, float* %arrayidx64, align 4, !tbaa !20
  %conv65 = fpext float %60 to double
  %mul66 = fmul double 1.100000e-01, %conv65
  %add67 = fadd double %add, %mul66
  %conv68 = fptrunc double %add67 to float
  store float %conv68, float* %Gray, align 4, !tbaa !20
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.58, %if.then.56
  %61 = load float, float* %Gray, align 4, !tbaa !20
  %62 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %62, i32 0, i32 1
  %realval71 = bitcast %union.v* %value70 to float*
  store float %61, float* %realval71, align 4, !tbaa !20
  %63 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %63, i32 0, i32 0
  %type_attrs73 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas72, i32 0, i32 0
  store i16 4096, i16* %type_attrs73, align 2, !tbaa !22
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

sw.bb.74:                                         ; preds = %for.end
  %64 = bitcast [3 x float]* %RGB to float*
  %call75 = call i32 @rgb2hsb(float* %64) #7
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %65 = load float, float* %arrayidx76, align 4, !tbaa !20
  %66 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %66, i64 -2
  %value78 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx77, i32 0, i32 1
  %realval79 = bitcast %union.v* %value78 to float*
  store float %65, float* %realval79, align 4, !tbaa !20
  %67 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx80 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %67, i64 -2
  %tas81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx80, i32 0, i32 0
  %type_attrs82 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas81, i32 0, i32 0
  store i16 4096, i16* %type_attrs82, align 2, !tbaa !22
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %68 = load float, float* %arrayidx83, align 4, !tbaa !20
  %69 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx84 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %69, i64 -1
  %value85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx84, i32 0, i32 1
  %realval86 = bitcast %union.v* %value85 to float*
  store float %68, float* %realval86, align 4, !tbaa !20
  %70 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %70, i64 -1
  %tas88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx87, i32 0, i32 0
  %type_attrs89 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas88, i32 0, i32 0
  store i16 4096, i16* %type_attrs89, align 2, !tbaa !22
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  %71 = load float, float* %arrayidx90, align 4, !tbaa !20
  %72 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %72, i32 0, i32 1
  %realval92 = bitcast %union.v* %value91 to float*
  store float %71, float* %realval92, align 4, !tbaa !20
  %73 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas93 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %73, i32 0, i32 0
  %type_attrs94 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas93, i32 0, i32 0
  store i16 4096, i16* %type_attrs94, align 2, !tbaa !22
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

sw.bb.95:                                         ; preds = %for.end
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %74 = load float, float* %arrayidx96, align 4, !tbaa !20
  %75 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx97 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %75, i64 -2
  %value98 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx97, i32 0, i32 1
  %realval99 = bitcast %union.v* %value98 to float*
  store float %74, float* %realval99, align 4, !tbaa !20
  %76 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %76, i64 -2
  %tas101 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx100, i32 0, i32 0
  %type_attrs102 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas101, i32 0, i32 0
  store i16 4096, i16* %type_attrs102, align 2, !tbaa !22
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %77 = load float, float* %arrayidx103, align 4, !tbaa !20
  %78 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx104 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %78, i64 -1
  %value105 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx104, i32 0, i32 1
  %realval106 = bitcast %union.v* %value105 to float*
  store float %77, float* %realval106, align 4, !tbaa !20
  %79 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx107 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %79, i64 -1
  %tas108 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx107, i32 0, i32 0
  %type_attrs109 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas108, i32 0, i32 0
  store i16 4096, i16* %type_attrs109, align 2, !tbaa !22
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  %80 = load float, float* %arrayidx110, align 4, !tbaa !20
  %81 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value111 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %81, i32 0, i32 1
  %realval112 = bitcast %union.v* %value111 to float*
  store float %80, float* %realval112, align 4, !tbaa !20
  %82 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas113 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %82, i32 0, i32 0
  %type_attrs114 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas113, i32 0, i32 0
  store i16 4096, i16* %type_attrs114, align 2, !tbaa !22
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

sw.bb.115:                                        ; preds = %for.end
  %83 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %83, align 4, !tbaa !26
  %84 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %84, align 4, !tbaa !26
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.116

for.cond.116:                                     ; preds = %for.inc.124, %sw.bb.115
  %85 = load i32, i32* %i, align 4, !tbaa !26
  %cmp117 = icmp slt i32 %85, 3
  br i1 %cmp117, label %for.body.119, label %for.end.126

for.body.119:                                     ; preds = %for.cond.116
  %86 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom120 = sext i32 %86 to i64
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom120
  %87 = load float, float* %arrayidx121, align 4, !tbaa !20
  %sub = fsub float 1.000000e+00, %87
  %88 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom122 = sext i32 %88 to i64
  %arrayidx123 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom122
  store float %sub, float* %arrayidx123, align 4, !tbaa !20
  br label %for.inc.124

for.inc.124:                                      ; preds = %for.body.119
  %89 = load i32, i32* %i, align 4, !tbaa !26
  %inc125 = add nsw i32 %89, 1
  store i32 %inc125, i32* %i, align 4, !tbaa !26
  br label %for.cond.116

for.end.126:                                      ; preds = %for.cond.116
  %arrayidx127 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 0
  %90 = load float, float* %arrayidx127, align 4, !tbaa !20
  %arrayidx128 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 1
  %91 = load float, float* %arrayidx128, align 4, !tbaa !20
  %cmp129 = fcmp olt float %90, %91
  br i1 %cmp129, label %if.then.131, label %if.else.143

if.then.131:                                      ; preds = %for.end.126
  %arrayidx132 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 0
  %92 = load float, float* %arrayidx132, align 4, !tbaa !20
  %arrayidx133 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 2
  %93 = load float, float* %arrayidx133, align 4, !tbaa !20
  %cmp134 = fcmp olt float %92, %93
  br i1 %cmp134, label %if.then.136, label %if.else.139

if.then.136:                                      ; preds = %if.then.131
  %arrayidx137 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 0
  %94 = load float, float* %arrayidx137, align 4, !tbaa !20
  %arrayidx138 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  store float %94, float* %arrayidx138, align 4, !tbaa !20
  br label %if.end.142

if.else.139:                                      ; preds = %if.then.131
  %arrayidx140 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 2
  %95 = load float, float* %arrayidx140, align 4, !tbaa !20
  %arrayidx141 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  store float %95, float* %arrayidx141, align 4, !tbaa !20
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.139, %if.then.136
  br label %if.end.155

if.else.143:                                      ; preds = %for.end.126
  %arrayidx144 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 1
  %96 = load float, float* %arrayidx144, align 4, !tbaa !20
  %arrayidx145 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 2
  %97 = load float, float* %arrayidx145, align 4, !tbaa !20
  %cmp146 = fcmp olt float %96, %97
  br i1 %cmp146, label %if.then.148, label %if.else.151

if.then.148:                                      ; preds = %if.else.143
  %arrayidx149 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 1
  %98 = load float, float* %arrayidx149, align 4, !tbaa !20
  %arrayidx150 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  store float %98, float* %arrayidx150, align 4, !tbaa !20
  br label %if.end.154

if.else.151:                                      ; preds = %if.else.143
  %arrayidx152 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 2
  %99 = load float, float* %arrayidx152, align 4, !tbaa !20
  %arrayidx153 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  store float %99, float* %arrayidx153, align 4, !tbaa !20
  br label %if.end.154

if.end.154:                                       ; preds = %if.else.151, %if.then.148
  br label %if.end.155

if.end.155:                                       ; preds = %if.end.154, %if.end.142
  %100 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %100, i32 0, i32 25
  %stack156 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p157 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack156, i32 0, i32 0
  %101 = load %struct.ref_s*, %struct.ref_s** %p157, align 8, !tbaa !27
  %102 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack158 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %102, i32 0, i32 25
  %stack159 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack158, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack159, i32 0, i32 2
  %103 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr160 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %103, i64 -1
  %cmp161 = icmp ugt %struct.ref_s* %101, %add.ptr160
  br i1 %cmp161, label %if.then.163, label %if.end.171

if.then.163:                                      ; preds = %if.end.155
  %104 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %104) #1
  %105 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack164 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %105, i32 0, i32 25
  %stack165 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack164, i32 0, i32 0
  %call166 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack165, i32 1) #7
  store i32 %call166, i32* %es_code_, align 4, !tbaa !26
  %106 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp167 = icmp slt i32 %106, 0
  br i1 %cmp167, label %if.then.169, label %if.end.170

if.then.169:                                      ; preds = %if.then.163
  %107 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %107, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.170:                                       ; preds = %if.then.163
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.170, %if.then.169
  %108 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.416 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.171

if.end.171:                                       ; preds = %cleanup.cont, %if.end.155
  br label %do.body

do.body:                                          ; preds = %if.end.171
  %109 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr172 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %109, i64 2
  store %struct.ref_s* %add.ptr172, %struct.ref_s** %op, align 8, !tbaa !1
  %110 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack173 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %110, i32 0, i32 26
  %stack174 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack173, i32 0, i32 0
  %top175 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack174, i32 0, i32 2
  %111 = load %struct.ref_s*, %struct.ref_s** %top175, align 8, !tbaa !69
  %cmp176 = icmp ugt %struct.ref_s* %add.ptr172, %111
  br i1 %cmp176, label %if.then.178, label %if.else.181

if.then.178:                                      ; preds = %do.body
  %112 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack179 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %112, i32 0, i32 26
  %stack180 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack179, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack180, i32 0, i32 7
  store i32 2, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.else.181:                                      ; preds = %do.body
  %113 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %114 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack182 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %114, i32 0, i32 26
  %stack183 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack182, i32 0, i32 0
  %p184 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack183, i32 0, i32 0
  store %struct.ref_s* %113, %struct.ref_s** %p184, align 8, !tbaa !10
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.181
  br label %do.cond

do.cond:                                          ; preds = %if.end.185
  br label %do.end

do.end:                                           ; preds = %do.cond
  %115 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack186 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %115, i32 0, i32 26
  %stack187 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack186, i32 0, i32 0
  %p188 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack187, i32 0, i32 0
  %116 = load %struct.ref_s*, %struct.ref_s** %p188, align 8, !tbaa !10
  %add.ptr189 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %116, i64 -4
  store %struct.ref_s* %add.ptr189, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.190

for.cond.190:                                     ; preds = %for.inc.201, %do.end
  %117 = load i32, i32* %i, align 4, !tbaa !26
  %cmp191 = icmp slt i32 %117, 4
  br i1 %cmp191, label %for.body.193, label %for.end.203

for.body.193:                                     ; preds = %for.cond.190
  %118 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom194 = sext i32 %118 to i64
  %arrayidx195 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom194
  %119 = load float, float* %arrayidx195, align 4, !tbaa !20
  %120 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value196 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %120, i32 0, i32 1
  %realval197 = bitcast %union.v* %value196 to float*
  store float %119, float* %realval197, align 4, !tbaa !20
  %121 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas198 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %121, i32 0, i32 0
  %type_attrs199 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas198, i32 0, i32 0
  store i16 4096, i16* %type_attrs199, align 2, !tbaa !22
  %122 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr200 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %122, i32 1
  store %struct.ref_s* %incdec.ptr200, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc.201

for.inc.201:                                      ; preds = %for.body.193
  %123 = load i32, i32* %i, align 4, !tbaa !26
  %inc202 = add nsw i32 %123, 1
  store i32 %inc202, i32* %i, align 4, !tbaa !26
  br label %for.cond.190

for.end.203:                                      ; preds = %for.cond.190
  %arrayidx204 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  %124 = load float, float* %arrayidx204, align 4, !tbaa !20
  %125 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value205 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %125, i32 0, i32 1
  %realval206 = bitcast %union.v* %value205 to float*
  store float %124, float* %realval206, align 4, !tbaa !20
  %126 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas207 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %126, i32 0, i32 0
  %type_attrs208 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas207, i32 0, i32 0
  store i16 4096, i16* %type_attrs208, align 2, !tbaa !22
  %127 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack209 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %127, i32 0, i32 25
  %stack210 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack209, i32 0, i32 0
  %p211 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack210, i32 0, i32 0
  %128 = load %struct.ref_s*, %struct.ref_s** %p211, align 8, !tbaa !27
  %incdec.ptr212 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %128, i32 1
  store %struct.ref_s* %incdec.ptr212, %struct.ref_s** %p211, align 8, !tbaa !27
  %129 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack213 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %129, i32 0, i32 25
  %stack214 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack213, i32 0, i32 0
  %p215 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack214, i32 0, i32 0
  %130 = load %struct.ref_s*, %struct.ref_s** %p215, align 8, !tbaa !27
  %131 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs216 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %131, i32 0, i32 0
  %132 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs216, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %132, i32 0, i32 2
  %133 = load i8*, i8** %client_data, align 8, !tbaa !53
  %134 = bitcast i8* %133 to %struct.int_gstate_s*
  %undercolor_removal = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %134, i32 0, i32 4
  %135 = bitcast %struct.ref_s* %130 to i8*
  %136 = bitcast %struct.ref_s* %undercolor_removal to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

sw.default:                                       ; preds = %for.end
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

sw.bb.217:                                        ; preds = %if.end
  %137 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %138 = load i32, i32* %137, align 4, !tbaa !26
  %inc218 = add nsw i32 %138, 1
  store i32 %inc218, i32* %137, align 4, !tbaa !26
  %139 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %139, align 4, !tbaa !26
  %140 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack219 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %140, i32 0, i32 25
  %stack220 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack219, i32 0, i32 0
  %p221 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack220, i32 0, i32 0
  %141 = load %struct.ref_s*, %struct.ref_s** %p221, align 8, !tbaa !27
  %142 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack222 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %142, i32 0, i32 25
  %stack223 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack222, i32 0, i32 0
  %top224 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack223, i32 0, i32 2
  %143 = load %struct.ref_s*, %struct.ref_s** %top224, align 8, !tbaa !72
  %add.ptr225 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %143, i64 -1
  %cmp226 = icmp ugt %struct.ref_s* %141, %add.ptr225
  br i1 %cmp226, label %if.then.228, label %if.end.240

if.then.228:                                      ; preds = %sw.bb.217
  %144 = bitcast i32* %es_code_229 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %144) #1
  %145 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack230 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %145, i32 0, i32 25
  %stack231 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack230, i32 0, i32 0
  %call232 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack231, i32 1) #7
  store i32 %call232, i32* %es_code_229, align 4, !tbaa !26
  %146 = load i32, i32* %es_code_229, align 4, !tbaa !26
  %cmp233 = icmp slt i32 %146, 0
  br i1 %cmp233, label %if.then.235, label %if.end.236

if.then.235:                                      ; preds = %if.then.228
  %147 = load i32, i32* %es_code_229, align 4, !tbaa !26
  store i32 %147, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.237

if.end.236:                                       ; preds = %if.then.228
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.237

cleanup.237:                                      ; preds = %if.end.236, %if.then.235
  %148 = bitcast i32* %es_code_229 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %148) #1
  %cleanup.dest.238 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.238, label %cleanup.416 [
    i32 0, label %cleanup.cont.239
  ]

cleanup.cont.239:                                 ; preds = %cleanup.237
  br label %if.end.240

if.end.240:                                       ; preds = %cleanup.cont.239, %sw.bb.217
  %149 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %150 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack241 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %150, i32 0, i32 26
  %stack242 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack241, i32 0, i32 0
  %bot243 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack242, i32 0, i32 1
  %151 = load %struct.ref_s*, %struct.ref_s** %bot243, align 8, !tbaa !68
  %add.ptr244 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %151, i64 4
  %cmp245 = icmp ult %struct.ref_s* %149, %add.ptr244
  br i1 %cmp245, label %if.then.247, label %if.end.248

if.then.247:                                      ; preds = %if.end.240
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.248:                                       ; preds = %if.end.240
  %152 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr249 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %152, i64 -4
  store %struct.ref_s* %add.ptr249, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.250

for.cond.250:                                     ; preds = %for.inc.282, %if.end.248
  %153 = load i32, i32* %i, align 4, !tbaa !26
  %cmp251 = icmp slt i32 %153, 4
  br i1 %cmp251, label %for.body.253, label %for.end.284

for.body.253:                                     ; preds = %for.cond.250
  %154 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas254 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %154, i32 0, i32 0
  %type_attrs255 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas254, i32 0, i32 0
  %155 = bitcast i16* %type_attrs255 to i8*
  %arrayidx256 = getelementptr inbounds i8, i8* %155, i64 1
  %156 = load i8, i8* %arrayidx256, align 1, !tbaa !54
  %conv257 = zext i8 %156 to i32
  %cmp258 = icmp eq i32 %conv257, 11
  br i1 %cmp258, label %if.else.274, label %if.then.260

if.then.260:                                      ; preds = %for.body.253
  %157 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas261 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %157, i32 0, i32 0
  %type_attrs262 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas261, i32 0, i32 0
  %158 = bitcast i16* %type_attrs262 to i8*
  %arrayidx263 = getelementptr inbounds i8, i8* %158, i64 1
  %159 = load i8, i8* %arrayidx263, align 1, !tbaa !54
  %conv264 = zext i8 %159 to i32
  %cmp265 = icmp eq i32 %conv264, 16
  br i1 %cmp265, label %if.then.267, label %if.else.272

if.then.267:                                      ; preds = %if.then.260
  %160 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value268 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %160, i32 0, i32 1
  %realval269 = bitcast %union.v* %value268 to float*
  %161 = load float, float* %realval269, align 4, !tbaa !20
  %162 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom270 = sext i32 %162 to i64
  %arrayidx271 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom270
  store float %161, float* %arrayidx271, align 4, !tbaa !20
  br label %if.end.273

if.else.272:                                      ; preds = %if.then.260
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.273:                                       ; preds = %if.then.267
  br label %if.end.280

if.else.274:                                      ; preds = %for.body.253
  %163 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value275 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %163, i32 0, i32 1
  %intval276 = bitcast %union.v* %value275 to i64*
  %164 = load i64, i64* %intval276, align 8, !tbaa !23
  %conv277 = sitofp i64 %164 to float
  %165 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom278 = sext i32 %165 to i64
  %arrayidx279 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom278
  store float %conv277, float* %arrayidx279, align 4, !tbaa !20
  br label %if.end.280

if.end.280:                                       ; preds = %if.else.274, %if.end.273
  %166 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr281 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %166, i32 1
  store %struct.ref_s* %incdec.ptr281, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc.282

for.inc.282:                                      ; preds = %if.end.280
  %167 = load i32, i32* %i, align 4, !tbaa !26
  %inc283 = add nsw i32 %167, 1
  store i32 %inc283, i32* %i, align 4, !tbaa !26
  br label %for.cond.250

for.end.284:                                      ; preds = %for.cond.250
  %168 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas285 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %168, i32 0, i32 0
  %type_attrs286 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas285, i32 0, i32 0
  %169 = bitcast i16* %type_attrs286 to i8*
  %arrayidx287 = getelementptr inbounds i8, i8* %169, i64 1
  %170 = load i8, i8* %arrayidx287, align 1, !tbaa !54
  %conv288 = zext i8 %170 to i32
  %cmp289 = icmp eq i32 %conv288, 11
  br i1 %cmp289, label %if.else.303, label %if.then.291

if.then.291:                                      ; preds = %for.end.284
  %171 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas292 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %171, i32 0, i32 0
  %type_attrs293 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas292, i32 0, i32 0
  %172 = bitcast i16* %type_attrs293 to i8*
  %arrayidx294 = getelementptr inbounds i8, i8* %172, i64 1
  %173 = load i8, i8* %arrayidx294, align 1, !tbaa !54
  %conv295 = zext i8 %173 to i32
  %cmp296 = icmp eq i32 %conv295, 16
  br i1 %cmp296, label %if.then.298, label %if.else.301

if.then.298:                                      ; preds = %if.then.291
  %174 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value299 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %174, i32 0, i32 1
  %realval300 = bitcast %union.v* %value299 to float*
  %175 = load float, float* %realval300, align 4, !tbaa !20
  store float %175, float* %UCR, align 4, !tbaa !20
  br label %if.end.302

if.else.301:                                      ; preds = %if.then.291
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.302:                                       ; preds = %if.then.298
  br label %if.end.307

if.else.303:                                      ; preds = %for.end.284
  %176 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value304 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %176, i32 0, i32 1
  %intval305 = bitcast %union.v* %value304 to i64*
  %177 = load i64, i64* %intval305, align 8, !tbaa !23
  %conv306 = sitofp i64 %177 to float
  store float %conv306, float* %UCR, align 4, !tbaa !20
  br label %if.end.307

if.end.307:                                       ; preds = %if.else.303, %if.end.302
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.308

for.cond.308:                                     ; preds = %for.inc.333, %if.end.307
  %178 = load i32, i32* %i, align 4, !tbaa !26
  %cmp309 = icmp slt i32 %178, 3
  br i1 %cmp309, label %for.body.311, label %for.end.335

for.body.311:                                     ; preds = %for.cond.308
  %179 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom312 = sext i32 %179 to i64
  %arrayidx313 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom312
  %180 = load float, float* %arrayidx313, align 4, !tbaa !20
  %181 = load float, float* %UCR, align 4, !tbaa !20
  %sub314 = fsub float %180, %181
  %182 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom315 = sext i32 %182 to i64
  %arrayidx316 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom315
  store float %sub314, float* %arrayidx316, align 4, !tbaa !20
  %183 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom317 = sext i32 %183 to i64
  %arrayidx318 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom317
  %184 = load float, float* %arrayidx318, align 4, !tbaa !20
  %cmp319 = fcmp olt float %184, 0.000000e+00
  br i1 %cmp319, label %if.then.321, label %if.end.324

if.then.321:                                      ; preds = %for.body.311
  %185 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom322 = sext i32 %185 to i64
  %arrayidx323 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom322
  store float 0.000000e+00, float* %arrayidx323, align 4, !tbaa !20
  br label %if.end.324

if.end.324:                                       ; preds = %if.then.321, %for.body.311
  %186 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom325 = sext i32 %186 to i64
  %arrayidx326 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom325
  %187 = load float, float* %arrayidx326, align 4, !tbaa !20
  %cmp327 = fcmp ogt float %187, 1.000000e+00
  br i1 %cmp327, label %if.then.329, label %if.end.332

if.then.329:                                      ; preds = %if.end.324
  %188 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom330 = sext i32 %188 to i64
  %arrayidx331 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom330
  store float 1.000000e+00, float* %arrayidx331, align 4, !tbaa !20
  br label %if.end.332

if.end.332:                                       ; preds = %if.then.329, %if.end.324
  br label %for.inc.333

for.inc.333:                                      ; preds = %if.end.332
  %189 = load i32, i32* %i, align 4, !tbaa !26
  %inc334 = add nsw i32 %189, 1
  store i32 %inc334, i32* %i, align 4, !tbaa !26
  br label %for.cond.308

for.end.335:                                      ; preds = %for.cond.308
  %190 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr336 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %190, i64 -4
  store %struct.ref_s* %add.ptr336, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.337

for.cond.337:                                     ; preds = %for.inc.348, %for.end.335
  %191 = load i32, i32* %i, align 4, !tbaa !26
  %cmp338 = icmp slt i32 %191, 4
  br i1 %cmp338, label %for.body.340, label %for.end.350

for.body.340:                                     ; preds = %for.cond.337
  %192 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom341 = sext i32 %192 to i64
  %arrayidx342 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom341
  %193 = load float, float* %arrayidx342, align 4, !tbaa !20
  %194 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value343 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %194, i32 0, i32 1
  %realval344 = bitcast %union.v* %value343 to float*
  store float %193, float* %realval344, align 4, !tbaa !20
  %195 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas345 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %195, i32 0, i32 0
  %type_attrs346 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas345, i32 0, i32 0
  store i16 4096, i16* %type_attrs346, align 2, !tbaa !22
  %196 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr347 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %196, i32 1
  store %struct.ref_s* %incdec.ptr347, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc.348

for.inc.348:                                      ; preds = %for.body.340
  %197 = load i32, i32* %i, align 4, !tbaa !26
  %inc349 = add nsw i32 %197, 1
  store i32 %inc349, i32* %i, align 4, !tbaa !26
  br label %for.cond.337

for.end.350:                                      ; preds = %for.cond.337
  %arrayidx351 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  %198 = load float, float* %arrayidx351, align 4, !tbaa !20
  %199 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value352 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %199, i32 0, i32 1
  %realval353 = bitcast %union.v* %value352 to float*
  store float %198, float* %realval353, align 4, !tbaa !20
  %200 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas354 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %200, i32 0, i32 0
  %type_attrs355 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas354, i32 0, i32 0
  store i16 4096, i16* %type_attrs355, align 2, !tbaa !22
  %201 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack356 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %201, i32 0, i32 25
  %stack357 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack356, i32 0, i32 0
  %p358 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack357, i32 0, i32 0
  %202 = load %struct.ref_s*, %struct.ref_s** %p358, align 8, !tbaa !27
  %incdec.ptr359 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %202, i32 1
  store %struct.ref_s* %incdec.ptr359, %struct.ref_s** %p358, align 8, !tbaa !27
  %203 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack360 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %203, i32 0, i32 25
  %stack361 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack360, i32 0, i32 0
  %p362 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack361, i32 0, i32 0
  %204 = load %struct.ref_s*, %struct.ref_s** %p362, align 8, !tbaa !27
  %205 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs363 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %205, i32 0, i32 0
  %206 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs363, align 8, !tbaa !43
  %client_data364 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %206, i32 0, i32 2
  %207 = load i8*, i8** %client_data364, align 8, !tbaa !53
  %208 = bitcast i8* %207 to %struct.int_gstate_s*
  %black_generation = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %208, i32 0, i32 3
  %209 = bitcast %struct.ref_s* %204 to i8*
  %210 = bitcast %struct.ref_s* %black_generation to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %209, i8* %210, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

sw.bb.365:                                        ; preds = %if.end
  %211 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %211, align 4, !tbaa !26
  %212 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %212, align 4, !tbaa !26
  %213 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %214 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack366 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %214, i32 0, i32 26
  %stack367 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack366, i32 0, i32 0
  %bot368 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack367, i32 0, i32 1
  %215 = load %struct.ref_s*, %struct.ref_s** %bot368, align 8, !tbaa !68
  %add.ptr369 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %215, i64 4
  %cmp370 = icmp ult %struct.ref_s* %213, %add.ptr369
  br i1 %cmp370, label %if.then.372, label %if.end.373

if.then.372:                                      ; preds = %sw.bb.365
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.373:                                       ; preds = %sw.bb.365
  %216 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas374 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %216, i32 0, i32 0
  %type_attrs375 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas374, i32 0, i32 0
  %217 = bitcast i16* %type_attrs375 to i8*
  %arrayidx376 = getelementptr inbounds i8, i8* %217, i64 1
  %218 = load i8, i8* %arrayidx376, align 1, !tbaa !54
  %conv377 = zext i8 %218 to i32
  %cmp378 = icmp eq i32 %conv377, 11
  br i1 %cmp378, label %if.else.392, label %if.then.380

if.then.380:                                      ; preds = %if.end.373
  %219 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas381 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %219, i32 0, i32 0
  %type_attrs382 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas381, i32 0, i32 0
  %220 = bitcast i16* %type_attrs382 to i8*
  %arrayidx383 = getelementptr inbounds i8, i8* %220, i64 1
  %221 = load i8, i8* %arrayidx383, align 1, !tbaa !54
  %conv384 = zext i8 %221 to i32
  %cmp385 = icmp eq i32 %conv384, 16
  br i1 %cmp385, label %if.then.387, label %if.else.390

if.then.387:                                      ; preds = %if.then.380
  %222 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value388 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %222, i32 0, i32 1
  %realval389 = bitcast %union.v* %value388 to float*
  %223 = load float, float* %realval389, align 4, !tbaa !20
  store float %223, float* %BG, align 4, !tbaa !20
  br label %if.end.391

if.else.390:                                      ; preds = %if.then.380
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

if.end.391:                                       ; preds = %if.then.387
  br label %if.end.396

if.else.392:                                      ; preds = %if.end.373
  %224 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value393 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %224, i32 0, i32 1
  %intval394 = bitcast %union.v* %value393 to i64*
  %225 = load i64, i64* %intval394, align 8, !tbaa !23
  %conv395 = sitofp i64 %225 to float
  store float %conv395, float* %BG, align 4, !tbaa !20
  br label %if.end.396

if.end.396:                                       ; preds = %if.else.392, %if.end.391
  %226 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack397 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %226, i32 0, i32 26
  %stack398 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack397, i32 0, i32 0
  %p399 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack398, i32 0, i32 0
  %227 = load %struct.ref_s*, %struct.ref_s** %p399, align 8, !tbaa !10
  %add.ptr400 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %227, i64 -1
  store %struct.ref_s* %add.ptr400, %struct.ref_s** %p399, align 8, !tbaa !10
  %228 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack401 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %228, i32 0, i32 26
  %stack402 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack401, i32 0, i32 0
  %p403 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack402, i32 0, i32 0
  %229 = load %struct.ref_s*, %struct.ref_s** %p403, align 8, !tbaa !10
  store %struct.ref_s* %229, %struct.ref_s** %op, align 8, !tbaa !1
  %230 = load float, float* %BG, align 4, !tbaa !20
  %cmp404 = fcmp olt float %230, 0.000000e+00
  br i1 %cmp404, label %if.then.406, label %if.end.407

if.then.406:                                      ; preds = %if.end.396
  store float 0.000000e+00, float* %BG, align 4, !tbaa !20
  br label %if.end.407

if.end.407:                                       ; preds = %if.then.406, %if.end.396
  %231 = load float, float* %BG, align 4, !tbaa !20
  %cmp408 = fcmp ogt float %231, 1.000000e+00
  br i1 %cmp408, label %if.then.410, label %if.end.411

if.then.410:                                      ; preds = %if.end.407
  store float 1.000000e+00, float* %BG, align 4, !tbaa !20
  br label %if.end.411

if.end.411:                                       ; preds = %if.then.410, %if.end.407
  %232 = load float, float* %BG, align 4, !tbaa !20
  %233 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value412 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %233, i32 0, i32 1
  %realval413 = bitcast %union.v* %value412 to float*
  store float %232, float* %realval413, align 4, !tbaa !20
  %234 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas414 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %234, i32 0, i32 0
  %type_attrs415 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas414, i32 0, i32 0
  store i16 4096, i16* %type_attrs415, align 2, !tbaa !22
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %if.end.411
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.416

cleanup.416:                                      ; preds = %sw.epilog, %if.else.390, %if.then.372, %for.end.350, %if.else.301, %if.else.272, %if.then.247, %cleanup.237, %sw.default, %for.end.203, %if.then.178, %cleanup, %sw.bb.95, %sw.bb.74, %if.end.69, %if.then.35, %if.else, %if.then.5, %if.then
  %235 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %235) #1
  %236 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %236) #1
  %237 = bitcast float* %BG to i8*
  call void @llvm.lifetime.end(i64 4, i8* %237) #1
  %238 = bitcast float* %UCR to i8*
  call void @llvm.lifetime.end(i64 4, i8* %238) #1
  %239 = bitcast float* %Gray to i8*
  call void @llvm.lifetime.end(i64 4, i8* %239) #1
  %240 = bitcast [4 x float]* %CMYK to i8*
  call void @llvm.lifetime.end(i64 16, i8* %240) #1
  %241 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.end(i64 12, i8* %241) #1
  %242 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %242) #1
  %243 = load i32, i32* %retval
  ret i32 %243
}

; Function Attrs: nounwind uwtable
define internal i32 @rgbvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %4, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 -2
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %6, 3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp2 = icmp eq i32 %conv, 11
  br i1 %cmp2, label %if.end.11, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs5 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %11 = bitcast i16* %type_attrs5 to i8*
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx6, align 1, !tbaa !54
  %conv7 = zext i8 %12 to i32
  %cmp8 = icmp eq i32 %conv7, 16
  br i1 %cmp8, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %land.lhs.true, %for.body
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.12

for.cond.12:                                      ; preds = %for.inc.33, %for.end
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %cmp13 = icmp slt i32 %15, 3
  br i1 %cmp13, label %for.body.15, label %for.end.35

for.body.15:                                      ; preds = %for.cond.12
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %16 to i64
  %17 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds float, float* %17, i64 %idxprom
  %18 = load float, float* %arrayidx16, align 4, !tbaa !20
  %conv17 = fpext float %18 to double
  %cmp18 = fcmp ogt double %conv17, 1.000000e+00
  br i1 %cmp18, label %if.then.20, label %if.end.23

if.then.20:                                       ; preds = %for.body.15
  %19 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom21 = sext i32 %19 to i64
  %20 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds float, float* %20, i64 %idxprom21
  store float 1.000000e+00, float* %arrayidx22, align 4, !tbaa !20
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.20, %for.body.15
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom24 = sext i32 %21 to i64
  %22 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds float, float* %22, i64 %idxprom24
  %23 = load float, float* %arrayidx25, align 4, !tbaa !20
  %conv26 = fpext float %23 to double
  %cmp27 = fcmp olt double %conv26, 0.000000e+00
  br i1 %cmp27, label %if.then.29, label %if.end.32

if.then.29:                                       ; preds = %if.end.23
  %24 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom30 = sext i32 %24 to i64
  %25 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds float, float* %25, i64 %idxprom30
  store float 0.000000e+00, float* %arrayidx31, align 4, !tbaa !20
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.29, %if.end.23
  br label %for.inc.33

for.inc.33:                                       ; preds = %if.end.32
  %26 = load i32, i32* %i, align 4, !tbaa !26
  %inc34 = add nsw i32 %26, 1
  store i32 %inc34, i32* %i, align 4, !tbaa !26
  br label %for.cond.12

for.end.35:                                       ; preds = %for.cond.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.35, %if.then.10, %if.then
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %28 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define internal i32 @rgbinitialproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %0) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %paint1 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values2 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint1, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [64 x float], [64 x float]* %values2, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx3, align 4, !tbaa !20
  %paint4 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values5 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint4, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [64 x float], [64 x float]* %values5, i32 0, i64 2
  store float 0.000000e+00, float* %arrayidx6, align 4, !tbaa !20
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 0
  %2 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call i32 @gs_setcolor(%struct.gs_state_s* %2, %struct.gs_client_color_s* %cc) #7
  %3 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %3) #1
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @setcmykspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %code = alloca i32, align 4
  %stref = alloca %struct.ref_s, align 8
  %body = alloca i8*, align 8
  %nosubst = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  %pcc = alloca %struct.gs_client_color_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %5 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %6 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %7 = load i32, i32* %6, align 4, !tbaa !26
  switch i32 %7, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.78
    i32 2, label %sw.bb.119
    i32 3, label %sw.bb.145
    i32 4, label %sw.bb.146
    i32 5, label %sw.bb.169
  ]

sw.bb:                                            ; preds = %do.body
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 0
  %9 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %9, i32 0, i32 2
  %10 = load i8*, i8** %client_data, align 8, !tbaa !53
  %11 = bitcast i8* %10 to %struct.int_gstate_s*
  %use_cie_color = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %11, i32 0, i32 8
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %use_cie_color, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %12 = load i16, i16* %boolval, align 2, !tbaa !25
  %conv = zext i16 %12 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.77

land.lhs.true:                                    ; preds = %sw.bb
  %13 = load i32, i32* %CIESubst.addr, align 4, !tbaa !26
  %tobool1 = icmp ne i32 %13, 0
  br i1 %tobool1, label %if.end.77, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %14 = bitcast i8** %body to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  %15 = bitcast %struct.ref_s** %nosubst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0), %struct.ref_s** %nosubst) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp ne i32 %17, 0
  br i1 %cmp, label %if.then.3, label %if.end.8

if.then.3:                                        ; preds = %if.then
  %18 = load %struct.ref_s*, %struct.ref_s** %nosubst, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %19 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv4 = zext i8 %20 to i32
  %cmp5 = icmp eq i32 %conv4, 1
  br i1 %cmp5, label %if.end, label %if.then.7

if.then.7:                                        ; preds = %if.then.3
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.3
  br label %if.end.8

if.end.8:                                         ; preds = %if.end, %if.then
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp ne i32 %21, 0
  br i1 %cmp9, label %land.lhs.true.11, label %if.else

land.lhs.true.11:                                 ; preds = %if.end.8
  %22 = load %struct.ref_s*, %struct.ref_s** %nosubst, align 8, !tbaa !1
  %value12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 0, i32 1
  %boolval13 = bitcast %union.v* %value12 to i16*
  %23 = load i16, i16* %boolval13, align 2, !tbaa !25
  %conv14 = zext i16 %23 to i32
  %tobool15 = icmp ne i32 %conv14, 0
  br i1 %tobool15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %land.lhs.true.11
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 4, i32* %24, align 4, !tbaa !26
  %25 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %25, align 4, !tbaa !26
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %27 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %28 = bitcast %struct.gs_ref_memory_s* %27 to %struct.gs_memory_s*
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %28, i32 0, i32 1
  %alloc_string = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 16
  %29 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string, align 8, !tbaa !56
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 1
  %current18 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory17, i32 0, i32 0
  %31 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current18, align 8, !tbaa !55
  %32 = bitcast %struct.gs_ref_memory_s* %31 to %struct.gs_memory_s*
  %call19 = call i8* %29(%struct.gs_memory_s* %32, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call19, i8** %body, align 8, !tbaa !1
  %33 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp20 = icmp eq i8* %33, null
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.then.16
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.then.16
  %34 = load i8*, i8** %body, align 8, !tbaa !1
  %call24 = call i8* @memcpy(i8* %34, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.53, i32 0, i32 0), i64 32) #8
  %35 = load i8*, i8** %body, align 8, !tbaa !1
  %value25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes = bitcast %union.v* %value25 to i8**
  store i8* %35, i8** %bytes, align 8, !tbaa !1
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 1
  %current_space = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory26, i32 0, i32 2
  %37 = load i32, i32* %current_space, align 4, !tbaa !59
  %or = or i32 112, %37
  %add = add i32 4608, %or
  %conv27 = trunc i32 %add to i16
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs29 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 0
  store i16 %conv27, i16* %type_attrs29, align 2, !tbaa !22
  %tas30 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas30, i32 0, i32 2
  store i32 32, i32* %rsize, align 4, !tbaa !5
  %tas31 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs32 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas31, i32 0, i32 0
  %38 = load i16, i16* %type_attrs32, align 2, !tbaa !22
  %conv33 = zext i16 %38 to i32
  %or34 = or i32 %conv33, 128
  %conv35 = trunc i32 %or34 to i16
  store i16 %conv35, i16* %type_attrs32, align 2, !tbaa !22
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack36 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p37 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p37, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p37, align 8, !tbaa !27
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %43 = bitcast %struct.ref_s* %42 to i8*
  %44 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %land.lhs.true.11, %if.end.8
  %45 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 2, i32* %45, align 4, !tbaa !26
  %46 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %46, align 4, !tbaa !26
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 1
  %current42 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory41, i32 0, i32 0
  %48 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current42, align 8, !tbaa !55
  %49 = bitcast %struct.gs_ref_memory_s* %48 to %struct.gs_memory_s*
  %procs43 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %49, i32 0, i32 1
  %alloc_string44 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs43, i32 0, i32 16
  %50 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string44, align 8, !tbaa !56
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory45 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 1
  %current46 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory45, i32 0, i32 0
  %52 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current46, align 8, !tbaa !55
  %53 = bitcast %struct.gs_ref_memory_s* %52 to %struct.gs_memory_s*
  %call47 = call i8* %50(%struct.gs_memory_s* %53, i32 47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call47, i8** %body, align 8, !tbaa !1
  %54 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp48 = icmp eq i8* %54, null
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.else
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %if.else
  %55 = load i8*, i8** %body, align 8, !tbaa !1
  %call52 = call i8* @memcpy(i8* %55, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.54, i32 0, i32 0), i64 47) #8
  %56 = load i8*, i8** %body, align 8, !tbaa !1
  %value53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes54 = bitcast %union.v* %value53 to i8**
  store i8* %56, i8** %bytes54, align 8, !tbaa !1
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 1
  %current_space56 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory55, i32 0, i32 2
  %58 = load i32, i32* %current_space56, align 4, !tbaa !59
  %or57 = or i32 112, %58
  %add58 = add i32 4608, %or57
  %conv59 = trunc i32 %add58 to i16
  %tas60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs61 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas60, i32 0, i32 0
  store i16 %conv59, i16* %type_attrs61, align 2, !tbaa !22
  %tas62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize63 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas62, i32 0, i32 2
  store i32 47, i32* %rsize63, align 4, !tbaa !5
  %tas64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs65 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas64, i32 0, i32 0
  %59 = load i16, i16* %type_attrs65, align 2, !tbaa !22
  %conv66 = zext i16 %59 to i32
  %or67 = or i32 %conv66, 128
  %conv68 = trunc i32 %or67 to i16
  store i16 %conv68, i16* %type_attrs65, align 2, !tbaa !22
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack69 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %60, i32 0, i32 25
  %stack70 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack69, i32 0, i32 0
  %p71 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack70, i32 0, i32 0
  %61 = load %struct.ref_s*, %struct.ref_s** %p71, align 8, !tbaa !27
  %incdec.ptr72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %61, i32 1
  store %struct.ref_s* %incdec.ptr72, %struct.ref_s** %p71, align 8, !tbaa !27
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 25
  %stack74 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack73, i32 0, i32 0
  %p75 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack74, i32 0, i32 0
  %63 = load %struct.ref_s*, %struct.ref_s** %p75, align 8, !tbaa !27
  %64 = bitcast %struct.ref_s* %63 to i8*
  %65 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %if.then.50, %if.end.23, %if.then.22, %if.then.7
  %66 = bitcast %struct.ref_s** %nosubst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #1
  %67 = bitcast i8** %body to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67) #1
  br label %cleanup.176

if.end.77:                                        ; preds = %land.lhs.true, %sw.bb
  br label %sw.bb.78

sw.bb.78:                                         ; preds = %do.body, %if.end.77
  %68 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory79 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %68, i32 0, i32 1
  %current80 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory79, i32 0, i32 0
  %69 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current80, align 8, !tbaa !55
  %70 = bitcast %struct.gs_ref_memory_s* %69 to %struct.gs_memory_s*
  %call81 = call %struct.gs_color_space_s* @gs_cspace_new_DeviceCMYK(%struct.gs_memory_s* %70) #7
  store %struct.gs_color_space_s* %call81, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %71 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %cmp82 = icmp eq %struct.gs_color_space_s* %71, null
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %sw.bb.78
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.176

if.end.85:                                        ; preds = %sw.bb.78
  %72 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs86 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %72, i32 0, i32 0
  %73 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs86, align 8, !tbaa !43
  %74 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call87 = call i32 @gs_setcolorspace(%struct.gs_state_s* %73, %struct.gs_color_space_s* %74) #7
  store i32 %call87, i32* %code, align 4, !tbaa !26
  %75 = load i32, i32* %code, align 4, !tbaa !26
  %cmp88 = icmp sge i32 %75, 0
  br i1 %cmp88, label %if.then.90, label %if.end.118

if.then.90:                                       ; preds = %if.end.85
  %76 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %76) #1
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs91 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %77, i32 0, i32 0
  %78 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs91, align 8, !tbaa !43
  %color = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %78, i32 0, i32 69
  %arrayidx92 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color, i32 0, i64 0
  %ccolor = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx92, i32 0, i32 1
  %79 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %ccolor, align 8, !tbaa !60
  store %struct.gs_client_color_s* %79, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %80 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs93 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %80, i32 0, i32 0
  %81 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs93, align 8, !tbaa !43
  %color94 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %81, i32 0, i32 69
  %arrayidx95 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color94, i32 0, i64 0
  %color_space = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx95, i32 0, i32 0
  %82 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %color_space, align 8, !tbaa !61
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %82, i32 0, i32 0
  %83 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %adjust_color_count = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %83, i32 0, i32 14
  %84 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)** %adjust_color_count, align 8, !tbaa !65
  %85 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs96 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %85, i32 0, i32 0
  %86 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs96, align 8, !tbaa !43
  %color97 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %86, i32 0, i32 69
  %arrayidx98 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color97, i32 0, i64 0
  %ccolor99 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx98, i32 0, i32 1
  %87 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %ccolor99, align 8, !tbaa !60
  %88 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs100 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %88, i32 0, i32 0
  %89 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs100, align 8, !tbaa !43
  %color101 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %89, i32 0, i32 69
  %arrayidx102 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color101, i32 0, i64 0
  %color_space103 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx102, i32 0, i32 0
  %90 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %color_space103, align 8, !tbaa !61
  call void %84(%struct.gs_client_color_s* %87, %struct.gs_color_space_s* %90, i32 -1) #7
  %91 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %91, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx104, align 4, !tbaa !20
  %92 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint105 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %92, i32 0, i32 1
  %values106 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint105, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [64 x float], [64 x float]* %values106, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx107, align 4, !tbaa !20
  %93 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint108 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %93, i32 0, i32 1
  %values109 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint108, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [64 x float], [64 x float]* %values109, i32 0, i64 2
  store float 0.000000e+00, float* %arrayidx110, align 4, !tbaa !20
  %94 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint111 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %94, i32 0, i32 1
  %values112 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint111, i32 0, i32 0
  %arrayidx113 = getelementptr inbounds [64 x float], [64 x float]* %values112, i32 0, i64 3
  store float 1.000000e+00, float* %arrayidx113, align 4, !tbaa !20
  %95 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %95, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %96 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs114 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %96, i32 0, i32 0
  %97 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs114, align 8, !tbaa !43
  %color115 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %97, i32 0, i32 69
  %arrayidx116 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color115, i32 0, i64 0
  %dev_color = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx116, i32 0, i32 2
  %98 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %dev_color, align 8, !tbaa !44
  %type117 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %98, i32 0, i32 0
  store %struct.gx_device_color_type_s* @gx_dc_type_data_none, %struct.gx_device_color_type_s** %type117, align 8, !tbaa !46
  %99 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %99) #1
  br label %if.end.118

if.end.118:                                       ; preds = %if.then.90, %if.end.85
  %100 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %100, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0)) #7
  %101 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %101, align 4, !tbaa !26
  %102 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %102, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.119:                                        ; preds = %do.body
  %103 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas120 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %103, i32 0, i32 0
  %type_attrs121 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas120, i32 0, i32 0
  %104 = bitcast i16* %type_attrs121 to i8*
  %arrayidx122 = getelementptr inbounds i8, i8* %104, i64 1
  %105 = load i8, i8* %arrayidx122, align 1, !tbaa !54
  %conv123 = zext i8 %105 to i32
  %cmp124 = icmp eq i32 %conv123, 1
  br i1 %cmp124, label %if.end.127, label %if.then.126

if.then.126:                                      ; preds = %sw.bb.119
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.176

if.end.127:                                       ; preds = %sw.bb.119
  %106 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value128 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %106, i32 0, i32 1
  %boolval129 = bitcast %union.v* %value128 to i16*
  %107 = load i16, i16* %boolval129, align 2, !tbaa !25
  %tobool130 = icmp ne i16 %107, 0
  br i1 %tobool130, label %if.then.131, label %if.end.135

if.then.131:                                      ; preds = %if.end.127
  %108 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack132 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %108, i32 0, i32 26
  %stack133 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack132, i32 0, i32 0
  %p134 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack133, i32 0, i32 0
  %109 = load %struct.ref_s*, %struct.ref_s** %p134, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %109, i64 -1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p134, align 8, !tbaa !10
  %110 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %110, align 4, !tbaa !26
  br label %sw.epilog

if.end.135:                                       ; preds = %if.end.127
  %111 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack136 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %111, i32 0, i32 26
  %stack137 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack136, i32 0, i32 0
  %p138 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack137, i32 0, i32 0
  %112 = load %struct.ref_s*, %struct.ref_s** %p138, align 8, !tbaa !10
  %add.ptr139 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %112, i64 -1
  store %struct.ref_s* %add.ptr139, %struct.ref_s** %p138, align 8, !tbaa !10
  %113 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 3, i32* %113, align 4, !tbaa !26
  %114 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call140 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %114) #7
  store i32 %call140, i32* %code, align 4, !tbaa !26
  %115 = load i32, i32* %code, align 4, !tbaa !26
  %cmp141 = icmp ne i32 %115, 0
  br i1 %cmp141, label %if.then.143, label %if.end.144

if.then.143:                                      ; preds = %if.end.135
  %116 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %116, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.176

if.end.144:                                       ; preds = %if.end.135
  br label %sw.epilog

sw.bb.145:                                        ; preds = %do.body
  %117 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %117, align 4, !tbaa !26
  %118 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %118, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.146:                                        ; preds = %do.body
  %119 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas147 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %119, i32 0, i32 0
  %type_attrs148 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas147, i32 0, i32 0
  %120 = bitcast i16* %type_attrs148 to i8*
  %arrayidx149 = getelementptr inbounds i8, i8* %120, i64 1
  %121 = load i8, i8* %arrayidx149, align 1, !tbaa !54
  %conv150 = zext i8 %121 to i32
  %cmp151 = icmp eq i32 %conv150, 1
  br i1 %cmp151, label %if.end.154, label %if.then.153

if.then.153:                                      ; preds = %sw.bb.146
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.176

if.end.154:                                       ; preds = %sw.bb.146
  %122 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack155 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %122, i32 0, i32 26
  %stack156 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack155, i32 0, i32 0
  %p157 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack156, i32 0, i32 0
  %123 = load %struct.ref_s*, %struct.ref_s** %p157, align 8, !tbaa !10
  %add.ptr158 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %123, i64 -1
  store %struct.ref_s* %add.ptr158, %struct.ref_s** %p157, align 8, !tbaa !10
  %124 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %124, align 4, !tbaa !26
  %125 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %125, align 4, !tbaa !26
  %126 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value159 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %126, i32 0, i32 1
  %boolval160 = bitcast %union.v* %value159 to i16*
  %127 = load i16, i16* %boolval160, align 2, !tbaa !25
  %tobool161 = icmp ne i16 %127, 0
  br i1 %tobool161, label %if.then.162, label %if.end.168

if.then.162:                                      ; preds = %if.end.154
  %128 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 5, i32* %128, align 4, !tbaa !26
  %129 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call163 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %129) #7
  store i32 %call163, i32* %code, align 4, !tbaa !26
  %130 = load i32, i32* %code, align 4, !tbaa !26
  %cmp164 = icmp ne i32 %130, 0
  br i1 %cmp164, label %if.then.166, label %if.end.167

if.then.166:                                      ; preds = %if.then.162
  %131 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %131, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.176

if.end.167:                                       ; preds = %if.then.162
  br label %if.end.168

if.end.168:                                       ; preds = %if.end.167, %if.end.154
  br label %sw.epilog

sw.bb.169:                                        ; preds = %do.body
  %132 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %132, align 4, !tbaa !26
  %133 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %133, align 4, !tbaa !26
  %134 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call170 = call i32 @zincludecolorspace(%struct.gs_context_state_s* %134) #7
  store i32 %call170, i32* %code, align 4, !tbaa !26
  %135 = load i32, i32* %code, align 4, !tbaa !26
  %cmp171 = icmp ne i32 %135, 0
  br i1 %cmp171, label %if.then.173, label %if.end.174

if.then.173:                                      ; preds = %sw.bb.169
  %136 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %136, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.176

if.end.174:                                       ; preds = %sw.bb.169
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.body, %if.end.174, %if.end.168, %sw.bb.145, %if.end.144, %if.then.131, %if.end.118
  br label %do.cond

do.cond:                                          ; preds = %sw.epilog
  %137 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %138 = load i32, i32* %137, align 4, !tbaa !26
  %tobool175 = icmp ne i32 %138, 0
  br i1 %tobool175, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %139 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %139, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.176

cleanup.176:                                      ; preds = %do.end, %if.then.173, %if.then.166, %if.then.153, %if.then.143, %if.then.126, %if.then.84, %cleanup
  %140 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %140) #1
  %141 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %141) #1
  %142 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %142) #1
  %143 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %143) #1
  %144 = load i32, i32* %retval
  ret i32 %144
}

; Function Attrs: nounwind uwtable
define internal i32 @fourcomponent(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32* %n) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %n.addr = alloca i32*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32* %n, i32** %n.addr, align 8, !tbaa !1
  %0 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 4, i32* %0, align 4, !tbaa !26
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @cmykrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp slt i32 %1, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %2 to i64
  %3 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %4 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %4, 1
  %idxprom1 = sext i32 %add to i64
  %5 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 %idxprom1
  store float 1.000000e+00, float* %arrayidx2, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %add3 = add nsw i32 %6, 2
  store i32 %add3, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %7) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @cmykdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp slt i32 %1, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %2 to i64
  %3 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %3, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %4 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %4, 1
  %idxprom1 = sext i32 %add to i64
  %5 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 %idxprom1
  store float 1.000000e+00, float* %arrayidx2, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %add3 = add nsw i32 %6, 2
  store i32 %add3, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %7) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @cmykbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %CMYK = alloca [4 x float], align 16
  %Gray = alloca float, align 4
  %RGB = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast [4 x float]* %CMYK to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast float* %Gray to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.start(i64 12, i8* %5) #1
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 0
  %9 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %9) #7
  store %struct.gs_color_space_s* %call, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %10 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %id = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %10, i32 0, i32 2
  %11 = load i64, i64* %id, align 8, !tbaa !71
  %cmp = icmp eq i64 %11, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %13 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %14 = load i32, i32* %base.addr, align 4, !tbaa !26
  %15 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %16 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  %17 = load i32*, i32** %stack_depth.addr, align 8, !tbaa !1
  %call1 = call i32 @graybasecolor(%struct.gs_context_state_s* %12, %struct.ref_s* %13, i32 %14, i32* %15, i32* %16, i32* %17) #7
  store i32 %call1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %18 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %18, align 4, !tbaa !26
  %19 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %19, align 4, !tbaa !26
  %20 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack2 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 26
  %stack3 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack2, i32 0, i32 0
  %bot = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack3, i32 0, i32 1
  %22 = load %struct.ref_s*, %struct.ref_s** %bot, align 8, !tbaa !68
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i64 3
  %cmp4 = icmp ult %struct.ref_s* %20, %add.ptr
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %23 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr7 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %23, i64 -3
  store %struct.ref_s* %add.ptr7, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.6
  %24 = load i32, i32* %i, align 4, !tbaa !26
  %cmp8 = icmp slt i32 %24, 4
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %26 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %26, i64 1
  %27 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %27 to i32
  %cmp9 = icmp eq i32 %conv, 11
  br i1 %cmp9, label %if.else.21, label %if.then.11

if.then.11:                                       ; preds = %for.body
  %28 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 0, i32 0
  %type_attrs13 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas12, i32 0, i32 0
  %29 = bitcast i16* %type_attrs13 to i8*
  %arrayidx14 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx14, align 1, !tbaa !54
  %conv15 = zext i8 %30 to i32
  %cmp16 = icmp eq i32 %conv15, 16
  br i1 %cmp16, label %if.then.18, label %if.else

if.then.18:                                       ; preds = %if.then.11
  %31 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  %32 = load float, float* %realval, align 4, !tbaa !20
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %33 to i64
  %arrayidx19 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom
  store float %32, float* %arrayidx19, align 4, !tbaa !20
  br label %if.end.20

if.else:                                          ; preds = %if.then.11
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.then.18
  br label %if.end.26

if.else.21:                                       ; preds = %for.body
  %34 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value22 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 1
  %intval = bitcast %union.v* %value22 to i64*
  %35 = load i64, i64* %intval, align 8, !tbaa !23
  %conv23 = sitofp i64 %35 to float
  %36 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom24 = sext i32 %36 to i64
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom24
  store float %conv23, float* %arrayidx25, align 4, !tbaa !20
  br label %if.end.26

if.end.26:                                        ; preds = %if.else.21, %if.end.20
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom27 = sext i32 %37 to i64
  %arrayidx28 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom27
  %38 = load float, float* %arrayidx28, align 4, !tbaa !20
  %cmp29 = fcmp olt float %38, 0.000000e+00
  br i1 %cmp29, label %if.then.35, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.26
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom31 = sext i32 %39 to i64
  %arrayidx32 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 %idxprom31
  %40 = load float, float* %arrayidx32, align 4, !tbaa !20
  %cmp33 = fcmp ogt float %40, 1.000000e+00
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %lor.lhs.false, %if.end.26
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %lor.lhs.false
  %41 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.36
  %42 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %base.addr, align 4, !tbaa !26
  switch i32 %43, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.69
    i32 2, label %sw.bb.69
    i32 3, label %sw.bb.140
  ]

sw.bb:                                            ; preds = %for.end
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack37 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %44, i32 0, i32 26
  %stack38 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack37, i32 0, i32 0
  %p39 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack38, i32 0, i32 0
  %45 = load %struct.ref_s*, %struct.ref_s** %p39, align 8, !tbaa !10
  %add.ptr40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %45, i64 -3
  store %struct.ref_s* %add.ptr40, %struct.ref_s** %p39, align 8, !tbaa !10
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 26
  %stack42 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack41, i32 0, i32 0
  %p43 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack42, i32 0, i32 0
  %47 = load %struct.ref_s*, %struct.ref_s** %p43, align 8, !tbaa !10
  store %struct.ref_s* %47, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 0
  %48 = load float, float* %arrayidx44, align 4, !tbaa !20
  %conv45 = fpext float %48 to double
  %mul = fmul double 3.000000e-01, %conv45
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 1
  %49 = load float, float* %arrayidx46, align 4, !tbaa !20
  %conv47 = fpext float %49 to double
  %mul48 = fmul double 5.900000e-01, %conv47
  %add = fadd double %mul, %mul48
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 2
  %50 = load float, float* %arrayidx49, align 4, !tbaa !20
  %conv50 = fpext float %50 to double
  %mul51 = fmul double 1.100000e-01, %conv50
  %add52 = fadd double %add, %mul51
  %arrayidx53 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  %51 = load float, float* %arrayidx53, align 4, !tbaa !20
  %conv54 = fpext float %51 to double
  %add55 = fadd double %add52, %conv54
  %conv56 = fptrunc double %add55 to float
  store float %conv56, float* %Gray, align 4, !tbaa !20
  %52 = load float, float* %Gray, align 4, !tbaa !20
  %conv57 = fpext float %52 to double
  %cmp58 = fcmp ogt double %conv57, 1.000000e+00
  br i1 %cmp58, label %if.then.60, label %if.else.61

if.then.60:                                       ; preds = %sw.bb
  store float 0.000000e+00, float* %Gray, align 4, !tbaa !20
  br label %if.end.64

if.else.61:                                       ; preds = %sw.bb
  %53 = load float, float* %Gray, align 4, !tbaa !20
  %conv62 = fpext float %53 to double
  %sub = fsub double 1.000000e+00, %conv62
  %conv63 = fptrunc double %sub to float
  store float %conv63, float* %Gray, align 4, !tbaa !20
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  %54 = load float, float* %Gray, align 4, !tbaa !20
  %55 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value65 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i32 0, i32 1
  %realval66 = bitcast %union.v* %value65 to float*
  store float %54, float* %realval66, align 4, !tbaa !20
  %56 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas67 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 0
  %type_attrs68 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas67, i32 0, i32 0
  store i16 4096, i16* %type_attrs68, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.69:                                         ; preds = %for.end, %for.end
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack70 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 26
  %stack71 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack70, i32 0, i32 0
  %p72 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack71, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p72, align 8, !tbaa !10
  %add.ptr73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i64 -1
  store %struct.ref_s* %add.ptr73, %struct.ref_s** %p72, align 8, !tbaa !10
  %59 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack74 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %59, i32 0, i32 26
  %stack75 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack74, i32 0, i32 0
  %p76 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack75, i32 0, i32 0
  %60 = load %struct.ref_s*, %struct.ref_s** %p76, align 8, !tbaa !10
  store %struct.ref_s* %60, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx77 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 0
  %61 = load float, float* %arrayidx77, align 4, !tbaa !20
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  %62 = load float, float* %arrayidx78, align 4, !tbaa !20
  %add79 = fadd float %61, %62
  %conv80 = fpext float %add79 to double
  %sub81 = fsub double 1.000000e+00, %conv80
  %conv82 = fptrunc double %sub81 to float
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %conv82, float* %arrayidx83, align 4, !tbaa !20
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %63 = load float, float* %arrayidx84, align 4, !tbaa !20
  %cmp85 = fcmp olt float %63, 0.000000e+00
  br i1 %cmp85, label %if.then.87, label %if.end.89

if.then.87:                                       ; preds = %sw.bb.69
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx88, align 4, !tbaa !20
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.87, %sw.bb.69
  %arrayidx90 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 1
  %64 = load float, float* %arrayidx90, align 4, !tbaa !20
  %arrayidx91 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  %65 = load float, float* %arrayidx91, align 4, !tbaa !20
  %add92 = fadd float %64, %65
  %conv93 = fpext float %add92 to double
  %sub94 = fsub double 1.000000e+00, %conv93
  %conv95 = fptrunc double %sub94 to float
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %conv95, float* %arrayidx96, align 4, !tbaa !20
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %66 = load float, float* %arrayidx97, align 4, !tbaa !20
  %cmp98 = fcmp olt float %66, 0.000000e+00
  br i1 %cmp98, label %if.then.100, label %if.end.102

if.then.100:                                      ; preds = %if.end.89
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx101, align 4, !tbaa !20
  br label %if.end.102

if.end.102:                                       ; preds = %if.then.100, %if.end.89
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 2
  %67 = load float, float* %arrayidx103, align 4, !tbaa !20
  %arrayidx104 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  %68 = load float, float* %arrayidx104, align 4, !tbaa !20
  %add105 = fadd float %67, %68
  %conv106 = fpext float %add105 to double
  %sub107 = fsub double 1.000000e+00, %conv106
  %conv108 = fptrunc double %sub107 to float
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %conv108, float* %arrayidx109, align 4, !tbaa !20
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  %69 = load float, float* %arrayidx110, align 4, !tbaa !20
  %cmp111 = fcmp olt float %69, 0.000000e+00
  br i1 %cmp111, label %if.then.113, label %if.end.115

if.then.113:                                      ; preds = %if.end.102
  %arrayidx114 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float 0.000000e+00, float* %arrayidx114, align 4, !tbaa !20
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.113, %if.end.102
  %70 = load i32, i32* %base.addr, align 4, !tbaa !26
  %cmp116 = icmp eq i32 %70, 1
  br i1 %cmp116, label %if.then.118, label %if.end.120

if.then.118:                                      ; preds = %if.end.115
  %71 = bitcast [3 x float]* %RGB to float*
  %call119 = call i32 @rgb2hsb(float* %71) #7
  br label %if.end.120

if.end.120:                                       ; preds = %if.then.118, %if.end.115
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  %72 = load float, float* %arrayidx121, align 4, !tbaa !20
  %73 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx122 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %73, i64 -2
  %value123 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx122, i32 0, i32 1
  %realval124 = bitcast %union.v* %value123 to float*
  store float %72, float* %realval124, align 4, !tbaa !20
  %74 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx125 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %74, i64 -2
  %tas126 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx125, i32 0, i32 0
  %type_attrs127 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas126, i32 0, i32 0
  store i16 4096, i16* %type_attrs127, align 2, !tbaa !22
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  %75 = load float, float* %arrayidx128, align 4, !tbaa !20
  %76 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx129 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %76, i64 -1
  %value130 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx129, i32 0, i32 1
  %realval131 = bitcast %union.v* %value130 to float*
  store float %75, float* %realval131, align 4, !tbaa !20
  %77 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx132 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %77, i64 -1
  %tas133 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx132, i32 0, i32 0
  %type_attrs134 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas133, i32 0, i32 0
  store i16 4096, i16* %type_attrs134, align 2, !tbaa !22
  %arrayidx135 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  %78 = load float, float* %arrayidx135, align 4, !tbaa !20
  %79 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value136 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %79, i32 0, i32 1
  %realval137 = bitcast %union.v* %value136 to float*
  store float %78, float* %realval137, align 4, !tbaa !20
  %80 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas138 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %80, i32 0, i32 0
  %type_attrs139 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas138, i32 0, i32 0
  store i16 4096, i16* %type_attrs139, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.140:                                        ; preds = %for.end
  %81 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack141 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %81, i32 0, i32 26
  %stack142 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack141, i32 0, i32 0
  %p143 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack142, i32 0, i32 0
  %82 = load %struct.ref_s*, %struct.ref_s** %p143, align 8, !tbaa !10
  store %struct.ref_s* %82, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx144 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 0
  %83 = load float, float* %arrayidx144, align 4, !tbaa !20
  %84 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx145 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %84, i64 -3
  %value146 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx145, i32 0, i32 1
  %realval147 = bitcast %union.v* %value146 to float*
  store float %83, float* %realval147, align 4, !tbaa !20
  %85 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx148 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %85, i64 -3
  %tas149 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx148, i32 0, i32 0
  %type_attrs150 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas149, i32 0, i32 0
  store i16 4096, i16* %type_attrs150, align 2, !tbaa !22
  %arrayidx151 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 1
  %86 = load float, float* %arrayidx151, align 4, !tbaa !20
  %87 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx152 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %87, i64 -2
  %value153 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx152, i32 0, i32 1
  %realval154 = bitcast %union.v* %value153 to float*
  store float %86, float* %realval154, align 4, !tbaa !20
  %88 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx155 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %88, i64 -2
  %tas156 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx155, i32 0, i32 0
  %type_attrs157 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas156, i32 0, i32 0
  store i16 4096, i16* %type_attrs157, align 2, !tbaa !22
  %arrayidx158 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 2
  %89 = load float, float* %arrayidx158, align 4, !tbaa !20
  %90 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx159 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %90, i64 -1
  %value160 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx159, i32 0, i32 1
  %realval161 = bitcast %union.v* %value160 to float*
  store float %89, float* %realval161, align 4, !tbaa !20
  %91 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx162 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %91, i64 -1
  %tas163 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx162, i32 0, i32 0
  %type_attrs164 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas163, i32 0, i32 0
  store i16 4096, i16* %type_attrs164, align 2, !tbaa !22
  %arrayidx165 = getelementptr inbounds [4 x float], [4 x float]* %CMYK, i32 0, i64 3
  %92 = load float, float* %arrayidx165, align 4, !tbaa !20
  %93 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value166 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %93, i32 0, i32 1
  %realval167 = bitcast %union.v* %value166 to float*
  store float %92, float* %realval167, align 4, !tbaa !20
  %94 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas168 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %94, i32 0, i32 0
  %type_attrs169 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas168, i32 0, i32 0
  store i16 4096, i16* %type_attrs169, align 2, !tbaa !22
  br label %sw.epilog

sw.default:                                       ; preds = %for.end
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb.140, %if.end.120, %if.end.64
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.default, %if.then.35, %if.else, %if.then.5, %if.then
  %95 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %95) #1
  %96 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %96) #1
  %97 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.end(i64 12, i8* %97) #1
  %98 = bitcast float* %Gray to i8*
  call void @llvm.lifetime.end(i64 4, i8* %98) #1
  %99 = bitcast [4 x float]* %CMYK to i8*
  call void @llvm.lifetime.end(i64 16, i8* %99) #1
  %100 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %100) #1
  %101 = load i32, i32* %retval
  ret i32 %101
}

; Function Attrs: nounwind uwtable
define internal i32 @cmykvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %4, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 -3
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %6, 4
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp2 = icmp eq i32 %conv, 11
  br i1 %cmp2, label %if.end.11, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs5 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %11 = bitcast i16* %type_attrs5 to i8*
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx6, align 1, !tbaa !54
  %conv7 = zext i8 %12 to i32
  %cmp8 = icmp eq i32 %conv7, 16
  br i1 %cmp8, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %land.lhs.true, %for.body
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.12

for.cond.12:                                      ; preds = %for.inc.33, %for.end
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %cmp13 = icmp slt i32 %15, 4
  br i1 %cmp13, label %for.body.15, label %for.end.35

for.body.15:                                      ; preds = %for.cond.12
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %16 to i64
  %17 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds float, float* %17, i64 %idxprom
  %18 = load float, float* %arrayidx16, align 4, !tbaa !20
  %conv17 = fpext float %18 to double
  %cmp18 = fcmp ogt double %conv17, 1.000000e+00
  br i1 %cmp18, label %if.then.20, label %if.end.23

if.then.20:                                       ; preds = %for.body.15
  %19 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom21 = sext i32 %19 to i64
  %20 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds float, float* %20, i64 %idxprom21
  store float 1.000000e+00, float* %arrayidx22, align 4, !tbaa !20
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.20, %for.body.15
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom24 = sext i32 %21 to i64
  %22 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds float, float* %22, i64 %idxprom24
  %23 = load float, float* %arrayidx25, align 4, !tbaa !20
  %conv26 = fpext float %23 to double
  %cmp27 = fcmp olt double %conv26, 0.000000e+00
  br i1 %cmp27, label %if.then.29, label %if.end.32

if.then.29:                                       ; preds = %if.end.23
  %24 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom30 = sext i32 %24 to i64
  %25 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds float, float* %25, i64 %idxprom30
  store float 0.000000e+00, float* %arrayidx31, align 4, !tbaa !20
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.29, %if.end.23
  br label %for.inc.33

for.inc.33:                                       ; preds = %if.end.32
  %26 = load i32, i32* %i, align 4, !tbaa !26
  %inc34 = add nsw i32 %26, 1
  store i32 %inc34, i32* %i, align 4, !tbaa !26
  br label %for.cond.12

for.end.35:                                       ; preds = %for.cond.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.35, %if.then.10, %if.then
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %28 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define internal i32 @cmykinitialproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %0) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %paint1 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values2 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint1, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [64 x float], [64 x float]* %values2, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx3, align 4, !tbaa !20
  %paint4 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values5 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint4, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [64 x float], [64 x float]* %values5, i32 0, i64 2
  store float 0.000000e+00, float* %arrayidx6, align 4, !tbaa !20
  %paint7 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values8 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint7, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [64 x float], [64 x float]* %values8, i32 0, i64 3
  store float 1.000000e+00, float* %arrayidx9, align 4, !tbaa !20
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 0
  %2 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call i32 @gs_setcolor(%struct.gs_state_s* %2, %struct.gs_client_color_s* %cc) #7
  %3 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %3) #1
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @setcieaspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %CIEDict = alloca %struct.ref_s, align 8
  %nocie = alloca %struct.ref_s*, align 8
  %dictkey = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %cc = alloca %struct.gs_client_color_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 2
  %5 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %5, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), %struct.ref_s** %nocie) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp sgt i32 %7, 0
  br i1 %cmp1, label %if.then.2, label %if.end.10

if.then.2:                                        ; preds = %if.end
  %8 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %9 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %10 to i32
  %cmp3 = icmp eq i32 %conv, 1
  br i1 %cmp3, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.then.2
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.then.2
  %11 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %12 = load i16, i16* %boolval, align 2, !tbaa !25
  %tobool = icmp ne i16 %12, 0
  br i1 %tobool, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.end.6
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %14 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %15 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %16 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  %call8 = call i32 @setgrayspace(%struct.gs_context_state_s* %13, %struct.ref_s* %14, i32* %15, i32* %16, i32 1) #7
  store i32 %call8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end
  %17 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %17, align 4, !tbaa !26
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %19 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %20 = bitcast %struct.gs_ref_memory_s* %19 to %struct.gs_memory_s*
  %21 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call11 = call i32 @array_get(%struct.gs_memory_s* %20, %struct.ref_s* %21, i64 1, %struct.ref_s* %CIEDict) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %22 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %22, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.10
  %23 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.10
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %25 = load i32, i32* %24, align 4, !tbaa !26
  %cmp16 = icmp sgt i32 %25, 0
  br i1 %cmp16, label %if.then.18, label %if.end.21

if.then.18:                                       ; preds = %if.end.15
  %26 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %26) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx19, align 4, !tbaa !20
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 0
  %28 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call20 = call i32 @gs_setcolor(%struct.gs_state_s* %28, %struct.gs_client_color_s* %cc) #7
  store i32 %call20, i32* %code, align 4, !tbaa !26
  %29 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %29, align 4, !tbaa !26
  %30 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %30, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %31 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %31) #1
  br label %cleanup

if.end.21:                                        ; preds = %if.end.15
  %32 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %value22 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 0, i32 1
  %refs = bitcast %union.v* %value22 to %struct.ref_s**
  %33 = load %struct.ref_s*, %struct.ref_s** %refs, align 8, !tbaa !1
  %value23 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i32 0, i32 1
  %saveid = bitcast %union.v* %value23 to i64*
  %34 = load i64, i64* %saveid, align 8, !tbaa !23
  store i64 %34, i64* %dictkey, align 8, !tbaa !23
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %36 = load i64, i64* %dictkey, align 8, !tbaa !23
  %call24 = call i32 @cieaspace(%struct.gs_context_state_s* %35, %struct.ref_s* %CIEDict, i64 %36) #7
  store i32 %call24, i32* %code, align 4, !tbaa !26
  %37 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %38 = load i32, i32* %37, align 4, !tbaa !26
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %37, align 4, !tbaa !26
  %39 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %39, align 4, !tbaa !26
  %40 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %40, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.21, %if.then.18, %if.then.14, %if.then.7, %if.then.5, %if.then
  %41 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.end(i64 8, i8* %42) #1
  %43 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %43) #1
  %44 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define internal i32 @validatecieaspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %value = alloca [9 x float], align 16
  %CIEdict = alloca %struct.ref_s, align 8
  %CIEspace = alloca %struct.ref_s*, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #1
  %2 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %5 = load %struct.ref_s*, %struct.ref_s** %4, align 8, !tbaa !1
  store %struct.ref_s* %5, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %6 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %8 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %10 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %10, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %11 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %11, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %12 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %13 = bitcast %struct.gs_ref_memory_s* %12 to %struct.gs_memory_s*
  %14 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %13, %struct.ref_s* %14, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %15 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %15, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %16 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %17 = load i16, i16* %type_attrs12, align 2, !tbaa !22
  %conv13 = zext i16 %17 to i32
  %and14 = and i32 %conv13, 16160
  %cmp15 = icmp eq i32 %and14, 544
  br i1 %cmp15, label %if.end.24, label %if.then.17

if.then.17:                                       ; preds = %if.end.10
  %tas18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs19 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas18, i32 0, i32 0
  %18 = bitcast i16* %type_attrs19 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %18, i64 1
  %19 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv20 = zext i8 %19 to i32
  %cmp21 = icmp eq i32 %conv20, 2
  br i1 %cmp21, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then.17
  %call23 = call i32 @check_type_failed(%struct.ref_s* %CIEdict) #7
  br label %cond.end

cond.false:                                       ; preds = %if.then.17
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call23, %cond.true ], [ -7, %cond.false ]
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.10
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call25 = call i32 @checkWhitePoint(%struct.gs_context_state_s* %20, %struct.ref_s* %CIEdict) #7
  store i32 %call25, i32* %code, align 4, !tbaa !26
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp26 = icmp ne i32 %21, 0
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.24
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.24
  %call30 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call30, i32* %code, align 4, !tbaa !26
  %23 = load i32, i32* %code, align 4, !tbaa !26
  %cmp31 = icmp sgt i32 %23, 0
  br i1 %cmp31, label %land.lhs.true, label %if.end.67

land.lhs.true:                                    ; preds = %if.end.29
  %24 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas33 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %24, i32 0, i32 0
  %type_attrs34 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas33, i32 0, i32 0
  %25 = bitcast i16* %type_attrs34 to i8*
  %arrayidx35 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx35, align 1, !tbaa !54
  %conv36 = zext i8 %26 to i32
  %cmp37 = icmp eq i32 %conv36, 14
  br i1 %cmp37, label %if.end.67, label %if.then.39

if.then.39:                                       ; preds = %land.lhs.true
  %27 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %27, i32 0, i32 0
  %type_attrs41 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas40, i32 0, i32 0
  %28 = load i16, i16* %type_attrs41, align 2, !tbaa !22
  %conv42 = zext i16 %28 to i32
  %and43 = and i32 %conv42, 15360
  %cmp44 = icmp eq i32 %and43, 1024
  br i1 %cmp44, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.then.39
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %if.then.39
  %29 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %29, i32 0, i32 0
  %rsize49 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas48, i32 0, i32 2
  %30 = load i32, i32* %rsize49, align 4, !tbaa !5
  %cmp50 = icmp ne i32 %30, 2
  br i1 %cmp50, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.47
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.53:                                        ; preds = %if.end.47
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory54 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 1
  %current55 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory54, i32 0, i32 0
  %32 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current55, align 8, !tbaa !55
  %33 = bitcast %struct.gs_ref_memory_s* %32 to %struct.gs_memory_s*
  %34 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i32 0
  %call56 = call i32 @get_cie_param_array(%struct.gs_memory_s* %33, %struct.ref_s* %34, i32 2, float* %arraydecay) #7
  store i32 %call56, i32* %code, align 4, !tbaa !26
  %35 = load i32, i32* %code, align 4, !tbaa !26
  %cmp57 = icmp slt i32 %35, 0
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.53
  %36 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.60:                                        ; preds = %if.end.53
  %arrayidx61 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 1
  %37 = load float, float* %arrayidx61, align 4, !tbaa !20
  %arrayidx62 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 0
  %38 = load float, float* %arrayidx62, align 4, !tbaa !20
  %cmp63 = fcmp olt float %37, %38
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.end.60
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.66:                                        ; preds = %if.end.60
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %land.lhs.true, %if.end.29
  %call68 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call68, i32* %code, align 4, !tbaa !26
  %39 = load i32, i32* %code, align 4, !tbaa !26
  %cmp69 = icmp sgt i32 %39, 0
  br i1 %cmp69, label %land.lhs.true.71, label %if.end.88

land.lhs.true.71:                                 ; preds = %if.end.67
  %40 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 0, i32 0
  %type_attrs73 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas72, i32 0, i32 0
  %41 = bitcast i16* %type_attrs73 to i8*
  %arrayidx74 = getelementptr inbounds i8, i8* %41, i64 1
  %42 = load i8, i8* %arrayidx74, align 1, !tbaa !54
  %conv75 = zext i8 %42 to i32
  %cmp76 = icmp eq i32 %conv75, 14
  br i1 %cmp76, label %if.end.88, label %if.then.78

if.then.78:                                       ; preds = %land.lhs.true.71
  br label %do.body

do.body:                                          ; preds = %if.then.78
  %43 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i32 0, i32 0
  %type_attrs80 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas79, i32 0, i32 0
  %44 = load i16, i16* %type_attrs80, align 2, !tbaa !22
  %conv81 = zext i16 %44 to i32
  %and82 = and i32 %conv81, 15552
  %cmp83 = icmp eq i32 %and82, 1216
  br i1 %cmp83, label %if.end.87, label %if.then.85

if.then.85:                                       ; preds = %do.body
  %45 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %call86 = call i32 @check_proc_failed(%struct.ref_s* %45) #7
  store i32 %call86, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.87:                                        ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.87
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.88

if.end.88:                                        ; preds = %do.end, %land.lhs.true.71, %if.end.67
  %call89 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call89, i32* %code, align 4, !tbaa !26
  %46 = load i32, i32* %code, align 4, !tbaa !26
  %cmp90 = icmp sgt i32 %46, 0
  br i1 %cmp90, label %land.lhs.true.92, label %if.end.122

land.lhs.true.92:                                 ; preds = %if.end.88
  %47 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas93 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i32 0, i32 0
  %type_attrs94 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas93, i32 0, i32 0
  %48 = bitcast i16* %type_attrs94 to i8*
  %arrayidx95 = getelementptr inbounds i8, i8* %48, i64 1
  %49 = load i8, i8* %arrayidx95, align 1, !tbaa !54
  %conv96 = zext i8 %49 to i32
  %cmp97 = icmp eq i32 %conv96, 14
  br i1 %cmp97, label %if.end.122, label %if.then.99

if.then.99:                                       ; preds = %land.lhs.true.92
  %50 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i32 0, i32 0
  %type_attrs101 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas100, i32 0, i32 0
  %51 = load i16, i16* %type_attrs101, align 2, !tbaa !22
  %conv102 = zext i16 %51 to i32
  %and103 = and i32 %conv102, 15360
  %cmp104 = icmp eq i32 %and103, 1024
  br i1 %cmp104, label %if.end.107, label %if.then.106

if.then.106:                                      ; preds = %if.then.99
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.107:                                       ; preds = %if.then.99
  %52 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas108 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 0, i32 0
  %rsize109 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas108, i32 0, i32 2
  %53 = load i32, i32* %rsize109, align 4, !tbaa !5
  %cmp110 = icmp ne i32 %53, 3
  br i1 %cmp110, label %if.then.112, label %if.end.113

if.then.112:                                      ; preds = %if.end.107
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.113:                                       ; preds = %if.end.107
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory114 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 1
  %current115 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory114, i32 0, i32 0
  %55 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current115, align 8, !tbaa !55
  %56 = bitcast %struct.gs_ref_memory_s* %55 to %struct.gs_memory_s*
  %57 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay116 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i32 0
  %call117 = call i32 @get_cie_param_array(%struct.gs_memory_s* %56, %struct.ref_s* %57, i32 3, float* %arraydecay116) #7
  store i32 %call117, i32* %code, align 4, !tbaa !26
  %58 = load i32, i32* %code, align 4, !tbaa !26
  %cmp118 = icmp slt i32 %58, 0
  br i1 %cmp118, label %if.then.120, label %if.end.121

if.then.120:                                      ; preds = %if.end.113
  %59 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %59, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.121:                                       ; preds = %if.end.113
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %land.lhs.true.92, %if.end.88
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call123 = call i32 @checkRangeLMN(%struct.gs_context_state_s* %60, %struct.ref_s* %CIEdict) #7
  store i32 %call123, i32* %code, align 4, !tbaa !26
  %61 = load i32, i32* %code, align 4, !tbaa !26
  %cmp124 = icmp ne i32 %61, 0
  br i1 %cmp124, label %if.then.126, label %if.end.127

if.then.126:                                      ; preds = %if.end.122
  %62 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %62, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.127:                                       ; preds = %if.end.122
  %63 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call128 = call i32 @checkDecodeLMN(%struct.gs_context_state_s* %63, %struct.ref_s* %CIEdict) #7
  store i32 %call128, i32* %code, align 4, !tbaa !26
  %64 = load i32, i32* %code, align 4, !tbaa !26
  %cmp129 = icmp ne i32 %64, 0
  br i1 %cmp129, label %if.then.131, label %if.end.132

if.then.131:                                      ; preds = %if.end.127
  %65 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %65, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.132:                                       ; preds = %if.end.127
  %66 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call133 = call i32 @checkMatrixLMN(%struct.gs_context_state_s* %66, %struct.ref_s* %CIEdict) #7
  store i32 %call133, i32* %code, align 4, !tbaa !26
  %67 = load i32, i32* %code, align 4, !tbaa !26
  %cmp134 = icmp ne i32 %67, 0
  br i1 %cmp134, label %if.then.136, label %if.end.137

if.then.136:                                      ; preds = %if.end.132
  %68 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %68, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.137:                                       ; preds = %if.end.132
  %69 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call138 = call i32 @checkBlackPoint(%struct.gs_context_state_s* %69, %struct.ref_s* %CIEdict) #7
  store i32 %call138, i32* %code, align 4, !tbaa !26
  %70 = load i32, i32* %code, align 4, !tbaa !26
  %cmp139 = icmp ne i32 %70, 0
  br i1 %cmp139, label %if.then.141, label %if.end.142

if.then.141:                                      ; preds = %if.end.137
  %71 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %71, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.142:                                       ; preds = %if.end.137
  %72 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %72, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.142, %if.then.141, %if.then.136, %if.then.131, %if.then.126, %if.then.120, %if.then.112, %if.then.106, %if.then.85, %if.then.65, %if.then.59, %if.then.52, %if.then.46, %if.then.28, %cond.end, %if.then.9, %if.then.5, %if.then
  %73 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %73) #1
  %74 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %74) #1
  %75 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %75) #1
  %76 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 36, i8* %76) #1
  %77 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #1
  %78 = load i32, i32* %retval
  ret i32 %78
}

; Function Attrs: nounwind uwtable
define internal i32 @ciearange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 2, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.15

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 0
  store float 0.000000e+00, float* %arrayidx13, align 4, !tbaa !20
  %21 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 1
  store float 1.000000e+00, float* %arrayidx14, align 4, !tbaa !20
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.15, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @cieadomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 2, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.15

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 0
  store float 0.000000e+00, float* %arrayidx13, align 4, !tbaa !20
  %21 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds float, float* %21, i64 1
  store float 1.000000e+00, float* %arrayidx14, align 4, !tbaa !20
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.15, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @ciebasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %spacename = alloca %struct.ref_s*, align 8
  %nref = alloca %struct.ref_s, align 8
  %i = alloca i32, align 4
  %components = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast %struct.ref_s** %spacename to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.ref_s* %nref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 1, i32* %components, align 4, !tbaa !26
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %7 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %7 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 1
  %refs = bitcast %union.v* %value to %struct.ref_s**
  %9 = load %struct.ref_s*, %struct.ref_s** %refs, align 8, !tbaa !1
  store %struct.ref_s* %9, %struct.ref_s** %spacename, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %entry
  %10 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %10, %struct.ref_s** %spacename, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.ref_s*, %struct.ref_s** %spacename, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %type_attrs3 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 0
  %12 = bitcast i16* %type_attrs3 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 1
  %13 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv4 = zext i8 %13 to i32
  %cmp5 = icmp eq i32 %conv4, 13
  br i1 %cmp5, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.8
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %14, 4
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %16 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %17 = bitcast %struct.gs_ref_memory_s* %16 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %17, i32 0, i32 2
  %18 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %18, i32 0, i32 16
  %19 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %20 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %20 to i64
  %arrayidx11 = getelementptr inbounds [4 x i8*], [4 x i8*]* @CIESpaces, i32 0, i64 %idxprom
  %21 = load i8*, i8** %arrayidx11, align 8, !tbaa !1
  %22 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom12 = sext i32 %22 to i64
  %arrayidx13 = getelementptr inbounds [4 x i8*], [4 x i8*]* @CIESpaces, i32 0, i64 %idxprom12
  %23 = load i8*, i8** %arrayidx13, align 8, !tbaa !1
  %call = call i64 @strlen(i8* %23) #9
  %conv14 = trunc i64 %call to i32
  %call15 = call i32 @names_ref(%struct.name_table_s* %19, i8* %21, i32 %conv14, %struct.ref_s* %nref, i32 0) #7
  store i32 %call15, i32* %code, align 4, !tbaa !26
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp16 = icmp slt i32 %24, 0
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %for.body
  %25 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.19:                                        ; preds = %for.body
  %26 = load %struct.ref_s*, %struct.ref_s** %spacename, align 8, !tbaa !1
  %value20 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i32 0, i32 1
  %pname = bitcast %union.v* %value20 to %struct.name_s**
  %27 = load %struct.name_s*, %struct.name_s** %pname, align 8, !tbaa !1
  %value21 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %nref, i32 0, i32 1
  %pname22 = bitcast %union.v* %value21 to %struct.name_s**
  %28 = load %struct.name_s*, %struct.name_s** %pname22, align 8, !tbaa !1
  %cmp23 = icmp eq %struct.name_s* %27, %28
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.19
  br label %for.end

if.end.26:                                        ; preds = %if.end.19
  br label %for.inc

for.inc:                                          ; preds = %if.end.26
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %if.then.25, %for.cond
  %30 = load i32, i32* %i, align 4, !tbaa !26
  switch i32 %30, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.27
    i32 2, label %sw.bb.27
    i32 3, label %sw.bb.28
  ]

sw.bb:                                            ; preds = %for.end
  store i32 1, i32* %components, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.27:                                         ; preds = %for.end, %for.end
  store i32 3, i32* %components, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.28:                                         ; preds = %for.end
  store i32 4, i32* %components, align 4, !tbaa !26
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end, %sw.bb.28, %sw.bb.27, %sw.bb
  %31 = load i32, i32* %components, align 4, !tbaa !26
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %33 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  %idx.ext = sext i32 %31 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i64 %idx.neg
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p, align 8, !tbaa !10
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 26
  %stack30 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack29, i32 0, i32 0
  %p31 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack30, i32 0, i32 0
  %35 = load %struct.ref_s*, %struct.ref_s** %p31, align 8, !tbaa !10
  store %struct.ref_s* %35, %struct.ref_s** %op, align 8, !tbaa !1
  %36 = load i32, i32* %base.addr, align 4, !tbaa !26
  switch i32 %36, label %sw.epilog.35 [
    i32 0, label %sw.bb.32
    i32 1, label %sw.bb.33
    i32 2, label %sw.bb.33
    i32 3, label %sw.bb.34
  ]

sw.bb.32:                                         ; preds = %sw.epilog
  store i32 1, i32* %components, align 4, !tbaa !26
  br label %sw.epilog.35

sw.bb.33:                                         ; preds = %sw.epilog, %sw.epilog
  store i32 3, i32* %components, align 4, !tbaa !26
  br label %sw.epilog.35

sw.bb.34:                                         ; preds = %sw.epilog
  store i32 4, i32* %components, align 4, !tbaa !26
  br label %sw.epilog.35

sw.epilog.35:                                     ; preds = %sw.epilog, %sw.bb.34, %sw.bb.33, %sw.bb.32
  br label %do.body

do.body:                                          ; preds = %sw.epilog.35
  %37 = load i32, i32* %components, align 4, !tbaa !26
  %38 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext36 = sext i32 %37 to i64
  %add.ptr37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i64 %idx.ext36
  store %struct.ref_s* %add.ptr37, %struct.ref_s** %op, align 8, !tbaa !1
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 26
  %stack39 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack38, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 2
  %40 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp40 = icmp ugt %struct.ref_s* %add.ptr37, %40
  br i1 %cmp40, label %if.then.42, label %if.else.45

if.then.42:                                       ; preds = %do.body
  %41 = load i32, i32* %components, align 4, !tbaa !26
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack43 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 26
  %stack44 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack43, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack44, i32 0, i32 7
  store i32 %41, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.45:                                       ; preds = %do.body
  %43 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack46 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %44, i32 0, i32 26
  %stack47 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack46, i32 0, i32 0
  %p48 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack47, i32 0, i32 0
  store %struct.ref_s* %43, %struct.ref_s** %p48, align 8, !tbaa !10
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.45
  br label %do.cond

do.cond:                                          ; preds = %if.end.49
  br label %do.end

do.end:                                           ; preds = %do.cond
  %45 = load i32, i32* %components, align 4, !tbaa !26
  %sub = sub nsw i32 %45, 1
  %46 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext50 = sext i32 %sub to i64
  %idx.neg51 = sub i64 0, %idx.ext50
  %add.ptr52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i64 %idx.neg51
  store %struct.ref_s* %add.ptr52, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.53

for.cond.53:                                      ; preds = %for.inc.60, %do.end
  %47 = load i32, i32* %i, align 4, !tbaa !26
  %48 = load i32, i32* %components, align 4, !tbaa !26
  %cmp54 = icmp slt i32 %47, %48
  br i1 %cmp54, label %for.body.56, label %for.end.62

for.body.56:                                      ; preds = %for.cond.53
  %49 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value57 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i32 0, i32 1
  %realval = bitcast %union.v* %value57 to float*
  store float 0.000000e+00, float* %realval, align 4, !tbaa !20
  %50 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  store i16 4096, i16* %type_attrs59, align 2, !tbaa !22
  %51 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc.60

for.inc.60:                                       ; preds = %for.body.56
  %52 = load i32, i32* %i, align 4, !tbaa !26
  %inc61 = add nsw i32 %52, 1
  store i32 %inc61, i32* %i, align 4, !tbaa !26
  br label %for.cond.53

for.end.62:                                       ; preds = %for.cond.53
  %53 = load i32, i32* %components, align 4, !tbaa !26
  %cmp63 = icmp eq i32 %53, 4
  br i1 %cmp63, label %if.then.65, label %if.end.71

if.then.65:                                       ; preds = %for.end.62
  %54 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 -1
  store %struct.ref_s* %incdec.ptr66, %struct.ref_s** %op, align 8, !tbaa !1
  %55 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value67 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i32 0, i32 1
  %realval68 = bitcast %union.v* %value67 to float*
  store float 1.000000e+00, float* %realval68, align 4, !tbaa !20
  %56 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas69 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 0
  %type_attrs70 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas69, i32 0, i32 0
  store i16 4096, i16* %type_attrs70, align 2, !tbaa !22
  br label %if.end.71

if.end.71:                                        ; preds = %if.then.65, %for.end.62
  %57 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %57, align 4, !tbaa !26
  %58 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %58, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.71, %if.then.42, %if.then.18, %if.then.7
  %59 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %59) #1
  %60 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #1
  %61 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #1
  %62 = bitcast %struct.ref_s* %nref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %62) #1
  %63 = bitcast %struct.ref_s** %spacename to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63) #1
  %64 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %64) #1
  %65 = load i32, i32* %retval
  ret i32 %65
}

; Function Attrs: nounwind uwtable
define internal i32 @cieavalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %3, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %4, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %5 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 1
  %6 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %6 to i32
  %cmp1 = icmp eq i32 %conv, 11
  br i1 %cmp1, label %if.end.10, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %8 = bitcast i16* %type_attrs4 to i8*
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx5, align 1, !tbaa !54
  %conv6 = zext i8 %9 to i32
  %cmp7 = icmp eq i32 %conv6, 16
  br i1 %cmp7, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %if.then.9, %if.then
  %10 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %10) #1
  %11 = load i32, i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i32 @cieacompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %CIEdict1 = alloca %struct.ref_s, align 8
  %CIEdict2 = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call3 = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %CIEdict2) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call7 = call i32 @comparedictkey(%struct.gs_context_state_s* %13, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0)) #7
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call10 = call i32 @comparedictkey(%struct.gs_context_state_s* %14, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0)) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end.9
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call14 = call i32 @comparedictkey(%struct.gs_context_state_s* %15, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0)) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.13
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call18 = call i32 @comparedictkey(%struct.gs_context_state_s* %16, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0)) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.17
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call22 = call i32 @comparedictkey(%struct.gs_context_state_s* %17, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0)) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.21
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call26 = call i32 @comparedictkey(%struct.gs_context_state_s* %18, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0)) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.25
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call30 = call i32 @comparedictkey(%struct.gs_context_state_s* %19, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0)) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.29
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call34 = call i32 @comparedictkey(%struct.gs_context_state_s* %20, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0)) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.37:                                        ; preds = %if.end.33
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.37, %if.then.36, %if.then.32, %if.then.28, %if.then.24, %if.then.20, %if.then.16, %if.then.12, %if.then.8, %if.then.5, %if.then
  %21 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %21) #1
  %22 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %22) #1
  %23 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %24 = load i32, i32* %retval
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define internal i32 @setcieabcspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %CIEDict = alloca %struct.ref_s, align 8
  %nocie = alloca %struct.ref_s*, align 8
  %dictkey = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %cc = alloca %struct.gs_client_color_s, align 8
  %i = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 2
  %5 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %5, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), %struct.ref_s** %nocie) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp sgt i32 %7, 0
  br i1 %cmp1, label %if.then.2, label %if.end.10

if.then.2:                                        ; preds = %if.end
  %8 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %9 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %10 to i32
  %cmp3 = icmp eq i32 %conv, 1
  br i1 %cmp3, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.then.2
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.then.2
  %11 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %12 = load i16, i16* %boolval, align 2, !tbaa !25
  %tobool = icmp ne i16 %12, 0
  br i1 %tobool, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.end.6
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %14 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %15 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %16 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  %call8 = call i32 @setrgbspace(%struct.gs_context_state_s* %13, %struct.ref_s* %14, i32* %15, i32* %16, i32 1) #7
  store i32 %call8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end
  %17 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %17, align 4, !tbaa !26
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %19 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %20 = bitcast %struct.gs_ref_memory_s* %19 to %struct.gs_memory_s*
  %21 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call11 = call i32 @array_get(%struct.gs_memory_s* %20, %struct.ref_s* %21, i64 1, %struct.ref_s* %CIEDict) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %22 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %22, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.10
  %23 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.10
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %25 = load i32, i32* %24, align 4, !tbaa !26
  %cmp16 = icmp sgt i32 %25, 0
  br i1 %cmp16, label %if.then.18, label %if.end.23

if.then.18:                                       ; preds = %if.end.15
  %26 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %26) #1
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.18
  %28 = load i32, i32* %i, align 4, !tbaa !26
  %cmp19 = icmp slt i32 %28, 3
  br i1 %cmp19, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %29 to i64
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx21, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 0
  %32 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call22 = call i32 @gs_setcolor(%struct.gs_state_s* %32, %struct.gs_client_color_s* %cc) #7
  store i32 %call22, i32* %code, align 4, !tbaa !26
  %33 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %33, align 4, !tbaa !26
  %34 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %35 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %36) #1
  br label %cleanup

if.end.23:                                        ; preds = %if.end.15
  %37 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %value24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 1
  %refs = bitcast %union.v* %value24 to %struct.ref_s**
  %38 = load %struct.ref_s*, %struct.ref_s** %refs, align 8, !tbaa !1
  %value25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i32 0, i32 1
  %saveid = bitcast %union.v* %value25 to i64*
  %39 = load i64, i64* %saveid, align 8, !tbaa !23
  store i64 %39, i64* %dictkey, align 8, !tbaa !23
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %41 = load i64, i64* %dictkey, align 8, !tbaa !23
  %call26 = call i32 @cieabcspace(%struct.gs_context_state_s* %40, %struct.ref_s* %CIEDict, i64 %41) #7
  store i32 %call26, i32* %code, align 4, !tbaa !26
  %42 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %42, align 4, !tbaa !26
  %43 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %44 = load i32, i32* %43, align 4, !tbaa !26
  %inc27 = add nsw i32 %44, 1
  store i32 %inc27, i32* %43, align 4, !tbaa !26
  %45 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %45, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.23, %for.end, %if.then.14, %if.then.7, %if.then.5, %if.then
  %46 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #1
  %47 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %48) #1
  %49 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @validatecieabcspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca [9 x float], align 16
  %CIEdict = alloca %struct.ref_s, align 8
  %CIEspace = alloca %struct.ref_s*, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 36, i8* %2) #1
  %3 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %6 = load %struct.ref_s*, %struct.ref_s** %5, align 8, !tbaa !1
  store %struct.ref_s* %6, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %7 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %9 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %10 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %10 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %12 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %12, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %15, %struct.ref_s* %16, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %17, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %18 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %19 = load i16, i16* %type_attrs12, align 2, !tbaa !22
  %conv13 = zext i16 %19 to i32
  %and14 = and i32 %conv13, 16160
  %cmp15 = icmp eq i32 %and14, 544
  br i1 %cmp15, label %if.end.24, label %if.then.17

if.then.17:                                       ; preds = %if.end.10
  %tas18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs19 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas18, i32 0, i32 0
  %20 = bitcast i16* %type_attrs19 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 1
  %21 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv20 = zext i8 %21 to i32
  %cmp21 = icmp eq i32 %conv20, 2
  br i1 %cmp21, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then.17
  %call23 = call i32 @check_type_failed(%struct.ref_s* %CIEdict) #7
  br label %cond.end

cond.false:                                       ; preds = %if.then.17
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call23, %cond.true ], [ -7, %cond.false ]
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.10
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call25 = call i32 @checkWhitePoint(%struct.gs_context_state_s* %22, %struct.ref_s* %CIEdict) #7
  store i32 %call25, i32* %code, align 4, !tbaa !26
  %23 = load i32, i32* %code, align 4, !tbaa !26
  %cmp26 = icmp ne i32 %23, 0
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.24
  %24 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %24, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.24
  %call30 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call30, i32* %code, align 4, !tbaa !26
  %25 = load i32, i32* %code, align 4, !tbaa !26
  %cmp31 = icmp sgt i32 %25, 0
  br i1 %cmp31, label %land.lhs.true, label %if.end.76

land.lhs.true:                                    ; preds = %if.end.29
  %26 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas33 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i32 0, i32 0
  %type_attrs34 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas33, i32 0, i32 0
  %27 = bitcast i16* %type_attrs34 to i8*
  %arrayidx35 = getelementptr inbounds i8, i8* %27, i64 1
  %28 = load i8, i8* %arrayidx35, align 1, !tbaa !54
  %conv36 = zext i8 %28 to i32
  %cmp37 = icmp eq i32 %conv36, 14
  br i1 %cmp37, label %if.end.76, label %if.then.39

if.then.39:                                       ; preds = %land.lhs.true
  %29 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %29, i32 0, i32 0
  %type_attrs41 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas40, i32 0, i32 0
  %30 = load i16, i16* %type_attrs41, align 2, !tbaa !22
  %conv42 = zext i16 %30 to i32
  %and43 = and i32 %conv42, 15360
  %cmp44 = icmp eq i32 %and43, 1024
  br i1 %cmp44, label %if.end.47, label %if.then.46

if.then.46:                                       ; preds = %if.then.39
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %if.then.39
  %31 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 0, i32 0
  %rsize49 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas48, i32 0, i32 2
  %32 = load i32, i32* %rsize49, align 4, !tbaa !5
  %cmp50 = icmp ne i32 %32, 6
  br i1 %cmp50, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.47
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.53:                                        ; preds = %if.end.47
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory54 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 1
  %current55 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory54, i32 0, i32 0
  %34 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current55, align 8, !tbaa !55
  %35 = bitcast %struct.gs_ref_memory_s* %34 to %struct.gs_memory_s*
  %36 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i32 0
  %call56 = call i32 @get_cie_param_array(%struct.gs_memory_s* %35, %struct.ref_s* %36, i32 6, float* %arraydecay) #7
  store i32 %call56, i32* %code, align 4, !tbaa !26
  %37 = load i32, i32* %code, align 4, !tbaa !26
  %cmp57 = icmp slt i32 %37, 0
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.53
  %38 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %38, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.60:                                        ; preds = %if.end.53
  %arrayidx61 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 1
  %39 = load float, float* %arrayidx61, align 4, !tbaa !20
  %arrayidx62 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 0
  %40 = load float, float* %arrayidx62, align 4, !tbaa !20
  %cmp63 = fcmp olt float %39, %40
  br i1 %cmp63, label %if.then.74, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.60
  %arrayidx65 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 3
  %41 = load float, float* %arrayidx65, align 4, !tbaa !20
  %arrayidx66 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 2
  %42 = load float, float* %arrayidx66, align 4, !tbaa !20
  %cmp67 = fcmp olt float %41, %42
  br i1 %cmp67, label %if.then.74, label %lor.lhs.false.69

lor.lhs.false.69:                                 ; preds = %lor.lhs.false
  %arrayidx70 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 5
  %43 = load float, float* %arrayidx70, align 4, !tbaa !20
  %arrayidx71 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i64 4
  %44 = load float, float* %arrayidx71, align 4, !tbaa !20
  %cmp72 = fcmp olt float %43, %44
  br i1 %cmp72, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %lor.lhs.false.69, %lor.lhs.false, %if.end.60
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.75:                                        ; preds = %lor.lhs.false.69
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %land.lhs.true, %if.end.29
  %call77 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call77, i32* %code, align 4, !tbaa !26
  %45 = load i32, i32* %code, align 4, !tbaa !26
  %cmp78 = icmp sgt i32 %45, 0
  br i1 %cmp78, label %land.lhs.true.80, label %if.end.121

land.lhs.true.80:                                 ; preds = %if.end.76
  %46 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i32 0, i32 0
  %type_attrs82 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas81, i32 0, i32 0
  %47 = bitcast i16* %type_attrs82 to i8*
  %arrayidx83 = getelementptr inbounds i8, i8* %47, i64 1
  %48 = load i8, i8* %arrayidx83, align 1, !tbaa !54
  %conv84 = zext i8 %48 to i32
  %cmp85 = icmp eq i32 %conv84, 14
  br i1 %cmp85, label %if.end.121, label %if.then.87

if.then.87:                                       ; preds = %land.lhs.true.80
  %49 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i32 0, i32 0
  %type_attrs89 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas88, i32 0, i32 0
  %50 = load i16, i16* %type_attrs89, align 2, !tbaa !22
  %conv90 = zext i16 %50 to i32
  %and91 = and i32 %conv90, 15360
  %cmp92 = icmp eq i32 %and91, 1024
  br i1 %cmp92, label %if.end.95, label %if.then.94

if.then.94:                                       ; preds = %if.then.87
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.95:                                        ; preds = %if.then.87
  %51 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas96 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 0, i32 0
  %rsize97 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas96, i32 0, i32 2
  %52 = load i32, i32* %rsize97, align 4, !tbaa !5
  %cmp98 = icmp ne i32 %52, 3
  br i1 %cmp98, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %if.end.95
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.101:                                       ; preds = %if.end.95
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.101
  %53 = load i32, i32* %i, align 4, !tbaa !26
  %cmp102 = icmp slt i32 %53, 3
  br i1 %cmp102, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory104 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 1
  %current105 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory104, i32 0, i32 0
  %55 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current105, align 8, !tbaa !55
  %56 = bitcast %struct.gs_ref_memory_s* %55 to %struct.gs_memory_s*
  %57 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %58 = load i32, i32* %i, align 4, !tbaa !26
  %conv106 = sext i32 %58 to i64
  %call107 = call i32 @array_get(%struct.gs_memory_s* %56, %struct.ref_s* %57, i64 %conv106, %struct.ref_s* %valref) #7
  store i32 %call107, i32* %code, align 4, !tbaa !26
  %59 = load i32, i32* %code, align 4, !tbaa !26
  %cmp108 = icmp slt i32 %59, 0
  br i1 %cmp108, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %for.body
  %60 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %60, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.111:                                       ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %if.end.111
  %tas112 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs113 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas112, i32 0, i32 0
  %61 = load i16, i16* %type_attrs113, align 2, !tbaa !22
  %conv114 = zext i16 %61 to i32
  %and115 = and i32 %conv114, 15552
  %cmp116 = icmp eq i32 %and115, 1216
  br i1 %cmp116, label %if.end.120, label %if.then.118

if.then.118:                                      ; preds = %do.body
  %call119 = call i32 @check_proc_failed(%struct.ref_s* %valref) #7
  store i32 %call119, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.120:                                       ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.120
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %for.inc

for.inc:                                          ; preds = %do.end
  %62 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %62, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.121

if.end.121:                                       ; preds = %for.end, %land.lhs.true.80, %if.end.76
  %call122 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call122, i32* %code, align 4, !tbaa !26
  %63 = load i32, i32* %code, align 4, !tbaa !26
  %cmp123 = icmp sgt i32 %63, 0
  br i1 %cmp123, label %land.lhs.true.125, label %if.end.155

land.lhs.true.125:                                ; preds = %if.end.121
  %64 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas126 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %64, i32 0, i32 0
  %type_attrs127 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas126, i32 0, i32 0
  %65 = bitcast i16* %type_attrs127 to i8*
  %arrayidx128 = getelementptr inbounds i8, i8* %65, i64 1
  %66 = load i8, i8* %arrayidx128, align 1, !tbaa !54
  %conv129 = zext i8 %66 to i32
  %cmp130 = icmp eq i32 %conv129, 14
  br i1 %cmp130, label %if.end.155, label %if.then.132

if.then.132:                                      ; preds = %land.lhs.true.125
  %67 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas133 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %67, i32 0, i32 0
  %type_attrs134 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas133, i32 0, i32 0
  %68 = load i16, i16* %type_attrs134, align 2, !tbaa !22
  %conv135 = zext i16 %68 to i32
  %and136 = and i32 %conv135, 15360
  %cmp137 = icmp eq i32 %and136, 1024
  br i1 %cmp137, label %if.end.140, label %if.then.139

if.then.139:                                      ; preds = %if.then.132
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.140:                                       ; preds = %if.then.132
  %69 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas141 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %69, i32 0, i32 0
  %rsize142 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas141, i32 0, i32 2
  %70 = load i32, i32* %rsize142, align 4, !tbaa !5
  %cmp143 = icmp ne i32 %70, 9
  br i1 %cmp143, label %if.then.145, label %if.end.146

if.then.145:                                      ; preds = %if.end.140
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.146:                                       ; preds = %if.end.140
  %71 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory147 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %71, i32 0, i32 1
  %current148 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory147, i32 0, i32 0
  %72 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current148, align 8, !tbaa !55
  %73 = bitcast %struct.gs_ref_memory_s* %72 to %struct.gs_memory_s*
  %74 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay149 = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i32 0
  %call150 = call i32 @get_cie_param_array(%struct.gs_memory_s* %73, %struct.ref_s* %74, i32 9, float* %arraydecay149) #7
  store i32 %call150, i32* %code, align 4, !tbaa !26
  %75 = load i32, i32* %code, align 4, !tbaa !26
  %cmp151 = icmp slt i32 %75, 0
  br i1 %cmp151, label %if.then.153, label %if.end.154

if.then.153:                                      ; preds = %if.end.146
  %76 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %76, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.154:                                       ; preds = %if.end.146
  br label %if.end.155

if.end.155:                                       ; preds = %if.end.154, %land.lhs.true.125, %if.end.121
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call156 = call i32 @checkRangeLMN(%struct.gs_context_state_s* %77, %struct.ref_s* %CIEdict) #7
  store i32 %call156, i32* %code, align 4, !tbaa !26
  %78 = load i32, i32* %code, align 4, !tbaa !26
  %cmp157 = icmp ne i32 %78, 0
  br i1 %cmp157, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.end.155
  %79 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %79, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.160:                                       ; preds = %if.end.155
  %80 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call161 = call i32 @checkDecodeLMN(%struct.gs_context_state_s* %80, %struct.ref_s* %CIEdict) #7
  store i32 %call161, i32* %code, align 4, !tbaa !26
  %81 = load i32, i32* %code, align 4, !tbaa !26
  %cmp162 = icmp ne i32 %81, 0
  br i1 %cmp162, label %if.then.164, label %if.end.165

if.then.164:                                      ; preds = %if.end.160
  %82 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %82, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.165:                                       ; preds = %if.end.160
  %83 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call166 = call i32 @checkMatrixLMN(%struct.gs_context_state_s* %83, %struct.ref_s* %CIEdict) #7
  store i32 %call166, i32* %code, align 4, !tbaa !26
  %84 = load i32, i32* %code, align 4, !tbaa !26
  %cmp167 = icmp ne i32 %84, 0
  br i1 %cmp167, label %if.then.169, label %if.end.170

if.then.169:                                      ; preds = %if.end.165
  %85 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %85, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.170:                                       ; preds = %if.end.165
  %86 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call171 = call i32 @checkBlackPoint(%struct.gs_context_state_s* %86, %struct.ref_s* %CIEdict) #7
  store i32 %call171, i32* %code, align 4, !tbaa !26
  %87 = load i32, i32* %code, align 4, !tbaa !26
  %cmp172 = icmp ne i32 %87, 0
  br i1 %cmp172, label %if.then.174, label %if.end.175

if.then.174:                                      ; preds = %if.end.170
  %88 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %88, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.175:                                       ; preds = %if.end.170
  %89 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %89, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.175, %if.then.174, %if.then.169, %if.then.164, %if.then.159, %if.then.153, %if.then.145, %if.then.139, %if.then.118, %if.then.110, %if.then.100, %if.then.94, %if.then.74, %if.then.59, %if.then.52, %if.then.46, %if.then.28, %cond.end, %if.then.9, %if.then.5, %if.then
  %90 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %90) #1
  %91 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91) #1
  %92 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %93) #1
  %94 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 36, i8* %94) #1
  %95 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %95) #1
  %96 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %96) #1
  %97 = load i32, i32* %retval
  ret i32 %97
}

; Function Attrs: nounwind uwtable
define internal i32 @cieabcrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 6, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.14

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %21 = bitcast float* %20 to i8*
  %call13 = call i8* @memcpy(i8* %21, i8* bitcast ([8 x float]* @default_0_1 to i8*), i64 24) #8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @cieabcdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 6, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.14

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %21 = bitcast float* %20 to i8*
  %call13 = call i8* @memcpy(i8* %21, i8* bitcast ([8 x float]* @default_0_1 to i8*), i64 24) #8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @cieabcvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %4, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 -2
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %6, 3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp2 = icmp eq i32 %conv, 11
  br i1 %cmp2, label %if.end.11, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs5 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %11 = bitcast i16* %type_attrs5 to i8*
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx6, align 1, !tbaa !54
  %conv7 = zext i8 %12 to i32
  %cmp8 = icmp eq i32 %conv7, 16
  br i1 %cmp8, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %land.lhs.true, %for.body
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.10, %if.then
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @cieabccompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %CIEdict1 = alloca %struct.ref_s, align 8
  %CIEdict2 = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call3 = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %CIEdict2) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call7 = call i32 @comparedictkey(%struct.gs_context_state_s* %13, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0)) #7
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call10 = call i32 @comparedictkey(%struct.gs_context_state_s* %14, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0)) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end.9
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call14 = call i32 @comparedictkey(%struct.gs_context_state_s* %15, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0)) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.13
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call18 = call i32 @comparedictkey(%struct.gs_context_state_s* %16, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0)) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.17
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call22 = call i32 @comparedictkey(%struct.gs_context_state_s* %17, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0)) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.21
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call26 = call i32 @comparedictkey(%struct.gs_context_state_s* %18, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0)) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.25
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call30 = call i32 @comparedictkey(%struct.gs_context_state_s* %19, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0)) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.29
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call34 = call i32 @comparedictkey(%struct.gs_context_state_s* %20, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0)) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.37:                                        ; preds = %if.end.33
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.37, %if.then.36, %if.then.32, %if.then.28, %if.then.24, %if.then.20, %if.then.16, %if.then.12, %if.then.8, %if.then.5, %if.then
  %21 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %21) #1
  %22 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %22) #1
  %23 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %24 = load i32, i32* %retval
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define internal i32 @setciedefspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %CIEDict = alloca %struct.ref_s, align 8
  %nocie = alloca %struct.ref_s*, align 8
  %dictkey = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %cc = alloca %struct.gs_client_color_s, align 8
  %i = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 2
  %5 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %5, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), %struct.ref_s** %nocie) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp sgt i32 %7, 0
  br i1 %cmp1, label %if.then.2, label %if.end.10

if.then.2:                                        ; preds = %if.end
  %8 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %9 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %10 to i32
  %cmp3 = icmp eq i32 %conv, 1
  br i1 %cmp3, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.then.2
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.then.2
  %11 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %12 = load i16, i16* %boolval, align 2, !tbaa !25
  %tobool = icmp ne i16 %12, 0
  br i1 %tobool, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.end.6
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %14 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %15 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %16 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  %call8 = call i32 @setrgbspace(%struct.gs_context_state_s* %13, %struct.ref_s* %14, i32* %15, i32* %16, i32 1) #7
  store i32 %call8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end
  %17 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %17, align 4, !tbaa !26
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %19 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %20 = bitcast %struct.gs_ref_memory_s* %19 to %struct.gs_memory_s*
  %21 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call11 = call i32 @array_get(%struct.gs_memory_s* %20, %struct.ref_s* %21, i64 1, %struct.ref_s* %CIEDict) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %22 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %22, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.10
  %23 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.10
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %25 = load i32, i32* %24, align 4, !tbaa !26
  %cmp16 = icmp sgt i32 %25, 0
  br i1 %cmp16, label %if.then.18, label %if.end.23

if.then.18:                                       ; preds = %if.end.15
  %26 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %26) #1
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.18
  %28 = load i32, i32* %i, align 4, !tbaa !26
  %cmp19 = icmp slt i32 %28, 3
  br i1 %cmp19, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %29 to i64
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx21, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 0
  %32 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call22 = call i32 @gs_setcolor(%struct.gs_state_s* %32, %struct.gs_client_color_s* %cc) #7
  store i32 %call22, i32* %code, align 4, !tbaa !26
  %33 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %33, align 4, !tbaa !26
  %34 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %35 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %36) #1
  br label %cleanup

if.end.23:                                        ; preds = %if.end.15
  %37 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %value24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 1
  %refs = bitcast %union.v* %value24 to %struct.ref_s**
  %38 = load %struct.ref_s*, %struct.ref_s** %refs, align 8, !tbaa !1
  %value25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i32 0, i32 1
  %saveid = bitcast %union.v* %value25 to i64*
  %39 = load i64, i64* %saveid, align 8, !tbaa !23
  store i64 %39, i64* %dictkey, align 8, !tbaa !23
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %41 = load i64, i64* %dictkey, align 8, !tbaa !23
  %call26 = call i32 @ciedefspace(%struct.gs_context_state_s* %40, %struct.ref_s* %CIEDict, i64 %41) #7
  store i32 %call26, i32* %code, align 4, !tbaa !26
  %42 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %42, align 4, !tbaa !26
  %43 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %44 = load i32, i32* %43, align 4, !tbaa !26
  %inc27 = add nsw i32 %44, 1
  store i32 %inc27, i32* %43, align 4, !tbaa !26
  %45 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %45, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.23, %for.end, %if.then.14, %if.then.7, %if.then.5, %if.then
  %46 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #1
  %47 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %48) #1
  %49 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @validateciedefspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca [6 x float], align 16
  %CIEdict = alloca %struct.ref_s, align 8
  %pref = alloca %struct.ref_s*, align 8
  %CIEspace = alloca %struct.ref_s*, align 8
  %tempref = alloca %struct.ref_s, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast [6 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 24, i8* %2) #1
  %3 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast %struct.ref_s** %pref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %7 = load %struct.ref_s*, %struct.ref_s** %6, align 8, !tbaa !1
  store %struct.ref_s* %7, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %8 = bitcast %struct.ref_s* %tempref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %9 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %9) #1
  %10 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %11 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %12 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %13 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %13, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %16 = bitcast %struct.gs_ref_memory_s* %15 to %struct.gs_memory_s*
  %17 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %16, %struct.ref_s* %17, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %18, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %20 = load i16, i16* %type_attrs12, align 2, !tbaa !22
  %conv13 = zext i16 %20 to i32
  %and14 = and i32 %conv13, 16160
  %cmp15 = icmp eq i32 %and14, 544
  br i1 %cmp15, label %if.end.24, label %if.then.17

if.then.17:                                       ; preds = %if.end.10
  %tas18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs19 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas18, i32 0, i32 0
  %21 = bitcast i16* %type_attrs19 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 1
  %22 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv20 = zext i8 %22 to i32
  %cmp21 = icmp eq i32 %conv20, 2
  br i1 %cmp21, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then.17
  %call23 = call i32 @check_type_failed(%struct.ref_s* %CIEdict) #7
  br label %cond.end

cond.false:                                       ; preds = %if.then.17
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call23, %cond.true ], [ -7, %cond.false ]
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.10
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %24 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %call25 = call i32 @validatecieabcspace(%struct.gs_context_state_s* %23, %struct.ref_s** %24) #7
  store i32 %call25, i32* %code, align 4, !tbaa !26
  %25 = load i32, i32* %code, align 4, !tbaa !26
  %cmp26 = icmp ne i32 %25, 0
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.24
  %26 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %26, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.24
  store %struct.ref_s* %tempref, %struct.ref_s** %pref, align 8, !tbaa !1
  %call30 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call30, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp31 = icmp sgt i32 %27, 0
  br i1 %cmp31, label %if.then.33, label %if.else

if.then.33:                                       ; preds = %if.end.29
  %28 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas34 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 0, i32 0
  %type_attrs35 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas34, i32 0, i32 0
  %29 = load i16, i16* %type_attrs35, align 2, !tbaa !22
  %conv36 = zext i16 %29 to i32
  %and37 = and i32 %conv36, 15360
  %cmp38 = icmp eq i32 %and37, 1024
  br i1 %cmp38, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.then.33
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.then.33
  %30 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i32 0, i32 0
  %rsize43 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas42, i32 0, i32 2
  %31 = load i32, i32* %rsize43, align 4, !tbaa !5
  %cmp44 = icmp ne i32 %31, 4
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.41
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %if.end.41
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory48 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 1
  %current49 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory48, i32 0, i32 0
  %33 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current49, align 8, !tbaa !55
  %34 = bitcast %struct.gs_ref_memory_s* %33 to %struct.gs_memory_s*
  %35 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i32 0
  %call50 = call i32 @get_cie_param_array(%struct.gs_memory_s* %34, %struct.ref_s* %35, i32 3, float* %arraydecay) #7
  store i32 %call50, i32* %code, align 4, !tbaa !26
  %36 = load i32, i32* %code, align 4, !tbaa !26
  %cmp51 = icmp slt i32 %36, 0
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.47
  %37 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %37, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %if.end.47
  %arrayidx55 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 0
  %38 = load float, float* %arrayidx55, align 4, !tbaa !20
  %cmp56 = fcmp ole float %38, 1.000000e+00
  br i1 %cmp56, label %if.then.65, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.54
  %arrayidx58 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 1
  %39 = load float, float* %arrayidx58, align 4, !tbaa !20
  %cmp59 = fcmp ole float %39, 1.000000e+00
  br i1 %cmp59, label %if.then.65, label %lor.lhs.false.61

lor.lhs.false.61:                                 ; preds = %lor.lhs.false
  %arrayidx62 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 2
  %40 = load float, float* %arrayidx62, align 4, !tbaa !20
  %cmp63 = fcmp ole float %40, 1.000000e+00
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %lor.lhs.false.61, %lor.lhs.false, %if.end.54
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.66:                                        ; preds = %lor.lhs.false.61
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 1
  %current68 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory67, i32 0, i32 0
  %42 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current68, align 8, !tbaa !55
  %43 = bitcast %struct.gs_ref_memory_s* %42 to %struct.gs_memory_s*
  %44 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %call69 = call i32 @array_get(%struct.gs_memory_s* %43, %struct.ref_s* %44, i64 3, %struct.ref_s* %valref) #7
  store i32 %call69, i32* %code, align 4, !tbaa !26
  %45 = load i32, i32* %code, align 4, !tbaa !26
  %cmp70 = icmp slt i32 %45, 0
  br i1 %cmp70, label %if.then.72, label %if.end.73

if.then.72:                                       ; preds = %if.end.66
  %46 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %46, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.73:                                        ; preds = %if.end.66
  %tas74 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs75 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas74, i32 0, i32 0
  %47 = load i16, i16* %type_attrs75, align 2, !tbaa !22
  %conv76 = zext i16 %47 to i32
  %and77 = and i32 %conv76, 15360
  %cmp78 = icmp eq i32 %and77, 1024
  br i1 %cmp78, label %if.end.81, label %if.then.80

if.then.80:                                       ; preds = %if.end.73
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.81:                                        ; preds = %if.end.73
  %tas82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %rsize83 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas82, i32 0, i32 2
  %48 = load i32, i32* %rsize83, align 4, !tbaa !5
  %conv84 = uitofp i32 %48 to float
  %arrayidx85 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 0
  %49 = load float, float* %arrayidx85, align 4, !tbaa !20
  %cmp86 = fcmp une float %conv84, %49
  br i1 %cmp86, label %if.then.88, label %if.end.89

if.then.88:                                       ; preds = %if.end.81
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.89:                                        ; preds = %if.end.81
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.89
  %50 = load i32, i32* %i, align 4, !tbaa !26
  %conv90 = sitofp i32 %50 to float
  %arrayidx91 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 0
  %51 = load float, float* %arrayidx91, align 4, !tbaa !20
  %cmp92 = fcmp olt float %conv90, %51
  br i1 %cmp92, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory94 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 1
  %current95 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory94, i32 0, i32 0
  %53 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current95, align 8, !tbaa !55
  %54 = bitcast %struct.gs_ref_memory_s* %53 to %struct.gs_memory_s*
  %55 = load i32, i32* %i, align 4, !tbaa !26
  %conv96 = sext i32 %55 to i64
  %call97 = call i32 @array_get(%struct.gs_memory_s* %54, %struct.ref_s* %valref, i64 %conv96, %struct.ref_s* %tempref) #7
  store i32 %call97, i32* %code, align 4, !tbaa !26
  %56 = load i32, i32* %code, align 4, !tbaa !26
  %cmp98 = icmp slt i32 %56, 0
  br i1 %cmp98, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %for.body
  %57 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %57, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.101:                                       ; preds = %for.body
  %tas102 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tempref, i32 0, i32 0
  %type_attrs103 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas102, i32 0, i32 0
  %58 = bitcast i16* %type_attrs103 to i8*
  %arrayidx104 = getelementptr inbounds i8, i8* %58, i64 1
  %59 = load i8, i8* %arrayidx104, align 1, !tbaa !54
  %conv105 = zext i8 %59 to i32
  %cmp106 = icmp eq i32 %conv105, 18
  br i1 %cmp106, label %if.end.109, label %if.then.108

if.then.108:                                      ; preds = %if.end.101
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.109:                                       ; preds = %if.end.101
  %tas110 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tempref, i32 0, i32 0
  %rsize111 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas110, i32 0, i32 2
  %60 = load i32, i32* %rsize111, align 4, !tbaa !5
  %conv112 = uitofp i32 %60 to float
  %arrayidx113 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 1
  %61 = load float, float* %arrayidx113, align 4, !tbaa !20
  %mul = fmul float 3.000000e+00, %61
  %arrayidx114 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 2
  %62 = load float, float* %arrayidx114, align 4, !tbaa !20
  %mul115 = fmul float %mul, %62
  %cmp116 = fcmp une float %conv112, %mul115
  br i1 %cmp116, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %if.end.109
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.119:                                       ; preds = %if.end.109
  br label %for.inc

for.inc:                                          ; preds = %if.end.119
  %63 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %63, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.120

if.else:                                          ; preds = %if.end.29
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.120:                                       ; preds = %for.end
  %call121 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call121, i32* %code, align 4, !tbaa !26
  %64 = load i32, i32* %code, align 4, !tbaa !26
  %cmp122 = icmp sgt i32 %64, 0
  br i1 %cmp122, label %land.lhs.true, label %if.end.169

land.lhs.true:                                    ; preds = %if.end.120
  %tas124 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tempref, i32 0, i32 0
  %type_attrs125 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas124, i32 0, i32 0
  %65 = bitcast i16* %type_attrs125 to i8*
  %arrayidx126 = getelementptr inbounds i8, i8* %65, i64 1
  %66 = load i8, i8* %arrayidx126, align 1, !tbaa !54
  %conv127 = zext i8 %66 to i32
  %cmp128 = icmp eq i32 %conv127, 14
  br i1 %cmp128, label %if.end.169, label %if.then.130

if.then.130:                                      ; preds = %land.lhs.true
  %67 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas131 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %67, i32 0, i32 0
  %type_attrs132 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas131, i32 0, i32 0
  %68 = load i16, i16* %type_attrs132, align 2, !tbaa !22
  %conv133 = zext i16 %68 to i32
  %and134 = and i32 %conv133, 15360
  %cmp135 = icmp eq i32 %and134, 1024
  br i1 %cmp135, label %if.end.138, label %if.then.137

if.then.137:                                      ; preds = %if.then.130
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.138:                                       ; preds = %if.then.130
  %69 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas139 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %69, i32 0, i32 0
  %rsize140 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas139, i32 0, i32 2
  %70 = load i32, i32* %rsize140, align 4, !tbaa !5
  %cmp141 = icmp ne i32 %70, 6
  br i1 %cmp141, label %if.then.143, label %if.end.144

if.then.143:                                      ; preds = %if.end.138
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.144:                                       ; preds = %if.end.138
  %71 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory145 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %71, i32 0, i32 1
  %current146 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory145, i32 0, i32 0
  %72 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current146, align 8, !tbaa !55
  %73 = bitcast %struct.gs_ref_memory_s* %72 to %struct.gs_memory_s*
  %74 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %arraydecay147 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i32 0
  %call148 = call i32 @get_cie_param_array(%struct.gs_memory_s* %73, %struct.ref_s* %74, i32 6, float* %arraydecay147) #7
  store i32 %call148, i32* %code, align 4, !tbaa !26
  %75 = load i32, i32* %code, align 4, !tbaa !26
  %cmp149 = icmp slt i32 %75, 0
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.end.144
  %76 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %76, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.152:                                       ; preds = %if.end.144
  %arrayidx153 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 1
  %77 = load float, float* %arrayidx153, align 4, !tbaa !20
  %arrayidx154 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 0
  %78 = load float, float* %arrayidx154, align 4, !tbaa !20
  %cmp155 = fcmp olt float %77, %78
  br i1 %cmp155, label %if.then.167, label %lor.lhs.false.157

lor.lhs.false.157:                                ; preds = %if.end.152
  %arrayidx158 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 3
  %79 = load float, float* %arrayidx158, align 4, !tbaa !20
  %arrayidx159 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 2
  %80 = load float, float* %arrayidx159, align 4, !tbaa !20
  %cmp160 = fcmp olt float %79, %80
  br i1 %cmp160, label %if.then.167, label %lor.lhs.false.162

lor.lhs.false.162:                                ; preds = %lor.lhs.false.157
  %arrayidx163 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 5
  %81 = load float, float* %arrayidx163, align 4, !tbaa !20
  %arrayidx164 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 4
  %82 = load float, float* %arrayidx164, align 4, !tbaa !20
  %cmp165 = fcmp olt float %81, %82
  br i1 %cmp165, label %if.then.167, label %if.end.168

if.then.167:                                      ; preds = %lor.lhs.false.162, %lor.lhs.false.157, %if.end.152
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.168:                                       ; preds = %lor.lhs.false.162
  br label %if.end.169

if.end.169:                                       ; preds = %if.end.168, %land.lhs.true, %if.end.120
  %call170 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call170, i32* %code, align 4, !tbaa !26
  %83 = load i32, i32* %code, align 4, !tbaa !26
  %cmp171 = icmp sgt i32 %83, 0
  br i1 %cmp171, label %land.lhs.true.173, label %if.end.219

land.lhs.true.173:                                ; preds = %if.end.169
  %84 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas174 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %84, i32 0, i32 0
  %type_attrs175 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas174, i32 0, i32 0
  %85 = bitcast i16* %type_attrs175 to i8*
  %arrayidx176 = getelementptr inbounds i8, i8* %85, i64 1
  %86 = load i8, i8* %arrayidx176, align 1, !tbaa !54
  %conv177 = zext i8 %86 to i32
  %cmp178 = icmp eq i32 %conv177, 14
  br i1 %cmp178, label %if.end.219, label %if.then.180

if.then.180:                                      ; preds = %land.lhs.true.173
  %87 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas181 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %87, i32 0, i32 0
  %type_attrs182 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas181, i32 0, i32 0
  %88 = load i16, i16* %type_attrs182, align 2, !tbaa !22
  %conv183 = zext i16 %88 to i32
  %and184 = and i32 %conv183, 15360
  %cmp185 = icmp eq i32 %and184, 1024
  br i1 %cmp185, label %if.end.188, label %if.then.187

if.then.187:                                      ; preds = %if.then.180
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.188:                                       ; preds = %if.then.180
  %89 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas189 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %89, i32 0, i32 0
  %rsize190 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas189, i32 0, i32 2
  %90 = load i32, i32* %rsize190, align 4, !tbaa !5
  %cmp191 = icmp ne i32 %90, 3
  br i1 %cmp191, label %if.then.193, label %if.end.194

if.then.193:                                      ; preds = %if.end.188
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.194:                                       ; preds = %if.end.188
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.195

for.cond.195:                                     ; preds = %for.inc.216, %if.end.194
  %91 = load i32, i32* %i, align 4, !tbaa !26
  %cmp196 = icmp slt i32 %91, 3
  br i1 %cmp196, label %for.body.198, label %for.end.218

for.body.198:                                     ; preds = %for.cond.195
  %92 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory199 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %92, i32 0, i32 1
  %current200 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory199, i32 0, i32 0
  %93 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current200, align 8, !tbaa !55
  %94 = bitcast %struct.gs_ref_memory_s* %93 to %struct.gs_memory_s*
  %95 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %96 = load i32, i32* %i, align 4, !tbaa !26
  %conv201 = sext i32 %96 to i64
  %call202 = call i32 @array_get(%struct.gs_memory_s* %94, %struct.ref_s* %95, i64 %conv201, %struct.ref_s* %valref) #7
  store i32 %call202, i32* %code, align 4, !tbaa !26
  %97 = load i32, i32* %code, align 4, !tbaa !26
  %cmp203 = icmp slt i32 %97, 0
  br i1 %cmp203, label %if.then.205, label %if.end.206

if.then.205:                                      ; preds = %for.body.198
  %98 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %98, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.206:                                       ; preds = %for.body.198
  br label %do.body

do.body:                                          ; preds = %if.end.206
  %tas207 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs208 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas207, i32 0, i32 0
  %99 = load i16, i16* %type_attrs208, align 2, !tbaa !22
  %conv209 = zext i16 %99 to i32
  %and210 = and i32 %conv209, 15552
  %cmp211 = icmp eq i32 %and210, 1216
  br i1 %cmp211, label %if.end.215, label %if.then.213

if.then.213:                                      ; preds = %do.body
  %call214 = call i32 @check_proc_failed(%struct.ref_s* %valref) #7
  store i32 %call214, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.215:                                       ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.215
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %for.inc.216

for.inc.216:                                      ; preds = %do.end
  %100 = load i32, i32* %i, align 4, !tbaa !26
  %inc217 = add nsw i32 %100, 1
  store i32 %inc217, i32* %i, align 4, !tbaa !26
  br label %for.cond.195

for.end.218:                                      ; preds = %for.cond.195
  br label %if.end.219

if.end.219:                                       ; preds = %for.end.218, %land.lhs.true.173, %if.end.169
  %call220 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call220, i32* %code, align 4, !tbaa !26
  %101 = load i32, i32* %code, align 4, !tbaa !26
  %cmp221 = icmp sgt i32 %101, 0
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.269

land.lhs.true.223:                                ; preds = %if.end.219
  %102 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas224 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %102, i32 0, i32 0
  %type_attrs225 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas224, i32 0, i32 0
  %103 = bitcast i16* %type_attrs225 to i8*
  %arrayidx226 = getelementptr inbounds i8, i8* %103, i64 1
  %104 = load i8, i8* %arrayidx226, align 1, !tbaa !54
  %conv227 = zext i8 %104 to i32
  %cmp228 = icmp eq i32 %conv227, 14
  br i1 %cmp228, label %if.end.269, label %if.then.230

if.then.230:                                      ; preds = %land.lhs.true.223
  %105 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas231 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %105, i32 0, i32 0
  %type_attrs232 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas231, i32 0, i32 0
  %106 = load i16, i16* %type_attrs232, align 2, !tbaa !22
  %conv233 = zext i16 %106 to i32
  %and234 = and i32 %conv233, 15360
  %cmp235 = icmp eq i32 %and234, 1024
  br i1 %cmp235, label %if.end.238, label %if.then.237

if.then.237:                                      ; preds = %if.then.230
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.238:                                       ; preds = %if.then.230
  %107 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas239 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %107, i32 0, i32 0
  %rsize240 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas239, i32 0, i32 2
  %108 = load i32, i32* %rsize240, align 4, !tbaa !5
  %cmp241 = icmp ne i32 %108, 6
  br i1 %cmp241, label %if.then.243, label %if.end.244

if.then.243:                                      ; preds = %if.end.238
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.244:                                       ; preds = %if.end.238
  %109 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory245 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %109, i32 0, i32 1
  %current246 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory245, i32 0, i32 0
  %110 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current246, align 8, !tbaa !55
  %111 = bitcast %struct.gs_ref_memory_s* %110 to %struct.gs_memory_s*
  %112 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %arraydecay247 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i32 0
  %call248 = call i32 @get_cie_param_array(%struct.gs_memory_s* %111, %struct.ref_s* %112, i32 6, float* %arraydecay247) #7
  store i32 %call248, i32* %code, align 4, !tbaa !26
  %113 = load i32, i32* %code, align 4, !tbaa !26
  %cmp249 = icmp slt i32 %113, 0
  br i1 %cmp249, label %if.then.251, label %if.end.252

if.then.251:                                      ; preds = %if.end.244
  %114 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %114, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.252:                                       ; preds = %if.end.244
  %arrayidx253 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 1
  %115 = load float, float* %arrayidx253, align 4, !tbaa !20
  %arrayidx254 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 0
  %116 = load float, float* %arrayidx254, align 4, !tbaa !20
  %cmp255 = fcmp olt float %115, %116
  br i1 %cmp255, label %if.then.267, label %lor.lhs.false.257

lor.lhs.false.257:                                ; preds = %if.end.252
  %arrayidx258 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 3
  %117 = load float, float* %arrayidx258, align 4, !tbaa !20
  %arrayidx259 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 2
  %118 = load float, float* %arrayidx259, align 4, !tbaa !20
  %cmp260 = fcmp olt float %117, %118
  br i1 %cmp260, label %if.then.267, label %lor.lhs.false.262

lor.lhs.false.262:                                ; preds = %lor.lhs.false.257
  %arrayidx263 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 5
  %119 = load float, float* %arrayidx263, align 4, !tbaa !20
  %arrayidx264 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 4
  %120 = load float, float* %arrayidx264, align 4, !tbaa !20
  %cmp265 = fcmp olt float %119, %120
  br i1 %cmp265, label %if.then.267, label %if.end.268

if.then.267:                                      ; preds = %lor.lhs.false.262, %lor.lhs.false.257, %if.end.252
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.268:                                       ; preds = %lor.lhs.false.262
  br label %if.end.269

if.end.269:                                       ; preds = %if.end.268, %land.lhs.true.223, %if.end.219
  %121 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %121, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.269, %if.then.267, %if.then.251, %if.then.243, %if.then.237, %if.then.213, %if.then.205, %if.then.193, %if.then.187, %if.then.167, %if.then.151, %if.then.143, %if.then.137, %if.else, %if.then.118, %if.then.108, %if.then.100, %if.then.88, %if.then.80, %if.then.72, %if.then.65, %if.then.53, %if.then.46, %if.then.40, %if.then.28, %cond.end, %if.then.9, %if.then.5, %if.then
  %122 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %122) #1
  %123 = bitcast %struct.ref_s* %tempref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %123) #1
  %124 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %124) #1
  %125 = bitcast %struct.ref_s** %pref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %126) #1
  %127 = bitcast [6 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 24, i8* %127) #1
  %128 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %128) #1
  %129 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %129) #1
  %130 = load i32, i32* %retval
  ret i32 %130
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 6, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.14

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %21 = bitcast float* %20 to i8*
  %call13 = call i8* @memcpy(i8* %21, i8* bitcast ([8 x float]* @default_0_1 to i8*), i64 24) #8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 6, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.14

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %21 = bitcast float* %20 to i8*
  %call13 = call i8* @memcpy(i8* %21, i8* bitcast ([8 x float]* @default_0_1 to i8*), i64 24) #8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %4, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 -2
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %6, 3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp2 = icmp eq i32 %conv, 11
  br i1 %cmp2, label %if.end.11, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs5 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %11 = bitcast i16* %type_attrs5 to i8*
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx6, align 1, !tbaa !54
  %conv7 = zext i8 %12 to i32
  %cmp8 = icmp eq i32 %conv7, 16
  br i1 %cmp8, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %land.lhs.true, %for.body
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.10, %if.then
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefcompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %CIEdict1 = alloca %struct.ref_s, align 8
  %CIEdict2 = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call3 = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %CIEdict2) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call7 = call i32 @comparedictkey(%struct.gs_context_state_s* %13, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0)) #7
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call10 = call i32 @comparedictkey(%struct.gs_context_state_s* %14, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0)) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end.9
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call14 = call i32 @comparedictkey(%struct.gs_context_state_s* %15, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0)) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.13
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call18 = call i32 @comparedictkey(%struct.gs_context_state_s* %16, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0)) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.17
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call22 = call i32 @comparedictkey(%struct.gs_context_state_s* %17, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0)) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.21
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call26 = call i32 @comparedictkey(%struct.gs_context_state_s* %18, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0)) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.25
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call30 = call i32 @comparedictkey(%struct.gs_context_state_s* %19, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0)) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.29
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call34 = call i32 @comparedictkey(%struct.gs_context_state_s* %20, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0)) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.37:                                        ; preds = %if.end.33
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call38 = call i32 @comparedictkey(%struct.gs_context_state_s* %21, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.69, i32 0, i32 0)) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.37
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.end.37
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call42 = call i32 @comparedictkey(%struct.gs_context_state_s* %22, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i32 0, i32 0)) #7
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.end.41
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.45:                                        ; preds = %if.end.41
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call46 = call i32 @comparedictkey(%struct.gs_context_state_s* %23, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i32 0, i32 0)) #7
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.end.49, label %if.then.48

if.then.48:                                       ; preds = %if.end.45
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %if.end.45
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call50 = call i32 @comparedictkey(%struct.gs_context_state_s* %24, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0)) #7
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %if.end.49
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.53:                                        ; preds = %if.end.49
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.53, %if.then.52, %if.then.48, %if.then.44, %if.then.40, %if.then.36, %if.then.32, %if.then.28, %if.then.24, %if.then.20, %if.then.16, %if.then.12, %if.then.8, %if.then.5, %if.then
  %25 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %25) #1
  %26 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %26) #1
  %27 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal i32 @setciedefgspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %CIEDict = alloca %struct.ref_s, align 8
  %nocie = alloca %struct.ref_s*, align 8
  %dictkey = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %cc = alloca %struct.gs_client_color_s, align 8
  %i = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 2
  %5 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %5, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), %struct.ref_s** %nocie) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp sgt i32 %7, 0
  br i1 %cmp1, label %if.then.2, label %if.end.10

if.then.2:                                        ; preds = %if.end
  %8 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %9 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %10 to i32
  %cmp3 = icmp eq i32 %conv, 1
  br i1 %cmp3, label %if.end.6, label %if.then.5

if.then.5:                                        ; preds = %if.then.2
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.then.2
  %11 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %12 = load i16, i16* %boolval, align 2, !tbaa !25
  %tobool = icmp ne i16 %12, 0
  br i1 %tobool, label %if.then.7, label %if.end.9

if.then.7:                                        ; preds = %if.end.6
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %14 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %15 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %16 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  %call8 = call i32 @setcmykspace(%struct.gs_context_state_s* %13, %struct.ref_s* %14, i32* %15, i32* %16, i32 1) #7
  store i32 %call8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %if.end
  %17 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %17, align 4, !tbaa !26
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %19 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %20 = bitcast %struct.gs_ref_memory_s* %19 to %struct.gs_memory_s*
  %21 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call11 = call i32 @array_get(%struct.gs_memory_s* %20, %struct.ref_s* %21, i64 1, %struct.ref_s* %CIEDict) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %22 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %22, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.10
  %23 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.10
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %25 = load i32, i32* %24, align 4, !tbaa !26
  %cmp16 = icmp sgt i32 %25, 0
  br i1 %cmp16, label %if.then.18, label %if.end.23

if.then.18:                                       ; preds = %if.end.15
  %26 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %26) #1
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.18
  %28 = load i32, i32* %i, align 4, !tbaa !26
  %cmp19 = icmp slt i32 %28, 4
  br i1 %cmp19, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %29 to i64
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx21, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 0
  %32 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call22 = call i32 @gs_setcolor(%struct.gs_state_s* %32, %struct.gs_client_color_s* %cc) #7
  store i32 %call22, i32* %code, align 4, !tbaa !26
  %33 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %33, align 4, !tbaa !26
  %34 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %35 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %36) #1
  br label %cleanup

if.end.23:                                        ; preds = %if.end.15
  %37 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %value24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 1
  %refs = bitcast %union.v* %value24 to %struct.ref_s**
  %38 = load %struct.ref_s*, %struct.ref_s** %refs, align 8, !tbaa !1
  %value25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i32 0, i32 1
  %saveid = bitcast %union.v* %value25 to i64*
  %39 = load i64, i64* %saveid, align 8, !tbaa !23
  store i64 %39, i64* %dictkey, align 8, !tbaa !23
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %41 = load i64, i64* %dictkey, align 8, !tbaa !23
  %call26 = call i32 @ciedefgspace(%struct.gs_context_state_s* %40, %struct.ref_s* %CIEDict, i64 %41) #7
  store i32 %call26, i32* %code, align 4, !tbaa !26
  %42 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %42, align 4, !tbaa !26
  %43 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %44 = load i32, i32* %43, align 4, !tbaa !26
  %inc27 = add nsw i32 %44, 1
  store i32 %inc27, i32* %43, align 4, !tbaa !26
  %45 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %45, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.23, %for.end, %if.then.14, %if.then.7, %if.then.5, %if.then
  %46 = bitcast i64* %dictkey to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #1
  %47 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = bitcast %struct.ref_s* %CIEDict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %48) #1
  %49 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @validateciedefgspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %value = alloca [8 x float], align 16
  %CIEdict = alloca %struct.ref_s, align 8
  %CIEspace = alloca %struct.ref_s*, align 8
  %tempref = alloca %struct.ref_s, align 8
  %arrayref = alloca %struct.ref_s, align 8
  %valref = alloca %struct.ref_s, align 8
  %pref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast [8 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 32, i8* %3) #1
  %4 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %7 = load %struct.ref_s*, %struct.ref_s** %6, align 8, !tbaa !1
  store %struct.ref_s* %7, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %8 = bitcast %struct.ref_s* %tempref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %9 = bitcast %struct.ref_s* %arrayref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %9) #1
  %10 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #1
  %11 = bitcast %struct.ref_s** %pref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  store %struct.ref_s* %tempref, %struct.ref_s** %pref, align 8, !tbaa !1
  %12 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %13 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %13 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %14, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %15 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %15, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %18 = bitcast %struct.gs_ref_memory_s* %17 to %struct.gs_memory_s*
  %19 = load %struct.ref_s*, %struct.ref_s** %CIEspace, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %18, %struct.ref_s* %19, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %20 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %20, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %21 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %22 = load i16, i16* %type_attrs12, align 2, !tbaa !22
  %conv13 = zext i16 %22 to i32
  %and14 = and i32 %conv13, 16160
  %cmp15 = icmp eq i32 %and14, 544
  br i1 %cmp15, label %if.end.24, label %if.then.17

if.then.17:                                       ; preds = %if.end.10
  %tas18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %CIEdict, i32 0, i32 0
  %type_attrs19 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas18, i32 0, i32 0
  %23 = bitcast i16* %type_attrs19 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 1
  %24 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv20 = zext i8 %24 to i32
  %cmp21 = icmp eq i32 %conv20, 2
  br i1 %cmp21, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.then.17
  %call23 = call i32 @check_type_failed(%struct.ref_s* %CIEdict) #7
  br label %cond.end

cond.false:                                       ; preds = %if.then.17
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call23, %cond.true ], [ -7, %cond.false ]
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.10
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %26 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %call25 = call i32 @validatecieabcspace(%struct.gs_context_state_s* %25, %struct.ref_s** %26) #7
  store i32 %call25, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp26 = icmp ne i32 %27, 0
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.24
  %28 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.24
  %call30 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call30, i32* %code, align 4, !tbaa !26
  %29 = load i32, i32* %code, align 4, !tbaa !26
  %cmp31 = icmp sgt i32 %29, 0
  br i1 %cmp31, label %if.then.33, label %if.else.160

if.then.33:                                       ; preds = %if.end.29
  %30 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas34 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i32 0, i32 0
  %type_attrs35 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas34, i32 0, i32 0
  %31 = load i16, i16* %type_attrs35, align 2, !tbaa !22
  %conv36 = zext i16 %31 to i32
  %and37 = and i32 %conv36, 15360
  %cmp38 = icmp eq i32 %and37, 1024
  br i1 %cmp38, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.then.33
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.then.33
  %32 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 0, i32 0
  %rsize43 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas42, i32 0, i32 2
  %33 = load i32, i32* %rsize43, align 4, !tbaa !5
  %cmp44 = icmp ne i32 %33, 5
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.41
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %if.end.41
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.47
  %34 = load i32, i32* %i, align 4, !tbaa !26
  %cmp48 = icmp slt i32 %34, 4
  br i1 %cmp48, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory50 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 1
  %current51 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory50, i32 0, i32 0
  %36 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current51, align 8, !tbaa !55
  %37 = bitcast %struct.gs_ref_memory_s* %36 to %struct.gs_memory_s*
  %38 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %conv52 = sext i32 %39 to i64
  %call53 = call i32 @array_get(%struct.gs_memory_s* %37, %struct.ref_s* %38, i64 %conv52, %struct.ref_s* %valref) #7
  store i32 %call53, i32* %code, align 4, !tbaa !26
  %40 = load i32, i32* %code, align 4, !tbaa !26
  %cmp54 = icmp slt i32 %40, 0
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %for.body
  %41 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %41, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.57:                                        ; preds = %for.body
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  %42 = bitcast i16* %type_attrs59 to i8*
  %arrayidx60 = getelementptr inbounds i8, i8* %42, i64 1
  %43 = load i8, i8* %arrayidx60, align 1, !tbaa !54
  %conv61 = zext i8 %43 to i32
  %cmp62 = icmp eq i32 %conv61, 11
  br i1 %cmp62, label %if.then.64, label %if.else

if.then.64:                                       ; preds = %if.end.57
  %value65 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval = bitcast %union.v* %value65 to i64*
  %44 = load i64, i64* %intval, align 8, !tbaa !23
  %conv66 = sitofp i64 %44 to float
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 %idxprom
  store float %conv66, float* %arrayidx67, align 4, !tbaa !20
  br label %if.end.68

if.else:                                          ; preds = %if.end.57
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.68:                                        ; preds = %if.then.64
  br label %for.inc

for.inc:                                          ; preds = %if.end.68
  %46 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %46, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arrayidx69 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 0
  %47 = load float, float* %arrayidx69, align 4, !tbaa !20
  %cmp70 = fcmp ole float %47, 1.000000e+00
  br i1 %cmp70, label %if.then.83, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx72 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 1
  %48 = load float, float* %arrayidx72, align 4, !tbaa !20
  %cmp73 = fcmp ole float %48, 1.000000e+00
  br i1 %cmp73, label %if.then.83, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %lor.lhs.false
  %arrayidx76 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 2
  %49 = load float, float* %arrayidx76, align 4, !tbaa !20
  %cmp77 = fcmp ole float %49, 1.000000e+00
  br i1 %cmp77, label %if.then.83, label %lor.lhs.false.79

lor.lhs.false.79:                                 ; preds = %lor.lhs.false.75
  %arrayidx80 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 3
  %50 = load float, float* %arrayidx80, align 4, !tbaa !20
  %cmp81 = fcmp ole float %50, 1.000000e+00
  br i1 %cmp81, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %lor.lhs.false.79, %lor.lhs.false.75, %lor.lhs.false, %for.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.84:                                        ; preds = %lor.lhs.false.79
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory85 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 1
  %current86 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory85, i32 0, i32 0
  %52 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current86, align 8, !tbaa !55
  %53 = bitcast %struct.gs_ref_memory_s* %52 to %struct.gs_memory_s*
  %54 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %call87 = call i32 @array_get(%struct.gs_memory_s* %53, %struct.ref_s* %54, i64 4, %struct.ref_s* %arrayref) #7
  store i32 %call87, i32* %code, align 4, !tbaa !26
  %55 = load i32, i32* %code, align 4, !tbaa !26
  %cmp88 = icmp slt i32 %55, 0
  br i1 %cmp88, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %if.end.84
  %56 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %56, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.91:                                        ; preds = %if.end.84
  %tas92 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayref, i32 0, i32 0
  %type_attrs93 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas92, i32 0, i32 0
  %57 = load i16, i16* %type_attrs93, align 2, !tbaa !22
  %conv94 = zext i16 %57 to i32
  %and95 = and i32 %conv94, 15360
  %cmp96 = icmp eq i32 %and95, 1024
  br i1 %cmp96, label %if.end.99, label %if.then.98

if.then.98:                                       ; preds = %if.end.91
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.99:                                        ; preds = %if.end.91
  %tas100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayref, i32 0, i32 0
  %rsize101 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas100, i32 0, i32 2
  %58 = load i32, i32* %rsize101, align 4, !tbaa !5
  %conv102 = uitofp i32 %58 to float
  %arrayidx103 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 0
  %59 = load float, float* %arrayidx103, align 4, !tbaa !20
  %cmp104 = fcmp une float %conv102, %59
  br i1 %cmp104, label %if.then.106, label %if.end.107

if.then.106:                                      ; preds = %if.end.99
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.107:                                       ; preds = %if.end.99
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.108

for.cond.108:                                     ; preds = %for.inc.157, %if.end.107
  %60 = load i32, i32* %i, align 4, !tbaa !26
  %conv109 = sitofp i32 %60 to float
  %arrayidx110 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 0
  %61 = load float, float* %arrayidx110, align 4, !tbaa !20
  %cmp111 = fcmp olt float %conv109, %61
  br i1 %cmp111, label %for.body.113, label %for.end.159

for.body.113:                                     ; preds = %for.cond.108
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory114 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 1
  %current115 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory114, i32 0, i32 0
  %63 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current115, align 8, !tbaa !55
  %64 = bitcast %struct.gs_ref_memory_s* %63 to %struct.gs_memory_s*
  %65 = load i32, i32* %i, align 4, !tbaa !26
  %conv116 = sext i32 %65 to i64
  %call117 = call i32 @array_get(%struct.gs_memory_s* %64, %struct.ref_s* %arrayref, i64 %conv116, %struct.ref_s* %tempref) #7
  store i32 %call117, i32* %code, align 4, !tbaa !26
  %66 = load i32, i32* %code, align 4, !tbaa !26
  %cmp118 = icmp slt i32 %66, 0
  br i1 %cmp118, label %if.then.120, label %if.end.121

if.then.120:                                      ; preds = %for.body.113
  %67 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %67, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.121:                                       ; preds = %for.body.113
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.122

for.cond.122:                                     ; preds = %for.inc.154, %if.end.121
  %68 = load i32, i32* %j, align 4, !tbaa !26
  %conv123 = sitofp i32 %68 to float
  %arrayidx124 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 1
  %69 = load float, float* %arrayidx124, align 4, !tbaa !20
  %cmp125 = fcmp olt float %conv123, %69
  br i1 %cmp125, label %for.body.127, label %for.end.156

for.body.127:                                     ; preds = %for.cond.122
  %70 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory128 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %70, i32 0, i32 1
  %current129 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory128, i32 0, i32 0
  %71 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current129, align 8, !tbaa !55
  %72 = bitcast %struct.gs_ref_memory_s* %71 to %struct.gs_memory_s*
  %73 = load i32, i32* %i, align 4, !tbaa !26
  %conv130 = sext i32 %73 to i64
  %call131 = call i32 @array_get(%struct.gs_memory_s* %72, %struct.ref_s* %tempref, i64 %conv130, %struct.ref_s* %valref) #7
  store i32 %call131, i32* %code, align 4, !tbaa !26
  %74 = load i32, i32* %code, align 4, !tbaa !26
  %cmp132 = icmp slt i32 %74, 0
  br i1 %cmp132, label %if.then.134, label %if.end.135

if.then.134:                                      ; preds = %for.body.127
  %75 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %75, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.135:                                       ; preds = %for.body.127
  %tas136 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs137 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas136, i32 0, i32 0
  %76 = bitcast i16* %type_attrs137 to i8*
  %arrayidx138 = getelementptr inbounds i8, i8* %76, i64 1
  %77 = load i8, i8* %arrayidx138, align 1, !tbaa !54
  %conv139 = zext i8 %77 to i32
  %cmp140 = icmp eq i32 %conv139, 18
  br i1 %cmp140, label %if.end.143, label %if.then.142

if.then.142:                                      ; preds = %if.end.135
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.143:                                       ; preds = %if.end.135
  %tas144 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %rsize145 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas144, i32 0, i32 2
  %78 = load i32, i32* %rsize145, align 4, !tbaa !5
  %conv146 = uitofp i32 %78 to float
  %arrayidx147 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 2
  %79 = load float, float* %arrayidx147, align 4, !tbaa !20
  %mul = fmul float 3.000000e+00, %79
  %arrayidx148 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 3
  %80 = load float, float* %arrayidx148, align 4, !tbaa !20
  %mul149 = fmul float %mul, %80
  %cmp150 = fcmp une float %conv146, %mul149
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %if.end.143
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.153:                                       ; preds = %if.end.143
  br label %for.inc.154

for.inc.154:                                      ; preds = %if.end.153
  %81 = load i32, i32* %j, align 4, !tbaa !26
  %inc155 = add nsw i32 %81, 1
  store i32 %inc155, i32* %j, align 4, !tbaa !26
  br label %for.cond.122

for.end.156:                                      ; preds = %for.cond.122
  br label %for.inc.157

for.inc.157:                                      ; preds = %for.end.156
  %82 = load i32, i32* %i, align 4, !tbaa !26
  %inc158 = add nsw i32 %82, 1
  store i32 %inc158, i32* %i, align 4, !tbaa !26
  br label %for.cond.108

for.end.159:                                      ; preds = %for.cond.108
  br label %if.end.161

if.else.160:                                      ; preds = %if.end.29
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.161:                                       ; preds = %for.end.159
  %call162 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call162, i32* %code, align 4, !tbaa !26
  %83 = load i32, i32* %code, align 4, !tbaa !26
  %cmp163 = icmp sgt i32 %83, 0
  br i1 %cmp163, label %land.lhs.true, label %if.end.214

land.lhs.true:                                    ; preds = %if.end.161
  %84 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas165 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %84, i32 0, i32 0
  %type_attrs166 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas165, i32 0, i32 0
  %85 = bitcast i16* %type_attrs166 to i8*
  %arrayidx167 = getelementptr inbounds i8, i8* %85, i64 1
  %86 = load i8, i8* %arrayidx167, align 1, !tbaa !54
  %conv168 = zext i8 %86 to i32
  %cmp169 = icmp eq i32 %conv168, 14
  br i1 %cmp169, label %if.end.214, label %if.then.171

if.then.171:                                      ; preds = %land.lhs.true
  %87 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas172 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %87, i32 0, i32 0
  %type_attrs173 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas172, i32 0, i32 0
  %88 = load i16, i16* %type_attrs173, align 2, !tbaa !22
  %conv174 = zext i16 %88 to i32
  %and175 = and i32 %conv174, 15360
  %cmp176 = icmp eq i32 %and175, 1024
  br i1 %cmp176, label %if.end.179, label %if.then.178

if.then.178:                                      ; preds = %if.then.171
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.179:                                       ; preds = %if.then.171
  %89 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas180 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %89, i32 0, i32 0
  %rsize181 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas180, i32 0, i32 2
  %90 = load i32, i32* %rsize181, align 4, !tbaa !5
  %cmp182 = icmp ne i32 %90, 8
  br i1 %cmp182, label %if.then.184, label %if.end.185

if.then.184:                                      ; preds = %if.end.179
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.185:                                       ; preds = %if.end.179
  %91 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory186 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %91, i32 0, i32 1
  %current187 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory186, i32 0, i32 0
  %92 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current187, align 8, !tbaa !55
  %93 = bitcast %struct.gs_ref_memory_s* %92 to %struct.gs_memory_s*
  %94 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i32 0
  %call188 = call i32 @get_cie_param_array(%struct.gs_memory_s* %93, %struct.ref_s* %94, i32 8, float* %arraydecay) #7
  store i32 %call188, i32* %code, align 4, !tbaa !26
  %95 = load i32, i32* %code, align 4, !tbaa !26
  %cmp189 = icmp slt i32 %95, 0
  br i1 %cmp189, label %if.then.191, label %if.end.192

if.then.191:                                      ; preds = %if.end.185
  %96 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %96, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.192:                                       ; preds = %if.end.185
  %arrayidx193 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 1
  %97 = load float, float* %arrayidx193, align 4, !tbaa !20
  %arrayidx194 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 0
  %98 = load float, float* %arrayidx194, align 4, !tbaa !20
  %cmp195 = fcmp olt float %97, %98
  br i1 %cmp195, label %if.then.212, label %lor.lhs.false.197

lor.lhs.false.197:                                ; preds = %if.end.192
  %arrayidx198 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 3
  %99 = load float, float* %arrayidx198, align 4, !tbaa !20
  %arrayidx199 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 2
  %100 = load float, float* %arrayidx199, align 4, !tbaa !20
  %cmp200 = fcmp olt float %99, %100
  br i1 %cmp200, label %if.then.212, label %lor.lhs.false.202

lor.lhs.false.202:                                ; preds = %lor.lhs.false.197
  %arrayidx203 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 5
  %101 = load float, float* %arrayidx203, align 4, !tbaa !20
  %arrayidx204 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 4
  %102 = load float, float* %arrayidx204, align 4, !tbaa !20
  %cmp205 = fcmp olt float %101, %102
  br i1 %cmp205, label %if.then.212, label %lor.lhs.false.207

lor.lhs.false.207:                                ; preds = %lor.lhs.false.202
  %arrayidx208 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 7
  %103 = load float, float* %arrayidx208, align 4, !tbaa !20
  %arrayidx209 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 6
  %104 = load float, float* %arrayidx209, align 4, !tbaa !20
  %cmp210 = fcmp olt float %103, %104
  br i1 %cmp210, label %if.then.212, label %if.end.213

if.then.212:                                      ; preds = %lor.lhs.false.207, %lor.lhs.false.202, %lor.lhs.false.197, %if.end.192
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.213:                                       ; preds = %lor.lhs.false.207
  br label %if.end.214

if.end.214:                                       ; preds = %if.end.213, %land.lhs.true, %if.end.161
  %call215 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call215, i32* %code, align 4, !tbaa !26
  %105 = load i32, i32* %code, align 4, !tbaa !26
  %cmp216 = icmp sgt i32 %105, 0
  br i1 %cmp216, label %land.lhs.true.218, label %if.end.264

land.lhs.true.218:                                ; preds = %if.end.214
  %106 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas219 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %106, i32 0, i32 0
  %type_attrs220 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas219, i32 0, i32 0
  %107 = bitcast i16* %type_attrs220 to i8*
  %arrayidx221 = getelementptr inbounds i8, i8* %107, i64 1
  %108 = load i8, i8* %arrayidx221, align 1, !tbaa !54
  %conv222 = zext i8 %108 to i32
  %cmp223 = icmp eq i32 %conv222, 14
  br i1 %cmp223, label %if.end.264, label %if.then.225

if.then.225:                                      ; preds = %land.lhs.true.218
  %109 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas226 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %109, i32 0, i32 0
  %type_attrs227 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas226, i32 0, i32 0
  %110 = load i16, i16* %type_attrs227, align 2, !tbaa !22
  %conv228 = zext i16 %110 to i32
  %and229 = and i32 %conv228, 15360
  %cmp230 = icmp eq i32 %and229, 1024
  br i1 %cmp230, label %if.end.233, label %if.then.232

if.then.232:                                      ; preds = %if.then.225
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.233:                                       ; preds = %if.then.225
  %111 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas234 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %111, i32 0, i32 0
  %rsize235 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas234, i32 0, i32 2
  %112 = load i32, i32* %rsize235, align 4, !tbaa !5
  %cmp236 = icmp ne i32 %112, 4
  br i1 %cmp236, label %if.then.238, label %if.end.239

if.then.238:                                      ; preds = %if.end.233
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.239:                                       ; preds = %if.end.233
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.240

for.cond.240:                                     ; preds = %for.inc.261, %if.end.239
  %113 = load i32, i32* %i, align 4, !tbaa !26
  %cmp241 = icmp slt i32 %113, 4
  br i1 %cmp241, label %for.body.243, label %for.end.263

for.body.243:                                     ; preds = %for.cond.240
  %114 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory244 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %114, i32 0, i32 1
  %current245 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory244, i32 0, i32 0
  %115 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current245, align 8, !tbaa !55
  %116 = bitcast %struct.gs_ref_memory_s* %115 to %struct.gs_memory_s*
  %117 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %118 = load i32, i32* %i, align 4, !tbaa !26
  %conv246 = sext i32 %118 to i64
  %call247 = call i32 @array_get(%struct.gs_memory_s* %116, %struct.ref_s* %117, i64 %conv246, %struct.ref_s* %valref) #7
  store i32 %call247, i32* %code, align 4, !tbaa !26
  %119 = load i32, i32* %code, align 4, !tbaa !26
  %cmp248 = icmp slt i32 %119, 0
  br i1 %cmp248, label %if.then.250, label %if.end.251

if.then.250:                                      ; preds = %for.body.243
  %120 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %120, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.251:                                       ; preds = %for.body.243
  br label %do.body

do.body:                                          ; preds = %if.end.251
  %tas252 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs253 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas252, i32 0, i32 0
  %121 = load i16, i16* %type_attrs253, align 2, !tbaa !22
  %conv254 = zext i16 %121 to i32
  %and255 = and i32 %conv254, 15552
  %cmp256 = icmp eq i32 %and255, 1216
  br i1 %cmp256, label %if.end.260, label %if.then.258

if.then.258:                                      ; preds = %do.body
  %call259 = call i32 @check_proc_failed(%struct.ref_s* %valref) #7
  store i32 %call259, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.260:                                       ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.260
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %for.inc.261

for.inc.261:                                      ; preds = %do.end
  %122 = load i32, i32* %i, align 4, !tbaa !26
  %inc262 = add nsw i32 %122, 1
  store i32 %inc262, i32* %i, align 4, !tbaa !26
  br label %for.cond.240

for.end.263:                                      ; preds = %for.cond.240
  br label %if.end.264

if.end.264:                                       ; preds = %for.end.263, %land.lhs.true.218, %if.end.214
  %call265 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0), %struct.ref_s** %pref) #7
  store i32 %call265, i32* %code, align 4, !tbaa !26
  %123 = load i32, i32* %code, align 4, !tbaa !26
  %cmp266 = icmp sgt i32 %123, 0
  br i1 %cmp266, label %land.lhs.true.268, label %if.end.319

land.lhs.true.268:                                ; preds = %if.end.264
  %124 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas269 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %124, i32 0, i32 0
  %type_attrs270 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas269, i32 0, i32 0
  %125 = bitcast i16* %type_attrs270 to i8*
  %arrayidx271 = getelementptr inbounds i8, i8* %125, i64 1
  %126 = load i8, i8* %arrayidx271, align 1, !tbaa !54
  %conv272 = zext i8 %126 to i32
  %cmp273 = icmp eq i32 %conv272, 14
  br i1 %cmp273, label %if.end.319, label %if.then.275

if.then.275:                                      ; preds = %land.lhs.true.268
  %127 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas276 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %127, i32 0, i32 0
  %type_attrs277 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas276, i32 0, i32 0
  %128 = load i16, i16* %type_attrs277, align 2, !tbaa !22
  %conv278 = zext i16 %128 to i32
  %and279 = and i32 %conv278, 15360
  %cmp280 = icmp eq i32 %and279, 1024
  br i1 %cmp280, label %if.end.283, label %if.then.282

if.then.282:                                      ; preds = %if.then.275
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.283:                                       ; preds = %if.then.275
  %129 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %tas284 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %129, i32 0, i32 0
  %rsize285 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas284, i32 0, i32 2
  %130 = load i32, i32* %rsize285, align 4, !tbaa !5
  %cmp286 = icmp ne i32 %130, 8
  br i1 %cmp286, label %if.then.288, label %if.end.289

if.then.288:                                      ; preds = %if.end.283
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.289:                                       ; preds = %if.end.283
  %131 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory290 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %131, i32 0, i32 1
  %current291 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory290, i32 0, i32 0
  %132 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current291, align 8, !tbaa !55
  %133 = bitcast %struct.gs_ref_memory_s* %132 to %struct.gs_memory_s*
  %134 = load %struct.ref_s*, %struct.ref_s** %pref, align 8, !tbaa !1
  %arraydecay292 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i32 0
  %call293 = call i32 @get_cie_param_array(%struct.gs_memory_s* %133, %struct.ref_s* %134, i32 8, float* %arraydecay292) #7
  store i32 %call293, i32* %code, align 4, !tbaa !26
  %135 = load i32, i32* %code, align 4, !tbaa !26
  %cmp294 = icmp slt i32 %135, 0
  br i1 %cmp294, label %if.then.296, label %if.end.297

if.then.296:                                      ; preds = %if.end.289
  %136 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %136, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.297:                                       ; preds = %if.end.289
  %arrayidx298 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 1
  %137 = load float, float* %arrayidx298, align 4, !tbaa !20
  %arrayidx299 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 0
  %138 = load float, float* %arrayidx299, align 4, !tbaa !20
  %cmp300 = fcmp olt float %137, %138
  br i1 %cmp300, label %if.then.317, label %lor.lhs.false.302

lor.lhs.false.302:                                ; preds = %if.end.297
  %arrayidx303 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 3
  %139 = load float, float* %arrayidx303, align 4, !tbaa !20
  %arrayidx304 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 2
  %140 = load float, float* %arrayidx304, align 4, !tbaa !20
  %cmp305 = fcmp olt float %139, %140
  br i1 %cmp305, label %if.then.317, label %lor.lhs.false.307

lor.lhs.false.307:                                ; preds = %lor.lhs.false.302
  %arrayidx308 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 5
  %141 = load float, float* %arrayidx308, align 4, !tbaa !20
  %arrayidx309 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 4
  %142 = load float, float* %arrayidx309, align 4, !tbaa !20
  %cmp310 = fcmp olt float %141, %142
  br i1 %cmp310, label %if.then.317, label %lor.lhs.false.312

lor.lhs.false.312:                                ; preds = %lor.lhs.false.307
  %arrayidx313 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 7
  %143 = load float, float* %arrayidx313, align 4, !tbaa !20
  %arrayidx314 = getelementptr inbounds [8 x float], [8 x float]* %value, i32 0, i64 6
  %144 = load float, float* %arrayidx314, align 4, !tbaa !20
  %cmp315 = fcmp olt float %143, %144
  br i1 %cmp315, label %if.then.317, label %if.end.318

if.then.317:                                      ; preds = %lor.lhs.false.312, %lor.lhs.false.307, %lor.lhs.false.302, %if.end.297
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.318:                                       ; preds = %lor.lhs.false.312
  br label %if.end.319

if.end.319:                                       ; preds = %if.end.318, %land.lhs.true.268, %if.end.264
  %145 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %145, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.319, %if.then.317, %if.then.296, %if.then.288, %if.then.282, %if.then.258, %if.then.250, %if.then.238, %if.then.232, %if.then.212, %if.then.191, %if.then.184, %if.then.178, %if.else.160, %if.then.152, %if.then.142, %if.then.134, %if.then.120, %if.then.106, %if.then.98, %if.then.90, %if.then.83, %if.else, %if.then.56, %if.then.46, %if.then.40, %if.then.28, %cond.end, %if.then.9, %if.then.5, %if.then
  %146 = bitcast %struct.ref_s** %pref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %146) #1
  %147 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %147) #1
  %148 = bitcast %struct.ref_s* %arrayref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %148) #1
  %149 = bitcast %struct.ref_s* %tempref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %149) #1
  %150 = bitcast %struct.ref_s** %CIEspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %150) #1
  %151 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %151) #1
  %152 = bitcast [8 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 32, i8* %152) #1
  %153 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153) #1
  %154 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %154) #1
  %155 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %155) #1
  %156 = load i32, i32* %retval
  ret i32 %156
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefgrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 8, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.14

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %21 = bitcast float* %20 to i8*
  %call13 = call i8* @memcpy(i8* %21, i8* bitcast ([8 x float]* @default_0_1 to i8*), i64 32) #8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefgdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %9, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current7 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory6, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current7, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %17 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %call8 = call i32 @get_cie_param_array(%struct.gs_memory_s* %15, %struct.ref_s* %16, i32 8, float* %17) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %18, 0
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.5
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.5
  br label %if.end.14

if.else:                                          ; preds = %land.lhs.true, %if.end
  %20 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %21 = bitcast float* %20 to i8*
  %call13 = call i8* @memcpy(i8* %21, i8* bitcast ([8 x float]* @default_0_1 to i8*), i64 32) #8
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.end.12
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.11, %if.then
  %22 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = load i32, i32* %retval
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefgvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %4, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 -3
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %6, 4
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp2 = icmp eq i32 %conv, 11
  br i1 %cmp2, label %if.end.11, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs5 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %11 = bitcast i16* %type_attrs5 to i8*
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx6, align 1, !tbaa !54
  %conv7 = zext i8 %12 to i32
  %cmp8 = icmp eq i32 %conv7, 16
  br i1 %cmp8, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %land.lhs.true, %for.body
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.10, %if.then
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @ciedefgcompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %CIEdict1 = alloca %struct.ref_s, align 8
  %CIEdict2 = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %CIEdict1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call3 = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %CIEdict2) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call7 = call i32 @comparedictkey(%struct.gs_context_state_s* %13, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0)) #7
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.6
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call10 = call i32 @comparedictkey(%struct.gs_context_state_s* %14, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0)) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end.9
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call14 = call i32 @comparedictkey(%struct.gs_context_state_s* %15, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0)) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.13
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call18 = call i32 @comparedictkey(%struct.gs_context_state_s* %16, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0)) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.17
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call22 = call i32 @comparedictkey(%struct.gs_context_state_s* %17, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i32 0, i32 0)) #7
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.21
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call26 = call i32 @comparedictkey(%struct.gs_context_state_s* %18, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0)) #7
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.end.29, label %if.then.28

if.then.28:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.25
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call30 = call i32 @comparedictkey(%struct.gs_context_state_s* %19, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0)) #7
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.29
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call34 = call i32 @comparedictkey(%struct.gs_context_state_s* %20, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0)) #7
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.37, label %if.then.36

if.then.36:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.37:                                        ; preds = %if.end.33
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call38 = call i32 @comparedictkey(%struct.gs_context_state_s* %21, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i32 0, i32 0)) #7
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.37
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.end.37
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call42 = call i32 @comparedictkey(%struct.gs_context_state_s* %22, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i32 0, i32 0)) #7
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.end.45, label %if.then.44

if.then.44:                                       ; preds = %if.end.41
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.45:                                        ; preds = %if.end.41
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call46 = call i32 @comparedictkey(%struct.gs_context_state_s* %23, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0)) #7
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.end.49, label %if.then.48

if.then.48:                                       ; preds = %if.end.45
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %if.end.45
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call50 = call i32 @comparedictkey(%struct.gs_context_state_s* %24, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i32 0, i32 0)) #7
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %if.end.49
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.53:                                        ; preds = %if.end.49
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.53, %if.then.52, %if.then.48, %if.then.44, %if.then.40, %if.then.36, %if.then.32, %if.then.28, %if.then.24, %if.then.20, %if.then.16, %if.then.12, %if.then.8, %if.then.5, %if.then
  %25 = bitcast %struct.ref_s* %CIEdict2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %25) #1
  %26 = bitcast %struct.ref_s* %CIEdict1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %26) #1
  %27 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal i32 @setseparationspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %sepspace, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %sepspace.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %sname = alloca %struct.ref_s, align 8
  %proc = alloca %struct.ref_s, align 8
  %name_none = alloca %struct.ref_s, align 8
  %name_all = alloca %struct.ref_s, align 8
  %sep_type = alloca i32, align 4
  %cspace_old = alloca %struct.ref_colorspace_s, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %pacs = alloca %struct.gs_color_space_s*, align 8
  %pfn = alloca %struct.gs_function_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %sepspace, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %4 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast %struct.ref_s* %name_none to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast %struct.ref_s* %name_all to i8*
  call void @llvm.lifetime.start(i64 16, i8* %7) #1
  %8 = bitcast i32* %sep_type to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.lifetime.start(i64 96, i8* %9) #1
  %10 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %11 = bitcast %struct.gs_color_space_s** %pacs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  %12 = bitcast %struct.gs_function_s** %pfn to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  store %struct.gs_function_s* null, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %13 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %13) #1
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 2
  %15 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %15, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %16 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %16, align 4, !tbaa !26
  %17 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %18 = load i32, i32* %17, align 4, !tbaa !26
  %cmp1 = icmp eq i32 %18, 0
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %19, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %20 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %21 = bitcast %struct.gs_ref_memory_s* %20 to %struct.gs_memory_s*
  %22 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %21, %struct.ref_s* %22, i64 3, %struct.ref_s* %proc) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %23 = load i32, i32* %code, align 4, !tbaa !26
  %cmp3 = icmp slt i32 %23, 0
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.2
  %24 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %24, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.then.2
  %call6 = call %struct.gs_function_s* @ref_function(%struct.ref_s* %proc) #7
  store %struct.gs_function_s* %call6, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %25 = load %struct.gs_function_s*, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %cmp7 = icmp eq %struct.gs_function_s* %25, null
  br i1 %cmp7, label %if.then.8, label %if.end.23

if.then.8:                                        ; preds = %if.end.5
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %27 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call9 = call i32 @convert_transform(%struct.gs_context_state_s* %26, %struct.ref_s* %27, %struct.ref_s* %proc) #7
  store i32 %call9, i32* %code, align 4, !tbaa !26
  %28 = load i32, i32* %code, align 4, !tbaa !26
  %cmp10 = icmp slt i32 %28, 0
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.then.8
  %29 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.then.8
  %30 = load i32, i32* %code, align 4, !tbaa !26
  %cmp13 = icmp sgt i32 %30, 0
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.12
  %31 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %31, align 4, !tbaa !26
  %32 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %33 = load i32, i32* %32, align 4, !tbaa !26
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %32, align 4, !tbaa !26
  %34 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.12
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack16 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 26
  %stack17 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack16, i32 0, i32 0
  %p18 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack17, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p18, align 8, !tbaa !10
  store %struct.ref_s* %36, %struct.ref_s** %op, align 8, !tbaa !1
  %37 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call19 = call %struct.gs_function_s* @ref_function(%struct.ref_s* %37) #7
  store %struct.gs_function_s* %call19, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack20 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 26
  %stack21 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack20, i32 0, i32 0
  %p22 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack21, i32 0, i32 0
  %39 = load %struct.ref_s*, %struct.ref_s** %p22, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i64 -1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p22, align 8, !tbaa !10
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.15, %if.end.5
  br label %if.end.32

if.else:                                          ; preds = %if.end
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack24 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 26
  %stack25 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack24, i32 0, i32 0
  %p26 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack25, i32 0, i32 0
  %41 = load %struct.ref_s*, %struct.ref_s** %p26, align 8, !tbaa !10
  store %struct.ref_s* %41, %struct.ref_s** %op, align 8, !tbaa !1
  %42 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call27 = call %struct.gs_function_s* @ref_function(%struct.ref_s* %42) #7
  store %struct.gs_function_s* %call27, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack28 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 26
  %stack29 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack28, i32 0, i32 0
  %p30 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack29, i32 0, i32 0
  %44 = load %struct.ref_s*, %struct.ref_s** %p30, align 8, !tbaa !10
  %add.ptr31 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i64 -1
  store %struct.ref_s* %add.ptr31, %struct.ref_s** %p30, align 8, !tbaa !10
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.end.23
  %45 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %45, align 4, !tbaa !26
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 1
  %current34 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory33, i32 0, i32 0
  %47 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current34, align 8, !tbaa !55
  %48 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %48, i32 0, i32 2
  %49 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %49, i32 0, i32 16
  %50 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %call35 = call i32 @names_ref(%struct.name_table_s* %50, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0), i32 3, %struct.ref_s* %name_all, i32 0) #7
  store i32 %call35, i32* %code, align 4, !tbaa !26
  %cmp36 = icmp slt i32 %call35, 0
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %if.end.32
  %51 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %51, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %if.end.32
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory39 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 1
  %current40 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory39, i32 0, i32 0
  %53 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current40, align 8, !tbaa !55
  %54 = bitcast %struct.gs_ref_memory_s* %53 to %struct.gs_memory_s*
  %gs_lib_ctx41 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %54, i32 0, i32 2
  %55 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx41, align 8, !tbaa !74
  %gs_name_table42 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %55, i32 0, i32 16
  %56 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table42, align 8, !tbaa !75
  %call43 = call i32 @names_ref(%struct.name_table_s* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i32 4, %struct.ref_s* %name_none, i32 0) #7
  store i32 %call43, i32* %code, align 4, !tbaa !26
  %cmp44 = icmp slt i32 %call43, 0
  br i1 %cmp44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.end.38
  %57 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %57, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %if.end.38
  %58 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory47 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %58, i32 0, i32 1
  %current48 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory47, i32 0, i32 0
  %59 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current48, align 8, !tbaa !55
  %60 = bitcast %struct.gs_ref_memory_s* %59 to %struct.gs_memory_s*
  %61 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call49 = call i32 @array_get(%struct.gs_memory_s* %60, %struct.ref_s* %61, i64 1, %struct.ref_s* %sname) #7
  store i32 %call49, i32* %code, align 4, !tbaa !26
  %62 = load i32, i32* %code, align 4, !tbaa !26
  %cmp50 = icmp slt i32 %62, 0
  br i1 %cmp50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.end.46
  %63 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %63, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %if.end.46
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %64 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %64, i64 1
  %65 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %65 to i32
  %cmp53 = icmp eq i32 %conv, 18
  br i1 %cmp53, label %if.then.55, label %if.end.65

if.then.55:                                       ; preds = %if.end.52
  %66 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory56 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %66, i32 0, i32 1
  %current57 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory56, i32 0, i32 0
  %67 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current57, align 8, !tbaa !55
  %68 = bitcast %struct.gs_ref_memory_s* %67 to %struct.gs_memory_s*
  %gs_lib_ctx58 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %68, i32 0, i32 2
  %69 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx58, align 8, !tbaa !74
  %gs_name_table59 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %69, i32 0, i32 16
  %70 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table59, align 8, !tbaa !75
  %call60 = call i32 @names_from_string(%struct.name_table_s* %70, %struct.ref_s* %sname, %struct.ref_s* %sname) #7
  store i32 %call60, i32* %code, align 4, !tbaa !26
  %71 = load i32, i32* %code, align 4, !tbaa !26
  %cmp61 = icmp slt i32 %71, 0
  br i1 %cmp61, label %if.then.63, label %if.end.64

if.then.63:                                       ; preds = %if.then.55
  %72 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %72, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.64:                                        ; preds = %if.then.55
  br label %if.end.65

if.end.65:                                        ; preds = %if.end.64, %if.end.52
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %pname = bitcast %union.v* %value to %struct.name_s**
  %73 = load %struct.name_s*, %struct.name_s** %pname, align 8, !tbaa !1
  %value66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %name_all, i32 0, i32 1
  %pname67 = bitcast %union.v* %value66 to %struct.name_s**
  %74 = load %struct.name_s*, %struct.name_s** %pname67, align 8, !tbaa !1
  %cmp68 = icmp eq %struct.name_s* %73, %74
  br i1 %cmp68, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.65
  br label %cond.end

cond.false:                                       ; preds = %if.end.65
  %value70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %pname71 = bitcast %union.v* %value70 to %struct.name_s**
  %75 = load %struct.name_s*, %struct.name_s** %pname71, align 8, !tbaa !1
  %value72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %name_none, i32 0, i32 1
  %pname73 = bitcast %union.v* %value72 to %struct.name_s**
  %76 = load %struct.name_s*, %struct.name_s** %pname73, align 8, !tbaa !1
  %cmp74 = icmp eq %struct.name_s* %75, %76
  %cond = select i1 %cmp74, i32 0, i32 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond76 = phi i32 [ 1, %cond.true ], [ %cond, %cond.false ]
  store i32 %cond76, i32* %sep_type, align 4, !tbaa !54
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %77, i32 0, i32 0
  %78 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call77 = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %78) #7
  store %struct.gs_color_space_s* %call77, %struct.gs_color_space_s** %pacs, align 8, !tbaa !1
  %79 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs78 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %79, i32 0, i32 0
  %80 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs78, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %80, i32 0, i32 2
  %81 = load i8*, i8** %client_data, align 8, !tbaa !53
  %82 = bitcast i8* %81 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %82, i32 0, i32 5
  %arrayidx79 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %83 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  %84 = bitcast %struct.ref_colorspace_s* %arrayidx79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 96, i32 8, i1 false), !tbaa.struct !77
  %85 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pacs, align 8, !tbaa !1
  %86 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory80 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %86, i32 0, i32 1
  %current81 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory80, i32 0, i32 0
  %87 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current81, align 8, !tbaa !55
  %88 = bitcast %struct.gs_ref_memory_s* %87 to %struct.gs_memory_s*
  %call82 = call i32 @gs_cspace_new_Separation(%struct.gs_color_space_s** %pcs, %struct.gs_color_space_s* %85, %struct.gs_memory_s* %88) #7
  store i32 %call82, i32* %code, align 4, !tbaa !26
  %89 = load i32, i32* %code, align 4, !tbaa !26
  %cmp83 = icmp slt i32 %89, 0
  br i1 %cmp83, label %if.then.85, label %if.end.86

if.then.85:                                       ; preds = %cond.end
  %90 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %90, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.86:                                        ; preds = %cond.end
  %91 = load i32, i32* %sep_type, align 4, !tbaa !54
  %92 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %92, i32 0, i32 7
  %separation = bitcast %union.anon* %params to %struct.gs_separation_params_s*
  %sep_type87 = getelementptr inbounds %struct.gs_separation_params_s, %struct.gs_separation_params_s* %separation, i32 0, i32 2
  store i32 %91, i32* %sep_type87, align 4, !tbaa !78
  %93 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %93, i32 0, i32 1
  %current89 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory88, i32 0, i32 0
  %94 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current89, align 8, !tbaa !55
  %95 = bitcast %struct.gs_ref_memory_s* %94 to %struct.gs_memory_s*
  %gs_lib_ctx90 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %95, i32 0, i32 2
  %96 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx90, align 8, !tbaa !74
  %gs_name_table91 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %96, i32 0, i32 16
  %97 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table91, align 8, !tbaa !75
  %call92 = call i32 @names_index(%struct.name_table_s* %97, %struct.ref_s* %sname) #7
  %conv93 = zext i32 %call92 to i64
  %98 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params94 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %98, i32 0, i32 7
  %separation95 = bitcast %union.anon* %params94 to %struct.gs_separation_params_s*
  %sep_name = getelementptr inbounds %struct.gs_separation_params_s, %struct.gs_separation_params_s* %separation95, i32 0, i32 0
  store i64 %conv93, i64* %sep_name, align 8, !tbaa !80
  %99 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params96 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %99, i32 0, i32 7
  %separation97 = bitcast %union.anon* %params96 to %struct.gs_separation_params_s*
  %get_colorname_string = getelementptr inbounds %struct.gs_separation_params_s, %struct.gs_separation_params_s* %separation97, i32 0, i32 4
  store i32 (%struct.gs_memory_s*, i64, i8**, i32*)* @gs_get_colorname_string, i32 (%struct.gs_memory_s*, i64, i8**, i32*)** %get_colorname_string, align 8, !tbaa !81
  %100 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory98 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %100, i32 0, i32 1
  %current99 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory98, i32 0, i32 0
  %101 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current99, align 8, !tbaa !55
  %102 = bitcast %struct.gs_ref_memory_s* %101 to %struct.gs_memory_s*
  %103 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call100 = call i32 @array_get(%struct.gs_memory_s* %102, %struct.ref_s* %103, i64 1, %struct.ref_s* %proc) #7
  store i32 %call100, i32* %code, align 4, !tbaa !26
  %104 = load i32, i32* %code, align 4, !tbaa !26
  %cmp101 = icmp slt i32 %104, 0
  br i1 %cmp101, label %if.then.103, label %if.end.104

if.then.103:                                      ; preds = %if.end.86
  %105 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %105, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.104:                                       ; preds = %if.end.86
  %106 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs105 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %106, i32 0, i32 0
  %107 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs105, align 8, !tbaa !43
  %client_data106 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %107, i32 0, i32 2
  %108 = load i8*, i8** %client_data106, align 8, !tbaa !53
  %109 = bitcast i8* %108 to %struct.int_gstate_s*
  %colorspace107 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %109, i32 0, i32 5
  %arrayidx108 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace107, i32 0, i64 0
  %procs = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx108, i32 0, i32 1
  %special = getelementptr inbounds %struct.ref_color_procs_s, %struct.ref_color_procs_s* %procs, i32 0, i32 1
  %separation109 = bitcast %union.anon.6* %special to %struct.ref_separation_params_s*
  %layer_name = getelementptr inbounds %struct.ref_separation_params_s, %struct.ref_separation_params_s* %separation109, i32 0, i32 0
  %110 = bitcast %struct.ref_s* %layer_name to i8*
  %111 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 16, i32 8, i1 false), !tbaa.struct !24
  %112 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory110 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %112, i32 0, i32 1
  %current111 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory110, i32 0, i32 0
  %113 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current111, align 8, !tbaa !55
  %114 = bitcast %struct.gs_ref_memory_s* %113 to %struct.gs_memory_s*
  %115 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call112 = call i32 @array_get(%struct.gs_memory_s* %114, %struct.ref_s* %115, i64 3, %struct.ref_s* %proc) #7
  store i32 %call112, i32* %code, align 4, !tbaa !26
  %116 = load i32, i32* %code, align 4, !tbaa !26
  %cmp113 = icmp slt i32 %116, 0
  br i1 %cmp113, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %if.end.104
  %117 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %117, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.116:                                       ; preds = %if.end.104
  %118 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs117 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %118, i32 0, i32 0
  %119 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs117, align 8, !tbaa !43
  %client_data118 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %119, i32 0, i32 2
  %120 = load i8*, i8** %client_data118, align 8, !tbaa !53
  %121 = bitcast i8* %120 to %struct.int_gstate_s*
  %colorspace119 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %121, i32 0, i32 5
  %arrayidx120 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace119, i32 0, i64 0
  %procs121 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx120, i32 0, i32 1
  %special122 = getelementptr inbounds %struct.ref_color_procs_s, %struct.ref_color_procs_s* %procs121, i32 0, i32 1
  %separation123 = bitcast %union.anon.6* %special122 to %struct.ref_separation_params_s*
  %tint_transform = getelementptr inbounds %struct.ref_separation_params_s, %struct.ref_separation_params_s* %separation123, i32 0, i32 1
  %122 = bitcast %struct.ref_s* %tint_transform to i8*
  %123 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %122, i8* %123, i64 16, i32 8, i1 false), !tbaa.struct !24
  %124 = load i32, i32* %code, align 4, !tbaa !26
  %cmp124 = icmp sge i32 %124, 0
  br i1 %cmp124, label %if.then.126, label %if.end.128

if.then.126:                                      ; preds = %if.end.116
  %125 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %126 = load %struct.gs_function_s*, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %call127 = call i32 @gs_cspace_set_sepr_function(%struct.gs_color_space_s* %125, %struct.gs_function_s* %126) #7
  store i32 %call127, i32* %code, align 4, !tbaa !26
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.126, %if.end.116
  %127 = load i32, i32* %code, align 4, !tbaa !26
  %cmp129 = icmp sge i32 %127, 0
  br i1 %cmp129, label %if.then.131, label %if.end.134

if.then.131:                                      ; preds = %if.end.128
  %128 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs132 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %128, i32 0, i32 0
  %129 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs132, align 8, !tbaa !43
  %130 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call133 = call i32 @gs_setcolorspace(%struct.gs_state_s* %129, %struct.gs_color_space_s* %130) #7
  store i32 %call133, i32* %code, align 4, !tbaa !26
  br label %if.end.134

if.end.134:                                       ; preds = %if.then.131, %if.end.128
  %131 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %131, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i32 0, i32 0)) #7
  %132 = load i32, i32* %code, align 4, !tbaa !26
  %cmp135 = icmp slt i32 %132, 0
  br i1 %cmp135, label %if.then.137, label %if.end.142

if.then.137:                                      ; preds = %if.end.134
  %133 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs138 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %133, i32 0, i32 0
  %134 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs138, align 8, !tbaa !43
  %client_data139 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %134, i32 0, i32 2
  %135 = load i8*, i8** %client_data139, align 8, !tbaa !53
  %136 = bitcast i8* %135 to %struct.int_gstate_s*
  %colorspace140 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %136, i32 0, i32 5
  %arrayidx141 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace140, i32 0, i64 0
  %137 = bitcast %struct.ref_colorspace_s* %arrayidx141 to i8*
  %138 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %138, i64 96, i32 8, i1 false), !tbaa.struct !77
  %139 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %139, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.142:                                       ; preds = %if.end.134
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx143 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 1.000000e+00, float* %arrayidx143, align 4, !tbaa !20
  %140 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs144 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %140, i32 0, i32 0
  %141 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs144, align 8, !tbaa !43
  %call145 = call i32 @gs_setcolor(%struct.gs_state_s* %141, %struct.gs_client_color_s* %cc) #7
  store i32 %call145, i32* %code, align 4, !tbaa !26
  %142 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %142, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.142, %if.then.137, %if.then.115, %if.then.103, %if.then.85, %if.then.63, %if.then.51, %if.then.45, %if.then.37, %if.then.14, %if.then.11, %if.then.4, %if.then
  %143 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %143) #1
  %144 = bitcast %struct.gs_function_s** %pfn to i8*
  call void @llvm.lifetime.end(i64 8, i8* %144) #1
  %145 = bitcast %struct.gs_color_space_s** %pacs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %145) #1
  %146 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %146) #1
  %147 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.lifetime.end(i64 96, i8* %147) #1
  %148 = bitcast i32* %sep_type to i8*
  call void @llvm.lifetime.end(i64 4, i8* %148) #1
  %149 = bitcast %struct.ref_s* %name_all to i8*
  call void @llvm.lifetime.end(i64 16, i8* %149) #1
  %150 = bitcast %struct.ref_s* %name_none to i8*
  call void @llvm.lifetime.end(i64 16, i8* %150) #1
  %151 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.end(i64 16, i8* %151) #1
  %152 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %152) #1
  %153 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153) #1
  %154 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %154) #1
  %155 = load i32, i32* %retval
  ret i32 %155
}

; Function Attrs: nounwind uwtable
define internal i32 @validateseparationspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %space) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %sepspace = alloca %struct.ref_s*, align 8
  %nameref = alloca %struct.ref_s, align 8
  %sref = alloca %struct.ref_s, align 8
  %sname = alloca %struct.ref_s, align 8
  %altspace = alloca %struct.ref_s, align 8
  %tref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp142 = alloca i32, align 4
  %__s1_len161 = alloca i64, align 8
  %__s2_len163 = alloca i64, align 8
  %tmp164 = alloca i32, align 4
  %__s1171 = alloca i8*, align 8
  %__result175 = alloca i32, align 4
  %tmp213 = alloca i32, align 4
  %__s1_len235 = alloca i64, align 8
  %__s2_len237 = alloca i64, align 8
  %tmp238 = alloca i32, align 4
  %__s1245 = alloca i8*, align 8
  %__result249 = alloca i32, align 4
  %tmp287 = alloca i32, align 4
  %__s1_len315 = alloca i64, align 8
  %__s2_len317 = alloca i64, align 8
  %tmp318 = alloca i32, align 4
  %__s1325 = alloca i8*, align 8
  %__result329 = alloca i32, align 4
  %tmp367 = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %space, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s** %sepspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %3 = load %struct.ref_s*, %struct.ref_s** %2, align 8, !tbaa !1
  store %struct.ref_s* %3, %struct.ref_s** %sepspace, align 8, !tbaa !1
  %4 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.start(i64 16, i8* %7) #1
  %8 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %9 = load %struct.ref_s*, %struct.ref_s** %sepspace, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %10 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %10 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct.ref_s*, %struct.ref_s** %sepspace, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %12 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %12, 4
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %sepspace, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %15, %struct.ref_s* %16, i64 1, %struct.ref_s* %sname) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %17, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %18 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %19 = bitcast i16* %type_attrs12 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv13 = zext i8 %20 to i32
  %cmp14 = icmp eq i32 %conv13, 13
  br i1 %cmp14, label %if.end.32, label %if.then.16

if.then.16:                                       ; preds = %if.end.10
  %tas17 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %type_attrs18 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas17, i32 0, i32 0
  %21 = bitcast i16* %type_attrs18 to i8*
  %arrayidx19 = getelementptr inbounds i8, i8* %21, i64 1
  %22 = load i8, i8* %arrayidx19, align 1, !tbaa !54
  %conv20 = zext i8 %22 to i32
  %cmp21 = icmp eq i32 %conv20, 18
  br i1 %cmp21, label %if.else, label %if.then.23

if.then.23:                                       ; preds = %if.then.16
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %if.then.16
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory24 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 1
  %current25 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory24, i32 0, i32 0
  %24 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current25, align 8, !tbaa !55
  %25 = bitcast %struct.gs_ref_memory_s* %24 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %25, i32 0, i32 2
  %26 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %26, i32 0, i32 16
  %27 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %call26 = call i32 @names_from_string(%struct.name_table_s* %27, %struct.ref_s* %sname, %struct.ref_s* %sname) #7
  store i32 %call26, i32* %code, align 4, !tbaa !26
  %28 = load i32, i32* %code, align 4, !tbaa !26
  %cmp27 = icmp slt i32 %28, 0
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.else
  %29 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.else
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.end.10
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 1
  %current34 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory33, i32 0, i32 0
  %31 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current34, align 8, !tbaa !55
  %32 = bitcast %struct.gs_ref_memory_s* %31 to %struct.gs_memory_s*
  %33 = load %struct.ref_s*, %struct.ref_s** %sepspace, align 8, !tbaa !1
  %call35 = call i32 @array_get(%struct.gs_memory_s* %32, %struct.ref_s* %33, i64 3, %struct.ref_s* %tref) #7
  store i32 %call35, i32* %code, align 4, !tbaa !26
  %34 = load i32, i32* %code, align 4, !tbaa !26
  %cmp36 = icmp slt i32 %34, 0
  br i1 %cmp36, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %if.end.32
  %35 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %35, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.32
  br label %do.body

do.body:                                          ; preds = %if.end.39
  %tas40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tref, i32 0, i32 0
  %type_attrs41 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas40, i32 0, i32 0
  %36 = load i16, i16* %type_attrs41, align 2, !tbaa !22
  %conv42 = zext i16 %36 to i32
  %and43 = and i32 %conv42, 15552
  %cmp44 = icmp eq i32 %and43, 1216
  br i1 %cmp44, label %if.end.48, label %if.then.46

if.then.46:                                       ; preds = %do.body
  %call47 = call i32 @check_proc_failed(%struct.ref_s* %tref) #7
  store i32 %call47, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.48:                                        ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.48
  br label %do.end

do.end:                                           ; preds = %do.cond
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory49 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 1
  %current50 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory49, i32 0, i32 0
  %38 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current50, align 8, !tbaa !55
  %39 = bitcast %struct.gs_ref_memory_s* %38 to %struct.gs_memory_s*
  %40 = load %struct.ref_s*, %struct.ref_s** %sepspace, align 8, !tbaa !1
  %call51 = call i32 @array_get(%struct.gs_memory_s* %39, %struct.ref_s* %40, i64 2, %struct.ref_s* %altspace) #7
  store i32 %call51, i32* %code, align 4, !tbaa !26
  %41 = load i32, i32* %code, align 4, !tbaa !26
  %cmp52 = icmp slt i32 %41, 0
  br i1 %cmp52, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %do.end
  %42 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %42, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.55:                                        ; preds = %do.end
  %tas56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %altspace, i32 0, i32 0
  %type_attrs57 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas56, i32 0, i32 0
  %43 = bitcast i16* %type_attrs57 to i8*
  %arrayidx58 = getelementptr inbounds i8, i8* %43, i64 1
  %44 = load i8, i8* %arrayidx58, align 1, !tbaa !54
  %conv59 = zext i8 %44 to i32
  %cmp60 = icmp eq i32 %conv59, 13
  br i1 %cmp60, label %if.then.62, label %if.else.63

if.then.62:                                       ; preds = %if.end.55
  %45 = bitcast %struct.ref_s* %nameref to i8*
  %46 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.87

if.else.63:                                       ; preds = %if.end.55
  %tas64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %altspace, i32 0, i32 0
  %type_attrs65 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas64, i32 0, i32 0
  %47 = load i16, i16* %type_attrs65, align 2, !tbaa !22
  %conv66 = zext i16 %47 to i32
  %and67 = and i32 %conv66, 15360
  %cmp68 = icmp eq i32 %and67, 1024
  br i1 %cmp68, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.else.63
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.71:                                        ; preds = %if.else.63
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory72 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 1
  %current73 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory72, i32 0, i32 0
  %49 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current73, align 8, !tbaa !55
  %50 = bitcast %struct.gs_ref_memory_s* %49 to %struct.gs_memory_s*
  %call74 = call i32 @array_get(%struct.gs_memory_s* %50, %struct.ref_s* %altspace, i64 0, %struct.ref_s* %tref) #7
  store i32 %call74, i32* %code, align 4, !tbaa !26
  %51 = load i32, i32* %code, align 4, !tbaa !26
  %cmp75 = icmp slt i32 %51, 0
  br i1 %cmp75, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.end.71
  %52 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %52, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.78:                                        ; preds = %if.end.71
  %tas79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tref, i32 0, i32 0
  %type_attrs80 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas79, i32 0, i32 0
  %53 = bitcast i16* %type_attrs80 to i8*
  %arrayidx81 = getelementptr inbounds i8, i8* %53, i64 1
  %54 = load i8, i8* %arrayidx81, align 1, !tbaa !54
  %conv82 = zext i8 %54 to i32
  %cmp83 = icmp eq i32 %conv82, 13
  br i1 %cmp83, label %if.end.86, label %if.then.85

if.then.85:                                       ; preds = %if.end.78
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.86:                                        ; preds = %if.end.78
  %55 = bitcast %struct.ref_s* %nameref to i8*
  %56 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.86, %if.then.62
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 1
  %current89 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory88, i32 0, i32 0
  %58 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current89, align 8, !tbaa !55
  %59 = bitcast %struct.gs_ref_memory_s* %58 to %struct.gs_memory_s*
  %gs_lib_ctx90 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %59, i32 0, i32 2
  %60 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx90, align 8, !tbaa !74
  %gs_name_table91 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %60, i32 0, i32 16
  %61 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table91, align 8, !tbaa !75
  call void @names_string_ref(%struct.name_table_s* %61, %struct.ref_s* %nameref, %struct.ref_s* %sref) #7
  %tas92 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 0
  %rsize93 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas92, i32 0, i32 2
  %62 = load i32, i32* %rsize93, align 4, !tbaa !5
  %cmp94 = icmp eq i32 %62, 7
  br i1 %cmp94, label %if.then.96, label %if.end.304

if.then.96:                                       ; preds = %if.end.87
  %call97 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #9
  %cmp98 = icmp ult i64 %call97, 7
  br i1 %cmp98, label %cond.true, label %cond.false.146

cond.true:                                        ; preds = %if.then.96
  %63 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %63) #1
  %64 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %64) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.9 to i64)), i64 1), label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %cond.true
  %call100 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #9
  store i64 %call100, i64* %__s2_len, align 8, !tbaa !23
  %65 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp101 = icmp ult i64 %65, 4
  br i1 %cmp101, label %cond.true.103, label %cond.false

cond.true.103:                                    ; preds = %land.lhs.true
  %66 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %66) #1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value to i8**
  %67 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  store i8* %67, i8** %__s1, align 8, !tbaa !1
  %68 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68) #1
  %69 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx106 = getelementptr inbounds i8, i8* %69, i64 0
  %70 = load i8, i8* %arrayidx106, align 1, !tbaa !54
  %conv107 = zext i8 %70 to i32
  %71 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), align 1, !tbaa !54
  %conv108 = zext i8 %71 to i32
  %sub = sub nsw i32 %conv107, %conv108
  store i32 %sub, i32* %__result, align 4, !tbaa !26
  %72 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp109 = icmp ugt i64 %72, 0
  br i1 %cmp109, label %land.lhs.true.111, label %if.end.141

land.lhs.true.111:                                ; preds = %cond.true.103
  %73 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp112 = icmp eq i32 %73, 0
  br i1 %cmp112, label %if.then.114, label %if.end.141

if.then.114:                                      ; preds = %land.lhs.true.111
  %74 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx115 = getelementptr inbounds i8, i8* %74, i64 1
  %75 = load i8, i8* %arrayidx115, align 1, !tbaa !54
  %conv116 = zext i8 %75 to i32
  %76 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 1), align 1, !tbaa !54
  %conv117 = zext i8 %76 to i32
  %sub118 = sub nsw i32 %conv116, %conv117
  store i32 %sub118, i32* %__result, align 4, !tbaa !26
  %77 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp119 = icmp ugt i64 %77, 1
  br i1 %cmp119, label %land.lhs.true.121, label %if.end.140

land.lhs.true.121:                                ; preds = %if.then.114
  %78 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp122 = icmp eq i32 %78, 0
  br i1 %cmp122, label %if.then.124, label %if.end.140

if.then.124:                                      ; preds = %land.lhs.true.121
  %79 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx125 = getelementptr inbounds i8, i8* %79, i64 2
  %80 = load i8, i8* %arrayidx125, align 1, !tbaa !54
  %conv126 = zext i8 %80 to i32
  %81 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 2), align 1, !tbaa !54
  %conv127 = zext i8 %81 to i32
  %sub128 = sub nsw i32 %conv126, %conv127
  store i32 %sub128, i32* %__result, align 4, !tbaa !26
  %82 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp129 = icmp ugt i64 %82, 2
  br i1 %cmp129, label %land.lhs.true.131, label %if.end.139

land.lhs.true.131:                                ; preds = %if.then.124
  %83 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp132 = icmp eq i32 %83, 0
  br i1 %cmp132, label %if.then.134, label %if.end.139

if.then.134:                                      ; preds = %land.lhs.true.131
  %84 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx135 = getelementptr inbounds i8, i8* %84, i64 3
  %85 = load i8, i8* %arrayidx135, align 1, !tbaa !54
  %conv136 = zext i8 %85 to i32
  %86 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 3), align 1, !tbaa !54
  %conv137 = zext i8 %86 to i32
  %sub138 = sub nsw i32 %conv136, %conv137
  store i32 %sub138, i32* %__result, align 4, !tbaa !26
  br label %if.end.139

if.end.139:                                       ; preds = %if.then.134, %land.lhs.true.131, %if.then.124
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139, %land.lhs.true.121, %if.then.114
  br label %if.end.141

if.end.141:                                       ; preds = %if.end.140, %land.lhs.true.111, %cond.true.103
  %87 = load i32, i32* %__result, align 4, !tbaa !26
  store i32 %87, i32* %tmp142, !tbaa !26
  %88 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  %89 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  %90 = load i32, i32* %tmp142, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  %value143 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes144 = bitcast %union.v* %value143 to i8**
  %91 = load i8*, i8** %const_bytes144, align 8, !tbaa !1
  %call145 = call i32 @strcmp(i8* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.141
  %cond = phi i32 [ %90, %if.end.141 ], [ %call145, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !26
  %92 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %93) #1
  %94 = load i32, i32* %tmp, !tbaa !26
  br label %cond.end.150

cond.false.146:                                   ; preds = %if.then.96
  %value147 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes148 = bitcast %union.v* %value147 to i8**
  %95 = load i8*, i8** %const_bytes148, align 8, !tbaa !1
  %call149 = call i32 @strncmp(i8* %95, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i64 7) #9
  br label %cond.end.150

cond.end.150:                                     ; preds = %cond.false.146, %cond.end
  %cond151 = phi i32 [ %94, %cond.end ], [ %call149, %cond.false.146 ]
  %cmp152 = icmp eq i32 %cond151, 0
  br i1 %cmp152, label %if.then.154, label %if.end.155

if.then.154:                                      ; preds = %cond.end.150
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.155:                                       ; preds = %cond.end.150
  %call156 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  %cmp157 = icmp ult i64 %call156, 7
  br i1 %cmp157, label %cond.true.159, label %cond.false.220

cond.true.159:                                    ; preds = %if.end.155
  %96 = bitcast i64* %__s1_len161 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %96) #1
  %97 = bitcast i64* %__s2_len163 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %97) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.10 to i64)), i64 1), label %land.lhs.true.165, label %cond.false.214

land.lhs.true.165:                                ; preds = %cond.true.159
  %call166 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  store i64 %call166, i64* %__s2_len163, align 8, !tbaa !23
  %98 = load i64, i64* %__s2_len163, align 8, !tbaa !23
  %cmp167 = icmp ult i64 %98, 4
  br i1 %cmp167, label %cond.true.169, label %cond.false.214

cond.true.169:                                    ; preds = %land.lhs.true.165
  %99 = bitcast i8** %__s1171 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %99) #1
  %value172 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes173 = bitcast %union.v* %value172 to i8**
  %100 = load i8*, i8** %const_bytes173, align 8, !tbaa !1
  store i8* %100, i8** %__s1171, align 8, !tbaa !1
  %101 = bitcast i32* %__result175 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %101) #1
  %102 = load i8*, i8** %__s1171, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds i8, i8* %102, i64 0
  %103 = load i8, i8* %arrayidx176, align 1, !tbaa !54
  %conv177 = zext i8 %103 to i32
  %104 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), align 1, !tbaa !54
  %conv178 = zext i8 %104 to i32
  %sub179 = sub nsw i32 %conv177, %conv178
  store i32 %sub179, i32* %__result175, align 4, !tbaa !26
  %105 = load i64, i64* %__s2_len163, align 8, !tbaa !23
  %cmp180 = icmp ugt i64 %105, 0
  br i1 %cmp180, label %land.lhs.true.182, label %if.end.212

land.lhs.true.182:                                ; preds = %cond.true.169
  %106 = load i32, i32* %__result175, align 4, !tbaa !26
  %cmp183 = icmp eq i32 %106, 0
  br i1 %cmp183, label %if.then.185, label %if.end.212

if.then.185:                                      ; preds = %land.lhs.true.182
  %107 = load i8*, i8** %__s1171, align 8, !tbaa !1
  %arrayidx186 = getelementptr inbounds i8, i8* %107, i64 1
  %108 = load i8, i8* %arrayidx186, align 1, !tbaa !54
  %conv187 = zext i8 %108 to i32
  %109 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1), align 1, !tbaa !54
  %conv188 = zext i8 %109 to i32
  %sub189 = sub nsw i32 %conv187, %conv188
  store i32 %sub189, i32* %__result175, align 4, !tbaa !26
  %110 = load i64, i64* %__s2_len163, align 8, !tbaa !23
  %cmp190 = icmp ugt i64 %110, 1
  br i1 %cmp190, label %land.lhs.true.192, label %if.end.211

land.lhs.true.192:                                ; preds = %if.then.185
  %111 = load i32, i32* %__result175, align 4, !tbaa !26
  %cmp193 = icmp eq i32 %111, 0
  br i1 %cmp193, label %if.then.195, label %if.end.211

if.then.195:                                      ; preds = %land.lhs.true.192
  %112 = load i8*, i8** %__s1171, align 8, !tbaa !1
  %arrayidx196 = getelementptr inbounds i8, i8* %112, i64 2
  %113 = load i8, i8* %arrayidx196, align 1, !tbaa !54
  %conv197 = zext i8 %113 to i32
  %114 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 2), align 1, !tbaa !54
  %conv198 = zext i8 %114 to i32
  %sub199 = sub nsw i32 %conv197, %conv198
  store i32 %sub199, i32* %__result175, align 4, !tbaa !26
  %115 = load i64, i64* %__s2_len163, align 8, !tbaa !23
  %cmp200 = icmp ugt i64 %115, 2
  br i1 %cmp200, label %land.lhs.true.202, label %if.end.210

land.lhs.true.202:                                ; preds = %if.then.195
  %116 = load i32, i32* %__result175, align 4, !tbaa !26
  %cmp203 = icmp eq i32 %116, 0
  br i1 %cmp203, label %if.then.205, label %if.end.210

if.then.205:                                      ; preds = %land.lhs.true.202
  %117 = load i8*, i8** %__s1171, align 8, !tbaa !1
  %arrayidx206 = getelementptr inbounds i8, i8* %117, i64 3
  %118 = load i8, i8* %arrayidx206, align 1, !tbaa !54
  %conv207 = zext i8 %118 to i32
  %119 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 3), align 1, !tbaa !54
  %conv208 = zext i8 %119 to i32
  %sub209 = sub nsw i32 %conv207, %conv208
  store i32 %sub209, i32* %__result175, align 4, !tbaa !26
  br label %if.end.210

if.end.210:                                       ; preds = %if.then.205, %land.lhs.true.202, %if.then.195
  br label %if.end.211

if.end.211:                                       ; preds = %if.end.210, %land.lhs.true.192, %if.then.185
  br label %if.end.212

if.end.212:                                       ; preds = %if.end.211, %land.lhs.true.182, %cond.true.169
  %120 = load i32, i32* %__result175, align 4, !tbaa !26
  store i32 %120, i32* %tmp213, !tbaa !26
  %121 = bitcast i32* %__result175 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %121) #1
  %122 = bitcast i8** %__s1171 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %122) #1
  %123 = load i32, i32* %tmp213, !tbaa !26
  br label %cond.end.218

cond.false.214:                                   ; preds = %land.lhs.true.165, %cond.true.159
  %value215 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes216 = bitcast %union.v* %value215 to i8**
  %124 = load i8*, i8** %const_bytes216, align 8, !tbaa !1
  %call217 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #8
  br label %cond.end.218

cond.end.218:                                     ; preds = %cond.false.214, %if.end.212
  %cond219 = phi i32 [ %123, %if.end.212 ], [ %call217, %cond.false.214 ]
  store i32 %cond219, i32* %tmp164, !tbaa !26
  %125 = bitcast i64* %__s2_len163 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = bitcast i64* %__s1_len161 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %126) #1
  %127 = load i32, i32* %tmp164, !tbaa !26
  br label %cond.end.224

cond.false.220:                                   ; preds = %if.end.155
  %value221 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes222 = bitcast %union.v* %value221 to i8**
  %128 = load i8*, i8** %const_bytes222, align 8, !tbaa !1
  %call223 = call i32 @strncmp(i8* %128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i64 7) #9
  br label %cond.end.224

cond.end.224:                                     ; preds = %cond.false.220, %cond.end.218
  %cond225 = phi i32 [ %127, %cond.end.218 ], [ %call223, %cond.false.220 ]
  %cmp226 = icmp eq i32 %cond225, 0
  br i1 %cmp226, label %if.then.228, label %if.end.229

if.then.228:                                      ; preds = %cond.end.224
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.229:                                       ; preds = %cond.end.224
  %call230 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)) #9
  %cmp231 = icmp ult i64 %call230, 7
  br i1 %cmp231, label %cond.true.233, label %cond.false.294

cond.true.233:                                    ; preds = %if.end.229
  %129 = bitcast i64* %__s1_len235 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %129) #1
  %130 = bitcast i64* %__s2_len237 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %130) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.8 to i64)), i64 1), label %land.lhs.true.239, label %cond.false.288

land.lhs.true.239:                                ; preds = %cond.true.233
  %call240 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)) #9
  store i64 %call240, i64* %__s2_len237, align 8, !tbaa !23
  %131 = load i64, i64* %__s2_len237, align 8, !tbaa !23
  %cmp241 = icmp ult i64 %131, 4
  br i1 %cmp241, label %cond.true.243, label %cond.false.288

cond.true.243:                                    ; preds = %land.lhs.true.239
  %132 = bitcast i8** %__s1245 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %132) #1
  %value246 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes247 = bitcast %union.v* %value246 to i8**
  %133 = load i8*, i8** %const_bytes247, align 8, !tbaa !1
  store i8* %133, i8** %__s1245, align 8, !tbaa !1
  %134 = bitcast i32* %__result249 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %134) #1
  %135 = load i8*, i8** %__s1245, align 8, !tbaa !1
  %arrayidx250 = getelementptr inbounds i8, i8* %135, i64 0
  %136 = load i8, i8* %arrayidx250, align 1, !tbaa !54
  %conv251 = zext i8 %136 to i32
  %137 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), align 1, !tbaa !54
  %conv252 = zext i8 %137 to i32
  %sub253 = sub nsw i32 %conv251, %conv252
  store i32 %sub253, i32* %__result249, align 4, !tbaa !26
  %138 = load i64, i64* %__s2_len237, align 8, !tbaa !23
  %cmp254 = icmp ugt i64 %138, 0
  br i1 %cmp254, label %land.lhs.true.256, label %if.end.286

land.lhs.true.256:                                ; preds = %cond.true.243
  %139 = load i32, i32* %__result249, align 4, !tbaa !26
  %cmp257 = icmp eq i32 %139, 0
  br i1 %cmp257, label %if.then.259, label %if.end.286

if.then.259:                                      ; preds = %land.lhs.true.256
  %140 = load i8*, i8** %__s1245, align 8, !tbaa !1
  %arrayidx260 = getelementptr inbounds i8, i8* %140, i64 1
  %141 = load i8, i8* %arrayidx260, align 1, !tbaa !54
  %conv261 = zext i8 %141 to i32
  %142 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 1), align 1, !tbaa !54
  %conv262 = zext i8 %142 to i32
  %sub263 = sub nsw i32 %conv261, %conv262
  store i32 %sub263, i32* %__result249, align 4, !tbaa !26
  %143 = load i64, i64* %__s2_len237, align 8, !tbaa !23
  %cmp264 = icmp ugt i64 %143, 1
  br i1 %cmp264, label %land.lhs.true.266, label %if.end.285

land.lhs.true.266:                                ; preds = %if.then.259
  %144 = load i32, i32* %__result249, align 4, !tbaa !26
  %cmp267 = icmp eq i32 %144, 0
  br i1 %cmp267, label %if.then.269, label %if.end.285

if.then.269:                                      ; preds = %land.lhs.true.266
  %145 = load i8*, i8** %__s1245, align 8, !tbaa !1
  %arrayidx270 = getelementptr inbounds i8, i8* %145, i64 2
  %146 = load i8, i8* %arrayidx270, align 1, !tbaa !54
  %conv271 = zext i8 %146 to i32
  %147 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 2), align 1, !tbaa !54
  %conv272 = zext i8 %147 to i32
  %sub273 = sub nsw i32 %conv271, %conv272
  store i32 %sub273, i32* %__result249, align 4, !tbaa !26
  %148 = load i64, i64* %__s2_len237, align 8, !tbaa !23
  %cmp274 = icmp ugt i64 %148, 2
  br i1 %cmp274, label %land.lhs.true.276, label %if.end.284

land.lhs.true.276:                                ; preds = %if.then.269
  %149 = load i32, i32* %__result249, align 4, !tbaa !26
  %cmp277 = icmp eq i32 %149, 0
  br i1 %cmp277, label %if.then.279, label %if.end.284

if.then.279:                                      ; preds = %land.lhs.true.276
  %150 = load i8*, i8** %__s1245, align 8, !tbaa !1
  %arrayidx280 = getelementptr inbounds i8, i8* %150, i64 3
  %151 = load i8, i8* %arrayidx280, align 1, !tbaa !54
  %conv281 = zext i8 %151 to i32
  %152 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 3), align 1, !tbaa !54
  %conv282 = zext i8 %152 to i32
  %sub283 = sub nsw i32 %conv281, %conv282
  store i32 %sub283, i32* %__result249, align 4, !tbaa !26
  br label %if.end.284

if.end.284:                                       ; preds = %if.then.279, %land.lhs.true.276, %if.then.269
  br label %if.end.285

if.end.285:                                       ; preds = %if.end.284, %land.lhs.true.266, %if.then.259
  br label %if.end.286

if.end.286:                                       ; preds = %if.end.285, %land.lhs.true.256, %cond.true.243
  %153 = load i32, i32* %__result249, align 4, !tbaa !26
  store i32 %153, i32* %tmp287, !tbaa !26
  %154 = bitcast i32* %__result249 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %154) #1
  %155 = bitcast i8** %__s1245 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %155) #1
  %156 = load i32, i32* %tmp287, !tbaa !26
  br label %cond.end.292

cond.false.288:                                   ; preds = %land.lhs.true.239, %cond.true.233
  %value289 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes290 = bitcast %union.v* %value289 to i8**
  %157 = load i8*, i8** %const_bytes290, align 8, !tbaa !1
  %call291 = call i32 @strcmp(i8* %157, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)) #8
  br label %cond.end.292

cond.end.292:                                     ; preds = %cond.false.288, %if.end.286
  %cond293 = phi i32 [ %156, %if.end.286 ], [ %call291, %cond.false.288 ]
  store i32 %cond293, i32* %tmp238, !tbaa !26
  %158 = bitcast i64* %__s2_len237 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %158) #1
  %159 = bitcast i64* %__s1_len235 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %159) #1
  %160 = load i32, i32* %tmp238, !tbaa !26
  br label %cond.end.298

cond.false.294:                                   ; preds = %if.end.229
  %value295 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes296 = bitcast %union.v* %value295 to i8**
  %161 = load i8*, i8** %const_bytes296, align 8, !tbaa !1
  %call297 = call i32 @strncmp(i8* %161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i64 7) #9
  br label %cond.end.298

cond.end.298:                                     ; preds = %cond.false.294, %cond.end.292
  %cond299 = phi i32 [ %160, %cond.end.292 ], [ %call297, %cond.false.294 ]
  %cmp300 = icmp eq i32 %cond299, 0
  br i1 %cmp300, label %if.then.302, label %if.end.303

if.then.302:                                      ; preds = %cond.end.298
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.303:                                       ; preds = %cond.end.298
  br label %if.end.304

if.end.304:                                       ; preds = %if.end.303, %if.end.87
  %tas305 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 0
  %rsize306 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas305, i32 0, i32 2
  %162 = load i32, i32* %rsize306, align 4, !tbaa !5
  %cmp307 = icmp eq i32 %162, 9
  br i1 %cmp307, label %land.lhs.true.309, label %if.end.383

land.lhs.true.309:                                ; preds = %if.end.304
  %call310 = call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0)) #9
  %cmp311 = icmp ult i64 %call310, 9
  br i1 %cmp311, label %cond.true.313, label %cond.false.374

cond.true.313:                                    ; preds = %land.lhs.true.309
  %163 = bitcast i64* %__s1_len315 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %163) #1
  %164 = bitcast i64* %__s2_len317 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %164) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 1) to i64), i64 ptrtoint ([11 x i8]* @.str.7 to i64)), i64 1), label %land.lhs.true.319, label %cond.false.368

land.lhs.true.319:                                ; preds = %cond.true.313
  %call320 = call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0)) #9
  store i64 %call320, i64* %__s2_len317, align 8, !tbaa !23
  %165 = load i64, i64* %__s2_len317, align 8, !tbaa !23
  %cmp321 = icmp ult i64 %165, 4
  br i1 %cmp321, label %cond.true.323, label %cond.false.368

cond.true.323:                                    ; preds = %land.lhs.true.319
  %166 = bitcast i8** %__s1325 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %166) #1
  %value326 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes327 = bitcast %union.v* %value326 to i8**
  %167 = load i8*, i8** %const_bytes327, align 8, !tbaa !1
  store i8* %167, i8** %__s1325, align 8, !tbaa !1
  %168 = bitcast i32* %__result329 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %168) #1
  %169 = load i8*, i8** %__s1325, align 8, !tbaa !1
  %arrayidx330 = getelementptr inbounds i8, i8* %169, i64 0
  %170 = load i8, i8* %arrayidx330, align 1, !tbaa !54
  %conv331 = zext i8 %170 to i32
  %171 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), align 1, !tbaa !54
  %conv332 = zext i8 %171 to i32
  %sub333 = sub nsw i32 %conv331, %conv332
  store i32 %sub333, i32* %__result329, align 4, !tbaa !26
  %172 = load i64, i64* %__s2_len317, align 8, !tbaa !23
  %cmp334 = icmp ugt i64 %172, 0
  br i1 %cmp334, label %land.lhs.true.336, label %if.end.366

land.lhs.true.336:                                ; preds = %cond.true.323
  %173 = load i32, i32* %__result329, align 4, !tbaa !26
  %cmp337 = icmp eq i32 %173, 0
  br i1 %cmp337, label %if.then.339, label %if.end.366

if.then.339:                                      ; preds = %land.lhs.true.336
  %174 = load i8*, i8** %__s1325, align 8, !tbaa !1
  %arrayidx340 = getelementptr inbounds i8, i8* %174, i64 1
  %175 = load i8, i8* %arrayidx340, align 1, !tbaa !54
  %conv341 = zext i8 %175 to i32
  %176 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 1), align 1, !tbaa !54
  %conv342 = zext i8 %176 to i32
  %sub343 = sub nsw i32 %conv341, %conv342
  store i32 %sub343, i32* %__result329, align 4, !tbaa !26
  %177 = load i64, i64* %__s2_len317, align 8, !tbaa !23
  %cmp344 = icmp ugt i64 %177, 1
  br i1 %cmp344, label %land.lhs.true.346, label %if.end.365

land.lhs.true.346:                                ; preds = %if.then.339
  %178 = load i32, i32* %__result329, align 4, !tbaa !26
  %cmp347 = icmp eq i32 %178, 0
  br i1 %cmp347, label %if.then.349, label %if.end.365

if.then.349:                                      ; preds = %land.lhs.true.346
  %179 = load i8*, i8** %__s1325, align 8, !tbaa !1
  %arrayidx350 = getelementptr inbounds i8, i8* %179, i64 2
  %180 = load i8, i8* %arrayidx350, align 1, !tbaa !54
  %conv351 = zext i8 %180 to i32
  %181 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 2), align 1, !tbaa !54
  %conv352 = zext i8 %181 to i32
  %sub353 = sub nsw i32 %conv351, %conv352
  store i32 %sub353, i32* %__result329, align 4, !tbaa !26
  %182 = load i64, i64* %__s2_len317, align 8, !tbaa !23
  %cmp354 = icmp ugt i64 %182, 2
  br i1 %cmp354, label %land.lhs.true.356, label %if.end.364

land.lhs.true.356:                                ; preds = %if.then.349
  %183 = load i32, i32* %__result329, align 4, !tbaa !26
  %cmp357 = icmp eq i32 %183, 0
  br i1 %cmp357, label %if.then.359, label %if.end.364

if.then.359:                                      ; preds = %land.lhs.true.356
  %184 = load i8*, i8** %__s1325, align 8, !tbaa !1
  %arrayidx360 = getelementptr inbounds i8, i8* %184, i64 3
  %185 = load i8, i8* %arrayidx360, align 1, !tbaa !54
  %conv361 = zext i8 %185 to i32
  %186 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 3), align 1, !tbaa !54
  %conv362 = zext i8 %186 to i32
  %sub363 = sub nsw i32 %conv361, %conv362
  store i32 %sub363, i32* %__result329, align 4, !tbaa !26
  br label %if.end.364

if.end.364:                                       ; preds = %if.then.359, %land.lhs.true.356, %if.then.349
  br label %if.end.365

if.end.365:                                       ; preds = %if.end.364, %land.lhs.true.346, %if.then.339
  br label %if.end.366

if.end.366:                                       ; preds = %if.end.365, %land.lhs.true.336, %cond.true.323
  %187 = load i32, i32* %__result329, align 4, !tbaa !26
  store i32 %187, i32* %tmp367, !tbaa !26
  %188 = bitcast i32* %__result329 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %188) #1
  %189 = bitcast i8** %__s1325 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %189) #1
  %190 = load i32, i32* %tmp367, !tbaa !26
  br label %cond.end.372

cond.false.368:                                   ; preds = %land.lhs.true.319, %cond.true.313
  %value369 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes370 = bitcast %union.v* %value369 to i8**
  %191 = load i8*, i8** %const_bytes370, align 8, !tbaa !1
  %call371 = call i32 @strcmp(i8* %191, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0)) #8
  br label %cond.end.372

cond.end.372:                                     ; preds = %cond.false.368, %if.end.366
  %cond373 = phi i32 [ %190, %if.end.366 ], [ %call371, %cond.false.368 ]
  store i32 %cond373, i32* %tmp318, !tbaa !26
  %192 = bitcast i64* %__s2_len317 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %192) #1
  %193 = bitcast i64* %__s1_len315 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %193) #1
  %194 = load i32, i32* %tmp318, !tbaa !26
  br label %cond.end.378

cond.false.374:                                   ; preds = %land.lhs.true.309
  %value375 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes376 = bitcast %union.v* %value375 to i8**
  %195 = load i8*, i8** %const_bytes376, align 8, !tbaa !1
  %call377 = call i32 @strncmp(i8* %195, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i64 9) #9
  br label %cond.end.378

cond.end.378:                                     ; preds = %cond.false.374, %cond.end.372
  %cond379 = phi i32 [ %194, %cond.end.372 ], [ %call377, %cond.false.374 ]
  %cmp380 = icmp eq i32 %cond379, 0
  br i1 %cmp380, label %if.then.382, label %if.end.383

if.then.382:                                      ; preds = %cond.end.378
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.383:                                       ; preds = %cond.end.378, %if.end.304
  %196 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %197 = load %struct.ref_s*, %struct.ref_s** %196, align 8, !tbaa !1
  %198 = bitcast %struct.ref_s* %197 to i8*
  %199 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %198, i8* %199, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.383, %if.then.382, %if.then.302, %if.then.228, %if.then.154, %if.then.85, %if.then.77, %if.then.70, %if.then.54, %if.then.46, %if.then.38, %if.then.29, %if.then.23, %if.then.9, %if.then.5, %if.then
  %200 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %200) #1
  %201 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.end(i64 16, i8* %201) #1
  %202 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %202) #1
  %203 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %203) #1
  %204 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %204) #1
  %205 = bitcast %struct.ref_s** %sepspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %205) #1
  %206 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %206) #1
  %207 = load i32, i32* %retval
  ret i32 %207
}

; Function Attrs: nounwind uwtable
define internal i32 @separationalternatespace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %sepspace, %struct.ref_s** %r, i32* %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %sepspace.addr = alloca %struct.ref_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %CIESubst.addr = alloca i32*, align 8
  %tref = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %sepspace, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store i32* %CIESubst, i32** %CIESubst.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %5, i64 2, %struct.ref_s* %tref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %9 = load %struct.ref_s*, %struct.ref_s** %8, align 8, !tbaa !1
  %10 = bitcast %struct.ref_s* %9 to i8*
  %11 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #1
  %13 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %13) #1
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal i32 @seprange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %0, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %1 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1
  store float 1.000000e+00, float* %arrayidx1, align 4, !tbaa !20
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @sepdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %0, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %1 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1
  store float 1.000000e+00, float* %arrayidx1, align 4, !tbaa !20
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @sepbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %use = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %use to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %7 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %8 = load i32*, i32** %stack_depth.addr, align 8, !tbaa !1
  %call = call i32 @septransform(%struct.gs_context_state_s* %5, %struct.ref_s* %6, i32* %use, i32* %7, i32* %8) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp ne i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %use, align 4, !tbaa !26
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.else.92, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %12 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %12, align 4, !tbaa !26
  %13 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %13, align 4, !tbaa !26
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack2 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 26
  %stack3 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack2, i32 0, i32 0
  %p4 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack3, i32 0, i32 0
  %15 = load %struct.ref_s*, %struct.ref_s** %p4, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i64 -1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p4, align 8, !tbaa !10
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 26
  %stack6 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack5, i32 0, i32 0
  %p7 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 0
  %17 = load %struct.ref_s*, %struct.ref_s** %p7, align 8, !tbaa !10
  store %struct.ref_s* %17, %struct.ref_s** %op, align 8, !tbaa !1
  %18 = load i32, i32* %base.addr, align 4, !tbaa !26
  switch i32 %18, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.19
    i32 2, label %sw.bb.19
    i32 3, label %sw.bb.52
  ]

sw.bb:                                            ; preds = %if.then.1
  br label %do.body

do.body:                                          ; preds = %sw.bb
  %19 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %19, i64 1
  store %struct.ref_s* %add.ptr8, %struct.ref_s** %op, align 8, !tbaa !1
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 26
  %stack10 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack9, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack10, i32 0, i32 2
  %21 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp11 = icmp ugt %struct.ref_s* %add.ptr8, %21
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack13 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %22, i32 0, i32 26
  %stack14 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack13, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack14, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.body
  %23 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack15 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 26
  %stack16 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack15, i32 0, i32 0
  %p17 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack16, i32 0, i32 0
  store %struct.ref_s* %23, %struct.ref_s** %p17, align 8, !tbaa !10
  br label %if.end.18

if.end.18:                                        ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end.18
  br label %do.end

do.end:                                           ; preds = %do.cond
  %25 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  store float 0.000000e+00, float* %realval, align 4, !tbaa !20
  %26 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 4096, i16* %type_attrs, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.19:                                         ; preds = %if.then.1, %if.then.1
  br label %do.body.20

do.body.20:                                       ; preds = %sw.bb.19
  %27 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr21 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %27, i64 3
  store %struct.ref_s* %add.ptr21, %struct.ref_s** %op, align 8, !tbaa !1
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack22 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 26
  %stack23 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack22, i32 0, i32 0
  %top24 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack23, i32 0, i32 2
  %29 = load %struct.ref_s*, %struct.ref_s** %top24, align 8, !tbaa !69
  %cmp25 = icmp ugt %struct.ref_s* %add.ptr21, %29
  br i1 %cmp25, label %if.then.26, label %if.else.30

if.then.26:                                       ; preds = %do.body.20
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 26
  %stack28 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack27, i32 0, i32 0
  %requested29 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack28, i32 0, i32 7
  store i32 3, i32* %requested29, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.30:                                       ; preds = %do.body.20
  %31 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack31 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 26
  %stack32 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack31, i32 0, i32 0
  %p33 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack32, i32 0, i32 0
  store %struct.ref_s* %31, %struct.ref_s** %p33, align 8, !tbaa !10
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.30
  br label %do.cond.35

do.cond.35:                                       ; preds = %if.end.34
  br label %do.end.36

do.end.36:                                        ; preds = %do.cond.35
  %33 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i64 -2
  %value37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %realval38 = bitcast %union.v* %value37 to float*
  store float 0.000000e+00, float* %realval38, align 4, !tbaa !20
  %34 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 -2
  %tas40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx39, i32 0, i32 0
  %type_attrs41 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas40, i32 0, i32 0
  store i16 4096, i16* %type_attrs41, align 2, !tbaa !22
  %35 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i64 -1
  %value43 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx42, i32 0, i32 1
  %realval44 = bitcast %union.v* %value43 to float*
  store float 0.000000e+00, float* %realval44, align 4, !tbaa !20
  %36 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i64 -1
  %tas46 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx45, i32 0, i32 0
  %type_attrs47 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas46, i32 0, i32 0
  store i16 4096, i16* %type_attrs47, align 2, !tbaa !22
  %37 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 1
  %realval49 = bitcast %union.v* %value48 to float*
  store float 0.000000e+00, float* %realval49, align 4, !tbaa !20
  %38 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i32 0, i32 0
  %type_attrs51 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas50, i32 0, i32 0
  store i16 4096, i16* %type_attrs51, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.52:                                         ; preds = %if.then.1
  br label %do.body.53

do.body.53:                                       ; preds = %sw.bb.52
  %39 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr54 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i64 4
  store %struct.ref_s* %add.ptr54, %struct.ref_s** %op, align 8, !tbaa !1
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 26
  %stack56 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack55, i32 0, i32 0
  %top57 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack56, i32 0, i32 2
  %41 = load %struct.ref_s*, %struct.ref_s** %top57, align 8, !tbaa !69
  %cmp58 = icmp ugt %struct.ref_s* %add.ptr54, %41
  br i1 %cmp58, label %if.then.59, label %if.else.63

if.then.59:                                       ; preds = %do.body.53
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 26
  %stack61 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack60, i32 0, i32 0
  %requested62 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack61, i32 0, i32 7
  store i32 4, i32* %requested62, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.63:                                       ; preds = %do.body.53
  %43 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack64 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %44, i32 0, i32 26
  %stack65 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack64, i32 0, i32 0
  %p66 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack65, i32 0, i32 0
  store %struct.ref_s* %43, %struct.ref_s** %p66, align 8, !tbaa !10
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.63
  br label %do.cond.68

do.cond.68:                                       ; preds = %if.end.67
  br label %do.end.69

do.end.69:                                        ; preds = %do.cond.68
  %45 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %45, i64 -3
  %value71 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx70, i32 0, i32 1
  %realval72 = bitcast %union.v* %value71 to float*
  store float 0.000000e+00, float* %realval72, align 4, !tbaa !20
  %46 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i64 -3
  %tas74 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx73, i32 0, i32 0
  %type_attrs75 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas74, i32 0, i32 0
  store i16 4096, i16* %type_attrs75, align 2, !tbaa !22
  %47 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i64 -2
  %value77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx76, i32 0, i32 1
  %realval78 = bitcast %union.v* %value77 to float*
  store float 0.000000e+00, float* %realval78, align 4, !tbaa !20
  %48 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %48, i64 -2
  %tas80 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx79, i32 0, i32 0
  %type_attrs81 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas80, i32 0, i32 0
  store i16 4096, i16* %type_attrs81, align 2, !tbaa !22
  %49 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i64 -1
  %value83 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx82, i32 0, i32 1
  %realval84 = bitcast %union.v* %value83 to float*
  store float 0.000000e+00, float* %realval84, align 4, !tbaa !20
  %50 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 -1
  %tas86 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx85, i32 0, i32 0
  %type_attrs87 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas86, i32 0, i32 0
  store i16 4096, i16* %type_attrs87, align 2, !tbaa !22
  %51 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 0, i32 1
  %realval89 = bitcast %union.v* %value88 to float*
  store float 0.000000e+00, float* %realval89, align 4, !tbaa !20
  %52 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas90 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 0, i32 0
  %type_attrs91 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas90, i32 0, i32 0
  store i16 4096, i16* %type_attrs91, align 2, !tbaa !22
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.1, %do.end.69, %do.end.36, %do.end
  br label %if.end.93

if.else.92:                                       ; preds = %if.end
  %53 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %53, align 4, !tbaa !26
  %54 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %54, align 4, !tbaa !26
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.92, %sw.epilog
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.93, %if.then.59, %if.then.26, %if.then.12, %if.then
  %55 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %55) #1
  %56 = bitcast i32* %use to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57) #1
  %58 = load i32, i32* %retval
  ret i32 %58
}

; Function Attrs: nounwind uwtable
define internal i32 @septransform(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %sepspace, i32* %usealternate, i32* %stage, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %sepspace.addr = alloca %struct.ref_s*, align 8
  %usealternate.addr = alloca i32*, align 8
  %stage.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %dev = alloca %struct.gx_device_s*, align 8
  %sname = alloca %struct.ref_s, align 8
  %proc = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %colorant_number = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %sepspace, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  store i32* %usealternate, i32** %usealternate.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 0
  %2 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %device = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %2, i32 0, i32 78
  %3 = load %struct.gx_device_s*, %struct.gx_device_s** %device, align 8, !tbaa !82
  store %struct.gx_device_s* %3, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %4 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %colorant_number to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %sname) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %12, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %14 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 1
  %15 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %15 to i32
  %cmp1 = icmp eq i32 %conv, 13
  br i1 %cmp1, label %if.then.3, label %if.end.6

if.then.3:                                        ; preds = %if.end
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory4 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 1
  %current5 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory4, i32 0, i32 0
  %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current5, align 8, !tbaa !55
  %18 = bitcast %struct.gs_ref_memory_s* %17 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %18, i32 0, i32 2
  %19 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %19, i32 0, i32 16
  %20 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  call void @names_string_ref(%struct.name_table_s* %20, %struct.ref_s* %sname, %struct.ref_s* %sname) #7
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.3, %if.end
  %tas7 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas7, i32 0, i32 2
  %21 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp8 = icmp eq i32 %21, 3
  br i1 %cmp8, label %land.lhs.true, label %if.end.17

land.lhs.true:                                    ; preds = %if.end.6
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %bytes = bitcast %union.v* %value to i8**
  %22 = load i8*, i8** %bytes, align 8, !tbaa !1
  %tas10 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize11 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas10, i32 0, i32 2
  %23 = load i32, i32* %rsize11, align 4, !tbaa !5
  %conv12 = zext i32 %23 to i64
  %call13 = call i32 @strncmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0), i8* %22, i64 %conv12) #9
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %land.lhs.true
  %24 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  store i32 0, i32* %24, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %land.lhs.true, %if.end.6
  %tas18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize19 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas18, i32 0, i32 2
  %25 = load i32, i32* %rsize19, align 4, !tbaa !5
  %cmp20 = icmp eq i32 %25, 4
  br i1 %cmp20, label %land.lhs.true.22, label %if.end.32

land.lhs.true.22:                                 ; preds = %if.end.17
  %value23 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %bytes24 = bitcast %union.v* %value23 to i8**
  %26 = load i8*, i8** %bytes24, align 8, !tbaa !1
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 2
  %27 = load i32, i32* %rsize26, align 4, !tbaa !5
  %conv27 = zext i32 %27 to i64
  %call28 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* %26, i64 %conv27) #9
  %cmp29 = icmp eq i32 %call28, 0
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %land.lhs.true.22
  %28 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  store i32 0, i32* %28, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %land.lhs.true.22, %if.end.17
  %29 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %29, i32 0, i32 42
  %get_color_comp_index = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 50
  %30 = load i32 (%struct.gx_device_s*, i8*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index, align 8, !tbaa !83
  %31 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %value33 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %bytes34 = bitcast %union.v* %value33 to i8**
  %32 = load i8*, i8** %bytes34, align 8, !tbaa !1
  %tas35 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize36 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas35, i32 0, i32 2
  %33 = load i32, i32* %rsize36, align 4, !tbaa !5
  %call37 = call i32 %30(%struct.gx_device_s* %31, i8* %32, i32 %33, i32 1) #7
  store i32 %call37, i32* %colorant_number, align 4, !tbaa !26
  %34 = load i32, i32* %colorant_number, align 4, !tbaa !26
  %cmp38 = icmp sge i32 %34, 0
  br i1 %cmp38, label %if.then.40, label %if.else

if.then.40:                                       ; preds = %if.end.32
  %35 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  store i32 0, i32* %35, align 4, !tbaa !26
  br label %if.end.41

if.else:                                          ; preds = %if.end.32
  %36 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  store i32 1, i32* %36, align 4, !tbaa !26
  br label %if.end.41

if.end.41:                                        ; preds = %if.else, %if.then.40
  %37 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  %38 = load i32, i32* %37, align 4, !tbaa !26
  %tobool = icmp ne i32 %38, 0
  br i1 %tobool, label %land.lhs.true.42, label %if.end.56

land.lhs.true.42:                                 ; preds = %if.end.41
  %39 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %40 = load i32, i32* %39, align 4, !tbaa !26
  %cmp43 = icmp eq i32 %40, 0
  br i1 %cmp43, label %if.then.45, label %if.end.56

if.then.45:                                       ; preds = %land.lhs.true.42
  %41 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %42 = load i32, i32* %41, align 4, !tbaa !26
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %41, align 4, !tbaa !26
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %44 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p, align 8, !tbaa !27
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory46 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 1
  %current47 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory46, i32 0, i32 0
  %46 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current47, align 8, !tbaa !55
  %47 = bitcast %struct.gs_ref_memory_s* %46 to %struct.gs_memory_s*
  %48 = load %struct.ref_s*, %struct.ref_s** %sepspace.addr, align 8, !tbaa !1
  %call48 = call i32 @array_get(%struct.gs_memory_s* %47, %struct.ref_s* %48, i64 3, %struct.ref_s* %proc) #7
  store i32 %call48, i32* %code, align 4, !tbaa !26
  %49 = load i32, i32* %code, align 4, !tbaa !26
  %cmp49 = icmp slt i32 %49, 0
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.then.45
  %50 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %50, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %if.then.45
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack53 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 25
  %stack54 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack53, i32 0, i32 0
  %p55 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack54, i32 0, i32 0
  %52 = load %struct.ref_s*, %struct.ref_s** %p55, align 8, !tbaa !27
  %53 = bitcast %struct.ref_s* %52 to i8*
  %54 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.56:                                        ; preds = %land.lhs.true.42, %if.end.41
  %55 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %55, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.56, %if.end.52, %if.then.51, %if.then.31, %if.then.16, %if.then
  %56 = bitcast i32* %colorant_number to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.end(i64 16, i8* %58) #1
  %59 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %59) #1
  %60 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %60) #1
  %61 = load i32, i32* %retval
  ret i32 %61
}

; Function Attrs: nounwind uwtable
define internal i32 @sepvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %3, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %4, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %5 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 1
  %6 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %6 to i32
  %cmp1 = icmp eq i32 %conv, 11
  br i1 %cmp1, label %if.end.10, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %8 = bitcast i16* %type_attrs4 to i8*
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx5, align 1, !tbaa !54
  %conv6 = zext i8 %9 to i32
  %cmp7 = icmp eq i32 %conv6, 16
  br i1 %cmp7, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %land.lhs.true, %if.end
  %10 = load float*, float** %values.addr, align 8, !tbaa !1
  %11 = load float, float* %10, align 4, !tbaa !20
  %conv11 = fpext float %11 to double
  %cmp12 = fcmp ogt double %conv11, 1.000000e+00
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.10
  %12 = load float*, float** %values.addr, align 8, !tbaa !1
  store float 1.000000e+00, float* %12, align 4, !tbaa !20
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %if.end.10
  %13 = load float*, float** %values.addr, align 8, !tbaa !1
  %14 = load float, float* %13, align 4, !tbaa !20
  %conv16 = fpext float %14 to double
  %cmp17 = fcmp olt double %conv16, 0.000000e+00
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.15
  %15 = load float*, float** %values.addr, align 8, !tbaa !1
  store float 0.000000e+00, float* %15, align 4, !tbaa !20
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.19, %if.end.15
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.20, %if.then.9, %if.then
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @sepcompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  %sname1 = alloca %struct.ref_s, align 8
  %sname2 = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %sname1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s* %sname2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %sname1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call3 = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %sname2) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %13 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %14 to i32
  %tas7 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 0
  %type_attrs8 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas7, i32 0, i32 0
  %15 = bitcast i16* %type_attrs8 to i8*
  %arrayidx9 = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx9, align 1, !tbaa !54
  %conv10 = zext i8 %16 to i32
  %cmp11 = icmp ne i32 %conv, %conv10
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.6
  %tas15 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs16 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas15, i32 0, i32 0
  %17 = bitcast i16* %type_attrs16 to i8*
  %arrayidx17 = getelementptr inbounds i8, i8* %17, i64 1
  %18 = load i8, i8* %arrayidx17, align 1, !tbaa !54
  %conv18 = zext i8 %18 to i32
  switch i32 %conv18, label %sw.default [
    i32 13, label %sw.bb
    i32 18, label %sw.bb.25
  ]

sw.bb:                                            ; preds = %if.end.14
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 1
  %pname = bitcast %union.v* %value to %struct.name_s**
  %19 = load %struct.name_s*, %struct.name_s** %pname, align 8, !tbaa !1
  %value19 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 1
  %pname20 = bitcast %union.v* %value19 to %struct.name_s**
  %20 = load %struct.name_s*, %struct.name_s** %pname20, align 8, !tbaa !1
  %cmp21 = icmp eq %struct.name_s* %19, %20
  br i1 %cmp21, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %sw.bb
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %sw.bb
  br label %sw.epilog

sw.bb.25:                                         ; preds = %if.end.14
  %tas26 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas26, i32 0, i32 2
  %21 = load i32, i32* %rsize, align 4, !tbaa !5
  %tas27 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 0
  %rsize28 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas27, i32 0, i32 2
  %22 = load i32, i32* %rsize28, align 4, !tbaa !5
  %cmp29 = icmp ne i32 %21, %22
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %sw.bb.25
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %sw.bb.25
  %value33 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value33 to i8**
  %23 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  %value34 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 1
  %const_bytes35 = bitcast %union.v* %value34 to i8**
  %24 = load i8*, i8** %const_bytes35, align 8, !tbaa !1
  %tas36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %rsize37 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas36, i32 0, i32 2
  %25 = load i32, i32* %rsize37, align 4, !tbaa !5
  %conv38 = zext i32 %25 to i64
  %call39 = call i32 @strncmp(i8* %23, i8* %24, i64 %conv38) #9
  %cmp40 = icmp ne i32 %call39, 0
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.end.32
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.43:                                        ; preds = %if.end.32
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.14
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %if.end.43, %if.end.24
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory44 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 1
  %current45 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory44, i32 0, i32 0
  %27 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current45, align 8, !tbaa !55
  %28 = bitcast %struct.gs_ref_memory_s* %27 to %struct.gs_memory_s*
  %29 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call46 = call i32 @array_get(%struct.gs_memory_s* %28, %struct.ref_s* %29, i64 2, %struct.ref_s* %sname1) #7
  store i32 %call46, i32* %code, align 4, !tbaa !26
  %30 = load i32, i32* %code, align 4, !tbaa !26
  %cmp47 = icmp slt i32 %30, 0
  br i1 %cmp47, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %sw.epilog
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.50:                                        ; preds = %sw.epilog
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory51 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 1
  %current52 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory51, i32 0, i32 0
  %32 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current52, align 8, !tbaa !55
  %33 = bitcast %struct.gs_ref_memory_s* %32 to %struct.gs_memory_s*
  %34 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call53 = call i32 @array_get(%struct.gs_memory_s* %33, %struct.ref_s* %34, i64 2, %struct.ref_s* %sname2) #7
  store i32 %call53, i32* %code, align 4, !tbaa !26
  %35 = load i32, i32* %code, align 4, !tbaa !26
  %cmp54 = icmp slt i32 %35, 0
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.50
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.57:                                        ; preds = %if.end.50
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  %36 = bitcast i16* %type_attrs59 to i8*
  %arrayidx60 = getelementptr inbounds i8, i8* %36, i64 1
  %37 = load i8, i8* %arrayidx60, align 1, !tbaa !54
  %conv61 = zext i8 %37 to i32
  %tas62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 0
  %type_attrs63 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas62, i32 0, i32 0
  %38 = bitcast i16* %type_attrs63 to i8*
  %arrayidx64 = getelementptr inbounds i8, i8* %38, i64 1
  %39 = load i8, i8* %arrayidx64, align 1, !tbaa !54
  %conv65 = zext i8 %39 to i32
  %cmp66 = icmp ne i32 %conv61, %conv65
  br i1 %cmp66, label %if.then.68, label %if.end.69

if.then.68:                                       ; preds = %if.end.57
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.69:                                        ; preds = %if.end.57
  %tas70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs71 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas70, i32 0, i32 0
  %40 = load i16, i16* %type_attrs71, align 2, !tbaa !22
  %conv72 = zext i16 %40 to i32
  %and = and i32 %conv72, 15360
  %cmp73 = icmp eq i32 %and, 1024
  br i1 %cmp73, label %if.then.75, label %if.else

if.then.75:                                       ; preds = %if.end.69
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call76 = call i32 @comparearrays(%struct.gs_context_state_s* %41, %struct.ref_s* %sname1, %struct.ref_s* %sname2) #7
  %tobool = icmp ne i32 %call76, 0
  br i1 %tobool, label %if.end.78, label %if.then.77

if.then.77:                                       ; preds = %if.then.75
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.78:                                        ; preds = %if.then.75
  br label %if.end.95

if.else:                                          ; preds = %if.end.69
  %tas79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs80 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas79, i32 0, i32 0
  %42 = bitcast i16* %type_attrs80 to i8*
  %arrayidx81 = getelementptr inbounds i8, i8* %42, i64 1
  %43 = load i8, i8* %arrayidx81, align 1, !tbaa !54
  %conv82 = zext i8 %43 to i32
  %cmp83 = icmp eq i32 %conv82, 13
  br i1 %cmp83, label %if.end.86, label %if.then.85

if.then.85:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.86:                                        ; preds = %if.else
  %value87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 1
  %pname88 = bitcast %union.v* %value87 to %struct.name_s**
  %44 = load %struct.name_s*, %struct.name_s** %pname88, align 8, !tbaa !1
  %value89 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 1
  %pname90 = bitcast %union.v* %value89 to %struct.name_s**
  %45 = load %struct.name_s*, %struct.name_s** %pname90, align 8, !tbaa !1
  %cmp91 = icmp eq %struct.name_s* %44, %45
  br i1 %cmp91, label %if.end.94, label %if.then.93

if.then.93:                                       ; preds = %if.end.86
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.94:                                        ; preds = %if.end.86
  br label %if.end.95

if.end.95:                                        ; preds = %if.end.94, %if.end.78
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory96 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 1
  %current97 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory96, i32 0, i32 0
  %47 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current97, align 8, !tbaa !55
  %48 = bitcast %struct.gs_ref_memory_s* %47 to %struct.gs_memory_s*
  %49 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call98 = call i32 @array_get(%struct.gs_memory_s* %48, %struct.ref_s* %49, i64 3, %struct.ref_s* %sname1) #7
  store i32 %call98, i32* %code, align 4, !tbaa !26
  %50 = load i32, i32* %code, align 4, !tbaa !26
  %cmp99 = icmp slt i32 %50, 0
  br i1 %cmp99, label %if.then.101, label %if.end.102

if.then.101:                                      ; preds = %if.end.95
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.102:                                       ; preds = %if.end.95
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory103 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 1
  %current104 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory103, i32 0, i32 0
  %52 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current104, align 8, !tbaa !55
  %53 = bitcast %struct.gs_ref_memory_s* %52 to %struct.gs_memory_s*
  %54 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call105 = call i32 @array_get(%struct.gs_memory_s* %53, %struct.ref_s* %54, i64 3, %struct.ref_s* %sname2) #7
  store i32 %call105, i32* %code, align 4, !tbaa !26
  %55 = load i32, i32* %code, align 4, !tbaa !26
  %cmp106 = icmp slt i32 %55, 0
  br i1 %cmp106, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %if.end.102
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.109:                                       ; preds = %if.end.102
  %56 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call110 = call i32 @comparearrays(%struct.gs_context_state_s* %56, %struct.ref_s* %sname1, %struct.ref_s* %sname2) #7
  store i32 %call110, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.109, %if.then.108, %if.then.101, %if.then.93, %if.then.85, %if.then.77, %if.then.68, %if.then.56, %if.then.49, %sw.default, %if.then.42, %if.then.31, %if.then.23, %if.then.13, %if.then.5, %if.then
  %57 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = bitcast %struct.ref_s* %sname2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %58) #1
  %59 = bitcast %struct.ref_s* %sname1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %59) #1
  %60 = load i32, i32* %retval
  ret i32 %60
}

; Function Attrs: nounwind uwtable
define internal i32 @sepinitialproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %0) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 1.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 0
  %2 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call i32 @gs_setcolor(%struct.gs_state_s* %2, %struct.gs_client_color_s* %cc) #7
  %3 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %3) #1
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @setdevicenspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %devicenspace, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %devicenspace.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %num_components = alloca i32, align 4
  %i = alloca i32, align 4
  %namesarray = alloca %struct.ref_s, align 8
  %proc = alloca %struct.ref_s, align 8
  %sname = alloca %struct.ref_s, align 8
  %tname = alloca %struct.ref_s, align 8
  %sref = alloca %struct.ref_s, align 8
  %cspace_old = alloca %struct.ref_colorspace_s, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %pacs = alloca %struct.gs_color_space_s*, align 8
  %pfn = alloca %struct.gs_function_s*, align 8
  %names = alloca i64*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  %cleanup.dest.slot = alloca i32
  %colorants = alloca %struct.ref_s*, align 8
  %es_code_ = alloca i32, align 4
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp227 = alloca i32, align 4
  %sep_type = alloca i32, align 4
  %i332 = alloca i32, align 4
  %sname334 = alloca %struct.ref_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %devicenspace, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %4 = bitcast i32* %num_components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.start(i64 16, i8* %7) #1
  %8 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %9 = bitcast %struct.ref_s* %tname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %9) #1
  %10 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #1
  %11 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.lifetime.start(i64 96, i8* %11) #1
  %12 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %13 = bitcast %struct.gs_color_space_s** %pacs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = bitcast %struct.gs_function_s** %pfn to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #1
  store %struct.gs_function_s* null, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %15 = bitcast i64** %names to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  %16 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %16) #1
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 2
  %18 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %18, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end:                                           ; preds = %entry
  %19 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %19, align 4, !tbaa !26
  %20 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %21 = load i32, i32* %20, align 4, !tbaa !26
  %cmp1 = icmp eq i32 %21, 2
  br i1 %cmp1, label %if.then.2, label %if.end.111

if.then.2:                                        ; preds = %if.end
  %22 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %23 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp eq i32 %23, 5
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then.2
  %24 = bitcast %struct.ref_s** %colorants to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #1
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %26 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %27 = bitcast %struct.gs_ref_memory_s* %26 to %struct.gs_memory_s*
  %28 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %27, %struct.ref_s* %28, i64 4, %struct.ref_s* %sref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %29 = load i32, i32* %code, align 4, !tbaa !26
  %cmp5 = icmp slt i32 %29, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.then.4
  %30 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %30, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

if.end.7:                                         ; preds = %if.then.4
  %tas8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas8, i32 0, i32 0
  %31 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %31, i64 1
  %32 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %32 to i32
  %cmp9 = icmp eq i32 %conv, 2
  br i1 %cmp9, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.7
  %33 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %33, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

if.end.12:                                        ; preds = %if.end.7
  %call13 = call i32 @dict_find_string(%struct.ref_s* %sref, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0), %struct.ref_s** %colorants) #7
  %cmp14 = icmp sle i32 %call13, 0
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.12
  %34 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %34, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

if.end.17:                                        ; preds = %if.end.12
  %35 = load %struct.ref_s*, %struct.ref_s** %colorants, align 8, !tbaa !1
  %tas18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i32 0, i32 0
  %type_attrs19 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas18, i32 0, i32 0
  %36 = bitcast i16* %type_attrs19 to i8*
  %arrayidx20 = getelementptr inbounds i8, i8* %36, i64 1
  %37 = load i8, i8* %arrayidx20, align 1, !tbaa !54
  %conv21 = zext i8 %37 to i32
  %cmp22 = icmp eq i32 %conv21, 2
  br i1 %cmp22, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.17
  %38 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %38, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

if.end.25:                                        ; preds = %if.end.17
  %39 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 3, i32* %39, align 4, !tbaa !26
  %40 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %40, align 4, !tbaa !26
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p27 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack26, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p27, align 8, !tbaa !27
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack28 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 25
  %stack29 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack28, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack29, i32 0, i32 2
  %44 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i64 -5
  %cmp30 = icmp ugt %struct.ref_s* %42, %add.ptr
  br i1 %cmp30, label %if.then.32, label %if.end.40

if.then.32:                                       ; preds = %if.end.25
  %45 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %45) #1
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %call35 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack34, i32 5) #7
  store i32 %call35, i32* %es_code_, align 4, !tbaa !26
  %47 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp36 = icmp slt i32 %47, 0
  br i1 %cmp36, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %if.then.32
  %48 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %48, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.then.32
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.39, %if.then.38
  %49 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.110 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.40

if.end.40:                                        ; preds = %cleanup.cont, %if.end.25
  %50 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %50, i32 0, i32 25
  %stack42 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack41, i32 0, i32 0
  %p43 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack42, i32 0, i32 0
  %51 = load %struct.ref_s*, %struct.ref_s** %p43, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p43, align 8, !tbaa !27
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack44 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 25
  %stack45 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack44, i32 0, i32 0
  %p46 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack45, i32 0, i32 0
  %53 = load %struct.ref_s*, %struct.ref_s** %p46, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %53, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack47 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 25
  %stack48 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack47, i32 0, i32 0
  %p49 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack48, i32 0, i32 0
  %55 = load %struct.ref_s*, %struct.ref_s** %p49, align 8, !tbaa !27
  %tas50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i32 0, i32 0
  %type_attrs51 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas50, i32 0, i32 0
  store i16 3712, i16* %type_attrs51, align 2, !tbaa !22
  %56 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack52 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %56, i32 0, i32 25
  %stack53 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack52, i32 0, i32 0
  %p54 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack53, i32 0, i32 0
  %57 = load %struct.ref_s*, %struct.ref_s** %p54, align 8, !tbaa !27
  %tas55 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %57, i32 0, i32 0
  %rsize56 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas55, i32 0, i32 2
  store i32 0, i32* %rsize56, align 4, !tbaa !5
  %58 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack57 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %58, i32 0, i32 25
  %stack58 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack57, i32 0, i32 0
  %p59 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack58, i32 0, i32 0
  %59 = load %struct.ref_s*, %struct.ref_s** %p59, align 8, !tbaa !27
  %incdec.ptr60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %59, i32 1
  store %struct.ref_s* %incdec.ptr60, %struct.ref_s** %p59, align 8, !tbaa !27
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack61 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %60, i32 0, i32 25
  %stack62 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack61, i32 0, i32 0
  %p63 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack62, i32 0, i32 0
  %61 = load %struct.ref_s*, %struct.ref_s** %p63, align 8, !tbaa !27
  %value64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %61, i32 0, i32 1
  %intval = bitcast %union.v* %value64 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack65 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 25
  %stack66 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack65, i32 0, i32 0
  %p67 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack66, i32 0, i32 0
  %63 = load %struct.ref_s*, %struct.ref_s** %p67, align 8, !tbaa !27
  %tas68 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %63, i32 0, i32 0
  %type_attrs69 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas68, i32 0, i32 0
  store i16 2816, i16* %type_attrs69, align 2, !tbaa !22
  %64 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack70 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %64, i32 0, i32 25
  %stack71 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack70, i32 0, i32 0
  %p72 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack71, i32 0, i32 0
  %65 = load %struct.ref_s*, %struct.ref_s** %p72, align 8, !tbaa !27
  %incdec.ptr73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %65, i32 1
  store %struct.ref_s* %incdec.ptr73, %struct.ref_s** %p72, align 8, !tbaa !27
  %66 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack74 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %66, i32 0, i32 25
  %stack75 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack74, i32 0, i32 0
  %p76 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack75, i32 0, i32 0
  %67 = load %struct.ref_s*, %struct.ref_s** %p76, align 8, !tbaa !27
  %value77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %67, i32 0, i32 1
  %intval78 = bitcast %union.v* %value77 to i64*
  store i64 0, i64* %intval78, align 8, !tbaa !23
  %68 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack79 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %68, i32 0, i32 25
  %stack80 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack79, i32 0, i32 0
  %p81 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack80, i32 0, i32 0
  %69 = load %struct.ref_s*, %struct.ref_s** %p81, align 8, !tbaa !27
  %tas82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %69, i32 0, i32 0
  %type_attrs83 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas82, i32 0, i32 0
  store i16 2816, i16* %type_attrs83, align 2, !tbaa !22
  %70 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack84 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %70, i32 0, i32 25
  %stack85 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack84, i32 0, i32 0
  %p86 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack85, i32 0, i32 0
  %71 = load %struct.ref_s*, %struct.ref_s** %p86, align 8, !tbaa !27
  %incdec.ptr87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %71, i32 1
  store %struct.ref_s* %incdec.ptr87, %struct.ref_s** %p86, align 8, !tbaa !27
  %72 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %72, i32 0, i32 25
  %stack89 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack88, i32 0, i32 0
  %p90 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack89, i32 0, i32 0
  %73 = load %struct.ref_s*, %struct.ref_s** %p90, align 8, !tbaa !27
  %74 = load %struct.ref_s*, %struct.ref_s** %colorants, align 8, !tbaa !1
  %75 = bitcast %struct.ref_s* %73 to i8*
  %76 = bitcast %struct.ref_s* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 16, i32 8, i1 false), !tbaa.struct !24
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack91 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %77, i32 0, i32 25
  %stack92 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack91, i32 0, i32 0
  %p93 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack92, i32 0, i32 0
  %78 = load %struct.ref_s*, %struct.ref_s** %p93, align 8, !tbaa !27
  %incdec.ptr94 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %78, i32 1
  store %struct.ref_s* %incdec.ptr94, %struct.ref_s** %p93, align 8, !tbaa !27
  %79 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack95 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %79, i32 0, i32 25
  %stack96 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack95, i32 0, i32 0
  %p97 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack96, i32 0, i32 0
  %80 = load %struct.ref_s*, %struct.ref_s** %p97, align 8, !tbaa !27
  %value98 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %80, i32 0, i32 1
  %opproc99 = bitcast %union.v* %value98 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @devicencolorants_cont, i32 (%struct.gs_context_state_s*)** %opproc99, align 8, !tbaa !1
  %81 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack100 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %81, i32 0, i32 25
  %stack101 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack100, i32 0, i32 0
  %p102 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack101, i32 0, i32 0
  %82 = load %struct.ref_s*, %struct.ref_s** %p102, align 8, !tbaa !27
  %tas103 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %82, i32 0, i32 0
  %type_attrs104 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas103, i32 0, i32 0
  store i16 3968, i16* %type_attrs104, align 2, !tbaa !22
  %83 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack105 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %83, i32 0, i32 25
  %stack106 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack105, i32 0, i32 0
  %p107 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack106, i32 0, i32 0
  %84 = load %struct.ref_s*, %struct.ref_s** %p107, align 8, !tbaa !27
  %tas108 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %84, i32 0, i32 0
  %rsize109 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas108, i32 0, i32 2
  store i32 0, i32* %rsize109, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.110

cleanup.110:                                      ; preds = %if.end.40, %cleanup, %if.then.24, %if.then.16, %if.then.11, %if.then.6
  %85 = bitcast %struct.ref_s** %colorants to i8*
  call void @llvm.lifetime.end(i64 8, i8* %85) #1
  br label %cleanup.424

if.else:                                          ; preds = %if.then.2
  %86 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %86, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.111:                                       ; preds = %if.end
  %87 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %88 = load i32, i32* %87, align 4, !tbaa !26
  %cmp112 = icmp eq i32 %88, 3
  br i1 %cmp112, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %if.end.111
  %89 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %89, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.115:                                       ; preds = %if.end.111
  %90 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %91 = load i32, i32* %90, align 4, !tbaa !26
  %cmp116 = icmp eq i32 %91, 0
  br i1 %cmp116, label %if.then.118, label %if.else.148

if.then.118:                                      ; preds = %if.end.115
  %92 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory119 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %92, i32 0, i32 1
  %current120 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory119, i32 0, i32 0
  %93 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current120, align 8, !tbaa !55
  %94 = bitcast %struct.gs_ref_memory_s* %93 to %struct.gs_memory_s*
  %95 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call121 = call i32 @array_get(%struct.gs_memory_s* %94, %struct.ref_s* %95, i64 3, %struct.ref_s* %proc) #7
  store i32 %call121, i32* %code, align 4, !tbaa !26
  %96 = load i32, i32* %code, align 4, !tbaa !26
  %cmp122 = icmp slt i32 %96, 0
  br i1 %cmp122, label %if.then.124, label %if.end.125

if.then.124:                                      ; preds = %if.then.118
  %97 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %97, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.125:                                       ; preds = %if.then.118
  %call126 = call %struct.gs_function_s* @ref_function(%struct.ref_s* %proc) #7
  store %struct.gs_function_s* %call126, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %98 = load %struct.gs_function_s*, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %cmp127 = icmp eq %struct.gs_function_s* %98, null
  br i1 %cmp127, label %if.then.129, label %if.end.147

if.then.129:                                      ; preds = %if.end.125
  %99 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %100 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call130 = call i32 @convert_transform(%struct.gs_context_state_s* %99, %struct.ref_s* %100, %struct.ref_s* %proc) #7
  store i32 %call130, i32* %code, align 4, !tbaa !26
  %101 = load i32, i32* %code, align 4, !tbaa !26
  %cmp131 = icmp slt i32 %101, 0
  br i1 %cmp131, label %if.then.133, label %if.end.134

if.then.133:                                      ; preds = %if.then.129
  %102 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %102, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.134:                                       ; preds = %if.then.129
  %103 = load i32, i32* %code, align 4, !tbaa !26
  %cmp135 = icmp sgt i32 %103, 0
  br i1 %cmp135, label %if.then.137, label %if.end.138

if.then.137:                                      ; preds = %if.end.134
  %104 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %104, align 4, !tbaa !26
  %105 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %105, align 4, !tbaa !26
  %106 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %106, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.138:                                       ; preds = %if.end.134
  %107 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack139 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %107, i32 0, i32 26
  %stack140 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack139, i32 0, i32 0
  %p141 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack140, i32 0, i32 0
  %108 = load %struct.ref_s*, %struct.ref_s** %p141, align 8, !tbaa !10
  store %struct.ref_s* %108, %struct.ref_s** %op, align 8, !tbaa !1
  %109 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call142 = call %struct.gs_function_s* @ref_function(%struct.ref_s* %109) #7
  store %struct.gs_function_s* %call142, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %110 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack143 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %110, i32 0, i32 26
  %stack144 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack143, i32 0, i32 0
  %p145 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack144, i32 0, i32 0
  %111 = load %struct.ref_s*, %struct.ref_s** %p145, align 8, !tbaa !10
  %add.ptr146 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %111, i64 -1
  store %struct.ref_s* %add.ptr146, %struct.ref_s** %p145, align 8, !tbaa !10
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.138, %if.end.125
  br label %if.end.157

if.else.148:                                      ; preds = %if.end.115
  %112 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack149 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %112, i32 0, i32 26
  %stack150 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack149, i32 0, i32 0
  %p151 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack150, i32 0, i32 0
  %113 = load %struct.ref_s*, %struct.ref_s** %p151, align 8, !tbaa !10
  store %struct.ref_s* %113, %struct.ref_s** %op, align 8, !tbaa !1
  %114 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call152 = call %struct.gs_function_s* @ref_function(%struct.ref_s* %114) #7
  store %struct.gs_function_s* %call152, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %115 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack153 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %115, i32 0, i32 26
  %stack154 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack153, i32 0, i32 0
  %p155 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack154, i32 0, i32 0
  %116 = load %struct.ref_s*, %struct.ref_s** %p155, align 8, !tbaa !10
  %add.ptr156 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %116, i64 -1
  store %struct.ref_s* %add.ptr156, %struct.ref_s** %p155, align 8, !tbaa !10
  br label %if.end.157

if.end.157:                                       ; preds = %if.else.148, %if.end.147
  %117 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 2, i32* %117, align 4, !tbaa !26
  %118 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory158 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %118, i32 0, i32 1
  %current159 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory158, i32 0, i32 0
  %119 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current159, align 8, !tbaa !55
  %120 = bitcast %struct.gs_ref_memory_s* %119 to %struct.gs_memory_s*
  %121 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call160 = call i32 @array_get(%struct.gs_memory_s* %120, %struct.ref_s* %121, i64 1, %struct.ref_s* %namesarray) #7
  store i32 %call160, i32* %code, align 4, !tbaa !26
  %122 = load i32, i32* %code, align 4, !tbaa !26
  %cmp161 = icmp slt i32 %122, 0
  br i1 %cmp161, label %if.then.163, label %if.end.164

if.then.163:                                      ; preds = %if.end.157
  %123 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %123, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.164:                                       ; preds = %if.end.157
  %tas165 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %rsize166 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas165, i32 0, i32 2
  %124 = load i32, i32* %rsize166, align 4, !tbaa !5
  store i32 %124, i32* %num_components, align 4, !tbaa !26
  %125 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %125, i32 0, i32 0
  %126 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call167 = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %126) #7
  store %struct.gs_color_space_s* %call167, %struct.gs_color_space_s** %pacs, align 8, !tbaa !1
  %127 = load i32, i32* %num_components, align 4, !tbaa !26
  %cmp168 = icmp eq i32 %127, 1
  br i1 %cmp168, label %if.then.170, label %if.end.318

if.then.170:                                      ; preds = %if.end.164
  %128 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory171 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %128, i32 0, i32 1
  %current172 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory171, i32 0, i32 0
  %129 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current172, align 8, !tbaa !55
  %130 = bitcast %struct.gs_ref_memory_s* %129 to %struct.gs_memory_s*
  %call173 = call i32 @array_get(%struct.gs_memory_s* %130, %struct.ref_s* %namesarray, i64 0, %struct.ref_s* %sname) #7
  %tas174 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %type_attrs175 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas174, i32 0, i32 0
  %131 = bitcast i16* %type_attrs175 to i8*
  %arrayidx176 = getelementptr inbounds i8, i8* %131, i64 1
  %132 = load i8, i8* %arrayidx176, align 1, !tbaa !54
  %conv177 = zext i8 %132 to i32
  switch i32 %conv177, label %sw.default [
    i32 18, label %sw.bb
    i32 13, label %sw.bb.178
  ]

sw.bb:                                            ; preds = %if.then.170
  %133 = bitcast %struct.ref_s* %tname to i8*
  %134 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %sw.epilog

sw.bb.178:                                        ; preds = %if.then.170
  %135 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory179 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %135, i32 0, i32 1
  %current180 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory179, i32 0, i32 0
  %136 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current180, align 8, !tbaa !55
  %137 = bitcast %struct.gs_ref_memory_s* %136 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %137, i32 0, i32 2
  %138 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %138, i32 0, i32 16
  %139 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  call void @names_string_ref(%struct.name_table_s* %139, %struct.ref_s* %sname, %struct.ref_s* %tname) #7
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.170
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

sw.epilog:                                        ; preds = %sw.bb.178, %sw.bb
  %call181 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0)) #9
  %cmp182 = icmp ult i64 %call181, 3
  br i1 %cmp182, label %cond.true, label %cond.false.231

cond.true:                                        ; preds = %sw.epilog
  %140 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %140) #1
  %141 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %141) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i64 1) to i64), i64 ptrtoint ([4 x i8]* @.str.75 to i64)), i64 1), label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %cond.true
  %call184 = call i64 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0)) #9
  store i64 %call184, i64* %__s2_len, align 8, !tbaa !23
  %142 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp185 = icmp ult i64 %142, 4
  br i1 %cmp185, label %cond.true.187, label %cond.false

cond.true.187:                                    ; preds = %land.lhs.true
  %143 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %143) #1
  %value189 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tname, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value189 to i8**
  %144 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  store i8* %144, i8** %__s1, align 8, !tbaa !1
  %145 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %145) #1
  %146 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx191 = getelementptr inbounds i8, i8* %146, i64 0
  %147 = load i8, i8* %arrayidx191, align 1, !tbaa !54
  %conv192 = zext i8 %147 to i32
  %148 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0), align 1, !tbaa !54
  %conv193 = zext i8 %148 to i32
  %sub = sub nsw i32 %conv192, %conv193
  store i32 %sub, i32* %__result, align 4, !tbaa !26
  %149 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp194 = icmp ugt i64 %149, 0
  br i1 %cmp194, label %land.lhs.true.196, label %if.end.226

land.lhs.true.196:                                ; preds = %cond.true.187
  %150 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp197 = icmp eq i32 %150, 0
  br i1 %cmp197, label %if.then.199, label %if.end.226

if.then.199:                                      ; preds = %land.lhs.true.196
  %151 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx200 = getelementptr inbounds i8, i8* %151, i64 1
  %152 = load i8, i8* %arrayidx200, align 1, !tbaa !54
  %conv201 = zext i8 %152 to i32
  %153 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i64 1), align 1, !tbaa !54
  %conv202 = zext i8 %153 to i32
  %sub203 = sub nsw i32 %conv201, %conv202
  store i32 %sub203, i32* %__result, align 4, !tbaa !26
  %154 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp204 = icmp ugt i64 %154, 1
  br i1 %cmp204, label %land.lhs.true.206, label %if.end.225

land.lhs.true.206:                                ; preds = %if.then.199
  %155 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp207 = icmp eq i32 %155, 0
  br i1 %cmp207, label %if.then.209, label %if.end.225

if.then.209:                                      ; preds = %land.lhs.true.206
  %156 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx210 = getelementptr inbounds i8, i8* %156, i64 2
  %157 = load i8, i8* %arrayidx210, align 1, !tbaa !54
  %conv211 = zext i8 %157 to i32
  %158 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i64 2), align 1, !tbaa !54
  %conv212 = zext i8 %158 to i32
  %sub213 = sub nsw i32 %conv211, %conv212
  store i32 %sub213, i32* %__result, align 4, !tbaa !26
  %159 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp214 = icmp ugt i64 %159, 2
  br i1 %cmp214, label %land.lhs.true.216, label %if.end.224

land.lhs.true.216:                                ; preds = %if.then.209
  %160 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp217 = icmp eq i32 %160, 0
  br i1 %cmp217, label %if.then.219, label %if.end.224

if.then.219:                                      ; preds = %land.lhs.true.216
  %161 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx220 = getelementptr inbounds i8, i8* %161, i64 3
  %162 = load i8, i8* %arrayidx220, align 1, !tbaa !54
  %conv221 = zext i8 %162 to i32
  %163 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i64 3), align 1, !tbaa !54
  %conv222 = zext i8 %163 to i32
  %sub223 = sub nsw i32 %conv221, %conv222
  store i32 %sub223, i32* %__result, align 4, !tbaa !26
  br label %if.end.224

if.end.224:                                       ; preds = %if.then.219, %land.lhs.true.216, %if.then.209
  br label %if.end.225

if.end.225:                                       ; preds = %if.end.224, %land.lhs.true.206, %if.then.199
  br label %if.end.226

if.end.226:                                       ; preds = %if.end.225, %land.lhs.true.196, %cond.true.187
  %164 = load i32, i32* %__result, align 4, !tbaa !26
  store i32 %164, i32* %tmp227, !tbaa !26
  %165 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %165) #1
  %166 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %166) #1
  %167 = load i32, i32* %tmp227, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  %value228 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tname, i32 0, i32 1
  %const_bytes229 = bitcast %union.v* %value228 to i8**
  %168 = load i8*, i8** %const_bytes229, align 8, !tbaa !1
  %call230 = call i32 @strcmp(i8* %168, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0)) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.226
  %cond = phi i32 [ %167, %if.end.226 ], [ %call230, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !26
  %169 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %169) #1
  %170 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %170) #1
  %171 = load i32, i32* %tmp, !tbaa !26
  br label %cond.end.235

cond.false.231:                                   ; preds = %sw.epilog
  %value232 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tname, i32 0, i32 1
  %const_bytes233 = bitcast %union.v* %value232 to i8**
  %172 = load i8*, i8** %const_bytes233, align 8, !tbaa !1
  %call234 = call i32 @strncmp(i8* %172, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0), i64 3) #9
  br label %cond.end.235

cond.end.235:                                     ; preds = %cond.false.231, %cond.end
  %cond236 = phi i32 [ %171, %cond.end ], [ %call234, %cond.false.231 ]
  %cmp237 = icmp eq i32 %cond236, 0
  br i1 %cmp237, label %land.lhs.true.239, label %if.end.317

land.lhs.true.239:                                ; preds = %cond.end.235
  %tas240 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tname, i32 0, i32 0
  %rsize241 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas240, i32 0, i32 2
  %173 = load i32, i32* %rsize241, align 4, !tbaa !5
  %cmp242 = icmp eq i32 %173, 3
  br i1 %cmp242, label %if.then.244, label %if.end.317

if.then.244:                                      ; preds = %land.lhs.true.239
  %174 = bitcast i32* %sep_type to i8*
  call void @llvm.lifetime.start(i64 4, i8* %174) #1
  store i32 1, i32* %sep_type, align 4, !tbaa !54
  %175 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs246 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %175, i32 0, i32 0
  %176 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs246, align 8, !tbaa !43
  %call247 = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %176) #7
  store %struct.gs_color_space_s* %call247, %struct.gs_color_space_s** %pacs, align 8, !tbaa !1
  %177 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs248 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %177, i32 0, i32 0
  %178 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs248, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %178, i32 0, i32 2
  %179 = load i8*, i8** %client_data, align 8, !tbaa !53
  %180 = bitcast i8* %179 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %180, i32 0, i32 5
  %arrayidx249 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %181 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  %182 = bitcast %struct.ref_colorspace_s* %arrayidx249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 96, i32 8, i1 false), !tbaa.struct !77
  %183 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pacs, align 8, !tbaa !1
  %184 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory250 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %184, i32 0, i32 1
  %current251 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory250, i32 0, i32 0
  %185 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current251, align 8, !tbaa !55
  %186 = bitcast %struct.gs_ref_memory_s* %185 to %struct.gs_memory_s*
  %call252 = call i32 @gs_cspace_new_Separation(%struct.gs_color_space_s** %pcs, %struct.gs_color_space_s* %183, %struct.gs_memory_s* %186) #7
  store i32 %call252, i32* %code, align 4, !tbaa !26
  %187 = load i32, i32* %code, align 4, !tbaa !26
  %cmp253 = icmp slt i32 %187, 0
  br i1 %cmp253, label %if.then.255, label %if.end.256

if.then.255:                                      ; preds = %if.then.244
  %188 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %188, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.316

if.end.256:                                       ; preds = %if.then.244
  %189 = load i32, i32* %sep_type, align 4, !tbaa !54
  %190 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %190, i32 0, i32 7
  %separation = bitcast %union.anon* %params to %struct.gs_separation_params_s*
  %sep_type257 = getelementptr inbounds %struct.gs_separation_params_s, %struct.gs_separation_params_s* %separation, i32 0, i32 2
  store i32 %189, i32* %sep_type257, align 4, !tbaa !78
  %191 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory258 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %191, i32 0, i32 1
  %current259 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory258, i32 0, i32 0
  %192 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current259, align 8, !tbaa !55
  %193 = bitcast %struct.gs_ref_memory_s* %192 to %struct.gs_memory_s*
  %gs_lib_ctx260 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %193, i32 0, i32 2
  %194 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx260, align 8, !tbaa !74
  %gs_name_table261 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %194, i32 0, i32 16
  %195 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table261, align 8, !tbaa !75
  %call262 = call i32 @names_index(%struct.name_table_s* %195, %struct.ref_s* %sname) #7
  %conv263 = zext i32 %call262 to i64
  %196 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params264 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %196, i32 0, i32 7
  %separation265 = bitcast %union.anon* %params264 to %struct.gs_separation_params_s*
  %sep_name = getelementptr inbounds %struct.gs_separation_params_s, %struct.gs_separation_params_s* %separation265, i32 0, i32 0
  store i64 %conv263, i64* %sep_name, align 8, !tbaa !80
  %197 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params266 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %197, i32 0, i32 7
  %separation267 = bitcast %union.anon* %params266 to %struct.gs_separation_params_s*
  %get_colorname_string = getelementptr inbounds %struct.gs_separation_params_s, %struct.gs_separation_params_s* %separation267, i32 0, i32 4
  store i32 (%struct.gs_memory_s*, i64, i8**, i32*)* @gs_get_colorname_string, i32 (%struct.gs_memory_s*, i64, i8**, i32*)** %get_colorname_string, align 8, !tbaa !81
  %198 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory268 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %198, i32 0, i32 1
  %current269 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory268, i32 0, i32 0
  %199 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current269, align 8, !tbaa !55
  %200 = bitcast %struct.gs_ref_memory_s* %199 to %struct.gs_memory_s*
  %call270 = call i32 @array_get(%struct.gs_memory_s* %200, %struct.ref_s* %namesarray, i64 0, %struct.ref_s* %sname) #7
  store i32 %call270, i32* %code, align 4, !tbaa !26
  %201 = load i32, i32* %code, align 4, !tbaa !26
  %cmp271 = icmp slt i32 %201, 0
  br i1 %cmp271, label %if.then.273, label %if.end.274

if.then.273:                                      ; preds = %if.end.256
  %202 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %202, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.316

if.end.274:                                       ; preds = %if.end.256
  %203 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs275 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %203, i32 0, i32 0
  %204 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs275, align 8, !tbaa !43
  %client_data276 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %204, i32 0, i32 2
  %205 = load i8*, i8** %client_data276, align 8, !tbaa !53
  %206 = bitcast i8* %205 to %struct.int_gstate_s*
  %colorspace277 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %206, i32 0, i32 5
  %arrayidx278 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace277, i32 0, i64 0
  %procs = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx278, i32 0, i32 1
  %special = getelementptr inbounds %struct.ref_color_procs_s, %struct.ref_color_procs_s* %procs, i32 0, i32 1
  %separation279 = bitcast %union.anon.6* %special to %struct.ref_separation_params_s*
  %layer_name = getelementptr inbounds %struct.ref_separation_params_s, %struct.ref_separation_params_s* %separation279, i32 0, i32 0
  %207 = bitcast %struct.ref_s* %layer_name to i8*
  %208 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %208, i64 16, i32 8, i1 false), !tbaa.struct !24
  %209 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory280 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %209, i32 0, i32 1
  %current281 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory280, i32 0, i32 0
  %210 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current281, align 8, !tbaa !55
  %211 = bitcast %struct.gs_ref_memory_s* %210 to %struct.gs_memory_s*
  %212 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call282 = call i32 @array_get(%struct.gs_memory_s* %211, %struct.ref_s* %212, i64 3, %struct.ref_s* %proc) #7
  store i32 %call282, i32* %code, align 4, !tbaa !26
  %213 = load i32, i32* %code, align 4, !tbaa !26
  %cmp283 = icmp slt i32 %213, 0
  br i1 %cmp283, label %if.then.285, label %if.end.286

if.then.285:                                      ; preds = %if.end.274
  %214 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %214, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.316

if.end.286:                                       ; preds = %if.end.274
  %215 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs287 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %215, i32 0, i32 0
  %216 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs287, align 8, !tbaa !43
  %client_data288 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %216, i32 0, i32 2
  %217 = load i8*, i8** %client_data288, align 8, !tbaa !53
  %218 = bitcast i8* %217 to %struct.int_gstate_s*
  %colorspace289 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %218, i32 0, i32 5
  %arrayidx290 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace289, i32 0, i64 0
  %procs291 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx290, i32 0, i32 1
  %special292 = getelementptr inbounds %struct.ref_color_procs_s, %struct.ref_color_procs_s* %procs291, i32 0, i32 1
  %separation293 = bitcast %union.anon.6* %special292 to %struct.ref_separation_params_s*
  %tint_transform = getelementptr inbounds %struct.ref_separation_params_s, %struct.ref_separation_params_s* %separation293, i32 0, i32 1
  %219 = bitcast %struct.ref_s* %tint_transform to i8*
  %220 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %219, i8* %220, i64 16, i32 8, i1 false), !tbaa.struct !24
  %221 = load i32, i32* %code, align 4, !tbaa !26
  %cmp294 = icmp sge i32 %221, 0
  br i1 %cmp294, label %if.then.296, label %if.end.298

if.then.296:                                      ; preds = %if.end.286
  %222 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %223 = load %struct.gs_function_s*, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %call297 = call i32 @gs_cspace_set_sepr_function(%struct.gs_color_space_s* %222, %struct.gs_function_s* %223) #7
  store i32 %call297, i32* %code, align 4, !tbaa !26
  br label %if.end.298

if.end.298:                                       ; preds = %if.then.296, %if.end.286
  %224 = load i32, i32* %code, align 4, !tbaa !26
  %cmp299 = icmp sge i32 %224, 0
  br i1 %cmp299, label %if.then.301, label %if.end.304

if.then.301:                                      ; preds = %if.end.298
  %225 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs302 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %225, i32 0, i32 0
  %226 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs302, align 8, !tbaa !43
  %227 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call303 = call i32 @gs_setcolorspace(%struct.gs_state_s* %226, %struct.gs_color_space_s* %227) #7
  store i32 %call303, i32* %code, align 4, !tbaa !26
  br label %if.end.304

if.end.304:                                       ; preds = %if.then.301, %if.end.298
  %228 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %228, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i32 0, i32 0)) #7
  %229 = load i32, i32* %code, align 4, !tbaa !26
  %cmp305 = icmp slt i32 %229, 0
  br i1 %cmp305, label %if.then.307, label %if.end.312

if.then.307:                                      ; preds = %if.end.304
  %230 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs308 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %230, i32 0, i32 0
  %231 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs308, align 8, !tbaa !43
  %client_data309 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %231, i32 0, i32 2
  %232 = load i8*, i8** %client_data309, align 8, !tbaa !53
  %233 = bitcast i8* %232 to %struct.int_gstate_s*
  %colorspace310 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %233, i32 0, i32 5
  %arrayidx311 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace310, i32 0, i64 0
  %234 = bitcast %struct.ref_colorspace_s* %arrayidx311 to i8*
  %235 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %234, i8* %235, i64 96, i32 8, i1 false), !tbaa.struct !77
  %236 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %236, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.316

if.end.312:                                       ; preds = %if.end.304
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx313 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 1.000000e+00, float* %arrayidx313, align 4, !tbaa !20
  %237 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs314 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %237, i32 0, i32 0
  %238 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs314, align 8, !tbaa !43
  %call315 = call i32 @gs_setcolor(%struct.gs_state_s* %238, %struct.gs_client_color_s* %cc) #7
  store i32 %call315, i32* %code, align 4, !tbaa !26
  %239 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %239, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.316

cleanup.316:                                      ; preds = %if.end.312, %if.then.307, %if.then.285, %if.then.273, %if.then.255
  %240 = bitcast i32* %sep_type to i8*
  call void @llvm.lifetime.end(i64 4, i8* %240) #1
  br label %cleanup.424

if.end.317:                                       ; preds = %land.lhs.true.239, %cond.end.235
  br label %if.end.318

if.end.318:                                       ; preds = %if.end.317, %if.end.164
  %241 = load i32, i32* %num_components, align 4, !tbaa !26
  %242 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pacs, align 8, !tbaa !1
  %243 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory319 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %243, i32 0, i32 1
  %current320 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory319, i32 0, i32 0
  %244 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current320, align 8, !tbaa !55
  %245 = bitcast %struct.gs_ref_memory_s* %244 to %struct.gs_memory_s*
  %call321 = call i32 @gs_cspace_new_DeviceN(%struct.gs_color_space_s** %pcs, i32 %241, %struct.gs_color_space_s* %242, %struct.gs_memory_s* %245) #7
  store i32 %call321, i32* %code, align 4, !tbaa !26
  %246 = load i32, i32* %code, align 4, !tbaa !26
  %cmp322 = icmp slt i32 %246, 0
  br i1 %cmp322, label %if.then.324, label %if.end.325

if.then.324:                                      ; preds = %if.end.318
  %247 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %247, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.325:                                       ; preds = %if.end.318
  %248 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params326 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %248, i32 0, i32 7
  %device_n = bitcast %union.anon* %params326 to %struct.gs_device_n_params_s*
  %names327 = getelementptr inbounds %struct.gs_device_n_params_s, %struct.gs_device_n_params_s* %device_n, i32 0, i32 0
  %249 = load i64*, i64** %names327, align 8, !tbaa !93
  store i64* %249, i64** %names, align 8, !tbaa !1
  %250 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params328 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %250, i32 0, i32 7
  %device_n329 = bitcast %union.anon* %params328 to %struct.gs_device_n_params_s*
  %get_colorname_string330 = getelementptr inbounds %struct.gs_device_n_params_s, %struct.gs_device_n_params_s* %device_n329, i32 0, i32 5
  store i32 (%struct.gs_memory_s*, i64, i8**, i32*)* @gs_get_colorname_string, i32 (%struct.gs_memory_s*, i64, i8**, i32*)** %get_colorname_string330, align 8, !tbaa !95
  %251 = bitcast i32* %i332 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %251) #1
  %252 = bitcast %struct.ref_s* %sname334 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %252) #1
  store i32 0, i32* %i332, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.325
  %253 = load i32, i32* %i332, align 4, !tbaa !26
  %254 = load i32, i32* %num_components, align 4, !tbaa !26
  %cmp335 = icmp ult i32 %253, %254
  br i1 %cmp335, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %255 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory337 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %255, i32 0, i32 1
  %current338 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory337, i32 0, i32 0
  %256 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current338, align 8, !tbaa !55
  %257 = bitcast %struct.gs_ref_memory_s* %256 to %struct.gs_memory_s*
  %258 = load i32, i32* %i332, align 4, !tbaa !26
  %conv339 = zext i32 %258 to i64
  %call340 = call i32 @array_get(%struct.gs_memory_s* %257, %struct.ref_s* %namesarray, i64 %conv339, %struct.ref_s* %sname334) #7
  %tas341 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname334, i32 0, i32 0
  %type_attrs342 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas341, i32 0, i32 0
  %259 = bitcast i16* %type_attrs342 to i8*
  %arrayidx343 = getelementptr inbounds i8, i8* %259, i64 1
  %260 = load i8, i8* %arrayidx343, align 1, !tbaa !54
  %conv344 = zext i8 %260 to i32
  switch i32 %conv344, label %sw.default.363 [
    i32 18, label %sw.bb.345
    i32 13, label %sw.bb.355
  ]

sw.bb.345:                                        ; preds = %for.body
  %261 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory346 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %261, i32 0, i32 1
  %current347 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory346, i32 0, i32 0
  %262 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current347, align 8, !tbaa !55
  %263 = bitcast %struct.gs_ref_memory_s* %262 to %struct.gs_memory_s*
  %gs_lib_ctx348 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %263, i32 0, i32 2
  %264 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx348, align 8, !tbaa !74
  %gs_name_table349 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %264, i32 0, i32 16
  %265 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table349, align 8, !tbaa !75
  %call350 = call i32 @names_from_string(%struct.name_table_s* %265, %struct.ref_s* %sname334, %struct.ref_s* %sname334) #7
  store i32 %call350, i32* %code, align 4, !tbaa !26
  %266 = load i32, i32* %code, align 4, !tbaa !26
  %cmp351 = icmp slt i32 %266, 0
  br i1 %cmp351, label %if.then.353, label %if.end.354

if.then.353:                                      ; preds = %sw.bb.345
  %267 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_cs(%struct.gs_color_space_s* %267, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i32 0, i32 0)) #7
  %268 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %268, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.365

if.end.354:                                       ; preds = %sw.bb.345
  br label %sw.bb.355

sw.bb.355:                                        ; preds = %for.body, %if.end.354
  %269 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory356 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %269, i32 0, i32 1
  %current357 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory356, i32 0, i32 0
  %270 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current357, align 8, !tbaa !55
  %271 = bitcast %struct.gs_ref_memory_s* %270 to %struct.gs_memory_s*
  %gs_lib_ctx358 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %271, i32 0, i32 2
  %272 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx358, align 8, !tbaa !74
  %gs_name_table359 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %272, i32 0, i32 16
  %273 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table359, align 8, !tbaa !75
  %call360 = call i32 @names_index(%struct.name_table_s* %273, %struct.ref_s* %sname334) #7
  %conv361 = zext i32 %call360 to i64
  %274 = load i32, i32* %i332, align 4, !tbaa !26
  %idxprom = zext i32 %274 to i64
  %275 = load i64*, i64** %names, align 8, !tbaa !1
  %arrayidx362 = getelementptr inbounds i64, i64* %275, i64 %idxprom
  store i64 %conv361, i64* %arrayidx362, align 8, !tbaa !23
  br label %sw.epilog.364

sw.default.363:                                   ; preds = %for.body
  %276 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_cs(%struct.gs_color_space_s* %276, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i32 0, i32 0)) #7
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.365

sw.epilog.364:                                    ; preds = %sw.bb.355
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog.364
  %277 = load i32, i32* %i332, align 4, !tbaa !26
  %inc = add i32 %277, 1
  store i32 %inc, i32* %i332, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.365

cleanup.365:                                      ; preds = %for.end, %sw.default.363, %if.then.353
  %278 = bitcast %struct.ref_s* %sname334 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %278) #1
  %279 = bitcast i32* %i332 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %279) #1
  %cleanup.dest.367 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.367, label %cleanup.424 [
    i32 0, label %cleanup.cont.368
  ]

cleanup.cont.368:                                 ; preds = %cleanup.365
  %280 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs369 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %280, i32 0, i32 0
  %281 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs369, align 8, !tbaa !43
  %client_data370 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %281, i32 0, i32 2
  %282 = load i8*, i8** %client_data370, align 8, !tbaa !53
  %283 = bitcast i8* %282 to %struct.int_gstate_s*
  %colorspace371 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %283, i32 0, i32 5
  %arrayidx372 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace371, i32 0, i64 0
  %284 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  %285 = bitcast %struct.ref_colorspace_s* %arrayidx372 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %284, i8* %285, i64 96, i32 8, i1 false), !tbaa.struct !77
  %286 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs373 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %286, i32 0, i32 0
  %287 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs373, align 8, !tbaa !43
  %client_data374 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %287, i32 0, i32 2
  %288 = load i8*, i8** %client_data374, align 8, !tbaa !53
  %289 = bitcast i8* %288 to %struct.int_gstate_s*
  %colorspace375 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %289, i32 0, i32 5
  %arrayidx376 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace375, i32 0, i64 0
  %procs377 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx376, i32 0, i32 1
  %special378 = getelementptr inbounds %struct.ref_color_procs_s, %struct.ref_color_procs_s* %procs377, i32 0, i32 1
  %device_n379 = bitcast %union.anon.6* %special378 to %struct.ref_device_n_params_s*
  %layer_names = getelementptr inbounds %struct.ref_device_n_params_s, %struct.ref_device_n_params_s* %device_n379, i32 0, i32 0
  %290 = bitcast %struct.ref_s* %layer_names to i8*
  %291 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %290, i8* %291, i64 16, i32 8, i1 false), !tbaa.struct !24
  %292 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory380 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %292, i32 0, i32 1
  %current381 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory380, i32 0, i32 0
  %293 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current381, align 8, !tbaa !55
  %294 = bitcast %struct.gs_ref_memory_s* %293 to %struct.gs_memory_s*
  %295 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call382 = call i32 @array_get(%struct.gs_memory_s* %294, %struct.ref_s* %295, i64 3, %struct.ref_s* %proc) #7
  store i32 %call382, i32* %code, align 4, !tbaa !26
  %296 = load i32, i32* %code, align 4, !tbaa !26
  %cmp383 = icmp slt i32 %296, 0
  br i1 %cmp383, label %if.then.385, label %if.end.386

if.then.385:                                      ; preds = %cleanup.cont.368
  %297 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %297, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.386:                                       ; preds = %cleanup.cont.368
  %298 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs387 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %298, i32 0, i32 0
  %299 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs387, align 8, !tbaa !43
  %client_data388 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %299, i32 0, i32 2
  %300 = load i8*, i8** %client_data388, align 8, !tbaa !53
  %301 = bitcast i8* %300 to %struct.int_gstate_s*
  %colorspace389 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %301, i32 0, i32 5
  %arrayidx390 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace389, i32 0, i64 0
  %procs391 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx390, i32 0, i32 1
  %special392 = getelementptr inbounds %struct.ref_color_procs_s, %struct.ref_color_procs_s* %procs391, i32 0, i32 1
  %device_n393 = bitcast %union.anon.6* %special392 to %struct.ref_device_n_params_s*
  %tint_transform394 = getelementptr inbounds %struct.ref_device_n_params_s, %struct.ref_device_n_params_s* %device_n393, i32 0, i32 1
  %302 = bitcast %struct.ref_s* %tint_transform394 to i8*
  %303 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %302, i8* %303, i64 16, i32 8, i1 false), !tbaa.struct !24
  %304 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %305 = load %struct.gs_function_s*, %struct.gs_function_s** %pfn, align 8, !tbaa !1
  %call395 = call i32 @gs_cspace_set_devn_function(%struct.gs_color_space_s* %304, %struct.gs_function_s* %305) #7
  store i32 %call395, i32* %code, align 4, !tbaa !26
  %306 = load i32, i32* %code, align 4, !tbaa !26
  %cmp396 = icmp slt i32 %306, 0
  br i1 %cmp396, label %if.then.398, label %if.end.399

if.then.398:                                      ; preds = %if.end.386
  %307 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %307, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.399:                                       ; preds = %if.end.386
  %308 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs400 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %308, i32 0, i32 0
  %309 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs400, align 8, !tbaa !43
  %310 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call401 = call i32 @gs_setcolorspace(%struct.gs_state_s* %309, %struct.gs_color_space_s* %310) #7
  store i32 %call401, i32* %code, align 4, !tbaa !26
  %311 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %311, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i32 0, i32 0)) #7
  %312 = load i32, i32* %code, align 4, !tbaa !26
  %cmp402 = icmp slt i32 %312, 0
  br i1 %cmp402, label %if.then.404, label %if.end.409

if.then.404:                                      ; preds = %if.end.399
  %313 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs405 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %313, i32 0, i32 0
  %314 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs405, align 8, !tbaa !43
  %client_data406 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %314, i32 0, i32 2
  %315 = load i8*, i8** %client_data406, align 8, !tbaa !53
  %316 = bitcast i8* %315 to %struct.int_gstate_s*
  %colorspace407 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %316, i32 0, i32 5
  %arrayidx408 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace407, i32 0, i64 0
  %317 = bitcast %struct.ref_colorspace_s* %arrayidx408 to i8*
  %318 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %317, i8* %318, i64 96, i32 8, i1 false), !tbaa.struct !77
  %319 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %319, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

if.end.409:                                       ; preds = %if.end.399
  %pattern410 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern410, align 8, !tbaa !67
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.411

for.cond.411:                                     ; preds = %for.inc.419, %if.end.409
  %320 = load i32, i32* %i, align 4, !tbaa !26
  %321 = load i32, i32* %num_components, align 4, !tbaa !26
  %cmp412 = icmp slt i32 %320, %321
  br i1 %cmp412, label %for.body.414, label %for.end.421

for.body.414:                                     ; preds = %for.cond.411
  %322 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom415 = sext i32 %322 to i64
  %paint416 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values417 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint416, i32 0, i32 0
  %arrayidx418 = getelementptr inbounds [64 x float], [64 x float]* %values417, i32 0, i64 %idxprom415
  store float 1.000000e+00, float* %arrayidx418, align 4, !tbaa !20
  br label %for.inc.419

for.inc.419:                                      ; preds = %for.body.414
  %323 = load i32, i32* %i, align 4, !tbaa !26
  %inc420 = add nsw i32 %323, 1
  store i32 %inc420, i32* %i, align 4, !tbaa !26
  br label %for.cond.411

for.end.421:                                      ; preds = %for.cond.411
  %324 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs422 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %324, i32 0, i32 0
  %325 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs422, align 8, !tbaa !43
  %call423 = call i32 @gs_setcolor(%struct.gs_state_s* %325, %struct.gs_client_color_s* %cc) #7
  store i32 %call423, i32* %code, align 4, !tbaa !26
  %326 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %326, align 4, !tbaa !26
  %327 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %327, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.424

cleanup.424:                                      ; preds = %for.end.421, %if.then.404, %if.then.398, %if.then.385, %cleanup.365, %if.then.324, %cleanup.316, %sw.default, %if.then.163, %if.then.137, %if.then.133, %if.then.124, %if.then.114, %if.else, %cleanup.110, %if.then
  %328 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %328) #1
  %329 = bitcast i64** %names to i8*
  call void @llvm.lifetime.end(i64 8, i8* %329) #1
  %330 = bitcast %struct.gs_function_s** %pfn to i8*
  call void @llvm.lifetime.end(i64 8, i8* %330) #1
  %331 = bitcast %struct.gs_color_space_s** %pacs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %331) #1
  %332 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %332) #1
  %333 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.lifetime.end(i64 96, i8* %333) #1
  %334 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %334) #1
  %335 = bitcast %struct.ref_s* %tname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %335) #1
  %336 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %336) #1
  %337 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.end(i64 16, i8* %337) #1
  %338 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %338) #1
  %339 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %339) #1
  %340 = bitcast i32* %num_components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %340) #1
  %341 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %341) #1
  %342 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %342) #1
  %343 = load i32, i32* %retval
  ret i32 %343
}

; Function Attrs: nounwind uwtable
define internal i32 @validatedevicenspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %space) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s**, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %devicenspace = alloca %struct.ref_s*, align 8
  %proc = alloca %struct.ref_s, align 8
  %nameref = alloca %struct.ref_s, align 8
  %sref = alloca %struct.ref_s, align 8
  %altspace = alloca %struct.ref_s, align 8
  %namesarray = alloca %struct.ref_s, align 8
  %sname = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp138 = alloca i32, align 4
  %__s1_len157 = alloca i64, align 8
  %__s2_len159 = alloca i64, align 8
  %tmp160 = alloca i32, align 4
  %__s1167 = alloca i8*, align 8
  %__result171 = alloca i32, align 4
  %tmp209 = alloca i32, align 4
  %__s1_len231 = alloca i64, align 8
  %__s2_len233 = alloca i64, align 8
  %tmp234 = alloca i32, align 4
  %__s1241 = alloca i8*, align 8
  %__result245 = alloca i32, align 4
  %tmp283 = alloca i32, align 4
  %__s1_len311 = alloca i64, align 8
  %__s2_len313 = alloca i64, align 8
  %tmp314 = alloca i32, align 4
  %__s1321 = alloca i8*, align 8
  %__result325 = alloca i32, align 4
  %tmp363 = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %space, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %2 = bitcast %struct.ref_s** %devicenspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %4 = load %struct.ref_s*, %struct.ref_s** %3, align 8, !tbaa !1
  store %struct.ref_s* %4, %struct.ref_s** %devicenspace, align 8, !tbaa !1
  %5 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %7) #1
  %8 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %9 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %9) #1
  %10 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #1
  %11 = load %struct.ref_s*, %struct.ref_s** %devicenspace, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %12 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp = icmp ult i32 %12, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %devicenspace, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %15, %struct.ref_s* %16, i64 1, %struct.ref_s* %namesarray) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %17, 0
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %18 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %19 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %19 to i32
  %and = and i32 %conv, 15360
  %cmp5 = icmp eq i32 %and, 1024
  br i1 %cmp5, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end.3
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end.3
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %rsize10 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 2
  %20 = load i32, i32* %rsize10, align 4, !tbaa !5
  %cmp11 = icmp ult i32 %20, 1
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.8
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.8
  %tas15 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %rsize16 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas15, i32 0, i32 2
  %21 = load i32, i32* %rsize16, align 4, !tbaa !5
  %cmp17 = icmp ugt i32 %21, 64
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.14
  store i32 -13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.end.14
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %22, i32 0, i32 1
  %current22 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory21, i32 0, i32 0
  %23 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current22, align 8, !tbaa !55
  %24 = bitcast %struct.gs_ref_memory_s* %23 to %struct.gs_memory_s*
  %25 = load %struct.ref_s*, %struct.ref_s** %devicenspace, align 8, !tbaa !1
  %call23 = call i32 @array_get(%struct.gs_memory_s* %24, %struct.ref_s* %25, i64 3, %struct.ref_s* %proc) #7
  store i32 %call23, i32* %code, align 4, !tbaa !26
  %26 = load i32, i32* %code, align 4, !tbaa !26
  %cmp24 = icmp slt i32 %26, 0
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.20
  %27 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %27, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.20
  br label %do.body

do.body:                                          ; preds = %if.end.27
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %proc, i32 0, i32 0
  %type_attrs29 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 0
  %28 = load i16, i16* %type_attrs29, align 2, !tbaa !22
  %conv30 = zext i16 %28 to i32
  %and31 = and i32 %conv30, 15552
  %cmp32 = icmp eq i32 %and31, 1216
  br i1 %cmp32, label %if.end.36, label %if.then.34

if.then.34:                                       ; preds = %do.body
  %call35 = call i32 @check_proc_failed(%struct.ref_s* %proc) #7
  store i32 %call35, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.36
  br label %do.end

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %tas37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %rsize38 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas37, i32 0, i32 2
  %30 = load i32, i32* %rsize38, align 4, !tbaa !5
  %cmp39 = icmp ult i32 %29, %30
  br i1 %cmp39, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 1
  %current42 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory41, i32 0, i32 0
  %32 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current42, align 8, !tbaa !55
  %33 = bitcast %struct.gs_ref_memory_s* %32 to %struct.gs_memory_s*
  %34 = load i32, i32* %i, align 4, !tbaa !26
  %conv43 = sext i32 %34 to i64
  %call44 = call i32 @array_get(%struct.gs_memory_s* %33, %struct.ref_s* %namesarray, i64 %conv43, %struct.ref_s* %sname) #7
  %tas45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %type_attrs46 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas45, i32 0, i32 0
  %35 = bitcast i16* %type_attrs46 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %35, i64 1
  %36 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv47 = zext i8 %36 to i32
  switch i32 %conv47, label %sw.default [
    i32 18, label %sw.bb
    i32 13, label %sw.bb
  ]

sw.bb:                                            ; preds = %for.body, %for.body
  br label %sw.epilog

sw.default:                                       ; preds = %for.body
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %37, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory48 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 1
  %current49 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory48, i32 0, i32 0
  %39 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current49, align 8, !tbaa !55
  %40 = bitcast %struct.gs_ref_memory_s* %39 to %struct.gs_memory_s*
  %41 = load %struct.ref_s*, %struct.ref_s** %devicenspace, align 8, !tbaa !1
  %call50 = call i32 @array_get(%struct.gs_memory_s* %40, %struct.ref_s* %41, i64 2, %struct.ref_s* %altspace) #7
  store i32 %call50, i32* %code, align 4, !tbaa !26
  %42 = load i32, i32* %code, align 4, !tbaa !26
  %cmp51 = icmp slt i32 %42, 0
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %for.end
  %43 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %43, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %for.end
  %tas55 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %altspace, i32 0, i32 0
  %type_attrs56 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas55, i32 0, i32 0
  %44 = bitcast i16* %type_attrs56 to i8*
  %arrayidx57 = getelementptr inbounds i8, i8* %44, i64 1
  %45 = load i8, i8* %arrayidx57, align 1, !tbaa !54
  %conv58 = zext i8 %45 to i32
  %cmp59 = icmp eq i32 %conv58, 13
  br i1 %cmp59, label %if.then.61, label %if.else

if.then.61:                                       ; preds = %if.end.54
  %46 = bitcast %struct.ref_s* %nameref to i8*
  %47 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.85

if.else:                                          ; preds = %if.end.54
  %tas62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %altspace, i32 0, i32 0
  %type_attrs63 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas62, i32 0, i32 0
  %48 = load i16, i16* %type_attrs63, align 2, !tbaa !22
  %conv64 = zext i16 %48 to i32
  %and65 = and i32 %conv64, 15360
  %cmp66 = icmp eq i32 %and65, 1024
  br i1 %cmp66, label %if.end.69, label %if.then.68

if.then.68:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.69:                                        ; preds = %if.else
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory70 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 1
  %current71 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory70, i32 0, i32 0
  %50 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current71, align 8, !tbaa !55
  %51 = bitcast %struct.gs_ref_memory_s* %50 to %struct.gs_memory_s*
  %call72 = call i32 @array_get(%struct.gs_memory_s* %51, %struct.ref_s* %altspace, i64 0, %struct.ref_s* %nameref) #7
  store i32 %call72, i32* %code, align 4, !tbaa !26
  %52 = load i32, i32* %code, align 4, !tbaa !26
  %cmp73 = icmp slt i32 %52, 0
  br i1 %cmp73, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.end.69
  %53 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %53, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.76:                                        ; preds = %if.end.69
  %tas77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %nameref, i32 0, i32 0
  %type_attrs78 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas77, i32 0, i32 0
  %54 = bitcast i16* %type_attrs78 to i8*
  %arrayidx79 = getelementptr inbounds i8, i8* %54, i64 1
  %55 = load i8, i8* %arrayidx79, align 1, !tbaa !54
  %conv80 = zext i8 %55 to i32
  %cmp81 = icmp eq i32 %conv80, 13
  br i1 %cmp81, label %if.end.84, label %if.then.83

if.then.83:                                       ; preds = %if.end.76
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.84:                                        ; preds = %if.end.76
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %if.then.61
  %56 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory86 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %56, i32 0, i32 1
  %current87 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory86, i32 0, i32 0
  %57 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current87, align 8, !tbaa !55
  %58 = bitcast %struct.gs_ref_memory_s* %57 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %58, i32 0, i32 2
  %59 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %59, i32 0, i32 16
  %60 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  call void @names_string_ref(%struct.name_table_s* %60, %struct.ref_s* %nameref, %struct.ref_s* %sref) #7
  %tas88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 0
  %rsize89 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas88, i32 0, i32 2
  %61 = load i32, i32* %rsize89, align 4, !tbaa !5
  %cmp90 = icmp eq i32 %61, 7
  br i1 %cmp90, label %if.then.92, label %if.end.300

if.then.92:                                       ; preds = %if.end.85
  %call93 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #9
  %cmp94 = icmp ult i64 %call93, 7
  br i1 %cmp94, label %cond.true, label %cond.false.142

cond.true:                                        ; preds = %if.then.92
  %62 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %62) #1
  %63 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %63) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.9 to i64)), i64 1), label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %cond.true
  %call96 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #9
  store i64 %call96, i64* %__s2_len, align 8, !tbaa !23
  %64 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp97 = icmp ult i64 %64, 4
  br i1 %cmp97, label %cond.true.99, label %cond.false

cond.true.99:                                     ; preds = %land.lhs.true
  %65 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %65) #1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value to i8**
  %66 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  store i8* %66, i8** %__s1, align 8, !tbaa !1
  %67 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %67) #1
  %68 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx102 = getelementptr inbounds i8, i8* %68, i64 0
  %69 = load i8, i8* %arrayidx102, align 1, !tbaa !54
  %conv103 = zext i8 %69 to i32
  %70 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), align 1, !tbaa !54
  %conv104 = zext i8 %70 to i32
  %sub = sub nsw i32 %conv103, %conv104
  store i32 %sub, i32* %__result, align 4, !tbaa !26
  %71 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp105 = icmp ugt i64 %71, 0
  br i1 %cmp105, label %land.lhs.true.107, label %if.end.137

land.lhs.true.107:                                ; preds = %cond.true.99
  %72 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp108 = icmp eq i32 %72, 0
  br i1 %cmp108, label %if.then.110, label %if.end.137

if.then.110:                                      ; preds = %land.lhs.true.107
  %73 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx111 = getelementptr inbounds i8, i8* %73, i64 1
  %74 = load i8, i8* %arrayidx111, align 1, !tbaa !54
  %conv112 = zext i8 %74 to i32
  %75 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 1), align 1, !tbaa !54
  %conv113 = zext i8 %75 to i32
  %sub114 = sub nsw i32 %conv112, %conv113
  store i32 %sub114, i32* %__result, align 4, !tbaa !26
  %76 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp115 = icmp ugt i64 %76, 1
  br i1 %cmp115, label %land.lhs.true.117, label %if.end.136

land.lhs.true.117:                                ; preds = %if.then.110
  %77 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp118 = icmp eq i32 %77, 0
  br i1 %cmp118, label %if.then.120, label %if.end.136

if.then.120:                                      ; preds = %land.lhs.true.117
  %78 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx121 = getelementptr inbounds i8, i8* %78, i64 2
  %79 = load i8, i8* %arrayidx121, align 1, !tbaa !54
  %conv122 = zext i8 %79 to i32
  %80 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 2), align 1, !tbaa !54
  %conv123 = zext i8 %80 to i32
  %sub124 = sub nsw i32 %conv122, %conv123
  store i32 %sub124, i32* %__result, align 4, !tbaa !26
  %81 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp125 = icmp ugt i64 %81, 2
  br i1 %cmp125, label %land.lhs.true.127, label %if.end.135

land.lhs.true.127:                                ; preds = %if.then.120
  %82 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp128 = icmp eq i32 %82, 0
  br i1 %cmp128, label %if.then.130, label %if.end.135

if.then.130:                                      ; preds = %land.lhs.true.127
  %83 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds i8, i8* %83, i64 3
  %84 = load i8, i8* %arrayidx131, align 1, !tbaa !54
  %conv132 = zext i8 %84 to i32
  %85 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 3), align 1, !tbaa !54
  %conv133 = zext i8 %85 to i32
  %sub134 = sub nsw i32 %conv132, %conv133
  store i32 %sub134, i32* %__result, align 4, !tbaa !26
  br label %if.end.135

if.end.135:                                       ; preds = %if.then.130, %land.lhs.true.127, %if.then.120
  br label %if.end.136

if.end.136:                                       ; preds = %if.end.135, %land.lhs.true.117, %if.then.110
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %land.lhs.true.107, %cond.true.99
  %86 = load i32, i32* %__result, align 4, !tbaa !26
  store i32 %86, i32* %tmp138, !tbaa !26
  %87 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  %88 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %89 = load i32, i32* %tmp138, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  %value139 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes140 = bitcast %union.v* %value139 to i8**
  %90 = load i8*, i8** %const_bytes140, align 8, !tbaa !1
  %call141 = call i32 @strcmp(i8* %90, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.137
  %cond = phi i32 [ %89, %if.end.137 ], [ %call141, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !26
  %91 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91) #1
  %92 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = load i32, i32* %tmp, !tbaa !26
  br label %cond.end.146

cond.false.142:                                   ; preds = %if.then.92
  %value143 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes144 = bitcast %union.v* %value143 to i8**
  %94 = load i8*, i8** %const_bytes144, align 8, !tbaa !1
  %call145 = call i32 @strncmp(i8* %94, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i64 7) #9
  br label %cond.end.146

cond.end.146:                                     ; preds = %cond.false.142, %cond.end
  %cond147 = phi i32 [ %93, %cond.end ], [ %call145, %cond.false.142 ]
  %cmp148 = icmp eq i32 %cond147, 0
  br i1 %cmp148, label %if.then.150, label %if.end.151

if.then.150:                                      ; preds = %cond.end.146
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.151:                                       ; preds = %cond.end.146
  %call152 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  %cmp153 = icmp ult i64 %call152, 7
  br i1 %cmp153, label %cond.true.155, label %cond.false.216

cond.true.155:                                    ; preds = %if.end.151
  %95 = bitcast i64* %__s1_len157 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %95) #1
  %96 = bitcast i64* %__s2_len159 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %96) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.10 to i64)), i64 1), label %land.lhs.true.161, label %cond.false.210

land.lhs.true.161:                                ; preds = %cond.true.155
  %call162 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  store i64 %call162, i64* %__s2_len159, align 8, !tbaa !23
  %97 = load i64, i64* %__s2_len159, align 8, !tbaa !23
  %cmp163 = icmp ult i64 %97, 4
  br i1 %cmp163, label %cond.true.165, label %cond.false.210

cond.true.165:                                    ; preds = %land.lhs.true.161
  %98 = bitcast i8** %__s1167 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %98) #1
  %value168 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes169 = bitcast %union.v* %value168 to i8**
  %99 = load i8*, i8** %const_bytes169, align 8, !tbaa !1
  store i8* %99, i8** %__s1167, align 8, !tbaa !1
  %100 = bitcast i32* %__result171 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %100) #1
  %101 = load i8*, i8** %__s1167, align 8, !tbaa !1
  %arrayidx172 = getelementptr inbounds i8, i8* %101, i64 0
  %102 = load i8, i8* %arrayidx172, align 1, !tbaa !54
  %conv173 = zext i8 %102 to i32
  %103 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), align 1, !tbaa !54
  %conv174 = zext i8 %103 to i32
  %sub175 = sub nsw i32 %conv173, %conv174
  store i32 %sub175, i32* %__result171, align 4, !tbaa !26
  %104 = load i64, i64* %__s2_len159, align 8, !tbaa !23
  %cmp176 = icmp ugt i64 %104, 0
  br i1 %cmp176, label %land.lhs.true.178, label %if.end.208

land.lhs.true.178:                                ; preds = %cond.true.165
  %105 = load i32, i32* %__result171, align 4, !tbaa !26
  %cmp179 = icmp eq i32 %105, 0
  br i1 %cmp179, label %if.then.181, label %if.end.208

if.then.181:                                      ; preds = %land.lhs.true.178
  %106 = load i8*, i8** %__s1167, align 8, !tbaa !1
  %arrayidx182 = getelementptr inbounds i8, i8* %106, i64 1
  %107 = load i8, i8* %arrayidx182, align 1, !tbaa !54
  %conv183 = zext i8 %107 to i32
  %108 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1), align 1, !tbaa !54
  %conv184 = zext i8 %108 to i32
  %sub185 = sub nsw i32 %conv183, %conv184
  store i32 %sub185, i32* %__result171, align 4, !tbaa !26
  %109 = load i64, i64* %__s2_len159, align 8, !tbaa !23
  %cmp186 = icmp ugt i64 %109, 1
  br i1 %cmp186, label %land.lhs.true.188, label %if.end.207

land.lhs.true.188:                                ; preds = %if.then.181
  %110 = load i32, i32* %__result171, align 4, !tbaa !26
  %cmp189 = icmp eq i32 %110, 0
  br i1 %cmp189, label %if.then.191, label %if.end.207

if.then.191:                                      ; preds = %land.lhs.true.188
  %111 = load i8*, i8** %__s1167, align 8, !tbaa !1
  %arrayidx192 = getelementptr inbounds i8, i8* %111, i64 2
  %112 = load i8, i8* %arrayidx192, align 1, !tbaa !54
  %conv193 = zext i8 %112 to i32
  %113 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 2), align 1, !tbaa !54
  %conv194 = zext i8 %113 to i32
  %sub195 = sub nsw i32 %conv193, %conv194
  store i32 %sub195, i32* %__result171, align 4, !tbaa !26
  %114 = load i64, i64* %__s2_len159, align 8, !tbaa !23
  %cmp196 = icmp ugt i64 %114, 2
  br i1 %cmp196, label %land.lhs.true.198, label %if.end.206

land.lhs.true.198:                                ; preds = %if.then.191
  %115 = load i32, i32* %__result171, align 4, !tbaa !26
  %cmp199 = icmp eq i32 %115, 0
  br i1 %cmp199, label %if.then.201, label %if.end.206

if.then.201:                                      ; preds = %land.lhs.true.198
  %116 = load i8*, i8** %__s1167, align 8, !tbaa !1
  %arrayidx202 = getelementptr inbounds i8, i8* %116, i64 3
  %117 = load i8, i8* %arrayidx202, align 1, !tbaa !54
  %conv203 = zext i8 %117 to i32
  %118 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 3), align 1, !tbaa !54
  %conv204 = zext i8 %118 to i32
  %sub205 = sub nsw i32 %conv203, %conv204
  store i32 %sub205, i32* %__result171, align 4, !tbaa !26
  br label %if.end.206

if.end.206:                                       ; preds = %if.then.201, %land.lhs.true.198, %if.then.191
  br label %if.end.207

if.end.207:                                       ; preds = %if.end.206, %land.lhs.true.188, %if.then.181
  br label %if.end.208

if.end.208:                                       ; preds = %if.end.207, %land.lhs.true.178, %cond.true.165
  %119 = load i32, i32* %__result171, align 4, !tbaa !26
  store i32 %119, i32* %tmp209, !tbaa !26
  %120 = bitcast i32* %__result171 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %120) #1
  %121 = bitcast i8** %__s1167 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %121) #1
  %122 = load i32, i32* %tmp209, !tbaa !26
  br label %cond.end.214

cond.false.210:                                   ; preds = %land.lhs.true.161, %cond.true.155
  %value211 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes212 = bitcast %union.v* %value211 to i8**
  %123 = load i8*, i8** %const_bytes212, align 8, !tbaa !1
  %call213 = call i32 @strcmp(i8* %123, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #8
  br label %cond.end.214

cond.end.214:                                     ; preds = %cond.false.210, %if.end.208
  %cond215 = phi i32 [ %122, %if.end.208 ], [ %call213, %cond.false.210 ]
  store i32 %cond215, i32* %tmp160, !tbaa !26
  %124 = bitcast i64* %__s2_len159 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %124) #1
  %125 = bitcast i64* %__s1_len157 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = load i32, i32* %tmp160, !tbaa !26
  br label %cond.end.220

cond.false.216:                                   ; preds = %if.end.151
  %value217 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes218 = bitcast %union.v* %value217 to i8**
  %127 = load i8*, i8** %const_bytes218, align 8, !tbaa !1
  %call219 = call i32 @strncmp(i8* %127, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i64 7) #9
  br label %cond.end.220

cond.end.220:                                     ; preds = %cond.false.216, %cond.end.214
  %cond221 = phi i32 [ %126, %cond.end.214 ], [ %call219, %cond.false.216 ]
  %cmp222 = icmp eq i32 %cond221, 0
  br i1 %cmp222, label %if.then.224, label %if.end.225

if.then.224:                                      ; preds = %cond.end.220
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.225:                                       ; preds = %cond.end.220
  %call226 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)) #9
  %cmp227 = icmp ult i64 %call226, 7
  br i1 %cmp227, label %cond.true.229, label %cond.false.290

cond.true.229:                                    ; preds = %if.end.225
  %128 = bitcast i64* %__s1_len231 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %128) #1
  %129 = bitcast i64* %__s2_len233 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %129) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.8 to i64)), i64 1), label %land.lhs.true.235, label %cond.false.284

land.lhs.true.235:                                ; preds = %cond.true.229
  %call236 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)) #9
  store i64 %call236, i64* %__s2_len233, align 8, !tbaa !23
  %130 = load i64, i64* %__s2_len233, align 8, !tbaa !23
  %cmp237 = icmp ult i64 %130, 4
  br i1 %cmp237, label %cond.true.239, label %cond.false.284

cond.true.239:                                    ; preds = %land.lhs.true.235
  %131 = bitcast i8** %__s1241 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %131) #1
  %value242 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes243 = bitcast %union.v* %value242 to i8**
  %132 = load i8*, i8** %const_bytes243, align 8, !tbaa !1
  store i8* %132, i8** %__s1241, align 8, !tbaa !1
  %133 = bitcast i32* %__result245 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %133) #1
  %134 = load i8*, i8** %__s1241, align 8, !tbaa !1
  %arrayidx246 = getelementptr inbounds i8, i8* %134, i64 0
  %135 = load i8, i8* %arrayidx246, align 1, !tbaa !54
  %conv247 = zext i8 %135 to i32
  %136 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), align 1, !tbaa !54
  %conv248 = zext i8 %136 to i32
  %sub249 = sub nsw i32 %conv247, %conv248
  store i32 %sub249, i32* %__result245, align 4, !tbaa !26
  %137 = load i64, i64* %__s2_len233, align 8, !tbaa !23
  %cmp250 = icmp ugt i64 %137, 0
  br i1 %cmp250, label %land.lhs.true.252, label %if.end.282

land.lhs.true.252:                                ; preds = %cond.true.239
  %138 = load i32, i32* %__result245, align 4, !tbaa !26
  %cmp253 = icmp eq i32 %138, 0
  br i1 %cmp253, label %if.then.255, label %if.end.282

if.then.255:                                      ; preds = %land.lhs.true.252
  %139 = load i8*, i8** %__s1241, align 8, !tbaa !1
  %arrayidx256 = getelementptr inbounds i8, i8* %139, i64 1
  %140 = load i8, i8* %arrayidx256, align 1, !tbaa !54
  %conv257 = zext i8 %140 to i32
  %141 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 1), align 1, !tbaa !54
  %conv258 = zext i8 %141 to i32
  %sub259 = sub nsw i32 %conv257, %conv258
  store i32 %sub259, i32* %__result245, align 4, !tbaa !26
  %142 = load i64, i64* %__s2_len233, align 8, !tbaa !23
  %cmp260 = icmp ugt i64 %142, 1
  br i1 %cmp260, label %land.lhs.true.262, label %if.end.281

land.lhs.true.262:                                ; preds = %if.then.255
  %143 = load i32, i32* %__result245, align 4, !tbaa !26
  %cmp263 = icmp eq i32 %143, 0
  br i1 %cmp263, label %if.then.265, label %if.end.281

if.then.265:                                      ; preds = %land.lhs.true.262
  %144 = load i8*, i8** %__s1241, align 8, !tbaa !1
  %arrayidx266 = getelementptr inbounds i8, i8* %144, i64 2
  %145 = load i8, i8* %arrayidx266, align 1, !tbaa !54
  %conv267 = zext i8 %145 to i32
  %146 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 2), align 1, !tbaa !54
  %conv268 = zext i8 %146 to i32
  %sub269 = sub nsw i32 %conv267, %conv268
  store i32 %sub269, i32* %__result245, align 4, !tbaa !26
  %147 = load i64, i64* %__s2_len233, align 8, !tbaa !23
  %cmp270 = icmp ugt i64 %147, 2
  br i1 %cmp270, label %land.lhs.true.272, label %if.end.280

land.lhs.true.272:                                ; preds = %if.then.265
  %148 = load i32, i32* %__result245, align 4, !tbaa !26
  %cmp273 = icmp eq i32 %148, 0
  br i1 %cmp273, label %if.then.275, label %if.end.280

if.then.275:                                      ; preds = %land.lhs.true.272
  %149 = load i8*, i8** %__s1241, align 8, !tbaa !1
  %arrayidx276 = getelementptr inbounds i8, i8* %149, i64 3
  %150 = load i8, i8* %arrayidx276, align 1, !tbaa !54
  %conv277 = zext i8 %150 to i32
  %151 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i64 3), align 1, !tbaa !54
  %conv278 = zext i8 %151 to i32
  %sub279 = sub nsw i32 %conv277, %conv278
  store i32 %sub279, i32* %__result245, align 4, !tbaa !26
  br label %if.end.280

if.end.280:                                       ; preds = %if.then.275, %land.lhs.true.272, %if.then.265
  br label %if.end.281

if.end.281:                                       ; preds = %if.end.280, %land.lhs.true.262, %if.then.255
  br label %if.end.282

if.end.282:                                       ; preds = %if.end.281, %land.lhs.true.252, %cond.true.239
  %152 = load i32, i32* %__result245, align 4, !tbaa !26
  store i32 %152, i32* %tmp283, !tbaa !26
  %153 = bitcast i32* %__result245 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153) #1
  %154 = bitcast i8** %__s1241 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %154) #1
  %155 = load i32, i32* %tmp283, !tbaa !26
  br label %cond.end.288

cond.false.284:                                   ; preds = %land.lhs.true.235, %cond.true.229
  %value285 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes286 = bitcast %union.v* %value285 to i8**
  %156 = load i8*, i8** %const_bytes286, align 8, !tbaa !1
  %call287 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)) #8
  br label %cond.end.288

cond.end.288:                                     ; preds = %cond.false.284, %if.end.282
  %cond289 = phi i32 [ %155, %if.end.282 ], [ %call287, %cond.false.284 ]
  store i32 %cond289, i32* %tmp234, !tbaa !26
  %157 = bitcast i64* %__s2_len233 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %157) #1
  %158 = bitcast i64* %__s1_len231 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %158) #1
  %159 = load i32, i32* %tmp234, !tbaa !26
  br label %cond.end.294

cond.false.290:                                   ; preds = %if.end.225
  %value291 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes292 = bitcast %union.v* %value291 to i8**
  %160 = load i8*, i8** %const_bytes292, align 8, !tbaa !1
  %call293 = call i32 @strncmp(i8* %160, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i64 7) #9
  br label %cond.end.294

cond.end.294:                                     ; preds = %cond.false.290, %cond.end.288
  %cond295 = phi i32 [ %159, %cond.end.288 ], [ %call293, %cond.false.290 ]
  %cmp296 = icmp eq i32 %cond295, 0
  br i1 %cmp296, label %if.then.298, label %if.end.299

if.then.298:                                      ; preds = %cond.end.294
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.299:                                       ; preds = %cond.end.294
  br label %if.end.300

if.end.300:                                       ; preds = %if.end.299, %if.end.85
  %tas301 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 0
  %rsize302 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas301, i32 0, i32 2
  %161 = load i32, i32* %rsize302, align 4, !tbaa !5
  %cmp303 = icmp eq i32 %161, 9
  br i1 %cmp303, label %land.lhs.true.305, label %if.end.379

land.lhs.true.305:                                ; preds = %if.end.300
  %call306 = call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0)) #9
  %cmp307 = icmp ult i64 %call306, 9
  br i1 %cmp307, label %cond.true.309, label %cond.false.370

cond.true.309:                                    ; preds = %land.lhs.true.305
  %162 = bitcast i64* %__s1_len311 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %162) #1
  %163 = bitcast i64* %__s2_len313 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %163) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 1) to i64), i64 ptrtoint ([11 x i8]* @.str.7 to i64)), i64 1), label %land.lhs.true.315, label %cond.false.364

land.lhs.true.315:                                ; preds = %cond.true.309
  %call316 = call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0)) #9
  store i64 %call316, i64* %__s2_len313, align 8, !tbaa !23
  %164 = load i64, i64* %__s2_len313, align 8, !tbaa !23
  %cmp317 = icmp ult i64 %164, 4
  br i1 %cmp317, label %cond.true.319, label %cond.false.364

cond.true.319:                                    ; preds = %land.lhs.true.315
  %165 = bitcast i8** %__s1321 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %165) #1
  %value322 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes323 = bitcast %union.v* %value322 to i8**
  %166 = load i8*, i8** %const_bytes323, align 8, !tbaa !1
  store i8* %166, i8** %__s1321, align 8, !tbaa !1
  %167 = bitcast i32* %__result325 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %167) #1
  %168 = load i8*, i8** %__s1321, align 8, !tbaa !1
  %arrayidx326 = getelementptr inbounds i8, i8* %168, i64 0
  %169 = load i8, i8* %arrayidx326, align 1, !tbaa !54
  %conv327 = zext i8 %169 to i32
  %170 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), align 1, !tbaa !54
  %conv328 = zext i8 %170 to i32
  %sub329 = sub nsw i32 %conv327, %conv328
  store i32 %sub329, i32* %__result325, align 4, !tbaa !26
  %171 = load i64, i64* %__s2_len313, align 8, !tbaa !23
  %cmp330 = icmp ugt i64 %171, 0
  br i1 %cmp330, label %land.lhs.true.332, label %if.end.362

land.lhs.true.332:                                ; preds = %cond.true.319
  %172 = load i32, i32* %__result325, align 4, !tbaa !26
  %cmp333 = icmp eq i32 %172, 0
  br i1 %cmp333, label %if.then.335, label %if.end.362

if.then.335:                                      ; preds = %land.lhs.true.332
  %173 = load i8*, i8** %__s1321, align 8, !tbaa !1
  %arrayidx336 = getelementptr inbounds i8, i8* %173, i64 1
  %174 = load i8, i8* %arrayidx336, align 1, !tbaa !54
  %conv337 = zext i8 %174 to i32
  %175 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 1), align 1, !tbaa !54
  %conv338 = zext i8 %175 to i32
  %sub339 = sub nsw i32 %conv337, %conv338
  store i32 %sub339, i32* %__result325, align 4, !tbaa !26
  %176 = load i64, i64* %__s2_len313, align 8, !tbaa !23
  %cmp340 = icmp ugt i64 %176, 1
  br i1 %cmp340, label %land.lhs.true.342, label %if.end.361

land.lhs.true.342:                                ; preds = %if.then.335
  %177 = load i32, i32* %__result325, align 4, !tbaa !26
  %cmp343 = icmp eq i32 %177, 0
  br i1 %cmp343, label %if.then.345, label %if.end.361

if.then.345:                                      ; preds = %land.lhs.true.342
  %178 = load i8*, i8** %__s1321, align 8, !tbaa !1
  %arrayidx346 = getelementptr inbounds i8, i8* %178, i64 2
  %179 = load i8, i8* %arrayidx346, align 1, !tbaa !54
  %conv347 = zext i8 %179 to i32
  %180 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 2), align 1, !tbaa !54
  %conv348 = zext i8 %180 to i32
  %sub349 = sub nsw i32 %conv347, %conv348
  store i32 %sub349, i32* %__result325, align 4, !tbaa !26
  %181 = load i64, i64* %__s2_len313, align 8, !tbaa !23
  %cmp350 = icmp ugt i64 %181, 2
  br i1 %cmp350, label %land.lhs.true.352, label %if.end.360

land.lhs.true.352:                                ; preds = %if.then.345
  %182 = load i32, i32* %__result325, align 4, !tbaa !26
  %cmp353 = icmp eq i32 %182, 0
  br i1 %cmp353, label %if.then.355, label %if.end.360

if.then.355:                                      ; preds = %land.lhs.true.352
  %183 = load i8*, i8** %__s1321, align 8, !tbaa !1
  %arrayidx356 = getelementptr inbounds i8, i8* %183, i64 3
  %184 = load i8, i8* %arrayidx356, align 1, !tbaa !54
  %conv357 = zext i8 %184 to i32
  %185 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i64 3), align 1, !tbaa !54
  %conv358 = zext i8 %185 to i32
  %sub359 = sub nsw i32 %conv357, %conv358
  store i32 %sub359, i32* %__result325, align 4, !tbaa !26
  br label %if.end.360

if.end.360:                                       ; preds = %if.then.355, %land.lhs.true.352, %if.then.345
  br label %if.end.361

if.end.361:                                       ; preds = %if.end.360, %land.lhs.true.342, %if.then.335
  br label %if.end.362

if.end.362:                                       ; preds = %if.end.361, %land.lhs.true.332, %cond.true.319
  %186 = load i32, i32* %__result325, align 4, !tbaa !26
  store i32 %186, i32* %tmp363, !tbaa !26
  %187 = bitcast i32* %__result325 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %187) #1
  %188 = bitcast i8** %__s1321 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %188) #1
  %189 = load i32, i32* %tmp363, !tbaa !26
  br label %cond.end.368

cond.false.364:                                   ; preds = %land.lhs.true.315, %cond.true.309
  %value365 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes366 = bitcast %union.v* %value365 to i8**
  %190 = load i8*, i8** %const_bytes366, align 8, !tbaa !1
  %call367 = call i32 @strcmp(i8* %190, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0)) #8
  br label %cond.end.368

cond.end.368:                                     ; preds = %cond.false.364, %if.end.362
  %cond369 = phi i32 [ %189, %if.end.362 ], [ %call367, %cond.false.364 ]
  store i32 %cond369, i32* %tmp314, !tbaa !26
  %191 = bitcast i64* %__s2_len313 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %191) #1
  %192 = bitcast i64* %__s1_len311 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %192) #1
  %193 = load i32, i32* %tmp314, !tbaa !26
  br label %cond.end.374

cond.false.370:                                   ; preds = %land.lhs.true.305
  %value371 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes372 = bitcast %union.v* %value371 to i8**
  %194 = load i8*, i8** %const_bytes372, align 8, !tbaa !1
  %call373 = call i32 @strncmp(i8* %194, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0), i64 9) #9
  br label %cond.end.374

cond.end.374:                                     ; preds = %cond.false.370, %cond.end.368
  %cond375 = phi i32 [ %193, %cond.end.368 ], [ %call373, %cond.false.370 ]
  %cmp376 = icmp eq i32 %cond375, 0
  br i1 %cmp376, label %if.then.378, label %if.end.379

if.then.378:                                      ; preds = %cond.end.374
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.379:                                       ; preds = %cond.end.374, %if.end.300
  %195 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %196 = load %struct.ref_s*, %struct.ref_s** %195, align 8, !tbaa !1
  %197 = bitcast %struct.ref_s* %196 to i8*
  %198 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.379, %if.then.378, %if.then.298, %if.then.224, %if.then.150, %if.then.83, %if.then.75, %if.then.68, %if.then.53, %sw.default, %if.then.34, %if.then.26, %if.then.19, %if.then.13, %if.then.7, %if.then.2, %if.then
  %199 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %199) #1
  %200 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %200) #1
  %201 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.end(i64 16, i8* %201) #1
  %202 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %202) #1
  %203 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %203) #1
  %204 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.end(i64 16, i8* %204) #1
  %205 = bitcast %struct.ref_s** %devicenspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %205) #1
  %206 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %206) #1
  %207 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %207) #1
  %208 = load i32, i32* %retval
  ret i32 %208
}

; Function Attrs: nounwind uwtable
define internal i32 @devicenalternatespace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s** %r, i32* %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %CIESubst.addr = alloca i32*, align 8
  %altspace = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store i32* %CIESubst, i32** %CIESubst.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %5, i64 2, %struct.ref_s* %altspace) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %9 = load %struct.ref_s*, %struct.ref_s** %8, align 8, !tbaa !1
  %10 = bitcast %struct.ref_s* %9 to i8*
  %11 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #1
  %13 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.end(i64 16, i8* %13) #1
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal i32 @devicencomponents(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32* %n) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %n.addr = alloca i32*, align 8
  %namesarray = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32* %n, i32** %n.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %5, i64 1, %struct.ref_s* %namesarray) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %8 = load i32, i32* %rsize, align 4, !tbaa !5
  %9 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 %8, i32* %9, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %10 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %10) #1
  %11 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %11) #1
  %12 = load i32, i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define internal i32 @devicenrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %limit = alloca i32, align 4
  %code = alloca i32, align 4
  %cspace = alloca %struct.PS_colour_space_s*, align 8
  %altspace = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast %struct.PS_colour_space_s** %cspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %5, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %6 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %7 = bitcast %struct.gs_ref_memory_s* %6 to %struct.gs_memory_s*
  %8 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %7, %struct.ref_s* %8, i64 1, %struct.ref_s* %altspace) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call1 = call i32 @get_space_object(%struct.gs_context_state_s* %11, %struct.ref_s* %altspace, %struct.PS_colour_space_s** %cspace) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %12, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %14 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %cspace, align 8, !tbaa !1
  %numcomponents = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %14, i32 0, i32 4
  %15 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)** %numcomponents, align 8, !tbaa !96
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call5 = call i32 %15(%struct.gs_context_state_s* %16, %struct.ref_s* %altspace, i32* %limit) #7
  store i32 %call5, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp6 = icmp slt i32 %17, 0
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.4
  %18 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end.4
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.8
  %19 = load i32, i32* %i, align 4, !tbaa !26
  %20 = load i32, i32* %limit, align 4, !tbaa !26
  %mul = mul nsw i32 %20, 2
  %cmp9 = icmp slt i32 %19, %mul
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %21 to i64
  %22 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %22, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %23 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %23, 1
  %idxprom10 = sext i32 %add to i64
  %24 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds float, float* %24, i64 %idxprom10
  store float 1.000000e+00, float* %arrayidx11, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !tbaa !26
  %add12 = add nsw i32 %25, 2
  store i32 %add12, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.7, %if.then.3, %if.then
  %26 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.end(i64 16, i8* %26) #1
  %27 = bitcast %struct.PS_colour_space_s** %cspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %28 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %29 = bitcast i32* %limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #1
  %31 = load i32, i32* %retval
  ret i32 %31
}

; Function Attrs: nounwind uwtable
define internal i32 @devicendomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %limit = alloca i32, align 4
  %code = alloca i32, align 4
  %namesarray = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %limit to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %5 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %6 = bitcast %struct.gs_ref_memory_s* %5 to %struct.gs_memory_s*
  %7 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %6, %struct.ref_s* %7, i64 1, %struct.ref_s* %namesarray) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %8 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %10 = load i32, i32* %rsize, align 4, !tbaa !5
  %mul = mul i32 %10, 2
  store i32 %mul, i32* %limit, align 4, !tbaa !26
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !tbaa !26
  %12 = load i32, i32* %limit, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %11, %12
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %13 to i64
  %14 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %14, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %15, 1
  %idxprom2 = sext i32 %add to i64
  %16 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds float, float* %16, i64 %idxprom2
  store float 1.000000e+00, float* %arrayidx3, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !tbaa !26
  %add4 = add nsw i32 %17, 2
  store i32 %add4, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %18 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %18) #1
  %19 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19) #1
  %20 = bitcast i32* %limit to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #1
  %22 = load i32, i32* %retval
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal i32 @devicenbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %use = alloca i32, align 4
  %n_comp = alloca i32, align 4
  %narray = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %use to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %n_comp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast %struct.ref_s* %narray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %8 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %9 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %10 = load i32*, i32** %stack_depth.addr, align 8, !tbaa !1
  %call = call i32 @devicentransform(%struct.gs_context_state_s* %7, %struct.ref_s* %8, i32* %use, i32* %9, i32* %10) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %11 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp ne i32 %11, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = load i32, i32* %use, align 4, !tbaa !26
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.else.97, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %14 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %14, align 4, !tbaa !26
  %15 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %15, align 4, !tbaa !26
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %18 = bitcast %struct.gs_ref_memory_s* %17 to %struct.gs_memory_s*
  %19 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call2 = call i32 @array_get(%struct.gs_memory_s* %18, %struct.ref_s* %19, i64 1, %struct.ref_s* %narray) #7
  store i32 %call2, i32* %code, align 4, !tbaa !26
  %20 = load i32, i32* %code, align 4, !tbaa !26
  %cmp3 = icmp slt i32 %20, 0
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.1
  %21 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.then.1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %narray, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %22 = load i32, i32* %rsize, align 4, !tbaa !5
  store i32 %22, i32* %n_comp, align 4, !tbaa !26
  %23 = load i32, i32* %n_comp, align 4, !tbaa !26
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 26
  %stack7 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack6, i32 0, i32 0
  %p8 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack7, i32 0, i32 0
  %25 = load %struct.ref_s*, %struct.ref_s** %p8, align 8, !tbaa !10
  %idx.ext = sext i32 %23 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i64 %idx.neg
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p8, align 8, !tbaa !10
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 26
  %stack10 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack9, i32 0, i32 0
  %p11 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack10, i32 0, i32 0
  %27 = load %struct.ref_s*, %struct.ref_s** %p11, align 8, !tbaa !10
  store %struct.ref_s* %27, %struct.ref_s** %op, align 8, !tbaa !1
  %28 = load i32, i32* %base.addr, align 4, !tbaa !26
  switch i32 %28, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.24
    i32 2, label %sw.bb.24
    i32 3, label %sw.bb.57
  ]

sw.bb:                                            ; preds = %if.end.5
  br label %do.body

do.body:                                          ; preds = %sw.bb
  %29 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %29, i64 1
  store %struct.ref_s* %add.ptr12, %struct.ref_s** %op, align 8, !tbaa !1
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack13 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 26
  %stack14 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack13, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack14, i32 0, i32 2
  %31 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp15 = icmp ugt %struct.ref_s* %add.ptr12, %31
  br i1 %cmp15, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %do.body
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 26
  %stack18 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack17, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack18, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.body
  %33 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack19 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 26
  %stack20 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack19, i32 0, i32 0
  %p21 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack20, i32 0, i32 0
  store %struct.ref_s* %33, %struct.ref_s** %p21, align 8, !tbaa !10
  br label %if.end.22

if.end.22:                                        ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end.22
  br label %do.end

do.end:                                           ; preds = %do.cond
  %35 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  store float 0.000000e+00, float* %realval, align 4, !tbaa !20
  %36 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas23 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas23, i32 0, i32 0
  store i16 4096, i16* %type_attrs, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.24:                                         ; preds = %if.end.5, %if.end.5
  br label %do.body.25

do.body.25:                                       ; preds = %sw.bb.24
  %37 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr26 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i64 3
  store %struct.ref_s* %add.ptr26, %struct.ref_s** %op, align 8, !tbaa !1
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 26
  %stack28 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack27, i32 0, i32 0
  %top29 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack28, i32 0, i32 2
  %39 = load %struct.ref_s*, %struct.ref_s** %top29, align 8, !tbaa !69
  %cmp30 = icmp ugt %struct.ref_s* %add.ptr26, %39
  br i1 %cmp30, label %if.then.31, label %if.else.35

if.then.31:                                       ; preds = %do.body.25
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack32 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 26
  %stack33 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack32, i32 0, i32 0
  %requested34 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack33, i32 0, i32 7
  store i32 3, i32* %requested34, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.35:                                       ; preds = %do.body.25
  %41 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack36 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 26
  %stack37 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack36, i32 0, i32 0
  %p38 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack37, i32 0, i32 0
  store %struct.ref_s* %41, %struct.ref_s** %p38, align 8, !tbaa !10
  br label %if.end.39

if.end.39:                                        ; preds = %if.else.35
  br label %do.cond.40

do.cond.40:                                       ; preds = %if.end.39
  br label %do.end.41

do.end.41:                                        ; preds = %do.cond.40
  %43 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i64 -2
  %value42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %realval43 = bitcast %union.v* %value42 to float*
  store float 0.000000e+00, float* %realval43, align 4, !tbaa !20
  %44 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i64 -2
  %tas45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx44, i32 0, i32 0
  %type_attrs46 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas45, i32 0, i32 0
  store i16 4096, i16* %type_attrs46, align 2, !tbaa !22
  %45 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %45, i64 -1
  %value48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx47, i32 0, i32 1
  %realval49 = bitcast %union.v* %value48 to float*
  store float 0.000000e+00, float* %realval49, align 4, !tbaa !20
  %46 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i64 -1
  %tas51 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx50, i32 0, i32 0
  %type_attrs52 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas51, i32 0, i32 0
  store i16 4096, i16* %type_attrs52, align 2, !tbaa !22
  %47 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i32 0, i32 1
  %realval54 = bitcast %union.v* %value53 to float*
  store float 0.000000e+00, float* %realval54, align 4, !tbaa !20
  %48 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas55 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %48, i32 0, i32 0
  %type_attrs56 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas55, i32 0, i32 0
  store i16 4096, i16* %type_attrs56, align 2, !tbaa !22
  br label %sw.epilog

sw.bb.57:                                         ; preds = %if.end.5
  br label %do.body.58

do.body.58:                                       ; preds = %sw.bb.57
  %49 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr59 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i64 4
  store %struct.ref_s* %add.ptr59, %struct.ref_s** %op, align 8, !tbaa !1
  %50 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %50, i32 0, i32 26
  %stack61 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack60, i32 0, i32 0
  %top62 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack61, i32 0, i32 2
  %51 = load %struct.ref_s*, %struct.ref_s** %top62, align 8, !tbaa !69
  %cmp63 = icmp ugt %struct.ref_s* %add.ptr59, %51
  br i1 %cmp63, label %if.then.64, label %if.else.68

if.then.64:                                       ; preds = %do.body.58
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack65 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 26
  %stack66 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack65, i32 0, i32 0
  %requested67 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack66, i32 0, i32 7
  store i32 4, i32* %requested67, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.68:                                       ; preds = %do.body.58
  %53 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack69 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 26
  %stack70 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack69, i32 0, i32 0
  %p71 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack70, i32 0, i32 0
  store %struct.ref_s* %53, %struct.ref_s** %p71, align 8, !tbaa !10
  br label %if.end.72

if.end.72:                                        ; preds = %if.else.68
  br label %do.cond.73

do.cond.73:                                       ; preds = %if.end.72
  br label %do.end.74

do.end.74:                                        ; preds = %do.cond.73
  %55 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx75 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i64 -3
  %value76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx75, i32 0, i32 1
  %realval77 = bitcast %union.v* %value76 to float*
  store float 0.000000e+00, float* %realval77, align 4, !tbaa !20
  %56 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx78 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i64 -3
  %tas79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx78, i32 0, i32 0
  %type_attrs80 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas79, i32 0, i32 0
  store i16 4096, i16* %type_attrs80, align 2, !tbaa !22
  %57 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %57, i64 -2
  %value82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx81, i32 0, i32 1
  %realval83 = bitcast %union.v* %value82 to float*
  store float 0.000000e+00, float* %realval83, align 4, !tbaa !20
  %58 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx84 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i64 -2
  %tas85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx84, i32 0, i32 0
  %type_attrs86 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas85, i32 0, i32 0
  store i16 4096, i16* %type_attrs86, align 2, !tbaa !22
  %59 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %59, i64 -1
  %value88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx87, i32 0, i32 1
  %realval89 = bitcast %union.v* %value88 to float*
  store float 0.000000e+00, float* %realval89, align 4, !tbaa !20
  %60 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx90 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %60, i64 -1
  %tas91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx90, i32 0, i32 0
  %type_attrs92 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas91, i32 0, i32 0
  store i16 4096, i16* %type_attrs92, align 2, !tbaa !22
  %61 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value93 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %61, i32 0, i32 1
  %realval94 = bitcast %union.v* %value93 to float*
  store float 0.000000e+00, float* %realval94, align 4, !tbaa !20
  %62 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas95 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %62, i32 0, i32 0
  %type_attrs96 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas95, i32 0, i32 0
  store i16 4096, i16* %type_attrs96, align 2, !tbaa !22
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.5, %do.end.74, %do.end.41, %do.end
  br label %if.end.98

if.else.97:                                       ; preds = %if.end
  %63 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %63, align 4, !tbaa !26
  %64 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %64, align 4, !tbaa !26
  br label %if.end.98

if.end.98:                                        ; preds = %if.else.97, %sw.epilog
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.98, %if.then.64, %if.then.31, %if.then.16, %if.then.4, %if.then
  %65 = bitcast %struct.ref_s* %narray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %65) #1
  %66 = bitcast i32* %n_comp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #1
  %67 = bitcast i32* %use to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #1
  %68 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #1
  %69 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %69) #1
  %70 = load i32, i32* %retval
  ret i32 %70
}

; Function Attrs: nounwind uwtable
define internal i32 @devicentransform(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %devicenspace, i32* %usealternate, i32* %stage, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %devicenspace.addr = alloca %struct.ref_s*, align 8
  %usealternate.addr = alloca i32*, align 8
  %stage.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %dev = alloca %struct.gx_device_s*, align 8
  %narray = alloca %struct.ref_s, align 8
  %sname = alloca %struct.ref_s, align 8
  %proc = alloca %struct.ref_s, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %colorant_number = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %devicenspace, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  store i32* %usealternate, i32** %usealternate.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 0
  %2 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %device = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %2, i32 0, i32 78
  %3 = load %struct.gx_device_s*, %struct.gx_device_s** %device, align 8, !tbaa !82
  store %struct.gx_device_s* %3, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %4 = bitcast %struct.ref_s* %narray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %colorant_number to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  store i32 0, i32* %10, align 4, !tbaa !26
  %11 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %11, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %12 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %13 = bitcast %struct.gs_ref_memory_s* %12 to %struct.gs_memory_s*
  %14 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %13, %struct.ref_s* %14, i64 1, %struct.ref_s* %narray) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %15 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %15, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %16 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %narray, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %17 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %17 to i32
  %and = and i32 %conv, 15360
  %cmp1 = icmp eq i32 %and, 1024
  br i1 %cmp1, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.4
  %18 = load i32, i32* %i, align 4, !tbaa !26
  %tas5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %narray, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas5, i32 0, i32 2
  %19 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp6 = icmp ult i32 %18, %19
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 1
  %current9 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory8, i32 0, i32 0
  %21 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current9, align 8, !tbaa !55
  %22 = bitcast %struct.gs_ref_memory_s* %21 to %struct.gs_memory_s*
  %23 = load i32, i32* %i, align 4, !tbaa !26
  %conv10 = sext i32 %23 to i64
  %call11 = call i32 @array_get(%struct.gs_memory_s* %22, %struct.ref_s* %narray, i64 %conv10, %struct.ref_s* %sname) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %24, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %for.body
  %25 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %for.body
  %tas16 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %type_attrs17 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas16, i32 0, i32 0
  %26 = bitcast i16* %type_attrs17 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %26, i64 1
  %27 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv18 = zext i8 %27 to i32
  %cmp19 = icmp eq i32 %conv18, 13
  br i1 %cmp19, label %if.then.21, label %if.end.24

if.then.21:                                       ; preds = %if.end.15
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory22 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 1
  %current23 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory22, i32 0, i32 0
  %29 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current23, align 8, !tbaa !55
  %30 = bitcast %struct.gs_ref_memory_s* %29 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %30, i32 0, i32 2
  %31 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %31, i32 0, i32 16
  %32 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  call void @names_string_ref(%struct.name_table_s* %32, %struct.ref_s* %sname, %struct.ref_s* %sname) #7
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.21, %if.end.15
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 2
  %33 = load i32, i32* %rsize26, align 4, !tbaa !5
  %cmp27 = icmp eq i32 %33, 3
  br i1 %cmp27, label %land.lhs.true, label %if.end.36

land.lhs.true:                                    ; preds = %if.end.24
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %bytes = bitcast %union.v* %value to i8**
  %34 = load i8*, i8** %bytes, align 8, !tbaa !1
  %tas29 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize30 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas29, i32 0, i32 2
  %35 = load i32, i32* %rsize30, align 4, !tbaa !5
  %conv31 = zext i32 %35 to i64
  %call32 = call i32 @strncmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.75, i32 0, i32 0), i8* %34, i64 %conv31) #9
  %cmp33 = icmp eq i32 %call32, 0
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %land.lhs.true
  br label %for.inc

if.end.36:                                        ; preds = %land.lhs.true, %if.end.24
  %tas37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize38 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas37, i32 0, i32 2
  %36 = load i32, i32* %rsize38, align 4, !tbaa !5
  %cmp39 = icmp eq i32 %36, 4
  br i1 %cmp39, label %land.lhs.true.41, label %if.end.51

land.lhs.true.41:                                 ; preds = %if.end.36
  %value42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %bytes43 = bitcast %union.v* %value42 to i8**
  %37 = load i8*, i8** %bytes43, align 8, !tbaa !1
  %tas44 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize45 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas44, i32 0, i32 2
  %38 = load i32, i32* %rsize45, align 4, !tbaa !5
  %conv46 = zext i32 %38 to i64
  %call47 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* %37, i64 %conv46) #9
  %cmp48 = icmp eq i32 %call47, 0
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %land.lhs.true.41
  br label %for.inc

if.end.51:                                        ; preds = %land.lhs.true.41, %if.end.36
  %39 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %39, i32 0, i32 42
  %get_color_comp_index = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 50
  %40 = load i32 (%struct.gx_device_s*, i8*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32)** %get_color_comp_index, align 8, !tbaa !83
  %41 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %value52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 1
  %bytes53 = bitcast %union.v* %value52 to i8**
  %42 = load i8*, i8** %bytes53, align 8, !tbaa !1
  %tas54 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname, i32 0, i32 0
  %rsize55 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas54, i32 0, i32 2
  %43 = load i32, i32* %rsize55, align 4, !tbaa !5
  %call56 = call i32 %40(%struct.gx_device_s* %41, i8* %42, i32 %43, i32 1) #7
  store i32 %call56, i32* %colorant_number, align 4, !tbaa !26
  %44 = load i32, i32* %colorant_number, align 4, !tbaa !26
  %cmp57 = icmp slt i32 %44, 0
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.51
  %45 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  store i32 1, i32* %45, align 4, !tbaa !26
  br label %for.end

if.end.60:                                        ; preds = %if.end.51
  br label %for.inc

for.inc:                                          ; preds = %if.end.60, %if.then.50, %if.then.35
  %46 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %46, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %if.then.59, %for.cond
  %47 = load i32*, i32** %usealternate.addr, align 8, !tbaa !1
  %48 = load i32, i32* %47, align 4, !tbaa !26
  %tobool = icmp ne i32 %48, 0
  br i1 %tobool, label %land.lhs.true.61, label %if.end.76

land.lhs.true.61:                                 ; preds = %for.end
  %49 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %50 = load i32, i32* %49, align 4, !tbaa !26
  %cmp62 = icmp eq i32 %50, 0
  br i1 %cmp62, label %if.then.64, label %if.end.76

if.then.64:                                       ; preds = %land.lhs.true.61
  %51 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %52 = load i32, i32* %51, align 4, !tbaa !26
  %inc65 = add nsw i32 %52, 1
  store i32 %inc65, i32* %51, align 4, !tbaa !26
  %53 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %53, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %54 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p, align 8, !tbaa !27
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory66 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 1
  %current67 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory66, i32 0, i32 0
  %56 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current67, align 8, !tbaa !55
  %57 = bitcast %struct.gs_ref_memory_s* %56 to %struct.gs_memory_s*
  %58 = load %struct.ref_s*, %struct.ref_s** %devicenspace.addr, align 8, !tbaa !1
  %call68 = call i32 @array_get(%struct.gs_memory_s* %57, %struct.ref_s* %58, i64 3, %struct.ref_s* %proc) #7
  store i32 %call68, i32* %code, align 4, !tbaa !26
  %59 = load i32, i32* %code, align 4, !tbaa !26
  %cmp69 = icmp slt i32 %59, 0
  br i1 %cmp69, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %if.then.64
  %60 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %60, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.72:                                        ; preds = %if.then.64
  %61 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %61, i32 0, i32 25
  %stack74 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack73, i32 0, i32 0
  %p75 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack74, i32 0, i32 0
  %62 = load %struct.ref_s*, %struct.ref_s** %p75, align 8, !tbaa !27
  %63 = bitcast %struct.ref_s* %62 to i8*
  %64 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.76:                                        ; preds = %land.lhs.true.61, %for.end
  %65 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %66 = load i32, i32* %65, align 4, !tbaa !26
  %cmp77 = icmp eq i32 %66, 1
  br i1 %cmp77, label %if.then.79, label %if.end.80

if.then.79:                                       ; preds = %if.end.76
  %67 = load i32*, i32** %stack_depth.addr, align 8, !tbaa !1
  store i32 0, i32* %67, align 4, !tbaa !26
  %68 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %68, align 4, !tbaa !26
  br label %if.end.80

if.end.80:                                        ; preds = %if.then.79, %if.end.76
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.80, %if.end.72, %if.then.71, %if.then.14, %if.then.3, %if.then
  %69 = bitcast i32* %colorant_number to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #1
  %70 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #1
  %71 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #1
  %72 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.end(i64 16, i8* %72) #1
  %73 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %73) #1
  %74 = bitcast %struct.ref_s* %narray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %74) #1
  %75 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %75) #1
  %76 = load i32, i32* %retval
  ret i32 %76
}

; Function Attrs: nounwind uwtable
define internal i32 @devicenvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %narray = alloca %struct.ref_s, align 8
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.ref_s* %narray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %5, %struct.ref_s** %op, align 8, !tbaa !1
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %7 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %8 = bitcast %struct.gs_ref_memory_s* %7 to %struct.gs_memory_s*
  %9 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %8, %struct.ref_s* %9, i64 1, %struct.ref_s* %narray) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %10, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %narray, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %12 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %12 to i32
  %and = and i32 %conv, 15360
  %cmp1 = icmp eq i32 %and, 1024
  br i1 %cmp1, label %if.end.4, label %if.then.3

if.then.3:                                        ; preds = %if.end
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %13 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %tas5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %narray, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas5, i32 0, i32 2
  %14 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp6 = icmp ult i32 %13, %14
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.4
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.4
  %tas10 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %narray, i32 0, i32 0
  %rsize11 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas10, i32 0, i32 2
  %15 = load i32, i32* %rsize11, align 4, !tbaa !5
  %sub = sub i32 %15, 1
  %16 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext = zext i32 %sub to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %16, i64 %idx.neg
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.9
  %17 = load i32, i32* %i, align 4, !tbaa !26
  %tas12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %narray, i32 0, i32 0
  %rsize13 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas12, i32 0, i32 2
  %18 = load i32, i32* %rsize13, align 4, !tbaa !5
  %cmp14 = icmp ult i32 %17, %18
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas16 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %19, i32 0, i32 0
  %type_attrs17 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas16, i32 0, i32 0
  %20 = bitcast i16* %type_attrs17 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 1
  %21 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv18 = zext i8 %21 to i32
  %cmp19 = icmp eq i32 %conv18, 11
  br i1 %cmp19, label %if.end.28, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %22 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas21 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 0, i32 0
  %type_attrs22 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas21, i32 0, i32 0
  %23 = bitcast i16* %type_attrs22 to i8*
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 1
  %24 = load i8, i8* %arrayidx23, align 1, !tbaa !54
  %conv24 = zext i8 %24 to i32
  %cmp25 = icmp eq i32 %conv24, 16
  br i1 %cmp25, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %land.lhs.true, %for.body
  %25 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %25 to i64
  %26 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds float, float* %26, i64 %idxprom
  %27 = load float, float* %arrayidx29, align 4, !tbaa !20
  %conv30 = fpext float %27 to double
  %cmp31 = fcmp ogt double %conv30, 1.000000e+00
  br i1 %cmp31, label %if.then.33, label %if.end.36

if.then.33:                                       ; preds = %if.end.28
  %28 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom34 = sext i32 %28 to i64
  %29 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx35 = getelementptr inbounds float, float* %29, i64 %idxprom34
  store float 1.000000e+00, float* %arrayidx35, align 4, !tbaa !20
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.33, %if.end.28
  %30 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom37 = sext i32 %30 to i64
  %31 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds float, float* %31, i64 %idxprom37
  %32 = load float, float* %arrayidx38, align 4, !tbaa !20
  %conv39 = fpext float %32 to double
  %cmp40 = fcmp olt double %conv39, 0.000000e+00
  br i1 %cmp40, label %if.then.42, label %if.end.45

if.then.42:                                       ; preds = %if.end.36
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom43 = sext i32 %33 to i64
  %34 = load float*, float** %values.addr, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds float, float* %34, i64 %idxprom43
  store float 0.000000e+00, float* %arrayidx44, align 4, !tbaa !20
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.42, %if.end.36
  %35 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.45
  %36 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.27, %if.then.8, %if.then.3, %if.then
  %37 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #1
  %38 = bitcast %struct.ref_s* %narray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %38) #1
  %39 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  %40 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #1
  %41 = load i32, i32* %retval
  ret i32 %41
}

; Function Attrs: nounwind uwtable
define internal i32 @devicencompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  %sname1 = alloca %struct.ref_s, align 8
  %sname2 = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %sname1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s* %sname2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %sname1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call3 = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %sname2) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %12, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %13 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %13 to i32
  %and = and i32 %conv, 15360
  %cmp7 = icmp eq i32 %and, 1024
  br i1 %cmp7, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %if.end.6
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %14 = load i16, i16* %type_attrs12, align 2, !tbaa !22
  %conv13 = zext i16 %14 to i32
  %and14 = and i32 %conv13, 15360
  %cmp15 = icmp eq i32 %and14, 1024
  br i1 %cmp15, label %if.end.18, label %if.then.17

if.then.17:                                       ; preds = %if.end.10
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.10
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call19 = call i32 @comparearrays(%struct.gs_context_state_s* %15, %struct.ref_s* %sname1, %struct.ref_s* %sname2) #7
  %tobool = icmp ne i32 %call19, 0
  br i1 %tobool, label %if.end.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.18
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.18
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory22 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 1
  %current23 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory22, i32 0, i32 0
  %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current23, align 8, !tbaa !55
  %18 = bitcast %struct.gs_ref_memory_s* %17 to %struct.gs_memory_s*
  %19 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call24 = call i32 @array_get(%struct.gs_memory_s* %18, %struct.ref_s* %19, i64 2, %struct.ref_s* %sname1) #7
  store i32 %call24, i32* %code, align 4, !tbaa !26
  %20 = load i32, i32* %code, align 4, !tbaa !26
  %cmp25 = icmp slt i32 %20, 0
  br i1 %cmp25, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end.21
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 1
  %current30 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory29, i32 0, i32 0
  %22 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current30, align 8, !tbaa !55
  %23 = bitcast %struct.gs_ref_memory_s* %22 to %struct.gs_memory_s*
  %24 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call31 = call i32 @array_get(%struct.gs_memory_s* %23, %struct.ref_s* %24, i64 2, %struct.ref_s* %sname2) #7
  store i32 %call31, i32* %code, align 4, !tbaa !26
  %25 = load i32, i32* %code, align 4, !tbaa !26
  %cmp32 = icmp slt i32 %25, 0
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.end.28
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %if.end.28
  %tas36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs37 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas36, i32 0, i32 0
  %26 = bitcast i16* %type_attrs37 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %26, i64 1
  %27 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv38 = zext i8 %27 to i32
  %tas39 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 0
  %type_attrs40 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas39, i32 0, i32 0
  %28 = bitcast i16* %type_attrs40 to i8*
  %arrayidx41 = getelementptr inbounds i8, i8* %28, i64 1
  %29 = load i8, i8* %arrayidx41, align 1, !tbaa !54
  %conv42 = zext i8 %29 to i32
  %cmp43 = icmp ne i32 %conv38, %conv42
  br i1 %cmp43, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.end.35
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %if.end.35
  %tas47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs48 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas47, i32 0, i32 0
  %30 = load i16, i16* %type_attrs48, align 2, !tbaa !22
  %conv49 = zext i16 %30 to i32
  %and50 = and i32 %conv49, 15360
  %cmp51 = icmp eq i32 %and50, 1024
  br i1 %cmp51, label %if.then.53, label %if.else

if.then.53:                                       ; preds = %if.end.46
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call54 = call i32 @comparearrays(%struct.gs_context_state_s* %31, %struct.ref_s* %sname1, %struct.ref_s* %sname2) #7
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %if.then.53
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.57:                                        ; preds = %if.then.53
  br label %if.end.72

if.else:                                          ; preds = %if.end.46
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  %32 = bitcast i16* %type_attrs59 to i8*
  %arrayidx60 = getelementptr inbounds i8, i8* %32, i64 1
  %33 = load i8, i8* %arrayidx60, align 1, !tbaa !54
  %conv61 = zext i8 %33 to i32
  %cmp62 = icmp eq i32 %conv61, 13
  br i1 %cmp62, label %if.end.65, label %if.then.64

if.then.64:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.else
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname1, i32 0, i32 1
  %pname = bitcast %union.v* %value to %struct.name_s**
  %34 = load %struct.name_s*, %struct.name_s** %pname, align 8, !tbaa !1
  %value66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sname2, i32 0, i32 1
  %pname67 = bitcast %union.v* %value66 to %struct.name_s**
  %35 = load %struct.name_s*, %struct.name_s** %pname67, align 8, !tbaa !1
  %cmp68 = icmp eq %struct.name_s* %34, %35
  br i1 %cmp68, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.end.65
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.71:                                        ; preds = %if.end.65
  br label %if.end.72

if.end.72:                                        ; preds = %if.end.71, %if.end.57
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 1
  %current74 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory73, i32 0, i32 0
  %37 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current74, align 8, !tbaa !55
  %38 = bitcast %struct.gs_ref_memory_s* %37 to %struct.gs_memory_s*
  %39 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call75 = call i32 @array_get(%struct.gs_memory_s* %38, %struct.ref_s* %39, i64 3, %struct.ref_s* %sname1) #7
  store i32 %call75, i32* %code, align 4, !tbaa !26
  %40 = load i32, i32* %code, align 4, !tbaa !26
  %cmp76 = icmp slt i32 %40, 0
  br i1 %cmp76, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.end.72
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.79:                                        ; preds = %if.end.72
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory80 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 1
  %current81 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory80, i32 0, i32 0
  %42 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current81, align 8, !tbaa !55
  %43 = bitcast %struct.gs_ref_memory_s* %42 to %struct.gs_memory_s*
  %44 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call82 = call i32 @array_get(%struct.gs_memory_s* %43, %struct.ref_s* %44, i64 3, %struct.ref_s* %sname2) #7
  store i32 %call82, i32* %code, align 4, !tbaa !26
  %45 = load i32, i32* %code, align 4, !tbaa !26
  %cmp83 = icmp slt i32 %45, 0
  br i1 %cmp83, label %if.then.85, label %if.end.86

if.then.85:                                       ; preds = %if.end.79
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.86:                                        ; preds = %if.end.79
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call87 = call i32 @comparearrays(%struct.gs_context_state_s* %46, %struct.ref_s* %sname1, %struct.ref_s* %sname2) #7
  store i32 %call87, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.86, %if.then.85, %if.then.78, %if.then.70, %if.then.64, %if.then.56, %if.then.45, %if.then.34, %if.then.27, %if.then.20, %if.then.17, %if.then.9, %if.then.5, %if.then
  %47 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #1
  %48 = bitcast %struct.ref_s* %sname2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %48) #1
  %49 = bitcast %struct.ref_s* %sname1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @deviceninitialproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  %i = alloca i32, align 4
  %num_components = alloca i32, align 4
  %code = alloca i32, align 4
  %namesarray = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %num_components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %5, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %6 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %7 = bitcast %struct.gs_ref_memory_s* %6 to %struct.gs_memory_s*
  %8 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %7, %struct.ref_s* %8, i64 1, %struct.ref_s* %namesarray) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namesarray, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %11 = load i32, i32* %rsize, align 4, !tbaa !5
  store i32 %11, i32* %num_components, align 4, !tbaa !26
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !tbaa !26
  %13 = load i32, i32* %num_components, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %12, %13
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %14 to i64
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  store float 1.000000e+00, float* %arrayidx, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 0
  %17 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call2 = call i32 @gs_setcolor(%struct.gs_state_s* %17, %struct.gs_client_color_s* %cc) #7
  store i32 %call2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %18 = bitcast %struct.ref_s* %namesarray to i8*
  call void @llvm.lifetime.end(i64 16, i8* %18) #1
  %19 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19) #1
  %20 = bitcast i32* %num_components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #1
  %22 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %22) #1
  %23 = load i32, i32* %retval
  ret i32 %23
}

; Function Attrs: nounwind uwtable
define internal i32 @setindexedspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %pproc = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %edepth = alloca i32, align 4
  %cspace_old = alloca %struct.ref_colorspace_s, align 8
  %hival = alloca %struct.ref_s, align 8
  %lookup = alloca %struct.ref_s, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %pcs_base = alloca %struct.gs_color_space_s*, align 8
  %cleanup.dest.slot = alloca i32
  %num_values = alloca i32, align 4
  %data_tmp = alloca i8*, align 8
  %map = alloca %struct.gs_indexed_map_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %pproc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 0
  %2 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %2, i32 0, i32 2
  %3 = load i8*, i8** %client_data, align 8, !tbaa !53
  %4 = bitcast i8* %3 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %4, i32 0, i32 5
  %arrayidx = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %procs = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx, i32 0, i32 1
  %special = getelementptr inbounds %struct.ref_color_procs_s, %struct.ref_color_procs_s* %procs, i32 0, i32 1
  %index_proc = bitcast %union.anon.6* %special to %struct.ref_s*
  store %struct.ref_s* %index_proc, %struct.ref_s** %pproc, align 8, !tbaa !1
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %6 = bitcast i32* %edepth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %call = call i32 @ref_stack_count(%struct.ref_stack_s* %stack) #7
  store i32 %call, i32* %edepth, align 4, !tbaa !26
  %8 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.lifetime.start(i64 96, i8* %8) #1
  %9 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.start(i64 16, i8* %9) #1
  %10 = bitcast %struct.ref_s* %lookup to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #1
  %11 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  %12 = bitcast %struct.gs_color_space_s** %pcs_base to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 2
  %14 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %14, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

if.end:                                           ; preds = %entry
  %15 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %15, align 4, !tbaa !26
  %16 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %17 = load i32, i32* %16, align 4, !tbaa !26
  %cmp1 = icmp eq i32 %17, 1
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %18 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %18, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

if.end.3:                                         ; preds = %if.end
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs4 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %19, i32 0, i32 0
  %20 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs4, align 8, !tbaa !43
  %client_data5 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %20, i32 0, i32 2
  %21 = load i8*, i8** %client_data5, align 8, !tbaa !53
  %22 = bitcast i8* %21 to %struct.int_gstate_s*
  %colorspace6 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %22, i32 0, i32 5
  %arrayidx7 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace6, i32 0, i64 0
  %23 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  %24 = bitcast %struct.ref_colorspace_s* %arrayidx7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 96, i32 8, i1 false), !tbaa.struct !77
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 0
  %26 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs8, align 8, !tbaa !43
  %call9 = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %26) #7
  store %struct.gs_color_space_s* %call9, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %28 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %29 = bitcast %struct.gs_ref_memory_s* %28 to %struct.gs_memory_s*
  %30 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call10 = call i32 @array_get(%struct.gs_memory_s* %29, %struct.ref_s* %30, i64 3, %struct.ref_s* %lookup) #7
  store i32 %call10, i32* %code, align 4, !tbaa !26
  %31 = load i32, i32* %code, align 4, !tbaa !26
  %cmp11 = icmp slt i32 %31, 0
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end.3
  %32 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %32, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

if.end.13:                                        ; preds = %if.end.3
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory14 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 1
  %current15 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory14, i32 0, i32 0
  %34 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current15, align 8, !tbaa !55
  %35 = bitcast %struct.gs_ref_memory_s* %34 to %struct.gs_memory_s*
  %36 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call16 = call i32 @array_get(%struct.gs_memory_s* %35, %struct.ref_s* %36, i64 2, %struct.ref_s* %hival) #7
  store i32 %call16, i32* %code, align 4, !tbaa !26
  %37 = load i32, i32* %code, align 4, !tbaa !26
  %cmp17 = icmp slt i32 %37, 0
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.13
  %38 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %38, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

if.end.19:                                        ; preds = %if.end.13
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %39 = bitcast i16* %type_attrs to i8*
  %arrayidx20 = getelementptr inbounds i8, i8* %39, i64 1
  %40 = load i8, i8* %arrayidx20, align 1, !tbaa !54
  %conv = zext i8 %40 to i32
  %cmp21 = icmp eq i32 %conv, 18
  br i1 %cmp21, label %if.then.23, label %if.else.99

if.then.23:                                       ; preds = %if.end.19
  %41 = bitcast i32* %num_values to i8*
  call void @llvm.lifetime.start(i64 4, i8* %41) #1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %42 = load i64, i64* %intval, align 8, !tbaa !23
  %add = add nsw i64 %42, 1
  %43 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %43, i32 0, i32 0
  %44 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %num_components = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %44, i32 0, i32 4
  %45 = load i32 (%struct.gs_color_space_s*)*, i32 (%struct.gs_color_space_s*)** %num_components, align 8, !tbaa !98
  %46 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %call24 = call i32 %45(%struct.gs_color_space_s* %46) #7
  %conv25 = sext i32 %call24 to i64
  %mul = mul nsw i64 %add, %conv25
  %conv26 = trunc i64 %mul to i32
  store i32 %conv26, i32* %num_values, align 4, !tbaa !26
  %47 = bitcast i8** %data_tmp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %47) #1
  br label %do.body

do.body:                                          ; preds = %if.then.23
  %tas27 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 0
  %type_attrs28 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas27, i32 0, i32 0
  %48 = load i16, i16* %type_attrs28, align 2, !tbaa !22
  %conv29 = zext i16 %48 to i32
  %and = and i32 %conv29, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end.31, label %if.then.30

if.then.30:                                       ; preds = %do.body
  store i32 -7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.31
  br label %do.end

do.end:                                           ; preds = %do.cond
  %tas32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas32, i32 0, i32 2
  %49 = load i32, i32* %rsize, align 4, !tbaa !5
  %50 = load i32, i32* %num_values, align 4, !tbaa !26
  %cmp33 = icmp ult i32 %49, %50
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %do.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %do.end
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory37 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 1
  %current38 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory37, i32 0, i32 0
  %52 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current38, align 8, !tbaa !55
  %53 = bitcast %struct.gs_ref_memory_s* %52 to %struct.gs_memory_s*
  %call39 = call %struct.gs_color_space_s* @gs_cspace_alloc(%struct.gs_memory_s* %53, %struct.gs_color_space_type_s* @gs_color_space_type_Indexed) #7
  store %struct.gs_color_space_s* %call39, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %54 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %tobool40 = icmp ne %struct.gs_color_space_s* %54, null
  br i1 %tobool40, label %if.end.42, label %if.then.41

if.then.41:                                       ; preds = %if.end.36
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.42:                                        ; preds = %if.end.36
  %55 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %56 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %base_space = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %56, i32 0, i32 3
  store %struct.gs_color_space_s* %55, %struct.gs_color_space_s** %base_space, align 8, !tbaa !99
  %57 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  call void @rc_increment_cs(%struct.gs_color_space_s* %57) #7
  %58 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory43 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %58, i32 0, i32 1
  %current44 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory43, i32 0, i32 0
  %59 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current44, align 8, !tbaa !55
  %60 = bitcast %struct.gs_ref_memory_s* %59 to %struct.gs_memory_s*
  %procs45 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %60, i32 0, i32 1
  %alloc_string = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs45, i32 0, i32 16
  %61 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string, align 8, !tbaa !56
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory46 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 1
  %current47 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory46, i32 0, i32 0
  %63 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current47, align 8, !tbaa !55
  %64 = bitcast %struct.gs_ref_memory_s* %63 to %struct.gs_memory_s*
  %tas48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 0
  %rsize49 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas48, i32 0, i32 2
  %65 = load i32, i32* %rsize49, align 4, !tbaa !5
  %call50 = call i8* %61(%struct.gs_memory_s* %64, i32 %65, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0)) #7
  %66 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %66, i32 0, i32 7
  %indexed = bitcast %union.anon* %params to %struct.gs_indexed_params_s*
  %lookup51 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed, i32 0, i32 2
  %table = bitcast %union.anon.0* %lookup51 to %struct.gs_const_string_s*
  %data = getelementptr inbounds %struct.gs_const_string_s, %struct.gs_const_string_s* %table, i32 0, i32 0
  store i8* %call50, i8** %data, align 8, !tbaa !100
  store i8* %call50, i8** %data_tmp, align 8, !tbaa !1
  %67 = load i8*, i8** %data_tmp, align 8, !tbaa !1
  %tobool52 = icmp ne i8* %67, null
  br i1 %tobool52, label %if.end.84, label %if.then.53

if.then.53:                                       ; preds = %if.end.42
  br label %do.body.54

do.body.54:                                       ; preds = %if.then.53
  %68 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %tobool55 = icmp ne %struct.gs_color_space_s* %68, null
  br i1 %tobool55, label %if.then.56, label %if.end.81

if.then.56:                                       ; preds = %do.body.54
  br label %do.body.57

do.body.57:                                       ; preds = %if.then.56
  br label %do.body.58

do.body.58:                                       ; preds = %do.body.57
  br label %do.cond.59

do.cond.59:                                       ; preds = %do.body.58
  br label %do.end.60

do.end.60:                                        ; preds = %do.cond.59
  %69 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %rc = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %69, i32 0, i32 1
  %ref_count = getelementptr inbounds %struct.rc_header_s, %struct.rc_header_s* %rc, i32 0, i32 0
  %70 = load i64, i64* %ref_count, align 8, !tbaa !102
  %add61 = add nsw i64 %70, -1
  store i64 %add61, i64* %ref_count, align 8, !tbaa !102
  br label %do.cond.62

do.cond.62:                                       ; preds = %do.end.60
  br label %do.end.63

do.end.63:                                        ; preds = %do.cond.62
  %71 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %rc64 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %71, i32 0, i32 1
  %ref_count65 = getelementptr inbounds %struct.rc_header_s, %struct.rc_header_s* %rc64, i32 0, i32 0
  %72 = load i64, i64* %ref_count65, align 8, !tbaa !102
  %tobool66 = icmp ne i64 %72, 0
  br i1 %tobool66, label %if.else, label %if.then.67

if.then.67:                                       ; preds = %do.end.63
  br label %do.body.68

do.body.68:                                       ; preds = %if.then.67
  br label %do.body.69

do.body.69:                                       ; preds = %do.body.68
  br label %do.cond.70

do.cond.70:                                       ; preds = %do.body.69
  br label %do.end.71

do.end.71:                                        ; preds = %do.cond.70
  %73 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %rc72 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %73, i32 0, i32 1
  %free = getelementptr inbounds %struct.rc_header_s, %struct.rc_header_s* %rc72, i32 0, i32 2
  %74 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free, align 8, !tbaa !103
  %75 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %rc73 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %75, i32 0, i32 1
  %memory74 = getelementptr inbounds %struct.rc_header_s, %struct.rc_header_s* %rc73, i32 0, i32 1
  %76 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory74, align 8, !tbaa !104
  %77 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %78 = bitcast %struct.gs_color_space_s* %77 to i8*
  call void %74(%struct.gs_memory_s* %76, i8* %78, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0)) #7
  br label %do.cond.75

do.cond.75:                                       ; preds = %do.end.71
  br label %do.end.76

do.end.76:                                        ; preds = %do.cond.75
  store %struct.gs_color_space_s* null, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  br label %if.end.80

if.else:                                          ; preds = %do.end.63
  br label %do.body.77

do.body.77:                                       ; preds = %if.else
  br label %do.cond.78

do.cond.78:                                       ; preds = %do.body.77
  br label %do.end.79

do.end.79:                                        ; preds = %do.cond.78
  br label %if.end.80

if.end.80:                                        ; preds = %do.end.79, %do.end.76
  br label %if.end.81

if.end.81:                                        ; preds = %if.end.80, %do.body.54
  br label %do.cond.82

do.cond.82:                                       ; preds = %if.end.81
  br label %do.end.83

do.end.83:                                        ; preds = %do.cond.82
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.84:                                        ; preds = %if.end.42
  %79 = load i8*, i8** %data_tmp, align 8, !tbaa !1
  %value85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value85 to i8**
  %80 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  %tas86 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 0
  %rsize87 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas86, i32 0, i32 2
  %81 = load i32, i32* %rsize87, align 4, !tbaa !5
  %conv88 = zext i32 %81 to i64
  %call89 = call i8* @memcpy(i8* %79, i8* %80, i64 %conv88) #8
  %82 = load i32, i32* %num_values, align 4, !tbaa !26
  %83 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params90 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %83, i32 0, i32 7
  %indexed91 = bitcast %union.anon* %params90 to %struct.gs_indexed_params_s*
  %lookup92 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed91, i32 0, i32 2
  %table93 = bitcast %union.anon.0* %lookup92 to %struct.gs_const_string_s*
  %size = getelementptr inbounds %struct.gs_const_string_s, %struct.gs_const_string_s* %table93, i32 0, i32 1
  store i32 %82, i32* %size, align 4, !tbaa !105
  %84 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params94 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %84, i32 0, i32 7
  %indexed95 = bitcast %union.anon* %params94 to %struct.gs_indexed_params_s*
  %use_proc = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed95, i32 0, i32 3
  store i32 0, i32* %use_proc, align 4, !tbaa !106
  %85 = load %struct.ref_s*, %struct.ref_s** %pproc, align 8, !tbaa !1
  %tas96 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %85, i32 0, i32 0
  %type_attrs97 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas96, i32 0, i32 0
  store i16 3584, i16* %type_attrs97, align 2, !tbaa !22
  store i32 0, i32* %code, align 4, !tbaa !26
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.84, %do.end.83, %if.then.41, %if.then.35, %if.then.30
  %86 = bitcast i8** %data_tmp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %86) #1
  %87 = bitcast i32* %num_values to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.157 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.123

if.else.99:                                       ; preds = %if.end.19
  %88 = bitcast %struct.gs_indexed_map_s** %map to i8*
  call void @llvm.lifetime.start(i64 8, i8* %88) #1
  %89 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %value100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval101 = bitcast %union.v* %value100 to i64*
  %90 = load i64, i64* %intval101, align 8, !tbaa !23
  %add102 = add nsw i64 %90, 1
  %conv103 = trunc i64 %add102 to i32
  %91 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %call104 = call i32 @zcs_begin_map(%struct.gs_context_state_s* %89, %struct.gs_indexed_map_s** %map, %struct.ref_s* %lookup, i32 %conv103, %struct.gs_color_space_s* %91, i32 (%struct.gs_context_state_s*)* @indexed_cont) #7
  store i32 %call104, i32* %code, align 4, !tbaa !26
  %92 = load i32, i32* %code, align 4, !tbaa !26
  %cmp105 = icmp slt i32 %92, 0
  br i1 %cmp105, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %if.else.99
  %93 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %93, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.120

if.end.108:                                       ; preds = %if.else.99
  %94 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory109 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %94, i32 0, i32 1
  %current110 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory109, i32 0, i32 0
  %95 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current110, align 8, !tbaa !55
  %96 = bitcast %struct.gs_ref_memory_s* %95 to %struct.gs_memory_s*
  %call111 = call %struct.gs_color_space_s* @gs_cspace_alloc(%struct.gs_memory_s* %96, %struct.gs_color_space_type_s* @gs_color_space_type_Indexed) #7
  store %struct.gs_color_space_s* %call111, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %97 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %98 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %base_space112 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %98, i32 0, i32 3
  store %struct.gs_color_space_s* %97, %struct.gs_color_space_s** %base_space112, align 8, !tbaa !99
  %99 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  call void @rc_increment_cs(%struct.gs_color_space_s* %99) #7
  %100 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params113 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %100, i32 0, i32 7
  %indexed114 = bitcast %union.anon* %params113 to %struct.gs_indexed_params_s*
  %use_proc115 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed114, i32 0, i32 3
  store i32 1, i32* %use_proc115, align 4, !tbaa !106
  %101 = load %struct.ref_s*, %struct.ref_s** %pproc, align 8, !tbaa !1
  %102 = bitcast %struct.ref_s* %101 to i8*
  %103 = bitcast %struct.ref_s* %lookup to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 16, i32 8, i1 false), !tbaa.struct !24
  %104 = load %struct.gs_indexed_map_s*, %struct.gs_indexed_map_s** %map, align 8, !tbaa !1
  %proc = getelementptr inbounds %struct.gs_indexed_map_s, %struct.gs_indexed_map_s* %104, i32 0, i32 1
  %lookup_index = bitcast %union.anon.1* %proc to i32 (%struct.gs_color_space_s*, i32, float*)**
  store i32 (%struct.gs_color_space_s*, i32, float*)* @lookup_indexed_map, i32 (%struct.gs_color_space_s*, i32, float*)** %lookup_index, align 8, !tbaa !1
  %105 = load %struct.gs_indexed_map_s*, %struct.gs_indexed_map_s** %map, align 8, !tbaa !1
  %106 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params116 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %106, i32 0, i32 7
  %indexed117 = bitcast %union.anon* %params116 to %struct.gs_indexed_params_s*
  %lookup118 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed117, i32 0, i32 2
  %map119 = bitcast %union.anon.0* %lookup118 to %struct.gs_indexed_map_s**
  store %struct.gs_indexed_map_s* %105, %struct.gs_indexed_map_s** %map119, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.120

cleanup.120:                                      ; preds = %if.end.108, %if.then.107
  %107 = bitcast %struct.gs_indexed_map_s** %map to i8*
  call void @llvm.lifetime.end(i64 8, i8* %107) #1
  %cleanup.dest.121 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.121, label %cleanup.157 [
    i32 0, label %cleanup.cont.122
  ]

cleanup.cont.122:                                 ; preds = %cleanup.120
  br label %if.end.123

if.end.123:                                       ; preds = %cleanup.cont.122, %cleanup.cont
  %value124 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval125 = bitcast %union.v* %value124 to i64*
  %108 = load i64, i64* %intval125, align 8, !tbaa !23
  %conv126 = trunc i64 %108 to i32
  %109 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params127 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %109, i32 0, i32 7
  %indexed128 = bitcast %union.anon* %params127 to %struct.gs_indexed_params_s*
  %hival129 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed128, i32 0, i32 0
  store i32 %conv126, i32* %hival129, align 4, !tbaa !108
  %110 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %type130 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %110, i32 0, i32 0
  %111 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type130, align 8, !tbaa !62
  %num_components131 = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %111, i32 0, i32 4
  %112 = load i32 (%struct.gs_color_space_s*)*, i32 (%struct.gs_color_space_s*)** %num_components131, align 8, !tbaa !98
  %113 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %call132 = call i32 %112(%struct.gs_color_space_s* %113) #7
  %114 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params133 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %114, i32 0, i32 7
  %indexed134 = bitcast %union.anon* %params133 to %struct.gs_indexed_params_s*
  %n_comps = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed134, i32 0, i32 1
  store i32 %call132, i32* %n_comps, align 4, !tbaa !109
  %115 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs135 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %115, i32 0, i32 0
  %116 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs135, align 8, !tbaa !43
  %117 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call136 = call i32 @gs_setcolorspace(%struct.gs_state_s* %116, %struct.gs_color_space_s* %117) #7
  store i32 %call136, i32* %code, align 4, !tbaa !26
  %118 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0)) #7
  %119 = load i32, i32* %code, align 4, !tbaa !26
  %cmp137 = icmp slt i32 %119, 0
  br i1 %cmp137, label %if.then.139, label %if.end.149

if.then.139:                                      ; preds = %if.end.123
  %120 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs140 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %120, i32 0, i32 0
  %121 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs140, align 8, !tbaa !43
  %client_data141 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %121, i32 0, i32 2
  %122 = load i8*, i8** %client_data141, align 8, !tbaa !53
  %123 = bitcast i8* %122 to %struct.int_gstate_s*
  %colorspace142 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %123, i32 0, i32 5
  %arrayidx143 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace142, i32 0, i64 0
  %124 = bitcast %struct.ref_colorspace_s* %arrayidx143 to i8*
  %125 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %124, i8* %125, i64 96, i32 8, i1 false), !tbaa.struct !77
  %126 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack144 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %126, i32 0, i32 25
  %stack145 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack144, i32 0, i32 0
  %127 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack146 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %127, i32 0, i32 25
  %stack147 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack146, i32 0, i32 0
  %call148 = call i32 @ref_stack_count(%struct.ref_stack_s* %stack147) #7
  %128 = load i32, i32* %edepth, align 4, !tbaa !26
  %sub = sub i32 %call148, %128
  call void @ref_stack_pop(%struct.ref_stack_s* %stack145, i32 %sub) #7
  %129 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %129, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

if.end.149:                                       ; preds = %if.end.123
  %130 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %130, align 4, !tbaa !26
  %131 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack150 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %131, i32 0, i32 25
  %stack151 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack150, i32 0, i32 0
  %call152 = call i32 @ref_stack_count(%struct.ref_stack_s* %stack151) #7
  %132 = load i32, i32* %edepth, align 4, !tbaa !26
  %cmp153 = icmp eq i32 %call152, %132
  br i1 %cmp153, label %if.then.155, label %if.else.156

if.then.155:                                      ; preds = %if.end.149
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

if.else.156:                                      ; preds = %if.end.149
  %133 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %133, align 4, !tbaa !26
  %134 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %134, align 4, !tbaa !26
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.157

cleanup.157:                                      ; preds = %if.else.156, %if.then.155, %if.then.139, %cleanup.120, %cleanup, %if.then.18, %if.then.12, %if.then.2, %if.then
  %135 = bitcast %struct.gs_color_space_s** %pcs_base to i8*
  call void @llvm.lifetime.end(i64 8, i8* %135) #1
  %136 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %136) #1
  %137 = bitcast %struct.ref_s* %lookup to i8*
  call void @llvm.lifetime.end(i64 16, i8* %137) #1
  %138 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.end(i64 16, i8* %138) #1
  %139 = bitcast %struct.ref_colorspace_s* %cspace_old to i8*
  call void @llvm.lifetime.end(i64 96, i8* %139) #1
  %140 = bitcast i32* %edepth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %140) #1
  %141 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %141) #1
  %142 = bitcast %struct.ref_s** %pproc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %142) #1
  %143 = load i32, i32* %retval
  ret i32 %143
}

; Function Attrs: nounwind uwtable
define internal i32 @validateindexedspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %space) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %r = alloca %struct.ref_s*, align 8
  %nameref = alloca %struct.ref_s, align 8
  %sref = alloca %struct.ref_s, align 8
  %hival = alloca %struct.ref_s, align 8
  %lookup = alloca %struct.ref_s, align 8
  %altspace = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp133 = alloca i32, align 4
  %__s1_len152 = alloca i64, align 8
  %__s2_len154 = alloca i64, align 8
  %tmp155 = alloca i32, align 4
  %__s1162 = alloca i8*, align 8
  %__result166 = alloca i32, align 4
  %tmp204 = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %space, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s** %r to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %3 = load %struct.ref_s*, %struct.ref_s** %2, align 8, !tbaa !1
  store %struct.ref_s* %3, %struct.ref_s** %r, align 8, !tbaa !1
  %4 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast %struct.ref_s* %lookup to i8*
  call void @llvm.lifetime.start(i64 16, i8* %7) #1
  %8 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #1
  %9 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %10 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %10 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %12 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %12, 4
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %16 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %15, %struct.ref_s* %16, i64 2, %struct.ref_s* %hival) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %17, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %18 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %19 = bitcast i16* %type_attrs12 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv13 = zext i8 %20 to i32
  %cmp14 = icmp eq i32 %conv13, 11
  br i1 %cmp14, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.10
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.10
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %21 = load i64, i64* %intval, align 8, !tbaa !23
  %cmp18 = icmp slt i64 %21, 0
  br i1 %cmp18, label %if.then.24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.17
  %value20 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval21 = bitcast %union.v* %value20 to i64*
  %22 = load i64, i64* %intval21, align 8, !tbaa !23
  %cmp22 = icmp sgt i64 %22, 4096
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %lor.lhs.false, %if.end.17
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %lor.lhs.false
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 1
  %current27 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory26, i32 0, i32 0
  %24 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current27, align 8, !tbaa !55
  %25 = bitcast %struct.gs_ref_memory_s* %24 to %struct.gs_memory_s*
  %26 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %call28 = call i32 @array_get(%struct.gs_memory_s* %25, %struct.ref_s* %26, i64 3, %struct.ref_s* %lookup) #7
  store i32 %call28, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp29 = icmp slt i32 %27, 0
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.25
  %28 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end.25
  %tas33 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 0
  %type_attrs34 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas33, i32 0, i32 0
  %29 = bitcast i16* %type_attrs34 to i8*
  %arrayidx35 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx35, align 1, !tbaa !54
  %conv36 = zext i8 %30 to i32
  %cmp37 = icmp eq i32 %conv36, 18
  br i1 %cmp37, label %if.end.49, label %if.then.39

if.then.39:                                       ; preds = %if.end.32
  br label %do.body

do.body:                                          ; preds = %if.then.39
  %tas40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %lookup, i32 0, i32 0
  %type_attrs41 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas40, i32 0, i32 0
  %31 = load i16, i16* %type_attrs41, align 2, !tbaa !22
  %conv42 = zext i16 %31 to i32
  %and43 = and i32 %conv42, 15552
  %cmp44 = icmp eq i32 %and43, 1216
  br i1 %cmp44, label %if.end.48, label %if.then.46

if.then.46:                                       ; preds = %do.body
  %call47 = call i32 @check_proc_failed(%struct.ref_s* %lookup) #7
  store i32 %call47, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.48:                                        ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.48
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.49

if.end.49:                                        ; preds = %do.end, %if.end.32
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory50 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 1
  %current51 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory50, i32 0, i32 0
  %33 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current51, align 8, !tbaa !55
  %34 = bitcast %struct.gs_ref_memory_s* %33 to %struct.gs_memory_s*
  %35 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %call52 = call i32 @array_get(%struct.gs_memory_s* %34, %struct.ref_s* %35, i64 1, %struct.ref_s* %altspace) #7
  store i32 %call52, i32* %code, align 4, !tbaa !26
  %36 = load i32, i32* %code, align 4, !tbaa !26
  %cmp53 = icmp slt i32 %36, 0
  br i1 %cmp53, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.end.49
  %37 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %37, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.56:                                        ; preds = %if.end.49
  %tas57 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %altspace, i32 0, i32 0
  %type_attrs58 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas57, i32 0, i32 0
  %38 = bitcast i16* %type_attrs58 to i8*
  %arrayidx59 = getelementptr inbounds i8, i8* %38, i64 1
  %39 = load i8, i8* %arrayidx59, align 1, !tbaa !54
  %conv60 = zext i8 %39 to i32
  %cmp61 = icmp eq i32 %conv60, 13
  br i1 %cmp61, label %if.then.63, label %if.else

if.then.63:                                       ; preds = %if.end.56
  %40 = bitcast %struct.ref_s* %nameref to i8*
  %41 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.79

if.else:                                          ; preds = %if.end.56
  %tas64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %altspace, i32 0, i32 0
  %type_attrs65 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas64, i32 0, i32 0
  %42 = load i16, i16* %type_attrs65, align 2, !tbaa !22
  %conv66 = zext i16 %42 to i32
  %and67 = and i32 %conv66, 15360
  %cmp68 = icmp eq i32 %and67, 1024
  br i1 %cmp68, label %if.end.71, label %if.then.70

if.then.70:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.71:                                        ; preds = %if.else
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory72 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 1
  %current73 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory72, i32 0, i32 0
  %44 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current73, align 8, !tbaa !55
  %45 = bitcast %struct.gs_ref_memory_s* %44 to %struct.gs_memory_s*
  %call74 = call i32 @array_get(%struct.gs_memory_s* %45, %struct.ref_s* %altspace, i64 0, %struct.ref_s* %nameref) #7
  store i32 %call74, i32* %code, align 4, !tbaa !26
  %46 = load i32, i32* %code, align 4, !tbaa !26
  %cmp75 = icmp slt i32 %46, 0
  br i1 %cmp75, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.end.71
  %47 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %47, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.78:                                        ; preds = %if.end.71
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.then.63
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory80 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 1
  %current81 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory80, i32 0, i32 0
  %49 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current81, align 8, !tbaa !55
  %50 = bitcast %struct.gs_ref_memory_s* %49 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %50, i32 0, i32 2
  %51 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %51, i32 0, i32 16
  %52 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  call void @names_string_ref(%struct.name_table_s* %52, %struct.ref_s* %nameref, %struct.ref_s* %sref) #7
  %tas82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 0
  %rsize83 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas82, i32 0, i32 2
  %53 = load i32, i32* %rsize83, align 4, !tbaa !5
  %cmp84 = icmp eq i32 %53, 7
  br i1 %cmp84, label %if.then.86, label %if.end.221

if.then.86:                                       ; preds = %if.end.79
  %call87 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #9
  %cmp88 = icmp ult i64 %call87, 7
  br i1 %cmp88, label %cond.true, label %cond.false.137

cond.true:                                        ; preds = %if.then.86
  %54 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %54) #1
  %55 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.9 to i64)), i64 1), label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %cond.true
  %call90 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #9
  store i64 %call90, i64* %__s2_len, align 8, !tbaa !23
  %56 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp91 = icmp ult i64 %56, 4
  br i1 %cmp91, label %cond.true.93, label %cond.false

cond.true.93:                                     ; preds = %land.lhs.true
  %57 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %57) #1
  %value95 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value95 to i8**
  %58 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  store i8* %58, i8** %__s1, align 8, !tbaa !1
  %59 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %59) #1
  %60 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx97 = getelementptr inbounds i8, i8* %60, i64 0
  %61 = load i8, i8* %arrayidx97, align 1, !tbaa !54
  %conv98 = zext i8 %61 to i32
  %62 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), align 1, !tbaa !54
  %conv99 = zext i8 %62 to i32
  %sub = sub nsw i32 %conv98, %conv99
  store i32 %sub, i32* %__result, align 4, !tbaa !26
  %63 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp100 = icmp ugt i64 %63, 0
  br i1 %cmp100, label %land.lhs.true.102, label %if.end.132

land.lhs.true.102:                                ; preds = %cond.true.93
  %64 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp103 = icmp eq i32 %64, 0
  br i1 %cmp103, label %if.then.105, label %if.end.132

if.then.105:                                      ; preds = %land.lhs.true.102
  %65 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx106 = getelementptr inbounds i8, i8* %65, i64 1
  %66 = load i8, i8* %arrayidx106, align 1, !tbaa !54
  %conv107 = zext i8 %66 to i32
  %67 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 1), align 1, !tbaa !54
  %conv108 = zext i8 %67 to i32
  %sub109 = sub nsw i32 %conv107, %conv108
  store i32 %sub109, i32* %__result, align 4, !tbaa !26
  %68 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp110 = icmp ugt i64 %68, 1
  br i1 %cmp110, label %land.lhs.true.112, label %if.end.131

land.lhs.true.112:                                ; preds = %if.then.105
  %69 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp113 = icmp eq i32 %69, 0
  br i1 %cmp113, label %if.then.115, label %if.end.131

if.then.115:                                      ; preds = %land.lhs.true.112
  %70 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx116 = getelementptr inbounds i8, i8* %70, i64 2
  %71 = load i8, i8* %arrayidx116, align 1, !tbaa !54
  %conv117 = zext i8 %71 to i32
  %72 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 2), align 1, !tbaa !54
  %conv118 = zext i8 %72 to i32
  %sub119 = sub nsw i32 %conv117, %conv118
  store i32 %sub119, i32* %__result, align 4, !tbaa !26
  %73 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp120 = icmp ugt i64 %73, 2
  br i1 %cmp120, label %land.lhs.true.122, label %if.end.130

land.lhs.true.122:                                ; preds = %if.then.115
  %74 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp123 = icmp eq i32 %74, 0
  br i1 %cmp123, label %if.then.125, label %if.end.130

if.then.125:                                      ; preds = %land.lhs.true.122
  %75 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx126 = getelementptr inbounds i8, i8* %75, i64 3
  %76 = load i8, i8* %arrayidx126, align 1, !tbaa !54
  %conv127 = zext i8 %76 to i32
  %77 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i64 3), align 1, !tbaa !54
  %conv128 = zext i8 %77 to i32
  %sub129 = sub nsw i32 %conv127, %conv128
  store i32 %sub129, i32* %__result, align 4, !tbaa !26
  br label %if.end.130

if.end.130:                                       ; preds = %if.then.125, %land.lhs.true.122, %if.then.115
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %land.lhs.true.112, %if.then.105
  br label %if.end.132

if.end.132:                                       ; preds = %if.end.131, %land.lhs.true.102, %cond.true.93
  %78 = load i32, i32* %__result, align 4, !tbaa !26
  store i32 %78, i32* %tmp133, !tbaa !26
  %79 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #1
  %80 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %80) #1
  %81 = load i32, i32* %tmp133, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %cond.true
  %value134 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes135 = bitcast %union.v* %value134 to i8**
  %82 = load i8*, i8** %const_bytes135, align 8, !tbaa !1
  %call136 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0)) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.132
  %cond = phi i32 [ %81, %if.end.132 ], [ %call136, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !26
  %83 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #1
  %84 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #1
  %85 = load i32, i32* %tmp, !tbaa !26
  br label %cond.end.141

cond.false.137:                                   ; preds = %if.then.86
  %value138 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes139 = bitcast %union.v* %value138 to i8**
  %86 = load i8*, i8** %const_bytes139, align 8, !tbaa !1
  %call140 = call i32 @strncmp(i8* %86, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i64 7) #9
  br label %cond.end.141

cond.end.141:                                     ; preds = %cond.false.137, %cond.end
  %cond142 = phi i32 [ %85, %cond.end ], [ %call140, %cond.false.137 ]
  %cmp143 = icmp eq i32 %cond142, 0
  br i1 %cmp143, label %if.then.145, label %if.end.146

if.then.145:                                      ; preds = %cond.end.141
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.146:                                       ; preds = %cond.end.141
  %call147 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  %cmp148 = icmp ult i64 %call147, 7
  br i1 %cmp148, label %cond.true.150, label %cond.false.211

cond.true.150:                                    ; preds = %if.end.146
  %87 = bitcast i64* %__s1_len152 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %87) #1
  %88 = bitcast i64* %__s2_len154 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %88) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.10 to i64)), i64 1), label %land.lhs.true.156, label %cond.false.205

land.lhs.true.156:                                ; preds = %cond.true.150
  %call157 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  store i64 %call157, i64* %__s2_len154, align 8, !tbaa !23
  %89 = load i64, i64* %__s2_len154, align 8, !tbaa !23
  %cmp158 = icmp ult i64 %89, 4
  br i1 %cmp158, label %cond.true.160, label %cond.false.205

cond.true.160:                                    ; preds = %land.lhs.true.156
  %90 = bitcast i8** %__s1162 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %90) #1
  %value163 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes164 = bitcast %union.v* %value163 to i8**
  %91 = load i8*, i8** %const_bytes164, align 8, !tbaa !1
  store i8* %91, i8** %__s1162, align 8, !tbaa !1
  %92 = bitcast i32* %__result166 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %92) #1
  %93 = load i8*, i8** %__s1162, align 8, !tbaa !1
  %arrayidx167 = getelementptr inbounds i8, i8* %93, i64 0
  %94 = load i8, i8* %arrayidx167, align 1, !tbaa !54
  %conv168 = zext i8 %94 to i32
  %95 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), align 1, !tbaa !54
  %conv169 = zext i8 %95 to i32
  %sub170 = sub nsw i32 %conv168, %conv169
  store i32 %sub170, i32* %__result166, align 4, !tbaa !26
  %96 = load i64, i64* %__s2_len154, align 8, !tbaa !23
  %cmp171 = icmp ugt i64 %96, 0
  br i1 %cmp171, label %land.lhs.true.173, label %if.end.203

land.lhs.true.173:                                ; preds = %cond.true.160
  %97 = load i32, i32* %__result166, align 4, !tbaa !26
  %cmp174 = icmp eq i32 %97, 0
  br i1 %cmp174, label %if.then.176, label %if.end.203

if.then.176:                                      ; preds = %land.lhs.true.173
  %98 = load i8*, i8** %__s1162, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds i8, i8* %98, i64 1
  %99 = load i8, i8* %arrayidx177, align 1, !tbaa !54
  %conv178 = zext i8 %99 to i32
  %100 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1), align 1, !tbaa !54
  %conv179 = zext i8 %100 to i32
  %sub180 = sub nsw i32 %conv178, %conv179
  store i32 %sub180, i32* %__result166, align 4, !tbaa !26
  %101 = load i64, i64* %__s2_len154, align 8, !tbaa !23
  %cmp181 = icmp ugt i64 %101, 1
  br i1 %cmp181, label %land.lhs.true.183, label %if.end.202

land.lhs.true.183:                                ; preds = %if.then.176
  %102 = load i32, i32* %__result166, align 4, !tbaa !26
  %cmp184 = icmp eq i32 %102, 0
  br i1 %cmp184, label %if.then.186, label %if.end.202

if.then.186:                                      ; preds = %land.lhs.true.183
  %103 = load i8*, i8** %__s1162, align 8, !tbaa !1
  %arrayidx187 = getelementptr inbounds i8, i8* %103, i64 2
  %104 = load i8, i8* %arrayidx187, align 1, !tbaa !54
  %conv188 = zext i8 %104 to i32
  %105 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 2), align 1, !tbaa !54
  %conv189 = zext i8 %105 to i32
  %sub190 = sub nsw i32 %conv188, %conv189
  store i32 %sub190, i32* %__result166, align 4, !tbaa !26
  %106 = load i64, i64* %__s2_len154, align 8, !tbaa !23
  %cmp191 = icmp ugt i64 %106, 2
  br i1 %cmp191, label %land.lhs.true.193, label %if.end.201

land.lhs.true.193:                                ; preds = %if.then.186
  %107 = load i32, i32* %__result166, align 4, !tbaa !26
  %cmp194 = icmp eq i32 %107, 0
  br i1 %cmp194, label %if.then.196, label %if.end.201

if.then.196:                                      ; preds = %land.lhs.true.193
  %108 = load i8*, i8** %__s1162, align 8, !tbaa !1
  %arrayidx197 = getelementptr inbounds i8, i8* %108, i64 3
  %109 = load i8, i8* %arrayidx197, align 1, !tbaa !54
  %conv198 = zext i8 %109 to i32
  %110 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 3), align 1, !tbaa !54
  %conv199 = zext i8 %110 to i32
  %sub200 = sub nsw i32 %conv198, %conv199
  store i32 %sub200, i32* %__result166, align 4, !tbaa !26
  br label %if.end.201

if.end.201:                                       ; preds = %if.then.196, %land.lhs.true.193, %if.then.186
  br label %if.end.202

if.end.202:                                       ; preds = %if.end.201, %land.lhs.true.183, %if.then.176
  br label %if.end.203

if.end.203:                                       ; preds = %if.end.202, %land.lhs.true.173, %cond.true.160
  %111 = load i32, i32* %__result166, align 4, !tbaa !26
  store i32 %111, i32* %tmp204, !tbaa !26
  %112 = bitcast i32* %__result166 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %112) #1
  %113 = bitcast i8** %__s1162 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %113) #1
  %114 = load i32, i32* %tmp204, !tbaa !26
  br label %cond.end.209

cond.false.205:                                   ; preds = %land.lhs.true.156, %cond.true.150
  %value206 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes207 = bitcast %union.v* %value206 to i8**
  %115 = load i8*, i8** %const_bytes207, align 8, !tbaa !1
  %call208 = call i32 @strcmp(i8* %115, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #8
  br label %cond.end.209

cond.end.209:                                     ; preds = %cond.false.205, %if.end.203
  %cond210 = phi i32 [ %114, %if.end.203 ], [ %call208, %cond.false.205 ]
  store i32 %cond210, i32* %tmp155, !tbaa !26
  %116 = bitcast i64* %__s2_len154 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %116) #1
  %117 = bitcast i64* %__s1_len152 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %117) #1
  %118 = load i32, i32* %tmp155, !tbaa !26
  br label %cond.end.215

cond.false.211:                                   ; preds = %if.end.146
  %value212 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %const_bytes213 = bitcast %union.v* %value212 to i8**
  %119 = load i8*, i8** %const_bytes213, align 8, !tbaa !1
  %call214 = call i32 @strncmp(i8* %119, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i64 7) #9
  br label %cond.end.215

cond.end.215:                                     ; preds = %cond.false.211, %cond.end.209
  %cond216 = phi i32 [ %118, %cond.end.209 ], [ %call214, %cond.false.211 ]
  %cmp217 = icmp eq i32 %cond216, 0
  br i1 %cmp217, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %cond.end.215
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.220:                                       ; preds = %cond.end.215
  br label %if.end.221

if.end.221:                                       ; preds = %if.end.220, %if.end.79
  %120 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %121 = load %struct.ref_s*, %struct.ref_s** %120, align 8, !tbaa !1
  %122 = bitcast %struct.ref_s* %121 to i8*
  %123 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %122, i8* %123, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.221, %if.then.219, %if.then.145, %if.then.77, %if.then.70, %if.then.55, %if.then.46, %if.then.31, %if.then.24, %if.then.16, %if.then.9, %if.then.5, %if.then
  %124 = bitcast %struct.ref_s* %altspace to i8*
  call void @llvm.lifetime.end(i64 16, i8* %124) #1
  %125 = bitcast %struct.ref_s* %lookup to i8*
  call void @llvm.lifetime.end(i64 16, i8* %125) #1
  %126 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.end(i64 16, i8* %126) #1
  %127 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %127) #1
  %128 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %128) #1
  %129 = bitcast %struct.ref_s** %r to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129) #1
  %130 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %130) #1
  %131 = load i32, i32* %retval
  ret i32 %131
}

; Function Attrs: nounwind uwtable
define internal i32 @indexedalternatespace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s** %r, i32* %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %CIESubst.addr = alloca i32*, align 8
  %alt = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store i32* %CIESubst, i32** %CIESubst.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %alt to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %6 = load %struct.ref_s*, %struct.ref_s** %5, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %6, i64 1, %struct.ref_s* %alt) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %10 = load %struct.ref_s*, %struct.ref_s** %9, align 8, !tbaa !1
  %11 = bitcast %struct.ref_s* %10 to i8*
  %12 = bitcast %struct.ref_s* %alt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %13) #1
  %14 = bitcast %struct.ref_s* %alt to i8*
  call void @llvm.lifetime.end(i64 16, i8* %14) #1
  %15 = load i32, i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal i32 @indexedrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %hival = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %5, i64 2, %struct.ref_s* %hival) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %8, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %9 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = sitofp i64 %9 to float
  %10 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %10, i64 1
  store float %conv, float* %arrayidx1, align 4, !tbaa !20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %11) #1
  %12 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.end(i64 16, i8* %12) #1
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @indexeddomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %hival = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %5, i64 2, %struct.ref_s* %hival) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %8, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %9 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = sitofp i64 %9 to float
  %10 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %10, i64 1
  store float %conv, float* %arrayidx1, align 4, !tbaa !20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %11) #1
  %12 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.end(i64 16, i8* %12) #1
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @indexedbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %proc = alloca %struct.ref_s, align 8
  %es_code_ = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %ptr = alloca i8*, align 8
  %rval = alloca float, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %2 = load i32, i32* %1, align 4, !tbaa !26
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.else.84

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 0
  %5 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %5) #7
  store %struct.gs_color_space_s* %call, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %6 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 1, i32* %6, align 4, !tbaa !26
  %7 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %7, align 4, !tbaa !26
  %8 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %8, i32 0, i32 7
  %indexed = bitcast %union.anon* %params to %struct.gs_indexed_params_s*
  %use_proc = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed, i32 0, i32 3
  %9 = load i32, i32* %use_proc, align 4, !tbaa !106
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.then
  %10 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %11 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %11, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %12 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p, align 8, !tbaa !27
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %ep, align 8, !tbaa !1
  %13 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.start(i64 16, i8* %13) #1
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack2 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 25
  %stack3 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack2, i32 0, i32 0
  %p4 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack3, i32 0, i32 0
  %15 = load %struct.ref_s*, %struct.ref_s** %p4, align 8, !tbaa !27
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 25
  %stack6 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack5, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 2
  %17 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i64 -1
  %cmp7 = icmp ugt %struct.ref_s* %15, %add.ptr
  br i1 %cmp7, label %if.then.8, label %if.end.14

if.then.8:                                        ; preds = %if.then.1
  %18 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #1
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %19, i32 0, i32 25
  %stack10 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack9, i32 0, i32 0
  %call11 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack10, i32 1) #7
  store i32 %call11, i32* %es_code_, align 4, !tbaa !26
  %20 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %20, 0
  br i1 %cmp12, label %if.then.13, label %if.end

if.then.13:                                       ; preds = %if.then.8
  %21 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.8
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.13
  %22 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %22) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.19 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.14

if.end.14:                                        ; preds = %cleanup.cont, %if.then.1
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %24 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %25 = bitcast %struct.gs_ref_memory_s* %24 to %struct.gs_memory_s*
  %26 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call15 = call i32 @array_get(%struct.gs_memory_s* %25, %struct.ref_s* %26, i64 3, %struct.ref_s* %proc) #7
  store i32 %call15, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp16 = icmp slt i32 %27, 0
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.14
  %28 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19

if.end.18:                                        ; preds = %if.end.14
  %29 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %30 = bitcast %struct.ref_s* %29 to i8*
  %31 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.19

cleanup.19:                                       ; preds = %if.end.18, %if.then.17, %cleanup
  %32 = bitcast %struct.ref_s* %proc to i8*
  call void @llvm.lifetime.end(i64 16, i8* %32) #1
  %33 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #1
  br label %cleanup.83

if.else:                                          ; preds = %if.then
  %34 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %34) #1
  %35 = bitcast i32* %index to i8*
  call void @llvm.lifetime.start(i64 4, i8* %35) #1
  %36 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %36) #1
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 26
  %stack21 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p22 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack21, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p22, align 8, !tbaa !10
  store %struct.ref_s* %38, %struct.ref_s** %op, align 8, !tbaa !1
  %39 = bitcast i8** %ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %39) #1
  %40 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params23 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %40, i32 0, i32 7
  %indexed24 = bitcast %union.anon* %params23 to %struct.gs_indexed_params_s*
  %lookup = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed24, i32 0, i32 2
  %table = bitcast %union.anon.0* %lookup to %struct.gs_const_string_s*
  %data = getelementptr inbounds %struct.gs_const_string_s, %struct.gs_const_string_s* %table, i32 0, i32 0
  %41 = load i8*, i8** %data, align 8, !tbaa !100
  store i8* %41, i8** %ptr, align 8, !tbaa !1
  %42 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %42, align 4, !tbaa !26
  %43 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %44 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %44, i64 1
  %45 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %45 to i32
  %cmp25 = icmp eq i32 %conv, 11
  br i1 %cmp25, label %if.end.28, label %if.then.27

if.then.27:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79

if.end.28:                                        ; preds = %if.else
  %46 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %47 = load i64, i64* %intval, align 8, !tbaa !23
  %conv29 = trunc i64 %47 to i32
  store i32 %conv29, i32* %index, align 4, !tbaa !26
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack30 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 26
  %stack31 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack30, i32 0, i32 0
  %p32 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack31, i32 0, i32 0
  %49 = load %struct.ref_s*, %struct.ref_s** %p32, align 8, !tbaa !10
  %add.ptr33 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i64 -1
  store %struct.ref_s* %add.ptr33, %struct.ref_s** %p32, align 8, !tbaa !10
  %50 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack34 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %50, i32 0, i32 26
  %stack35 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack34, i32 0, i32 0
  %p36 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack35, i32 0, i32 0
  %51 = load %struct.ref_s*, %struct.ref_s** %p36, align 8, !tbaa !10
  store %struct.ref_s* %51, %struct.ref_s** %op, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %if.end.28
  %52 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params37 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %52, i32 0, i32 7
  %indexed38 = bitcast %union.anon* %params37 to %struct.gs_indexed_params_s*
  %n_comps = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed38, i32 0, i32 1
  %53 = load i32, i32* %n_comps, align 4, !tbaa !109
  %54 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext = sext i32 %53 to i64
  %add.ptr39 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i64 %idx.ext
  store %struct.ref_s* %add.ptr39, %struct.ref_s** %op, align 8, !tbaa !1
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack40 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 26
  %stack41 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack40, i32 0, i32 0
  %top42 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack41, i32 0, i32 2
  %56 = load %struct.ref_s*, %struct.ref_s** %top42, align 8, !tbaa !69
  %cmp43 = icmp ugt %struct.ref_s* %add.ptr39, %56
  br i1 %cmp43, label %if.then.45, label %if.else.51

if.then.45:                                       ; preds = %do.body
  %57 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params46 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %57, i32 0, i32 7
  %indexed47 = bitcast %union.anon* %params46 to %struct.gs_indexed_params_s*
  %n_comps48 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed47, i32 0, i32 1
  %58 = load i32, i32* %n_comps48, align 4, !tbaa !109
  %59 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack49 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %59, i32 0, i32 26
  %stack50 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack49, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack50, i32 0, i32 7
  store i32 %58, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79

if.else.51:                                       ; preds = %do.body
  %60 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %61 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack52 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %61, i32 0, i32 26
  %stack53 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack52, i32 0, i32 0
  %p54 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack53, i32 0, i32 0
  store %struct.ref_s* %60, %struct.ref_s** %p54, align 8, !tbaa !10
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.51
  br label %do.cond

do.cond:                                          ; preds = %if.end.55
  br label %do.end

do.end:                                           ; preds = %do.cond
  %62 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params56 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %62, i32 0, i32 7
  %indexed57 = bitcast %union.anon* %params56 to %struct.gs_indexed_params_s*
  %n_comps58 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed57, i32 0, i32 1
  %63 = load i32, i32* %n_comps58, align 4, !tbaa !109
  %sub = sub nsw i32 %63, 1
  %64 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext59 = sext i32 %sub to i64
  %idx.neg = sub i64 0, %idx.ext59
  %add.ptr60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %64, i64 %idx.neg
  store %struct.ref_s* %add.ptr60, %struct.ref_s** %op, align 8, !tbaa !1
  %65 = load i32, i32* %index, align 4, !tbaa !26
  %66 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params61 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %66, i32 0, i32 7
  %indexed62 = bitcast %union.anon* %params61 to %struct.gs_indexed_params_s*
  %n_comps63 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed62, i32 0, i32 1
  %67 = load i32, i32* %n_comps63, align 4, !tbaa !109
  %mul = mul nsw i32 %65, %67
  %68 = load i8*, i8** %ptr, align 8, !tbaa !1
  %idx.ext64 = sext i32 %mul to i64
  %add.ptr65 = getelementptr inbounds i8, i8* %68, i64 %idx.ext64
  store i8* %add.ptr65, i8** %ptr, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %69 = load i32, i32* %i, align 4, !tbaa !26
  %70 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params66 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %70, i32 0, i32 7
  %indexed67 = bitcast %union.anon* %params66 to %struct.gs_indexed_params_s*
  %n_comps68 = getelementptr inbounds %struct.gs_indexed_params_s, %struct.gs_indexed_params_s* %indexed67, i32 0, i32 1
  %71 = load i32, i32* %n_comps68, align 4, !tbaa !109
  %cmp69 = icmp slt i32 %69, %71
  br i1 %cmp69, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %72 = bitcast float* %rval to i8*
  call void @llvm.lifetime.start(i64 4, i8* %72) #1
  %73 = load i8*, i8** %ptr, align 8, !tbaa !1
  %incdec.ptr71 = getelementptr inbounds i8, i8* %73, i32 1
  store i8* %incdec.ptr71, i8** %ptr, align 8, !tbaa !1
  %74 = load i8, i8* %73, align 1, !tbaa !54
  %conv72 = zext i8 %74 to i32
  %conv73 = sitofp i32 %conv72 to double
  %div = fdiv double %conv73, 2.550000e+02
  %conv74 = fptrunc double %div to float
  store float %conv74, float* %rval, align 4, !tbaa !20
  %75 = load float, float* %rval, align 4, !tbaa !20
  %76 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value75 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %76, i32 0, i32 1
  %realval = bitcast %union.v* %value75 to float*
  store float %75, float* %realval, align 4, !tbaa !20
  %77 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %77, i32 0, i32 0
  %type_attrs77 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas76, i32 0, i32 0
  store i16 4096, i16* %type_attrs77, align 2, !tbaa !22
  %78 = bitcast float* %rval to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %79 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %79, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  %80 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr78 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %80, i32 1
  store %struct.ref_s* %incdec.ptr78, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.79

cleanup.79:                                       ; preds = %for.end, %if.then.45, %if.then.27
  %81 = bitcast i8** %ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #1
  %82 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %83 = bitcast i32* %index to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #1
  %84 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #1
  br label %cleanup.83

cleanup.83:                                       ; preds = %cleanup.79, %cleanup.19
  %85 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %85) #1
  br label %cleanup.85

if.else.84:                                       ; preds = %entry
  %86 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %86, align 4, !tbaa !26
  %87 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %87, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.85

cleanup.85:                                       ; preds = %if.else.84, %cleanup.83
  %88 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  %89 = load i32, i32* %retval
  ret i32 %89
}

; Function Attrs: nounwind uwtable
define internal i32 @indexedvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %hival = alloca %struct.ref_s, align 8
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %4 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %4, %struct.ref_s** %op, align 8, !tbaa !1
  %5 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %5, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %7 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 1
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %8 to i32
  %cmp1 = icmp eq i32 %conv, 11
  br i1 %cmp1, label %if.end.10, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %10 = bitcast i16* %type_attrs4 to i8*
  %arrayidx5 = getelementptr inbounds i8, i8* %10, i64 1
  %11 = load i8, i8* %arrayidx5, align 1, !tbaa !54
  %conv6 = zext i8 %11 to i32
  %cmp7 = icmp eq i32 %conv6, 16
  br i1 %cmp7, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %land.lhs.true, %if.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %14, %struct.ref_s* %15, i64 2, %struct.ref_s* %hival) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp11 = icmp slt i32 %16, 0
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.10
  %17 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.10
  %18 = load float*, float** %values.addr, align 8, !tbaa !1
  %19 = load float, float* %18, align 4, !tbaa !20
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %20 = load i64, i64* %intval, align 8, !tbaa !23
  %conv15 = sitofp i64 %20 to float
  %cmp16 = fcmp ogt float %19, %conv15
  br i1 %cmp16, label %if.then.18, label %if.end.22

if.then.18:                                       ; preds = %if.end.14
  %value19 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %hival, i32 0, i32 1
  %intval20 = bitcast %union.v* %value19 to i64*
  %21 = load i64, i64* %intval20, align 8, !tbaa !23
  %conv21 = sitofp i64 %21 to float
  %22 = load float*, float** %values.addr, align 8, !tbaa !1
  store float %conv21, float* %22, align 4, !tbaa !20
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.18, %if.end.14
  %23 = load float*, float** %values.addr, align 8, !tbaa !1
  %24 = load float, float* %23, align 4, !tbaa !20
  %cmp23 = fcmp olt float %24, 0.000000e+00
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.22
  %25 = load float*, float** %values.addr, align 8, !tbaa !1
  store float 0.000000e+00, float* %25, align 4, !tbaa !20
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.25, %if.end.22
  %26 = load float*, float** %values.addr, align 8, !tbaa !1
  %27 = load float, float* %26, align 4, !tbaa !20
  %conv27 = fpext float %27 to double
  %call28 = call double @floor(double %conv27) #10
  %conv29 = fptrunc double %call28 to float
  %28 = load float*, float** %values.addr, align 8, !tbaa !1
  store float %conv29, float* %28, align 4, !tbaa !20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.26, %if.then.13, %if.then.9, %if.then
  %29 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #1
  %30 = bitcast %struct.ref_s* %hival to i8*
  call void @llvm.lifetime.end(i64 16, i8* %30) #1
  %31 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #1
  %32 = load i32, i32* %retval
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define internal i32 @falsecompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @setpatternspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %pcs_base = alloca %struct.gs_color_space_s*, align 8
  %edepth = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast %struct.gs_color_space_s** %pcs_base to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i32* %edepth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %call = call i32 @ref_stack_count(%struct.ref_stack_s* %stack) #7
  store i32 %call, i32* %edepth, align 4, !tbaa !26
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %5, i32 0, i32 2
  %6 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %6, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %7, align 4, !tbaa !26
  store %struct.gs_color_space_s* null, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %8 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %9 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %9 to i32
  %and = and i32 %conv, 15360
  %cmp1 = icmp eq i32 %and, 1024
  br i1 %cmp1, label %if.then.3, label %if.end.18

if.then.3:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.3
  %10 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs5 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %11 = load i16, i16* %type_attrs5, align 2, !tbaa !22
  %conv6 = zext i16 %11 to i32
  %and7 = and i32 %conv6, 32
  %tobool = icmp ne i32 %and7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %do.body
  store i32 -7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.9
  br label %do.end

do.end:                                           ; preds = %do.cond
  %12 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %tas10 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas10, i32 0, i32 2
  %13 = load i32, i32* %rsize, align 4, !tbaa !5
  switch i32 %13, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.11
  ]

sw.bb:                                            ; preds = %do.end
  store %struct.gs_color_space_s* null, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  br label %sw.epilog

sw.default:                                       ; preds = %do.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb.11:                                         ; preds = %do.end
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 0
  %15 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call12 = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %15) #7
  store %struct.gs_color_space_s* %call12, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %16 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %16, i32 0, i32 0
  %17 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %num_components = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %17, i32 0, i32 4
  %18 = load i32 (%struct.gs_color_space_s*)*, i32 (%struct.gs_color_space_s*)** %num_components, align 8, !tbaa !98
  %19 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %call13 = call i32 %18(%struct.gs_color_space_s* %19) #7
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %sw.bb.11
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %sw.bb.11
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.17, %sw.bb
  br label %if.end.18

if.end.18:                                        ; preds = %sw.epilog, %if.end
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %21 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %22 = bitcast %struct.gs_ref_memory_s* %21 to %struct.gs_memory_s*
  %call19 = call %struct.gs_color_space_s* @gs_cspace_alloc(%struct.gs_memory_s* %22, %struct.gs_color_space_type_s* @gs_color_space_type_Pattern) #7
  store %struct.gs_color_space_s* %call19, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %23 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %24 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %base_space = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %24, i32 0, i32 3
  store %struct.gs_color_space_s* %23, %struct.gs_color_space_s** %base_space, align 8, !tbaa !99
  %25 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  %cmp20 = icmp ne %struct.gs_color_space_s* %25, null
  %conv21 = zext i1 %cmp20 to i32
  %26 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %26, i32 0, i32 7
  %pattern = bitcast %union.anon* %params to %struct.gs_pattern_params_s*
  %has_base_space = getelementptr inbounds %struct.gs_pattern_params_s, %struct.gs_pattern_params_s* %pattern, i32 0, i32 0
  store i32 %conv21, i32* %has_base_space, align 4, !tbaa !110
  %27 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs_base, align 8, !tbaa !1
  call void @rc_increment_cs(%struct.gs_color_space_s* %27) #7
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs22 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 0
  %29 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs22, align 8, !tbaa !43
  %30 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call23 = call i32 @gs_setcolorspace(%struct.gs_state_s* %29, %struct.gs_color_space_s* %30) #7
  store i32 %call23, i32* %code, align 4, !tbaa !26
  %31 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %31, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.81, i32 0, i32 0)) #7
  %32 = load i32, i32* %code, align 4, !tbaa !26
  %cmp24 = icmp slt i32 %32, 0
  br i1 %cmp24, label %if.then.26, label %if.end.32

if.then.26:                                       ; preds = %if.end.18
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack28 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack27, i32 0, i32 0
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 25
  %stack30 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack29, i32 0, i32 0
  %call31 = call i32 @ref_stack_count(%struct.ref_stack_s* %stack30) #7
  %35 = load i32, i32* %edepth, align 4, !tbaa !26
  %sub = sub i32 %call31, %35
  call void @ref_stack_pop(%struct.ref_stack_s* %stack28, i32 %sub) #7
  %36 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end.18
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 0
  %38 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs33, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %38, i32 0, i32 2
  %39 = load i8*, i8** %client_data, align 8, !tbaa !53
  %40 = bitcast i8* %39 to %struct.int_gstate_s*
  %pattern34 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %40, i32 0, i32 6
  %arrayidx = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %pattern34, i32 0, i64 0
  %tas35 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 0
  %type_attrs36 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas35, i32 0, i32 0
  store i16 3584, i16* %type_attrs36, align 2, !tbaa !22
  %41 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %41, align 4, !tbaa !26
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack37 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 25
  %stack38 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack37, i32 0, i32 0
  %call39 = call i32 @ref_stack_count(%struct.ref_stack_s* %stack38) #7
  %43 = load i32, i32* %edepth, align 4, !tbaa !26
  %cmp40 = icmp eq i32 %call39, %43
  %cond = select i1 %cmp40, i32 0, i32 5
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.32, %if.then.26, %if.then.16, %sw.default, %if.then.8, %if.then
  %44 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = bitcast i32* %edepth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #1
  %46 = bitcast %struct.gs_color_space_s** %pcs_base to i8*
  call void @llvm.lifetime.end(i64 8, i8* %46) #1
  %47 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = load i32, i32* %retval
  ret i32 %48
}

; Function Attrs: nounwind uwtable
define internal i32 @validatepatternspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %tref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %3 = load %struct.ref_s*, %struct.ref_s** %2, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %4 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 1
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 13
  br i1 %cmp, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %6 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %7 = load %struct.ref_s*, %struct.ref_s** %6, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs3 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 0
  %8 = load i16, i16* %type_attrs3, align 2, !tbaa !22
  %conv4 = zext i16 %8 to i32
  %and = and i32 %conv4, 15360
  %cmp5 = icmp eq i32 %and, 1024
  br i1 %cmp5, label %if.then.7, label %if.else.16

if.then.7:                                        ; preds = %if.then
  %9 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %10 = load %struct.ref_s*, %struct.ref_s** %9, align 8, !tbaa !1
  %tas8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas8, i32 0, i32 2
  %11 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp9 = icmp ugt i32 %11, 1
  br i1 %cmp9, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.then.7
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %16 = load %struct.ref_s*, %struct.ref_s** %15, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %14, %struct.ref_s* %16, i64 1, %struct.ref_s* %tref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %17, 0
  br i1 %cmp12, label %if.then.14, label %if.end

if.then.14:                                       ; preds = %if.then.11
  %18 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %18, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.11
  %19 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %20 = load %struct.ref_s*, %struct.ref_s** %19, align 8, !tbaa !1
  %21 = bitcast %struct.ref_s* %20 to i8*
  %22 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.15

if.else:                                          ; preds = %if.then.7
  %23 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %23, align 8, !tbaa !1
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.end
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.15
  br label %if.end.19

if.else.18:                                       ; preds = %entry
  %24 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %24, align 8, !tbaa !1
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.18, %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.else.16, %if.then.14
  %25 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %25) #1
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = load i32, i32* %retval
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i32 @patternalternatespace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s** %r, i32* %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %CIESubst.addr = alloca i32*, align 8
  %tref = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store i32* %CIESubst, i32** %CIESubst.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %3 = load %struct.ref_s*, %struct.ref_s** %2, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %4 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 1
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 13
  br i1 %cmp, label %if.else.18, label %if.then

if.then:                                          ; preds = %entry
  %6 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %7 = load %struct.ref_s*, %struct.ref_s** %6, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs3 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 0
  %8 = load i16, i16* %type_attrs3, align 2, !tbaa !22
  %conv4 = zext i16 %8 to i32
  %and = and i32 %conv4, 15360
  %cmp5 = icmp eq i32 %and, 1024
  br i1 %cmp5, label %if.then.7, label %if.else.16

if.then.7:                                        ; preds = %if.then
  %9 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %10 = load %struct.ref_s*, %struct.ref_s** %9, align 8, !tbaa !1
  %tas8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas8, i32 0, i32 2
  %11 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp9 = icmp ugt i32 %11, 1
  br i1 %cmp9, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %if.then.7
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %14, %struct.ref_s* %15, i64 1, %struct.ref_s* %tref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %16, 0
  br i1 %cmp12, label %if.then.14, label %if.end

if.then.14:                                       ; preds = %if.then.11
  %17 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.11
  %18 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %19 = load %struct.ref_s*, %struct.ref_s** %18, align 8, !tbaa !1
  %20 = bitcast %struct.ref_s* %19 to i8*
  %21 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.15

if.else:                                          ; preds = %if.then.7
  %22 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %22, align 8, !tbaa !1
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.end
  br label %if.end.17

if.else.16:                                       ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.15
  br label %if.end.19

if.else.18:                                       ; preds = %entry
  %23 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %23, align 8, !tbaa !1
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.18, %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.else.16, %if.then.14
  %24 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %25 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %25) #1
  %26 = load i32, i32* %retval
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @patterncomponent(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32* %n) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %n.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %n_comps = alloca i32, align 4
  %code = alloca i32, align 4
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  %pImpl = alloca %struct.ref_s*, align 8
  %pPatInst = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32* %n, i32** %n.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %n_comps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 0
  %7 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %7) #7
  store %struct.gs_color_space_s* %call, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %8 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %8) #1
  %9 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %9, i32 0, i32 0
  %10 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %num_components = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %10, i32 0, i32 4
  %11 = load i32 (%struct.gs_color_space_s*)*, i32 (%struct.gs_color_space_s*)** %num_components, align 8, !tbaa !98
  %12 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call1 = call i32 %11(%struct.gs_color_space_s* %12) #7
  store i32 %call1, i32* %n_comps, align 4, !tbaa !26
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then, label %if.else.22

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %n_comps, align 4, !tbaa !26
  %sub = sub nsw i32 0, %13
  store i32 %sub, i32* %n_comps, align 4, !tbaa !26
  %14 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %14, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %15 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %16 to i32
  %cmp2 = icmp eq i32 %conv, 2
  br i1 %cmp2, label %if.then.4, label %if.else.20

if.then.4:                                        ; preds = %if.then
  %17 = bitcast %struct.ref_s** %pImpl to i8*
  call void @llvm.lifetime.start(i64 8, i8* %17) #1
  %18 = bitcast %struct.ref_s* %pPatInst to i8*
  call void @llvm.lifetime.start(i64 16, i8* %18) #1
  %19 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call5 = call i32 @dict_find_string(%struct.ref_s* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.82, i32 0, i32 0), %struct.ref_s** %pImpl) #7
  store i32 %call5, i32* %code, align 4, !tbaa !26
  %20 = load i32, i32* %code, align 4, !tbaa !26
  %cmp6 = icmp sgt i32 %20, 0
  br i1 %cmp6, label %if.then.8, label %if.else.17

if.then.8:                                        ; preds = %if.then.4
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %22 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %23 = bitcast %struct.gs_ref_memory_s* %22 to %struct.gs_memory_s*
  %24 = load %struct.ref_s*, %struct.ref_s** %pImpl, align 8, !tbaa !1
  %call9 = call i32 @array_get(%struct.gs_memory_s* %23, %struct.ref_s* %24, i64 0, %struct.ref_s* %pPatInst) #7
  store i32 %call9, i32* %code, align 4, !tbaa !26
  %25 = load i32, i32* %code, align 4, !tbaa !26
  %cmp10 = icmp slt i32 %25, 0
  br i1 %cmp10, label %if.then.12, label %if.end

if.then.12:                                       ; preds = %if.then.8
  %26 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %26, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.8
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pPatInst, i32 0, i32 1
  %pstruct = bitcast %union.v* %value to %struct.obj_header_s**
  %27 = load %struct.obj_header_s*, %struct.obj_header_s** %pstruct, align 8, !tbaa !1
  %28 = bitcast %struct.obj_header_s* %27 to %struct.gs_pattern_instance_s*
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* %28, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %pattern13 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  %29 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pattern13, align 8, !tbaa !67
  %call14 = call i32 @pattern_instance_uses_base_space(%struct.gs_pattern_instance_s* %29) #7
  %tobool = icmp ne i32 %call14, 0
  br i1 %tobool, label %if.then.15, label %if.else

if.then.15:                                       ; preds = %if.end
  %30 = load i32, i32* %n_comps, align 4, !tbaa !26
  %31 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 %30, i32* %31, align 4, !tbaa !26
  br label %if.end.16

if.else:                                          ; preds = %if.end
  %32 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 1, i32* %32, align 4, !tbaa !26
  br label %if.end.16

if.end.16:                                        ; preds = %if.else, %if.then.15
  br label %if.end.18

if.else.17:                                       ; preds = %if.then.4
  %33 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 1, i32* %33, align 4, !tbaa !26
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.17, %if.end.16
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.18, %if.then.12
  %34 = bitcast %struct.ref_s* %pPatInst to i8*
  call void @llvm.lifetime.end(i64 16, i8* %34) #1
  %35 = bitcast %struct.ref_s** %pImpl to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.24 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.21

if.else.20:                                       ; preds = %if.then
  %36 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 1, i32* %36, align 4, !tbaa !26
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.20, %cleanup.cont
  br label %if.end.23

if.else.22:                                       ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.24

if.end.23:                                        ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.24

cleanup.24:                                       ; preds = %if.end.23, %if.else.22, %cleanup
  %37 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %37) #1
  %38 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #1
  %39 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  %40 = bitcast i32* %n_comps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #1
  %41 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = load i32, i32* %retval
  ret i32 %42
}

; Function Attrs: nounwind uwtable
define internal i32 @dummyrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @dummydomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @patternbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %components = alloca i32, align 4
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %pcc = alloca %struct.gs_client_color_s*, align 8
  %n = alloca i32, align 4
  %push_pattern = alloca i32, align 4
  %pinst = alloca %struct.gs_pattern_instance_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %components, align 4, !tbaa !26
  %3 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %4 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp = icmp ugt i32 %4, 1
  br i1 %cmp, label %if.then, label %if.end.16

if.then:                                          ; preds = %entry
  %5 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 0
  %7 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %7) #7
  store %struct.gs_color_space_s* %call, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %8 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 0
  %10 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs1, align 8, !tbaa !43
  %call2 = call %struct.gs_client_color_s* @gs_currentcolor(%struct.gs_state_s* %10) #7
  store %struct.gs_client_color_s* %call2, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %11 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  %12 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %12, i32 0, i32 0
  %13 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %num_components = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %13, i32 0, i32 4
  %14 = load i32 (%struct.gs_color_space_s*)*, i32 (%struct.gs_color_space_s*)** %num_components, align 8, !tbaa !98
  %15 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call3 = call i32 %14(%struct.gs_color_space_s* %15) #7
  store i32 %call3, i32* %n, align 4, !tbaa !26
  %16 = bitcast i32* %push_pattern to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = load i32, i32* %n, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %17, 0
  %conv = zext i1 %cmp4 to i32
  store i32 %conv, i32* %push_pattern, align 4, !tbaa !26
  %18 = bitcast %struct.gs_pattern_instance_s** %pinst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #1
  %19 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %19, i32 0, i32 0
  %20 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store %struct.gs_pattern_instance_s* %20, %struct.gs_pattern_instance_s** %pinst, align 8, !tbaa !1
  %21 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pinst, align 8, !tbaa !1
  %cmp5 = icmp ne %struct.gs_pattern_instance_s* %21, null
  br i1 %cmp5, label %land.lhs.true, label %if.end.11

land.lhs.true:                                    ; preds = %if.then
  %22 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pinst, align 8, !tbaa !1
  %call7 = call i32 @pattern_instance_uses_base_space(%struct.gs_pattern_instance_s* %22) #7
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.then.8, label %if.end.11

if.then.8:                                        ; preds = %land.lhs.true
  %23 = load i32, i32* %push_pattern, align 4, !tbaa !26
  %tobool9 = icmp ne i32 %23, 0
  br i1 %tobool9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %if.then.8
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %25 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i64 -1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.then.10, %if.then.8
  %26 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %26, align 4, !tbaa !26
  %27 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %27, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %land.lhs.true, %if.then
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.11, %if.end
  %28 = bitcast %struct.gs_pattern_instance_s** %pinst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = bitcast i32* %push_pattern to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #1
  %31 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  %32 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.52 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.16

if.end.16:                                        ; preds = %cleanup.cont, %entry
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 26
  %stack18 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack17, i32 0, i32 0
  %p19 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack18, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p19, align 8, !tbaa !10
  %add.ptr20 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 -1
  store %struct.ref_s* %add.ptr20, %struct.ref_s** %p19, align 8, !tbaa !10
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 26
  %stack22 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack21, i32 0, i32 0
  %p23 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p23, align 8, !tbaa !10
  store %struct.ref_s* %36, %struct.ref_s** %op, align 8, !tbaa !1
  %37 = load i32, i32* %base.addr, align 4, !tbaa !26
  switch i32 %37, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.24
    i32 2, label %sw.bb.24
    i32 3, label %sw.bb.25
  ]

sw.bb:                                            ; preds = %if.end.16
  store i32 1, i32* %components, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.24:                                         ; preds = %if.end.16, %if.end.16
  store i32 3, i32* %components, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.25:                                         ; preds = %if.end.16
  store i32 4, i32* %components, align 4, !tbaa !26
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.16, %sw.bb.25, %sw.bb.24, %sw.bb
  br label %do.body

do.body:                                          ; preds = %sw.epilog
  %38 = load i32, i32* %components, align 4, !tbaa !26
  %39 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext = sext i32 %38 to i64
  %add.ptr26 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i64 %idx.ext
  store %struct.ref_s* %add.ptr26, %struct.ref_s** %op, align 8, !tbaa !1
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 26
  %stack28 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack27, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack28, i32 0, i32 2
  %41 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp29 = icmp ugt %struct.ref_s* %add.ptr26, %41
  br i1 %cmp29, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %do.body
  %42 = load i32, i32* %components, align 4, !tbaa !26
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack32 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 26
  %stack33 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack32, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack33, i32 0, i32 7
  store i32 %42, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.52

if.else:                                          ; preds = %do.body
  %44 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack34 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 26
  %stack35 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack34, i32 0, i32 0
  %p36 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack35, i32 0, i32 0
  store %struct.ref_s* %44, %struct.ref_s** %p36, align 8, !tbaa !10
  br label %if.end.37

if.end.37:                                        ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end.37
  br label %do.end

do.end:                                           ; preds = %do.cond
  %46 = load i32, i32* %components, align 4, !tbaa !26
  %sub = sub nsw i32 %46, 1
  %47 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext38 = sext i32 %sub to i64
  %idx.neg = sub i64 0, %idx.ext38
  %add.ptr39 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i64 %idx.neg
  store %struct.ref_s* %add.ptr39, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %48 = load i32, i32* %i, align 4, !tbaa !26
  %49 = load i32, i32* %components, align 4, !tbaa !26
  %cmp40 = icmp slt i32 %48, %49
  br i1 %cmp40, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %50 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  store float 0.000000e+00, float* %realval, align 4, !tbaa !20
  %51 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas42, i32 0, i32 0
  store i16 4096, i16* %type_attrs, align 2, !tbaa !22
  %52 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %53, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %54 = load i32, i32* %components, align 4, !tbaa !26
  %cmp43 = icmp eq i32 %54, 4
  br i1 %cmp43, label %if.then.45, label %if.end.51

if.then.45:                                       ; preds = %for.end
  %55 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr46 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i32 -1
  store %struct.ref_s* %incdec.ptr46, %struct.ref_s** %op, align 8, !tbaa !1
  %56 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 1
  %realval48 = bitcast %union.v* %value47 to float*
  store float 1.000000e+00, float* %realval48, align 4, !tbaa !20
  %57 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas49 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %57, i32 0, i32 0
  %type_attrs50 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas49, i32 0, i32 0
  store i16 4096, i16* %type_attrs50, align 2, !tbaa !22
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.45, %for.end
  %58 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %58, align 4, !tbaa !26
  %59 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %59, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.52

cleanup.52:                                       ; preds = %if.end.51, %if.then.31, %cleanup
  %60 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #1
  %61 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #1
  %62 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  %63 = load i32, i32* %retval
  ret i32 %63
}

; Function Attrs: nounwind uwtable
define internal i32 @patternvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %bot = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 1
  %5 = load %struct.ref_s*, %struct.ref_s** %bot, align 8, !tbaa !68
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 0
  %cmp = icmp ult %struct.ref_s* %3, %add.ptr
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %7 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 1
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %8 to i32
  %cmp3 = icmp eq i32 %conv, 2
  br i1 %cmp3, label %if.end.12, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %type_attrs6 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas5, i32 0, i32 0
  %10 = bitcast i16* %type_attrs6 to i8*
  %arrayidx7 = getelementptr inbounds i8, i8* %10, i64 1
  %11 = load i8, i8* %arrayidx7, align 1, !tbaa !54
  %conv8 = zext i8 %11 to i32
  %cmp9 = icmp eq i32 %conv8, 14
  br i1 %cmp9, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.12, %if.then.11, %if.then
  %12 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #1
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @setdevicepspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %bpp = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.ref_s* %bpp to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %language_level = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 2
  %4 = load i32, i32* %language_level, align 4, !tbaa !73
  %cmp = icmp slt i32 %4, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %5, align 4, !tbaa !26
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %7 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %8 = bitcast %struct.gs_ref_memory_s* %7 to %struct.gs_memory_s*
  %9 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %8, %struct.ref_s* %9, i64 1, %struct.ref_s* %bpp) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %10, 0
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %bpp, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %12 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 1
  %13 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %13 to i32
  %cmp4 = icmp eq i32 %conv, 11
  br i1 %cmp4, label %if.end.7, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end.3
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 1
  %current9 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory8, i32 0, i32 0
  %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current9, align 8, !tbaa !55
  %16 = bitcast %struct.gs_ref_memory_s* %15 to %struct.gs_memory_s*
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %bpp, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %17 = load i64, i64* %intval, align 8, !tbaa !23
  %conv10 = trunc i64 %17 to i32
  %call11 = call i32 @gs_cspace_new_DevicePixel(%struct.gs_memory_s* %16, %struct.gs_color_space_s** %pcs, i32 %conv10) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %18, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.7
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.7
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 0
  %21 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %22 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call16 = call i32 @gs_setcolorspace(%struct.gs_state_s* %21, %struct.gs_color_space_s* %22) #7
  store i32 %call16, i32* %code, align 4, !tbaa !26
  %23 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %23, align 4, !tbaa !26
  %24 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void @rc_decrement_only_cs(%struct.gs_color_space_s* %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i32 0, i32 0)) #7
  %25 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.15, %if.then.14, %if.then.6, %if.then.2, %if.then
  %26 = bitcast %struct.ref_s* %bpp to i8*
  call void @llvm.lifetime.end(i64 16, i8* %26) #1
  %27 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #1
  %28 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define internal i32 @validatedevicepspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %space) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %r = alloca %struct.ref_s*, align 8
  %bpp = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %space, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s** %r to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  %3 = load %struct.ref_s*, %struct.ref_s** %2, align 8, !tbaa !1
  store %struct.ref_s* %3, %struct.ref_s** %r, align 8, !tbaa !1
  %4 = bitcast %struct.ref_s* %bpp to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %6 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %8 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %8, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %10 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %11 = bitcast %struct.gs_ref_memory_s* %10 to %struct.gs_memory_s*
  %12 = load %struct.ref_s*, %struct.ref_s** %r, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %11, %struct.ref_s* %12, i64 1, %struct.ref_s* %bpp) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %13 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %13, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %14 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %bpp, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %15 = bitcast i16* %type_attrs12 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv13 = zext i8 %16 to i32
  %cmp14 = icmp eq i32 %conv13, 11
  br i1 %cmp14, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.10
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.10
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %bpp, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %17 = load i64, i64* %intval, align 8, !tbaa !23
  %cmp18 = icmp slt i64 %17, 0
  br i1 %cmp18, label %if.then.24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.17
  %value20 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %bpp, i32 0, i32 1
  %intval21 = bitcast %union.v* %value20 to i64*
  %18 = load i64, i64* %intval21, align 8, !tbaa !23
  %cmp22 = icmp sgt i64 %18, 31
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %lor.lhs.false, %if.end.17
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %lor.lhs.false
  %19 = load %struct.ref_s**, %struct.ref_s*** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %19, align 8, !tbaa !1
  %20 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.25, %if.then.24, %if.then.16, %if.then.9, %if.then.5, %if.then
  %21 = bitcast %struct.ref_s* %bpp to i8*
  call void @llvm.lifetime.end(i64 16, i8* %21) #1
  %22 = bitcast %struct.ref_s** %r to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %24 = load i32, i32* %retval
  ret i32 %24
}

; Function Attrs: nounwind uwtable
define internal i32 @deviceprange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %tref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %5, i64 1, %struct.ref_s* %tref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %8, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tref, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %9 = load i64, i64* %intval, align 8, !tbaa !23
  %sh_prom = trunc i64 %9 to i32
  %shl = shl i32 1, %sh_prom
  %conv = sitofp i32 %shl to float
  %10 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %10, i64 1
  store float %conv, float* %arrayidx1, align 4, !tbaa !20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %11) #1
  %12 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #1
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @devicepdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %code = alloca i32, align 4
  %tref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %3 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %4 = bitcast %struct.gs_ref_memory_s* %3 to %struct.gs_memory_s*
  %5 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %4, %struct.ref_s* %5, i64 1, %struct.ref_s* %tref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %8, i64 0
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %tref, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %9 = load i64, i64* %intval, align 8, !tbaa !23
  %sh_prom = trunc i64 %9 to i32
  %shl = shl i32 1, %sh_prom
  %conv = sitofp i32 %shl to float
  %10 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %10, i64 1
  store float %conv, float* %arrayidx1, align 4, !tbaa !20
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast %struct.ref_s* %tref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %11) #1
  %12 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #1
  %13 = load i32, i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @devicepbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %3, align 4, !tbaa !26
  %4 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %4, align 4, !tbaa !26
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 2816, i16* %type_attrs, align 2, !tbaa !22
  %7 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %7) #1
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @devicepvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @seticcspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %ICCdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %altref = alloca %struct.ref_s*, align 8
  %nocie = alloca %struct.ref_s*, align 8
  %components = alloca i32, align 4
  %code = alloca i32, align 4
  %range = alloca [8 x float], align 16
  %cleanup.dest.slot = alloca i32
  %n = alloca i32, align 4
  %rss = alloca %struct.ref_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.ref_s** %altref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.ref_s* null, %struct.ref_s** %altref, align 8, !tbaa !1
  %6 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  store %struct.ref_s* null, %struct.ref_s** %nocie, align 8, !tbaa !1
  %7 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast [8 x float]* %range to i8*
  call void @llvm.lifetime.start(i64 32, i8* %9) #1
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %10, i32 0, i32 24
  %system_dict = getelementptr inbounds %struct.dict_stack_s, %struct.dict_stack_s* %dict_stack, i32 0, i32 7
  %call = call i32 @dict_find_string(%struct.ref_s* %system_dict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), %struct.ref_s** %nocie) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %11 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %11, 0
  br i1 %cmp, label %if.then, label %if.end.4

if.then:                                          ; preds = %entry
  %12 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %13 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %14 to i32
  %cmp1 = icmp eq i32 %conv, 1
  br i1 %cmp1, label %if.end, label %if.then.3

if.then.3:                                        ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end:                                           ; preds = %if.then
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %entry
  %15 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %15, align 4, !tbaa !26
  br label %do.body

do.body:                                          ; preds = %do.cond.152, %if.end.4
  %16 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %17 = load i32, i32* %16, align 4, !tbaa !26
  switch i32 %17, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.151
  ]

sw.bb:                                            ; preds = %do.body
  %18 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %19 = load i32, i32* %18, align 4, !tbaa !26
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %18, align 4, !tbaa !26
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %21 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %22 = bitcast %struct.gs_ref_memory_s* %21 to %struct.gs_memory_s*
  %23 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call5 = call i32 @array_get(%struct.gs_memory_s* %22, %struct.ref_s* %23, i64 1, %struct.ref_s* %ICCdict) #7
  store i32 %call5, i32* %code, align 4, !tbaa !26
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp6 = icmp slt i32 %24, 0
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %sw.bb
  %25 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.9:                                         ; preds = %sw.bb
  %call10 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call10, i32* %code, align 4, !tbaa !26
  %26 = load i32, i32* %code, align 4, !tbaa !26
  %cmp11 = icmp slt i32 %26, 0
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.9
  %27 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %27, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.14:                                        ; preds = %if.end.9
  %28 = load i32, i32* %code, align 4, !tbaa !26
  %cmp15 = icmp eq i32 %28, 0
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.14
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.18:                                        ; preds = %if.end.14
  %29 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %29, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %30 = load i64, i64* %intval, align 8, !tbaa !23
  %conv19 = trunc i64 %30 to i32
  store i32 %conv19, i32* %components, align 4, !tbaa !26
  %31 = load i32, i32* %components, align 4, !tbaa !26
  %cmp20 = icmp sgt i32 %31, 4
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.18
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.23:                                        ; preds = %if.end.18
  %32 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %tobool = icmp ne %struct.ref_s* %32, null
  br i1 %tobool, label %land.lhs.true, label %if.else.62

land.lhs.true:                                    ; preds = %if.end.23
  %33 = load %struct.ref_s*, %struct.ref_s** %nocie, align 8, !tbaa !1
  %value24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i32 0, i32 1
  %boolval = bitcast %union.v* %value24 to i16*
  %34 = load i16, i16* %boolval, align 2, !tbaa !25
  %conv25 = zext i16 %34 to i32
  %tobool26 = icmp ne i32 %conv25, 0
  br i1 %tobool26, label %if.then.27, label %if.else.62

if.then.27:                                       ; preds = %land.lhs.true
  %call28 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), %struct.ref_s** %altref) #7
  store i32 %call28, i32* %code, align 4, !tbaa !26
  %35 = load i32, i32* %code, align 4, !tbaa !26
  %cmp29 = icmp sgt i32 %35, 0
  br i1 %cmp29, label %land.lhs.true.31, label %if.else.55

land.lhs.true.31:                                 ; preds = %if.then.27
  %36 = load %struct.ref_s*, %struct.ref_s** %altref, align 8, !tbaa !1
  %cmp32 = icmp ne %struct.ref_s* %36, null
  br i1 %cmp32, label %land.lhs.true.34, label %if.else.55

land.lhs.true.34:                                 ; preds = %land.lhs.true.31
  %37 = load %struct.ref_s*, %struct.ref_s** %altref, align 8, !tbaa !1
  %tas35 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 0
  %type_attrs36 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas35, i32 0, i32 0
  %38 = bitcast i16* %type_attrs36 to i8*
  %arrayidx37 = getelementptr inbounds i8, i8* %38, i64 1
  %39 = load i8, i8* %arrayidx37, align 1, !tbaa !54
  %conv38 = zext i8 %39 to i32
  %cmp39 = icmp ne i32 %conv38, 14
  br i1 %cmp39, label %if.then.41, label %if.else.55

if.then.41:                                       ; preds = %land.lhs.true.34
  br label %do.body.42

do.body.42:                                       ; preds = %if.then.41
  %40 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i64 1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack43 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 26
  %stack44 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack43, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack44, i32 0, i32 2
  %42 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp45 = icmp ugt %struct.ref_s* %add.ptr, %42
  br i1 %cmp45, label %if.then.47, label %if.else

if.then.47:                                       ; preds = %do.body.42
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack48 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 26
  %stack49 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack48, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack49, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.else:                                          ; preds = %do.body.42
  %44 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack50 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 26
  %stack51 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack50, i32 0, i32 0
  %p52 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack51, i32 0, i32 0
  store %struct.ref_s* %44, %struct.ref_s** %p52, align 8, !tbaa !10
  br label %if.end.53

if.end.53:                                        ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end.53
  br label %do.end

do.end:                                           ; preds = %do.cond
  %46 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %47 = load %struct.ref_s*, %struct.ref_s** %altref, align 8, !tbaa !1
  %48 = bitcast %struct.ref_s* %46 to i8*
  %49 = bitcast %struct.ref_s* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 16, i32 8, i1 false), !tbaa.struct !24
  %50 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call54 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %50) #7
  store i32 %call54, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.else.55:                                       ; preds = %land.lhs.true.34, %land.lhs.true.31, %if.then.27
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %52 = load i32, i32* %components, align 4, !tbaa !26
  %call56 = call i32 @set_dev_space(%struct.gs_context_state_s* %51, i32 %52) #7
  store i32 %call56, i32* %code, align 4, !tbaa !26
  %53 = load i32, i32* %code, align 4, !tbaa !26
  %cmp57 = icmp ne i32 %53, 0
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.else.55
  %54 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %54, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.60:                                        ; preds = %if.else.55
  %55 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %55, align 4, !tbaa !26
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60
  br label %if.end.150

if.else.62:                                       ; preds = %land.lhs.true, %if.end.23
  %56 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %57 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %58 = bitcast [8 x float]* %range to float*
  %call63 = call i32 @iccrange(%struct.gs_context_state_s* %56, %struct.ref_s* %57, float* %58) #7
  store i32 %call63, i32* %code, align 4, !tbaa !26
  %59 = load i32, i32* %code, align 4, !tbaa !26
  %cmp64 = icmp slt i32 %59, 0
  br i1 %cmp64, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %if.else.62
  %60 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %60, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.67:                                        ; preds = %if.else.62
  %call68 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call68, i32* %code, align 4, !tbaa !26
  %61 = load i32, i32* %code, align 4, !tbaa !26
  %cmp69 = icmp eq i32 %61, 0
  br i1 %cmp69, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %if.end.67
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.72:                                        ; preds = %if.end.67
  %62 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %62, i32 0, i32 0
  %type_attrs74 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas73, i32 0, i32 0
  %63 = bitcast i16* %type_attrs74 to i8*
  %arrayidx75 = getelementptr inbounds i8, i8* %63, i64 1
  %64 = load i8, i8* %arrayidx75, align 1, !tbaa !54
  %conv76 = zext i8 %64 to i32
  %cmp77 = icmp eq i32 %conv76, 18
  br i1 %cmp77, label %if.then.79, label %if.end.92

if.then.79:                                       ; preds = %if.end.72
  %65 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %65) #1
  %66 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas80 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %66, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas80, i32 0, i32 2
  %67 = load i32, i32* %rsize, align 4, !tbaa !5
  store i32 %67, i32* %n, align 4, !tbaa !26
  %68 = bitcast %struct.ref_s* %rss to i8*
  call void @llvm.lifetime.start(i64 16, i8* %68) #1
  %69 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %70 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %70, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value81 to i8**
  %71 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  %72 = load i32, i32* %n, align 4, !tbaa !26
  %73 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %73, i32 0, i32 0
  %type_attrs83 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas82, i32 0, i32 0
  %74 = load i16, i16* %type_attrs83, align 2, !tbaa !22
  %conv84 = zext i16 %74 to i32
  %and = and i32 %conv84, 12
  %75 = load i32, i32* %n, align 4, !tbaa !26
  %conv85 = zext i32 %75 to i64
  %call86 = call i32 @make_rss(%struct.gs_context_state_s* %69, %struct.ref_s* %rss, i8* %71, i32 %72, i32 %and, i64 0, i64 %conv85, i32 0) #7
  store i32 %call86, i32* %code, align 4, !tbaa !26
  %76 = load i32, i32* %code, align 4, !tbaa !26
  %cmp87 = icmp slt i32 %76, 0
  br i1 %cmp87, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %if.then.79
  %77 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %77, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.90:                                        ; preds = %if.then.79
  %78 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %79 = bitcast %struct.ref_s* %78 to i8*
  %80 = bitcast %struct.ref_s* %rss to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.90, %if.then.89
  %81 = bitcast %struct.ref_s* %rss to i8*
  call void @llvm.lifetime.end(i64 16, i8* %81) #1
  %82 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.155 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.92

if.end.92:                                        ; preds = %cleanup.cont, %if.end.72
  br label %do.body.93

do.body.93:                                       ; preds = %if.end.92
  %83 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr94 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %83, i64 1
  store %struct.ref_s* %add.ptr94, %struct.ref_s** %op, align 8, !tbaa !1
  %84 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack95 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %84, i32 0, i32 26
  %stack96 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack95, i32 0, i32 0
  %top97 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack96, i32 0, i32 2
  %85 = load %struct.ref_s*, %struct.ref_s** %top97, align 8, !tbaa !69
  %cmp98 = icmp ugt %struct.ref_s* %add.ptr94, %85
  br i1 %cmp98, label %if.then.100, label %if.else.104

if.then.100:                                      ; preds = %do.body.93
  %86 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack101 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %86, i32 0, i32 26
  %stack102 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack101, i32 0, i32 0
  %requested103 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack102, i32 0, i32 7
  store i32 1, i32* %requested103, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.else.104:                                      ; preds = %do.body.93
  %87 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %88 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack105 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %88, i32 0, i32 26
  %stack106 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack105, i32 0, i32 0
  %p107 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack106, i32 0, i32 0
  store %struct.ref_s* %87, %struct.ref_s** %p107, align 8, !tbaa !10
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.104
  br label %do.cond.109

do.cond.109:                                      ; preds = %if.end.108
  br label %do.end.110

do.end.110:                                       ; preds = %do.cond.109
  %89 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %90 = bitcast %struct.ref_s* %89 to i8*
  %91 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 16, i32 8, i1 false), !tbaa.struct !24
  %92 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %93 = load i32, i32* %components, align 4, !tbaa !26
  %94 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %95 = bitcast [8 x float]* %range to float*
  %call111 = call i32 @seticc(%struct.gs_context_state_s* %92, i32 %93, %struct.ref_s* %94, float* %95) #7
  store i32 %call111, i32* %code, align 4, !tbaa !26
  %96 = load i32, i32* %code, align 4, !tbaa !26
  %cmp112 = icmp slt i32 %96, 0
  br i1 %cmp112, label %if.then.114, label %if.end.145

if.then.114:                                      ; preds = %do.end.110
  %call115 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), %struct.ref_s** %altref) #7
  store i32 %call115, i32* %code, align 4, !tbaa !26
  %97 = load i32, i32* %code, align 4, !tbaa !26
  %cmp116 = icmp sgt i32 %97, 0
  br i1 %cmp116, label %land.lhs.true.118, label %if.else.134

land.lhs.true.118:                                ; preds = %if.then.114
  %98 = load %struct.ref_s*, %struct.ref_s** %altref, align 8, !tbaa !1
  %cmp119 = icmp ne %struct.ref_s* %98, null
  br i1 %cmp119, label %land.lhs.true.121, label %if.else.134

land.lhs.true.121:                                ; preds = %land.lhs.true.118
  %99 = load %struct.ref_s*, %struct.ref_s** %altref, align 8, !tbaa !1
  %tas122 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %99, i32 0, i32 0
  %type_attrs123 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas122, i32 0, i32 0
  %100 = bitcast i16* %type_attrs123 to i8*
  %arrayidx124 = getelementptr inbounds i8, i8* %100, i64 1
  %101 = load i8, i8* %arrayidx124, align 1, !tbaa !54
  %conv125 = zext i8 %101 to i32
  %cmp126 = icmp ne i32 %conv125, 14
  br i1 %cmp126, label %if.then.128, label %if.else.134

if.then.128:                                      ; preds = %land.lhs.true.121
  %102 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %103 = load %struct.ref_s*, %struct.ref_s** %altref, align 8, !tbaa !1
  %104 = bitcast %struct.ref_s* %102 to i8*
  %105 = bitcast %struct.ref_s* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 16, i32 8, i1 false), !tbaa.struct !24
  %106 = load i32, i32* %CIESubst.addr, align 4, !tbaa !26
  %tobool129 = icmp ne i32 %106, 0
  br i1 %tobool129, label %if.then.130, label %if.else.132

if.then.130:                                      ; preds = %if.then.128
  %107 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call131 = call i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %107) #7
  store i32 %call131, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.else.132:                                      ; preds = %if.then.128
  %108 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call133 = call i32 @zsetcolorspace(%struct.gs_context_state_s* %108) #7
  store i32 %call133, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.else.134:                                      ; preds = %land.lhs.true.121, %land.lhs.true.118, %if.then.114
  %109 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %110 = load i32, i32* %components, align 4, !tbaa !26
  %call135 = call i32 @set_dev_space(%struct.gs_context_state_s* %109, i32 %110) #7
  store i32 %call135, i32* %code, align 4, !tbaa !26
  %111 = load i32, i32* %code, align 4, !tbaa !26
  %cmp136 = icmp ne i32 %111, 0
  br i1 %cmp136, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %if.else.134
  %112 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %112, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.139:                                       ; preds = %if.else.134
  %113 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %113, align 4, !tbaa !26
  br label %if.end.140

if.end.140:                                       ; preds = %if.end.139
  %114 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack141 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %114, i32 0, i32 26
  %stack142 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack141, i32 0, i32 0
  %p143 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack142, i32 0, i32 0
  %115 = load %struct.ref_s*, %struct.ref_s** %p143, align 8, !tbaa !10
  %add.ptr144 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %115, i64 -1
  store %struct.ref_s* %add.ptr144, %struct.ref_s** %p143, align 8, !tbaa !10
  br label %if.end.145

if.end.145:                                       ; preds = %if.end.140, %do.end.110
  %116 = load i32, i32* %code, align 4, !tbaa !26
  %cmp146 = icmp ne i32 %116, 0
  br i1 %cmp146, label %if.then.148, label %if.end.149

if.then.148:                                      ; preds = %if.end.145
  %117 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %117, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

if.end.149:                                       ; preds = %if.end.145
  br label %if.end.150

if.end.150:                                       ; preds = %if.end.149, %if.end.61
  br label %sw.epilog

sw.bb.151:                                        ; preds = %do.body
  %118 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %118, align 4, !tbaa !26
  store i32 0, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

sw.epilog:                                        ; preds = %sw.bb.151, %if.end.150
  br label %do.cond.152

do.cond.152:                                      ; preds = %sw.epilog
  %119 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  %120 = load i32, i32* %119, align 4, !tbaa !26
  %tobool153 = icmp ne i32 %120, 0
  br i1 %tobool153, label %do.body, label %do.end.154

do.end.154:                                       ; preds = %do.cond.152
  %121 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %121, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.155

cleanup.155:                                      ; preds = %do.end.154, %sw.default, %if.then.148, %if.then.138, %if.else.132, %if.then.130, %if.then.100, %cleanup, %if.then.71, %if.then.66, %if.then.59, %do.end, %if.then.47, %if.then.22, %if.then.17, %if.then.13, %if.then.8, %if.then.3
  %122 = bitcast [8 x float]* %range to i8*
  call void @llvm.lifetime.end(i64 32, i8* %122) #1
  %123 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %123) #1
  %124 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %124) #1
  %125 = bitcast %struct.ref_s** %nocie to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = bitcast %struct.ref_s** %altref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %126) #1
  %127 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %127) #1
  %128 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %128) #1
  %129 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129) #1
  %130 = load i32, i32* %retval
  ret i32 %130
}

; Function Attrs: nounwind uwtable
define internal i32 @validateiccspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %components = alloca i32, align 4
  %space = alloca %struct.ref_s*, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %valref = alloca %struct.ref_s, align 8
  %ICCdict = alloca %struct.ref_s, align 8
  %sref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp195 = alloca i32, align 4
  %__s1_len265 = alloca i64, align 8
  %__s2_len267 = alloca i64, align 8
  %tmp268 = alloca i32, align 4
  %__s1275 = alloca i8*, align 8
  %__result279 = alloca i32, align 4
  %tmp317 = alloca i32, align 4
  %nameref = alloca %struct.ref_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %components, align 4, !tbaa !26
  %3 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %6) #1
  %7 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %7) #1
  %8 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %9 = load %struct.ref_s*, %struct.ref_s** %8, align 8, !tbaa !1
  store %struct.ref_s* %9, %struct.ref_s** %space, align 8, !tbaa !1
  %10 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %11 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end:                                           ; preds = %entry
  %12 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %13 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %13, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.6:                                         ; preds = %if.end
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %16 = bitcast %struct.gs_ref_memory_s* %15 to %struct.gs_memory_s*
  %17 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %16, %struct.ref_s* %17, i64 1, %struct.ref_s* %ICCdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %18, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ICCdict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %20 = bitcast i16* %type_attrs12 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %20, i64 1
  %21 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv13 = zext i8 %21 to i32
  %cmp14 = icmp eq i32 %conv13, 2
  br i1 %cmp14, label %if.end.18, label %if.then.16

if.then.16:                                       ; preds = %if.end.10
  %call17 = call i32 @check_type_failed(%struct.ref_s* %ICCdict) #7
  store i32 %call17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.18:                                        ; preds = %if.end.10
  %call19 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call19, i32* %code, align 4, !tbaa !26
  %22 = load i32, i32* %code, align 4, !tbaa !26
  %cmp20 = icmp slt i32 %22, 0
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.18
  %23 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.23:                                        ; preds = %if.end.18
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp24 = icmp eq i32 %24, 0
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.23
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.27:                                        ; preds = %if.end.23
  %25 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i32 0, i32 0
  %type_attrs29 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 0
  %26 = bitcast i16* %type_attrs29 to i8*
  %arrayidx30 = getelementptr inbounds i8, i8* %26, i64 1
  %27 = load i8, i8* %arrayidx30, align 1, !tbaa !54
  %conv31 = zext i8 %27 to i32
  %cmp32 = icmp eq i32 %conv31, 14
  br i1 %cmp32, label %if.else, label %if.then.34

if.then.34:                                       ; preds = %if.end.27
  %28 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas35 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 0, i32 0
  %type_attrs36 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas35, i32 0, i32 0
  %29 = bitcast i16* %type_attrs36 to i8*
  %arrayidx37 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx37, align 1, !tbaa !54
  %conv38 = zext i8 %30 to i32
  %cmp39 = icmp eq i32 %conv38, 11
  br i1 %cmp39, label %if.end.42, label %if.then.41

if.then.41:                                       ; preds = %if.then.34
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.42:                                        ; preds = %if.then.34
  %31 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %32 = load i64, i64* %intval, align 8, !tbaa !23
  %conv43 = trunc i64 %32 to i32
  store i32 %conv43, i32* %components, align 4, !tbaa !26
  br label %if.end.44

if.else:                                          ; preds = %if.end.27
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.44:                                        ; preds = %if.end.42
  %call45 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call45, i32* %code, align 4, !tbaa !26
  %33 = load i32, i32* %code, align 4, !tbaa !26
  %cmp46 = icmp sle i32 %33, 0
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.end.44
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.49:                                        ; preds = %if.end.44
  %34 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 0
  %type_attrs51 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas50, i32 0, i32 0
  %35 = bitcast i16* %type_attrs51 to i8*
  %arrayidx52 = getelementptr inbounds i8, i8* %35, i64 1
  %36 = load i8, i8* %arrayidx52, align 1, !tbaa !54
  %conv53 = zext i8 %36 to i32
  %cmp54 = icmp eq i32 %conv53, 14
  br i1 %cmp54, label %if.else.71, label %if.then.56

if.then.56:                                       ; preds = %if.end.49
  %37 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas57 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 0
  %type_attrs58 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas57, i32 0, i32 0
  %38 = bitcast i16* %type_attrs58 to i8*
  %arrayidx59 = getelementptr inbounds i8, i8* %38, i64 1
  %39 = load i8, i8* %arrayidx59, align 1, !tbaa !54
  %conv60 = zext i8 %39 to i32
  %cmp61 = icmp eq i32 %conv60, 18
  br i1 %cmp61, label %if.end.70, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then.56
  %40 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 0, i32 0
  %type_attrs64 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas63, i32 0, i32 0
  %41 = bitcast i16* %type_attrs64 to i8*
  %arrayidx65 = getelementptr inbounds i8, i8* %41, i64 1
  %42 = load i8, i8* %arrayidx65, align 1, !tbaa !54
  %conv66 = zext i8 %42 to i32
  %cmp67 = icmp eq i32 %conv66, 3
  br i1 %cmp67, label %if.end.70, label %if.then.69

if.then.69:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.70:                                        ; preds = %land.lhs.true, %if.then.56
  br label %if.end.72

if.else.71:                                       ; preds = %if.end.49
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.72:                                        ; preds = %if.end.70
  %call73 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call73, i32* %code, align 4, !tbaa !26
  %43 = load i32, i32* %code, align 4, !tbaa !26
  %cmp74 = icmp sgt i32 %43, 0
  br i1 %cmp74, label %land.lhs.true.76, label %if.end.124

land.lhs.true.76:                                 ; preds = %if.end.72
  %44 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i32 0, i32 0
  %type_attrs78 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas77, i32 0, i32 0
  %45 = bitcast i16* %type_attrs78 to i8*
  %arrayidx79 = getelementptr inbounds i8, i8* %45, i64 1
  %46 = load i8, i8* %arrayidx79, align 1, !tbaa !54
  %conv80 = zext i8 %46 to i32
  %cmp81 = icmp eq i32 %conv80, 14
  br i1 %cmp81, label %if.end.124, label %if.then.83

if.then.83:                                       ; preds = %land.lhs.true.76
  %47 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas84 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i32 0, i32 0
  %type_attrs85 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas84, i32 0, i32 0
  %48 = load i16, i16* %type_attrs85, align 2, !tbaa !22
  %conv86 = zext i16 %48 to i32
  %and87 = and i32 %conv86, 15360
  %cmp88 = icmp eq i32 %and87, 1024
  br i1 %cmp88, label %if.end.91, label %if.then.90

if.then.90:                                       ; preds = %if.then.83
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.91:                                        ; preds = %if.then.83
  %49 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas92 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i32 0, i32 0
  %rsize93 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas92, i32 0, i32 2
  %50 = load i32, i32* %rsize93, align 4, !tbaa !5
  %51 = load i32, i32* %components, align 4, !tbaa !26
  %mul = mul nsw i32 %51, 2
  %cmp94 = icmp ult i32 %50, %mul
  br i1 %cmp94, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %if.end.91
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.97:                                        ; preds = %if.end.91
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.97
  %52 = load i32, i32* %i, align 4, !tbaa !26
  %53 = load i32, i32* %components, align 4, !tbaa !26
  %mul98 = mul nsw i32 %53, 2
  %cmp99 = icmp slt i32 %52, %mul98
  br i1 %cmp99, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory101 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 1
  %current102 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory101, i32 0, i32 0
  %55 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current102, align 8, !tbaa !55
  %56 = bitcast %struct.gs_ref_memory_s* %55 to %struct.gs_memory_s*
  %57 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %58 = load i32, i32* %i, align 4, !tbaa !26
  %conv103 = sext i32 %58 to i64
  %call104 = call i32 @array_get(%struct.gs_memory_s* %56, %struct.ref_s* %57, i64 %conv103, %struct.ref_s* %valref) #7
  store i32 %call104, i32* %code, align 4, !tbaa !26
  %59 = load i32, i32* %code, align 4, !tbaa !26
  %cmp105 = icmp slt i32 %59, 0
  br i1 %cmp105, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %for.body
  %60 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %60, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.108:                                       ; preds = %for.body
  %tas109 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs110 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas109, i32 0, i32 0
  %61 = bitcast i16* %type_attrs110 to i8*
  %arrayidx111 = getelementptr inbounds i8, i8* %61, i64 1
  %62 = load i8, i8* %arrayidx111, align 1, !tbaa !54
  %conv112 = zext i8 %62 to i32
  %cmp113 = icmp eq i32 %conv112, 11
  br i1 %cmp113, label %if.end.123, label %land.lhs.true.115

land.lhs.true.115:                                ; preds = %if.end.108
  %tas116 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs117 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas116, i32 0, i32 0
  %63 = bitcast i16* %type_attrs117 to i8*
  %arrayidx118 = getelementptr inbounds i8, i8* %63, i64 1
  %64 = load i8, i8* %arrayidx118, align 1, !tbaa !54
  %conv119 = zext i8 %64 to i32
  %cmp120 = icmp eq i32 %conv119, 16
  br i1 %cmp120, label %if.end.123, label %if.then.122

if.then.122:                                      ; preds = %land.lhs.true.115
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.123:                                       ; preds = %land.lhs.true.115, %if.end.108
  br label %for.inc

for.inc:                                          ; preds = %if.end.123
  %65 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %65, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.124

if.end.124:                                       ; preds = %for.end, %land.lhs.true.76, %if.end.72
  %call125 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call125, i32* %code, align 4, !tbaa !26
  %66 = load i32, i32* %code, align 4, !tbaa !26
  %cmp126 = icmp sgt i32 %66, 0
  br i1 %cmp126, label %land.lhs.true.128, label %if.else.337

land.lhs.true.128:                                ; preds = %if.end.124
  %67 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas129 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %67, i32 0, i32 0
  %type_attrs130 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas129, i32 0, i32 0
  %68 = bitcast i16* %type_attrs130 to i8*
  %arrayidx131 = getelementptr inbounds i8, i8* %68, i64 1
  %69 = load i8, i8* %arrayidx131, align 1, !tbaa !54
  %conv132 = zext i8 %69 to i32
  %cmp133 = icmp eq i32 %conv132, 14
  br i1 %cmp133, label %if.else.337, label %if.then.135

if.then.135:                                      ; preds = %land.lhs.true.128
  %70 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %71 = load %struct.ref_s*, %struct.ref_s** %70, align 8, !tbaa !1
  %72 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %73 = bitcast %struct.ref_s* %71 to i8*
  %74 = bitcast %struct.ref_s* %72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 16, i32 8, i1 false), !tbaa.struct !24
  %75 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas136 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %75, i32 0, i32 0
  %type_attrs137 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas136, i32 0, i32 0
  %76 = bitcast i16* %type_attrs137 to i8*
  %arrayidx138 = getelementptr inbounds i8, i8* %76, i64 1
  %77 = load i8, i8* %arrayidx138, align 1, !tbaa !54
  %conv139 = zext i8 %77 to i32
  %cmp140 = icmp eq i32 %conv139, 13
  br i1 %cmp140, label %if.then.142, label %if.else.209

if.then.142:                                      ; preds = %if.then.135
  %78 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory143 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %78, i32 0, i32 1
  %current144 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory143, i32 0, i32 0
  %79 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current144, align 8, !tbaa !55
  %80 = bitcast %struct.gs_ref_memory_s* %79 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %80, i32 0, i32 2
  %81 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %81, i32 0, i32 16
  %82 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %83 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  call void @names_string_ref(%struct.name_table_s* %82, %struct.ref_s* %83, %struct.ref_s* %sref) #7
  %value145 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes = bitcast %union.v* %value145 to i8**
  %84 = load i8*, i8** %bytes, align 8, !tbaa !1
  %tobool = icmp ne i8* %84, null
  br i1 %tobool, label %land.lhs.true.146, label %if.end.208

land.lhs.true.146:                                ; preds = %if.then.142
  %call147 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  %cmp148 = icmp ult i64 %call147, 7
  br i1 %cmp148, label %cond.true, label %cond.false.199

cond.true:                                        ; preds = %land.lhs.true.146
  %85 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %85) #1
  %86 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %86) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.10 to i64)), i64 1), label %land.lhs.true.150, label %cond.false

land.lhs.true.150:                                ; preds = %cond.true
  %call151 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  store i64 %call151, i64* %__s2_len, align 8, !tbaa !23
  %87 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp152 = icmp ult i64 %87, 4
  br i1 %cmp152, label %cond.true.154, label %cond.false

cond.true.154:                                    ; preds = %land.lhs.true.150
  %88 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %88) #1
  %value156 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes157 = bitcast %union.v* %value156 to i8**
  %89 = load i8*, i8** %bytes157, align 8, !tbaa !1
  store i8* %89, i8** %__s1, align 8, !tbaa !1
  %90 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %90) #1
  %91 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx159 = getelementptr inbounds i8, i8* %91, i64 0
  %92 = load i8, i8* %arrayidx159, align 1, !tbaa !54
  %conv160 = zext i8 %92 to i32
  %93 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), align 1, !tbaa !54
  %conv161 = zext i8 %93 to i32
  %sub = sub nsw i32 %conv160, %conv161
  store i32 %sub, i32* %__result, align 4, !tbaa !26
  %94 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp162 = icmp ugt i64 %94, 0
  br i1 %cmp162, label %land.lhs.true.164, label %if.end.194

land.lhs.true.164:                                ; preds = %cond.true.154
  %95 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp165 = icmp eq i32 %95, 0
  br i1 %cmp165, label %if.then.167, label %if.end.194

if.then.167:                                      ; preds = %land.lhs.true.164
  %96 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx168 = getelementptr inbounds i8, i8* %96, i64 1
  %97 = load i8, i8* %arrayidx168, align 1, !tbaa !54
  %conv169 = zext i8 %97 to i32
  %98 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1), align 1, !tbaa !54
  %conv170 = zext i8 %98 to i32
  %sub171 = sub nsw i32 %conv169, %conv170
  store i32 %sub171, i32* %__result, align 4, !tbaa !26
  %99 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp172 = icmp ugt i64 %99, 1
  br i1 %cmp172, label %land.lhs.true.174, label %if.end.193

land.lhs.true.174:                                ; preds = %if.then.167
  %100 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp175 = icmp eq i32 %100, 0
  br i1 %cmp175, label %if.then.177, label %if.end.193

if.then.177:                                      ; preds = %land.lhs.true.174
  %101 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx178 = getelementptr inbounds i8, i8* %101, i64 2
  %102 = load i8, i8* %arrayidx178, align 1, !tbaa !54
  %conv179 = zext i8 %102 to i32
  %103 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 2), align 1, !tbaa !54
  %conv180 = zext i8 %103 to i32
  %sub181 = sub nsw i32 %conv179, %conv180
  store i32 %sub181, i32* %__result, align 4, !tbaa !26
  %104 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp182 = icmp ugt i64 %104, 2
  br i1 %cmp182, label %land.lhs.true.184, label %if.end.192

land.lhs.true.184:                                ; preds = %if.then.177
  %105 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp185 = icmp eq i32 %105, 0
  br i1 %cmp185, label %if.then.187, label %if.end.192

if.then.187:                                      ; preds = %land.lhs.true.184
  %106 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx188 = getelementptr inbounds i8, i8* %106, i64 3
  %107 = load i8, i8* %arrayidx188, align 1, !tbaa !54
  %conv189 = zext i8 %107 to i32
  %108 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 3), align 1, !tbaa !54
  %conv190 = zext i8 %108 to i32
  %sub191 = sub nsw i32 %conv189, %conv190
  store i32 %sub191, i32* %__result, align 4, !tbaa !26
  br label %if.end.192

if.end.192:                                       ; preds = %if.then.187, %land.lhs.true.184, %if.then.177
  br label %if.end.193

if.end.193:                                       ; preds = %if.end.192, %land.lhs.true.174, %if.then.167
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %land.lhs.true.164, %cond.true.154
  %109 = load i32, i32* %__result, align 4, !tbaa !26
  store i32 %109, i32* %tmp195, !tbaa !26
  %110 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #1
  %111 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %111) #1
  %112 = load i32, i32* %tmp195, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.150, %cond.true
  %value196 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes197 = bitcast %union.v* %value196 to i8**
  %113 = load i8*, i8** %bytes197, align 8, !tbaa !1
  %call198 = call i32 @strcmp(i8* %113, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.194
  %cond = phi i32 [ %112, %if.end.194 ], [ %call198, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !26
  %114 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %114) #1
  %115 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %115) #1
  %116 = load i32, i32* %tmp, !tbaa !26
  br label %cond.end.203

cond.false.199:                                   ; preds = %land.lhs.true.146
  %value200 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes201 = bitcast %union.v* %value200 to i8**
  %117 = load i8*, i8** %bytes201, align 8, !tbaa !1
  %call202 = call i32 @strncmp(i8* %117, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i64 7) #9
  br label %cond.end.203

cond.end.203:                                     ; preds = %cond.false.199, %cond.end
  %cond204 = phi i32 [ %116, %cond.end ], [ %call202, %cond.false.199 ]
  %cmp205 = icmp eq i32 %cond204, 0
  br i1 %cmp205, label %if.then.207, label %if.end.208

if.then.207:                                      ; preds = %cond.end.203
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.208:                                       ; preds = %cond.end.203, %if.then.142
  br label %if.end.336

if.else.209:                                      ; preds = %if.then.135
  %118 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas210 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %118, i32 0, i32 0
  %type_attrs211 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas210, i32 0, i32 0
  %119 = load i16, i16* %type_attrs211, align 2, !tbaa !22
  %conv212 = zext i16 %119 to i32
  %and213 = and i32 %conv212, 15360
  %cmp214 = icmp eq i32 %and213, 1024
  br i1 %cmp214, label %if.then.216, label %if.else.334

if.then.216:                                      ; preds = %if.else.209
  %120 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory217 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %120, i32 0, i32 1
  %current218 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory217, i32 0, i32 0
  %121 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current218, align 8, !tbaa !55
  %122 = bitcast %struct.gs_ref_memory_s* %121 to %struct.gs_memory_s*
  %123 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %call219 = call i32 @array_get(%struct.gs_memory_s* %122, %struct.ref_s* %123, i64 0, %struct.ref_s* %valref) #7
  store i32 %call219, i32* %code, align 4, !tbaa !26
  %124 = load i32, i32* %code, align 4, !tbaa !26
  %cmp220 = icmp slt i32 %124, 0
  br i1 %cmp220, label %if.then.222, label %if.end.223

if.then.222:                                      ; preds = %if.then.216
  %125 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %125, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.223:                                       ; preds = %if.then.216
  %tas224 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs225 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas224, i32 0, i32 0
  %126 = bitcast i16* %type_attrs225 to i8*
  %arrayidx226 = getelementptr inbounds i8, i8* %126, i64 1
  %127 = load i8, i8* %arrayidx226, align 1, !tbaa !54
  %conv227 = zext i8 %127 to i32
  %cmp228 = icmp eq i32 %conv227, 13
  br i1 %cmp228, label %if.end.238, label %land.lhs.true.230

land.lhs.true.230:                                ; preds = %if.end.223
  %tas231 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs232 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas231, i32 0, i32 0
  %128 = bitcast i16* %type_attrs232 to i8*
  %arrayidx233 = getelementptr inbounds i8, i8* %128, i64 1
  %129 = load i8, i8* %arrayidx233, align 1, !tbaa !54
  %conv234 = zext i8 %129 to i32
  %cmp235 = icmp eq i32 %conv234, 18
  br i1 %cmp235, label %if.end.238, label %if.then.237

if.then.237:                                      ; preds = %land.lhs.true.230
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.238:                                       ; preds = %land.lhs.true.230, %if.end.223
  %tas239 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs240 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas239, i32 0, i32 0
  %130 = bitcast i16* %type_attrs240 to i8*
  %arrayidx241 = getelementptr inbounds i8, i8* %130, i64 1
  %131 = load i8, i8* %arrayidx241, align 1, !tbaa !54
  %conv242 = zext i8 %131 to i32
  %cmp243 = icmp eq i32 %conv242, 13
  br i1 %cmp243, label %if.then.245, label %if.else.250

if.then.245:                                      ; preds = %if.end.238
  %132 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory246 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %132, i32 0, i32 1
  %current247 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory246, i32 0, i32 0
  %133 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current247, align 8, !tbaa !55
  %134 = bitcast %struct.gs_ref_memory_s* %133 to %struct.gs_memory_s*
  %gs_lib_ctx248 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %134, i32 0, i32 2
  %135 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx248, align 8, !tbaa !74
  %gs_name_table249 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %135, i32 0, i32 16
  %136 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table249, align 8, !tbaa !75
  call void @names_string_ref(%struct.name_table_s* %136, %struct.ref_s* %valref, %struct.ref_s* %sref) #7
  br label %if.end.255

if.else.250:                                      ; preds = %if.end.238
  %value251 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %bytes252 = bitcast %union.v* %value251 to i8**
  %137 = load i8*, i8** %bytes252, align 8, !tbaa !1
  %value253 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes254 = bitcast %union.v* %value253 to i8**
  store i8* %137, i8** %bytes254, align 8, !tbaa !1
  br label %if.end.255

if.end.255:                                       ; preds = %if.else.250, %if.then.245
  %value256 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes257 = bitcast %union.v* %value256 to i8**
  %138 = load i8*, i8** %bytes257, align 8, !tbaa !1
  %tobool258 = icmp ne i8* %138, null
  br i1 %tobool258, label %land.lhs.true.259, label %if.end.333

land.lhs.true.259:                                ; preds = %if.end.255
  %call260 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  %cmp261 = icmp ult i64 %call260, 7
  br i1 %cmp261, label %cond.true.263, label %cond.false.324

cond.true.263:                                    ; preds = %land.lhs.true.259
  %139 = bitcast i64* %__s1_len265 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %139) #1
  %140 = bitcast i64* %__s2_len267 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %140) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1) to i64), i64 ptrtoint ([8 x i8]* @.str.10 to i64)), i64 1), label %land.lhs.true.269, label %cond.false.318

land.lhs.true.269:                                ; preds = %cond.true.263
  %call270 = call i64 @strlen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #9
  store i64 %call270, i64* %__s2_len267, align 8, !tbaa !23
  %141 = load i64, i64* %__s2_len267, align 8, !tbaa !23
  %cmp271 = icmp ult i64 %141, 4
  br i1 %cmp271, label %cond.true.273, label %cond.false.318

cond.true.273:                                    ; preds = %land.lhs.true.269
  %142 = bitcast i8** %__s1275 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %142) #1
  %value276 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes277 = bitcast %union.v* %value276 to i8**
  %143 = load i8*, i8** %bytes277, align 8, !tbaa !1
  store i8* %143, i8** %__s1275, align 8, !tbaa !1
  %144 = bitcast i32* %__result279 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %144) #1
  %145 = load i8*, i8** %__s1275, align 8, !tbaa !1
  %arrayidx280 = getelementptr inbounds i8, i8* %145, i64 0
  %146 = load i8, i8* %arrayidx280, align 1, !tbaa !54
  %conv281 = zext i8 %146 to i32
  %147 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), align 1, !tbaa !54
  %conv282 = zext i8 %147 to i32
  %sub283 = sub nsw i32 %conv281, %conv282
  store i32 %sub283, i32* %__result279, align 4, !tbaa !26
  %148 = load i64, i64* %__s2_len267, align 8, !tbaa !23
  %cmp284 = icmp ugt i64 %148, 0
  br i1 %cmp284, label %land.lhs.true.286, label %if.end.316

land.lhs.true.286:                                ; preds = %cond.true.273
  %149 = load i32, i32* %__result279, align 4, !tbaa !26
  %cmp287 = icmp eq i32 %149, 0
  br i1 %cmp287, label %if.then.289, label %if.end.316

if.then.289:                                      ; preds = %land.lhs.true.286
  %150 = load i8*, i8** %__s1275, align 8, !tbaa !1
  %arrayidx290 = getelementptr inbounds i8, i8* %150, i64 1
  %151 = load i8, i8* %arrayidx290, align 1, !tbaa !54
  %conv291 = zext i8 %151 to i32
  %152 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 1), align 1, !tbaa !54
  %conv292 = zext i8 %152 to i32
  %sub293 = sub nsw i32 %conv291, %conv292
  store i32 %sub293, i32* %__result279, align 4, !tbaa !26
  %153 = load i64, i64* %__s2_len267, align 8, !tbaa !23
  %cmp294 = icmp ugt i64 %153, 1
  br i1 %cmp294, label %land.lhs.true.296, label %if.end.315

land.lhs.true.296:                                ; preds = %if.then.289
  %154 = load i32, i32* %__result279, align 4, !tbaa !26
  %cmp297 = icmp eq i32 %154, 0
  br i1 %cmp297, label %if.then.299, label %if.end.315

if.then.299:                                      ; preds = %land.lhs.true.296
  %155 = load i8*, i8** %__s1275, align 8, !tbaa !1
  %arrayidx300 = getelementptr inbounds i8, i8* %155, i64 2
  %156 = load i8, i8* %arrayidx300, align 1, !tbaa !54
  %conv301 = zext i8 %156 to i32
  %157 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 2), align 1, !tbaa !54
  %conv302 = zext i8 %157 to i32
  %sub303 = sub nsw i32 %conv301, %conv302
  store i32 %sub303, i32* %__result279, align 4, !tbaa !26
  %158 = load i64, i64* %__s2_len267, align 8, !tbaa !23
  %cmp304 = icmp ugt i64 %158, 2
  br i1 %cmp304, label %land.lhs.true.306, label %if.end.314

land.lhs.true.306:                                ; preds = %if.then.299
  %159 = load i32, i32* %__result279, align 4, !tbaa !26
  %cmp307 = icmp eq i32 %159, 0
  br i1 %cmp307, label %if.then.309, label %if.end.314

if.then.309:                                      ; preds = %land.lhs.true.306
  %160 = load i8*, i8** %__s1275, align 8, !tbaa !1
  %arrayidx310 = getelementptr inbounds i8, i8* %160, i64 3
  %161 = load i8, i8* %arrayidx310, align 1, !tbaa !54
  %conv311 = zext i8 %161 to i32
  %162 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i64 3), align 1, !tbaa !54
  %conv312 = zext i8 %162 to i32
  %sub313 = sub nsw i32 %conv311, %conv312
  store i32 %sub313, i32* %__result279, align 4, !tbaa !26
  br label %if.end.314

if.end.314:                                       ; preds = %if.then.309, %land.lhs.true.306, %if.then.299
  br label %if.end.315

if.end.315:                                       ; preds = %if.end.314, %land.lhs.true.296, %if.then.289
  br label %if.end.316

if.end.316:                                       ; preds = %if.end.315, %land.lhs.true.286, %cond.true.273
  %163 = load i32, i32* %__result279, align 4, !tbaa !26
  store i32 %163, i32* %tmp317, !tbaa !26
  %164 = bitcast i32* %__result279 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %164) #1
  %165 = bitcast i8** %__s1275 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %165) #1
  %166 = load i32, i32* %tmp317, !tbaa !26
  br label %cond.end.322

cond.false.318:                                   ; preds = %land.lhs.true.269, %cond.true.263
  %value319 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes320 = bitcast %union.v* %value319 to i8**
  %167 = load i8*, i8** %bytes320, align 8, !tbaa !1
  %call321 = call i32 @strcmp(i8* %167, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)) #8
  br label %cond.end.322

cond.end.322:                                     ; preds = %cond.false.318, %if.end.316
  %cond323 = phi i32 [ %166, %if.end.316 ], [ %call321, %cond.false.318 ]
  store i32 %cond323, i32* %tmp268, !tbaa !26
  %168 = bitcast i64* %__s2_len267 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %168) #1
  %169 = bitcast i64* %__s1_len265 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %169) #1
  %170 = load i32, i32* %tmp268, !tbaa !26
  br label %cond.end.328

cond.false.324:                                   ; preds = %land.lhs.true.259
  %value325 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %sref, i32 0, i32 1
  %bytes326 = bitcast %union.v* %value325 to i8**
  %171 = load i8*, i8** %bytes326, align 8, !tbaa !1
  %call327 = call i32 @strncmp(i8* %171, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i64 7) #9
  br label %cond.end.328

cond.end.328:                                     ; preds = %cond.false.324, %cond.end.322
  %cond329 = phi i32 [ %170, %cond.end.322 ], [ %call327, %cond.false.324 ]
  %cmp330 = icmp eq i32 %cond329, 0
  br i1 %cmp330, label %if.then.332, label %if.end.333

if.then.332:                                      ; preds = %cond.end.328
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.333:                                       ; preds = %cond.end.328, %if.end.255
  br label %if.end.335

if.else.334:                                      ; preds = %if.else.209
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

if.end.335:                                       ; preds = %if.end.333
  br label %if.end.336

if.end.336:                                       ; preds = %if.end.335, %if.end.208
  br label %if.end.362

if.else.337:                                      ; preds = %land.lhs.true.128, %if.end.124
  %172 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %172) #1
  %173 = load i32, i32* %components, align 4, !tbaa !26
  switch i32 %173, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb.344
    i32 4, label %sw.bb.350
  ]

sw.bb:                                            ; preds = %if.else.337
  %174 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory339 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %174, i32 0, i32 1
  %current340 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory339, i32 0, i32 0
  %175 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current340, align 8, !tbaa !55
  %176 = bitcast %struct.gs_ref_memory_s* %175 to %struct.gs_memory_s*
  %gs_lib_ctx341 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %176, i32 0, i32 2
  %177 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx341, align 8, !tbaa !74
  %gs_name_table342 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %177, i32 0, i32 16
  %178 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table342, align 8, !tbaa !75
  %call343 = call i32 @names_enter_string(%struct.name_table_s* %178, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct.ref_s* %nameref) #7
  store i32 %call343, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.344:                                        ; preds = %if.else.337
  %179 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory345 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %179, i32 0, i32 1
  %current346 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory345, i32 0, i32 0
  %180 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current346, align 8, !tbaa !55
  %181 = bitcast %struct.gs_ref_memory_s* %180 to %struct.gs_memory_s*
  %gs_lib_ctx347 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %181, i32 0, i32 2
  %182 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx347, align 8, !tbaa !74
  %gs_name_table348 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %182, i32 0, i32 16
  %183 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table348, align 8, !tbaa !75
  %call349 = call i32 @names_enter_string(%struct.name_table_s* %183, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), %struct.ref_s* %nameref) #7
  store i32 %call349, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.350:                                        ; preds = %if.else.337
  %184 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory351 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %184, i32 0, i32 1
  %current352 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory351, i32 0, i32 0
  %185 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current352, align 8, !tbaa !55
  %186 = bitcast %struct.gs_ref_memory_s* %185 to %struct.gs_memory_s*
  %gs_lib_ctx353 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %186, i32 0, i32 2
  %187 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx353, align 8, !tbaa !74
  %gs_name_table354 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %187, i32 0, i32 16
  %188 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table354, align 8, !tbaa !75
  %call355 = call i32 @names_enter_string(%struct.name_table_s* %188, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), %struct.ref_s* %nameref) #7
  store i32 %call355, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.default:                                       ; preds = %if.else.337
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb.350, %sw.bb.344, %sw.bb
  %189 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %dict_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %189, i32 0, i32 24
  %call356 = call i32 @dict_put_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), %struct.ref_s* %nameref, %struct.dict_stack_s* %dict_stack) #7
  store i32 %call356, i32* %code, align 4, !tbaa !26
  %190 = load i32, i32* %code, align 4, !tbaa !26
  %cmp357 = icmp slt i32 %190, 0
  br i1 %cmp357, label %if.then.359, label %if.end.360

if.then.359:                                      ; preds = %sw.epilog
  %191 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %191, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.360:                                       ; preds = %sw.epilog
  %192 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %193 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %call361 = call i32 @validateiccspace(%struct.gs_context_state_s* %192, %struct.ref_s** %193) #7
  store i32 %call361, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.360, %if.then.359, %sw.default
  %194 = bitcast %struct.ref_s* %nameref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %194) #1
  br label %cleanup.363

if.end.362:                                       ; preds = %if.end.336
  %195 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %195, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.363

cleanup.363:                                      ; preds = %if.end.362, %cleanup, %if.else.334, %if.then.332, %if.then.237, %if.then.222, %if.then.207, %if.then.122, %if.then.107, %if.then.96, %if.then.90, %if.else.71, %if.then.69, %if.then.48, %if.else, %if.then.41, %if.then.26, %if.then.22, %if.then.16, %if.then.9, %if.then.5, %if.then
  %196 = bitcast %struct.ref_s* %sref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %196) #1
  %197 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %197) #1
  %198 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %198) #1
  %199 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %199) #1
  %200 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.end(i64 8, i8* %200) #1
  %201 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %201) #1
  %202 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %202) #1
  %203 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %203) #1
  %204 = load i32, i32* %retval
  ret i32 %204
}

; Function Attrs: nounwind uwtable
define internal i32 @iccalternatespace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s** %r, i32* %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %CIESubst.addr = alloca i32*, align 8
  %components = alloca i32, align 4
  %code = alloca i32, align 4
  %tempref = alloca %struct.ref_s*, align 8
  %ICCdict = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store i32* %CIESubst, i32** %CIESubst.addr, align 8, !tbaa !1
  %0 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %4, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %5 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %5 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %7 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %7, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %ICCdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %12, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %call11 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %14 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %14, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.10
  %15 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.10
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp16 = icmp eq i32 %16, 0
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.15
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.19:                                        ; preds = %if.end.15
  %17 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %18 = load i64, i64* %intval, align 8, !tbaa !23
  %conv20 = trunc i64 %18 to i32
  store i32 %conv20, i32* %components, align 4, !tbaa !26
  %call21 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call21, i32* %code, align 4, !tbaa !26
  %19 = load i32, i32* %code, align 4, !tbaa !26
  %cmp22 = icmp sgt i32 %19, 0
  br i1 %cmp22, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end.19
  %20 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %20, i32 0, i32 0
  %type_attrs25 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas24, i32 0, i32 0
  %21 = bitcast i16* %type_attrs25 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 1
  %22 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv26 = zext i8 %22 to i32
  %cmp27 = icmp eq i32 %conv26, 14
  br i1 %cmp27, label %if.else, label %if.then.29

if.then.29:                                       ; preds = %land.lhs.true
  %23 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %24 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* %23, %struct.ref_s** %24, align 8, !tbaa !1
  br label %if.end.45

if.else:                                          ; preds = %land.lhs.true, %if.end.19
  %25 = load i32, i32* %components, align 4, !tbaa !26
  switch i32 %25, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb.33
    i32 4, label %sw.bb.39
  ]

sw.bb:                                            ; preds = %if.else
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory30 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 1
  %current31 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory30, i32 0, i32 0
  %27 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current31, align 8, !tbaa !55
  %28 = bitcast %struct.gs_ref_memory_s* %27 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %28, i32 0, i32 2
  %29 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %29, i32 0, i32 16
  %30 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %31 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %32 = load %struct.ref_s*, %struct.ref_s** %31, align 8, !tbaa !1
  %call32 = call i32 @names_enter_string(%struct.name_table_s* %30, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct.ref_s* %32) #7
  store i32 %call32, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.33:                                         ; preds = %if.else
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory34 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 1
  %current35 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory34, i32 0, i32 0
  %34 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current35, align 8, !tbaa !55
  %35 = bitcast %struct.gs_ref_memory_s* %34 to %struct.gs_memory_s*
  %gs_lib_ctx36 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %35, i32 0, i32 2
  %36 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx36, align 8, !tbaa !74
  %gs_name_table37 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %36, i32 0, i32 16
  %37 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table37, align 8, !tbaa !75
  %38 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %39 = load %struct.ref_s*, %struct.ref_s** %38, align 8, !tbaa !1
  %call38 = call i32 @names_enter_string(%struct.name_table_s* %37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), %struct.ref_s* %39) #7
  store i32 %call38, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.39:                                         ; preds = %if.else
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory40 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 1
  %current41 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory40, i32 0, i32 0
  %41 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current41, align 8, !tbaa !55
  %42 = bitcast %struct.gs_ref_memory_s* %41 to %struct.gs_memory_s*
  %gs_lib_ctx42 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %42, i32 0, i32 2
  %43 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx42, align 8, !tbaa !74
  %gs_name_table43 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %43, i32 0, i32 16
  %44 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table43, align 8, !tbaa !75
  %45 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %46 = load %struct.ref_s*, %struct.ref_s** %45, align 8, !tbaa !1
  %call44 = call i32 @names_enter_string(%struct.name_table_s* %44, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), %struct.ref_s* %46) #7
  store i32 %call44, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.default:                                       ; preds = %if.else
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb.39, %sw.bb.33, %sw.bb
  br label %if.end.45

if.end.45:                                        ; preds = %sw.epilog, %if.then.29
  %47 = load i32*, i32** %CIESubst.addr, align 8, !tbaa !1
  store i32 1, i32* %47, align 4, !tbaa !26
  %48 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %48, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.45, %sw.default, %if.then.18, %if.then.14, %if.then.9, %if.then.5, %if.then
  %49 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %49) #1
  %50 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #1
  %51 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %52) #1
  %53 = load i32, i32* %retval
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @icccomponents(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32* %n) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %n.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %tempref = alloca %struct.ref_s*, align 8
  %ICCdict = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32* %n, i32** %n.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %4 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %5 = bitcast %struct.gs_ref_memory_s* %4 to %struct.gs_memory_s*
  %6 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 1, %struct.ref_s* %ICCdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %9, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %10 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %11 = load i32, i32* %code, align 4, !tbaa !26
  %cmp5 = icmp eq i32 %11, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.4
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end.4
  %12 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %13 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %13 to i32
  %14 = load i32*, i32** %n.addr, align 8, !tbaa !1
  store i32 %conv, i32* %14, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.7, %if.then.6, %if.then.3, %if.then
  %15 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %15) #1
  %16 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #1
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal i32 @iccrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %components = alloca i32, align 4
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %tempref = alloca %struct.ref_s*, align 8
  %ICCdict = alloca %struct.ref_s, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %3 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %7 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %8 = bitcast %struct.gs_ref_memory_s* %7 to %struct.gs_memory_s*
  %9 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %8, %struct.ref_s* %9, i64 1, %struct.ref_s* %ICCdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %10, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %12, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %14 = load i32, i32* %code, align 4, !tbaa !26
  %cmp5 = icmp eq i32 %14, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.4
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end.4
  %15 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %16 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %16 to i32
  store i32 %conv, i32* %components, align 4, !tbaa !26
  %call8 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp sgt i32 %17, 0
  br i1 %cmp9, label %land.lhs.true, label %if.else.40

land.lhs.true:                                    ; preds = %if.end.7
  %18 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %19 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv11 = zext i8 %20 to i32
  %cmp12 = icmp eq i32 %conv11, 14
  br i1 %cmp12, label %if.else.40, label %if.then.14

if.then.14:                                       ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.14
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %22 = load i32, i32* %components, align 4, !tbaa !26
  %mul = mul nsw i32 %22, 2
  %cmp15 = icmp slt i32 %21, %mul
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 1
  %current18 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory17, i32 0, i32 0
  %24 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current18, align 8, !tbaa !55
  %25 = bitcast %struct.gs_ref_memory_s* %24 to %struct.gs_memory_s*
  %26 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %27 = load i32, i32* %i, align 4, !tbaa !26
  %conv19 = sext i32 %27 to i64
  %call20 = call i32 @array_get(%struct.gs_memory_s* %25, %struct.ref_s* %26, i64 %conv19, %struct.ref_s* %valref) #7
  store i32 %call20, i32* %code, align 4, !tbaa !26
  %28 = load i32, i32* %code, align 4, !tbaa !26
  %cmp21 = icmp slt i32 %28, 0
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %for.body
  %29 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %for.body
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 0
  %30 = bitcast i16* %type_attrs26 to i8*
  %arrayidx27 = getelementptr inbounds i8, i8* %30, i64 1
  %31 = load i8, i8* %arrayidx27, align 1, !tbaa !54
  %conv28 = zext i8 %31 to i32
  %cmp29 = icmp eq i32 %conv28, 11
  br i1 %cmp29, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %if.end.24
  %value32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval33 = bitcast %union.v* %value32 to i64*
  %32 = load i64, i64* %intval33, align 8, !tbaa !23
  %conv34 = sitofp i64 %32 to float
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %33 to i64
  %34 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx35 = getelementptr inbounds float, float* %34, i64 %idxprom
  store float %conv34, float* %arrayidx35, align 4, !tbaa !20
  br label %if.end.39

if.else:                                          ; preds = %if.end.24
  %value36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %realval = bitcast %union.v* %value36 to float*
  %35 = load float, float* %realval, align 4, !tbaa !20
  %36 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom37 = sext i32 %36 to i64
  %37 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds float, float* %37, i64 %idxprom37
  store float %35, float* %arrayidx38, align 4, !tbaa !20
  br label %if.end.39

if.end.39:                                        ; preds = %if.else, %if.then.31
  br label %for.inc

for.inc:                                          ; preds = %if.end.39
  %38 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.54

if.else.40:                                       ; preds = %land.lhs.true, %if.end.7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.51, %if.else.40
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %40 = load i32, i32* %components, align 4, !tbaa !26
  %cmp42 = icmp slt i32 %39, %40
  br i1 %cmp42, label %for.body.44, label %for.end.53

for.body.44:                                      ; preds = %for.cond.41
  %41 = load i32, i32* %i, align 4, !tbaa !26
  %mul45 = mul nsw i32 %41, 2
  %idxprom46 = sext i32 %mul45 to i64
  %42 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds float, float* %42, i64 %idxprom46
  store float 0.000000e+00, float* %arrayidx47, align 4, !tbaa !20
  %43 = load i32, i32* %i, align 4, !tbaa !26
  %mul48 = mul nsw i32 %43, 2
  %add = add nsw i32 %mul48, 1
  %idxprom49 = sext i32 %add to i64
  %44 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds float, float* %44, i64 %idxprom49
  store float 1.000000e+00, float* %arrayidx50, align 4, !tbaa !20
  br label %for.inc.51

for.inc.51:                                       ; preds = %for.body.44
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %inc52 = add nsw i32 %45, 1
  store i32 %inc52, i32* %i, align 4, !tbaa !26
  br label %for.cond.41

for.end.53:                                       ; preds = %for.cond.41
  br label %if.end.54

if.end.54:                                        ; preds = %for.end.53, %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.54, %if.then.23, %if.then.6, %if.then.3, %if.then
  %46 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %46) #1
  %47 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %47) #1
  %48 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #1
  %49 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = load i32, i32* %retval
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal i32 @iccdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %components = alloca i32, align 4
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %tempref = alloca %struct.ref_s*, align 8
  %ICCdict = alloca %struct.ref_s, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %3 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %7 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %8 = bitcast %struct.gs_ref_memory_s* %7 to %struct.gs_memory_s*
  %9 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %8, %struct.ref_s* %9, i64 1, %struct.ref_s* %ICCdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %10, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %12, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %14 = load i32, i32* %code, align 4, !tbaa !26
  %cmp5 = icmp eq i32 %14, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.4
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end.4
  %15 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %16 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %16 to i32
  store i32 %conv, i32* %components, align 4, !tbaa !26
  %call8 = call i32 @dict_find_string(%struct.ref_s* %ICCdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call8, i32* %code, align 4, !tbaa !26
  %17 = load i32, i32* %code, align 4, !tbaa !26
  %cmp9 = icmp sgt i32 %17, 0
  br i1 %cmp9, label %land.lhs.true, label %if.else.42

land.lhs.true:                                    ; preds = %if.end.7
  %18 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %19 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv11 = zext i8 %20 to i32
  %cmp12 = icmp eq i32 %conv11, 14
  br i1 %cmp12, label %if.else.42, label %if.then.14

if.then.14:                                       ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.14
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %22 = load i32, i32* %components, align 4, !tbaa !26
  %mul = mul nsw i32 %22, 2
  %cmp15 = icmp slt i32 %21, %mul
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 1
  %current18 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory17, i32 0, i32 0
  %24 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current18, align 8, !tbaa !55
  %25 = bitcast %struct.gs_ref_memory_s* %24 to %struct.gs_memory_s*
  %26 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %27 = load i32, i32* %i, align 4, !tbaa !26
  %conv19 = sext i32 %27 to i64
  %call20 = call i32 @array_get(%struct.gs_memory_s* %25, %struct.ref_s* %26, i64 %conv19, %struct.ref_s* %valref) #7
  store i32 %call20, i32* %code, align 4, !tbaa !26
  %28 = load i32, i32* %code, align 4, !tbaa !26
  %cmp21 = icmp slt i32 %28, 0
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %for.body
  %29 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %for.body
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 0
  %30 = bitcast i16* %type_attrs26 to i8*
  %arrayidx27 = getelementptr inbounds i8, i8* %30, i64 1
  %31 = load i8, i8* %arrayidx27, align 1, !tbaa !54
  %conv28 = zext i8 %31 to i32
  %cmp29 = icmp eq i32 %conv28, 11
  br i1 %cmp29, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %if.end.24
  %value32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval33 = bitcast %union.v* %value32 to i64*
  %32 = load i64, i64* %intval33, align 8, !tbaa !23
  %conv34 = sitofp i64 %32 to float
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %mul35 = mul nsw i32 %33, 2
  %idxprom = sext i32 %mul35 to i64
  %34 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds float, float* %34, i64 %idxprom
  store float %conv34, float* %arrayidx36, align 4, !tbaa !20
  br label %if.end.41

if.else:                                          ; preds = %if.end.24
  %value37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %realval = bitcast %union.v* %value37 to float*
  %35 = load float, float* %realval, align 4, !tbaa !20
  %36 = load i32, i32* %i, align 4, !tbaa !26
  %mul38 = mul nsw i32 %36, 2
  %idxprom39 = sext i32 %mul38 to i64
  %37 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds float, float* %37, i64 %idxprom39
  store float %35, float* %arrayidx40, align 4, !tbaa !20
  br label %if.end.41

if.end.41:                                        ; preds = %if.else, %if.then.31
  br label %for.inc

for.inc:                                          ; preds = %if.end.41
  %38 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.56

if.else.42:                                       ; preds = %land.lhs.true, %if.end.7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.43

for.cond.43:                                      ; preds = %for.inc.53, %if.else.42
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %40 = load i32, i32* %components, align 4, !tbaa !26
  %cmp44 = icmp slt i32 %39, %40
  br i1 %cmp44, label %for.body.46, label %for.end.55

for.body.46:                                      ; preds = %for.cond.43
  %41 = load i32, i32* %i, align 4, !tbaa !26
  %mul47 = mul nsw i32 %41, 2
  %idxprom48 = sext i32 %mul47 to i64
  %42 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds float, float* %42, i64 %idxprom48
  store float 0.000000e+00, float* %arrayidx49, align 4, !tbaa !20
  %43 = load i32, i32* %i, align 4, !tbaa !26
  %mul50 = mul nsw i32 %43, 2
  %add = add nsw i32 %mul50, 1
  %idxprom51 = sext i32 %add to i64
  %44 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds float, float* %44, i64 %idxprom51
  store float 1.000000e+00, float* %arrayidx52, align 4, !tbaa !20
  br label %for.inc.53

for.inc.53:                                       ; preds = %for.body.46
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %inc54 = add nsw i32 %45, 1
  store i32 %inc54, i32* %i, align 4, !tbaa !26
  br label %for.cond.43

for.end.55:                                       ; preds = %for.cond.43
  br label %if.end.56

if.end.56:                                        ; preds = %for.end.55, %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.56, %if.then.23, %if.then.6, %if.then.3, %if.then
  %46 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %46) #1
  %47 = bitcast %struct.ref_s* %ICCdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %47) #1
  %48 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #1
  %49 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = load i32, i32* %retval
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal i32 @iccbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %0, align 4, !tbaa !26
  %1 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 1, i32* %1, align 4, !tbaa !26
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @iccvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @iccompareproc(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, %struct.ref_s* %testspace) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %testspace.addr = alloca %struct.ref_s*, align 8
  %code1 = alloca i32, align 4
  %code2 = alloca i32, align 4
  %ICCdict1 = alloca %struct.ref_s, align 8
  %ICCdict2 = alloca %struct.ref_s, align 8
  %tempref1 = alloca %struct.ref_s*, align 8
  %tempref2 = alloca %struct.ref_s*, align 8
  %buff_size = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store %struct.ref_s* %testspace, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.ref_s* %ICCdict1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s* %ICCdict2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast %struct.ref_s** %tempref1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.ref_s** %tempref2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast i32* %buff_size to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %8 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %9 = bitcast %struct.gs_ref_memory_s* %8 to %struct.gs_memory_s*
  %10 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %9, %struct.ref_s* %10, i64 1, %struct.ref_s* %ICCdict1) #7
  store i32 %call, i32* %code1, align 4, !tbaa !26
  %11 = load i32, i32* %code1, align 4, !tbaa !26
  %cmp = icmp slt i32 %11, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s*, %struct.ref_s** %testspace.addr, align 8, !tbaa !1
  %call3 = call i32 @array_get(%struct.gs_memory_s* %14, %struct.ref_s* %15, i64 1, %struct.ref_s* %ICCdict2) #7
  store i32 %call3, i32* %code2, align 4, !tbaa !26
  %16 = load i32, i32* %code2, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %16, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ICCdict1, i32 0, i32 1
  %bytes = bitcast %union.v* %value to i8**
  %17 = load i8*, i8** %bytes, align 8, !tbaa !1
  %value7 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ICCdict2, i32 0, i32 1
  %bytes8 = bitcast %union.v* %value7 to i8**
  %18 = load i8*, i8** %bytes8, align 8, !tbaa !1
  %cmp9 = icmp eq i8* %17, %18
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.6
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end.6
  %call12 = call i32 @dict_find_string(%struct.ref_s* %ICCdict1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref1) #7
  store i32 %call12, i32* %code1, align 4, !tbaa !26
  %call13 = call i32 @dict_find_string(%struct.ref_s* %ICCdict2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.ref_s** %tempref2) #7
  store i32 %call13, i32* %code2, align 4, !tbaa !26
  %19 = load i32, i32* %code1, align 4, !tbaa !26
  %20 = load i32, i32* %code2, align 4, !tbaa !26
  %cmp14 = icmp ne i32 %19, %20
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.11
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end.11
  %21 = load %struct.ref_s*, %struct.ref_s** %tempref1, align 8, !tbaa !1
  %value17 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %21, i32 0, i32 1
  %intval = bitcast %union.v* %value17 to i64*
  %22 = load i64, i64* %intval, align 8, !tbaa !23
  %23 = load %struct.ref_s*, %struct.ref_s** %tempref2, align 8, !tbaa !1
  %value18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %23, i32 0, i32 1
  %intval19 = bitcast %union.v* %value18 to i64*
  %24 = load i64, i64* %intval19, align 8, !tbaa !23
  %cmp20 = icmp ne i64 %22, %24
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.16
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end.16
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call23 = call i32 @comparedictkey(%struct.gs_context_state_s* %25, %struct.ref_s* %ICCdict1, %struct.ref_s* %ICCdict2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0)) #7
  %tobool = icmp ne i32 %call23, 0
  br i1 %tobool, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.22
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.25:                                        ; preds = %if.end.22
  %call26 = call i32 @dict_find_string(%struct.ref_s* %ICCdict1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct.ref_s** %tempref1) #7
  store i32 %call26, i32* %code1, align 4, !tbaa !26
  %26 = load i32, i32* %code1, align 4, !tbaa !26
  %cmp27 = icmp sle i32 %26, 0
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.25
  %call30 = call i32 @dict_find_string(%struct.ref_s* %ICCdict2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %struct.ref_s** %tempref2) #7
  store i32 %call30, i32* %code2, align 4, !tbaa !26
  %27 = load i32, i32* %code2, align 4, !tbaa !26
  %cmp31 = icmp sle i32 %27, 0
  br i1 %cmp31, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.29
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.29
  %28 = load %struct.ref_s*, %struct.ref_s** %tempref1, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %29 = load i32, i32* %rsize, align 4, !tbaa !5
  %30 = load %struct.ref_s*, %struct.ref_s** %tempref2, align 8, !tbaa !1
  %tas34 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i32 0, i32 0
  %rsize35 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas34, i32 0, i32 2
  %31 = load i32, i32* %rsize35, align 4, !tbaa !5
  %cmp36 = icmp ne i32 %29, %31
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %if.end.33
  %32 = load %struct.ref_s*, %struct.ref_s** %tempref1, align 8, !tbaa !1
  %tas39 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 0, i32 0
  %rsize40 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas39, i32 0, i32 2
  %33 = load i32, i32* %rsize40, align 4, !tbaa !5
  store i32 %33, i32* %buff_size, align 4, !tbaa !26
  %34 = load %struct.ref_s*, %struct.ref_s** %tempref1, align 8, !tbaa !1
  %value41 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value41 to i8**
  %35 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  %36 = load %struct.ref_s*, %struct.ref_s** %tempref2, align 8, !tbaa !1
  %value42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 1
  %const_bytes43 = bitcast %union.v* %value42 to i8**
  %37 = load i8*, i8** %const_bytes43, align 8, !tbaa !1
  %38 = load i32, i32* %buff_size, align 4, !tbaa !26
  %conv = sext i32 %38 to i64
  %call44 = call i32 @memcmp(i8* %35, i8* %37, i64 %conv) #9
  %cmp45 = icmp eq i32 %call44, 0
  br i1 %cmp45, label %if.then.47, label %if.else

if.then.47:                                       ; preds = %if.end.38
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %if.end.38
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then.47, %if.then.37, %if.then.32, %if.then.28, %if.then.24, %if.then.21, %if.then.15, %if.then.10, %if.then.5, %if.then
  %39 = bitcast i32* %buff_size to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  %40 = bitcast %struct.ref_s** %tempref2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %40) #1
  %41 = bitcast %struct.ref_s** %tempref1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast %struct.ref_s* %ICCdict2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %42) #1
  %43 = bitcast %struct.ref_s* %ICCdict1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %43) #1
  %44 = bitcast i32* %code2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #1
  %46 = load i32, i32* %retval
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define internal i32 @setlabspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %labdict = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %range_buff = alloca [4 x float], align 16
  %white = alloca [3 x float], align 4
  %black = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %cc = alloca %struct.gs_client_color_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s* %labdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %2 = bitcast [4 x float]* %range_buff to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast [3 x float]* %white to i8*
  call void @llvm.lifetime.start(i64 12, i8* %3) #1
  %4 = bitcast [3 x float]* %black to i8*
  call void @llvm.lifetime.start(i64 12, i8* %4) #1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %6) #1
  %7 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %7, align 4, !tbaa !26
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %labdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %12, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %16 = bitcast %struct.gs_ref_memory_s* %15 to %struct.gs_memory_s*
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %range_buff, i32 0, i32 0
  %call3 = call i32 @dict_floats_param(%struct.gs_memory_s* %16, %struct.ref_s* %labdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), i32 4, float* %arraydecay, float* getelementptr inbounds ([4 x float], [4 x float]* @setlabspace.dflt_range, i32 0, i32 0)) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %i, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %17, 4
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !tbaa !26
  %add = add nsw i32 %18, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %range_buff, i32 0, i64 %idxprom
  %19 = load float, float* %arrayidx, align 4, !tbaa !20
  %20 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom5 = sext i32 %20 to i64
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %range_buff, i32 0, i64 %idxprom5
  %21 = load float, float* %arrayidx6, align 4, !tbaa !20
  %cmp7 = fcmp oge float %19, %21
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %22 = phi i1 [ false, %for.cond ], [ %cmp7, %land.rhs ]
  br i1 %22, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !tbaa !26
  %add8 = add nsw i32 %23, 2
  store i32 %add8, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %land.end
  %24 = load i32, i32* %i, align 4, !tbaa !26
  %cmp9 = icmp ne i32 %24, 4
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %for.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %for.end
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory12 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 1
  %current13 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory12, i32 0, i32 0
  %26 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current13, align 8, !tbaa !55
  %27 = bitcast %struct.gs_ref_memory_s* %26 to %struct.gs_memory_s*
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %black, i32 0, i32 0
  %call15 = call i32 @dict_floats_param(%struct.gs_memory_s* %27, %struct.ref_s* %labdict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0), i32 3, float* %arraydecay14, float* getelementptr inbounds ([3 x float], [3 x float]* @setlabspace.dflt_black, i32 0, i32 0)) #7
  store i32 %call15, i32* %code, align 4, !tbaa !26
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory16 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 1
  %current17 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory16, i32 0, i32 0
  %29 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current17, align 8, !tbaa !55
  %30 = bitcast %struct.gs_ref_memory_s* %29 to %struct.gs_memory_s*
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i32 0
  %call19 = call i32 @dict_floats_param(%struct.gs_memory_s* %30, %struct.ref_s* %labdict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0), i32 3, float* %arraydecay18, float* getelementptr inbounds ([3 x float], [3 x float]* @setlabspace.dflt_white, i32 0, i32 0)) #7
  store i32 %call19, i32* %code, align 4, !tbaa !26
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 0
  %31 = load float, float* %arrayidx20, align 4, !tbaa !20
  %cmp21 = fcmp ole float %31, 0.000000e+00
  br i1 %cmp21, label %if.then.29, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.11
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 1
  %32 = load float, float* %arrayidx22, align 4, !tbaa !20
  %conv = fpext float %32 to double
  %cmp23 = fcmp une double %conv, 1.000000e+00
  br i1 %cmp23, label %if.then.29, label %lor.lhs.false.25

lor.lhs.false.25:                                 ; preds = %lor.lhs.false
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 2
  %33 = load float, float* %arrayidx26, align 4, !tbaa !20
  %cmp27 = fcmp ole float %33, 0.000000e+00
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %lor.lhs.false.25, %lor.lhs.false, %if.end.11
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %lor.lhs.false.25
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %black, i32 0, i32 0
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %range_buff, i32 0, i32 0
  %call34 = call i32 @seticc_lab(%struct.gs_context_state_s* %34, float* %arraydecay31, float* %arraydecay32, float* %arraydecay33) #7
  store i32 %call34, i32* %code, align 4, !tbaa !26
  %35 = load i32, i32* %code, align 4, !tbaa !26
  %cmp35 = icmp slt i32 %35, 0
  br i1 %cmp35, label %if.then.37, label %if.end.39

if.then.37:                                       ; preds = %if.end.30
  %36 = load i32, i32* %code, align 4, !tbaa !26
  %call38 = call i32 (i8*, i8*, i32, i32, i32, i8*, ...) @gs_throw_imp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.setlabspace, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0), i32 4905, i32 1, i32 %36, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.88, i32 0, i32 0)) #7
  store i32 %call38, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.end.30
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.40

for.cond.40:                                      ; preds = %for.inc.46, %if.end.39
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %cmp41 = icmp slt i32 %37, 3
  br i1 %cmp41, label %for.body.43, label %for.end.47

for.body.43:                                      ; preds = %for.cond.40
  %38 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom44 = sext i32 %38 to i64
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom44
  store float 0.000000e+00, float* %arrayidx45, align 4, !tbaa !20
  br label %for.inc.46

for.inc.46:                                       ; preds = %for.body.43
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond.40

for.end.47:                                       ; preds = %for.cond.40
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 0
  %41 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call48 = call i32 @gs_setcolor(%struct.gs_state_s* %41, %struct.gs_client_color_s* %cc) #7
  store i32 %call48, i32* %code, align 4, !tbaa !26
  %42 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %42, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.47, %if.then.37, %if.then.29, %if.then.10, %if.then
  %43 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %43) #1
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = bitcast [3 x float]* %black to i8*
  call void @llvm.lifetime.end(i64 12, i8* %45) #1
  %46 = bitcast [3 x float]* %white to i8*
  call void @llvm.lifetime.end(i64 12, i8* %46) #1
  %47 = bitcast [4 x float]* %range_buff to i8*
  call void @llvm.lifetime.end(i64 16, i8* %47) #1
  %48 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #1
  %49 = bitcast %struct.ref_s* %labdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %49) #1
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind uwtable
define internal i32 @validatelabspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %space = alloca %struct.ref_s*, align 8
  %labdict = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.ref_s* %labdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %4 = load %struct.ref_s*, %struct.ref_s** %3, align 8, !tbaa !1
  store %struct.ref_s* %4, %struct.ref_s** %space, align 8, !tbaa !1
  %5 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %6 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %8 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ult i32 %8, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %10 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %11 = bitcast %struct.gs_ref_memory_s* %10 to %struct.gs_memory_s*
  %12 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %11, %struct.ref_s* %12, i64 1, %struct.ref_s* %labdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %13 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %13, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %14 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %labdict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %15 = bitcast i16* %type_attrs12 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv13 = zext i8 %16 to i32
  %cmp14 = icmp eq i32 %conv13, 2
  br i1 %cmp14, label %if.end.18, label %if.then.16

if.then.16:                                       ; preds = %if.end.10
  %call17 = call i32 @check_type_failed(%struct.ref_s* %labdict) #7
  store i32 %call17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.10
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call19 = call i32 @checkWhitePoint(%struct.gs_context_state_s* %17, %struct.ref_s* %labdict) #7
  store i32 %call19, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp20 = icmp ne i32 %18, 0
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.18
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.18
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call24 = call i32 @checkBlackPoint(%struct.gs_context_state_s* %20, %struct.ref_s* %labdict) #7
  store i32 %call24, i32* %code, align 4, !tbaa !26
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp25 = icmp slt i32 %21, 0
  br i1 %cmp25, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.23
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end.23
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call29 = call i32 @checkrangeab(%struct.gs_context_state_s* %23, %struct.ref_s* %labdict) #7
  store i32 %call29, i32* %code, align 4, !tbaa !26
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp30 = icmp slt i32 %24, 0
  br i1 %cmp30, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.28
  %25 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.28
  %26 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %26, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.33, %if.then.32, %if.then.27, %if.then.22, %if.then.16, %if.then.9, %if.then.5, %if.then
  %27 = bitcast %struct.ref_s* %labdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %27) #1
  %28 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = load i32, i32* %retval
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @labrange(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %5, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %6 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %7 = bitcast %struct.gs_ref_memory_s* %6 to %struct.gs_memory_s*
  %8 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %7, %struct.ref_s* %8, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %11 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %11, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else.38

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %13 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %14 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else.38, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.5
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %cmp6 = icmp slt i32 %15, 4
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 1
  %current9 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory8, i32 0, i32 0
  %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current9, align 8, !tbaa !55
  %18 = bitcast %struct.gs_ref_memory_s* %17 to %struct.gs_memory_s*
  %19 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %20 = load i32, i32* %i, align 4, !tbaa !26
  %conv10 = sext i32 %20 to i64
  %call11 = call i32 @array_get(%struct.gs_memory_s* %18, %struct.ref_s* %19, i64 %conv10, %struct.ref_s* %valref) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %21, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %for.body
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %for.body
  %tas16 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs17 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas16, i32 0, i32 0
  %23 = bitcast i16* %type_attrs17 to i8*
  %arrayidx18 = getelementptr inbounds i8, i8* %23, i64 1
  %24 = load i8, i8* %arrayidx18, align 1, !tbaa !54
  %conv19 = zext i8 %24 to i32
  %cmp20 = icmp eq i32 %conv19, 11
  br i1 %cmp20, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %if.end.15
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %25 = load i64, i64* %intval, align 8, !tbaa !23
  %conv23 = sitofp i64 %25 to float
  %26 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %26 to i64
  %27 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds float, float* %27, i64 %idxprom
  store float %conv23, float* %arrayidx24, align 4, !tbaa !20
  br label %if.end.37

if.else:                                          ; preds = %if.end.15
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 0
  %28 = bitcast i16* %type_attrs26 to i8*
  %arrayidx27 = getelementptr inbounds i8, i8* %28, i64 1
  %29 = load i8, i8* %arrayidx27, align 1, !tbaa !54
  %conv28 = zext i8 %29 to i32
  %cmp29 = icmp eq i32 %conv28, 16
  br i1 %cmp29, label %if.then.31, label %if.else.35

if.then.31:                                       ; preds = %if.else
  %value32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %realval = bitcast %union.v* %value32 to float*
  %30 = load float, float* %realval, align 4, !tbaa !20
  %31 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom33 = sext i32 %31 to i64
  %32 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds float, float* %32, i64 %idxprom33
  store float %30, float* %arrayidx34, align 4, !tbaa !20
  br label %if.end.36

if.else.35:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.then.31
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.then.22
  br label %for.inc

for.inc:                                          ; preds = %if.end.37
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.51

if.else.38:                                       ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.39

for.cond.39:                                      ; preds = %for.inc.48, %if.else.38
  %34 = load i32, i32* %i, align 4, !tbaa !26
  %cmp40 = icmp slt i32 %34, 2
  br i1 %cmp40, label %for.body.42, label %for.end.50

for.body.42:                                      ; preds = %for.cond.39
  %35 = load i32, i32* %i, align 4, !tbaa !26
  %mul = mul nsw i32 2, %35
  %idxprom43 = sext i32 %mul to i64
  %36 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds float, float* %36, i64 %idxprom43
  store float -1.000000e+02, float* %arrayidx44, align 4, !tbaa !20
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %mul45 = mul nsw i32 2, %37
  %add = add nsw i32 %mul45, 1
  %idxprom46 = sext i32 %add to i64
  %38 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds float, float* %38, i64 %idxprom46
  store float 1.000000e+02, float* %arrayidx47, align 4, !tbaa !20
  br label %for.inc.48

for.inc.48:                                       ; preds = %for.body.42
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %inc49 = add nsw i32 %39, 1
  store i32 %inc49, i32* %i, align 4, !tbaa !26
  br label %for.cond.39

for.end.50:                                       ; preds = %for.cond.39
  br label %if.end.51

if.end.51:                                        ; preds = %for.end.50, %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %if.else.35, %if.then.14, %if.then
  %40 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %40) #1
  %41 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %42) #1
  %43 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %43) #1
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define internal i32 @labdomain(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %ptr.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %CIEdict = alloca %struct.ref_s, align 8
  %tempref = alloca %struct.ref_s*, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %ptr, float** %ptr.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %5, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %6 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %7 = bitcast %struct.gs_ref_memory_s* %6 to %struct.gs_memory_s*
  %8 = load %struct.ref_s*, %struct.ref_s** %space.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %7, %struct.ref_s* %8, i64 1, %struct.ref_s* %CIEdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 @dict_find_string(%struct.ref_s* %CIEdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %11 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sgt i32 %11, 0
  br i1 %cmp2, label %land.lhs.true, label %if.else.38

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %13 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %14 to i32
  %cmp3 = icmp eq i32 %conv, 14
  br i1 %cmp3, label %if.else.38, label %if.then.5

if.then.5:                                        ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.5
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %cmp6 = icmp slt i32 %15, 4
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 1
  %current9 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory8, i32 0, i32 0
  %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current9, align 8, !tbaa !55
  %18 = bitcast %struct.gs_ref_memory_s* %17 to %struct.gs_memory_s*
  %19 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %20 = load i32, i32* %i, align 4, !tbaa !26
  %conv10 = sext i32 %20 to i64
  %call11 = call i32 @array_get(%struct.gs_memory_s* %18, %struct.ref_s* %19, i64 %conv10, %struct.ref_s* %valref) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %21, 0
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %for.body
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %for.body
  %tas16 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs17 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas16, i32 0, i32 0
  %23 = bitcast i16* %type_attrs17 to i8*
  %arrayidx18 = getelementptr inbounds i8, i8* %23, i64 1
  %24 = load i8, i8* %arrayidx18, align 1, !tbaa !54
  %conv19 = zext i8 %24 to i32
  %cmp20 = icmp eq i32 %conv19, 11
  br i1 %cmp20, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %if.end.15
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %25 = load i64, i64* %intval, align 8, !tbaa !23
  %conv23 = sitofp i64 %25 to float
  %26 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %26 to i64
  %27 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds float, float* %27, i64 %idxprom
  store float %conv23, float* %arrayidx24, align 4, !tbaa !20
  br label %if.end.37

if.else:                                          ; preds = %if.end.15
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 0
  %28 = bitcast i16* %type_attrs26 to i8*
  %arrayidx27 = getelementptr inbounds i8, i8* %28, i64 1
  %29 = load i8, i8* %arrayidx27, align 1, !tbaa !54
  %conv28 = zext i8 %29 to i32
  %cmp29 = icmp eq i32 %conv28, 16
  br i1 %cmp29, label %if.then.31, label %if.else.35

if.then.31:                                       ; preds = %if.else
  %value32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %realval = bitcast %union.v* %value32 to float*
  %30 = load float, float* %realval, align 4, !tbaa !20
  %31 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom33 = sext i32 %31 to i64
  %32 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds float, float* %32, i64 %idxprom33
  store float %30, float* %arrayidx34, align 4, !tbaa !20
  br label %if.end.36

if.else.35:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.then.31
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.then.22
  br label %for.inc

for.inc:                                          ; preds = %if.end.37
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.51

if.else.38:                                       ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.39

for.cond.39:                                      ; preds = %for.inc.48, %if.else.38
  %34 = load i32, i32* %i, align 4, !tbaa !26
  %cmp40 = icmp slt i32 %34, 2
  br i1 %cmp40, label %for.body.42, label %for.end.50

for.body.42:                                      ; preds = %for.cond.39
  %35 = load i32, i32* %i, align 4, !tbaa !26
  %mul = mul nsw i32 2, %35
  %idxprom43 = sext i32 %mul to i64
  %36 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds float, float* %36, i64 %idxprom43
  store float -1.000000e+02, float* %arrayidx44, align 4, !tbaa !20
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %mul45 = mul nsw i32 2, %37
  %add = add nsw i32 %mul45, 1
  %idxprom46 = sext i32 %add to i64
  %38 = load float*, float** %ptr.addr, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds float, float* %38, i64 %idxprom46
  store float 1.000000e+02, float* %arrayidx47, align 4, !tbaa !20
  br label %for.inc.48

for.inc.48:                                       ; preds = %for.body.42
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %inc49 = add nsw i32 %39, 1
  store i32 %inc49, i32* %i, align 4, !tbaa !26
  br label %for.cond.39

for.end.50:                                       ; preds = %for.cond.39
  br label %if.end.51

if.end.51:                                        ; preds = %for.end.50, %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %if.else.35, %if.then.14, %if.then
  %40 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %40) #1
  %41 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #1
  %42 = bitcast %struct.ref_s* %CIEdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %42) #1
  %43 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %43) #1
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = load i32, i32* %retval
  ret i32 %45
}

; Function Attrs: nounwind uwtable
define internal i32 @labbasecolor(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, i32 %base, i32* %stage, i32* %cont, i32* %stack_depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %base.addr = alloca i32, align 4
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %stack_depth.addr = alloca i32*, align 8
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %components = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store i32 %base, i32* %base.addr, align 4, !tbaa !26
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32* %stack_depth, i32** %stack_depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %components to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 1, i32* %components, align 4, !tbaa !26
  store i32 3, i32* %components, align 4, !tbaa !26
  %3 = load i32, i32* %components, align 4, !tbaa !26
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  %idx.ext = sext i32 %3 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 %idx.neg
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p, align 8, !tbaa !10
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %p3 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 0
  %7 = load %struct.ref_s*, %struct.ref_s** %p3, align 8, !tbaa !10
  store %struct.ref_s* %7, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 3, i32* %components, align 4, !tbaa !26
  br label %do.body

do.body:                                          ; preds = %entry
  %8 = load i32, i32* %components, align 4, !tbaa !26
  %9 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext4 = sext i32 %8 to i64
  %add.ptr5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i64 %idx.ext4
  store %struct.ref_s* %add.ptr5, %struct.ref_s** %op, align 8, !tbaa !1
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %10, i32 0, i32 26
  %stack7 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack6, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack7, i32 0, i32 2
  %11 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp = icmp ugt %struct.ref_s* %add.ptr5, %11
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %12 = load i32, i32* %components, align 4, !tbaa !26
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 26
  %stack9 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack8, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack9, i32 0, i32 7
  store i32 %12, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.body
  %14 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack10 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 26
  %stack11 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack10, i32 0, i32 0
  %p12 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack11, i32 0, i32 0
  store %struct.ref_s* %14, %struct.ref_s** %p12, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.cond
  %16 = load i32, i32* %components, align 4, !tbaa !26
  %sub = sub nsw i32 %16, 1
  %17 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext13 = sext i32 %sub to i64
  %idx.neg14 = sub i64 0, %idx.ext13
  %add.ptr15 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i64 %idx.neg14
  store %struct.ref_s* %add.ptr15, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %18 = load i32, i32* %i, align 4, !tbaa !26
  %19 = load i32, i32* %components, align 4, !tbaa !26
  %cmp16 = icmp slt i32 %18, %19
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %20, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  store float 0.000000e+00, float* %realval, align 4, !tbaa !20
  %21 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %21, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 4096, i16* %type_attrs, align 2, !tbaa !22
  %22 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load i32*, i32** %stage.addr, align 8, !tbaa !1
  store i32 0, i32* %24, align 4, !tbaa !26
  %25 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %25, align 4, !tbaa !26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %26 = bitcast i32* %components to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %28 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define internal i32 @labvalidate(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space, float* %values, i32 %num_comps) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space.addr = alloca %struct.ref_s*, align 8
  %values.addr = alloca float*, align 8
  %num_comps.addr = alloca i32, align 4
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space, %struct.ref_s** %space.addr, align 8, !tbaa !1
  store float* %values, float** %values.addr, align 8, !tbaa !1
  store i32 %num_comps, i32* %num_comps.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load i32, i32* %num_comps.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %4, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i64 -2
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %6, 3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp2 = icmp eq i32 %conv, 11
  br i1 %cmp2, label %if.end.11, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs5 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas4, i32 0, i32 0
  %11 = bitcast i16* %type_attrs5 to i8*
  %arrayidx6 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx6, align 1, !tbaa !54
  %conv7 = zext i8 %12 to i32
  %cmp8 = icmp eq i32 %conv7, 16
  br i1 %cmp8, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %land.lhs.true, %for.body
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.11
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.10, %if.then
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #1
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @setcalgrayspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %graydict = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %gamma = alloca float, align 4
  %white = alloca [3 x float], align 4
  %black = alloca [3 x float], align 4
  %dflt_gamma = alloca double, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s* %graydict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %2 = bitcast float* %gamma to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast [3 x float]* %white to i8*
  call void @llvm.lifetime.start(i64 12, i8* %3) #1
  %4 = bitcast [3 x float]* %black to i8*
  call void @llvm.lifetime.start(i64 12, i8* %4) #1
  %5 = bitcast double* %dflt_gamma to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store double 1.000000e+00, double* %dflt_gamma, align 8, !tbaa !42
  %6 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %6) #1
  %7 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %7, align 4, !tbaa !26
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %9 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %10 = bitcast %struct.gs_ref_memory_s* %9 to %struct.gs_memory_s*
  %11 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %10, %struct.ref_s* %11, i64 1, %struct.ref_s* %graydict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %12 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %12, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = load double, double* %dflt_gamma, align 8, !tbaa !42
  %call1 = call i32 @dict_float_param(%struct.ref_s* %graydict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), double %14, float* %gamma) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %15 = load float, float* %gamma, align 4, !tbaa !20
  %cmp2 = fcmp ole float %15, 0.000000e+00
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %16, i32 0, i32 1
  %current6 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory5, i32 0, i32 0
  %17 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current6, align 8, !tbaa !55
  %18 = bitcast %struct.gs_ref_memory_s* %17 to %struct.gs_memory_s*
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %black, i32 0, i32 0
  %call7 = call i32 @dict_floats_param(%struct.gs_memory_s* %18, %struct.ref_s* %graydict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0), i32 3, float* %arraydecay, float* getelementptr inbounds ([3 x float], [3 x float]* @setcalgrayspace.dflt_black, i32 0, i32 0)) #7
  store i32 %call7, i32* %code, align 4, !tbaa !26
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %19, i32 0, i32 1
  %current9 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory8, i32 0, i32 0
  %20 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current9, align 8, !tbaa !55
  %21 = bitcast %struct.gs_ref_memory_s* %20 to %struct.gs_memory_s*
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i32 0
  %call11 = call i32 @dict_floats_param(%struct.gs_memory_s* %21, %struct.ref_s* %graydict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0), i32 3, float* %arraydecay10, float* getelementptr inbounds ([3 x float], [3 x float]* @setcalgrayspace.dflt_white, i32 0, i32 0)) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 0
  %22 = load float, float* %arrayidx, align 4, !tbaa !20
  %cmp12 = fcmp ole float %22, 0.000000e+00
  br i1 %cmp12, label %if.then.20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.4
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 1
  %23 = load float, float* %arrayidx13, align 4, !tbaa !20
  %conv = fpext float %23 to double
  %cmp14 = fcmp une double %conv, 1.000000e+00
  br i1 %cmp14, label %if.then.20, label %lor.lhs.false.16

lor.lhs.false.16:                                 ; preds = %lor.lhs.false
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 2
  %24 = load float, float* %arrayidx17, align 4, !tbaa !20
  %cmp18 = fcmp ole float %24, 0.000000e+00
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %lor.lhs.false.16, %lor.lhs.false, %if.end.4
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %lor.lhs.false.16
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i32 0
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %black, i32 0, i32 0
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %graydict, i32 0, i32 1
  %saveid = bitcast %union.v* %value to i64*
  %26 = load i64, i64* %saveid, align 8, !tbaa !23
  %call24 = call i32 @seticc_cal(%struct.gs_context_state_s* %25, float* %arraydecay22, float* %arraydecay23, float* %gamma, float* null, i32 1, i64 %26) #7
  store i32 %call24, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp25 = icmp slt i32 %27, 0
  br i1 %cmp25, label %if.then.27, label %if.end.29

if.then.27:                                       ; preds = %if.end.21
  %28 = load i32, i32* %code, align 4, !tbaa !26
  %call28 = call i32 (i8*, i8*, i32, i32, i32, i8*, ...) @gs_throw_imp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.setcalgrayspace, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0), i32 5142, i32 1, i32 %28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0)) #7
  store i32 %call28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.29:                                        ; preds = %if.end.21
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx30, align 4, !tbaa !20
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 0
  %30 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call31 = call i32 @gs_setcolor(%struct.gs_state_s* %30, %struct.gs_client_color_s* %cc) #7
  store i32 %call31, i32* %code, align 4, !tbaa !26
  %31 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %31, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.29, %if.then.27, %if.then.20, %if.then.3, %if.then
  %32 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %32) #1
  %33 = bitcast double* %dflt_gamma to i8*
  call void @llvm.lifetime.end(i64 8, i8* %33) #1
  %34 = bitcast [3 x float]* %black to i8*
  call void @llvm.lifetime.end(i64 12, i8* %34) #1
  %35 = bitcast [3 x float]* %white to i8*
  call void @llvm.lifetime.end(i64 12, i8* %35) #1
  %36 = bitcast float* %gamma to i8*
  call void @llvm.lifetime.end(i64 4, i8* %36) #1
  %37 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %37) #1
  %38 = bitcast %struct.ref_s* %graydict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %38) #1
  %39 = load i32, i32* %retval
  ret i32 %39
}

; Function Attrs: nounwind uwtable
define internal i32 @validatecalgrayspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %space = alloca %struct.ref_s*, align 8
  %calgraydict = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.ref_s* %calgraydict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %4 = load %struct.ref_s*, %struct.ref_s** %3, align 8, !tbaa !1
  store %struct.ref_s* %4, %struct.ref_s** %space, align 8, !tbaa !1
  %5 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %6 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %8 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ult i32 %8, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %10 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %11 = bitcast %struct.gs_ref_memory_s* %10 to %struct.gs_memory_s*
  %12 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %11, %struct.ref_s* %12, i64 1, %struct.ref_s* %calgraydict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %13 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %13, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %14 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %calgraydict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %15 = bitcast i16* %type_attrs12 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv13 = zext i8 %16 to i32
  %cmp14 = icmp eq i32 %conv13, 2
  br i1 %cmp14, label %if.end.18, label %if.then.16

if.then.16:                                       ; preds = %if.end.10
  %call17 = call i32 @check_type_failed(%struct.ref_s* %calgraydict) #7
  store i32 %call17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.10
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call19 = call i32 @checkWhitePoint(%struct.gs_context_state_s* %17, %struct.ref_s* %calgraydict) #7
  store i32 %call19, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp20 = icmp ne i32 %18, 0
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.18
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.18
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call24 = call i32 @checkBlackPoint(%struct.gs_context_state_s* %20, %struct.ref_s* %calgraydict) #7
  store i32 %call24, i32* %code, align 4, !tbaa !26
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp25 = icmp slt i32 %21, 0
  br i1 %cmp25, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.23
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end.23
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call29 = call i32 @checkGamma(%struct.gs_context_state_s* %23, %struct.ref_s* %calgraydict, i32 1) #7
  store i32 %call29, i32* %code, align 4, !tbaa !26
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp30 = icmp slt i32 %24, 0
  br i1 %cmp30, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %if.end.28
  %25 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %if.end.28
  %26 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %26, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.33, %if.then.32, %if.then.27, %if.then.22, %if.then.16, %if.then.9, %if.then.5, %if.then
  %27 = bitcast %struct.ref_s* %calgraydict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %27) #1
  %28 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #1
  %29 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = load i32, i32* %retval
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @setcalrgbspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %r, i32* %stage, i32* %cont, i32 %CIESubst) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s*, align 8
  %stage.addr = alloca i32*, align 8
  %cont.addr = alloca i32*, align 8
  %CIESubst.addr = alloca i32, align 4
  %rgbdict = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %gamma = alloca [3 x float], align 4
  %white = alloca [3 x float], align 4
  %black = alloca [3 x float], align 4
  %matrix = alloca [9 x float], align 16
  %i = alloca i32, align 4
  %cc = alloca %struct.gs_client_color_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %r, %struct.ref_s** %r.addr, align 8, !tbaa !1
  store i32* %stage, i32** %stage.addr, align 8, !tbaa !1
  store i32* %cont, i32** %cont.addr, align 8, !tbaa !1
  store i32 %CIESubst, i32* %CIESubst.addr, align 4, !tbaa !26
  %0 = bitcast %struct.ref_s* %rgbdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %2 = bitcast [3 x float]* %gamma to i8*
  call void @llvm.lifetime.start(i64 12, i8* %2) #1
  %3 = bitcast [3 x float]* %white to i8*
  call void @llvm.lifetime.start(i64 12, i8* %3) #1
  %4 = bitcast [3 x float]* %black to i8*
  call void @llvm.lifetime.start(i64 12, i8* %4) #1
  %5 = bitcast [9 x float]* %matrix to i8*
  call void @llvm.lifetime.start(i64 36, i8* %5) #1
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %7) #1
  %8 = load i32*, i32** %cont.addr, align 8, !tbaa !1
  store i32 0, i32* %8, align 4, !tbaa !26
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %10 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %11 = bitcast %struct.gs_ref_memory_s* %10 to %struct.gs_memory_s*
  %12 = load %struct.ref_s*, %struct.ref_s** %r.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %11, %struct.ref_s* %12, i64 1, %struct.ref_s* %rgbdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %13 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %13, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 1
  %current2 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory1, i32 0, i32 0
  %16 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current2, align 8, !tbaa !55
  %17 = bitcast %struct.gs_ref_memory_s* %16 to %struct.gs_memory_s*
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %gamma, i32 0, i32 0
  %call3 = call i32 @dict_floats_param(%struct.gs_memory_s* %17, %struct.ref_s* %rgbdict, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), i32 3, float* %arraydecay, float* getelementptr inbounds ([3 x float], [3 x float]* @setcalrgbspace.dflt_gamma, i32 0, i32 0)) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %gamma, i32 0, i64 0
  %18 = load float, float* %arrayidx, align 4, !tbaa !20
  %cmp4 = fcmp ole float %18, 0.000000e+00
  br i1 %cmp4, label %if.then.10, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %gamma, i32 0, i64 1
  %19 = load float, float* %arrayidx5, align 4, !tbaa !20
  %cmp6 = fcmp ole float %19, 0.000000e+00
  br i1 %cmp6, label %if.then.10, label %lor.lhs.false.7

lor.lhs.false.7:                                  ; preds = %lor.lhs.false
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %gamma, i32 0, i64 2
  %20 = load float, float* %arrayidx8, align 4, !tbaa !20
  %cmp9 = fcmp ole float %20, 0.000000e+00
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %lor.lhs.false.7, %lor.lhs.false, %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %lor.lhs.false.7
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory12 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 1
  %current13 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory12, i32 0, i32 0
  %22 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current13, align 8, !tbaa !55
  %23 = bitcast %struct.gs_ref_memory_s* %22 to %struct.gs_memory_s*
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %black, i32 0, i32 0
  %call15 = call i32 @dict_floats_param(%struct.gs_memory_s* %23, %struct.ref_s* %rgbdict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0), i32 3, float* %arraydecay14, float* getelementptr inbounds ([3 x float], [3 x float]* @setcalrgbspace.dflt_black, i32 0, i32 0)) #7
  store i32 %call15, i32* %code, align 4, !tbaa !26
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory16 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 1
  %current17 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory16, i32 0, i32 0
  %25 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current17, align 8, !tbaa !55
  %26 = bitcast %struct.gs_ref_memory_s* %25 to %struct.gs_memory_s*
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i32 0
  %call19 = call i32 @dict_floats_param(%struct.gs_memory_s* %26, %struct.ref_s* %rgbdict, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0), i32 3, float* %arraydecay18, float* getelementptr inbounds ([3 x float], [3 x float]* @setcalrgbspace.dflt_white, i32 0, i32 0)) #7
  store i32 %call19, i32* %code, align 4, !tbaa !26
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 0
  %27 = load float, float* %arrayidx20, align 4, !tbaa !20
  %cmp21 = fcmp ole float %27, 0.000000e+00
  br i1 %cmp21, label %if.then.30, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %if.end.11
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 1
  %28 = load float, float* %arrayidx23, align 4, !tbaa !20
  %conv = fpext float %28 to double
  %cmp24 = fcmp une double %conv, 1.000000e+00
  br i1 %cmp24, label %if.then.30, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %lor.lhs.false.22
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i64 2
  %29 = load float, float* %arrayidx27, align 4, !tbaa !20
  %cmp28 = fcmp ole float %29, 0.000000e+00
  br i1 %cmp28, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %lor.lhs.false.26, %lor.lhs.false.22, %if.end.11
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %lor.lhs.false.26
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory32 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 1
  %current33 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory32, i32 0, i32 0
  %31 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current33, align 8, !tbaa !55
  %32 = bitcast %struct.gs_ref_memory_s* %31 to %struct.gs_memory_s*
  %arraydecay34 = getelementptr inbounds [9 x float], [9 x float]* %matrix, i32 0, i32 0
  %call35 = call i32 @dict_floats_param(%struct.gs_memory_s* %32, %struct.ref_s* %rgbdict, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i32 9, float* %arraydecay34, float* getelementptr inbounds ([9 x float], [9 x float]* @setcalrgbspace.dflt_matrix, i32 0, i32 0)) #7
  store i32 %call35, i32* %code, align 4, !tbaa !26
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %white, i32 0, i32 0
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %black, i32 0, i32 0
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %gamma, i32 0, i32 0
  %arraydecay39 = getelementptr inbounds [9 x float], [9 x float]* %matrix, i32 0, i32 0
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %rgbdict, i32 0, i32 1
  %saveid = bitcast %union.v* %value to i64*
  %34 = load i64, i64* %saveid, align 8, !tbaa !23
  %call40 = call i32 @seticc_cal(%struct.gs_context_state_s* %33, float* %arraydecay36, float* %arraydecay37, float* %arraydecay38, float* %arraydecay39, i32 3, i64 %34) #7
  store i32 %call40, i32* %code, align 4, !tbaa !26
  %35 = load i32, i32* %code, align 4, !tbaa !26
  %cmp41 = icmp slt i32 %35, 0
  br i1 %cmp41, label %if.then.43, label %if.end.45

if.then.43:                                       ; preds = %if.end.31
  %36 = load i32, i32* %code, align 4, !tbaa !26
  %call44 = call i32 (i8*, i8*, i32, i32, i32, i8*, ...) @gs_throw_imp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.setcalrgbspace, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i32 0, i32 0), i32 5229, i32 1, i32 %36, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.92, i32 0, i32 0)) #7
  store i32 %call44, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.45:                                        ; preds = %if.end.31
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.45
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %cmp46 = icmp slt i32 %37, 3
  br i1 %cmp46, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %38 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %38 to i64
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx48, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %39 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 0
  %41 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call49 = call i32 @gs_setcolor(%struct.gs_state_s* %41, %struct.gs_client_color_s* %cc) #7
  store i32 %call49, i32* %code, align 4, !tbaa !26
  %42 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %42, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.43, %if.then.30, %if.then.10, %if.then
  %43 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %43) #1
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = bitcast [9 x float]* %matrix to i8*
  call void @llvm.lifetime.end(i64 36, i8* %45) #1
  %46 = bitcast [3 x float]* %black to i8*
  call void @llvm.lifetime.end(i64 12, i8* %46) #1
  %47 = bitcast [3 x float]* %white to i8*
  call void @llvm.lifetime.end(i64 12, i8* %47) #1
  %48 = bitcast [3 x float]* %gamma to i8*
  call void @llvm.lifetime.end(i64 12, i8* %48) #1
  %49 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #1
  %50 = bitcast %struct.ref_s* %rgbdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %50) #1
  %51 = load i32, i32* %retval
  ret i32 %51
}

; Function Attrs: nounwind uwtable
define internal i32 @validatecalrgbspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s** %r) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %r.addr = alloca %struct.ref_s**, align 8
  %code = alloca i32, align 4
  %space = alloca %struct.ref_s*, align 8
  %calrgbdict = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s** %r, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast %struct.ref_s* %calrgbdict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  %4 = load %struct.ref_s*, %struct.ref_s** %3, align 8, !tbaa !1
  store %struct.ref_s* %4, %struct.ref_s** %space, align 8, !tbaa !1
  %5 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %6 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %8 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp3 = icmp ult i32 %8, 2
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %if.end
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %10 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %11 = bitcast %struct.gs_ref_memory_s* %10 to %struct.gs_memory_s*
  %12 = load %struct.ref_s*, %struct.ref_s** %space, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %11, %struct.ref_s* %12, i64 1, %struct.ref_s* %calrgbdict) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %13 = load i32, i32* %code, align 4, !tbaa !26
  %cmp7 = icmp slt i32 %13, 0
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %14 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.end.6
  %tas11 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %calrgbdict, i32 0, i32 0
  %type_attrs12 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas11, i32 0, i32 0
  %15 = bitcast i16* %type_attrs12 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv13 = zext i8 %16 to i32
  %cmp14 = icmp eq i32 %conv13, 2
  br i1 %cmp14, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.10
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.10
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call18 = call i32 @checkWhitePoint(%struct.gs_context_state_s* %17, %struct.ref_s* %calrgbdict) #7
  store i32 %call18, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp19 = icmp ne i32 %18, 0
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.17
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end.17
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call23 = call i32 @checkBlackPoint(%struct.gs_context_state_s* %20, %struct.ref_s* %calrgbdict) #7
  store i32 %call23, i32* %code, align 4, !tbaa !26
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp24 = icmp slt i32 %21, 0
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.22
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.22
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call28 = call i32 @checkGamma(%struct.gs_context_state_s* %23, %struct.ref_s* %calrgbdict, i32 3) #7
  store i32 %call28, i32* %code, align 4, !tbaa !26
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp29 = icmp slt i32 %24, 0
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.27
  %25 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end.27
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call33 = call i32 @checkCalMatrix(%struct.gs_context_state_s* %26, %struct.ref_s* %calrgbdict) #7
  store i32 %call33, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp34 = icmp slt i32 %27, 0
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.32
  %28 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.37:                                        ; preds = %if.end.32
  %29 = load %struct.ref_s**, %struct.ref_s*** %r.addr, align 8, !tbaa !1
  store %struct.ref_s* null, %struct.ref_s** %29, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.37, %if.then.36, %if.then.31, %if.then.26, %if.then.21, %if.then.16, %if.then.9, %if.then.5, %if.then
  %30 = bitcast %struct.ref_s* %calrgbdict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %30) #1
  %31 = bitcast %struct.ref_s** %space to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  %32 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #1
  %33 = load i32, i32* %retval
  ret i32 %33
}

; Function Attrs: nounwind uwtable
define i32 @get_space_object(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %arr, %struct.PS_colour_space_s** %obj) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %arr.addr = alloca %struct.ref_s*, align 8
  %obj.addr = alloca %struct.PS_colour_space_s**, align 8
  %spacename = alloca %struct.ref_s, align 8
  %nref = alloca %struct.ref_s, align 8
  %i = alloca i32, align 4
  %nprocs = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %arr, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  store %struct.PS_colour_space_s** %obj, %struct.PS_colour_space_s*** %obj.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %spacename to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s* %nref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %nprocs to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 16, i32* %nprocs, align 4, !tbaa !26
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.ref_s*, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %6 to i32
  %and = and i32 %conv, 15360
  %cmp = icmp eq i32 %and, 1024
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %8 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %9 = bitcast %struct.gs_ref_memory_s* %8 to %struct.gs_memory_s*
  %10 = load %struct.ref_s*, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  %call = call i32 @array_get(%struct.gs_memory_s* %9, %struct.ref_s* %10, i64 0, %struct.ref_s* %spacename) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  br label %if.end

if.else:                                          ; preds = %entry
  %11 = load %struct.ref_s*, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  %12 = bitcast %struct.ref_s* %spacename to i8*
  %13 = bitcast %struct.ref_s* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %spacename, i32 0, i32 0
  %type_attrs3 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 0
  %14 = bitcast i16* %type_attrs3 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 1
  %15 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv4 = zext i8 %15 to i32
  %cmp5 = icmp eq i32 %conv4, 13
  br i1 %cmp5, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.end
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.8
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %17 = load i32, i32* %nprocs, align 4, !tbaa !26
  %cmp9 = icmp slt i32 %16, %17
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory11 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 1
  %current12 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory11, i32 0, i32 0
  %19 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current12, align 8, !tbaa !55
  %20 = bitcast %struct.gs_ref_memory_s* %19 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %20, i32 0, i32 2
  %21 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %21, i32 0, i32 16
  %22 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %23 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %23 to i64
  %arrayidx13 = getelementptr inbounds [16 x %struct.PS_colour_space_s], [16 x %struct.PS_colour_space_s]* @colorProcs, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %arrayidx13, i32 0, i32 0
  %24 = load i8*, i8** %name, align 8, !tbaa !112
  %25 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom14 = sext i32 %25 to i64
  %arrayidx15 = getelementptr inbounds [16 x %struct.PS_colour_space_s], [16 x %struct.PS_colour_space_s]* @colorProcs, i32 0, i64 %idxprom14
  %name16 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %arrayidx15, i32 0, i32 0
  %26 = load i8*, i8** %name16, align 8, !tbaa !112
  %call17 = call i64 @strlen(i8* %26) #9
  %conv18 = trunc i64 %call17 to i32
  %call19 = call i32 @names_ref(%struct.name_table_s* %22, i8* %24, i32 %conv18, %struct.ref_s* %nref, i32 0) #7
  store i32 %call19, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp20 = icmp slt i32 %27, 0
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %for.body
  %28 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %for.body
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %spacename, i32 0, i32 1
  %pname = bitcast %union.v* %value to %struct.name_s**
  %29 = load %struct.name_s*, %struct.name_s** %pname, align 8, !tbaa !1
  %value24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %nref, i32 0, i32 1
  %pname25 = bitcast %union.v* %value24 to %struct.name_s**
  %30 = load %struct.name_s*, %struct.name_s** %pname25, align 8, !tbaa !1
  %cmp26 = icmp eq %struct.name_s* %29, %30
  br i1 %cmp26, label %if.then.28, label %if.end.31

if.then.28:                                       ; preds = %if.end.23
  %31 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom29 = sext i32 %31 to i64
  %arrayidx30 = getelementptr inbounds [16 x %struct.PS_colour_space_s], [16 x %struct.PS_colour_space_s]* @colorProcs, i32 0, i64 %idxprom29
  %32 = load %struct.PS_colour_space_s**, %struct.PS_colour_space_s*** %obj.addr, align 8, !tbaa !1
  store %struct.PS_colour_space_s* %arrayidx30, %struct.PS_colour_space_s** %32, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %if.end.23
  br label %for.inc

for.inc:                                          ; preds = %if.end.31
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.28, %if.then.22, %if.then.7
  %34 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %34) #1
  %35 = bitcast i32* %nprocs to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %36 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %36) #1
  %37 = bitcast %struct.ref_s* %nref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %37) #1
  %38 = bitcast %struct.ref_s* %spacename to i8*
  call void @llvm.lifetime.end(i64 16, i8* %38) #1
  %39 = load i32, i32* %retval
  ret i32 %39
}

declare i32 @array_get(%struct.gs_memory_s*, %struct.ref_s*, i64, %struct.ref_s*) #2

declare i32 @names_ref(%struct.name_table_s*, i8*, i32, %struct.ref_s*, i32) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @zcurrentcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %pcc = alloca %struct.gs_client_color_s*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %push_pattern = alloca i32, align 4
  %pinst = alloca %struct.gs_pattern_instance_s*, align 8
  %cleanup.dest.slot = alloca i32
  %rval = alloca float, align 4
  %ival = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 0
  %5 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %5) #7
  store %struct.gs_color_space_s* %call, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %6 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 0
  %8 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs1, align 8, !tbaa !43
  %call2 = call %struct.gs_client_color_s* @gs_currentcolor(%struct.gs_state_s* %8) #7
  store %struct.gs_client_color_s* %call2, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %9 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %11, i32 0, i32 0
  %12 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %num_components = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %12, i32 0, i32 4
  %13 = load i32 (%struct.gs_color_space_s*)*, i32 (%struct.gs_color_space_s*)** %num_components, align 8, !tbaa !98
  %14 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call3 = call i32 %13(%struct.gs_color_space_s* %14) #7
  store i32 %call3, i32* %n, align 4, !tbaa !26
  %15 = bitcast i32* %push_pattern to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  %16 = load i32, i32* %n, align 4, !tbaa !26
  %cmp = icmp slt i32 %16, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %push_pattern, align 4, !tbaa !26
  %17 = load i32, i32* %push_pattern, align 4, !tbaa !26
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then, label %if.end.9

if.then:                                          ; preds = %entry
  %18 = bitcast %struct.gs_pattern_instance_s** %pinst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #1
  %19 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %19, i32 0, i32 0
  %20 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  store %struct.gs_pattern_instance_s* %20, %struct.gs_pattern_instance_s** %pinst, align 8, !tbaa !1
  %21 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pinst, align 8, !tbaa !1
  %cmp4 = icmp eq %struct.gs_pattern_instance_s* %21, null
  br i1 %cmp4, label %if.then.8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %22 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pinst, align 8, !tbaa !1
  %call6 = call i32 @pattern_instance_uses_base_space(%struct.gs_pattern_instance_s* %22) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.else, label %if.then.8

if.then.8:                                        ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* %n, align 4, !tbaa !26
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %23 = load i32, i32* %n, align 4, !tbaa !26
  %sub = sub nsw i32 0, %23
  store i32 %sub, i32* %n, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.8
  %24 = bitcast %struct.gs_pattern_instance_s** %pinst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  br label %if.end.9

if.end.9:                                         ; preds = %if.end, %entry
  br label %do.body

do.body:                                          ; preds = %if.end.9
  %25 = load i32, i32* %n, align 4, !tbaa !26
  %26 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i64 %idx.ext
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack10 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 26
  %stack11 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack10, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack11, i32 0, i32 2
  %28 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp12 = icmp ugt %struct.ref_s* %add.ptr, %28
  br i1 %cmp12, label %if.then.14, label %if.else.17

if.then.14:                                       ; preds = %do.body
  %29 = load i32, i32* %n, align 4, !tbaa !26
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack15 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 26
  %stack16 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack15, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack16, i32 0, i32 7
  store i32 %29, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.17:                                       ; preds = %do.body
  %31 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack18 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 26
  %stack19 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack18, i32 0, i32 0
  %p20 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack19, i32 0, i32 0
  store %struct.ref_s* %31, %struct.ref_s** %p20, align 8, !tbaa !10
  br label %if.end.21

if.end.21:                                        ; preds = %if.else.17
  br label %do.cond

do.cond:                                          ; preds = %if.end.21
  br label %do.end

do.end:                                           ; preds = %do.cond
  %33 = load i32, i32* %n, align 4, !tbaa !26
  %sub22 = sub nsw i32 %33, 1
  %34 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext23 = sext i32 %sub22 to i64
  %idx.neg = sub i64 0, %idx.ext23
  %add.ptr24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 %idx.neg
  store %struct.ref_s* %add.ptr24, %struct.ref_s** %op, align 8, !tbaa !1
  %35 = load i32, i32* %push_pattern, align 4, !tbaa !26
  %tobool25 = icmp ne i32 %35, 0
  br i1 %tobool25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %do.end
  %36 = load i32, i32* %n, align 4, !tbaa !26
  %dec = add nsw i32 %36, -1
  store i32 %dec, i32* %n, align 4, !tbaa !26
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.26, %do.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.27
  %37 = load i32, i32* %i, align 4, !tbaa !26
  %38 = load i32, i32* %n, align 4, !tbaa !26
  %cmp28 = icmp slt i32 %37, %38
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = bitcast float* %rval to i8*
  call void @llvm.lifetime.start(i64 4, i8* %39) #1
  %40 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %40 to i64
  %41 = load %struct.gs_client_color_s*, %struct.gs_client_color_s** %pcc, align 8, !tbaa !1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %41, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  %42 = load float, float* %arrayidx, align 4, !tbaa !20
  store float %42, float* %rval, align 4, !tbaa !20
  %43 = bitcast i32* %ival to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #1
  %44 = load float, float* %rval, align 4, !tbaa !20
  %conv30 = fptosi float %44 to i32
  store i32 %conv30, i32* %ival, align 4, !tbaa !26
  %45 = load float, float* %rval, align 4, !tbaa !20
  %46 = load i32, i32* %ival, align 4, !tbaa !26
  %conv31 = sitofp i32 %46 to float
  %cmp32 = fcmp oeq float %45, %conv31
  br i1 %cmp32, label %land.lhs.true, label %if.else.39

land.lhs.true:                                    ; preds = %for.body
  %47 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type34 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %47, i32 0, i32 0
  %48 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type34, align 8, !tbaa !62
  %index = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %48, i32 0, i32 0
  %49 = load i32, i32* %index, align 4, !tbaa !113
  %cmp35 = icmp eq i32 %49, 10
  br i1 %cmp35, label %if.then.37, label %if.else.39

if.then.37:                                       ; preds = %land.lhs.true
  %50 = load i32, i32* %ival, align 4, !tbaa !26
  %conv38 = sext i32 %50 to i64
  %51 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  store i64 %conv38, i64* %intval, align 8, !tbaa !23
  %52 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 2816, i16* %type_attrs, align 2, !tbaa !22
  br label %if.end.43

if.else.39:                                       ; preds = %land.lhs.true, %for.body
  %53 = load float, float* %rval, align 4, !tbaa !20
  %54 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1
  %realval = bitcast %union.v* %value40 to float*
  store float %53, float* %realval, align 4, !tbaa !20
  %55 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas41 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i32 0, i32 0
  %type_attrs42 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas41, i32 0, i32 0
  store i16 4096, i16* %type_attrs42, align 2, !tbaa !22
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.39, %if.then.37
  %56 = bitcast i32* %ival to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast float* %rval to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  br label %for.inc

for.inc:                                          ; preds = %if.end.43
  %58 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %58, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  %59 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %59, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %push_pattern, align 4, !tbaa !26
  %tobool44 = icmp ne i32 %60, 0
  br i1 %tobool44, label %if.then.45, label %if.end.49

if.then.45:                                       ; preds = %for.end
  %61 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs46 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 0
  %63 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs46, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %63, i32 0, i32 2
  %64 = load i8*, i8** %client_data, align 8, !tbaa !53
  %65 = bitcast i8* %64 to %struct.int_gstate_s*
  %pattern47 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %65, i32 0, i32 6
  %arrayidx48 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %pattern47, i32 0, i64 0
  %66 = bitcast %struct.ref_s* %61 to i8*
  %67 = bitcast %struct.ref_s* %arrayidx48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.45, %for.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.49, %if.then.14
  %68 = bitcast i32* %push_pattern to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #1
  %69 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #1
  %70 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #1
  %71 = bitcast %struct.gs_client_color_s** %pcc to i8*
  call void @llvm.lifetime.end(i64 8, i8* %71) #1
  %72 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %72) #1
  %73 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %73) #1
  %74 = load i32, i32* %retval
  ret i32 %74
}

; Function Attrs: nounwind uwtable
define internal i32 @zcurrentcolorspace(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %namestr = alloca %struct.ref_s, align 8
  %stref = alloca %struct.ref_s, align 8
  %body = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast %struct.ref_s* %namestr to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = bitcast i8** %body to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 0
  %8 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %8, i32 0, i32 2
  %9 = load i8*, i8** %client_data, align 8, !tbaa !53
  %10 = bitcast i8* %9 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %10, i32 0, i32 5
  %arrayidx = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx, i32 0, i32 0
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %array, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %11 = bitcast i16* %type_attrs to i8*
  %arrayidx1 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx1, align 1, !tbaa !54
  %conv = zext i8 %12 to i32
  %cmp = icmp eq i32 %conv, 13
  br i1 %cmp, label %if.then, label %if.else.159

if.then:                                          ; preds = %entry
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %14 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %15 = bitcast %struct.gs_ref_memory_s* %14 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %15, i32 0, i32 2
  %16 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %16, i32 0, i32 16
  %17 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 0
  %19 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs3, align 8, !tbaa !43
  %client_data4 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %19, i32 0, i32 2
  %20 = load i8*, i8** %client_data4, align 8, !tbaa !53
  %21 = bitcast i8* %20 to %struct.int_gstate_s*
  %colorspace5 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %21, i32 0, i32 5
  %arrayidx6 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace5, i32 0, i64 0
  %array7 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx6, i32 0, i32 0
  call void @names_string_ref(%struct.name_table_s* %17, %struct.ref_s* %array7, %struct.ref_s* %namestr) #7
  %tas8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namestr, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas8, i32 0, i32 2
  %22 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp9 = icmp eq i32 %22, 10
  br i1 %cmp9, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namestr, i32 0, i32 1
  %bytes = bitcast %union.v* %value to i8**
  %23 = load i8*, i8** %bytes, align 8, !tbaa !1
  %call = call i32 @memcmp(i8* %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i64 10) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then.11

if.then.11:                                       ; preds = %land.lhs.true
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory12 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 1
  %current13 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory12, i32 0, i32 0
  %25 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current13, align 8, !tbaa !55
  %26 = bitcast %struct.gs_ref_memory_s* %25 to %struct.gs_memory_s*
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %26, i32 0, i32 1
  %alloc_string = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 16
  %27 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string, align 8, !tbaa !56
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory14 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 1
  %current15 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory14, i32 0, i32 0
  %29 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current15, align 8, !tbaa !55
  %30 = bitcast %struct.gs_ref_memory_s* %29 to %struct.gs_memory_s*
  %call16 = call i8* %27(%struct.gs_memory_s* %30, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call16, i8** %body, align 8, !tbaa !1
  %31 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp17 = icmp eq i8* %31, null
  br i1 %cmp17, label %if.then.19, label %if.end

if.then.19:                                       ; preds = %if.then.11
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.11
  %32 = load i8*, i8** %body, align 8, !tbaa !1
  %call20 = call i8* @memcpy(i8* %32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.93, i32 0, i32 0), i64 32) #8
  %33 = load i8*, i8** %body, align 8, !tbaa !1
  %value21 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes22 = bitcast %union.v* %value21 to i8**
  store i8* %33, i8** %bytes22, align 8, !tbaa !1
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory23 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 1
  %current_space = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory23, i32 0, i32 2
  %35 = load i32, i32* %current_space, align 4, !tbaa !59
  %or = or i32 112, %35
  %add = add i32 4608, %or
  %conv24 = trunc i32 %add to i16
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 0
  store i16 %conv24, i16* %type_attrs26, align 2, !tbaa !22
  %tas27 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize28 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas27, i32 0, i32 2
  store i32 32, i32* %rsize28, align 4, !tbaa !5
  br label %if.end.148

if.else:                                          ; preds = %land.lhs.true, %if.then
  %tas29 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namestr, i32 0, i32 0
  %rsize30 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas29, i32 0, i32 2
  %36 = load i32, i32* %rsize30, align 4, !tbaa !5
  %cmp31 = icmp eq i32 %36, 9
  br i1 %cmp31, label %land.lhs.true.33, label %if.else.62

land.lhs.true.33:                                 ; preds = %if.else
  %value34 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namestr, i32 0, i32 1
  %bytes35 = bitcast %union.v* %value34 to i8**
  %37 = load i8*, i8** %bytes35, align 8, !tbaa !1
  %call36 = call i32 @memcmp(i8* %37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i64 9) #9
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.else.62, label %if.then.38

if.then.38:                                       ; preds = %land.lhs.true.33
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory39 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 1
  %current40 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory39, i32 0, i32 0
  %39 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current40, align 8, !tbaa !55
  %40 = bitcast %struct.gs_ref_memory_s* %39 to %struct.gs_memory_s*
  %procs41 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %40, i32 0, i32 1
  %alloc_string42 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs41, i32 0, i32 16
  %41 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string42, align 8, !tbaa !56
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory43 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 1
  %current44 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory43, i32 0, i32 0
  %43 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current44, align 8, !tbaa !55
  %44 = bitcast %struct.gs_ref_memory_s* %43 to %struct.gs_memory_s*
  %call45 = call i8* %41(%struct.gs_memory_s* %44, i32 31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call45, i8** %body, align 8, !tbaa !1
  %45 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp46 = icmp eq i8* %45, null
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.then.38
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.49:                                        ; preds = %if.then.38
  %46 = load i8*, i8** %body, align 8, !tbaa !1
  %call50 = call i8* @memcpy(i8* %46, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.94, i32 0, i32 0), i64 31) #8
  %47 = load i8*, i8** %body, align 8, !tbaa !1
  %value51 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes52 = bitcast %union.v* %value51 to i8**
  store i8* %47, i8** %bytes52, align 8, !tbaa !1
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory53 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 1
  %current_space54 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory53, i32 0, i32 2
  %49 = load i32, i32* %current_space54, align 4, !tbaa !59
  %or55 = or i32 112, %49
  %add56 = add i32 4608, %or55
  %conv57 = trunc i32 %add56 to i16
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  store i16 %conv57, i16* %type_attrs59, align 2, !tbaa !22
  %tas60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize61 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas60, i32 0, i32 2
  store i32 31, i32* %rsize61, align 4, !tbaa !5
  br label %if.end.147

if.else.62:                                       ; preds = %land.lhs.true.33, %if.else
  %tas63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namestr, i32 0, i32 0
  %rsize64 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas63, i32 0, i32 2
  %50 = load i32, i32* %rsize64, align 4, !tbaa !5
  %cmp65 = icmp eq i32 %50, 10
  br i1 %cmp65, label %land.lhs.true.67, label %if.else.96

land.lhs.true.67:                                 ; preds = %if.else.62
  %value68 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %namestr, i32 0, i32 1
  %bytes69 = bitcast %union.v* %value68 to i8**
  %51 = load i8*, i8** %bytes69, align 8, !tbaa !1
  %call70 = call i32 @memcmp(i8* %51, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i64 10) #9
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.else.96, label %if.then.72

if.then.72:                                       ; preds = %land.lhs.true.67
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 1
  %current74 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory73, i32 0, i32 0
  %53 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current74, align 8, !tbaa !55
  %54 = bitcast %struct.gs_ref_memory_s* %53 to %struct.gs_memory_s*
  %procs75 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %54, i32 0, i32 1
  %alloc_string76 = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs75, i32 0, i32 16
  %55 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_string76, align 8, !tbaa !56
  %56 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory77 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %56, i32 0, i32 1
  %current78 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory77, i32 0, i32 0
  %57 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current78, align 8, !tbaa !55
  %58 = bitcast %struct.gs_ref_memory_s* %57 to %struct.gs_memory_s*
  %call79 = call i8* %55(%struct.gs_memory_s* %58, i32 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0)) #7
  store i8* %call79, i8** %body, align 8, !tbaa !1
  %59 = load i8*, i8** %body, align 8, !tbaa !1
  %cmp80 = icmp eq i8* %59, null
  br i1 %cmp80, label %if.then.82, label %if.end.83

if.then.82:                                       ; preds = %if.then.72
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.83:                                        ; preds = %if.then.72
  %60 = load i8*, i8** %body, align 8, !tbaa !1
  %call84 = call i8* @memcpy(i8* %60, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.95, i32 0, i32 0), i64 32) #8
  %61 = load i8*, i8** %body, align 8, !tbaa !1
  %value85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 1
  %bytes86 = bitcast %union.v* %value85 to i8**
  store i8* %61, i8** %bytes86, align 8, !tbaa !1
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory87 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 1
  %current_space88 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory87, i32 0, i32 2
  %63 = load i32, i32* %current_space88, align 4, !tbaa !59
  %or89 = or i32 112, %63
  %add90 = add i32 4608, %or89
  %conv91 = trunc i32 %add90 to i16
  %tas92 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs93 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas92, i32 0, i32 0
  store i16 %conv91, i16* %type_attrs93, align 2, !tbaa !22
  %tas94 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %rsize95 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas94, i32 0, i32 2
  store i32 32, i32* %rsize95, align 4, !tbaa !5
  br label %if.end.146

if.else.96:                                       ; preds = %land.lhs.true.67, %if.else.62
  br label %do.body

do.body:                                          ; preds = %if.else.96
  %64 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %64, i64 1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %65 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack97 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %65, i32 0, i32 26
  %stack98 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack97, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack98, i32 0, i32 2
  %66 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp99 = icmp ugt %struct.ref_s* %add.ptr, %66
  br i1 %cmp99, label %if.then.101, label %if.else.104

if.then.101:                                      ; preds = %do.body
  %67 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack102 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %67, i32 0, i32 26
  %stack103 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack102, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack103, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.104:                                      ; preds = %do.body
  %68 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %69 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack105 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %69, i32 0, i32 26
  %stack106 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack105, i32 0, i32 0
  %p107 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack106, i32 0, i32 0
  store %struct.ref_s* %68, %struct.ref_s** %p107, align 8, !tbaa !10
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.104
  br label %do.cond

do.cond:                                          ; preds = %if.end.108
  br label %do.end

do.end:                                           ; preds = %do.cond
  %70 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory109 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %70, i32 0, i32 1
  %current110 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory109, i32 0, i32 0
  %71 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current110, align 8, !tbaa !55
  %72 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call111 = call i32 @gs_alloc_ref_array(%struct.gs_ref_memory_s* %71, %struct.ref_s* %72, i32 112, i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.96, i32 0, i32 0)) #7
  store i32 %call111, i32* %code, align 4, !tbaa !26
  %73 = load i32, i32* %code, align 4, !tbaa !26
  %cmp112 = icmp slt i32 %73, 0
  br i1 %cmp112, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %do.end
  %74 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %74, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.115:                                       ; preds = %do.end
  %75 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value116 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %75, i32 0, i32 1
  %refs = bitcast %union.v* %value116 to %struct.ref_s**
  %76 = load %struct.ref_s*, %struct.ref_s** %refs, align 8, !tbaa !1
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory117 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %77, i32 0, i32 1
  %new_mask = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory117, i32 0, i32 5
  %78 = load i32, i32* %new_mask, align 4, !tbaa !114
  call void @refset_null_new(%struct.ref_s* %76, i32 1, i32 %78) #7
  %79 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value118 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %79, i32 0, i32 1
  %refs119 = bitcast %union.v* %value118 to %struct.ref_s**
  %80 = load %struct.ref_s*, %struct.ref_s** %refs119, align 8, !tbaa !1
  %tas120 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %80, i32 0, i32 0
  %type_attrs121 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas120, i32 0, i32 0
  %81 = load i16, i16* %type_attrs121, align 2, !tbaa !22
  %conv122 = zext i16 %81 to i32
  %82 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory123 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %82, i32 0, i32 1
  %test_mask = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory123, i32 0, i32 4
  %83 = load i32, i32* %test_mask, align 4, !tbaa !115
  %and = and i32 %conv122, %83
  %cmp124 = icmp eq i32 %and, 0
  br i1 %cmp124, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.115
  %84 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory126 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %84, i32 0, i32 1
  %85 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %86 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value127 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %86, i32 0, i32 1
  %refs128 = bitcast %union.v* %value127 to %struct.ref_s**
  %87 = load %struct.ref_s*, %struct.ref_s** %refs128, align 8, !tbaa !1
  %88 = bitcast %struct.ref_s* %87 to i16*
  %call129 = call i32 @alloc_save_change(%struct.gs_dual_memory_s* %memory126, %struct.ref_s* %85, i16* %88, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.96, i32 0, i32 0)) #7
  br label %cond.end

cond.false:                                       ; preds = %if.end.115
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call129, %cond.true ], [ 0, %cond.false ]
  %89 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value130 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %89, i32 0, i32 1
  %refs131 = bitcast %union.v* %value130 to %struct.ref_s**
  %90 = load %struct.ref_s*, %struct.ref_s** %refs131, align 8, !tbaa !1
  %91 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs132 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %91, i32 0, i32 0
  %92 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs132, align 8, !tbaa !43
  %client_data133 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %92, i32 0, i32 2
  %93 = load i8*, i8** %client_data133, align 8, !tbaa !53
  %94 = bitcast i8* %93 to %struct.int_gstate_s*
  %colorspace134 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %94, i32 0, i32 5
  %arrayidx135 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace134, i32 0, i64 0
  %array136 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx135, i32 0, i32 0
  %95 = bitcast %struct.ref_s* %90 to i8*
  %96 = bitcast %struct.ref_s* %array136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 16, i32 8, i1 false), !tbaa.struct !24
  %97 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory137 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %97, i32 0, i32 1
  %new_mask138 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory137, i32 0, i32 5
  %98 = load i32, i32* %new_mask138, align 4, !tbaa !114
  %99 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value139 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %99, i32 0, i32 1
  %refs140 = bitcast %union.v* %value139 to %struct.ref_s**
  %100 = load %struct.ref_s*, %struct.ref_s** %refs140, align 8, !tbaa !1
  %tas141 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %100, i32 0, i32 0
  %type_attrs142 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas141, i32 0, i32 0
  %101 = load i16, i16* %type_attrs142, align 2, !tbaa !22
  %conv143 = zext i16 %101 to i32
  %or144 = or i32 %conv143, %98
  %conv145 = trunc i32 %or144 to i16
  store i16 %conv145, i16* %type_attrs142, align 2, !tbaa !22
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.146:                                       ; preds = %if.end.83
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %if.end.49
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.end
  %tas149 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %stref, i32 0, i32 0
  %type_attrs150 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas149, i32 0, i32 0
  %102 = load i16, i16* %type_attrs150, align 2, !tbaa !22
  %conv151 = zext i16 %102 to i32
  %or152 = or i32 %conv151, 128
  %conv153 = trunc i32 %or152 to i16
  store i16 %conv153, i16* %type_attrs150, align 2, !tbaa !22
  %103 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %103, i32 0, i32 25
  %stack154 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p155 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack154, i32 0, i32 0
  %104 = load %struct.ref_s*, %struct.ref_s** %p155, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %104, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p155, align 8, !tbaa !27
  %105 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack156 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %105, i32 0, i32 25
  %stack157 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack156, i32 0, i32 0
  %p158 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack157, i32 0, i32 0
  %106 = load %struct.ref_s*, %struct.ref_s** %p158, align 8, !tbaa !27
  %107 = bitcast %struct.ref_s* %106 to i8*
  %108 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.159:                                      ; preds = %entry
  br label %do.body.160

do.body.160:                                      ; preds = %if.else.159
  %109 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr161 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %109, i64 1
  store %struct.ref_s* %add.ptr161, %struct.ref_s** %op, align 8, !tbaa !1
  %110 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack162 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %110, i32 0, i32 26
  %stack163 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack162, i32 0, i32 0
  %top164 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack163, i32 0, i32 2
  %111 = load %struct.ref_s*, %struct.ref_s** %top164, align 8, !tbaa !69
  %cmp165 = icmp ugt %struct.ref_s* %add.ptr161, %111
  br i1 %cmp165, label %if.then.167, label %if.else.171

if.then.167:                                      ; preds = %do.body.160
  %112 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack168 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %112, i32 0, i32 26
  %stack169 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack168, i32 0, i32 0
  %requested170 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack169, i32 0, i32 7
  store i32 1, i32* %requested170, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.171:                                      ; preds = %do.body.160
  %113 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %114 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack172 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %114, i32 0, i32 26
  %stack173 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack172, i32 0, i32 0
  %p174 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack173, i32 0, i32 0
  store %struct.ref_s* %113, %struct.ref_s** %p174, align 8, !tbaa !10
  br label %if.end.175

if.end.175:                                       ; preds = %if.else.171
  br label %do.cond.176

do.cond.176:                                      ; preds = %if.end.175
  br label %do.end.177

do.end.177:                                       ; preds = %do.cond.176
  %115 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %116 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs178 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %116, i32 0, i32 0
  %117 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs178, align 8, !tbaa !43
  %client_data179 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %117, i32 0, i32 2
  %118 = load i8*, i8** %client_data179, align 8, !tbaa !53
  %119 = bitcast i8* %118 to %struct.int_gstate_s*
  %colorspace180 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %119, i32 0, i32 5
  %arrayidx181 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace180, i32 0, i64 0
  %array182 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx181, i32 0, i32 0
  %120 = bitcast %struct.ref_s* %115 to i8*
  %121 = bitcast %struct.ref_s* %array182 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %if.end.183

if.end.183:                                       ; preds = %do.end.177
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.183, %if.then.167, %if.end.148, %cond.end, %if.then.114, %if.then.101, %if.then.82, %if.then.48, %if.then.19
  %122 = bitcast i8** %body to i8*
  call void @llvm.lifetime.end(i64 8, i8* %122) #1
  %123 = bitcast %struct.ref_s* %stref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %123) #1
  %124 = bitcast %struct.ref_s* %namestr to i8*
  call void @llvm.lifetime.end(i64 16, i8* %124) #1
  %125 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %125) #1
  %126 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %126) #1
  %127 = load i32, i32* %retval
  ret i32 %127
}

; Function Attrs: nounwind uwtable
define internal i32 @zgetuseciecolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %entry
  %3 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i64 1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 2
  %5 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp = icmp ugt %struct.ref_s* %add.ptr, %5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 26
  %stack4 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack3, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack4, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.body
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 26
  %stack6 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack5, i32 0, i32 0
  %p7 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 0
  store %struct.ref_s* %7, %struct.ref_s** %p7, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.cond
  %9 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %10, i32 0, i32 0
  %11 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %11, i32 0, i32 2
  %12 = load i8*, i8** %client_data, align 8, !tbaa !53
  %13 = bitcast i8* %12 to %struct.int_gstate_s*
  %use_cie_color = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %13, i32 0, i32 8
  %14 = bitcast %struct.ref_s* %9 to i8*
  %15 = bitcast %struct.ref_s* %use_cie_color to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @zsetcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %cc = alloca %struct.gs_client_color_s, align 8
  %n_comps = alloca i32, align 4
  %n_numeric_comps = alloca i32, align 4
  %num_offset = alloca i32, align 4
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %space = alloca %struct.PS_colour_space_s*, align 8
  %pImpl = alloca %struct.ref_s*, align 8
  %pPatInst = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 25
  %stack1 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p2 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack1, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p2, align 8, !tbaa !27
  store %struct.ref_s* %5, %struct.ref_s** %ep, align 8, !tbaa !1
  %6 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 0
  %8 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s* %8) #7
  store %struct.gs_color_space_s* %call, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %9 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %9) #1
  %10 = bitcast i32* %n_comps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = bitcast i32* %n_numeric_comps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  %12 = bitcast i32* %num_offset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  store i32 0, i32* %num_offset, align 4, !tbaa !26
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %15 = bitcast %struct.PS_colour_space_s** %space to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  %pattern = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* null, %struct.gs_pattern_instance_s** %pattern, align 8, !tbaa !67
  %16 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %16, i32 0, i32 0
  %17 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !62
  %num_components = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %17, i32 0, i32 4
  %18 = load i32 (%struct.gs_color_space_s*)*, i32 (%struct.gs_color_space_s*)** %num_components, align 8, !tbaa !98
  %19 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call3 = call i32 %18(%struct.gs_color_space_s* %19) #7
  store i32 %call3, i32* %n_comps, align 4, !tbaa !26
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %if.then, label %if.else.23

if.then:                                          ; preds = %entry
  %20 = load i32, i32* %n_comps, align 4, !tbaa !26
  %sub = sub nsw i32 0, %20
  store i32 %sub, i32* %n_comps, align 4, !tbaa !26
  %21 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %21, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %22 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 1
  %23 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %23 to i32
  %cmp4 = icmp eq i32 %conv, 2
  br i1 %cmp4, label %if.then.6, label %if.else.21

if.then.6:                                        ; preds = %if.then
  %24 = bitcast %struct.ref_s** %pImpl to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #1
  %25 = bitcast %struct.ref_s* %pPatInst to i8*
  call void @llvm.lifetime.start(i64 16, i8* %25) #1
  %26 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call7 = call i32 @dict_find_string(%struct.ref_s* %26, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.82, i32 0, i32 0), %struct.ref_s** %pImpl) #7
  store i32 %call7, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp8 = icmp ne i32 %27, 0
  br i1 %cmp8, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.then.6
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %29 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %30 = bitcast %struct.gs_ref_memory_s* %29 to %struct.gs_memory_s*
  %31 = load %struct.ref_s*, %struct.ref_s** %pImpl, align 8, !tbaa !1
  %call11 = call i32 @array_get(%struct.gs_memory_s* %30, %struct.ref_s* %31, i64 0, %struct.ref_s* %pPatInst) #7
  store i32 %call11, i32* %code, align 4, !tbaa !26
  %32 = load i32, i32* %code, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %32, 0
  br i1 %cmp12, label %if.then.14, label %if.end

if.then.14:                                       ; preds = %if.then.10
  %33 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %33, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.10
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %pPatInst, i32 0, i32 1
  %pstruct = bitcast %union.v* %value to %struct.obj_header_s**
  %34 = load %struct.obj_header_s*, %struct.obj_header_s** %pstruct, align 8, !tbaa !1
  %35 = bitcast %struct.obj_header_s* %34 to %struct.gs_pattern_instance_s*
  %pattern15 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  store %struct.gs_pattern_instance_s* %35, %struct.gs_pattern_instance_s** %pattern15, align 8, !tbaa !67
  %pattern16 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 0
  %36 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pattern16, align 8, !tbaa !67
  %call17 = call i32 @pattern_instance_uses_base_space(%struct.gs_pattern_instance_s* %36) #7
  %tobool = icmp ne i32 %call17, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %37 = load i32, i32* %n_comps, align 4, !tbaa !26
  %sub18 = sub nsw i32 %37, 1
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub18, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %n_numeric_comps, align 4, !tbaa !26
  br label %if.end.19

if.else:                                          ; preds = %if.then.6
  store i32 0, i32* %n_numeric_comps, align 4, !tbaa !26
  br label %if.end.19

if.end.19:                                        ; preds = %if.else, %cond.end
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.then.14
  %38 = bitcast %struct.ref_s* %pPatInst to i8*
  call void @llvm.lifetime.end(i64 16, i8* %38) #1
  %39 = bitcast %struct.ref_s** %pImpl to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.154 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.22

if.else.21:                                       ; preds = %if.then
  store i32 0, i32* %n_numeric_comps, align 4, !tbaa !26
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21, %cleanup.cont
  store i32 1, i32* %num_offset, align 4, !tbaa !26
  br label %if.end.24

if.else.23:                                       ; preds = %entry
  %40 = load i32, i32* %n_comps, align 4, !tbaa !26
  store i32 %40, i32* %n_numeric_comps, align 4, !tbaa !26
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.23, %if.end.22
  %41 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %42 = load i32, i32* %num_offset, align 4, !tbaa !26
  %idx.ext = sext i32 %42 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i64 %idx.neg
  %43 = load i32, i32* %n_numeric_comps, align 4, !tbaa !26
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i32 0
  %call25 = call i32 @float_params(%struct.ref_s* %add.ptr, i32 %43, float* %arraydecay) #7
  store i32 %call25, i32* %code, align 4, !tbaa !26
  %44 = load i32, i32* %code, align 4, !tbaa !26
  %cmp26 = icmp slt i32 %44, 0
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.24
  %45 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %45, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154

if.end.29:                                        ; preds = %if.end.24
  %paint30 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values31 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint30, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [64 x float], [64 x float]* %values31, i32 0, i32 0
  %46 = load i32, i32* %n_numeric_comps, align 4, !tbaa !26
  %idx.ext33 = sext i32 %46 to i64
  %add.ptr34 = getelementptr inbounds float, float* %arraydecay32, i64 %idx.ext33
  %47 = bitcast float* %add.ptr34 to i8*
  %48 = load i32, i32* %n_numeric_comps, align 4, !tbaa !26
  %conv35 = sext i32 %48 to i64
  %mul = mul i64 4, %conv35
  %sub36 = sub i64 256, %mul
  %call37 = call i8* @memset(i8* %47, i32 0, i64 %sub36) #8
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %50 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %50, i32 0, i32 0
  %51 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs38, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %51, i32 0, i32 2
  %52 = load i8*, i8** %client_data, align 8, !tbaa !53
  %53 = bitcast i8* %52 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %53, i32 0, i32 5
  %arrayidx39 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx39, i32 0, i32 0
  %call40 = call i32 @get_space_object(%struct.gs_context_state_s* %49, %struct.ref_s* %array, %struct.PS_colour_space_s** %space) #7
  store i32 %call40, i32* %code, align 4, !tbaa !26
  %54 = load i32, i32* %code, align 4, !tbaa !26
  %cmp41 = icmp slt i32 %54, 0
  br i1 %cmp41, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.29
  %55 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %55, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154

if.end.44:                                        ; preds = %if.end.29
  %56 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %space, align 8, !tbaa !1
  %validatecomponents = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %56, i32 0, i32 9
  %57 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)** %validatecomponents, align 8, !tbaa !116
  %tobool45 = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)* %57, null
  br i1 %tobool45, label %if.then.46, label %if.end.61

if.then.46:                                       ; preds = %if.end.44
  %58 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %space, align 8, !tbaa !1
  %validatecomponents47 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %58, i32 0, i32 9
  %59 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, float*, i32)** %validatecomponents47, align 8, !tbaa !116
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %61 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs48 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %61, i32 0, i32 0
  %62 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs48, align 8, !tbaa !43
  %client_data49 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %62, i32 0, i32 2
  %63 = load i8*, i8** %client_data49, align 8, !tbaa !53
  %64 = bitcast i8* %63 to %struct.int_gstate_s*
  %colorspace50 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %64, i32 0, i32 5
  %arrayidx51 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace50, i32 0, i64 0
  %array52 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx51, i32 0, i32 0
  %paint53 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values54 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint53, i32 0, i32 0
  %arraydecay55 = getelementptr inbounds [64 x float], [64 x float]* %values54, i32 0, i32 0
  %65 = load i32, i32* %n_numeric_comps, align 4, !tbaa !26
  %call56 = call i32 %59(%struct.gs_context_state_s* %60, %struct.ref_s* %array52, float* %arraydecay55, i32 %65) #7
  store i32 %call56, i32* %code, align 4, !tbaa !26
  %66 = load i32, i32* %code, align 4, !tbaa !26
  %cmp57 = icmp slt i32 %66, 0
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.then.46
  %67 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %67, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154

if.end.60:                                        ; preds = %if.then.46
  br label %if.end.61

if.end.61:                                        ; preds = %if.end.60, %if.end.44
  %68 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs62 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %68, i32 0, i32 0
  %69 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs62, align 8, !tbaa !43
  %call63 = call i32 @gs_setcolor(%struct.gs_state_s* %69, %struct.gs_client_color_s* %cc) #7
  store i32 %call63, i32* %code, align 4, !tbaa !26
  %cmp64 = icmp sge i32 %call63, 0
  br i1 %cmp64, label %if.then.66, label %if.end.75

if.then.66:                                       ; preds = %if.end.61
  %70 = load i32, i32* %n_comps, align 4, !tbaa !26
  %71 = load i32, i32* %n_numeric_comps, align 4, !tbaa !26
  %cmp67 = icmp sgt i32 %70, %71
  br i1 %cmp67, label %if.then.69, label %if.end.74

if.then.69:                                       ; preds = %if.then.66
  %72 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs70 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %72, i32 0, i32 0
  %73 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs70, align 8, !tbaa !43
  %client_data71 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %73, i32 0, i32 2
  %74 = load i8*, i8** %client_data71, align 8, !tbaa !53
  %75 = bitcast i8* %74 to %struct.int_gstate_s*
  %pattern72 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %75, i32 0, i32 6
  %arrayidx73 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %pattern72, i32 0, i64 0
  %76 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %77 = bitcast %struct.ref_s* %arrayidx73 to i8*
  %78 = bitcast %struct.ref_s* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 16, i32 8, i1 false), !tbaa.struct !24
  %79 = load i32, i32* %n_numeric_comps, align 4, !tbaa !26
  %add = add nsw i32 %79, 1
  store i32 %add, i32* %n_comps, align 4, !tbaa !26
  br label %if.end.74

if.end.74:                                        ; preds = %if.then.69, %if.then.66
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %if.end.61
  %80 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %81 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs76 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %81, i32 0, i32 0
  %82 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs76, align 8, !tbaa !43
  %client_data77 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %82, i32 0, i32 2
  %83 = load i8*, i8** %client_data77, align 8, !tbaa !53
  %84 = bitcast i8* %83 to %struct.int_gstate_s*
  %colorspace78 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %84, i32 0, i32 5
  %arrayidx79 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace78, i32 0, i64 0
  %array80 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx79, i32 0, i32 0
  %call81 = call i32 @validate_spaces(%struct.gs_context_state_s* %80, %struct.ref_s* %array80, i32* %depth) #7
  store i32 %call81, i32* %code, align 4, !tbaa !26
  %85 = load i32, i32* %code, align 4, !tbaa !26
  %cmp82 = icmp slt i32 %85, 0
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %if.end.75
  %86 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %86, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154

if.end.85:                                        ; preds = %if.end.75
  %87 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack86 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %87, i32 0, i32 25
  %stack87 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack86, i32 0, i32 0
  %p88 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack87, i32 0, i32 0
  %88 = load %struct.ref_s*, %struct.ref_s** %p88, align 8, !tbaa !27
  %89 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack89 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %89, i32 0, i32 25
  %stack90 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack89, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack90, i32 0, i32 2
  %90 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %90, i64 -5
  %cmp92 = icmp ugt %struct.ref_s* %88, %add.ptr91
  br i1 %cmp92, label %if.then.94, label %if.end.105

if.then.94:                                       ; preds = %if.end.85
  %91 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #1
  %92 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack95 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %92, i32 0, i32 25
  %stack96 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack95, i32 0, i32 0
  %call97 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack96, i32 5) #7
  store i32 %call97, i32* %es_code_, align 4, !tbaa !26
  %93 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp98 = icmp slt i32 %93, 0
  br i1 %cmp98, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %if.then.94
  %94 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %94, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.102

if.end.101:                                       ; preds = %if.then.94
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.102

cleanup.102:                                      ; preds = %if.end.101, %if.then.100
  %95 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %95) #1
  %cleanup.dest.103 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.103, label %cleanup.154 [
    i32 0, label %cleanup.cont.104
  ]

cleanup.cont.104:                                 ; preds = %cleanup.102
  br label %if.end.105

if.end.105:                                       ; preds = %cleanup.cont.104, %if.end.85
  %96 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack106 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %96, i32 0, i32 25
  %stack107 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack106, i32 0, i32 0
  %p108 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack107, i32 0, i32 0
  %97 = load %struct.ref_s*, %struct.ref_s** %p108, align 8, !tbaa !27
  %add.ptr109 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %97, i64 1
  store %struct.ref_s* %add.ptr109, %struct.ref_s** %p108, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr109, %struct.ref_s** %ep, align 8, !tbaa !1
  %98 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value110 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %98, i32 0, i32 1
  %intval = bitcast %union.v* %value110 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %99 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas111 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %99, i32 0, i32 0
  %type_attrs112 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas111, i32 0, i32 0
  store i16 2816, i16* %type_attrs112, align 2, !tbaa !22
  %100 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack113 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %100, i32 0, i32 25
  %stack114 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack113, i32 0, i32 0
  %p115 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack114, i32 0, i32 0
  %101 = load %struct.ref_s*, %struct.ref_s** %p115, align 8, !tbaa !27
  %add.ptr116 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %101, i64 1
  store %struct.ref_s* %add.ptr116, %struct.ref_s** %p115, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr116, %struct.ref_s** %ep, align 8, !tbaa !1
  %102 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value117 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %102, i32 0, i32 1
  %intval118 = bitcast %union.v* %value117 to i64*
  store i64 0, i64* %intval118, align 8, !tbaa !23
  %103 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas119 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %103, i32 0, i32 0
  %type_attrs120 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas119, i32 0, i32 0
  store i16 2816, i16* %type_attrs120, align 2, !tbaa !22
  %104 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack121 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %104, i32 0, i32 25
  %stack122 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack121, i32 0, i32 0
  %p123 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack122, i32 0, i32 0
  %105 = load %struct.ref_s*, %struct.ref_s** %p123, align 8, !tbaa !27
  %add.ptr124 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %105, i64 1
  store %struct.ref_s* %add.ptr124, %struct.ref_s** %p123, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr124, %struct.ref_s** %ep, align 8, !tbaa !1
  %106 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value125 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %106, i32 0, i32 1
  %intval126 = bitcast %union.v* %value125 to i64*
  store i64 0, i64* %intval126, align 8, !tbaa !23
  %107 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas127 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %107, i32 0, i32 0
  %type_attrs128 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas127, i32 0, i32 0
  store i16 2816, i16* %type_attrs128, align 2, !tbaa !22
  %108 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack129 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %108, i32 0, i32 25
  %stack130 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack129, i32 0, i32 0
  %p131 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack130, i32 0, i32 0
  %109 = load %struct.ref_s*, %struct.ref_s** %p131, align 8, !tbaa !27
  %add.ptr132 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %109, i64 1
  store %struct.ref_s* %add.ptr132, %struct.ref_s** %p131, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr132, %struct.ref_s** %ep, align 8, !tbaa !1
  %110 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %111 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs133 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %111, i32 0, i32 0
  %112 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs133, align 8, !tbaa !43
  %client_data134 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %112, i32 0, i32 2
  %113 = load i8*, i8** %client_data134, align 8, !tbaa !53
  %114 = bitcast i8* %113 to %struct.int_gstate_s*
  %colorspace135 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %114, i32 0, i32 5
  %arrayidx136 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace135, i32 0, i64 0
  %array137 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx136, i32 0, i32 0
  %115 = bitcast %struct.ref_s* %110 to i8*
  %116 = bitcast %struct.ref_s* %array137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 16, i32 8, i1 false), !tbaa.struct !24
  %117 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack138 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %117, i32 0, i32 25
  %stack139 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack138, i32 0, i32 0
  %p140 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack139, i32 0, i32 0
  %118 = load %struct.ref_s*, %struct.ref_s** %p140, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %118, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p140, align 8, !tbaa !27
  %119 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack141 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %119, i32 0, i32 25
  %stack142 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack141, i32 0, i32 0
  %p143 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack142, i32 0, i32 0
  %120 = load %struct.ref_s*, %struct.ref_s** %p143, align 8, !tbaa !27
  %value144 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %120, i32 0, i32 1
  %opproc = bitcast %union.v* %value144 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setcolor_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %121 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack145 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %121, i32 0, i32 25
  %stack146 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack145, i32 0, i32 0
  %p147 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack146, i32 0, i32 0
  %122 = load %struct.ref_s*, %struct.ref_s** %p147, align 8, !tbaa !27
  %tas148 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %122, i32 0, i32 0
  %type_attrs149 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas148, i32 0, i32 0
  store i16 3968, i16* %type_attrs149, align 2, !tbaa !22
  %123 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack150 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %123, i32 0, i32 25
  %stack151 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack150, i32 0, i32 0
  %p152 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack151, i32 0, i32 0
  %124 = load %struct.ref_s*, %struct.ref_s** %p152, align 8, !tbaa !27
  %tas153 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %124, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas153, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.154

cleanup.154:                                      ; preds = %if.end.105, %cleanup.102, %if.then.84, %if.then.59, %if.then.43, %if.then.28, %cleanup
  %125 = bitcast %struct.PS_colour_space_s** %space to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %126) #1
  %127 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %127) #1
  %128 = bitcast i32* %num_offset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %128) #1
  %129 = bitcast i32* %n_numeric_comps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %129) #1
  %130 = bitcast i32* %n_comps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %130) #1
  %131 = bitcast %struct.gs_client_color_s* %cc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %131) #1
  %132 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %132) #1
  %133 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %133) #1
  %134 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %134) #1
  %135 = load i32, i32* %retval
  ret i32 %135
}

; Function Attrs: nounwind uwtable
define internal i32 @zsetcolorspace(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %is_CIE = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %cspace = alloca %struct.PS_colour_space_s*, align 8
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 25
  %stack1 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p2 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack1, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p2, align 8, !tbaa !27
  store %struct.ref_s* %5, %struct.ref_s** %ep, align 8, !tbaa !1
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %is_CIE to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %10, i32 0, i32 26
  %stack4 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack3, i32 0, i32 0
  %bot = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack4, i32 0, i32 1
  %11 = load %struct.ref_s*, %struct.ref_s** %bot, align 8, !tbaa !68
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i64 0
  %cmp = icmp ult %struct.ref_s* %9, %add.ptr
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113

if.end:                                           ; preds = %entry
  %12 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %13 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %14 to i32
  %cmp5 = icmp eq i32 %conv, 13
  br i1 %cmp5, label %if.end.15, label %if.then.7

if.then.7:                                        ; preds = %if.end
  %15 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i32 0, i32 0
  %type_attrs9 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas8, i32 0, i32 0
  %16 = load i16, i16* %type_attrs9, align 2, !tbaa !22
  %conv10 = zext i16 %16 to i32
  %and = and i32 %conv10, 15360
  %cmp11 = icmp eq i32 %and, 1024
  br i1 %cmp11, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.then.7
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113

if.end.14:                                        ; preds = %if.then.7
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %18 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call = call i32 @validate_spaces(%struct.gs_context_state_s* %17, %struct.ref_s* %18, i32* %depth) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %19 = load i32, i32* %code, align 4, !tbaa !26
  %cmp16 = icmp slt i32 %19, 0
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.15
  %20 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113

if.end.19:                                        ; preds = %if.end.15
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 0
  %22 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %22, i32 0, i32 2
  %23 = load i8*, i8** %client_data, align 8, !tbaa !53
  %24 = bitcast i8* %23 to %struct.int_gstate_s*
  %use_cie_color = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %24, i32 0, i32 8
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %use_cie_color, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %25 = load i16, i16* %boolval, align 2, !tbaa !25
  %conv20 = zext i16 %25 to i32
  store i32 %conv20, i32* %is_CIE, align 4, !tbaa !26
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %27 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 0
  %29 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs21, align 8, !tbaa !43
  %client_data22 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %29, i32 0, i32 2
  %30 = load i8*, i8** %client_data22, align 8, !tbaa !53
  %31 = bitcast i8* %30 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %31, i32 0, i32 5
  %arrayidx23 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx23, i32 0, i32 0
  %32 = load i32, i32* %is_CIE, align 4, !tbaa !26
  %call24 = call i32 @is_same_colorspace(%struct.gs_context_state_s* %26, %struct.ref_s* %27, %struct.ref_s* %array, i32 %32) #7
  %tobool = icmp ne i32 %call24, 0
  br i1 %tobool, label %if.then.25, label %if.end.50

if.then.25:                                       ; preds = %if.end.19
  %33 = bitcast %struct.PS_colour_space_s** %cspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %33) #1
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 0
  %36 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs26, align 8, !tbaa !43
  %client_data27 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %36, i32 0, i32 2
  %37 = load i8*, i8** %client_data27, align 8, !tbaa !53
  %38 = bitcast i8* %37 to %struct.int_gstate_s*
  %colorspace28 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %38, i32 0, i32 5
  %arrayidx29 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace28, i32 0, i64 0
  %array30 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx29, i32 0, i32 0
  %call31 = call i32 @get_space_object(%struct.gs_context_state_s* %34, %struct.ref_s* %array30, %struct.PS_colour_space_s** %cspace) #7
  store i32 %call31, i32* %code, align 4, !tbaa !26
  %39 = load i32, i32* %code, align 4, !tbaa !26
  %cmp32 = icmp slt i32 %39, 0
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.then.25
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %if.then.25
  %40 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %cspace, align 8, !tbaa !1
  %initialcolorproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %40, i32 0, i32 11
  %41 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*)** %initialcolorproc, align 8, !tbaa !117
  %tobool36 = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s*)* %41, null
  br i1 %tobool36, label %if.then.37, label %if.end.45

if.then.37:                                       ; preds = %if.end.35
  %42 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %cspace, align 8, !tbaa !1
  %initialcolorproc38 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %42, i32 0, i32 11
  %43 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*)** %initialcolorproc38, align 8, !tbaa !117
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs39 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 0
  %46 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs39, align 8, !tbaa !43
  %client_data40 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %46, i32 0, i32 2
  %47 = load i8*, i8** %client_data40, align 8, !tbaa !53
  %48 = bitcast i8* %47 to %struct.int_gstate_s*
  %colorspace41 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %48, i32 0, i32 5
  %arrayidx42 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace41, i32 0, i64 0
  %array43 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx42, i32 0, i32 0
  %call44 = call i32 %43(%struct.gs_context_state_s* %44, %struct.ref_s* %array43) #7
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.37, %if.end.35
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack46 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 26
  %stack47 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack46, i32 0, i32 0
  %p48 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack47, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p48, align 8, !tbaa !10
  %add.ptr49 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 -1
  store %struct.ref_s* %add.ptr49, %struct.ref_s** %p48, align 8, !tbaa !10
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.45, %if.then.34
  %51 = bitcast %struct.PS_colour_space_s** %cspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  br label %cleanup.113

if.end.50:                                        ; preds = %if.end.19
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack51 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 25
  %stack52 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack51, i32 0, i32 0
  %p53 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack52, i32 0, i32 0
  %53 = load %struct.ref_s*, %struct.ref_s** %p53, align 8, !tbaa !27
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack54 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 25
  %stack55 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack54, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack55, i32 0, i32 2
  %55 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i64 -5
  %cmp57 = icmp ugt %struct.ref_s* %53, %add.ptr56
  br i1 %cmp57, label %if.then.59, label %if.end.68

if.then.59:                                       ; preds = %if.end.50
  %56 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %56) #1
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack61 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack60, i32 0, i32 0
  %call62 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack61, i32 5) #7
  store i32 %call62, i32* %es_code_, align 4, !tbaa !26
  %58 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp63 = icmp slt i32 %58, 0
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.then.59
  %59 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %59, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.67

if.end.66:                                        ; preds = %if.then.59
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.67

cleanup.67:                                       ; preds = %if.end.66, %if.then.65
  %60 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.113 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup.67
  br label %if.end.68

if.end.68:                                        ; preds = %cleanup.cont, %if.end.50
  %61 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack69 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %61, i32 0, i32 25
  %stack70 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack69, i32 0, i32 0
  %p71 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack70, i32 0, i32 0
  %62 = load %struct.ref_s*, %struct.ref_s** %p71, align 8, !tbaa !27
  %add.ptr72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %62, i64 1
  store %struct.ref_s* %add.ptr72, %struct.ref_s** %p71, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr72, %struct.ref_s** %ep, align 8, !tbaa !1
  %63 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %63, i32 0, i32 1
  %intval = bitcast %union.v* %value73 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %64 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas74 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %64, i32 0, i32 0
  %type_attrs75 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas74, i32 0, i32 0
  store i16 2816, i16* %type_attrs75, align 2, !tbaa !22
  %65 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack76 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %65, i32 0, i32 25
  %stack77 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack76, i32 0, i32 0
  %p78 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack77, i32 0, i32 0
  %66 = load %struct.ref_s*, %struct.ref_s** %p78, align 8, !tbaa !27
  %add.ptr79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %66, i64 1
  store %struct.ref_s* %add.ptr79, %struct.ref_s** %p78, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr79, %struct.ref_s** %ep, align 8, !tbaa !1
  %67 = load i32, i32* %depth, align 4, !tbaa !26
  %conv80 = sext i32 %67 to i64
  %68 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %68, i32 0, i32 1
  %intval82 = bitcast %union.v* %value81 to i64*
  store i64 %conv80, i64* %intval82, align 8, !tbaa !23
  %69 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas83 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %69, i32 0, i32 0
  %type_attrs84 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas83, i32 0, i32 0
  store i16 2816, i16* %type_attrs84, align 2, !tbaa !22
  %70 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack85 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %70, i32 0, i32 25
  %stack86 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack85, i32 0, i32 0
  %p87 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack86, i32 0, i32 0
  %71 = load %struct.ref_s*, %struct.ref_s** %p87, align 8, !tbaa !27
  %add.ptr88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %71, i64 1
  store %struct.ref_s* %add.ptr88, %struct.ref_s** %p87, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr88, %struct.ref_s** %ep, align 8, !tbaa !1
  %72 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value89 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %72, i32 0, i32 1
  %intval90 = bitcast %union.v* %value89 to i64*
  store i64 0, i64* %intval90, align 8, !tbaa !23
  %73 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %73, i32 0, i32 0
  %type_attrs92 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas91, i32 0, i32 0
  store i16 2816, i16* %type_attrs92, align 2, !tbaa !22
  %74 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack93 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %74, i32 0, i32 25
  %stack94 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack93, i32 0, i32 0
  %p95 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack94, i32 0, i32 0
  %75 = load %struct.ref_s*, %struct.ref_s** %p95, align 8, !tbaa !27
  %add.ptr96 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %75, i64 1
  store %struct.ref_s* %add.ptr96, %struct.ref_s** %p95, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr96, %struct.ref_s** %ep, align 8, !tbaa !1
  %76 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %77 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %78 = bitcast %struct.ref_s* %76 to i8*
  %79 = bitcast %struct.ref_s* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 16, i32 8, i1 false), !tbaa.struct !24
  %80 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack97 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %80, i32 0, i32 25
  %stack98 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack97, i32 0, i32 0
  %p99 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack98, i32 0, i32 0
  %81 = load %struct.ref_s*, %struct.ref_s** %p99, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %81, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p99, align 8, !tbaa !27
  %82 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack100 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %82, i32 0, i32 25
  %stack101 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack100, i32 0, i32 0
  %p102 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack101, i32 0, i32 0
  %83 = load %struct.ref_s*, %struct.ref_s** %p102, align 8, !tbaa !27
  %value103 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %83, i32 0, i32 1
  %opproc = bitcast %union.v* %value103 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setcolorspace_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %84 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack104 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %84, i32 0, i32 25
  %stack105 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack104, i32 0, i32 0
  %p106 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack105, i32 0, i32 0
  %85 = load %struct.ref_s*, %struct.ref_s** %p106, align 8, !tbaa !27
  %tas107 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %85, i32 0, i32 0
  %type_attrs108 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas107, i32 0, i32 0
  store i16 3968, i16* %type_attrs108, align 2, !tbaa !22
  %86 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack109 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %86, i32 0, i32 25
  %stack110 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack109, i32 0, i32 0
  %p111 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack110, i32 0, i32 0
  %87 = load %struct.ref_s*, %struct.ref_s** %p111, align 8, !tbaa !27
  %tas112 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %87, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas112, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.113

cleanup.113:                                      ; preds = %if.end.68, %cleanup.67, %cleanup, %if.then.18, %if.then.13, %if.then
  %88 = bitcast i32* %is_CIE to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  %89 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #1
  %90 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #1
  %91 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91) #1
  %92 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = load i32, i32* %retval
  ret i32 %93
}

; Function Attrs: nounwind uwtable
define internal i32 @zcurrenttransfer(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %entry
  %3 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i64 1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 2
  %5 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp = icmp ugt %struct.ref_s* %add.ptr, %5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 26
  %stack4 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack3, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack4, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.body
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 26
  %stack6 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack5, i32 0, i32 0
  %p7 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 0
  store %struct.ref_s* %7, %struct.ref_s** %p7, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.cond
  %9 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %10, i32 0, i32 0
  %11 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %11, i32 0, i32 2
  %12 = load i8*, i8** %client_data, align 8, !tbaa !53
  %13 = bitcast i8* %12 to %struct.int_gstate_s*
  %transfer_procs = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %13, i32 0, i32 2
  %gray = getelementptr inbounds %struct.anon.3, %struct.anon.3* %transfer_procs, i32 0, i32 3
  %14 = bitcast %struct.ref_s* %9 to i8*
  %15 = bitcast %struct.ref_s* %gray to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then
  %16 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #1
  %17 = load i32, i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind uwtable
define internal i32 @zprocesscolors(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  br label %do.body

do.body:                                          ; preds = %entry
  %3 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %3, i64 1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 2
  %5 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp = icmp ugt %struct.ref_s* %add.ptr, %5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 26
  %stack4 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack3, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack4, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.body
  %7 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 26
  %stack6 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack5, i32 0, i32 0
  %p7 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 0
  store %struct.ref_s* %7, %struct.ref_s** %p7, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.cond
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 0
  %10 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gx_device_s* @gs_currentdevice(%struct.gs_state_s* %10) #7
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %call, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %11 = load i32, i32* %num_components, align 4, !tbaa !118
  %conv = sext i32 %11 to i64
  %12 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  store i64 %conv, i64* %intval, align 8, !tbaa !23
  %13 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 2816, i16* %type_attrs, align 2, !tbaa !22
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then
  %14 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %14) #1
  %15 = load i32, i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal i32 @zsettransfer(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %4, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %5 = load i16, i16* %type_attrs, align 2, !tbaa !22
  %conv = zext i16 %5 to i32
  %and = and i32 %conv, 15552
  %cmp = icmp eq i32 %and, 1216
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %do.body
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call = call i32 @check_proc_failed(%struct.ref_s* %6) #7
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.71

if.end:                                           ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.cond
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack2 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 26
  %stack3 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack2, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack3, i32 0, i32 2
  %8 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack4 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 26
  %stack5 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack4, i32 0, i32 0
  %p6 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack5, i32 0, i32 0
  %10 = load %struct.ref_s*, %struct.ref_s** %p6, align 8, !tbaa !10
  %sub.ptr.lhs.cast = ptrtoint %struct.ref_s* %8 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.ref_s* %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %cmp7 = icmp slt i64 %sub.ptr.div, 3
  br i1 %cmp7, label %if.then.9, label %if.end.12

if.then.9:                                        ; preds = %do.end
  %11 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack10 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %11, i32 0, i32 26
  %stack11 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack10, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack11, i32 0, i32 7
  store i32 3, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.71

if.end.12:                                        ; preds = %do.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 25
  %stack13 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p14 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack13, i32 0, i32 0
  %13 = load %struct.ref_s*, %struct.ref_s** %p14, align 8, !tbaa !27
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack15 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 25
  %stack16 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack15, i32 0, i32 0
  %top17 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack16, i32 0, i32 2
  %15 = load %struct.ref_s*, %struct.ref_s** %top17, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i64 -4
  %cmp18 = icmp ugt %struct.ref_s* %13, %add.ptr
  br i1 %cmp18, label %if.then.20, label %if.end.28

if.then.20:                                       ; preds = %if.end.12
  %16 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 25
  %stack22 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack21, i32 0, i32 0
  %call23 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack22, i32 4) #7
  store i32 %call23, i32* %es_code_, align 4, !tbaa !26
  %18 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp24 = icmp slt i32 %18, 0
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.then.20
  %19 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.then.20
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.27, %if.then.26
  %20 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.71 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.28

if.end.28:                                        ; preds = %cleanup.cont, %if.end.12
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 0
  %22 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %22, i32 0, i32 2
  %23 = load i8*, i8** %client_data, align 8, !tbaa !53
  %24 = bitcast i8* %23 to %struct.int_gstate_s*
  %transfer_procs = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %24, i32 0, i32 2
  %red = getelementptr inbounds %struct.anon.3, %struct.anon.3* %transfer_procs, i32 0, i32 0
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 0
  %26 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs29, align 8, !tbaa !43
  %client_data30 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %26, i32 0, i32 2
  %27 = load i8*, i8** %client_data30, align 8, !tbaa !53
  %28 = bitcast i8* %27 to %struct.int_gstate_s*
  %transfer_procs31 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %28, i32 0, i32 2
  %green = getelementptr inbounds %struct.anon.3, %struct.anon.3* %transfer_procs31, i32 0, i32 1
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs32 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 0
  %30 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs32, align 8, !tbaa !43
  %client_data33 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %30, i32 0, i32 2
  %31 = load i8*, i8** %client_data33, align 8, !tbaa !53
  %32 = bitcast i8* %31 to %struct.int_gstate_s*
  %transfer_procs34 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %32, i32 0, i32 2
  %blue = getelementptr inbounds %struct.anon.3, %struct.anon.3* %transfer_procs34, i32 0, i32 2
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs35 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 0
  %34 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs35, align 8, !tbaa !43
  %client_data36 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %34, i32 0, i32 2
  %35 = load i8*, i8** %client_data36, align 8, !tbaa !53
  %36 = bitcast i8* %35 to %struct.int_gstate_s*
  %transfer_procs37 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %36, i32 0, i32 2
  %gray = getelementptr inbounds %struct.anon.3, %struct.anon.3* %transfer_procs37, i32 0, i32 3
  %37 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %38 = bitcast %struct.ref_s* %gray to i8*
  %39 = bitcast %struct.ref_s* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false), !tbaa.struct !24
  %40 = bitcast %struct.ref_s* %blue to i8*
  %41 = bitcast %struct.ref_s* %gray to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 16, i32 8, i1 false), !tbaa.struct !24
  %42 = bitcast %struct.ref_s* %green to i8*
  %43 = bitcast %struct.ref_s* %blue to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 16, i32 8, i1 false), !tbaa.struct !24
  %44 = bitcast %struct.ref_s* %red to i8*
  %45 = bitcast %struct.ref_s* %green to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 16, i32 8, i1 false), !tbaa.struct !24
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 0
  %47 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs38, align 8, !tbaa !43
  %call39 = call i32 @gs_settransfer_remap(%struct.gs_state_s* %47, float (double, %struct.gx_transfer_map_s*)* @gs_mapped_transfer, i32 0) #7
  store i32 %call39, i32* %code, align 4, !tbaa !26
  %cmp40 = icmp slt i32 %call39, 0
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.end.28
  %48 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %48, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.71

if.end.43:                                        ; preds = %if.end.28
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack44 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 25
  %stack45 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack44, i32 0, i32 0
  %p46 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack45, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p46, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p46, align 8, !tbaa !27
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack47 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 25
  %stack48 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack47, i32 0, i32 0
  %p49 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack48, i32 0, i32 0
  %52 = load %struct.ref_s*, %struct.ref_s** %p49, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @zcolor_reset_transfer, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %53 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack50 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %53, i32 0, i32 25
  %stack51 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack50, i32 0, i32 0
  %p52 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack51, i32 0, i32 0
  %54 = load %struct.ref_s*, %struct.ref_s** %p52, align 8, !tbaa !27
  %tas53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 0
  %type_attrs54 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas53, i32 0, i32 0
  store i16 3968, i16* %type_attrs54, align 2, !tbaa !22
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 25
  %stack56 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack55, i32 0, i32 0
  %p57 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack56, i32 0, i32 0
  %56 = load %struct.ref_s*, %struct.ref_s** %p57, align 8, !tbaa !27
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack59 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 26
  %stack60 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack59, i32 0, i32 0
  %p61 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack60, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p61, align 8, !tbaa !10
  %add.ptr62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i64 -1
  store %struct.ref_s* %add.ptr62, %struct.ref_s** %p61, align 8, !tbaa !10
  %59 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs63 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %60, i32 0, i32 0
  %61 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs63, align 8, !tbaa !43
  %client_data64 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %61, i32 0, i32 2
  %62 = load i8*, i8** %client_data64, align 8, !tbaa !53
  %63 = bitcast i8* %62 to %struct.int_gstate_s*
  %transfer_procs65 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %63, i32 0, i32 2
  %gray66 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %transfer_procs65, i32 0, i32 3
  %64 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %64, i32 0, i32 0
  %65 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs67, align 8, !tbaa !43
  %set_transfer = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %65, i32 0, i32 46
  %gray68 = getelementptr inbounds %struct.gx_transfer_s, %struct.gx_transfer_s* %set_transfer, i32 0, i32 7
  %66 = load %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s** %gray68, align 8, !tbaa !119
  %67 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs69 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %67, i32 0, i32 0
  %68 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs69, align 8, !tbaa !43
  %call70 = call i32 @zcolor_remap_one(%struct.gs_context_state_s* %59, %struct.ref_s* %gray66, %struct.gx_transfer_map_s* %66, %struct.gs_state_s* %68, i32 (%struct.gs_context_state_s*)* @zcolor_remap_one_finish) #7
  store i32 %call70, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.71

cleanup.71:                                       ; preds = %if.end.43, %if.then.42, %cleanup, %if.then.9, %if.then
  %69 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #1
  %70 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %70) #1
  %71 = load i32, i32* %retval
  ret i32 %71
}

; Function Attrs: nounwind uwtable
define internal i32 @zcolor_test(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %cv = alloca [64 x i16], align 16
  %dev = alloca %struct.gx_device_s*, align 8
  %ncomp = alloca i32, align 4
  %color = alloca i64, align 8
  %op = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast [64 x i16]* %cv to i8*
  call void @llvm.lifetime.start(i64 128, i8* %0) #1
  %1 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 0
  %3 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gx_device_s* @gs_currentdevice(%struct.gs_state_s* %3) #7
  store %struct.gx_device_s* %call, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %4 = bitcast i32* %ncomp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %5, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %6 = load i32, i32* %num_components, align 4, !tbaa !118
  store i32 %6, i32* %ncomp, align 4, !tbaa !26
  %7 = bitcast i64* %color to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %10 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  %11 = load i32, i32* %ncomp, align 4, !tbaa !26
  %sub = sub nsw i32 %11, 1
  %idx.ext = sext i32 %sub to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i64 %idx.neg
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %12 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %call3 = call i32 @ref_stack_count(%struct.ref_stack_s* %stack2) #7
  %14 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp = icmp ult i32 %call3, %14
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %16 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp4 = icmp slt i32 %15, %16
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %18 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext5 = sext i32 %18 to i64
  %add.ptr6 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i64 %idx.ext5
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr6, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %19 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %19, i64 1
  %20 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %20 to i32
  %cmp7 = icmp eq i32 %conv, 16
  br i1 %cmp7, label %if.then.9, label %if.else

if.then.9:                                        ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %21 to i64
  %22 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i64 %idxprom
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx10, i32 0, i32 1
  %realval = bitcast %union.v* %value to float*
  %23 = load float, float* %realval, align 4, !tbaa !20
  %mul = fmul float %23, 6.553500e+04
  %conv11 = fptoui float %mul to i16
  %24 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom12 = sext i32 %24 to i64
  %arrayidx13 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom12
  store i16 %conv11, i16* %arrayidx13, align 2, !tbaa !25
  br label %if.end.32

if.else:                                          ; preds = %for.body
  %25 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %26 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext14 = sext i32 %26 to i64
  %add.ptr15 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i64 %idx.ext14
  %tas16 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr15, i32 0, i32 0
  %type_attrs17 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas16, i32 0, i32 0
  %27 = bitcast i16* %type_attrs17 to i8*
  %arrayidx18 = getelementptr inbounds i8, i8* %27, i64 1
  %28 = load i8, i8* %arrayidx18, align 1, !tbaa !54
  %conv19 = zext i8 %28 to i32
  %cmp20 = icmp eq i32 %conv19, 11
  br i1 %cmp20, label %if.then.22, label %if.else.30

if.then.22:                                       ; preds = %if.else
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom23 = sext i32 %29 to i64
  %30 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i64 %idxprom23
  %value25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx24, i32 0, i32 1
  %intval = bitcast %union.v* %value25 to i64*
  %31 = load i64, i64* %intval, align 8, !tbaa !23
  %mul26 = mul nsw i64 %31, 65535
  %conv27 = trunc i64 %mul26 to i16
  %32 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom28 = sext i32 %32 to i64
  %arrayidx29 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom28
  store i16 %conv27, i16* %arrayidx29, align 2, !tbaa !25
  br label %if.end.31

if.else.30:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %if.then.22
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.then.9
  br label %for.inc

for.inc:                                          ; preds = %if.end.32
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %34 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %34, i32 0, i32 42
  %encode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 51
  %35 = load i64 (%struct.gx_device_s*, i16*)*, i64 (%struct.gx_device_s*, i16*)** %encode_color, align 8, !tbaa !120
  %36 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i32 0
  %call33 = call i64 %35(%struct.gx_device_s* %36, i16* %arraydecay) #7
  store i64 %call33, i64* %color, align 8, !tbaa !23
  %37 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs34 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %37, i32 0, i32 42
  %decode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs34, i32 0, i32 52
  %38 = load i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color, align 8, !tbaa !121
  %39 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %40 = load i64, i64* %color, align 8, !tbaa !23
  %arraydecay35 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i32 0
  %call36 = call i32 %38(%struct.gx_device_s* %39, i64 %40, i16* %arraydecay35) #7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.37

for.cond.37:                                      ; preds = %for.inc.52, %for.end
  %41 = load i32, i32* %i, align 4, !tbaa !26
  %42 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp38 = icmp slt i32 %41, %42
  br i1 %cmp38, label %for.body.40, label %for.end.54

for.body.40:                                      ; preds = %for.cond.37
  %43 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom41 = sext i32 %43 to i64
  %arrayidx42 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom41
  %44 = load i16, i16* %arrayidx42, align 2, !tbaa !25
  %conv43 = uitofp i16 %44 to float
  %div = fdiv float %conv43, 6.553500e+04
  %45 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %46 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext44 = sext i32 %46 to i64
  %add.ptr45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %45, i64 %idx.ext44
  %value46 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr45, i32 0, i32 1
  %realval47 = bitcast %union.v* %value46 to float*
  store float %div, float* %realval47, align 4, !tbaa !20
  %47 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %48 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext48 = sext i32 %48 to i64
  %add.ptr49 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i64 %idx.ext48
  %tas50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr49, i32 0, i32 0
  %type_attrs51 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas50, i32 0, i32 0
  store i16 4096, i16* %type_attrs51, align 2, !tbaa !22
  br label %for.inc.52

for.inc.52:                                       ; preds = %for.body.40
  %49 = load i32, i32* %i, align 4, !tbaa !26
  %inc53 = add nsw i32 %49, 1
  store i32 %inc53, i32* %i, align 4, !tbaa !26
  br label %for.cond.37

for.end.54:                                       ; preds = %for.cond.37
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.54, %if.else.30, %if.then
  %50 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  %52 = bitcast i64* %color to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  %53 = bitcast i32* %ncomp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %53) #1
  %54 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %54) #1
  %55 = bitcast [64 x i16]* %cv to i8*
  call void @llvm.lifetime.end(i64 128, i8* %55) #1
  %56 = load i32, i32* %retval
  ret i32 %56
}

; Function Attrs: nounwind uwtable
define internal i32 @zcolor_test_all(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %cv = alloca [64 x i16], align 16
  %cvout = alloca [64 x i16], align 16
  %cvbad = alloca [64 x i16], align 16
  %counter = alloca [64 x i32], align 16
  %dev = alloca %struct.gx_device_s*, align 8
  %ncomp = alloca i32, align 4
  %steps = alloca i32, align 4
  %maxerror = alloca i32, align 4
  %err = alloca i32, align 4
  %acceptable_error = alloca i32, align 4
  %linsep = alloca i32, align 4
  %linsepfailed = alloca i32, align 4
  %lsmaxerror = alloca i32, align 4
  %color = alloca i64, align 8
  %lscolor = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %finished = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast [64 x i16]* %cv to i8*
  call void @llvm.lifetime.start(i64 128, i8* %3) #1
  %4 = bitcast [64 x i16]* %cvout to i8*
  call void @llvm.lifetime.start(i64 128, i8* %4) #1
  %5 = bitcast [64 x i16]* %cvbad to i8*
  call void @llvm.lifetime.start(i64 128, i8* %5) #1
  %6 = bitcast [64 x i32]* %counter to i8*
  call void @llvm.lifetime.start(i64 256, i8* %6) #1
  %7 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 0
  %9 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call = call %struct.gx_device_s* @gs_currentdevice(%struct.gs_state_s* %9) #7
  store %struct.gx_device_s* %call, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %10 = bitcast i32* %ncomp to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %11, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %12 = load i32, i32* %num_components, align 4, !tbaa !118
  store i32 %12, i32* %ncomp, align 4, !tbaa !26
  %13 = bitcast i32* %steps to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %maxerror to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  store i32 0, i32* %maxerror, align 4, !tbaa !26
  %15 = bitcast i32* %err to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  %16 = bitcast i32* %acceptable_error to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = bitcast i32* %linsep to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  %18 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info1 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %18, i32 0, i32 11
  %separable_and_linear = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info1, i32 0, i32 10
  %19 = load i32, i32* %separable_and_linear, align 4, !tbaa !122
  %cmp = icmp eq i32 %19, 1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %linsep, align 4, !tbaa !26
  %20 = bitcast i32* %linsepfailed to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #1
  store i32 0, i32* %linsepfailed, align 4, !tbaa !26
  %21 = bitcast i32* %lsmaxerror to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #1
  store i32 0, i32* %lsmaxerror, align 4, !tbaa !26
  %22 = bitcast i64* %color to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  %23 = bitcast i64* %lscolor to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #1
  %24 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #1
  %25 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  %26 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = bitcast i32* %finished to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  store i32 0, i32* %finished, align 4, !tbaa !26
  %28 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp2 = icmp eq i32 %28, 1
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %29 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info4 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %29, i32 0, i32 11
  %max_gray = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info4, i32 0, i32 5
  %30 = load i32, i32* %max_gray, align 4, !tbaa !123
  %div = udiv i32 65535, %30
  %add = add i32 %div, 1
  store i32 %add, i32* %acceptable_error, align 4, !tbaa !26
  br label %if.end

if.else:                                          ; preds = %entry
  %31 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info5 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %31, i32 0, i32 11
  %max_color = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info5, i32 0, i32 6
  %32 = load i32, i32* %max_color, align 4, !tbaa !124
  %div6 = udiv i32 65535, %32
  %add7 = add i32 %div6, 1
  store i32 %add7, i32* %acceptable_error, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 26
  %stack9 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack8, i32 0, i32 0
  %call10 = call i32 @ref_stack_count(%struct.ref_stack_s* %stack9) #7
  %cmp11 = icmp ult i32 %call10, 1
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack15 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 26
  %stack16 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack15, i32 0, i32 0
  %p17 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack16, i32 0, i32 0
  %35 = load %struct.ref_s*, %struct.ref_s** %p17, align 8, !tbaa !10
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i64 0
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %36 = bitcast i16* %type_attrs to i8*
  %arrayidx18 = getelementptr inbounds i8, i8* %36, i64 1
  %37 = load i8, i8* %arrayidx18, align 1, !tbaa !54
  %conv19 = zext i8 %37 to i32
  %cmp20 = icmp eq i32 %conv19, 11
  br i1 %cmp20, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %if.end.14
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.23:                                        ; preds = %if.end.14
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack24 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 26
  %stack25 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack24, i32 0, i32 0
  %p26 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack25, i32 0, i32 0
  %39 = load %struct.ref_s*, %struct.ref_s** %p26, align 8, !tbaa !10
  %arrayidx27 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i64 0
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx27, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %40 = load i64, i64* %intval, align 8, !tbaa !23
  %conv28 = trunc i64 %40 to i32
  store i32 %conv28, i32* %steps, align 4, !tbaa !26
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.23
  %41 = load i32, i32* %i, align 4, !tbaa !26
  %42 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp29 = icmp slt i32 %41, %42
  br i1 %cmp29, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %43 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %43 to i64
  %arrayidx31 = getelementptr inbounds [64 x i32], [64 x i32]* %counter, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx31, align 4, !tbaa !26
  %44 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom32 = sext i32 %44 to i64
  %arrayidx33 = getelementptr inbounds [64 x i16], [64 x i16]* %cvbad, i32 0, i64 %idxprom32
  store i16 0, i16* %arrayidx33, align 2, !tbaa !25
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %45, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %46 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %46, i32 0, i32 3
  %47 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !125
  %48 = load i32, i32* %ncomp, align 4, !tbaa !26
  %call34 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %47, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.97, i32 0, i32 0), i32 %48) #7
  %49 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory35 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %49, i32 0, i32 3
  %50 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory35, align 8, !tbaa !125
  %51 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info36 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %51, i32 0, i32 11
  %depth = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info36, i32 0, i32 3
  %52 = load i16, i16* %depth, align 2, !tbaa !126
  %conv37 = zext i16 %52 to i32
  %call38 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.98, i32 0, i32 0), i32 %conv37) #7
  %53 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory39 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %53, i32 0, i32 3
  %54 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory39, align 8, !tbaa !125
  %55 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info40 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %55, i32 0, i32 11
  %max_gray41 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info40, i32 0, i32 5
  %56 = load i32, i32* %max_gray41, align 4, !tbaa !123
  %57 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info42 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %57, i32 0, i32 11
  %dither_grays = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info42, i32 0, i32 7
  %58 = load i32, i32* %dither_grays, align 4, !tbaa !127
  %call43 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %54, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i32 0, i32 0), i32 %56, i32 %58) #7
  %59 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory44 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %59, i32 0, i32 3
  %60 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory44, align 8, !tbaa !125
  %61 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info45 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %61, i32 0, i32 11
  %max_color46 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info45, i32 0, i32 6
  %62 = load i32, i32* %max_color46, align 4, !tbaa !124
  %63 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info47 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %63, i32 0, i32 11
  %dither_colors = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info47, i32 0, i32 8
  %64 = load i32, i32* %dither_colors, align 4, !tbaa !128
  %call48 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %60, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.100, i32 0, i32 0), i32 %62, i32 %64) #7
  %65 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory49 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %65, i32 0, i32 3
  %66 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory49, align 8, !tbaa !125
  %67 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info50 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %67, i32 0, i32 11
  %polarity = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info50, i32 0, i32 2
  %68 = load i32, i32* %polarity, align 4, !tbaa !129
  %cmp51 = icmp eq i32 %68, 1
  br i1 %cmp51, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end
  br label %cond.end

cond.false:                                       ; preds = %for.end
  %69 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info53 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %69, i32 0, i32 11
  %polarity54 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info53, i32 0, i32 2
  %70 = load i32, i32* %polarity54, align 4, !tbaa !129
  %cmp55 = icmp eq i32 %70, 0
  %cond = select i1 %cmp55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond57 = phi i8* [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i32 0, i32 0), %cond.true ], [ %cond, %cond.false ]
  %call58 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %66, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.101, i32 0, i32 0), i8* %cond57) #7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.59

for.cond.59:                                      ; preds = %for.inc.65, %cond.end
  %71 = load i32, i32* %i, align 4, !tbaa !26
  %72 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp60 = icmp slt i32 %71, %72
  br i1 %cmp60, label %for.body.62, label %for.end.67

for.body.62:                                      ; preds = %for.cond.59
  %73 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom63 = sext i32 %73 to i64
  %arrayidx64 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom63
  store i16 0, i16* %arrayidx64, align 2, !tbaa !25
  br label %for.inc.65

for.inc.65:                                       ; preds = %for.body.62
  %74 = load i32, i32* %i, align 4, !tbaa !26
  %inc66 = add nsw i32 %74, 1
  store i32 %inc66, i32* %i, align 4, !tbaa !26
  br label %for.cond.59

for.end.67:                                       ; preds = %for.cond.59
  %75 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %75, i32 0, i32 42
  %encode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 51
  %76 = load i64 (%struct.gx_device_s*, i16*)*, i64 (%struct.gx_device_s*, i16*)** %encode_color, align 8, !tbaa !120
  %77 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i32 0
  %call68 = call i64 %76(%struct.gx_device_s* %77, i16* %arraydecay) #7
  store i64 %call68, i64* %color, align 8, !tbaa !23
  %78 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory69 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %78, i32 0, i32 3
  %79 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory69, align 8, !tbaa !125
  %80 = load i64, i64* %color, align 8, !tbaa !23
  %call70 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %79, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.105, i32 0, i32 0), i64 %80) #7
  %81 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory71 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %81, i32 0, i32 3
  %82 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory71, align 8, !tbaa !125
  %83 = load i32, i32* %linsep, align 4, !tbaa !26
  %cmp72 = icmp eq i32 %83, 0
  br i1 %cmp72, label %cond.true.74, label %cond.false.75

cond.true.74:                                     ; preds = %for.end.67
  br label %cond.end.79

cond.false.75:                                    ; preds = %for.end.67
  %84 = load i32, i32* %linsep, align 4, !tbaa !26
  %cmp76 = icmp eq i32 %84, 1
  %cond78 = select i1 %cmp76, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i32 0, i32 0)
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.false.75, %cond.true.74
  %cond80 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i32 0, i32 0), %cond.true.74 ], [ %cond78, %cond.false.75 ]
  %call81 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %82, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.106, i32 0, i32 0), i8* %cond80) #7
  %85 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info82 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %85, i32 0, i32 11
  %gray_index = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info82, i32 0, i32 4
  %86 = load i8, i8* %gray_index, align 1, !tbaa !130
  %conv83 = zext i8 %86 to i32
  %cmp84 = icmp eq i32 %conv83, 254
  br i1 %cmp84, label %if.then.86, label %if.else.89

if.then.86:                                       ; preds = %cond.end.79
  %87 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory87 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %87, i32 0, i32 3
  %88 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory87, align 8, !tbaa !125
  %call88 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %88, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.109, i32 0, i32 0)) #7
  br label %if.end.95

if.else.89:                                       ; preds = %cond.end.79
  %89 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory90 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %89, i32 0, i32 3
  %90 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory90, align 8, !tbaa !125
  %91 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info91 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %91, i32 0, i32 11
  %gray_index92 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info91, i32 0, i32 4
  %92 = load i8, i8* %gray_index92, align 1, !tbaa !130
  %conv93 = zext i8 %92 to i32
  %call94 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %90, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.110, i32 0, i32 0), i32 %conv93) #7
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.89, %if.then.86
  %93 = load i32, i32* %linsep, align 4, !tbaa !26
  %tobool = icmp ne i32 %93, 0
  br i1 %tobool, label %if.then.96, label %if.end.120

if.then.96:                                       ; preds = %if.end.95
  %94 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory97 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %94, i32 0, i32 3
  %95 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory97, align 8, !tbaa !125
  %call98 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %95, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.111, i32 0, i32 0)) #7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.99

for.cond.99:                                      ; preds = %for.inc.117, %if.then.96
  %96 = load i32, i32* %i, align 4, !tbaa !26
  %97 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp100 = icmp slt i32 %96, %97
  br i1 %cmp100, label %for.body.102, label %for.end.119

for.body.102:                                     ; preds = %for.cond.99
  %98 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory103 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %98, i32 0, i32 3
  %99 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory103, align 8, !tbaa !125
  %100 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom104 = sext i32 %100 to i64
  %101 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info105 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %101, i32 0, i32 11
  %comp_shift = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info105, i32 0, i32 11
  %arrayidx106 = getelementptr inbounds [64 x i8], [64 x i8]* %comp_shift, i32 0, i64 %idxprom104
  %102 = load i8, i8* %arrayidx106, align 1, !tbaa !54
  %conv107 = zext i8 %102 to i32
  %103 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom108 = sext i32 %103 to i64
  %104 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info109 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %104, i32 0, i32 11
  %comp_mask = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info109, i32 0, i32 13
  %arrayidx110 = getelementptr inbounds [64 x i64], [64 x i64]* %comp_mask, i32 0, i64 %idxprom108
  %105 = load i64, i64* %arrayidx110, align 8, !tbaa !23
  %conv111 = trunc i64 %105 to i32
  %106 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom112 = sext i32 %106 to i64
  %107 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %color_info113 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %107, i32 0, i32 11
  %comp_bits = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info113, i32 0, i32 12
  %arrayidx114 = getelementptr inbounds [64 x i8], [64 x i8]* %comp_bits, i32 0, i64 %idxprom112
  %108 = load i8, i8* %arrayidx114, align 1, !tbaa !54
  %conv115 = zext i8 %108 to i32
  %call116 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %99, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.112, i32 0, i32 0), i32 %conv107, i32 %conv111, i32 %conv115) #7
  br label %for.inc.117

for.inc.117:                                      ; preds = %for.body.102
  %109 = load i32, i32* %i, align 4, !tbaa !26
  %inc118 = add nsw i32 %109, 1
  store i32 %inc118, i32* %i, align 4, !tbaa !26
  br label %for.cond.99

for.end.119:                                      ; preds = %for.cond.99
  br label %if.end.120

if.end.120:                                       ; preds = %for.end.119, %if.end.95
  br label %while.cond

while.cond:                                       ; preds = %if.end.265, %if.end.120
  %110 = load i32, i32* %finished, align 4, !tbaa !26
  %tobool121 = icmp ne i32 %110, 0
  %lnot = xor i1 %tobool121, true
  br i1 %lnot, label %while.body, label %while.end.266

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %j, align 4, !tbaa !26
  br label %for.cond.122

for.cond.122:                                     ; preds = %for.inc.241, %while.body
  %111 = load i32, i32* %j, align 4, !tbaa !26
  %112 = load i32, i32* %steps, align 4, !tbaa !26
  %cmp123 = icmp sle i32 %111, %112
  br i1 %cmp123, label %for.body.125, label %for.end.243

for.body.125:                                     ; preds = %for.cond.122
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.126

for.cond.126:                                     ; preds = %for.inc.136, %for.body.125
  %113 = load i32, i32* %i, align 4, !tbaa !26
  %114 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp127 = icmp slt i32 %113, %114
  br i1 %cmp127, label %for.body.129, label %for.end.138

for.body.129:                                     ; preds = %for.cond.126
  %115 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom130 = sext i32 %115 to i64
  %arrayidx131 = getelementptr inbounds [64 x i32], [64 x i32]* %counter, i32 0, i64 %idxprom130
  %116 = load i32, i32* %arrayidx131, align 4, !tbaa !26
  %mul = mul nsw i32 %116, 65535
  %117 = load i32, i32* %steps, align 4, !tbaa !26
  %div132 = sdiv i32 %mul, %117
  %conv133 = trunc i32 %div132 to i16
  %118 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom134 = sext i32 %118 to i64
  %arrayidx135 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom134
  store i16 %conv133, i16* %arrayidx135, align 2, !tbaa !25
  br label %for.inc.136

for.inc.136:                                      ; preds = %for.body.129
  %119 = load i32, i32* %i, align 4, !tbaa !26
  %inc137 = add nsw i32 %119, 1
  store i32 %inc137, i32* %i, align 4, !tbaa !26
  br label %for.cond.126

for.end.138:                                      ; preds = %for.cond.126
  %120 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs139 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %120, i32 0, i32 42
  %encode_color140 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs139, i32 0, i32 51
  %121 = load i64 (%struct.gx_device_s*, i16*)*, i64 (%struct.gx_device_s*, i16*)** %encode_color140, align 8, !tbaa !120
  %122 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %arraydecay141 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i32 0
  %call142 = call i64 %121(%struct.gx_device_s* %122, i16* %arraydecay141) #7
  store i64 %call142, i64* %color, align 8, !tbaa !23
  %123 = load i32, i32* %linsep, align 4, !tbaa !26
  %tobool143 = icmp ne i32 %123, 0
  br i1 %tobool143, label %if.then.144, label %if.end.174

if.then.144:                                      ; preds = %for.end.138
  %124 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %arraydecay145 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i32 0
  %call146 = call i64 @gx_default_encode_color(%struct.gx_device_s* %124, i16* %arraydecay145) #7
  store i64 %call146, i64* %lscolor, align 8, !tbaa !23
  %125 = load i64, i64* %color, align 8, !tbaa !23
  %126 = load i64, i64* %lscolor, align 8, !tbaa !23
  %cmp147 = icmp ne i64 %125, %126
  br i1 %cmp147, label %land.lhs.true, label %if.end.173

land.lhs.true:                                    ; preds = %if.then.144
  %127 = load i32, i32* %linsepfailed, align 4, !tbaa !26
  %cmp149 = icmp slt i32 %127, 5
  br i1 %cmp149, label %if.then.151, label %if.end.173

if.then.151:                                      ; preds = %land.lhs.true
  %128 = load i32, i32* %linsepfailed, align 4, !tbaa !26
  %inc152 = add nsw i32 %128, 1
  store i32 %inc152, i32* %linsepfailed, align 4, !tbaa !26
  %129 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory153 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %129, i32 0, i32 3
  %130 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory153, align 8, !tbaa !125
  %call154 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %130, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.113, i32 0, i32 0)) #7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.155

for.cond.155:                                     ; preds = %for.inc.164, %if.then.151
  %131 = load i32, i32* %i, align 4, !tbaa !26
  %132 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp156 = icmp slt i32 %131, %132
  br i1 %cmp156, label %for.body.158, label %for.end.166

for.body.158:                                     ; preds = %for.cond.155
  %133 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory159 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %133, i32 0, i32 3
  %134 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory159, align 8, !tbaa !125
  %135 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom160 = sext i32 %135 to i64
  %arrayidx161 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom160
  %136 = load i16, i16* %arrayidx161, align 2, !tbaa !25
  %conv162 = zext i16 %136 to i32
  %call163 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %134, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.114, i32 0, i32 0), i32 %conv162) #7
  br label %for.inc.164

for.inc.164:                                      ; preds = %for.body.158
  %137 = load i32, i32* %i, align 4, !tbaa !26
  %inc165 = add nsw i32 %137, 1
  store i32 %inc165, i32* %i, align 4, !tbaa !26
  br label %for.cond.155

for.end.166:                                      ; preds = %for.cond.155
  %138 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory167 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %138, i32 0, i32 3
  %139 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory167, align 8, !tbaa !125
  %call168 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.115, i32 0, i32 0)) #7
  %140 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory169 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %140, i32 0, i32 3
  %141 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory169, align 8, !tbaa !125
  %142 = load i64, i64* %color, align 8, !tbaa !23
  %conv170 = trunc i64 %142 to i32
  %143 = load i64, i64* %lscolor, align 8, !tbaa !23
  %conv171 = trunc i64 %143 to i32
  %call172 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %141, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i32 0, i32 0), i32 %conv170, i32 %conv171) #7
  br label %if.end.173

if.end.173:                                       ; preds = %for.end.166, %land.lhs.true, %if.then.144
  br label %if.end.174

if.end.174:                                       ; preds = %if.end.173, %for.end.138
  %144 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %procs175 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %144, i32 0, i32 42
  %decode_color = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs175, i32 0, i32 52
  %145 = load i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)** %decode_color, align 8, !tbaa !121
  %146 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %147 = load i64, i64* %color, align 8, !tbaa !23
  %arraydecay176 = getelementptr inbounds [64 x i16], [64 x i16]* %cvout, i32 0, i32 0
  %call177 = call i32 %145(%struct.gx_device_s* %146, i64 %147, i16* %arraydecay176) #7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.178

for.cond.178:                                     ; preds = %for.inc.208, %if.end.174
  %148 = load i32, i32* %i, align 4, !tbaa !26
  %149 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp179 = icmp slt i32 %148, %149
  br i1 %cmp179, label %for.body.181, label %for.end.210

for.body.181:                                     ; preds = %for.cond.178
  %150 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom182 = sext i32 %150 to i64
  %arrayidx183 = getelementptr inbounds [64 x i16], [64 x i16]* %cvout, i32 0, i64 %idxprom182
  %151 = load i16, i16* %arrayidx183, align 2, !tbaa !25
  %conv184 = zext i16 %151 to i32
  %152 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom185 = sext i32 %152 to i64
  %arrayidx186 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom185
  %153 = load i16, i16* %arrayidx186, align 2, !tbaa !25
  %conv187 = zext i16 %153 to i32
  %sub = sub nsw i32 %conv184, %conv187
  store i32 %sub, i32* %err, align 4, !tbaa !26
  %154 = load i32, i32* %err, align 4, !tbaa !26
  %cmp188 = icmp slt i32 %154, 0
  br i1 %cmp188, label %if.then.190, label %if.end.192

if.then.190:                                      ; preds = %for.body.181
  %155 = load i32, i32* %err, align 4, !tbaa !26
  %sub191 = sub nsw i32 0, %155
  store i32 %sub191, i32* %err, align 4, !tbaa !26
  br label %if.end.192

if.end.192:                                       ; preds = %if.then.190, %for.body.181
  %156 = load i32, i32* %err, align 4, !tbaa !26
  %157 = load i32, i32* %maxerror, align 4, !tbaa !26
  %cmp193 = icmp sgt i32 %156, %157
  br i1 %cmp193, label %if.then.195, label %if.end.207

if.then.195:                                      ; preds = %if.end.192
  %158 = load i32, i32* %err, align 4, !tbaa !26
  store i32 %158, i32* %maxerror, align 4, !tbaa !26
  store i32 0, i32* %k, align 4, !tbaa !26
  br label %for.cond.196

for.cond.196:                                     ; preds = %for.inc.204, %if.then.195
  %159 = load i32, i32* %k, align 4, !tbaa !26
  %160 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp197 = icmp slt i32 %159, %160
  br i1 %cmp197, label %for.body.199, label %for.end.206

for.body.199:                                     ; preds = %for.cond.196
  %161 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom200 = sext i32 %161 to i64
  %arrayidx201 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom200
  %162 = load i16, i16* %arrayidx201, align 2, !tbaa !25
  %163 = load i32, i32* %k, align 4, !tbaa !26
  %idxprom202 = sext i32 %163 to i64
  %arrayidx203 = getelementptr inbounds [64 x i16], [64 x i16]* %cvbad, i32 0, i64 %idxprom202
  store i16 %162, i16* %arrayidx203, align 2, !tbaa !25
  br label %for.inc.204

for.inc.204:                                      ; preds = %for.body.199
  %164 = load i32, i32* %k, align 4, !tbaa !26
  %inc205 = add nsw i32 %164, 1
  store i32 %inc205, i32* %k, align 4, !tbaa !26
  br label %for.cond.196

for.end.206:                                      ; preds = %for.cond.196
  br label %if.end.207

if.end.207:                                       ; preds = %for.end.206, %if.end.192
  br label %for.inc.208

for.inc.208:                                      ; preds = %if.end.207
  %165 = load i32, i32* %i, align 4, !tbaa !26
  %inc209 = add nsw i32 %165, 1
  store i32 %inc209, i32* %i, align 4, !tbaa !26
  br label %for.cond.178

for.end.210:                                      ; preds = %for.cond.178
  %166 = load i32, i32* %linsep, align 4, !tbaa !26
  %tobool211 = icmp ne i32 %166, 0
  br i1 %tobool211, label %if.then.212, label %if.end.238

if.then.212:                                      ; preds = %for.end.210
  %167 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %168 = load i64, i64* %color, align 8, !tbaa !23
  %arraydecay213 = getelementptr inbounds [64 x i16], [64 x i16]* %cvout, i32 0, i32 0
  %call214 = call i32 @gx_default_decode_color(%struct.gx_device_s* %167, i64 %168, i16* %arraydecay213) #7
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.215

for.cond.215:                                     ; preds = %for.inc.235, %if.then.212
  %169 = load i32, i32* %i, align 4, !tbaa !26
  %170 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp216 = icmp slt i32 %169, %170
  br i1 %cmp216, label %for.body.218, label %for.end.237

for.body.218:                                     ; preds = %for.cond.215
  %171 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom219 = sext i32 %171 to i64
  %arrayidx220 = getelementptr inbounds [64 x i16], [64 x i16]* %cvout, i32 0, i64 %idxprom219
  %172 = load i16, i16* %arrayidx220, align 2, !tbaa !25
  %conv221 = zext i16 %172 to i32
  %173 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom222 = sext i32 %173 to i64
  %arrayidx223 = getelementptr inbounds [64 x i16], [64 x i16]* %cv, i32 0, i64 %idxprom222
  %174 = load i16, i16* %arrayidx223, align 2, !tbaa !25
  %conv224 = zext i16 %174 to i32
  %sub225 = sub nsw i32 %conv221, %conv224
  store i32 %sub225, i32* %err, align 4, !tbaa !26
  %175 = load i32, i32* %err, align 4, !tbaa !26
  %cmp226 = icmp slt i32 %175, 0
  br i1 %cmp226, label %if.then.228, label %if.end.230

if.then.228:                                      ; preds = %for.body.218
  %176 = load i32, i32* %err, align 4, !tbaa !26
  %sub229 = sub nsw i32 0, %176
  store i32 %sub229, i32* %err, align 4, !tbaa !26
  br label %if.end.230

if.end.230:                                       ; preds = %if.then.228, %for.body.218
  %177 = load i32, i32* %err, align 4, !tbaa !26
  %178 = load i32, i32* %lsmaxerror, align 4, !tbaa !26
  %cmp231 = icmp sgt i32 %177, %178
  br i1 %cmp231, label %if.then.233, label %if.end.234

if.then.233:                                      ; preds = %if.end.230
  %179 = load i32, i32* %err, align 4, !tbaa !26
  store i32 %179, i32* %lsmaxerror, align 4, !tbaa !26
  br label %if.end.234

if.end.234:                                       ; preds = %if.then.233, %if.end.230
  br label %for.inc.235

for.inc.235:                                      ; preds = %if.end.234
  %180 = load i32, i32* %i, align 4, !tbaa !26
  %inc236 = add nsw i32 %180, 1
  store i32 %inc236, i32* %i, align 4, !tbaa !26
  br label %for.cond.215

for.end.237:                                      ; preds = %for.cond.215
  br label %if.end.238

if.end.238:                                       ; preds = %for.end.237, %for.end.210
  %arrayidx239 = getelementptr inbounds [64 x i32], [64 x i32]* %counter, i32 0, i64 0
  %181 = load i32, i32* %arrayidx239, align 4, !tbaa !26
  %add240 = add nsw i32 %181, 1
  store i32 %add240, i32* %arrayidx239, align 4, !tbaa !26
  br label %for.inc.241

for.inc.241:                                      ; preds = %if.end.238
  %182 = load i32, i32* %j, align 4, !tbaa !26
  %inc242 = add nsw i32 %182, 1
  store i32 %inc242, i32* %j, align 4, !tbaa !26
  br label %for.cond.122

for.end.243:                                      ; preds = %for.cond.122
  %arrayidx244 = getelementptr inbounds [64 x i32], [64 x i32]* %counter, i32 0, i64 0
  store i32 0, i32* %arrayidx244, align 4, !tbaa !26
  store i32 1, i32* %i, align 4, !tbaa !26
  br label %while.cond.245

while.cond.245:                                   ; preds = %if.end.261, %for.end.243
  %183 = load i32, i32* %i, align 4, !tbaa !26
  %184 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp246 = icmp slt i32 %183, %184
  br i1 %cmp246, label %while.body.248, label %while.end

while.body.248:                                   ; preds = %while.cond.245
  %185 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom249 = sext i32 %185 to i64
  %arrayidx250 = getelementptr inbounds [64 x i32], [64 x i32]* %counter, i32 0, i64 %idxprom249
  %186 = load i32, i32* %arrayidx250, align 4, !tbaa !26
  %add251 = add nsw i32 %186, 1
  store i32 %add251, i32* %arrayidx250, align 4, !tbaa !26
  %187 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom252 = sext i32 %187 to i64
  %arrayidx253 = getelementptr inbounds [64 x i32], [64 x i32]* %counter, i32 0, i64 %idxprom252
  %188 = load i32, i32* %arrayidx253, align 4, !tbaa !26
  %189 = load i32, i32* %steps, align 4, !tbaa !26
  %cmp254 = icmp sgt i32 %188, %189
  br i1 %cmp254, label %if.then.256, label %if.else.260

if.then.256:                                      ; preds = %while.body.248
  %190 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom257 = sext i32 %190 to i64
  %arrayidx258 = getelementptr inbounds [64 x i32], [64 x i32]* %counter, i32 0, i64 %idxprom257
  store i32 0, i32* %arrayidx258, align 4, !tbaa !26
  %191 = load i32, i32* %i, align 4, !tbaa !26
  %inc259 = add nsw i32 %191, 1
  store i32 %inc259, i32* %i, align 4, !tbaa !26
  br label %if.end.261

if.else.260:                                      ; preds = %while.body.248
  br label %while.end

if.end.261:                                       ; preds = %if.then.256
  br label %while.cond.245

while.end:                                        ; preds = %if.else.260, %while.cond.245
  %192 = load i32, i32* %i, align 4, !tbaa !26
  %193 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp262 = icmp sge i32 %192, %193
  br i1 %cmp262, label %if.then.264, label %if.end.265

if.then.264:                                      ; preds = %while.end
  store i32 1, i32* %finished, align 4, !tbaa !26
  br label %if.end.265

if.end.265:                                       ; preds = %if.then.264, %while.end
  br label %while.cond

while.end.266:                                    ; preds = %while.cond
  %194 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory267 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %194, i32 0, i32 3
  %195 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory267, align 8, !tbaa !125
  %196 = load i32, i32* %maxerror, align 4, !tbaa !26
  %conv268 = sitofp i32 %196 to float
  %div269 = fdiv float %conv268, 6.553500e+04
  %conv270 = fpext float %div269 to double
  %197 = load i32, i32* %maxerror, align 4, !tbaa !26
  %198 = load i32, i32* %acceptable_error, align 4, !tbaa !26
  %cmp271 = icmp sle i32 %197, %198
  br i1 %cmp271, label %cond.true.273, label %cond.false.274

cond.true.273:                                    ; preds = %while.end.266
  br label %cond.end.280

cond.false.274:                                   ; preds = %while.end.266
  %199 = load i32, i32* %maxerror, align 4, !tbaa !26
  %200 = load i32, i32* %acceptable_error, align 4, !tbaa !26
  %mul275 = mul nsw i32 3, %200
  %div276 = sdiv i32 %mul275, 2
  %cmp277 = icmp sle i32 %199, %div276
  %cond279 = select i1 %cmp277, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i32 0, i32 0)
  br label %cond.end.280

cond.end.280:                                     ; preds = %cond.false.274, %cond.true.273
  %cond281 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i32 0, i32 0), %cond.true.273 ], [ %cond279, %cond.false.274 ]
  %call282 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %195, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.117, i32 0, i32 0), double %conv270, i8* %cond281) #7
  %201 = load i32, i32* %linsep, align 4, !tbaa !26
  %tobool283 = icmp ne i32 %201, 0
  br i1 %tobool283, label %if.then.284, label %if.end.301

if.then.284:                                      ; preds = %cond.end.280
  %202 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %memory285 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %202, i32 0, i32 3
  %203 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory285, align 8, !tbaa !125
  %204 = load i32, i32* %lsmaxerror, align 4, !tbaa !26
  %conv286 = sitofp i32 %204 to float
  %div287 = fdiv float %conv286, 6.553500e+04
  %conv288 = fpext float %div287 to double
  %205 = load i32, i32* %lsmaxerror, align 4, !tbaa !26
  %206 = load i32, i32* %acceptable_error, align 4, !tbaa !26
  %cmp289 = icmp sle i32 %205, %206
  br i1 %cmp289, label %cond.true.291, label %cond.false.292

cond.true.291:                                    ; preds = %if.then.284
  br label %cond.end.298

cond.false.292:                                   ; preds = %if.then.284
  %207 = load i32, i32* %lsmaxerror, align 4, !tbaa !26
  %208 = load i32, i32* %acceptable_error, align 4, !tbaa !26
  %mul293 = mul nsw i32 3, %208
  %div294 = sdiv i32 %mul293, 2
  %cmp295 = icmp sle i32 %207, %div294
  %cond297 = select i1 %cmp295, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i32 0, i32 0)
  br label %cond.end.298

cond.end.298:                                     ; preds = %cond.false.292, %cond.true.291
  %cond299 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i32 0, i32 0), %cond.true.291 ], [ %cond297, %cond.false.292 ]
  %call300 = call i32 (%struct.gs_memory_s*, i8*, ...) @errprintf(%struct.gs_memory_s* %203, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.121, i32 0, i32 0), double %conv288, i8* %cond299) #7
  br label %if.end.301

if.end.301:                                       ; preds = %cond.end.298, %cond.end.280
  br label %do.body

do.body:                                          ; preds = %if.end.301
  %209 = load i32, i32* %ncomp, align 4, !tbaa !26
  %sub302 = sub nsw i32 %209, 1
  %210 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext = sext i32 %sub302 to i64
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %210, i64 %idx.ext
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %211 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack303 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %211, i32 0, i32 26
  %stack304 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack303, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack304, i32 0, i32 2
  %212 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp305 = icmp ugt %struct.ref_s* %add.ptr, %212
  br i1 %cmp305, label %if.then.307, label %if.else.311

if.then.307:                                      ; preds = %do.body
  %213 = load i32, i32* %ncomp, align 4, !tbaa !26
  %sub308 = sub nsw i32 %213, 1
  %214 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack309 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %214, i32 0, i32 26
  %stack310 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack309, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack310, i32 0, i32 7
  store i32 %sub308, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.311:                                      ; preds = %do.body
  %215 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %216 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack312 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %216, i32 0, i32 26
  %stack313 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack312, i32 0, i32 0
  %p314 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack313, i32 0, i32 0
  store %struct.ref_s* %215, %struct.ref_s** %p314, align 8, !tbaa !10
  br label %if.end.315

if.end.315:                                       ; preds = %if.else.311
  br label %do.cond

do.cond:                                          ; preds = %if.end.315
  br label %do.end

do.end:                                           ; preds = %do.cond
  %217 = load i32, i32* %ncomp, align 4, !tbaa !26
  %sub316 = sub nsw i32 %217, 1
  %218 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext317 = sext i32 %sub316 to i64
  %idx.neg = sub i64 0, %idx.ext317
  %add.ptr318 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %218, i64 %idx.neg
  store %struct.ref_s* %add.ptr318, %struct.ref_s** %op, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.319

for.cond.319:                                     ; preds = %for.inc.334, %do.end
  %219 = load i32, i32* %i, align 4, !tbaa !26
  %220 = load i32, i32* %ncomp, align 4, !tbaa !26
  %cmp320 = icmp slt i32 %219, %220
  br i1 %cmp320, label %for.body.322, label %for.end.336

for.body.322:                                     ; preds = %for.cond.319
  %221 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom323 = sext i32 %221 to i64
  %arrayidx324 = getelementptr inbounds [64 x i16], [64 x i16]* %cvbad, i32 0, i64 %idxprom323
  %222 = load i16, i16* %arrayidx324, align 2, !tbaa !25
  %conv325 = uitofp i16 %222 to float
  %div326 = fdiv float %conv325, 6.553500e+04
  %223 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %224 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext327 = sext i32 %224 to i64
  %add.ptr328 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %223, i64 %idx.ext327
  %value329 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr328, i32 0, i32 1
  %realval = bitcast %union.v* %value329 to float*
  store float %div326, float* %realval, align 4, !tbaa !20
  %225 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %226 = load i32, i32* %i, align 4, !tbaa !26
  %idx.ext330 = sext i32 %226 to i64
  %add.ptr331 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %225, i64 %idx.ext330
  %tas332 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr331, i32 0, i32 0
  %type_attrs333 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas332, i32 0, i32 0
  store i16 4096, i16* %type_attrs333, align 2, !tbaa !22
  br label %for.inc.334

for.inc.334:                                      ; preds = %for.body.322
  %227 = load i32, i32* %i, align 4, !tbaa !26
  %inc335 = add nsw i32 %227, 1
  store i32 %inc335, i32* %i, align 4, !tbaa !26
  br label %for.cond.319

for.end.336:                                      ; preds = %for.cond.319
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.336, %if.then.307, %if.then.22, %if.then.13
  %228 = bitcast i32* %finished to i8*
  call void @llvm.lifetime.end(i64 4, i8* %228) #1
  %229 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %229) #1
  %230 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %230) #1
  %231 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %231) #1
  %232 = bitcast i64* %lscolor to i8*
  call void @llvm.lifetime.end(i64 8, i8* %232) #1
  %233 = bitcast i64* %color to i8*
  call void @llvm.lifetime.end(i64 8, i8* %233) #1
  %234 = bitcast i32* %lsmaxerror to i8*
  call void @llvm.lifetime.end(i64 4, i8* %234) #1
  %235 = bitcast i32* %linsepfailed to i8*
  call void @llvm.lifetime.end(i64 4, i8* %235) #1
  %236 = bitcast i32* %linsep to i8*
  call void @llvm.lifetime.end(i64 4, i8* %236) #1
  %237 = bitcast i32* %acceptable_error to i8*
  call void @llvm.lifetime.end(i64 4, i8* %237) #1
  %238 = bitcast i32* %err to i8*
  call void @llvm.lifetime.end(i64 4, i8* %238) #1
  %239 = bitcast i32* %maxerror to i8*
  call void @llvm.lifetime.end(i64 4, i8* %239) #1
  %240 = bitcast i32* %steps to i8*
  call void @llvm.lifetime.end(i64 4, i8* %240) #1
  %241 = bitcast i32* %ncomp to i8*
  call void @llvm.lifetime.end(i64 4, i8* %241) #1
  %242 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %242) #1
  %243 = bitcast [64 x i32]* %counter to i8*
  call void @llvm.lifetime.end(i64 256, i8* %243) #1
  %244 = bitcast [64 x i16]* %cvbad to i8*
  call void @llvm.lifetime.end(i64 128, i8* %244) #1
  %245 = bitcast [64 x i16]* %cvout to i8*
  call void @llvm.lifetime.end(i64 128, i8* %245) #1
  %246 = bitcast [64 x i16]* %cv to i8*
  call void @llvm.lifetime.end(i64 128, i8* %246) #1
  %247 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %247) #1
  %248 = load i32, i32* %retval
  ret i32 %248
}

; Function Attrs: nounwind uwtable
define internal i32 @zincludecolorspace(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %nsref = alloca %struct.ref_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.ref_s* %nsref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %7 to i32
  %cmp = icmp eq i32 %conv, 13
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %8 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call = call i32 @check_type_failed(%struct.ref_s* %8) #7
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %10 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %11 = bitcast %struct.gs_ref_memory_s* %10 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %11, i32 0, i32 2
  %12 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %12, i32 0, i32 16
  %13 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %14 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  call void @names_string_ref(%struct.name_table_s* %13, %struct.ref_s* %14, %struct.ref_s* %nsref) #7
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 0
  %16 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %nsref, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value to i8**
  %17 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  %tas2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %nsref, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas2, i32 0, i32 2
  %18 = load i32, i32* %rsize, align 4, !tbaa !5
  %call3 = call i32 @gs_includecolorspace(%struct.gs_state_s* %16, i8* %17, i32 %18) #7
  store i32 %call3, i32* %code, align 4, !tbaa !26
  %19 = load i32, i32* %code, align 4, !tbaa !26
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.end.8, label %if.then.4

if.then.4:                                        ; preds = %if.end
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 26
  %stack6 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack5, i32 0, i32 0
  %p7 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 0
  %21 = load %struct.ref_s*, %struct.ref_s** %p7, align 8, !tbaa !10
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %21, i64 -1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p7, align 8, !tbaa !10
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.4, %if.end
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.8, %if.then
  %23 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %24 = bitcast %struct.ref_s* %nsref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %24) #1
  %25 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #1
  %26 = load i32, i32* %retval
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @zcurrentgray(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 0
  %4 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %4, i32 0, i32 2
  %5 = load i8*, i8** %client_data, align 8, !tbaa !53
  %6 = bitcast i8* %5 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %6, i32 0, i32 5
  %arrayidx = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx, i32 0, i32 0
  %call = call i32 @validate_spaces(%struct.gs_context_state_s* %2, %struct.ref_s* %array, i32* %depth) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.116

if.end:                                           ; preds = %entry
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call1 = call i32 @zcurrentcolor(%struct.gs_context_state_s* %9) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %10, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.116

if.end.4:                                         ; preds = %if.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %13 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 25
  %stack6 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack5, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 2
  %15 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i64 -7
  %cmp7 = icmp ugt %struct.ref_s* %13, %add.ptr
  br i1 %cmp7, label %if.then.8, label %if.end.15

if.then.8:                                        ; preds = %if.end.4
  %16 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 25
  %stack10 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack9, i32 0, i32 0
  %call11 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack10, i32 7) #7
  store i32 %call11, i32* %es_code_, align 4, !tbaa !26
  %18 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %18, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.then.8
  %19 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.then.8
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.13
  %20 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.116 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.15

if.end.15:                                        ; preds = %cleanup.cont, %if.end.4
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack16 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 25
  %stack17 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack16, i32 0, i32 0
  %p18 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack17, i32 0, i32 0
  %22 = load %struct.ref_s*, %struct.ref_s** %p18, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p18, align 8, !tbaa !27
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack19 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 25
  %stack20 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack19, i32 0, i32 0
  %p21 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack20, i32 0, i32 0
  %24 = load %struct.ref_s*, %struct.ref_s** %p21, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %24, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack22 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack23 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack22, i32 0, i32 0
  %p24 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack23, i32 0, i32 0
  %26 = load %struct.ref_s*, %struct.ref_s** %p24, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack25 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack25, i32 0, i32 0
  %p27 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack26, i32 0, i32 0
  %28 = load %struct.ref_s*, %struct.ref_s** %p27, align 8, !tbaa !27
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 25
  %stack30 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack29, i32 0, i32 0
  %p31 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack30, i32 0, i32 0
  %30 = load %struct.ref_s*, %struct.ref_s** %p31, align 8, !tbaa !27
  %incdec.ptr32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i32 1
  store %struct.ref_s* %incdec.ptr32, %struct.ref_s** %p31, align 8, !tbaa !27
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %p35 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack34, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p35, align 8, !tbaa !27
  %arrayidx36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i64 0
  %value37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx36, i32 0, i32 1
  %intval = bitcast %union.v* %value37 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %arrayidx41 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 0
  %tas42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx41, i32 0, i32 0
  %type_attrs43 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas42, i32 0, i32 0
  store i16 2816, i16* %type_attrs43, align 2, !tbaa !22
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack44 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack45 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack44, i32 0, i32 0
  %p46 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack45, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p46, align 8, !tbaa !27
  %incdec.ptr47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 1
  store %struct.ref_s* %incdec.ptr47, %struct.ref_s** %p46, align 8, !tbaa !27
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack48 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 25
  %stack49 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack48, i32 0, i32 0
  %p50 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack49, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p50, align 8, !tbaa !27
  %arrayidx51 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i64 0
  %value52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx51, i32 0, i32 1
  %intval53 = bitcast %union.v* %value52 to i64*
  store i64 0, i64* %intval53, align 8, !tbaa !23
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack54 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack55 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack54, i32 0, i32 0
  %p56 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack55, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p56, align 8, !tbaa !27
  %arrayidx57 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i64 0
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx57, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  store i16 2816, i16* %type_attrs59, align 2, !tbaa !22
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack61 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack60, i32 0, i32 0
  %p62 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack61, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p62, align 8, !tbaa !27
  %arrayidx63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %42, i64 1
  %value64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx63, i32 0, i32 1
  %intval65 = bitcast %union.v* %value64 to i64*
  store i64 1, i64* %intval65, align 8, !tbaa !23
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack66 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 25
  %stack67 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack66, i32 0, i32 0
  %p68 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack67, i32 0, i32 0
  %44 = load %struct.ref_s*, %struct.ref_s** %p68, align 8, !tbaa !27
  %arrayidx69 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i64 1
  %tas70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx69, i32 0, i32 0
  %type_attrs71 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas70, i32 0, i32 0
  store i16 2816, i16* %type_attrs71, align 2, !tbaa !22
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack72 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 25
  %stack73 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack72, i32 0, i32 0
  %p74 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack73, i32 0, i32 0
  %46 = load %struct.ref_s*, %struct.ref_s** %p74, align 8, !tbaa !27
  %arrayidx75 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i64 2
  %value76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx75, i32 0, i32 1
  %intval77 = bitcast %union.v* %value76 to i64*
  store i64 0, i64* %intval77, align 8, !tbaa !23
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack78 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 25
  %stack79 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack78, i32 0, i32 0
  %p80 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack79, i32 0, i32 0
  %48 = load %struct.ref_s*, %struct.ref_s** %p80, align 8, !tbaa !27
  %arrayidx81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %48, i64 2
  %tas82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx81, i32 0, i32 0
  %type_attrs83 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas82, i32 0, i32 0
  store i16 2816, i16* %type_attrs83, align 2, !tbaa !22
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack84 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 25
  %stack85 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack84, i32 0, i32 0
  %p86 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack85, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p86, align 8, !tbaa !27
  %arrayidx87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 3
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 0
  %52 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs88, align 8, !tbaa !43
  %client_data89 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %52, i32 0, i32 2
  %53 = load i8*, i8** %client_data89, align 8, !tbaa !53
  %54 = bitcast i8* %53 to %struct.int_gstate_s*
  %colorspace90 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %54, i32 0, i32 5
  %arrayidx91 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace90, i32 0, i64 0
  %array92 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx91, i32 0, i32 0
  %55 = bitcast %struct.ref_s* %arrayidx87 to i8*
  %56 = bitcast %struct.ref_s* %array92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false), !tbaa.struct !24
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack93 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack94 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack93, i32 0, i32 0
  %p95 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack94, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p95, align 8, !tbaa !27
  %add.ptr96 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i64 3
  store %struct.ref_s* %add.ptr96, %struct.ref_s** %p95, align 8, !tbaa !27
  %59 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack97 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %59, i32 0, i32 25
  %stack98 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack97, i32 0, i32 0
  %p99 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack98, i32 0, i32 0
  %60 = load %struct.ref_s*, %struct.ref_s** %p99, align 8, !tbaa !27
  %incdec.ptr100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %60, i32 1
  store %struct.ref_s* %incdec.ptr100, %struct.ref_s** %p99, align 8, !tbaa !27
  %61 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack101 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %61, i32 0, i32 25
  %stack102 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack101, i32 0, i32 0
  %p103 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack102, i32 0, i32 0
  %62 = load %struct.ref_s*, %struct.ref_s** %p103, align 8, !tbaa !27
  %value104 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %62, i32 0, i32 1
  %opproc105 = bitcast %union.v* %value104 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @currentbasecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc105, align 8, !tbaa !1
  %63 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack106 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %63, i32 0, i32 25
  %stack107 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack106, i32 0, i32 0
  %p108 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack107, i32 0, i32 0
  %64 = load %struct.ref_s*, %struct.ref_s** %p108, align 8, !tbaa !27
  %tas109 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %64, i32 0, i32 0
  %type_attrs110 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas109, i32 0, i32 0
  store i16 3968, i16* %type_attrs110, align 2, !tbaa !22
  %65 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack111 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %65, i32 0, i32 25
  %stack112 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack111, i32 0, i32 0
  %p113 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack112, i32 0, i32 0
  %66 = load %struct.ref_s*, %struct.ref_s** %p113, align 8, !tbaa !27
  %tas114 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %66, i32 0, i32 0
  %rsize115 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas114, i32 0, i32 2
  store i32 0, i32* %rsize115, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.116

cleanup.116:                                      ; preds = %if.end.15, %cleanup, %if.then.3, %if.then
  %67 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #1
  %68 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #1
  %69 = load i32, i32* %retval
  ret i32 %69
}

; Function Attrs: nounwind uwtable
define internal i32 @zsetgray(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %value = alloca float, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast float* %value to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call = call i32 @float_params(%struct.ref_s* %5, i32 1, float* %value) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84

if.end:                                           ; preds = %entry
  %8 = load float, float* %value, align 4, !tbaa !20
  %cmp1 = fcmp olt float %8, 0.000000e+00
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  store float 0.000000e+00, float* %value, align 4, !tbaa !20
  br label %if.end.6

if.else:                                          ; preds = %if.end
  %9 = load float, float* %value, align 4, !tbaa !20
  %cmp3 = fcmp ogt float %9, 1.000000e+00
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.else
  store float 1.000000e+00, float* %value, align 4, !tbaa !20
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %if.else
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.then.2
  %10 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call7 = call i32 @make_floats(%struct.ref_s* %10, float* %value, i32 1) #7
  store i32 %call7, i32* %code, align 4, !tbaa !26
  %11 = load i32, i32* %code, align 4, !tbaa !26
  %cmp8 = icmp slt i32 %11, 0
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  %12 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %12, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84

if.end.10:                                        ; preds = %if.end.6
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 25
  %stack11 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p12 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack11, i32 0, i32 0
  %14 = load %struct.ref_s*, %struct.ref_s** %p12, align 8, !tbaa !27
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack13 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 25
  %stack14 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack13, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack14, i32 0, i32 2
  %16 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %16, i64 -5
  %cmp15 = icmp ugt %struct.ref_s* %14, %add.ptr
  br i1 %cmp15, label %if.then.16, label %if.end.23

if.then.16:                                       ; preds = %if.end.10
  %17 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 25
  %stack18 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack17, i32 0, i32 0
  %call19 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack18, i32 5) #7
  store i32 %call19, i32* %es_code_, align 4, !tbaa !26
  %19 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp20 = icmp slt i32 %19, 0
  br i1 %cmp20, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.then.16
  %20 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.then.16
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.22, %if.then.21
  %21 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %21) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.84 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.23

if.end.23:                                        ; preds = %cleanup.cont, %if.end.10
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack24 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %22, i32 0, i32 25
  %stack25 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack24, i32 0, i32 0
  %p26 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack25, i32 0, i32 0
  %23 = load %struct.ref_s*, %struct.ref_s** %p26, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %23, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p26, align 8, !tbaa !27
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 25
  %stack28 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack27, i32 0, i32 0
  %p29 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack28, i32 0, i32 0
  %25 = load %struct.ref_s*, %struct.ref_s** %p29, align 8, !tbaa !27
  %value30 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i32 0, i32 1
  %opproc = bitcast %union.v* %value30 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack31 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 25
  %stack32 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack31, i32 0, i32 0
  %p33 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack32, i32 0, i32 0
  %27 = load %struct.ref_s*, %struct.ref_s** %p33, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %27, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack34 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 25
  %stack35 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack34, i32 0, i32 0
  %p36 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack35, i32 0, i32 0
  %29 = load %struct.ref_s*, %struct.ref_s** %p36, align 8, !tbaa !27
  %tas37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %29, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas37, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %31 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %incdec.ptr41 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 1
  store %struct.ref_s* %incdec.ptr41, %struct.ref_s** %p40, align 8, !tbaa !27
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack42 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 25
  %stack43 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack42, i32 0, i32 0
  %p44 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack43, i32 0, i32 0
  %33 = load %struct.ref_s*, %struct.ref_s** %p44, align 8, !tbaa !27
  %value45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i32 0, i32 1
  %intval = bitcast %union.v* %value45 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack46 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 25
  %stack47 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack46, i32 0, i32 0
  %p48 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack47, i32 0, i32 0
  %35 = load %struct.ref_s*, %struct.ref_s** %p48, align 8, !tbaa !27
  %tas49 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i32 0, i32 0
  %type_attrs50 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas49, i32 0, i32 0
  store i16 2816, i16* %type_attrs50, align 2, !tbaa !22
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack51 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 25
  %stack52 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack51, i32 0, i32 0
  %p53 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack52, i32 0, i32 0
  %37 = load %struct.ref_s*, %struct.ref_s** %p53, align 8, !tbaa !27
  %incdec.ptr54 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 1
  store %struct.ref_s* %incdec.ptr54, %struct.ref_s** %p53, align 8, !tbaa !27
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 25
  %stack56 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack55, i32 0, i32 0
  %p57 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack56, i32 0, i32 0
  %39 = load %struct.ref_s*, %struct.ref_s** %p57, align 8, !tbaa !27
  %value58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i32 0, i32 1
  %intval59 = bitcast %union.v* %value58 to i64*
  store i64 0, i64* %intval59, align 8, !tbaa !23
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 25
  %stack61 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack60, i32 0, i32 0
  %p62 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack61, i32 0, i32 0
  %41 = load %struct.ref_s*, %struct.ref_s** %p62, align 8, !tbaa !27
  %tas63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 0, i32 0
  %type_attrs64 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas63, i32 0, i32 0
  store i16 2816, i16* %type_attrs64, align 2, !tbaa !22
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack65 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 25
  %stack66 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack65, i32 0, i32 0
  %p67 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack66, i32 0, i32 0
  %43 = load %struct.ref_s*, %struct.ref_s** %p67, align 8, !tbaa !27
  %incdec.ptr68 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i32 1
  store %struct.ref_s* %incdec.ptr68, %struct.ref_s** %p67, align 8, !tbaa !27
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack69 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %44, i32 0, i32 25
  %stack70 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack69, i32 0, i32 0
  %p71 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack70, i32 0, i32 0
  %45 = load %struct.ref_s*, %struct.ref_s** %p71, align 8, !tbaa !27
  %value72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %45, i32 0, i32 1
  %opproc73 = bitcast %union.v* %value72 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setdevicecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc73, align 8, !tbaa !1
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack74 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 25
  %stack75 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack74, i32 0, i32 0
  %p76 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack75, i32 0, i32 0
  %47 = load %struct.ref_s*, %struct.ref_s** %p76, align 8, !tbaa !27
  %tas77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i32 0, i32 0
  %type_attrs78 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas77, i32 0, i32 0
  store i16 3968, i16* %type_attrs78, align 2, !tbaa !22
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack79 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 25
  %stack80 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack79, i32 0, i32 0
  %p81 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack80, i32 0, i32 0
  %49 = load %struct.ref_s*, %struct.ref_s** %p81, align 8, !tbaa !27
  %tas82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i32 0, i32 0
  %rsize83 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas82, i32 0, i32 2
  store i32 0, i32* %rsize83, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.84

cleanup.84:                                       ; preds = %if.end.23, %cleanup, %if.then.9, %if.then
  %50 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast float* %value to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %52) #1
  %53 = load i32, i32* %retval
  ret i32 %53
}

; Function Attrs: nounwind uwtable
define internal i32 @zcurrenthsbcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 0
  %4 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %4, i32 0, i32 2
  %5 = load i8*, i8** %client_data, align 8, !tbaa !53
  %6 = bitcast i8* %5 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %6, i32 0, i32 5
  %arrayidx = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx, i32 0, i32 0
  %call = call i32 @validate_spaces(%struct.gs_context_state_s* %2, %struct.ref_s* %array, i32* %depth) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.116

if.end:                                           ; preds = %entry
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call1 = call i32 @zcurrentcolor(%struct.gs_context_state_s* %9) #7
  store i32 %call1, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %10, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.116

if.end.4:                                         ; preds = %if.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %13 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 25
  %stack6 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack5, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 2
  %15 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i64 -7
  %cmp7 = icmp ugt %struct.ref_s* %13, %add.ptr
  br i1 %cmp7, label %if.then.8, label %if.end.15

if.then.8:                                        ; preds = %if.end.4
  %16 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 25
  %stack10 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack9, i32 0, i32 0
  %call11 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack10, i32 7) #7
  store i32 %call11, i32* %es_code_, align 4, !tbaa !26
  %18 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp12 = icmp slt i32 %18, 0
  br i1 %cmp12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.then.8
  %19 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.then.8
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.13
  %20 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.116 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.15

if.end.15:                                        ; preds = %cleanup.cont, %if.end.4
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack16 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 25
  %stack17 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack16, i32 0, i32 0
  %p18 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack17, i32 0, i32 0
  %22 = load %struct.ref_s*, %struct.ref_s** %p18, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p18, align 8, !tbaa !27
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack19 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 25
  %stack20 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack19, i32 0, i32 0
  %p21 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack20, i32 0, i32 0
  %24 = load %struct.ref_s*, %struct.ref_s** %p21, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %24, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack22 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack23 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack22, i32 0, i32 0
  %p24 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack23, i32 0, i32 0
  %26 = load %struct.ref_s*, %struct.ref_s** %p24, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack25 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack25, i32 0, i32 0
  %p27 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack26, i32 0, i32 0
  %28 = load %struct.ref_s*, %struct.ref_s** %p27, align 8, !tbaa !27
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 25
  %stack30 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack29, i32 0, i32 0
  %p31 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack30, i32 0, i32 0
  %30 = load %struct.ref_s*, %struct.ref_s** %p31, align 8, !tbaa !27
  %incdec.ptr32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i32 1
  store %struct.ref_s* %incdec.ptr32, %struct.ref_s** %p31, align 8, !tbaa !27
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %p35 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack34, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p35, align 8, !tbaa !27
  %arrayidx36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i64 0
  %value37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx36, i32 0, i32 1
  %intval = bitcast %union.v* %value37 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %arrayidx41 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 0
  %tas42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx41, i32 0, i32 0
  %type_attrs43 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas42, i32 0, i32 0
  store i16 2816, i16* %type_attrs43, align 2, !tbaa !22
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack44 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack45 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack44, i32 0, i32 0
  %p46 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack45, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p46, align 8, !tbaa !27
  %incdec.ptr47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 1
  store %struct.ref_s* %incdec.ptr47, %struct.ref_s** %p46, align 8, !tbaa !27
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack48 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 25
  %stack49 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack48, i32 0, i32 0
  %p50 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack49, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p50, align 8, !tbaa !27
  %arrayidx51 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i64 0
  %value52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx51, i32 0, i32 1
  %intval53 = bitcast %union.v* %value52 to i64*
  store i64 1, i64* %intval53, align 8, !tbaa !23
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack54 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack55 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack54, i32 0, i32 0
  %p56 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack55, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p56, align 8, !tbaa !27
  %arrayidx57 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i64 0
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx57, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  store i16 2816, i16* %type_attrs59, align 2, !tbaa !22
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack61 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack60, i32 0, i32 0
  %p62 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack61, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p62, align 8, !tbaa !27
  %arrayidx63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %42, i64 1
  %value64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx63, i32 0, i32 1
  %intval65 = bitcast %union.v* %value64 to i64*
  store i64 1, i64* %intval65, align 8, !tbaa !23
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack66 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 25
  %stack67 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack66, i32 0, i32 0
  %p68 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack67, i32 0, i32 0
  %44 = load %struct.ref_s*, %struct.ref_s** %p68, align 8, !tbaa !27
  %arrayidx69 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i64 1
  %tas70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx69, i32 0, i32 0
  %type_attrs71 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas70, i32 0, i32 0
  store i16 2816, i16* %type_attrs71, align 2, !tbaa !22
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack72 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 25
  %stack73 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack72, i32 0, i32 0
  %p74 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack73, i32 0, i32 0
  %46 = load %struct.ref_s*, %struct.ref_s** %p74, align 8, !tbaa !27
  %arrayidx75 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i64 2
  %value76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx75, i32 0, i32 1
  %intval77 = bitcast %union.v* %value76 to i64*
  store i64 0, i64* %intval77, align 8, !tbaa !23
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack78 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 25
  %stack79 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack78, i32 0, i32 0
  %p80 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack79, i32 0, i32 0
  %48 = load %struct.ref_s*, %struct.ref_s** %p80, align 8, !tbaa !27
  %arrayidx81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %48, i64 2
  %tas82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx81, i32 0, i32 0
  %type_attrs83 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas82, i32 0, i32 0
  store i16 2816, i16* %type_attrs83, align 2, !tbaa !22
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack84 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 25
  %stack85 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack84, i32 0, i32 0
  %p86 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack85, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p86, align 8, !tbaa !27
  %arrayidx87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 3
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 0
  %52 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs88, align 8, !tbaa !43
  %client_data89 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %52, i32 0, i32 2
  %53 = load i8*, i8** %client_data89, align 8, !tbaa !53
  %54 = bitcast i8* %53 to %struct.int_gstate_s*
  %colorspace90 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %54, i32 0, i32 5
  %arrayidx91 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace90, i32 0, i64 0
  %array92 = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx91, i32 0, i32 0
  %55 = bitcast %struct.ref_s* %arrayidx87 to i8*
  %56 = bitcast %struct.ref_s* %array92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 16, i32 8, i1 false), !tbaa.struct !24
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack93 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack94 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack93, i32 0, i32 0
  %p95 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack94, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p95, align 8, !tbaa !27
  %add.ptr96 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i64 3
  store %struct.ref_s* %add.ptr96, %struct.ref_s** %p95, align 8, !tbaa !27
  %59 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack97 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %59, i32 0, i32 25
  %stack98 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack97, i32 0, i32 0
  %p99 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack98, i32 0, i32 0
  %60 = load %struct.ref_s*, %struct.ref_s** %p99, align 8, !tbaa !27
  %incdec.ptr100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %60, i32 1
  store %struct.ref_s* %incdec.ptr100, %struct.ref_s** %p99, align 8, !tbaa !27
  %61 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack101 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %61, i32 0, i32 25
  %stack102 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack101, i32 0, i32 0
  %p103 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack102, i32 0, i32 0
  %62 = load %struct.ref_s*, %struct.ref_s** %p103, align 8, !tbaa !27
  %value104 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %62, i32 0, i32 1
  %opproc105 = bitcast %union.v* %value104 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @currentbasecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc105, align 8, !tbaa !1
  %63 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack106 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %63, i32 0, i32 25
  %stack107 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack106, i32 0, i32 0
  %p108 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack107, i32 0, i32 0
  %64 = load %struct.ref_s*, %struct.ref_s** %p108, align 8, !tbaa !27
  %tas109 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %64, i32 0, i32 0
  %type_attrs110 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas109, i32 0, i32 0
  store i16 3968, i16* %type_attrs110, align 2, !tbaa !22
  %65 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack111 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %65, i32 0, i32 25
  %stack112 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack111, i32 0, i32 0
  %p113 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack112, i32 0, i32 0
  %66 = load %struct.ref_s*, %struct.ref_s** %p113, align 8, !tbaa !27
  %tas114 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %66, i32 0, i32 0
  %rsize115 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas114, i32 0, i32 2
  store i32 0, i32* %rsize115, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.116

cleanup.116:                                      ; preds = %if.end.15, %cleanup, %if.then.3, %if.then
  %67 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #1
  %68 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #1
  %69 = load i32, i32* %retval
  ret i32 %69
}

; Function Attrs: nounwind uwtable
define internal i32 @zsethsbcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %values = alloca [3 x float], align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast [3 x float]* %values to i8*
  call void @llvm.lifetime.start(i64 12, i8* %5) #1
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %7 = bitcast [3 x float]* %values to float*
  %call = call i32 @float_params(%struct.ref_s* %6, i32 3, float* %7) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %8 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %10, 3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom
  %12 = load float, float* %arrayidx, align 4, !tbaa !20
  %cmp2 = fcmp olt float %12, 0.000000e+00
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom4 = sext i32 %13 to i64
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom4
  store float 0.000000e+00, float* %arrayidx5, align 4, !tbaa !20
  br label %if.end.13

if.else:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom6 = sext i32 %14 to i64
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom6
  %15 = load float, float* %arrayidx7, align 4, !tbaa !20
  %cmp8 = fcmp ogt float %15, 1.000000e+00
  br i1 %cmp8, label %if.then.9, label %if.end.12

if.then.9:                                        ; preds = %if.else
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom10 = sext i32 %16 to i64
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom10
  store float 1.000000e+00, float* %arrayidx11, align 4, !tbaa !20
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.9, %if.else
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then.3
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %17 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = bitcast [3 x float]* %values to float*
  %call14 = call i32 @hsb2rgb(float* %18) #7
  %19 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %19, i64 -2
  %20 = bitcast [3 x float]* %values to float*
  %call16 = call i32 @make_floats(%struct.ref_s* %arrayidx15, float* %20, i32 3) #7
  store i32 %call16, i32* %code, align 4, !tbaa !26
  %21 = load i32, i32* %code, align 4, !tbaa !26
  %cmp17 = icmp slt i32 %21, 0
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %for.end
  %22 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92

if.end.19:                                        ; preds = %for.end
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 25
  %stack20 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p21 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack20, i32 0, i32 0
  %24 = load %struct.ref_s*, %struct.ref_s** %p21, align 8, !tbaa !27
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack22 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack23 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack22, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack23, i32 0, i32 2
  %26 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i64 -5
  %cmp24 = icmp ugt %struct.ref_s* %24, %add.ptr
  br i1 %cmp24, label %if.then.25, label %if.end.32

if.then.25:                                       ; preds = %if.end.19
  %27 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 25
  %stack27 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack26, i32 0, i32 0
  %call28 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack27, i32 5) #7
  store i32 %call28, i32* %es_code_, align 4, !tbaa !26
  %29 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp29 = icmp slt i32 %29, 0
  br i1 %cmp29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.then.25
  %30 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %30, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %if.then.25
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.31, %if.then.30
  %31 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.92 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.32

if.end.32:                                        ; preds = %cleanup.cont, %if.end.19
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %p35 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack34, i32 0, i32 0
  %33 = load %struct.ref_s*, %struct.ref_s** %p35, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p35, align 8, !tbaa !27
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack36 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 25
  %stack37 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack36, i32 0, i32 0
  %p38 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack37, i32 0, i32 0
  %35 = load %struct.ref_s*, %struct.ref_s** %p38, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack39 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 25
  %stack40 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack39, i32 0, i32 0
  %p41 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack40, i32 0, i32 0
  %37 = load %struct.ref_s*, %struct.ref_s** %p41, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack42 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 25
  %stack43 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack42, i32 0, i32 0
  %p44 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack43, i32 0, i32 0
  %39 = load %struct.ref_s*, %struct.ref_s** %p44, align 8, !tbaa !27
  %tas45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas45, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack46 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 25
  %stack47 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack46, i32 0, i32 0
  %p48 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack47, i32 0, i32 0
  %41 = load %struct.ref_s*, %struct.ref_s** %p48, align 8, !tbaa !27
  %incdec.ptr49 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 1
  store %struct.ref_s* %incdec.ptr49, %struct.ref_s** %p48, align 8, !tbaa !27
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack50 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 25
  %stack51 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack50, i32 0, i32 0
  %p52 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack51, i32 0, i32 0
  %43 = load %struct.ref_s*, %struct.ref_s** %p52, align 8, !tbaa !27
  %value53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i32 0, i32 1
  %intval = bitcast %union.v* %value53 to i64*
  store i64 1, i64* %intval, align 8, !tbaa !23
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack54 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %44, i32 0, i32 25
  %stack55 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack54, i32 0, i32 0
  %p56 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack55, i32 0, i32 0
  %45 = load %struct.ref_s*, %struct.ref_s** %p56, align 8, !tbaa !27
  %tas57 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %45, i32 0, i32 0
  %type_attrs58 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas57, i32 0, i32 0
  store i16 2816, i16* %type_attrs58, align 2, !tbaa !22
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack59 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 25
  %stack60 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack59, i32 0, i32 0
  %p61 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack60, i32 0, i32 0
  %47 = load %struct.ref_s*, %struct.ref_s** %p61, align 8, !tbaa !27
  %incdec.ptr62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i32 1
  store %struct.ref_s* %incdec.ptr62, %struct.ref_s** %p61, align 8, !tbaa !27
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack63 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 25
  %stack64 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack63, i32 0, i32 0
  %p65 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack64, i32 0, i32 0
  %49 = load %struct.ref_s*, %struct.ref_s** %p65, align 8, !tbaa !27
  %value66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i32 0, i32 1
  %intval67 = bitcast %union.v* %value66 to i64*
  store i64 0, i64* %intval67, align 8, !tbaa !23
  %50 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack68 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %50, i32 0, i32 25
  %stack69 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack68, i32 0, i32 0
  %p70 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack69, i32 0, i32 0
  %51 = load %struct.ref_s*, %struct.ref_s** %p70, align 8, !tbaa !27
  %tas71 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 0, i32 0
  %type_attrs72 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas71, i32 0, i32 0
  store i16 2816, i16* %type_attrs72, align 2, !tbaa !22
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 25
  %stack74 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack73, i32 0, i32 0
  %p75 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack74, i32 0, i32 0
  %53 = load %struct.ref_s*, %struct.ref_s** %p75, align 8, !tbaa !27
  %incdec.ptr76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %53, i32 1
  store %struct.ref_s* %incdec.ptr76, %struct.ref_s** %p75, align 8, !tbaa !27
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack77 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 25
  %stack78 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack77, i32 0, i32 0
  %p79 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack78, i32 0, i32 0
  %55 = load %struct.ref_s*, %struct.ref_s** %p79, align 8, !tbaa !27
  %value80 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i32 0, i32 1
  %opproc81 = bitcast %union.v* %value80 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setdevicecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc81, align 8, !tbaa !1
  %56 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack82 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %56, i32 0, i32 25
  %stack83 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack82, i32 0, i32 0
  %p84 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack83, i32 0, i32 0
  %57 = load %struct.ref_s*, %struct.ref_s** %p84, align 8, !tbaa !27
  %tas85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %57, i32 0, i32 0
  %type_attrs86 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas85, i32 0, i32 0
  store i16 3968, i16* %type_attrs86, align 2, !tbaa !22
  %58 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack87 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %58, i32 0, i32 25
  %stack88 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack87, i32 0, i32 0
  %p89 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack88, i32 0, i32 0
  %59 = load %struct.ref_s*, %struct.ref_s** %p89, align 8, !tbaa !27
  %tas90 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %59, i32 0, i32 0
  %rsize91 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas90, i32 0, i32 2
  store i32 0, i32* %rsize91, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.92

cleanup.92:                                       ; preds = %if.end.32, %cleanup, %if.then.18, %if.then
  %60 = bitcast [3 x float]* %values to i8*
  call void @llvm.lifetime.end(i64 12, i8* %60) #1
  %61 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #1
  %62 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %62) #1
  %63 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63) #1
  %64 = load i32, i32* %retval
  ret i32 %64
}

; Function Attrs: nounwind uwtable
define internal i32 @zcurrentrgbcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call = call i32 @zcurrentcolor(%struct.gs_context_state_s* %1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %2 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %3, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

if.end:                                           ; preds = %entry
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 25
  %stack2 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack1, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 2
  %7 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i64 -7
  %cmp3 = icmp ugt %struct.ref_s* %5, %add.ptr
  br i1 %cmp3, label %if.then.4, label %if.end.11

if.then.4:                                        ; preds = %if.end
  %8 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 25
  %stack6 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack5, i32 0, i32 0
  %call7 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack6, i32 7) #7
  store i32 %call7, i32* %es_code_, align 4, !tbaa !26
  %10 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp8 = icmp slt i32 %10, 0
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.then.4
  %11 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.then.4
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %if.then.9
  %12 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.107 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.11

if.end.11:                                        ; preds = %cleanup.cont, %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack12 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 25
  %stack13 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack12, i32 0, i32 0
  %p14 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack13, i32 0, i32 0
  %14 = load %struct.ref_s*, %struct.ref_s** %p14, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %14, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p14, align 8, !tbaa !27
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack15 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 25
  %stack16 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack15, i32 0, i32 0
  %p17 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack16, i32 0, i32 0
  %16 = load %struct.ref_s*, %struct.ref_s** %p17, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %16, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack18 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 25
  %stack19 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack18, i32 0, i32 0
  %p20 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack19, i32 0, i32 0
  %18 = load %struct.ref_s*, %struct.ref_s** %p20, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %19, i32 0, i32 25
  %stack22 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack21, i32 0, i32 0
  %p23 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 0
  %20 = load %struct.ref_s*, %struct.ref_s** %p23, align 8, !tbaa !27
  %tas24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %20, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas24, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack25 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack25, i32 0, i32 0
  %p27 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack26, i32 0, i32 0
  %22 = load %struct.ref_s*, %struct.ref_s** %p27, align 8, !tbaa !27
  %incdec.ptr28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 1
  store %struct.ref_s* %incdec.ptr28, %struct.ref_s** %p27, align 8, !tbaa !27
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 25
  %stack30 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack29, i32 0, i32 0
  %p31 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack30, i32 0, i32 0
  %24 = load %struct.ref_s*, %struct.ref_s** %p31, align 8, !tbaa !27
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %24, i64 0
  %value32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %intval = bitcast %union.v* %value32 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %p35 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack34, i32 0, i32 0
  %26 = load %struct.ref_s*, %struct.ref_s** %p35, align 8, !tbaa !27
  %arrayidx36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i64 0
  %tas37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx36, i32 0, i32 0
  %type_attrs38 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas37, i32 0, i32 0
  store i16 2816, i16* %type_attrs38, align 2, !tbaa !22
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack39 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack40 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack39, i32 0, i32 0
  %p41 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack40, i32 0, i32 0
  %28 = load %struct.ref_s*, %struct.ref_s** %p41, align 8, !tbaa !27
  %incdec.ptr42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 1
  store %struct.ref_s* %incdec.ptr42, %struct.ref_s** %p41, align 8, !tbaa !27
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack43 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 25
  %stack44 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack43, i32 0, i32 0
  %p45 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack44, i32 0, i32 0
  %30 = load %struct.ref_s*, %struct.ref_s** %p45, align 8, !tbaa !27
  %arrayidx46 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i64 0
  %value47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx46, i32 0, i32 1
  %intval48 = bitcast %union.v* %value47 to i64*
  store i64 2, i64* %intval48, align 8, !tbaa !23
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack49 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack50 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack49, i32 0, i32 0
  %p51 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack50, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p51, align 8, !tbaa !27
  %arrayidx52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i64 0
  %tas53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx52, i32 0, i32 0
  %type_attrs54 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas53, i32 0, i32 0
  store i16 2816, i16* %type_attrs54, align 2, !tbaa !22
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack56 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack55, i32 0, i32 0
  %p57 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack56, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p57, align 8, !tbaa !27
  %arrayidx58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 1
  %value59 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx58, i32 0, i32 1
  %intval60 = bitcast %union.v* %value59 to i64*
  store i64 1, i64* %intval60, align 8, !tbaa !23
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack61 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack62 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack61, i32 0, i32 0
  %p63 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack62, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p63, align 8, !tbaa !27
  %arrayidx64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i64 1
  %tas65 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx64, i32 0, i32 0
  %type_attrs66 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas65, i32 0, i32 0
  store i16 2816, i16* %type_attrs66, align 2, !tbaa !22
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 25
  %stack68 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack67, i32 0, i32 0
  %p69 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack68, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p69, align 8, !tbaa !27
  %arrayidx70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i64 2
  %value71 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx70, i32 0, i32 1
  %intval72 = bitcast %union.v* %value71 to i64*
  store i64 0, i64* %intval72, align 8, !tbaa !23
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack74 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack73, i32 0, i32 0
  %p75 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack74, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p75, align 8, !tbaa !27
  %arrayidx76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i64 2
  %tas77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx76, i32 0, i32 0
  %type_attrs78 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas77, i32 0, i32 0
  store i16 2816, i16* %type_attrs78, align 2, !tbaa !22
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack79 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack80 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack79, i32 0, i32 0
  %p81 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack80, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p81, align 8, !tbaa !27
  %arrayidx82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %42, i64 3
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 0
  %44 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %44, i32 0, i32 2
  %45 = load i8*, i8** %client_data, align 8, !tbaa !53
  %46 = bitcast i8* %45 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %46, i32 0, i32 5
  %arrayidx83 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx83, i32 0, i32 0
  %47 = bitcast %struct.ref_s* %arrayidx82 to i8*
  %48 = bitcast %struct.ref_s* %array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false), !tbaa.struct !24
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack84 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 25
  %stack85 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack84, i32 0, i32 0
  %p86 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack85, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p86, align 8, !tbaa !27
  %add.ptr87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 3
  store %struct.ref_s* %add.ptr87, %struct.ref_s** %p86, align 8, !tbaa !27
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 25
  %stack89 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack88, i32 0, i32 0
  %p90 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack89, i32 0, i32 0
  %52 = load %struct.ref_s*, %struct.ref_s** %p90, align 8, !tbaa !27
  %incdec.ptr91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 1
  store %struct.ref_s* %incdec.ptr91, %struct.ref_s** %p90, align 8, !tbaa !27
  %53 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack92 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %53, i32 0, i32 25
  %stack93 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack92, i32 0, i32 0
  %p94 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack93, i32 0, i32 0
  %54 = load %struct.ref_s*, %struct.ref_s** %p94, align 8, !tbaa !27
  %value95 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1
  %opproc96 = bitcast %union.v* %value95 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @currentbasecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc96, align 8, !tbaa !1
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack97 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 25
  %stack98 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack97, i32 0, i32 0
  %p99 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack98, i32 0, i32 0
  %56 = load %struct.ref_s*, %struct.ref_s** %p99, align 8, !tbaa !27
  %tas100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 0
  %type_attrs101 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas100, i32 0, i32 0
  store i16 3968, i16* %type_attrs101, align 2, !tbaa !22
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack102 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack103 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack102, i32 0, i32 0
  %p104 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack103, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p104, align 8, !tbaa !27
  %tas105 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i32 0, i32 0
  %rsize106 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas105, i32 0, i32 2
  store i32 0, i32* %rsize106, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

cleanup.107:                                      ; preds = %if.end.11, %cleanup, %if.then
  %59 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %59) #1
  %60 = load i32, i32* %retval
  ret i32 %60
}

; Function Attrs: nounwind uwtable
define internal i32 @zsetrgbcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %values = alloca [3 x float], align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast [3 x float]* %values to i8*
  call void @llvm.lifetime.start(i64 12, i8* %5) #1
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %7 = bitcast [3 x float]* %values to float*
  %call = call i32 @float_params(%struct.ref_s* %6, i32 3, float* %7) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %8 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %10, 3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom
  %12 = load float, float* %arrayidx, align 4, !tbaa !20
  %cmp2 = fcmp olt float %12, 0.000000e+00
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom4 = sext i32 %13 to i64
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom4
  store float 0.000000e+00, float* %arrayidx5, align 4, !tbaa !20
  br label %if.end.13

if.else:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom6 = sext i32 %14 to i64
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom6
  %15 = load float, float* %arrayidx7, align 4, !tbaa !20
  %cmp8 = fcmp ogt float %15, 1.000000e+00
  br i1 %cmp8, label %if.then.9, label %if.end.12

if.then.9:                                        ; preds = %if.else
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom10 = sext i32 %16 to i64
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %values, i32 0, i64 %idxprom10
  store float 1.000000e+00, float* %arrayidx11, align 4, !tbaa !20
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.9, %if.else
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then.3
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %17 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i64 -2
  %19 = bitcast [3 x float]* %values to float*
  %call15 = call i32 @make_floats(%struct.ref_s* %arrayidx14, float* %19, i32 3) #7
  store i32 %call15, i32* %code, align 4, !tbaa !26
  %20 = load i32, i32* %code, align 4, !tbaa !26
  %cmp16 = icmp slt i32 %20, 0
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %for.end
  %21 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91

if.end.18:                                        ; preds = %for.end
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %22, i32 0, i32 25
  %stack19 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p20 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack19, i32 0, i32 0
  %23 = load %struct.ref_s*, %struct.ref_s** %p20, align 8, !tbaa !27
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 25
  %stack22 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack21, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 2
  %25 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i64 -5
  %cmp23 = icmp ugt %struct.ref_s* %23, %add.ptr
  br i1 %cmp23, label %if.then.24, label %if.end.31

if.then.24:                                       ; preds = %if.end.18
  %26 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack25 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack25, i32 0, i32 0
  %call27 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack26, i32 5) #7
  store i32 %call27, i32* %es_code_, align 4, !tbaa !26
  %28 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp28 = icmp slt i32 %28, 0
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.24
  %29 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.then.24
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.30, %if.then.29
  %30 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.91 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.31

if.end.31:                                        ; preds = %cleanup.cont, %if.end.18
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack32 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack33 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack32, i32 0, i32 0
  %p34 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack33, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p34, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p34, align 8, !tbaa !27
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack35 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack36 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack35, i32 0, i32 0
  %p37 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p37, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 25
  %stack42 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack41, i32 0, i32 0
  %p43 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack42, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p43, align 8, !tbaa !27
  %tas44 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas44, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack45 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack46 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack45, i32 0, i32 0
  %p47 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack46, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p47, align 8, !tbaa !27
  %incdec.ptr48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 1
  store %struct.ref_s* %incdec.ptr48, %struct.ref_s** %p47, align 8, !tbaa !27
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack49 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack50 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack49, i32 0, i32 0
  %p51 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack50, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p51, align 8, !tbaa !27
  %value52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %42, i32 0, i32 1
  %intval = bitcast %union.v* %value52 to i64*
  store i64 1, i64* %intval, align 8, !tbaa !23
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack53 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 25
  %stack54 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack53, i32 0, i32 0
  %p55 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack54, i32 0, i32 0
  %44 = load %struct.ref_s*, %struct.ref_s** %p55, align 8, !tbaa !27
  %tas56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i32 0, i32 0
  %type_attrs57 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas56, i32 0, i32 0
  store i16 2816, i16* %type_attrs57, align 2, !tbaa !22
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack58 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 25
  %stack59 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack58, i32 0, i32 0
  %p60 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack59, i32 0, i32 0
  %46 = load %struct.ref_s*, %struct.ref_s** %p60, align 8, !tbaa !27
  %incdec.ptr61 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i32 1
  store %struct.ref_s* %incdec.ptr61, %struct.ref_s** %p60, align 8, !tbaa !27
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack62 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 25
  %stack63 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack62, i32 0, i32 0
  %p64 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack63, i32 0, i32 0
  %48 = load %struct.ref_s*, %struct.ref_s** %p64, align 8, !tbaa !27
  %value65 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %48, i32 0, i32 1
  %intval66 = bitcast %union.v* %value65 to i64*
  store i64 0, i64* %intval66, align 8, !tbaa !23
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 25
  %stack68 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack67, i32 0, i32 0
  %p69 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack68, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p69, align 8, !tbaa !27
  %tas70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i32 0, i32 0
  %type_attrs71 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas70, i32 0, i32 0
  store i16 2816, i16* %type_attrs71, align 2, !tbaa !22
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack72 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 25
  %stack73 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack72, i32 0, i32 0
  %p74 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack73, i32 0, i32 0
  %52 = load %struct.ref_s*, %struct.ref_s** %p74, align 8, !tbaa !27
  %incdec.ptr75 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 1
  store %struct.ref_s* %incdec.ptr75, %struct.ref_s** %p74, align 8, !tbaa !27
  %53 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack76 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %53, i32 0, i32 25
  %stack77 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack76, i32 0, i32 0
  %p78 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack77, i32 0, i32 0
  %54 = load %struct.ref_s*, %struct.ref_s** %p78, align 8, !tbaa !27
  %value79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1
  %opproc80 = bitcast %union.v* %value79 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setdevicecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc80, align 8, !tbaa !1
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack81 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 25
  %stack82 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack81, i32 0, i32 0
  %p83 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack82, i32 0, i32 0
  %56 = load %struct.ref_s*, %struct.ref_s** %p83, align 8, !tbaa !27
  %tas84 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 0
  %type_attrs85 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas84, i32 0, i32 0
  store i16 3968, i16* %type_attrs85, align 2, !tbaa !22
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack86 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack87 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack86, i32 0, i32 0
  %p88 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack87, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p88, align 8, !tbaa !27
  %tas89 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i32 0, i32 0
  %rsize90 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas89, i32 0, i32 2
  store i32 0, i32* %rsize90, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91

cleanup.91:                                       ; preds = %if.end.31, %cleanup, %if.then.17, %if.then
  %59 = bitcast [3 x float]* %values to i8*
  call void @llvm.lifetime.end(i64 12, i8* %59) #1
  %60 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #1
  %61 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #1
  %62 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  %63 = load i32, i32* %retval
  ret i32 %63
}

; Function Attrs: nounwind uwtable
define internal i32 @zcurrentcmykcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call = call i32 @zcurrentcolor(%struct.gs_context_state_s* %1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %2 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %3, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

if.end:                                           ; preds = %entry
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 25
  %stack2 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack1, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 2
  %7 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i64 -7
  %cmp3 = icmp ugt %struct.ref_s* %5, %add.ptr
  br i1 %cmp3, label %if.then.4, label %if.end.11

if.then.4:                                        ; preds = %if.end
  %8 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 25
  %stack6 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack5, i32 0, i32 0
  %call7 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack6, i32 7) #7
  store i32 %call7, i32* %es_code_, align 4, !tbaa !26
  %10 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp8 = icmp slt i32 %10, 0
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.then.4
  %11 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %if.then.4
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.10, %if.then.9
  %12 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.107 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.11

if.end.11:                                        ; preds = %cleanup.cont, %if.end
  %13 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack12 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %13, i32 0, i32 25
  %stack13 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack12, i32 0, i32 0
  %p14 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack13, i32 0, i32 0
  %14 = load %struct.ref_s*, %struct.ref_s** %p14, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %14, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p14, align 8, !tbaa !27
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack15 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 25
  %stack16 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack15, i32 0, i32 0
  %p17 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack16, i32 0, i32 0
  %16 = load %struct.ref_s*, %struct.ref_s** %p17, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %16, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack18 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 25
  %stack19 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack18, i32 0, i32 0
  %p20 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack19, i32 0, i32 0
  %18 = load %struct.ref_s*, %struct.ref_s** %p20, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %19, i32 0, i32 25
  %stack22 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack21, i32 0, i32 0
  %p23 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 0
  %20 = load %struct.ref_s*, %struct.ref_s** %p23, align 8, !tbaa !27
  %tas24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %20, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas24, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack25 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack25, i32 0, i32 0
  %p27 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack26, i32 0, i32 0
  %22 = load %struct.ref_s*, %struct.ref_s** %p27, align 8, !tbaa !27
  %incdec.ptr28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i32 1
  store %struct.ref_s* %incdec.ptr28, %struct.ref_s** %p27, align 8, !tbaa !27
  %23 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %23, i32 0, i32 25
  %stack30 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack29, i32 0, i32 0
  %p31 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack30, i32 0, i32 0
  %24 = load %struct.ref_s*, %struct.ref_s** %p31, align 8, !tbaa !27
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %24, i64 0
  %value32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %intval = bitcast %union.v* %value32 to i64*
  store i64 0, i64* %intval, align 8, !tbaa !23
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %p35 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack34, i32 0, i32 0
  %26 = load %struct.ref_s*, %struct.ref_s** %p35, align 8, !tbaa !27
  %arrayidx36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i64 0
  %tas37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx36, i32 0, i32 0
  %type_attrs38 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas37, i32 0, i32 0
  store i16 2816, i16* %type_attrs38, align 2, !tbaa !22
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack39 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack40 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack39, i32 0, i32 0
  %p41 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack40, i32 0, i32 0
  %28 = load %struct.ref_s*, %struct.ref_s** %p41, align 8, !tbaa !27
  %incdec.ptr42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i32 1
  store %struct.ref_s* %incdec.ptr42, %struct.ref_s** %p41, align 8, !tbaa !27
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack43 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 25
  %stack44 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack43, i32 0, i32 0
  %p45 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack44, i32 0, i32 0
  %30 = load %struct.ref_s*, %struct.ref_s** %p45, align 8, !tbaa !27
  %arrayidx46 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i64 0
  %value47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx46, i32 0, i32 1
  %intval48 = bitcast %union.v* %value47 to i64*
  store i64 3, i64* %intval48, align 8, !tbaa !23
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack49 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack50 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack49, i32 0, i32 0
  %p51 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack50, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p51, align 8, !tbaa !27
  %arrayidx52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i64 0
  %tas53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx52, i32 0, i32 0
  %type_attrs54 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas53, i32 0, i32 0
  store i16 2816, i16* %type_attrs54, align 2, !tbaa !22
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack55 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack56 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack55, i32 0, i32 0
  %p57 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack56, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p57, align 8, !tbaa !27
  %arrayidx58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 1
  %value59 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx58, i32 0, i32 1
  %intval60 = bitcast %union.v* %value59 to i64*
  store i64 1, i64* %intval60, align 8, !tbaa !23
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack61 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack62 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack61, i32 0, i32 0
  %p63 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack62, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p63, align 8, !tbaa !27
  %arrayidx64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i64 1
  %tas65 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx64, i32 0, i32 0
  %type_attrs66 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas65, i32 0, i32 0
  store i16 2816, i16* %type_attrs66, align 2, !tbaa !22
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 25
  %stack68 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack67, i32 0, i32 0
  %p69 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack68, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p69, align 8, !tbaa !27
  %arrayidx70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i64 2
  %value71 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx70, i32 0, i32 1
  %intval72 = bitcast %union.v* %value71 to i64*
  store i64 0, i64* %intval72, align 8, !tbaa !23
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack74 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack73, i32 0, i32 0
  %p75 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack74, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p75, align 8, !tbaa !27
  %arrayidx76 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i64 2
  %tas77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx76, i32 0, i32 0
  %type_attrs78 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas77, i32 0, i32 0
  store i16 2816, i16* %type_attrs78, align 2, !tbaa !22
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack79 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack80 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack79, i32 0, i32 0
  %p81 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack80, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p81, align 8, !tbaa !27
  %arrayidx82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %42, i64 3
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 0
  %44 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %44, i32 0, i32 2
  %45 = load i8*, i8** %client_data, align 8, !tbaa !53
  %46 = bitcast i8* %45 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %46, i32 0, i32 5
  %arrayidx83 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx83, i32 0, i32 0
  %47 = bitcast %struct.ref_s* %arrayidx82 to i8*
  %48 = bitcast %struct.ref_s* %array to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false), !tbaa.struct !24
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack84 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 25
  %stack85 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack84, i32 0, i32 0
  %p86 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack85, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p86, align 8, !tbaa !27
  %add.ptr87 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 3
  store %struct.ref_s* %add.ptr87, %struct.ref_s** %p86, align 8, !tbaa !27
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 25
  %stack89 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack88, i32 0, i32 0
  %p90 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack89, i32 0, i32 0
  %52 = load %struct.ref_s*, %struct.ref_s** %p90, align 8, !tbaa !27
  %incdec.ptr91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 1
  store %struct.ref_s* %incdec.ptr91, %struct.ref_s** %p90, align 8, !tbaa !27
  %53 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack92 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %53, i32 0, i32 25
  %stack93 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack92, i32 0, i32 0
  %p94 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack93, i32 0, i32 0
  %54 = load %struct.ref_s*, %struct.ref_s** %p94, align 8, !tbaa !27
  %value95 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1
  %opproc96 = bitcast %union.v* %value95 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @currentbasecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc96, align 8, !tbaa !1
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack97 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 25
  %stack98 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack97, i32 0, i32 0
  %p99 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack98, i32 0, i32 0
  %56 = load %struct.ref_s*, %struct.ref_s** %p99, align 8, !tbaa !27
  %tas100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 0
  %type_attrs101 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas100, i32 0, i32 0
  store i16 3968, i16* %type_attrs101, align 2, !tbaa !22
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack102 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack103 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack102, i32 0, i32 0
  %p104 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack103, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p104, align 8, !tbaa !27
  %tas105 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i32 0, i32 0
  %rsize106 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas105, i32 0, i32 2
  store i32 0, i32* %rsize106, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

cleanup.107:                                      ; preds = %if.end.11, %cleanup, %if.then
  %59 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %59) #1
  %60 = load i32, i32* %retval
  ret i32 %60
}

; Function Attrs: nounwind uwtable
define internal i32 @zsetcmykcolor(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %values = alloca [4 x float], align 16
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast [4 x float]* %values to i8*
  call void @llvm.lifetime.start(i64 16, i8* %5) #1
  %6 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %7 = bitcast [4 x float]* %values to float*
  %call = call i32 @float_params(%struct.ref_s* %6, i32 4, float* %7) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %8 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %10, 4
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %values, i32 0, i64 %idxprom
  %12 = load float, float* %arrayidx, align 4, !tbaa !20
  %cmp2 = fcmp olt float %12, 0.000000e+00
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom4 = sext i32 %13 to i64
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %values, i32 0, i64 %idxprom4
  store float 0.000000e+00, float* %arrayidx5, align 4, !tbaa !20
  br label %if.end.13

if.else:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom6 = sext i32 %14 to i64
  %arrayidx7 = getelementptr inbounds [4 x float], [4 x float]* %values, i32 0, i64 %idxprom6
  %15 = load float, float* %arrayidx7, align 4, !tbaa !20
  %cmp8 = fcmp ogt float %15, 1.000000e+00
  br i1 %cmp8, label %if.then.9, label %if.end.12

if.then.9:                                        ; preds = %if.else
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom10 = sext i32 %16 to i64
  %arrayidx11 = getelementptr inbounds [4 x float], [4 x float]* %values, i32 0, i64 %idxprom10
  store float 1.000000e+00, float* %arrayidx11, align 4, !tbaa !20
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.9, %if.else
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then.3
  br label %for.inc

for.inc:                                          ; preds = %if.end.13
  %17 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i64 -3
  %19 = bitcast [4 x float]* %values to float*
  %call15 = call i32 @make_floats(%struct.ref_s* %arrayidx14, float* %19, i32 4) #7
  store i32 %call15, i32* %code, align 4, !tbaa !26
  %20 = load i32, i32* %code, align 4, !tbaa !26
  %cmp16 = icmp slt i32 %20, 0
  br i1 %cmp16, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %for.end
  %21 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91

if.end.18:                                        ; preds = %for.end
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %22, i32 0, i32 25
  %stack19 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p20 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack19, i32 0, i32 0
  %23 = load %struct.ref_s*, %struct.ref_s** %p20, align 8, !tbaa !27
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 25
  %stack22 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack21, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 2
  %25 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i64 -5
  %cmp23 = icmp ugt %struct.ref_s* %23, %add.ptr
  br i1 %cmp23, label %if.then.24, label %if.end.31

if.then.24:                                       ; preds = %if.end.18
  %26 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack25 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack25, i32 0, i32 0
  %call27 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack26, i32 5) #7
  store i32 %call27, i32* %es_code_, align 4, !tbaa !26
  %28 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp28 = icmp slt i32 %28, 0
  br i1 %cmp28, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.then.24
  %29 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.then.24
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.30, %if.then.29
  %30 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.91 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.31

if.end.31:                                        ; preds = %cleanup.cont, %if.end.18
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack32 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack33 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack32, i32 0, i32 0
  %p34 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack33, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p34, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p34, align 8, !tbaa !27
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack35 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack36 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack35, i32 0, i32 0
  %p37 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p37, align 8, !tbaa !27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 1
  %opproc = bitcast %union.v* %value to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @colour_cleanup, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack38 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack39 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack39, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p40, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3712, i16* %type_attrs, align 2, !tbaa !22
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack41 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 25
  %stack42 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack41, i32 0, i32 0
  %p43 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack42, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p43, align 8, !tbaa !27
  %tas44 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas44, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack45 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 25
  %stack46 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack45, i32 0, i32 0
  %p47 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack46, i32 0, i32 0
  %40 = load %struct.ref_s*, %struct.ref_s** %p47, align 8, !tbaa !27
  %incdec.ptr48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 1
  store %struct.ref_s* %incdec.ptr48, %struct.ref_s** %p47, align 8, !tbaa !27
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack49 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 25
  %stack50 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack49, i32 0, i32 0
  %p51 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack50, i32 0, i32 0
  %42 = load %struct.ref_s*, %struct.ref_s** %p51, align 8, !tbaa !27
  %value52 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %42, i32 0, i32 1
  %intval = bitcast %union.v* %value52 to i64*
  store i64 2, i64* %intval, align 8, !tbaa !23
  %43 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack53 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %43, i32 0, i32 25
  %stack54 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack53, i32 0, i32 0
  %p55 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack54, i32 0, i32 0
  %44 = load %struct.ref_s*, %struct.ref_s** %p55, align 8, !tbaa !27
  %tas56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i32 0, i32 0
  %type_attrs57 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas56, i32 0, i32 0
  store i16 2816, i16* %type_attrs57, align 2, !tbaa !22
  %45 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack58 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %45, i32 0, i32 25
  %stack59 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack58, i32 0, i32 0
  %p60 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack59, i32 0, i32 0
  %46 = load %struct.ref_s*, %struct.ref_s** %p60, align 8, !tbaa !27
  %incdec.ptr61 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i32 1
  store %struct.ref_s* %incdec.ptr61, %struct.ref_s** %p60, align 8, !tbaa !27
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack62 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %47, i32 0, i32 25
  %stack63 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack62, i32 0, i32 0
  %p64 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack63, i32 0, i32 0
  %48 = load %struct.ref_s*, %struct.ref_s** %p64, align 8, !tbaa !27
  %value65 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %48, i32 0, i32 1
  %intval66 = bitcast %union.v* %value65 to i64*
  store i64 0, i64* %intval66, align 8, !tbaa !23
  %49 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %49, i32 0, i32 25
  %stack68 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack67, i32 0, i32 0
  %p69 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack68, i32 0, i32 0
  %50 = load %struct.ref_s*, %struct.ref_s** %p69, align 8, !tbaa !27
  %tas70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i32 0, i32 0
  %type_attrs71 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas70, i32 0, i32 0
  store i16 2816, i16* %type_attrs71, align 2, !tbaa !22
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack72 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 25
  %stack73 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack72, i32 0, i32 0
  %p74 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack73, i32 0, i32 0
  %52 = load %struct.ref_s*, %struct.ref_s** %p74, align 8, !tbaa !27
  %incdec.ptr75 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %52, i32 1
  store %struct.ref_s* %incdec.ptr75, %struct.ref_s** %p74, align 8, !tbaa !27
  %53 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack76 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %53, i32 0, i32 25
  %stack77 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack76, i32 0, i32 0
  %p78 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack77, i32 0, i32 0
  %54 = load %struct.ref_s*, %struct.ref_s** %p78, align 8, !tbaa !27
  %value79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i32 0, i32 1
  %opproc80 = bitcast %union.v* %value79 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setdevicecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc80, align 8, !tbaa !1
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack81 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 25
  %stack82 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack81, i32 0, i32 0
  %p83 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack82, i32 0, i32 0
  %56 = load %struct.ref_s*, %struct.ref_s** %p83, align 8, !tbaa !27
  %tas84 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %56, i32 0, i32 0
  %type_attrs85 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas84, i32 0, i32 0
  store i16 3968, i16* %type_attrs85, align 2, !tbaa !22
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack86 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack87 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack86, i32 0, i32 0
  %p88 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack87, i32 0, i32 0
  %58 = load %struct.ref_s*, %struct.ref_s** %p88, align 8, !tbaa !27
  %tas89 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i32 0, i32 0
  %rsize90 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas89, i32 0, i32 2
  store i32 0, i32* %rsize90, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.91

cleanup.91:                                       ; preds = %if.end.31, %cleanup, %if.then.17, %if.then
  %59 = bitcast [4 x float]* %values to i8*
  call void @llvm.lifetime.end(i64 16, i8* %59) #1
  %60 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #1
  %61 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #1
  %62 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  %63 = load i32, i32* %retval
  ret i32 %63
}

; Function Attrs: nounwind uwtable
define internal i32 @zswapcolors(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %tmp_cs = alloca %struct.ref_colorspace_s, align 8
  %tmp_pat = alloca %struct.ref_s, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_colorspace_s* %tmp_cs to i8*
  call void @llvm.lifetime.start(i64 96, i8* %0) #1
  %1 = bitcast %struct.ref_s* %tmp_pat to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #1
  %2 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %2, i32 0, i32 0
  %3 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %3, i32 0, i32 2
  %4 = load i8*, i8** %client_data, align 8, !tbaa !53
  %5 = bitcast i8* %4 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %5, i32 0, i32 5
  %arrayidx = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %6 = bitcast %struct.ref_colorspace_s* %tmp_cs to i8*
  %7 = bitcast %struct.ref_colorspace_s* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 96, i32 8, i1 false), !tbaa.struct !77
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %8, i32 0, i32 0
  %9 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs1, align 8, !tbaa !43
  %client_data2 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %9, i32 0, i32 2
  %10 = load i8*, i8** %client_data2, align 8, !tbaa !53
  %11 = bitcast i8* %10 to %struct.int_gstate_s*
  %colorspace3 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %11, i32 0, i32 5
  %arrayidx4 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace3, i32 0, i64 0
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 0
  %13 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs5, align 8, !tbaa !43
  %client_data6 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %13, i32 0, i32 2
  %14 = load i8*, i8** %client_data6, align 8, !tbaa !53
  %15 = bitcast i8* %14 to %struct.int_gstate_s*
  %colorspace7 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %15, i32 0, i32 5
  %arrayidx8 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace7, i32 0, i64 1
  %16 = bitcast %struct.ref_colorspace_s* %arrayidx4 to i8*
  %17 = bitcast %struct.ref_colorspace_s* %arrayidx8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 96, i32 8, i1 false), !tbaa.struct !77
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 0
  %19 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs9, align 8, !tbaa !43
  %client_data10 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %19, i32 0, i32 2
  %20 = load i8*, i8** %client_data10, align 8, !tbaa !53
  %21 = bitcast i8* %20 to %struct.int_gstate_s*
  %colorspace11 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %21, i32 0, i32 5
  %arrayidx12 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace11, i32 0, i64 1
  %22 = bitcast %struct.ref_colorspace_s* %arrayidx12 to i8*
  %23 = bitcast %struct.ref_colorspace_s* %tmp_cs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 96, i32 8, i1 false), !tbaa.struct !77
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs13 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 0
  %25 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs13, align 8, !tbaa !43
  %client_data14 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %25, i32 0, i32 2
  %26 = load i8*, i8** %client_data14, align 8, !tbaa !53
  %27 = bitcast i8* %26 to %struct.int_gstate_s*
  %pattern = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %27, i32 0, i32 6
  %arrayidx15 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %pattern, i32 0, i64 0
  %28 = bitcast %struct.ref_s* %tmp_pat to i8*
  %29 = bitcast %struct.ref_s* %arrayidx15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false), !tbaa.struct !24
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs16 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 0
  %31 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs16, align 8, !tbaa !43
  %client_data17 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %31, i32 0, i32 2
  %32 = load i8*, i8** %client_data17, align 8, !tbaa !53
  %33 = bitcast i8* %32 to %struct.int_gstate_s*
  %pattern18 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %33, i32 0, i32 6
  %arrayidx19 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %pattern18, i32 0, i64 0
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs20 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 0
  %35 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs20, align 8, !tbaa !43
  %client_data21 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %35, i32 0, i32 2
  %36 = load i8*, i8** %client_data21, align 8, !tbaa !53
  %37 = bitcast i8* %36 to %struct.int_gstate_s*
  %pattern22 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %37, i32 0, i32 6
  %arrayidx23 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %pattern22, i32 0, i64 1
  %38 = bitcast %struct.ref_s* %arrayidx19 to i8*
  %39 = bitcast %struct.ref_s* %arrayidx23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false), !tbaa.struct !24
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs24 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 0
  %41 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs24, align 8, !tbaa !43
  %client_data25 = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %41, i32 0, i32 2
  %42 = load i8*, i8** %client_data25, align 8, !tbaa !53
  %43 = bitcast i8* %42 to %struct.int_gstate_s*
  %pattern26 = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %43, i32 0, i32 6
  %arrayidx27 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %pattern26, i32 0, i64 1
  %44 = bitcast %struct.ref_s* %arrayidx27 to i8*
  %45 = bitcast %struct.ref_s* %tmp_pat to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 16, i32 8, i1 false), !tbaa.struct !24
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs28 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 0
  %47 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs28, align 8, !tbaa !43
  %call = call i32 @gs_swapcolors(%struct.gs_state_s* %47) #7
  %48 = bitcast %struct.ref_s* %tmp_pat to i8*
  call void @llvm.lifetime.end(i64 16, i8* %48) #1
  %49 = bitcast %struct.ref_colorspace_s* %tmp_cs to i8*
  call void @llvm.lifetime.end(i64 96, i8* %49) #1
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @setcolorspace_cont(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %arr = alloca %struct.ref_s, align 8
  %parr = alloca %struct.ref_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %pdepth = alloca %struct.ref_s*, align 8
  %pstage = alloca %struct.ref_s*, align 8
  %pCIESubst = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %stage = alloca i32, align 4
  %cont = alloca i32, align 4
  %CIESubst = alloca i32, align 4
  %obj = alloca %struct.PS_colour_space_s*, align 8
  %es_code_ = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %arr to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s** %parr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.ref_s* %arr, %struct.ref_s** %parr, align 8, !tbaa !1
  %2 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %4 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %4, %struct.ref_s** %op, align 8, !tbaa !1
  %5 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %6, i32 0, i32 25
  %stack1 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p2 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack1, i32 0, i32 0
  %7 = load %struct.ref_s*, %struct.ref_s** %p2, align 8, !tbaa !27
  store %struct.ref_s* %7, %struct.ref_s** %ep, align 8, !tbaa !1
  %8 = bitcast %struct.ref_s** %pdepth to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast %struct.ref_s** %pstage to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = bitcast %struct.ref_s** %pCIESubst to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #1
  %11 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  %12 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %13 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %15 = bitcast i32* %cont to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  %16 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #1
  store i32 0, i32* %CIESubst, align 4, !tbaa !26
  %17 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.start(i64 8, i8* %17) #1
  %18 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i64 -3
  store %struct.ref_s* %arrayidx, %struct.ref_s** %pCIESubst, align 8, !tbaa !1
  %19 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %19, i64 -2
  store %struct.ref_s* %arrayidx3, %struct.ref_s** %pdepth, align 8, !tbaa !1
  %20 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %20, i64 -1
  store %struct.ref_s* %arrayidx4, %struct.ref_s** %pstage, align 8, !tbaa !1
  %21 = load %struct.ref_s*, %struct.ref_s** %pCIESubst, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %21, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %22 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %22 to i32
  store i32 %conv, i32* %CIESubst, align 4, !tbaa !26
  %23 = load %struct.ref_s*, %struct.ref_s** %pdepth, align 8, !tbaa !1
  %value5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %23, i32 0, i32 1
  %intval6 = bitcast %union.v* %value5 to i64*
  %24 = load i64, i64* %intval6, align 8, !tbaa !23
  %conv7 = trunc i64 %24 to i32
  store i32 %conv7, i32* %depth, align 4, !tbaa !26
  %25 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i32 0, i32 1
  %intval9 = bitcast %union.v* %value8 to i64*
  %26 = load i64, i64* %intval9, align 8, !tbaa !23
  %conv10 = trunc i64 %26 to i32
  store i32 %conv10, i32* %stage, align 4, !tbaa !26
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack11 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack12 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack11, i32 0, i32 0
  %p13 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack12, i32 0, i32 0
  %28 = load %struct.ref_s*, %struct.ref_s** %p13, align 8, !tbaa !27
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack14 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 25
  %stack15 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack14, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack15, i32 0, i32 2
  %30 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i64 -1
  %cmp = icmp ugt %struct.ref_s* %28, %add.ptr
  br i1 %cmp, label %if.then, label %if.end.22

if.then:                                          ; preds = %entry
  %31 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %31) #1
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack17 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 25
  %stack18 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack17, i32 0, i32 0
  %call = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack18, i32 1) #7
  store i32 %call, i32* %es_code_, align 4, !tbaa !26
  %33 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp19 = icmp slt i32 %33, 0
  br i1 %cmp19, label %if.then.21, label %if.end

if.then.21:                                       ; preds = %if.then
  %34 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.21
  %35 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.93 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.22

if.end.22:                                        ; preds = %cleanup.cont, %entry
  %36 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack23 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %36, i32 0, i32 25
  %stack24 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack23, i32 0, i32 0
  %p25 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack24, i32 0, i32 0
  %37 = load %struct.ref_s*, %struct.ref_s** %p25, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p25, align 8, !tbaa !27
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 25
  %stack27 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack26, i32 0, i32 0
  %p28 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack27, i32 0, i32 0
  %39 = load %struct.ref_s*, %struct.ref_s** %p28, align 8, !tbaa !27
  %value29 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i32 0, i32 1
  %opproc = bitcast %union.v* %value29 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setcolorspace_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %40 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack30 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %40, i32 0, i32 25
  %stack31 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack30, i32 0, i32 0
  %p32 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack31, i32 0, i32 0
  %41 = load %struct.ref_s*, %struct.ref_s** %p32, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3968, i16* %type_attrs, align 2, !tbaa !22
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %p35 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack34, i32 0, i32 0
  %43 = load %struct.ref_s*, %struct.ref_s** %p35, align 8, !tbaa !27
  %tas36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas36, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end.76, %if.end.22
  %44 = load i32, i32* %code, align 4, !tbaa !26
  %cmp37 = icmp eq i32 %44, 0
  br i1 %cmp37, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %45 = load i32, i32* %depth, align 4, !tbaa !26
  %tobool = icmp ne i32 %45, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %46 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %46, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %47 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %48 = bitcast %struct.ref_s* %arr to i8*
  %49 = bitcast %struct.ref_s* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %50 = load i32, i32* %i, align 4, !tbaa !26
  %51 = load i32, i32* %depth, align 4, !tbaa !26
  %cmp39 = icmp slt i32 %50, %51
  br i1 %cmp39, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %53 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %call41 = call i32 @get_space_object(%struct.gs_context_state_s* %52, %struct.ref_s* %53, %struct.PS_colour_space_s** %obj) #7
  store i32 %call41, i32* %code, align 4, !tbaa !26
  %54 = load i32, i32* %code, align 4, !tbaa !26
  %cmp42 = icmp slt i32 %54, 0
  br i1 %cmp42, label %if.then.44, label %if.end.45

if.then.44:                                       ; preds = %for.body
  %55 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %55, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93

if.end.45:                                        ; preds = %for.body
  %56 = load i32, i32* %i, align 4, !tbaa !26
  %57 = load i32, i32* %depth, align 4, !tbaa !26
  %sub = sub nsw i32 %57, 1
  %cmp46 = icmp slt i32 %56, %sub
  br i1 %cmp46, label %if.then.48, label %if.end.58

if.then.48:                                       ; preds = %if.end.45
  %58 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %alternateproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %58, i32 0, i32 3
  %59 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc, align 8, !tbaa !131
  %tobool49 = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* %59, null
  br i1 %tobool49, label %if.end.51, label %if.then.50

if.then.50:                                       ; preds = %if.then.48
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93

if.end.51:                                        ; preds = %if.then.48
  %60 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %alternateproc52 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %60, i32 0, i32 3
  %61 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc52, align 8, !tbaa !131
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %63 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %call53 = call i32 %61(%struct.gs_context_state_s* %62, %struct.ref_s* %63, %struct.ref_s** %parr, i32* %CIESubst) #7
  store i32 %call53, i32* %code, align 4, !tbaa !26
  %64 = load i32, i32* %code, align 4, !tbaa !26
  %cmp54 = icmp slt i32 %64, 0
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.51
  %65 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %65, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93

if.end.57:                                        ; preds = %if.end.51
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.end.45
  br label %for.inc

for.inc:                                          ; preds = %if.end.58
  %66 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %66, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %67 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %setproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %67, i32 0, i32 1
  %68 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32)** %setproc, align 8, !tbaa !132
  %69 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %70 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %71 = load i32, i32* %CIESubst, align 4, !tbaa !26
  %call59 = call i32 %68(%struct.gs_context_state_s* %69, %struct.ref_s* %70, i32* %stage, i32* %cont, i32 %71) #7
  store i32 %call59, i32* %code, align 4, !tbaa !26
  %72 = load i32, i32* %stage, align 4, !tbaa !26
  %conv60 = sext i32 %72 to i64
  %73 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value61 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %73, i32 0, i32 1
  %intval62 = bitcast %union.v* %value61 to i64*
  store i64 %conv60, i64* %intval62, align 8, !tbaa !23
  %74 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %tas63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %74, i32 0, i32 0
  %type_attrs64 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas63, i32 0, i32 0
  store i16 2816, i16* %type_attrs64, align 2, !tbaa !22
  %75 = load i32, i32* %code, align 4, !tbaa !26
  %cmp65 = icmp ne i32 %75, 0
  br i1 %cmp65, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %for.end
  %76 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %76, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93

if.end.68:                                        ; preds = %for.end
  %77 = load i32, i32* %cont, align 4, !tbaa !26
  %tobool69 = icmp ne i32 %77, 0
  br i1 %tobool69, label %if.end.76, label %if.then.70

if.then.70:                                       ; preds = %if.end.68
  %78 = load i32, i32* %depth, align 4, !tbaa !26
  %dec = add nsw i32 %78, -1
  store i32 %dec, i32* %depth, align 4, !tbaa !26
  %conv71 = sext i32 %dec to i64
  %79 = load %struct.ref_s*, %struct.ref_s** %pdepth, align 8, !tbaa !1
  %value72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %79, i32 0, i32 1
  %intval73 = bitcast %union.v* %value72 to i64*
  store i64 %conv71, i64* %intval73, align 8, !tbaa !23
  %80 = load %struct.ref_s*, %struct.ref_s** %pdepth, align 8, !tbaa !1
  %tas74 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %80, i32 0, i32 0
  %type_attrs75 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas74, i32 0, i32 0
  store i16 2816, i16* %type_attrs75, align 2, !tbaa !22
  store %struct.ref_s* %arr, %struct.ref_s** %parr, align 8, !tbaa !1
  br label %if.end.76

if.end.76:                                        ; preds = %if.then.70, %if.end.68
  br label %while.cond

while.end:                                        ; preds = %land.end
  %81 = load i32, i32* %code, align 4, !tbaa !26
  %cmp77 = icmp eq i32 %81, 0
  br i1 %cmp77, label %if.then.79, label %if.end.92

if.then.79:                                       ; preds = %while.end
  %82 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack80 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %82, i32 0, i32 25
  %stack81 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack80, i32 0, i32 0
  %p82 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack81, i32 0, i32 0
  %83 = load %struct.ref_s*, %struct.ref_s** %p82, align 8, !tbaa !27
  %add.ptr83 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %83, i64 -5
  store %struct.ref_s* %add.ptr83, %struct.ref_s** %p82, align 8, !tbaa !27
  %84 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack84 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %84, i32 0, i32 26
  %stack85 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack84, i32 0, i32 0
  %p86 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack85, i32 0, i32 0
  %85 = load %struct.ref_s*, %struct.ref_s** %p86, align 8, !tbaa !10
  store %struct.ref_s* %85, %struct.ref_s** %op, align 8, !tbaa !1
  %86 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %86, i32 0, i32 0
  %87 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %87, i32 0, i32 2
  %88 = load i8*, i8** %client_data, align 8, !tbaa !53
  %89 = bitcast i8* %88 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %89, i32 0, i32 5
  %arrayidx87 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx87, i32 0, i32 0
  %90 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %91 = bitcast %struct.ref_s* %array to i8*
  %92 = bitcast %struct.ref_s* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 16, i32 8, i1 false), !tbaa.struct !24
  %93 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack88 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %93, i32 0, i32 26
  %stack89 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack88, i32 0, i32 0
  %p90 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack89, i32 0, i32 0
  %94 = load %struct.ref_s*, %struct.ref_s** %p90, align 8, !tbaa !10
  %add.ptr91 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %94, i64 -1
  store %struct.ref_s* %add.ptr91, %struct.ref_s** %p90, align 8, !tbaa !10
  store i32 14, i32* %code, align 4, !tbaa !26
  br label %if.end.92

if.end.92:                                        ; preds = %if.then.79, %while.end
  %95 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %95, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.93

cleanup.93:                                       ; preds = %if.end.92, %if.then.67, %if.then.56, %if.then.50, %if.then.44, %cleanup
  %96 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.end(i64 8, i8* %96) #1
  %97 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.end(i64 4, i8* %97) #1
  %98 = bitcast i32* %cont to i8*
  call void @llvm.lifetime.end(i64 4, i8* %98) #1
  %99 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.end(i64 4, i8* %99) #1
  %100 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %100) #1
  %101 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %101) #1
  %102 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %102) #1
  %103 = bitcast %struct.ref_s** %pCIESubst to i8*
  call void @llvm.lifetime.end(i64 8, i8* %103) #1
  %104 = bitcast %struct.ref_s** %pstage to i8*
  call void @llvm.lifetime.end(i64 8, i8* %104) #1
  %105 = bitcast %struct.ref_s** %pdepth to i8*
  call void @llvm.lifetime.end(i64 8, i8* %105) #1
  %106 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %106) #1
  %107 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %107) #1
  %108 = bitcast %struct.ref_s** %parr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %108) #1
  %109 = bitcast %struct.ref_s* %arr to i8*
  call void @llvm.lifetime.end(i64 16, i8* %109) #1
  %110 = load i32, i32* %retval
  ret i32 %110
}

; Function Attrs: nounwind uwtable
define internal i32 @setcolor_cont(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %arr = alloca %struct.ref_s, align 8
  %parr = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %usealternate = alloca i32, align 4
  %stage = alloca i32, align 4
  %stack_depth = alloca i32, align 4
  %CIESubst = alloca i32, align 4
  %obj = alloca %struct.PS_colour_space_s*, align 8
  %es_code_ = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %arr to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s** %parr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.ref_s* %arr, %struct.ref_s** %parr, align 8, !tbaa !1
  %2 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %4 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  store %struct.ref_s* %4, %struct.ref_s** %ep, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  store i32 0, i32* %i, align 4, !tbaa !26
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %7 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %usealternate to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i32* %stack_depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  store i32 0, i32* %CIESubst, align 4, !tbaa !26
  %12 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %13 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i64 -3
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %14 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %14 to i32
  store i32 %conv, i32* %stack_depth, align 4, !tbaa !26
  %15 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %15, i64 -2
  %value2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx1, i32 0, i32 1
  %intval3 = bitcast %union.v* %value2 to i64*
  %16 = load i64, i64* %intval3, align 8, !tbaa !23
  %conv4 = trunc i64 %16 to i32
  store i32 %conv4, i32* %depth, align 4, !tbaa !26
  %17 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i64 -1
  %value6 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx5, i32 0, i32 1
  %intval7 = bitcast %union.v* %value6 to i64*
  %18 = load i64, i64* %intval7, align 8, !tbaa !23
  %conv8 = trunc i64 %18 to i32
  store i32 %conv8, i32* %stage, align 4, !tbaa !26
  %19 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %19, i32 0, i32 25
  %stack10 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack9, i32 0, i32 0
  %p11 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack10, i32 0, i32 0
  %20 = load %struct.ref_s*, %struct.ref_s** %p11, align 8, !tbaa !27
  %21 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack12 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %21, i32 0, i32 25
  %stack13 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack12, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack13, i32 0, i32 2
  %22 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %22, i64 -1
  %cmp = icmp ugt %struct.ref_s* %20, %add.ptr
  br i1 %cmp, label %if.then, label %if.end.20

if.then:                                          ; preds = %entry
  %23 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #1
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack15 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 25
  %stack16 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack15, i32 0, i32 0
  %call = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack16, i32 1) #7
  store i32 %call, i32* %es_code_, align 4, !tbaa !26
  %25 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp17 = icmp slt i32 %25, 0
  br i1 %cmp17, label %if.then.19, label %if.end

if.then.19:                                       ; preds = %if.then
  %26 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %26, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.19
  %27 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.99 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.20

if.end.20:                                        ; preds = %cleanup.cont, %entry
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 25
  %stack22 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack21, i32 0, i32 0
  %p23 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 0
  %29 = load %struct.ref_s*, %struct.ref_s** %p23, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %29, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p23, align 8, !tbaa !27
  %30 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack24 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %30, i32 0, i32 25
  %stack25 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack24, i32 0, i32 0
  %p26 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack25, i32 0, i32 0
  %31 = load %struct.ref_s*, %struct.ref_s** %p26, align 8, !tbaa !27
  %value27 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 0, i32 1
  %opproc = bitcast %union.v* %value27 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setcolor_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack28 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 25
  %stack29 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack28, i32 0, i32 0
  %p30 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack29, i32 0, i32 0
  %33 = load %struct.ref_s*, %struct.ref_s** %p30, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3968, i16* %type_attrs, align 2, !tbaa !22
  %34 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack31 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %34, i32 0, i32 25
  %stack32 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack31, i32 0, i32 0
  %p33 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack32, i32 0, i32 0
  %35 = load %struct.ref_s*, %struct.ref_s** %p33, align 8, !tbaa !27
  %tas34 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %35, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas34, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end.90, %if.end.20
  %36 = load i32, i32* %code, align 4, !tbaa !26
  %cmp35 = icmp eq i32 %36, 0
  br i1 %cmp35, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %37 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %38 = bitcast %struct.ref_s* %arr to i8*
  %39 = bitcast %struct.ref_s* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false), !tbaa.struct !24
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %40 = load i32, i32* %i, align 4, !tbaa !26
  %41 = load i32, i32* %depth, align 4, !tbaa !26
  %cmp37 = icmp sle i32 %40, %41
  br i1 %cmp37, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %43 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %call39 = call i32 @get_space_object(%struct.gs_context_state_s* %42, %struct.ref_s* %43, %struct.PS_colour_space_s** %obj) #7
  store i32 %call39, i32* %code, align 4, !tbaa !26
  %44 = load i32, i32* %code, align 4, !tbaa !26
  %cmp40 = icmp slt i32 %44, 0
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %for.body
  %45 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %45, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99

if.end.43:                                        ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !tbaa !26
  %47 = load i32, i32* %depth, align 4, !tbaa !26
  %cmp44 = icmp slt i32 %46, %47
  br i1 %cmp44, label %if.then.46, label %if.end.55

if.then.46:                                       ; preds = %if.end.43
  %48 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %alternateproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %48, i32 0, i32 3
  %49 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc, align 8, !tbaa !131
  %tobool = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* %49, null
  br i1 %tobool, label %if.end.48, label %if.then.47

if.then.47:                                       ; preds = %if.then.46
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99

if.end.48:                                        ; preds = %if.then.46
  %50 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %alternateproc49 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %50, i32 0, i32 3
  %51 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc49, align 8, !tbaa !131
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %53 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %call50 = call i32 %51(%struct.gs_context_state_s* %52, %struct.ref_s* %53, %struct.ref_s** %parr, i32* %CIESubst) #7
  store i32 %call50, i32* %code, align 4, !tbaa !26
  %54 = load i32, i32* %code, align 4, !tbaa !26
  %cmp51 = icmp slt i32 %54, 0
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.48
  %55 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %55, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99

if.end.54:                                        ; preds = %if.end.48
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %if.end.43
  br label %for.inc

for.inc:                                          ; preds = %if.end.55
  %56 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %56, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %57 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %runtransformproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %57, i32 0, i32 8
  %58 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)** %runtransformproc, align 8, !tbaa !133
  %tobool56 = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)* %58, null
  br i1 %tobool56, label %if.then.57, label %if.else

if.then.57:                                       ; preds = %for.end
  %59 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %runtransformproc58 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %59, i32 0, i32 8
  %60 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*, i32*, i32*)** %runtransformproc58, align 8, !tbaa !133
  %61 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %62 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %62, i32 0, i32 0
  %63 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %client_data = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %63, i32 0, i32 2
  %64 = load i8*, i8** %client_data, align 8, !tbaa !53
  %65 = bitcast i8* %64 to %struct.int_gstate_s*
  %colorspace = getelementptr inbounds %struct.int_gstate_s, %struct.int_gstate_s* %65, i32 0, i32 5
  %arrayidx59 = getelementptr inbounds [2 x %struct.ref_colorspace_s], [2 x %struct.ref_colorspace_s]* %colorspace, i32 0, i64 0
  %array = getelementptr inbounds %struct.ref_colorspace_s, %struct.ref_colorspace_s* %arrayidx59, i32 0, i32 0
  %call60 = call i32 %60(%struct.gs_context_state_s* %61, %struct.ref_s* %array, i32* %usealternate, i32* %stage, i32* %stack_depth) #7
  store i32 %call60, i32* %code, align 4, !tbaa !26
  %66 = load i32, i32* %stack_depth, align 4, !tbaa !26
  %conv61 = sext i32 %66 to i64
  %67 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %67, i64 -3
  %value63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx62, i32 0, i32 1
  %intval64 = bitcast %union.v* %value63 to i64*
  store i64 %conv61, i64* %intval64, align 8, !tbaa !23
  %68 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %68, i64 -3
  %tas66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx65, i32 0, i32 0
  %type_attrs67 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas66, i32 0, i32 0
  store i16 2816, i16* %type_attrs67, align 2, !tbaa !22
  %69 = load i32, i32* %stage, align 4, !tbaa !26
  %conv68 = sext i32 %69 to i64
  %70 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx69 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %70, i64 -1
  %value70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx69, i32 0, i32 1
  %intval71 = bitcast %union.v* %value70 to i64*
  store i64 %conv68, i64* %intval71, align 8, !tbaa !23
  %71 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %71, i64 -1
  %tas73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx72, i32 0, i32 0
  %type_attrs74 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas73, i32 0, i32 0
  store i16 2816, i16* %type_attrs74, align 2, !tbaa !22
  %72 = load i32, i32* %code, align 4, !tbaa !26
  %cmp75 = icmp ne i32 %72, 0
  br i1 %cmp75, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.then.57
  %73 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %73, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99

if.end.78:                                        ; preds = %if.then.57
  %74 = load i32, i32* %depth, align 4, !tbaa !26
  %inc79 = add nsw i32 %74, 1
  store i32 %inc79, i32* %depth, align 4, !tbaa !26
  %conv80 = sext i32 %inc79 to i64
  %75 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx81 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %75, i64 -2
  %value82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx81, i32 0, i32 1
  %intval83 = bitcast %union.v* %value82 to i64*
  store i64 %conv80, i64* %intval83, align 8, !tbaa !23
  %76 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx84 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %76, i64 -2
  %tas85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx84, i32 0, i32 0
  %type_attrs86 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas85, i32 0, i32 0
  store i16 2816, i16* %type_attrs86, align 2, !tbaa !22
  %77 = load i32, i32* %usealternate, align 4, !tbaa !26
  %tobool87 = icmp ne i32 %77, 0
  br i1 %tobool87, label %if.end.89, label %if.then.88

if.then.88:                                       ; preds = %if.end.78
  br label %while.end

if.end.89:                                        ; preds = %if.end.78
  br label %if.end.90

if.else:                                          ; preds = %for.end
  br label %while.end

if.end.90:                                        ; preds = %if.end.89
  br label %while.cond

while.end:                                        ; preds = %if.else, %if.then.88, %while.cond
  %78 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %numcomponents = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %78, i32 0, i32 4
  %79 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32*)** %numcomponents, align 8, !tbaa !96
  %80 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %81 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %call91 = call i32 %79(%struct.gs_context_state_s* %80, %struct.ref_s* %81, i32* %i) #7
  %82 = load i32, i32* %i, align 4, !tbaa !26
  %83 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %83, i32 0, i32 26
  %stack92 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p93 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack92, i32 0, i32 0
  %84 = load %struct.ref_s*, %struct.ref_s** %p93, align 8, !tbaa !10
  %idx.ext = sext i32 %82 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr94 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %84, i64 %idx.neg
  store %struct.ref_s* %add.ptr94, %struct.ref_s** %p93, align 8, !tbaa !10
  %85 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack95 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %85, i32 0, i32 25
  %stack96 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack95, i32 0, i32 0
  %p97 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack96, i32 0, i32 0
  %86 = load %struct.ref_s*, %struct.ref_s** %p97, align 8, !tbaa !27
  %add.ptr98 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %86, i64 -5
  store %struct.ref_s* %add.ptr98, %struct.ref_s** %p97, align 8, !tbaa !27
  store i32 14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.99

cleanup.99:                                       ; preds = %while.end, %if.then.77, %if.then.53, %if.then.47, %if.then.42, %cleanup
  %87 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.end(i64 8, i8* %87) #1
  %88 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  %89 = bitcast i32* %stack_depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #1
  %90 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #1
  %91 = bitcast i32* %usealternate to i8*
  call void @llvm.lifetime.end(i64 4, i8* %91) #1
  %92 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %92) #1
  %93 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %93) #1
  %94 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %94) #1
  %95 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %95) #1
  %96 = bitcast %struct.ref_s** %parr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %96) #1
  %97 = bitcast %struct.ref_s* %arr to i8*
  call void @llvm.lifetime.end(i64 16, i8* %97) #1
  %98 = load i32, i32* %retval
  ret i32 %98
}

; Function Attrs: nounwind uwtable
define internal i32 @devicencolorants_cont(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %dict = alloca %struct.ref_s, align 8
  %pdict = alloca %struct.ref_s*, align 8
  %space = alloca [2 x %struct.ref_s], align 16
  %sname = alloca %struct.ref_s, align 8
  %index = alloca i32, align 4
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %stage = alloca i32, align 4
  %ep = alloca %struct.ref_s*, align 8
  %pindex = alloca %struct.ref_s*, align 8
  %pstage = alloca %struct.ref_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %sep_name = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %dict to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s** %pdict to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.ref_s* %dict, %struct.ref_s** %pdict, align 8, !tbaa !1
  %2 = bitcast [2 x %struct.ref_s]* %space to i8*
  call void @llvm.lifetime.start(i64 32, i8* %2) #1
  %3 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = bitcast i32* %index to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %10 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  store %struct.ref_s* %10, %struct.ref_s** %ep, align 8, !tbaa !1
  %11 = bitcast %struct.ref_s** %pindex to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  %12 = bitcast %struct.ref_s** %pstage to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %13 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 26
  %stack1 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p2 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack1, i32 0, i32 0
  %15 = load %struct.ref_s*, %struct.ref_s** %p2, align 8, !tbaa !10
  store %struct.ref_s* %15, %struct.ref_s** %op, align 8, !tbaa !1
  %16 = bitcast i64* %sep_name to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #1
  %17 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i64 -2
  store %struct.ref_s* %arrayidx, %struct.ref_s** %pindex, align 8, !tbaa !1
  %18 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i64 -1
  store %struct.ref_s* %arrayidx3, %struct.ref_s** %pstage, align 8, !tbaa !1
  %19 = load %struct.ref_s*, %struct.ref_s** %pindex, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %19, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %20 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %20 to i32
  store i32 %conv, i32* %index, align 4, !tbaa !26
  %21 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %21, i32 0, i32 1
  %intval5 = bitcast %union.v* %value4 to i64*
  %22 = load i64, i64* %intval5, align 8, !tbaa !23
  %conv6 = trunc i64 %22 to i32
  store i32 %conv6, i32* %stage, align 4, !tbaa !26
  %23 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %24 = bitcast %struct.ref_s* %dict to i8*
  %25 = bitcast %struct.ref_s* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %do.body

do.body:                                          ; preds = %do.cond.163, %entry
  %26 = load i32, i32* %index, align 4, !tbaa !26
  %27 = load %struct.ref_s*, %struct.ref_s** %pdict, align 8, !tbaa !1
  %call = call i32 @dict_length(%struct.ref_s* %27) #7
  %cmp = icmp uge i32 %26, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack8 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 25
  %stack9 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack8, i32 0, i32 0
  %p10 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack9, i32 0, i32 0
  %29 = load %struct.ref_s*, %struct.ref_s** %p10, align 8, !tbaa !27
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %29, i64 -4
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p10, align 8, !tbaa !27
  store i32 14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.end:                                           ; preds = %do.body
  %30 = load i32, i32* %stage, align 4, !tbaa !26
  %cmp11 = icmp eq i32 %30, 0
  br i1 %cmp11, label %if.then.13, label %if.else.108

if.then.13:                                       ; preds = %if.end
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 0
  %32 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %call14 = call i32 @gs_gsave(%struct.gs_state_s* %32) #7
  store i32 %call14, i32* %code, align 4, !tbaa !26
  %33 = load i32, i32* %code, align 4, !tbaa !26
  %cmp15 = icmp slt i32 %33, 0
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.then.13
  %34 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %34, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.end.18:                                        ; preds = %if.then.13
  %35 = load %struct.ref_s*, %struct.ref_s** %pdict, align 8, !tbaa !1
  %36 = load i32, i32* %index, align 4, !tbaa !26
  %37 = bitcast [2 x %struct.ref_s]* %space to %struct.ref_s*
  %call19 = call i32 @dict_index_entry(%struct.ref_s* %35, i32 %36, %struct.ref_s* %37) #7
  store i32 %call19, i32* %code, align 4, !tbaa !26
  %38 = load i32, i32* %code, align 4, !tbaa !26
  %cmp20 = icmp slt i32 %38, 0
  br i1 %cmp20, label %if.then.22, label %if.end.32

if.then.22:                                       ; preds = %if.end.18
  %39 = load i32, i32* %index, align 4, !tbaa !26
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %index, align 4, !tbaa !26
  %conv23 = sext i32 %inc to i64
  %40 = load %struct.ref_s*, %struct.ref_s** %pindex, align 8, !tbaa !1
  %value24 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 0, i32 1
  %intval25 = bitcast %union.v* %value24 to i64*
  store i64 %conv23, i64* %intval25, align 8, !tbaa !23
  %41 = load %struct.ref_s*, %struct.ref_s** %pindex, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 2816, i16* %type_attrs, align 2, !tbaa !22
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs26 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 0
  %43 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs26, align 8, !tbaa !43
  %call27 = call i32 @gs_grestore(%struct.gs_state_s* %43) #7
  store i32 %call27, i32* %code, align 4, !tbaa !26
  %44 = load i32, i32* %code, align 4, !tbaa !26
  %cmp28 = icmp slt i32 %44, 0
  br i1 %cmp28, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.then.22
  %45 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %45, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.end.31:                                        ; preds = %if.then.22
  br label %do.cond.163

if.end.32:                                        ; preds = %if.end.18
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %space, i32 0, i64 1
  %call34 = call i32 @validate_spaces(%struct.gs_context_state_s* %46, %struct.ref_s* %arrayidx33, i32* %depth) #7
  store i32 %call34, i32* %code, align 4, !tbaa !26
  %47 = load i32, i32* %code, align 4, !tbaa !26
  %cmp35 = icmp slt i32 %47, 0
  br i1 %cmp35, label %if.then.37, label %if.end.50

if.then.37:                                       ; preds = %if.end.32
  %48 = load i32, i32* %index, align 4, !tbaa !26
  %inc38 = add nsw i32 %48, 1
  store i32 %inc38, i32* %index, align 4, !tbaa !26
  %conv39 = sext i32 %inc38 to i64
  %49 = load %struct.ref_s*, %struct.ref_s** %pindex, align 8, !tbaa !1
  %value40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i32 0, i32 1
  %intval41 = bitcast %union.v* %value40 to i64*
  store i64 %conv39, i64* %intval41, align 8, !tbaa !23
  %50 = load %struct.ref_s*, %struct.ref_s** %pindex, align 8, !tbaa !1
  %tas42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i32 0, i32 0
  %type_attrs43 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas42, i32 0, i32 0
  store i16 2816, i16* %type_attrs43, align 2, !tbaa !22
  %51 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs44 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %51, i32 0, i32 0
  %52 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs44, align 8, !tbaa !43
  %call45 = call i32 @gs_grestore(%struct.gs_state_s* %52) #7
  store i32 %call45, i32* %code, align 4, !tbaa !26
  %53 = load i32, i32* %code, align 4, !tbaa !26
  %cmp46 = icmp slt i32 %53, 0
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.then.37
  %54 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %54, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.end.49:                                        ; preds = %if.then.37
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.end.50:                                        ; preds = %if.end.32
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack51 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 25
  %stack52 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack51, i32 0, i32 0
  %p53 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack52, i32 0, i32 0
  %56 = load %struct.ref_s*, %struct.ref_s** %p53, align 8, !tbaa !27
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack54 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %57, i32 0, i32 25
  %stack55 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack54, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack55, i32 0, i32 2
  %58 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %58, i64 -1
  %cmp57 = icmp ugt %struct.ref_s* %56, %add.ptr56
  br i1 %cmp57, label %if.then.59, label %if.end.67

if.then.59:                                       ; preds = %if.end.50
  %59 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %59) #1
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %60, i32 0, i32 25
  %stack61 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack60, i32 0, i32 0
  %call62 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack61, i32 1) #7
  store i32 %call62, i32* %es_code_, align 4, !tbaa !26
  %61 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp63 = icmp slt i32 %61, 0
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.then.59
  %62 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %62, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.66:                                        ; preds = %if.then.59
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.66, %if.then.65
  %63 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %63) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.165 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.67

if.end.67:                                        ; preds = %cleanup.cont, %if.end.50
  br label %do.body.68

do.body.68:                                       ; preds = %if.end.67
  %64 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr69 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %64, i64 1
  store %struct.ref_s* %add.ptr69, %struct.ref_s** %op, align 8, !tbaa !1
  %65 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack70 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %65, i32 0, i32 26
  %stack71 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack70, i32 0, i32 0
  %top72 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack71, i32 0, i32 2
  %66 = load %struct.ref_s*, %struct.ref_s** %top72, align 8, !tbaa !69
  %cmp73 = icmp ugt %struct.ref_s* %add.ptr69, %66
  br i1 %cmp73, label %if.then.75, label %if.else

if.then.75:                                       ; preds = %do.body.68
  %67 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack76 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %67, i32 0, i32 26
  %stack77 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack76, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack77, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.else:                                          ; preds = %do.body.68
  %68 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %69 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack78 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %69, i32 0, i32 26
  %stack79 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack78, i32 0, i32 0
  %p80 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack79, i32 0, i32 0
  store %struct.ref_s* %68, %struct.ref_s** %p80, align 8, !tbaa !10
  br label %if.end.81

if.end.81:                                        ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end.81
  br label %do.end

do.end:                                           ; preds = %do.cond
  %70 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack82 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %70, i32 0, i32 25
  %stack83 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack82, i32 0, i32 0
  %p84 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack83, i32 0, i32 0
  %71 = load %struct.ref_s*, %struct.ref_s** %p84, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %71, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p84, align 8, !tbaa !27
  %72 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack85 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %72, i32 0, i32 25
  %stack86 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack85, i32 0, i32 0
  %p87 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack86, i32 0, i32 0
  %73 = load %struct.ref_s*, %struct.ref_s** %p87, align 8, !tbaa !27
  %value88 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %73, i32 0, i32 1
  %opproc = bitcast %union.v* %value88 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @devicencolorants_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %74 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack89 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %74, i32 0, i32 25
  %stack90 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack89, i32 0, i32 0
  %p91 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack90, i32 0, i32 0
  %75 = load %struct.ref_s*, %struct.ref_s** %p91, align 8, !tbaa !27
  %tas92 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %75, i32 0, i32 0
  %type_attrs93 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas92, i32 0, i32 0
  store i16 3968, i16* %type_attrs93, align 2, !tbaa !22
  %76 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack94 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %76, i32 0, i32 25
  %stack95 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack94, i32 0, i32 0
  %p96 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack95, i32 0, i32 0
  %77 = load %struct.ref_s*, %struct.ref_s** %p96, align 8, !tbaa !27
  %tas97 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %77, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas97, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %78 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value98 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %78, i32 0, i32 1
  %intval99 = bitcast %union.v* %value98 to i64*
  store i64 1, i64* %intval99, align 8, !tbaa !23
  %79 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %tas100 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %79, i32 0, i32 0
  %type_attrs101 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas100, i32 0, i32 0
  store i16 2816, i16* %type_attrs101, align 2, !tbaa !22
  %80 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %arrayidx102 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %space, i32 0, i64 1
  %81 = bitcast %struct.ref_s* %80 to i8*
  %82 = bitcast %struct.ref_s* %arrayidx102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 16, i32 8, i1 false), !tbaa.struct !24
  %83 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call103 = call i32 @zsetcolorspace(%struct.gs_context_state_s* %83) #7
  store i32 %call103, i32* %code, align 4, !tbaa !26
  %84 = load i32, i32* %code, align 4, !tbaa !26
  %cmp104 = icmp ne i32 %84, 0
  br i1 %cmp104, label %if.then.106, label %if.end.107

if.then.106:                                      ; preds = %do.end
  %85 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %85, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.end.107:                                       ; preds = %do.end
  br label %if.end.162

if.else.108:                                      ; preds = %if.end
  store i32 0, i32* %stage, align 4, !tbaa !26
  %86 = load %struct.ref_s*, %struct.ref_s** %pdict, align 8, !tbaa !1
  %87 = load i32, i32* %index, align 4, !tbaa !26
  %88 = bitcast [2 x %struct.ref_s]* %space to %struct.ref_s*
  %call109 = call i32 @dict_index_entry(%struct.ref_s* %86, i32 %87, %struct.ref_s* %88) #7
  store i32 %call109, i32* %code, align 4, !tbaa !26
  %89 = load i32, i32* %code, align 4, !tbaa !26
  %cmp110 = icmp eq i32 %89, 0
  br i1 %cmp110, label %if.then.112, label %if.end.138

if.then.112:                                      ; preds = %if.else.108
  %arrayidx113 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %space, i32 0, i64 0
  %tas114 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx113, i32 0, i32 0
  %type_attrs115 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas114, i32 0, i32 0
  %90 = bitcast i16* %type_attrs115 to i8*
  %arrayidx116 = getelementptr inbounds i8, i8* %90, i64 1
  %91 = load i8, i8* %arrayidx116, align 1, !tbaa !54
  %conv117 = zext i8 %91 to i32
  switch i32 %conv117, label %sw.default [
    i32 18, label %sw.bb
    i32 13, label %sw.bb.130
  ]

sw.bb:                                            ; preds = %if.then.112
  %92 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %92, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %93 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %94 = bitcast %struct.gs_ref_memory_s* %93 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %94, i32 0, i32 2
  %95 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %95, i32 0, i32 16
  %96 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %arrayidx118 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %space, i32 0, i64 0
  %call119 = call i32 @names_from_string(%struct.name_table_s* %96, %struct.ref_s* %arrayidx118, %struct.ref_s* %sname) #7
  store i32 %call119, i32* %code, align 4, !tbaa !26
  %97 = load i32, i32* %code, align 4, !tbaa !26
  %cmp120 = icmp eq i32 %97, 0
  br i1 %cmp120, label %if.then.122, label %if.end.129

if.then.122:                                      ; preds = %sw.bb
  %98 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory123 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %98, i32 0, i32 1
  %current124 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory123, i32 0, i32 0
  %99 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current124, align 8, !tbaa !55
  %100 = bitcast %struct.gs_ref_memory_s* %99 to %struct.gs_memory_s*
  %gs_lib_ctx125 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %100, i32 0, i32 2
  %101 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx125, align 8, !tbaa !74
  %gs_name_table126 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %101, i32 0, i32 16
  %102 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table126, align 8, !tbaa !75
  %call127 = call i32 @names_index(%struct.name_table_s* %102, %struct.ref_s* %sname) #7
  %conv128 = zext i32 %call127 to i64
  store i64 %conv128, i64* %sep_name, align 8, !tbaa !23
  br label %if.end.129

if.end.129:                                       ; preds = %if.then.122, %sw.bb
  br label %sw.epilog

sw.bb.130:                                        ; preds = %if.then.112
  %103 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory131 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %103, i32 0, i32 1
  %current132 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory131, i32 0, i32 0
  %104 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current132, align 8, !tbaa !55
  %105 = bitcast %struct.gs_ref_memory_s* %104 to %struct.gs_memory_s*
  %gs_lib_ctx133 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %105, i32 0, i32 2
  %106 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx133, align 8, !tbaa !74
  %gs_name_table134 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %106, i32 0, i32 16
  %107 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table134, align 8, !tbaa !75
  %arrayidx135 = getelementptr inbounds [2 x %struct.ref_s], [2 x %struct.ref_s]* %space, i32 0, i64 0
  %call136 = call i32 @names_index(%struct.name_table_s* %107, %struct.ref_s* %arrayidx135) #7
  %conv137 = zext i32 %call136 to i64
  store i64 %conv137, i64* %sep_name, align 8, !tbaa !23
  br label %sw.epilog

sw.default:                                       ; preds = %if.then.112
  store i32 -20, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.130, %if.end.129
  br label %if.end.138

if.end.138:                                       ; preds = %sw.epilog, %if.else.108
  %108 = load i32, i32* %index, align 4, !tbaa !26
  %inc139 = add nsw i32 %108, 1
  store i32 %inc139, i32* %index, align 4, !tbaa !26
  %conv140 = sext i32 %inc139 to i64
  %109 = load %struct.ref_s*, %struct.ref_s** %pindex, align 8, !tbaa !1
  %value141 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %109, i32 0, i32 1
  %intval142 = bitcast %union.v* %value141 to i64*
  store i64 %conv140, i64* %intval142, align 8, !tbaa !23
  %110 = load %struct.ref_s*, %struct.ref_s** %pindex, align 8, !tbaa !1
  %tas143 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %110, i32 0, i32 0
  %type_attrs144 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas143, i32 0, i32 0
  store i16 2816, i16* %type_attrs144, align 2, !tbaa !22
  %111 = load i32, i32* %stage, align 4, !tbaa !26
  %conv145 = sext i32 %111 to i64
  %112 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value146 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %112, i32 0, i32 1
  %intval147 = bitcast %union.v* %value146 to i64*
  store i64 %conv145, i64* %intval147, align 8, !tbaa !23
  %113 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %tas148 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %113, i32 0, i32 0
  %type_attrs149 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas148, i32 0, i32 0
  store i16 2816, i16* %type_attrs149, align 2, !tbaa !22
  %114 = load i32, i32* %code, align 4, !tbaa !26
  %cmp150 = icmp eq i32 %114, 0
  br i1 %cmp150, label %if.then.152, label %if.end.155

if.then.152:                                      ; preds = %if.end.138
  %115 = load i64, i64* %sep_name, align 8, !tbaa !23
  %116 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs153 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %116, i32 0, i32 0
  %117 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs153, align 8, !tbaa !43
  %call154 = call i32 @gs_attachattributecolorspace(i64 %115, %struct.gs_state_s* %117) #7
  br label %if.end.155

if.end.155:                                       ; preds = %if.then.152, %if.end.138
  %118 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs156 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %118, i32 0, i32 0
  %119 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs156, align 8, !tbaa !43
  %call157 = call i32 @gs_grestore(%struct.gs_state_s* %119) #7
  store i32 %call157, i32* %code, align 4, !tbaa !26
  %120 = load i32, i32* %code, align 4, !tbaa !26
  %cmp158 = icmp slt i32 %120, 0
  br i1 %cmp158, label %if.then.160, label %if.end.161

if.then.160:                                      ; preds = %if.end.155
  %121 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %121, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.165

if.end.161:                                       ; preds = %if.end.155
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161, %if.end.107
  br label %do.cond.163

do.cond.163:                                      ; preds = %if.end.162, %if.end.31
  br i1 true, label %do.body, label %do.end.164

do.end.164:                                       ; preds = %do.cond.163
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.165

cleanup.165:                                      ; preds = %do.end.164, %if.then.160, %if.then.106, %if.then.75, %cleanup, %if.end.49, %if.then.48, %if.then.30, %if.then.17, %if.then
  %122 = bitcast i64* %sep_name to i8*
  call void @llvm.lifetime.end(i64 8, i8* %122) #1
  %123 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %123) #1
  %124 = bitcast %struct.ref_s** %pstage to i8*
  call void @llvm.lifetime.end(i64 8, i8* %124) #1
  %125 = bitcast %struct.ref_s** %pindex to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %126) #1
  %127 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.end(i64 4, i8* %127) #1
  %128 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %128) #1
  %129 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %129) #1
  %130 = bitcast i32* %index to i8*
  call void @llvm.lifetime.end(i64 4, i8* %130) #1
  %131 = bitcast %struct.ref_s* %sname to i8*
  call void @llvm.lifetime.end(i64 16, i8* %131) #1
  %132 = bitcast [2 x %struct.ref_s]* %space to i8*
  call void @llvm.lifetime.end(i64 32, i8* %132) #1
  %133 = bitcast %struct.ref_s** %pdict to i8*
  call void @llvm.lifetime.end(i64 8, i8* %133) #1
  %134 = bitcast %struct.ref_s* %dict to i8*
  call void @llvm.lifetime.end(i64 16, i8* %134) #1
  %cleanup.dest.178 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.178, label %unreachable [
    i32 0, label %cleanup.cont.179
    i32 1, label %cleanup.cont.179
  ]

cleanup.cont.179:                                 ; preds = %cleanup.165, %cleanup.165
  %135 = load i32, i32* %retval
  ret i32 %135

unreachable:                                      ; preds = %cleanup.165
  unreachable
}

; Function Attrs: nounwind uwtable
define internal i32 @indexed_cont(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 25
  %stack1 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p2 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack1, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p2, align 8, !tbaa !27
  store %struct.ref_s* %5, %struct.ref_s** %ep, align 8, !tbaa !1
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i64 0
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %8 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %8 to i32
  store i32 %conv, i32* %i, align 4, !tbaa !26
  %9 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp sge i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end.33

if.then:                                          ; preds = %entry
  %10 = bitcast i32* %m to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i64 -4
  %value5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx4, i32 0, i32 1
  %intval6 = bitcast %union.v* %value5 to i64*
  %12 = load i64, i64* %intval6, align 8, !tbaa !23
  %conv7 = trunc i64 %12 to i32
  store i32 %conv7, i32* %m, align 4, !tbaa !26
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  %14 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %15 = load i32, i32* %m, align 4, !tbaa !26
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %17 = load i32, i32* %m, align 4, !tbaa !26
  %mul = mul nsw i32 %16, %17
  %idxprom = sext i32 %mul to i64
  %18 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i64 -3
  %value9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx8, i32 0, i32 1
  %pstruct = bitcast %union.v* %value9 to %struct.obj_header_s**
  %19 = load %struct.obj_header_s*, %struct.obj_header_s** %pstruct, align 8, !tbaa !1
  %20 = bitcast %struct.obj_header_s* %19 to %struct.gs_indexed_map_s*
  %values = getelementptr inbounds %struct.gs_indexed_map_s, %struct.gs_indexed_map_s* %20, i32 0, i32 4
  %21 = load float*, float** %values, align 8, !tbaa !134
  %arrayidx10 = getelementptr inbounds float, float* %21, i64 %idxprom
  %call = call i32 @float_params(%struct.ref_s* %14, i32 %15, float* %arrayidx10) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %22 = load i32, i32* %code, align 4, !tbaa !26
  %cmp11 = icmp slt i32 %22, 0
  br i1 %cmp11, label %if.then.13, label %if.end

if.then.13:                                       ; preds = %if.then
  %23 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %23, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %24 = load i32, i32* %m, align 4, !tbaa !26
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack14 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 26
  %stack15 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack14, i32 0, i32 0
  %p16 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack15, i32 0, i32 0
  %26 = load %struct.ref_s*, %struct.ref_s** %p16, align 8, !tbaa !10
  %idx.ext = sext i32 %24 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %26, i64 %idx.neg
  store %struct.ref_s* %add.ptr, %struct.ref_s** %p16, align 8, !tbaa !10
  %27 = load i32, i32* %m, align 4, !tbaa !26
  %28 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %idx.ext17 = sext i32 %27 to i64
  %idx.neg18 = sub i64 0, %idx.ext17
  %add.ptr19 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %28, i64 %idx.neg18
  store %struct.ref_s* %add.ptr19, %struct.ref_s** %op, align 8, !tbaa !1
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %30 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i64 -1
  %value21 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx20, i32 0, i32 1
  %intval22 = bitcast %union.v* %value21 to i64*
  %31 = load i64, i64* %intval22, align 8, !tbaa !23
  %conv23 = trunc i64 %31 to i32
  %cmp24 = icmp eq i32 %29, %conv23
  br i1 %cmp24, label %if.then.26, label %if.end.31

if.then.26:                                       ; preds = %if.end
  %32 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %32, i32 0, i32 25
  %stack28 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack27, i32 0, i32 0
  %p29 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack28, i32 0, i32 0
  %33 = load %struct.ref_s*, %struct.ref_s** %p29, align 8, !tbaa !27
  %add.ptr30 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %33, i64 -5
  store %struct.ref_s* %add.ptr30, %struct.ref_s** %p29, align 8, !tbaa !27
  store i32 14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %if.end
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.31, %if.then.26, %if.then.13
  %34 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %34) #1
  %35 = bitcast i32* %m to i8*
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.66 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.33

if.end.33:                                        ; preds = %cleanup.cont, %entry
  br label %do.body

do.body:                                          ; preds = %if.end.33
  %36 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr34 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i64 1
  store %struct.ref_s* %add.ptr34, %struct.ref_s** %op, align 8, !tbaa !1
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack35 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 26
  %stack36 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack35, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 2
  %38 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp37 = icmp ugt %struct.ref_s* %add.ptr34, %38
  br i1 %cmp37, label %if.then.39, label %if.else

if.then.39:                                       ; preds = %do.body
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack40 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %39, i32 0, i32 26
  %stack41 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack40, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack41, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.66

if.else:                                          ; preds = %do.body
  %40 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %41 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack42 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %41, i32 0, i32 26
  %stack43 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack42, i32 0, i32 0
  %p44 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack43, i32 0, i32 0
  store %struct.ref_s* %40, %struct.ref_s** %p44, align 8, !tbaa !10
  br label %if.end.45

if.end.45:                                        ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end.45
  br label %do.end

do.end:                                           ; preds = %do.cond
  %42 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  %conv46 = sext i32 %inc to i64
  %43 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i64 0
  %value48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx47, i32 0, i32 1
  %intval49 = bitcast %union.v* %value48 to i64*
  store i64 %conv46, i64* %intval49, align 8, !tbaa !23
  %44 = load i32, i32* %i, align 4, !tbaa !26
  %conv50 = sext i32 %44 to i64
  %45 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %value51 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %45, i32 0, i32 1
  %intval52 = bitcast %union.v* %value51 to i64*
  store i64 %conv50, i64* %intval52, align 8, !tbaa !23
  %46 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %46, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 2816, i16* %type_attrs, align 2, !tbaa !22
  %47 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %add.ptr53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %47, i64 1
  %value54 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr53, i32 0, i32 1
  %opproc = bitcast %union.v* %value54 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @indexed_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %48 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %add.ptr55 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %48, i64 1
  %tas56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr55, i32 0, i32 0
  %type_attrs57 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas56, i32 0, i32 0
  store i16 3968, i16* %type_attrs57, align 2, !tbaa !22
  %49 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %add.ptr58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i64 1
  %tas59 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %add.ptr58, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas59, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  %50 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %50, i64 2
  %51 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx61 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i64 -2
  %52 = bitcast %struct.ref_s* %arrayidx60 to i8*
  %53 = bitcast %struct.ref_s* %arrayidx61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false), !tbaa.struct !24
  %54 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %add.ptr62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %54, i64 2
  %55 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack63 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %55, i32 0, i32 25
  %stack64 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack63, i32 0, i32 0
  %p65 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack64, i32 0, i32 0
  store %struct.ref_s* %add.ptr62, %struct.ref_s** %p65, align 8, !tbaa !27
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.66

cleanup.66:                                       ; preds = %do.end, %if.then.39, %cleanup
  %56 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %57) #1
  %58 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %58) #1
  %59 = load i32, i32* %retval
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define internal i32 @setdevicecolor_cont(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %pstage = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %stage = alloca i32, align 4
  %base = alloca i32, align 4
  %es_code_ = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 25
  %stack1 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p2 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack1, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p2, align 8, !tbaa !27
  store %struct.ref_s* %5, %struct.ref_s** %ep, align 8, !tbaa !1
  %6 = bitcast %struct.ref_s** %pstage to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %8 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %base to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  store %struct.ref_s* %10, %struct.ref_s** %pstage, align 8, !tbaa !1
  %11 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i64 -1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %12 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %12 to i32
  store i32 %conv, i32* %base, align 4, !tbaa !26
  %13 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 0, i32 1
  %intval4 = bitcast %union.v* %value3 to i64*
  %14 = load i64, i64* %intval4, align 8, !tbaa !23
  %conv5 = trunc i64 %14 to i32
  store i32 %conv5, i32* %stage, align 4, !tbaa !26
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack6 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 25
  %stack7 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack6, i32 0, i32 0
  %p8 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack7, i32 0, i32 0
  %16 = load %struct.ref_s*, %struct.ref_s** %p8, align 8, !tbaa !27
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack9 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 25
  %stack10 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack9, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack10, i32 0, i32 2
  %18 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i64 -1
  %cmp = icmp ugt %struct.ref_s* %16, %add.ptr
  br i1 %cmp, label %if.then, label %if.end.17

if.then:                                          ; preds = %entry
  %19 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %19) #1
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack12 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 25
  %stack13 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack12, i32 0, i32 0
  %call = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack13, i32 1) #7
  store i32 %call, i32* %es_code_, align 4, !tbaa !26
  %21 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp14 = icmp slt i32 %21, 0
  br i1 %cmp14, label %if.then.16, label %if.end

if.then.16:                                       ; preds = %if.then
  %22 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.16
  %23 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.107 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.17

if.end.17:                                        ; preds = %cleanup.cont, %entry
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack18 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 26
  %stack19 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack18, i32 0, i32 0
  %top20 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack19, i32 0, i32 2
  %25 = load %struct.ref_s*, %struct.ref_s** %top20, align 8, !tbaa !69
  %26 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack21 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %26, i32 0, i32 26
  %stack22 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack21, i32 0, i32 0
  %p23 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack22, i32 0, i32 0
  %27 = load %struct.ref_s*, %struct.ref_s** %p23, align 8, !tbaa !10
  %sub.ptr.lhs.cast = ptrtoint %struct.ref_s* %25 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.ref_s* %27 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %cmp24 = icmp slt i64 %sub.ptr.div, 1
  br i1 %cmp24, label %if.then.26, label %if.end.29

if.then.26:                                       ; preds = %if.end.17
  %28 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack27 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %28, i32 0, i32 26
  %stack28 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack27, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack28, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

if.end.29:                                        ; preds = %if.end.17
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack30 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 25
  %stack31 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack30, i32 0, i32 0
  %p32 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack31, i32 0, i32 0
  %30 = load %struct.ref_s*, %struct.ref_s** %p32, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p32, align 8, !tbaa !27
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack33 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack34 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack33, i32 0, i32 0
  %p35 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack34, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p35, align 8, !tbaa !27
  %value36 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 0, i32 1
  %opproc = bitcast %union.v* %value36 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setdevicecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack37 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack38 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack37, i32 0, i32 0
  %p39 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack38, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p39, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3968, i16* %type_attrs, align 2, !tbaa !22
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack40 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack41 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack40, i32 0, i32 0
  %p42 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack41, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p42, align 8, !tbaa !27
  %tas43 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas43, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %do.cond.105, %if.end.29
  %37 = load i32, i32* %stage, align 4, !tbaa !26
  switch i32 %37, label %sw.epilog.104 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.87
    i32 2, label %sw.bb.99
  ]

sw.bb:                                            ; preds = %do.body
  %38 = load i32, i32* %stage, align 4, !tbaa !26
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %stage, align 4, !tbaa !26
  %conv44 = sext i32 %inc to i64
  %39 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i32 0, i32 1
  %intval46 = bitcast %union.v* %value45 to i64*
  store i64 %conv44, i64* %intval46, align 8, !tbaa !23
  %40 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %tas47 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 0, i32 0
  %type_attrs48 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas47, i32 0, i32 0
  store i16 2816, i16* %type_attrs48, align 2, !tbaa !22
  br label %do.body.49

do.body.49:                                       ; preds = %sw.bb
  %41 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i64 1
  store %struct.ref_s* %add.ptr50, %struct.ref_s** %op, align 8, !tbaa !1
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack51 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 26
  %stack52 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack51, i32 0, i32 0
  %top53 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack52, i32 0, i32 2
  %43 = load %struct.ref_s*, %struct.ref_s** %top53, align 8, !tbaa !69
  %cmp54 = icmp ugt %struct.ref_s* %add.ptr50, %43
  br i1 %cmp54, label %if.then.56, label %if.else

if.then.56:                                       ; preds = %do.body.49
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack57 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %44, i32 0, i32 26
  %stack58 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack57, i32 0, i32 0
  %requested59 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack58, i32 0, i32 7
  store i32 1, i32* %requested59, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

if.else:                                          ; preds = %do.body.49
  %45 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %46 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %46, i32 0, i32 26
  %stack61 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack60, i32 0, i32 0
  %p62 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack61, i32 0, i32 0
  store %struct.ref_s* %45, %struct.ref_s** %p62, align 8, !tbaa !10
  br label %if.end.63

if.end.63:                                        ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end.63
  br label %do.end

do.end:                                           ; preds = %do.cond
  %47 = load i32, i32* %base, align 4, !tbaa !26
  switch i32 %47, label %sw.epilog [
    i32 0, label %sw.bb.64
    i32 1, label %sw.bb.66
    i32 2, label %sw.bb.72
  ]

sw.bb.64:                                         ; preds = %do.end
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %49 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %50 = bitcast %struct.gs_ref_memory_s* %49 to %struct.gs_memory_s*
  %gs_lib_ctx = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %50, i32 0, i32 2
  %51 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx, align 8, !tbaa !74
  %gs_name_table = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %51, i32 0, i32 16
  %52 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table, align 8, !tbaa !75
  %53 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call65 = call i32 @names_enter_string(%struct.name_table_s* %52, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %struct.ref_s* %53) #7
  store i32 %call65, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.66:                                         ; preds = %do.end
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 1
  %current68 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory67, i32 0, i32 0
  %55 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current68, align 8, !tbaa !55
  %56 = bitcast %struct.gs_ref_memory_s* %55 to %struct.gs_memory_s*
  %gs_lib_ctx69 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %56, i32 0, i32 2
  %57 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx69, align 8, !tbaa !74
  %gs_name_table70 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %57, i32 0, i32 16
  %58 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table70, align 8, !tbaa !75
  %59 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call71 = call i32 @names_enter_string(%struct.name_table_s* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), %struct.ref_s* %59) #7
  store i32 %call71, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.72:                                         ; preds = %do.end
  %60 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory73 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %60, i32 0, i32 1
  %current74 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory73, i32 0, i32 0
  %61 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current74, align 8, !tbaa !55
  %62 = bitcast %struct.gs_ref_memory_s* %61 to %struct.gs_memory_s*
  %gs_lib_ctx75 = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %62, i32 0, i32 2
  %63 = load %struct.gs_lib_ctx_s*, %struct.gs_lib_ctx_s** %gs_lib_ctx75, align 8, !tbaa !74
  %gs_name_table76 = getelementptr inbounds %struct.gs_lib_ctx_s, %struct.gs_lib_ctx_s* %63, i32 0, i32 16
  %64 = load %struct.name_table_s*, %struct.name_table_s** %gs_name_table76, align 8, !tbaa !75
  %65 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call77 = call i32 @names_enter_string(%struct.name_table_s* %64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), %struct.ref_s* %65) #7
  store i32 %call77, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end, %sw.bb.72, %sw.bb.66, %sw.bb.64
  %66 = load i32, i32* %code, align 4, !tbaa !26
  %cmp78 = icmp slt i32 %66, 0
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %sw.epilog
  %67 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %67, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

if.end.81:                                        ; preds = %sw.epilog
  %68 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call82 = call i32 @zsetcolorspace(%struct.gs_context_state_s* %68) #7
  store i32 %call82, i32* %code, align 4, !tbaa !26
  %69 = load i32, i32* %code, align 4, !tbaa !26
  %cmp83 = icmp ne i32 %69, 0
  br i1 %cmp83, label %if.then.85, label %if.end.86

if.then.85:                                       ; preds = %if.end.81
  %70 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %70, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

if.end.86:                                        ; preds = %if.end.81
  br label %sw.epilog.104

sw.bb.87:                                         ; preds = %do.body
  %71 = load i32, i32* %stage, align 4, !tbaa !26
  %inc88 = add nsw i32 %71, 1
  store i32 %inc88, i32* %stage, align 4, !tbaa !26
  %conv89 = sext i32 %inc88 to i64
  %72 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %value90 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %72, i32 0, i32 1
  %intval91 = bitcast %union.v* %value90 to i64*
  store i64 %conv89, i64* %intval91, align 8, !tbaa !23
  %73 = load %struct.ref_s*, %struct.ref_s** %pstage, align 8, !tbaa !1
  %tas92 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %73, i32 0, i32 0
  %type_attrs93 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas92, i32 0, i32 0
  store i16 2816, i16* %type_attrs93, align 2, !tbaa !22
  %74 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call94 = call i32 @zsetcolor(%struct.gs_context_state_s* %74) #7
  store i32 %call94, i32* %code, align 4, !tbaa !26
  %75 = load i32, i32* %code, align 4, !tbaa !26
  %cmp95 = icmp ne i32 %75, 0
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %sw.bb.87
  %76 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %76, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

if.end.98:                                        ; preds = %sw.bb.87
  br label %sw.epilog.104

sw.bb.99:                                         ; preds = %do.body
  %77 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack100 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %77, i32 0, i32 25
  %stack101 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack100, i32 0, i32 0
  %p102 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack101, i32 0, i32 0
  %78 = load %struct.ref_s*, %struct.ref_s** %p102, align 8, !tbaa !27
  %add.ptr103 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %78, i64 -3
  store %struct.ref_s* %add.ptr103, %struct.ref_s** %p102, align 8, !tbaa !27
  store i32 14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

sw.epilog.104:                                    ; preds = %do.body, %if.end.98, %if.end.86
  br label %do.cond.105

do.cond.105:                                      ; preds = %sw.epilog.104
  br i1 true, label %do.body, label %do.end.106

do.end.106:                                       ; preds = %do.cond.105
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.107

cleanup.107:                                      ; preds = %do.end.106, %sw.bb.99, %if.then.97, %if.then.85, %if.then.80, %if.then.56, %if.then.26, %cleanup
  %79 = bitcast i32* %base to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #1
  %80 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.end(i64 4, i8* %80) #1
  %81 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %81) #1
  %82 = bitcast %struct.ref_s** %pstage to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %83 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #1
  %84 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #1
  %85 = load i32, i32* %retval
  ret i32 %85
}

; Function Attrs: nounwind uwtable
define internal i32 @currentbasecolor_cont(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %arr = alloca %struct.ref_s, align 8
  %parr = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %stage = alloca i32, align 4
  %base = alloca i32, align 4
  %cont = alloca i32, align 4
  %stack_depth = alloca i32, align 4
  %CIESubst = alloca i32, align 4
  %obj = alloca %struct.PS_colour_space_s*, align 8
  %es_code_ = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %arr to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s** %parr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.ref_s* %arr, %struct.ref_s** %parr, align 8, !tbaa !1
  %2 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %3, i32 0, i32 25
  %stack = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %4 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !27
  store %struct.ref_s* %4, %struct.ref_s** %ep, align 8, !tbaa !1
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %7 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  %9 = bitcast i32* %base to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %10 = bitcast i32* %cont to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  store i32 1, i32* %cont, align 4, !tbaa !26
  %11 = bitcast i32* %stack_depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #1
  store i32 0, i32* %stack_depth, align 4, !tbaa !26
  %12 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  store i32 0, i32* %CIESubst, align 4, !tbaa !26
  %13 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.start(i64 8, i8* %13) #1
  %14 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.ref_s, %struct.ref_s* %14, i64 -4
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %15 = load i64, i64* %intval, align 8, !tbaa !23
  %conv = trunc i64 %15 to i32
  store i32 %conv, i32* %stack_depth, align 4, !tbaa !26
  %16 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %16, i64 -3
  %value2 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx1, i32 0, i32 1
  %intval3 = bitcast %union.v* %value2 to i64*
  %17 = load i64, i64* %intval3, align 8, !tbaa !23
  %conv4 = trunc i64 %17 to i32
  store i32 %conv4, i32* %base, align 4, !tbaa !26
  %18 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %18, i64 -2
  %value6 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx5, i32 0, i32 1
  %intval7 = bitcast %union.v* %value6 to i64*
  %19 = load i64, i64* %intval7, align 8, !tbaa !23
  %conv8 = trunc i64 %19 to i32
  store i32 %conv8, i32* %depth, align 4, !tbaa !26
  %20 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %20, i64 -1
  %value10 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx9, i32 0, i32 1
  %intval11 = bitcast %union.v* %value10 to i64*
  %21 = load i64, i64* %intval11, align 8, !tbaa !23
  %conv12 = trunc i64 %21 to i32
  store i32 %conv12, i32* %stage, align 4, !tbaa !26
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack13 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %22, i32 0, i32 25
  %stack14 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack13, i32 0, i32 0
  %p15 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack14, i32 0, i32 0
  %23 = load %struct.ref_s*, %struct.ref_s** %p15, align 8, !tbaa !27
  %24 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack16 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %24, i32 0, i32 25
  %stack17 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack16, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack17, i32 0, i32 2
  %25 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %25, i64 -1
  %cmp = icmp ugt %struct.ref_s* %23, %add.ptr
  br i1 %cmp, label %if.then, label %if.end.24

if.then:                                          ; preds = %entry
  %26 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack19 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %27, i32 0, i32 25
  %stack20 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack19, i32 0, i32 0
  %call = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack20, i32 1) #7
  store i32 %call, i32* %es_code_, align 4, !tbaa !26
  %28 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp21 = icmp slt i32 %28, 0
  br i1 %cmp21, label %if.then.23, label %if.end

if.then.23:                                       ; preds = %if.then
  %29 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.23
  %30 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.96 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.24

if.end.24:                                        ; preds = %cleanup.cont, %entry
  %31 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack25 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %31, i32 0, i32 25
  %stack26 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack25, i32 0, i32 0
  %p27 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack26, i32 0, i32 0
  %32 = load %struct.ref_s*, %struct.ref_s** %p27, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p27, align 8, !tbaa !27
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack28 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack29 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack28, i32 0, i32 0
  %p30 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack29, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p30, align 8, !tbaa !27
  %value31 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i32 0, i32 1
  %opproc = bitcast %union.v* %value31 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @currentbasecolor_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %35 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack32 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %35, i32 0, i32 25
  %stack33 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack32, i32 0, i32 0
  %p34 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack33, i32 0, i32 0
  %36 = load %struct.ref_s*, %struct.ref_s** %p34, align 8, !tbaa !27
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 3968, i16* %type_attrs, align 2, !tbaa !22
  %37 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack35 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %37, i32 0, i32 25
  %stack36 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack35, i32 0, i32 0
  %p37 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack36, i32 0, i32 0
  %38 = load %struct.ref_s*, %struct.ref_s** %p37, align 8, !tbaa !27
  %tas38 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %38, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas38, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end.79, %if.end.24
  %39 = load i32, i32* %code, align 4, !tbaa !26
  %cmp39 = icmp eq i32 %39, 0
  br i1 %cmp39, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %40 = load i32, i32* %cont, align 4, !tbaa !26
  %tobool = icmp ne i32 %40, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %41 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %41, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %42 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %43 = bitcast %struct.ref_s* %arr to i8*
  %44 = bitcast %struct.ref_s* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false), !tbaa.struct !24
  store %struct.ref_s* %arr, %struct.ref_s** %parr, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %45 = load i32, i32* %i, align 4, !tbaa !26
  %46 = load i32, i32* %depth, align 4, !tbaa !26
  %cmp41 = icmp slt i32 %45, %46
  br i1 %cmp41, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %47 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %48 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %call43 = call i32 @get_space_object(%struct.gs_context_state_s* %47, %struct.ref_s* %48, %struct.PS_colour_space_s** %obj) #7
  store i32 %call43, i32* %code, align 4, !tbaa !26
  %49 = load i32, i32* %code, align 4, !tbaa !26
  %cmp44 = icmp slt i32 %49, 0
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %for.body
  %50 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %50, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96

if.end.47:                                        ; preds = %for.body
  %51 = load i32, i32* %i, align 4, !tbaa !26
  %52 = load i32, i32* %depth, align 4, !tbaa !26
  %sub = sub nsw i32 %52, 1
  %cmp48 = icmp slt i32 %51, %sub
  br i1 %cmp48, label %if.then.50, label %if.end.60

if.then.50:                                       ; preds = %if.end.47
  %53 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %alternateproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %53, i32 0, i32 3
  %54 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc, align 8, !tbaa !131
  %tobool51 = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* %54, null
  br i1 %tobool51, label %if.end.53, label %if.then.52

if.then.52:                                       ; preds = %if.then.50
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96

if.end.53:                                        ; preds = %if.then.50
  %55 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %alternateproc54 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %55, i32 0, i32 3
  %56 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc54, align 8, !tbaa !131
  %57 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %58 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %call55 = call i32 %56(%struct.gs_context_state_s* %57, %struct.ref_s* %58, %struct.ref_s** %parr, i32* %CIESubst) #7
  store i32 %call55, i32* %code, align 4, !tbaa !26
  %59 = load i32, i32* %code, align 4, !tbaa !26
  %cmp56 = icmp slt i32 %59, 0
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.53
  %60 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %60, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96

if.end.59:                                        ; preds = %if.end.53
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.end.47
  br label %for.inc

for.inc:                                          ; preds = %if.end.60
  %61 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %61, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %62 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %basecolorproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %62, i32 0, i32 7
  %63 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, i32, i32*, i32*, i32*)** %basecolorproc, align 8, !tbaa !136
  %64 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %65 = load %struct.ref_s*, %struct.ref_s** %parr, align 8, !tbaa !1
  %66 = load i32, i32* %base, align 4, !tbaa !26
  %call61 = call i32 %63(%struct.gs_context_state_s* %64, %struct.ref_s* %65, i32 %66, i32* %stage, i32* %cont, i32* %stack_depth) #7
  store i32 %call61, i32* %code, align 4, !tbaa !26
  %67 = load i32, i32* %stack_depth, align 4, !tbaa !26
  %conv62 = sext i32 %67 to i64
  %68 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %68, i64 -4
  %value64 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx63, i32 0, i32 1
  %intval65 = bitcast %union.v* %value64 to i64*
  store i64 %conv62, i64* %intval65, align 8, !tbaa !23
  %69 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %69, i64 -4
  %tas67 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx66, i32 0, i32 0
  %type_attrs68 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas67, i32 0, i32 0
  store i16 2816, i16* %type_attrs68, align 2, !tbaa !22
  %70 = load i32, i32* %stage, align 4, !tbaa !26
  %conv69 = sext i32 %70 to i64
  %71 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %71, i64 -1
  %value71 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx70, i32 0, i32 1
  %intval72 = bitcast %union.v* %value71 to i64*
  store i64 %conv69, i64* %intval72, align 8, !tbaa !23
  %72 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %72, i64 -1
  %tas74 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx73, i32 0, i32 0
  %type_attrs75 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas74, i32 0, i32 0
  store i16 2816, i16* %type_attrs75, align 2, !tbaa !22
  %73 = load i32, i32* %code, align 4, !tbaa !26
  %cmp76 = icmp ne i32 %73, 0
  br i1 %cmp76, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %for.end
  %74 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %74, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96

if.end.79:                                        ; preds = %for.end
  %75 = load i32, i32* %depth, align 4, !tbaa !26
  %inc80 = add nsw i32 %75, 1
  store i32 %inc80, i32* %depth, align 4, !tbaa !26
  %conv81 = sext i32 %inc80 to i64
  %76 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx82 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %76, i64 -2
  %value83 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx82, i32 0, i32 1
  %intval84 = bitcast %union.v* %value83 to i64*
  store i64 %conv81, i64* %intval84, align 8, !tbaa !23
  %77 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %arrayidx85 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %77, i64 -2
  %tas86 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %arrayidx85, i32 0, i32 0
  %type_attrs87 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas86, i32 0, i32 0
  store i16 2816, i16* %type_attrs87, align 2, !tbaa !22
  br label %while.cond

while.end:                                        ; preds = %land.end
  %78 = load i32, i32* %code, align 4, !tbaa !26
  %cmp88 = icmp eq i32 %78, 0
  br i1 %cmp88, label %if.then.90, label %if.end.95

if.then.90:                                       ; preds = %while.end
  %79 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack91 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %79, i32 0, i32 25
  %stack92 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack91, i32 0, i32 0
  %p93 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack92, i32 0, i32 0
  %80 = load %struct.ref_s*, %struct.ref_s** %p93, align 8, !tbaa !27
  %add.ptr94 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %80, i64 -7
  store %struct.ref_s* %add.ptr94, %struct.ref_s** %p93, align 8, !tbaa !27
  store i32 14, i32* %code, align 4, !tbaa !26
  br label %if.end.95

if.end.95:                                        ; preds = %if.then.90, %while.end
  %81 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %81, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.96

cleanup.96:                                       ; preds = %if.end.95, %if.then.78, %if.then.58, %if.then.52, %if.then.46, %cleanup
  %82 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %83 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #1
  %84 = bitcast i32* %stack_depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %84) #1
  %85 = bitcast i32* %cont to i8*
  call void @llvm.lifetime.end(i64 4, i8* %85) #1
  %86 = bitcast i32* %base to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #1
  %87 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #1
  %88 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  %89 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #1
  %90 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %90) #1
  %91 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91) #1
  %92 = bitcast %struct.ref_s** %parr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = bitcast %struct.ref_s* %arr to i8*
  call void @llvm.lifetime.end(i64 16, i8* %93) #1
  %94 = load i32, i32* %retval
  ret i32 %94
}

declare i32 @ref_stack_count(%struct.ref_stack_s*) #2

declare i32 @real_param(%struct.ref_s*, double*) #2

declare %struct.ref_s* @ref_stack_index(%struct.ref_stack_s*, i64) #2

declare void @ref_stack_pop(%struct.ref_stack_s*, i32) #2

declare i32 @dict_find_string(%struct.ref_s*, i8*, %struct.ref_s**) #2

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8*, i64) #4

declare %struct.gs_color_space_s* @gs_cspace_new_DeviceGray(%struct.gs_memory_s*) #2

declare i32 @gs_setcolorspace(%struct.gs_state_s*, %struct.gs_color_space_s*) #2

declare void @rc_decrement_only_cs(%struct.gs_color_space_s*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @setcolorspace_nosubst(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %ep = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %depth = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %es_code_ = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %4, i32 0, i32 25
  %stack1 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack, i32 0, i32 0
  %p2 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack1, i32 0, i32 0
  %5 = load %struct.ref_s*, %struct.ref_s** %p2, align 8, !tbaa !27
  store %struct.ref_s* %5, %struct.ref_s** %ep, align 8, !tbaa !1
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %8 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 26
  %stack4 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack3, i32 0, i32 0
  %bot = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack4, i32 0, i32 1
  %10 = load %struct.ref_s*, %struct.ref_s** %bot, align 8, !tbaa !68
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i64 0
  %cmp = icmp ult %struct.ref_s* %8, %add.ptr
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.80

if.end:                                           ; preds = %entry
  %11 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %12 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 1
  %13 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %13 to i32
  %cmp5 = icmp eq i32 %conv, 13
  br i1 %cmp5, label %if.end.15, label %if.then.7

if.then.7:                                        ; preds = %if.end
  %14 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %tas8 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %14, i32 0, i32 0
  %type_attrs9 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas8, i32 0, i32 0
  %15 = load i16, i16* %type_attrs9, align 2, !tbaa !22
  %conv10 = zext i16 %15 to i32
  %and = and i32 %conv10, 15360
  %cmp11 = icmp eq i32 %and, 1024
  br i1 %cmp11, label %if.end.14, label %if.then.13

if.then.13:                                       ; preds = %if.then.7
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.80

if.end.14:                                        ; preds = %if.then.7
  br label %if.end.15

if.end.15:                                        ; preds = %if.end.14, %if.end
  %16 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %17 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %call = call i32 @validate_spaces(%struct.gs_context_state_s* %16, %struct.ref_s* %17, i32* %depth) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp16 = icmp slt i32 %18, 0
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.15
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.80

if.end.19:                                        ; preds = %if.end.15
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack20 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %20, i32 0, i32 25
  %stack21 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack20, i32 0, i32 0
  %p22 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack21, i32 0, i32 0
  %21 = load %struct.ref_s*, %struct.ref_s** %p22, align 8, !tbaa !27
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack23 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %22, i32 0, i32 25
  %stack24 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack23, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack24, i32 0, i32 2
  %23 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !72
  %add.ptr25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %23, i64 -5
  %cmp26 = icmp ugt %struct.ref_s* %21, %add.ptr25
  br i1 %cmp26, label %if.then.28, label %if.end.36

if.then.28:                                       ; preds = %if.end.19
  %24 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #1
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack29 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %25, i32 0, i32 25
  %stack30 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack29, i32 0, i32 0
  %call31 = call i32 @ref_stack_extend(%struct.ref_stack_s* %stack30, i32 5) #7
  store i32 %call31, i32* %es_code_, align 4, !tbaa !26
  %26 = load i32, i32* %es_code_, align 4, !tbaa !26
  %cmp32 = icmp slt i32 %26, 0
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %if.then.28
  %27 = load i32, i32* %es_code_, align 4, !tbaa !26
  store i32 %27, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %if.then.28
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.35, %if.then.34
  %28 = bitcast i32* %es_code_ to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.80 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.36

if.end.36:                                        ; preds = %cleanup.cont, %if.end.19
  %29 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack37 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %29, i32 0, i32 25
  %stack38 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack37, i32 0, i32 0
  %p39 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack38, i32 0, i32 0
  %30 = load %struct.ref_s*, %struct.ref_s** %p39, align 8, !tbaa !27
  %add.ptr40 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %30, i64 1
  store %struct.ref_s* %add.ptr40, %struct.ref_s** %p39, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr40, %struct.ref_s** %ep, align 8, !tbaa !1
  %31 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %31, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  store i64 1, i64* %intval, align 8, !tbaa !23
  %32 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas41 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %32, i32 0, i32 0
  %type_attrs42 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas41, i32 0, i32 0
  store i16 2816, i16* %type_attrs42, align 2, !tbaa !22
  %33 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack43 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %33, i32 0, i32 25
  %stack44 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack43, i32 0, i32 0
  %p45 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack44, i32 0, i32 0
  %34 = load %struct.ref_s*, %struct.ref_s** %p45, align 8, !tbaa !27
  %add.ptr46 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %34, i64 1
  store %struct.ref_s* %add.ptr46, %struct.ref_s** %p45, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr46, %struct.ref_s** %ep, align 8, !tbaa !1
  %35 = load i32, i32* %depth, align 4, !tbaa !26
  %conv47 = sext i32 %35 to i64
  %36 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value48 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 1
  %intval49 = bitcast %union.v* %value48 to i64*
  store i64 %conv47, i64* %intval49, align 8, !tbaa !23
  %37 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas50 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %37, i32 0, i32 0
  %type_attrs51 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas50, i32 0, i32 0
  store i16 2816, i16* %type_attrs51, align 2, !tbaa !22
  %38 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack52 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %38, i32 0, i32 25
  %stack53 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack52, i32 0, i32 0
  %p54 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack53, i32 0, i32 0
  %39 = load %struct.ref_s*, %struct.ref_s** %p54, align 8, !tbaa !27
  %add.ptr55 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i64 1
  store %struct.ref_s* %add.ptr55, %struct.ref_s** %p54, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr55, %struct.ref_s** %ep, align 8, !tbaa !1
  %40 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %value56 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %40, i32 0, i32 1
  %intval57 = bitcast %union.v* %value56 to i64*
  store i64 0, i64* %intval57, align 8, !tbaa !23
  %41 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %tas58 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 0, i32 0
  %type_attrs59 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas58, i32 0, i32 0
  store i16 2816, i16* %type_attrs59, align 2, !tbaa !22
  %42 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack60 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %42, i32 0, i32 25
  %stack61 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack60, i32 0, i32 0
  %p62 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack61, i32 0, i32 0
  %43 = load %struct.ref_s*, %struct.ref_s** %p62, align 8, !tbaa !27
  %add.ptr63 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %43, i64 1
  store %struct.ref_s* %add.ptr63, %struct.ref_s** %p62, align 8, !tbaa !27
  store %struct.ref_s* %add.ptr63, %struct.ref_s** %ep, align 8, !tbaa !1
  %44 = load %struct.ref_s*, %struct.ref_s** %ep, align 8, !tbaa !1
  %45 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %46 = bitcast %struct.ref_s* %44 to i8*
  %47 = bitcast %struct.ref_s* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false), !tbaa.struct !24
  %48 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack64 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %48, i32 0, i32 25
  %stack65 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack64, i32 0, i32 0
  %p66 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack65, i32 0, i32 0
  %49 = load %struct.ref_s*, %struct.ref_s** %p66, align 8, !tbaa !27
  %incdec.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %49, i32 1
  store %struct.ref_s* %incdec.ptr, %struct.ref_s** %p66, align 8, !tbaa !27
  %50 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack67 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %50, i32 0, i32 25
  %stack68 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack67, i32 0, i32 0
  %p69 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack68, i32 0, i32 0
  %51 = load %struct.ref_s*, %struct.ref_s** %p69, align 8, !tbaa !27
  %value70 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %51, i32 0, i32 1
  %opproc = bitcast %union.v* %value70 to i32 (%struct.gs_context_state_s*)**
  store i32 (%struct.gs_context_state_s*)* @setcolorspace_cont, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %52 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack71 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %52, i32 0, i32 25
  %stack72 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack71, i32 0, i32 0
  %p73 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack72, i32 0, i32 0
  %53 = load %struct.ref_s*, %struct.ref_s** %p73, align 8, !tbaa !27
  %tas74 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %53, i32 0, i32 0
  %type_attrs75 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas74, i32 0, i32 0
  store i16 3968, i16* %type_attrs75, align 2, !tbaa !22
  %54 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %exec_stack76 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %54, i32 0, i32 25
  %stack77 = getelementptr inbounds %struct.exec_stack_s, %struct.exec_stack_s* %exec_stack76, i32 0, i32 0
  %p78 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack77, i32 0, i32 0
  %55 = load %struct.ref_s*, %struct.ref_s** %p78, align 8, !tbaa !27
  %tas79 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %55, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas79, i32 0, i32 2
  store i32 0, i32* %rsize, align 4, !tbaa !5
  store i32 5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.80

cleanup.80:                                       ; preds = %if.end.36, %cleanup, %if.then.18, %if.then.13, %if.then
  %56 = bitcast i32* %depth to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #1
  %57 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = bitcast %struct.ref_s** %ep to i8*
  call void @llvm.lifetime.end(i64 8, i8* %58) #1
  %59 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %59) #1
  %60 = load i32, i32* %retval
  ret i32 %60
}

; Function Attrs: nounwind uwtable
define internal i32 @validate_spaces(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %arr, i32* %depth) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %arr.addr = alloca %struct.ref_s*, align 8
  %depth.addr = alloca i32*, align 8
  %space = alloca %struct.ref_s, align 8
  %sp = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %obj = alloca %struct.PS_colour_space_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %arr, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  store i32* %depth, i32** %depth.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %space to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast %struct.ref_s** %sp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.ref_s* %space, %struct.ref_s** %sp, align 8, !tbaa !1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %3 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.ref_s*, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  %5 = bitcast %struct.ref_s* %space to i8*
  %6 = bitcast %struct.ref_s* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false), !tbaa.struct !24
  %7 = load i32*, i32** %depth.addr, align 8, !tbaa !1
  store i32 0, i32* %7, align 4, !tbaa !26
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %8 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %9 = load %struct.ref_s*, %struct.ref_s** %sp, align 8, !tbaa !1
  %call = call i32 @get_space_object(%struct.gs_context_state_s* %8, %struct.ref_s* %9, %struct.PS_colour_space_s** %obj) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %10, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %11 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %do.body
  %12 = load i32*, i32** %depth.addr, align 8, !tbaa !1
  %13 = load i32, i32* %12, align 4, !tbaa !26
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %12, align 4, !tbaa !26
  %14 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %validateproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %14, i32 0, i32 2
  %15 = load i32 (%struct.gs_context_state_s*, %struct.ref_s**)*, i32 (%struct.gs_context_state_s*, %struct.ref_s**)** %validateproc, align 8, !tbaa !137
  %tobool = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s**)* %15, null
  br i1 %tobool, label %if.end.2, label %if.then.1

if.then.1:                                        ; preds = %if.end
  br label %do.end

if.end.2:                                         ; preds = %if.end
  %16 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %obj, align 8, !tbaa !1
  %validateproc3 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %16, i32 0, i32 2
  %17 = load i32 (%struct.gs_context_state_s*, %struct.ref_s**)*, i32 (%struct.gs_context_state_s*, %struct.ref_s**)** %validateproc3, align 8, !tbaa !137
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call4 = call i32 %17(%struct.gs_context_state_s* %18, %struct.ref_s** %sp) #7
  store i32 %call4, i32* %code, align 4, !tbaa !26
  %19 = load i32, i32* %code, align 4, !tbaa !26
  %cmp5 = icmp slt i32 %19, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.2
  %20 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.7:                                         ; preds = %if.end.2
  br label %do.cond

do.cond:                                          ; preds = %if.end.7
  %21 = load %struct.ref_s*, %struct.ref_s** %sp, align 8, !tbaa !1
  %tobool8 = icmp ne %struct.ref_s* %21, null
  br i1 %tobool8, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %if.then.1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then.6, %if.then
  %22 = bitcast %struct.PS_colour_space_s** %obj to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  %23 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #1
  %24 = bitcast %struct.ref_s** %sp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  %25 = bitcast %struct.ref_s* %space to i8*
  call void @llvm.lifetime.end(i64 16, i8* %25) #1
  %26 = load i32, i32* %retval
  ret i32 %26
}

declare i32 @ref_stack_extend(%struct.ref_stack_s*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @rgb2hsb(float* %RGB) #0 {
entry:
  %RGB.addr = alloca float*, align 8
  %HSB = alloca [3 x float], align 4
  %v = alloca float, align 4
  %diff = alloca float, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store float* %RGB, float** %RGB.addr, align 8, !tbaa !1
  %0 = bitcast [3 x float]* %HSB to i8*
  call void @llvm.lifetime.start(i64 12, i8* %0) #1
  %1 = bitcast float* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast float* %diff to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %j, align 4, !tbaa !26
  store float 1.000000e+00, float* %v, align 4, !tbaa !20
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp slt i32 %5, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 %idxprom
  store float 0.000000e+00, float* %arrayidx, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc.18, %for.end
  %8 = load i32, i32* %i, align 4, !tbaa !26
  %cmp2 = icmp slt i32 %8, 3
  br i1 %cmp2, label %for.body.3, label %for.end.20

for.body.3:                                       ; preds = %for.cond.1
  %9 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom4 = sext i32 %9 to i64
  %10 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 %idxprom4
  %11 = load float, float* %arrayidx5, align 4, !tbaa !20
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 2
  %12 = load float, float* %arrayidx6, align 4, !tbaa !20
  %cmp7 = fcmp ogt float %11, %12
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.3
  %13 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom8 = sext i32 %13 to i64
  %14 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 %idxprom8
  %15 = load float, float* %arrayidx9, align 4, !tbaa !20
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 2
  store float %15, float* %arrayidx10, align 4, !tbaa !20
  %16 = load i32, i32* %i, align 4, !tbaa !26
  store i32 %16, i32* %j, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.3
  %17 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom11 = sext i32 %17 to i64
  %18 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 %idxprom11
  %19 = load float, float* %arrayidx12, align 4, !tbaa !20
  %20 = load float, float* %v, align 4, !tbaa !20
  %cmp13 = fcmp olt float %19, %20
  br i1 %cmp13, label %if.then.14, label %if.end.17

if.then.14:                                       ; preds = %if.end
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom15 = sext i32 %21 to i64
  %22 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds float, float* %22, i64 %idxprom15
  %23 = load float, float* %arrayidx16, align 4, !tbaa !20
  store float %23, float* %v, align 4, !tbaa !20
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.14, %if.end
  br label %for.inc.18

for.inc.18:                                       ; preds = %if.end.17
  %24 = load i32, i32* %i, align 4, !tbaa !26
  %inc19 = add nsw i32 %24, 1
  store i32 %inc19, i32* %i, align 4, !tbaa !26
  br label %for.cond.1

for.end.20:                                       ; preds = %for.cond.1
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 2
  %25 = load float, float* %arrayidx21, align 4, !tbaa !20
  %cmp22 = fcmp une float %25, 0.000000e+00
  br i1 %cmp22, label %if.then.23, label %if.end.74

if.then.23:                                       ; preds = %for.end.20
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 2
  %26 = load float, float* %arrayidx24, align 4, !tbaa !20
  %27 = load float, float* %v, align 4, !tbaa !20
  %sub = fsub float %26, %27
  store float %sub, float* %diff, align 4, !tbaa !20
  %28 = load float, float* %diff, align 4, !tbaa !20
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 2
  %29 = load float, float* %arrayidx25, align 4, !tbaa !20
  %div = fdiv float %28, %29
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 1
  store float %div, float* %arrayidx26, align 4, !tbaa !20
  %30 = load i32, i32* %j, align 4, !tbaa !26
  switch i32 %30, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.52
    i32 2, label %sw.bb.63
  ]

sw.bb:                                            ; preds = %if.then.23
  %31 = load float, float* %diff, align 4, !tbaa !20
  %tobool = fcmp une float %31, 0.000000e+00
  br i1 %tobool, label %if.then.27, label %if.else

if.then.27:                                       ; preds = %sw.bb
  %32 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds float, float* %32, i64 1
  %33 = load float, float* %arrayidx28, align 4, !tbaa !20
  %34 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds float, float* %34, i64 2
  %35 = load float, float* %arrayidx29, align 4, !tbaa !20
  %sub30 = fsub float %33, %35
  %conv = fpext float %sub30 to double
  %36 = load float, float* %diff, align 4, !tbaa !20
  %conv31 = fpext float %36 to double
  %mul = fmul double 6.000000e+00, %conv31
  %div32 = fdiv double %conv, %mul
  %37 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds float, float* %37, i64 2
  %38 = load float, float* %arrayidx33, align 4, !tbaa !20
  %39 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds float, float* %39, i64 1
  %40 = load float, float* %arrayidx34, align 4, !tbaa !20
  %cmp35 = fcmp ogt float %38, %40
  %cond = select i1 %cmp35, double 1.000000e+00, double 0.000000e+00
  %add = fadd double %div32, %cond
  %conv37 = fptrunc double %add to float
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 0
  store float %conv37, float* %arrayidx38, align 4, !tbaa !20
  br label %if.end.51

if.else:                                          ; preds = %sw.bb
  %41 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds float, float* %41, i64 1
  %42 = load float, float* %arrayidx39, align 4, !tbaa !20
  %43 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds float, float* %43, i64 2
  %44 = load float, float* %arrayidx40, align 4, !tbaa !20
  %sub41 = fsub float %42, %44
  %conv42 = fpext float %sub41 to double
  %45 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds float, float* %45, i64 2
  %46 = load float, float* %arrayidx43, align 4, !tbaa !20
  %47 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds float, float* %47, i64 1
  %48 = load float, float* %arrayidx44, align 4, !tbaa !20
  %cmp45 = fcmp ogt float %46, %48
  %cond47 = select i1 %cmp45, double 1.000000e+00, double 0.000000e+00
  %add48 = fadd double %conv42, %cond47
  %conv49 = fptrunc double %add48 to float
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 0
  store float %conv49, float* %arrayidx50, align 4, !tbaa !20
  br label %if.end.51

if.end.51:                                        ; preds = %if.else, %if.then.27
  br label %sw.epilog

sw.bb.52:                                         ; preds = %if.then.23
  %49 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds float, float* %49, i64 2
  %50 = load float, float* %arrayidx53, align 4, !tbaa !20
  %51 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx54 = getelementptr inbounds float, float* %51, i64 0
  %52 = load float, float* %arrayidx54, align 4, !tbaa !20
  %sub55 = fsub float %50, %52
  %conv56 = fpext float %sub55 to double
  %53 = load float, float* %diff, align 4, !tbaa !20
  %conv57 = fpext float %53 to double
  %mul58 = fmul double 6.000000e+00, %conv57
  %div59 = fdiv double %conv56, %mul58
  %add60 = fadd double 0x3FD5555555555555, %div59
  %conv61 = fptrunc double %add60 to float
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 0
  store float %conv61, float* %arrayidx62, align 4, !tbaa !20
  br label %sw.epilog

sw.bb.63:                                         ; preds = %if.then.23
  %54 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds float, float* %54, i64 0
  %55 = load float, float* %arrayidx64, align 4, !tbaa !20
  %56 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds float, float* %56, i64 1
  %57 = load float, float* %arrayidx65, align 4, !tbaa !20
  %sub66 = fsub float %55, %57
  %conv67 = fpext float %sub66 to double
  %58 = load float, float* %diff, align 4, !tbaa !20
  %conv68 = fpext float %58 to double
  %mul69 = fmul double 6.000000e+00, %conv68
  %div70 = fdiv double %conv67, %mul69
  %add71 = fadd double 0x3FE5555555555555, %div70
  %conv72 = fptrunc double %add71 to float
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 0
  store float %conv72, float* %arrayidx73, align 4, !tbaa !20
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.23, %sw.bb.63, %sw.bb.52, %if.end.51
  br label %if.end.74

if.end.74:                                        ; preds = %sw.epilog, %for.end.20
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond.75

for.cond.75:                                      ; preds = %for.inc.99, %if.end.74
  %59 = load i32, i32* %i, align 4, !tbaa !26
  %cmp76 = icmp slt i32 %59, 3
  br i1 %cmp76, label %for.body.78, label %for.end.101

for.body.78:                                      ; preds = %for.cond.75
  %60 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom79 = sext i32 %60 to i64
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 %idxprom79
  %61 = load float, float* %arrayidx80, align 4, !tbaa !20
  %cmp81 = fcmp olt float %61, 0.000000e+00
  br i1 %cmp81, label %if.then.83, label %if.end.86

if.then.83:                                       ; preds = %for.body.78
  %62 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom84 = sext i32 %62 to i64
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 %idxprom84
  store float 0.000000e+00, float* %arrayidx85, align 4, !tbaa !20
  br label %if.end.86

if.end.86:                                        ; preds = %if.then.83, %for.body.78
  %63 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom87 = sext i32 %63 to i64
  %64 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx88 = getelementptr inbounds float, float* %64, i64 %idxprom87
  %65 = load float, float* %arrayidx88, align 4, !tbaa !20
  %cmp89 = fcmp ogt float %65, 1.000000e+00
  br i1 %cmp89, label %if.then.91, label %if.end.94

if.then.91:                                       ; preds = %if.end.86
  %66 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom92 = sext i32 %66 to i64
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 %idxprom92
  store float 1.000000e+00, float* %arrayidx93, align 4, !tbaa !20
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.91, %if.end.86
  %67 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom95 = sext i32 %67 to i64
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %HSB, i32 0, i64 %idxprom95
  %68 = load float, float* %arrayidx96, align 4, !tbaa !20
  %69 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom97 = sext i32 %69 to i64
  %70 = load float*, float** %RGB.addr, align 8, !tbaa !1
  %arrayidx98 = getelementptr inbounds float, float* %70, i64 %idxprom97
  store float %68, float* %arrayidx98, align 4, !tbaa !20
  br label %for.inc.99

for.inc.99:                                       ; preds = %if.end.94
  %71 = load i32, i32* %i, align 4, !tbaa !26
  %inc100 = add nsw i32 %71, 1
  store i32 %inc100, i32* %i, align 4, !tbaa !26
  br label %for.cond.75

for.end.101:                                      ; preds = %for.cond.75
  %72 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #1
  %73 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %73) #1
  %74 = bitcast float* %diff to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #1
  %75 = bitcast float* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %75) #1
  %76 = bitcast [3 x float]* %HSB to i8*
  call void @llvm.lifetime.end(i64 12, i8* %76) #1
  ret i32 0
}

declare i32 @gs_setcolor(%struct.gs_state_s*, %struct.gs_client_color_s*) #2

declare %struct.gs_color_space_s* @gs_cspace_new_DeviceRGB(%struct.gs_memory_s*) #2

declare %struct.gs_color_space_s* @gs_currentcolorspace(%struct.gs_state_s*) #2

declare %struct.gs_color_space_s* @gs_cspace_new_DeviceCMYK(%struct.gs_memory_s*) #2

declare i32 @cieaspace(%struct.gs_context_state_s*, %struct.ref_s*, i64) #2

declare i32 @check_type_failed(%struct.ref_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @checkWhitePoint(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %value = alloca [3 x float], align 4
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [3 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 12, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.ref_s*, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %4 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp slt i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then.4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp2 = icmp eq i32 %conv, 14
  br i1 %cmp2, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  store i32 -21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %lor.lhs.false
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas6 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs7 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas6, i32 0, i32 0
  %11 = load i16, i16* %type_attrs7, align 2, !tbaa !22
  %conv8 = zext i16 %11 to i32
  %and = and i32 %conv8, 15360
  %cmp9 = icmp eq i32 %and, 1024
  br i1 %cmp9, label %if.end.12, label %if.then.11

if.then.11:                                       ; preds = %if.end.5
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.5
  %12 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas13 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas13, i32 0, i32 2
  %13 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp14 = icmp ne i32 %13, 3
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.12
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.12
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %16 = bitcast %struct.gs_ref_memory_s* %15 to %struct.gs_memory_s*
  %17 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i32 0
  %call18 = call i32 @get_cie_param_array(%struct.gs_memory_s* %16, %struct.ref_s* %17, i32 3, float* %arraydecay) #7
  store i32 %call18, i32* %code, align 4, !tbaa !26
  %18 = load i32, i32* %code, align 4, !tbaa !26
  %cmp19 = icmp slt i32 %18, 0
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.end.17
  %19 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.22:                                        ; preds = %if.end.17
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 0
  %20 = load float, float* %arrayidx23, align 4, !tbaa !20
  %cmp24 = fcmp olt float %20, 0.000000e+00
  br i1 %cmp24, label %if.then.34, label %lor.lhs.false.26

lor.lhs.false.26:                                 ; preds = %if.end.22
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 1
  %21 = load float, float* %arrayidx27, align 4, !tbaa !20
  %cmp28 = fcmp une float %21, 1.000000e+00
  br i1 %cmp28, label %if.then.34, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %lor.lhs.false.26
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 2
  %22 = load float, float* %arrayidx31, align 4, !tbaa !20
  %cmp32 = fcmp olt float %22, 0.000000e+00
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %lor.lhs.false.30, %lor.lhs.false.26, %if.end.22
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.35:                                        ; preds = %lor.lhs.false.30
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.35, %if.then.34, %if.then.21, %if.then.16, %if.then.11, %if.then.4, %if.then
  %23 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #1
  %24 = bitcast [3 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 12, i8* %24) #1
  %25 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = load i32, i32* %retval
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @get_cie_param_array(%struct.gs_memory_s* %mem, %struct.ref_s* %src, i32 %n, float* %dst) #0 {
entry:
  %retval = alloca i32, align 4
  %mem.addr = alloca %struct.gs_memory_s*, align 8
  %src.addr = alloca %struct.ref_s*, align 8
  %n.addr = alloca i32, align 4
  %dst.addr = alloca float*, align 8
  %valref = alloca %struct.ref_s, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_memory_s* %mem, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  store %struct.ref_s* %src, %struct.ref_s** %src.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !26
  store float* %dst, float** %dst.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #1
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !tbaa !26
  %4 = load i32, i32* %n.addr, align 4, !tbaa !26
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %struct.gs_memory_s*, %struct.gs_memory_s** %mem.addr, align 8, !tbaa !1
  %6 = load %struct.ref_s*, %struct.ref_s** %src.addr, align 8, !tbaa !1
  %7 = load i32, i32* %i, align 4, !tbaa !26
  %conv = sext i32 %7 to i64
  %call = call i32 @array_get(%struct.gs_memory_s* %5, %struct.ref_s* %6, i64 %conv, %struct.ref_s* %valref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %8 = load i32, i32* %code, align 4, !tbaa !26
  %cmp1 = icmp slt i32 %8, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %9 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.body
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %10 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 1
  %11 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv3 = zext i8 %11 to i32
  %cmp4 = icmp eq i32 %conv3, 11
  br i1 %cmp4, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.end
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval = bitcast %union.v* %value to i64*
  %12 = load i64, i64* %intval, align 8, !tbaa !23
  %conv7 = sitofp i64 %12 to float
  %13 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %13 to i64
  %14 = load float*, float** %dst.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 %idxprom
  store float %conv7, float* %arrayidx8, align 4, !tbaa !20
  br label %if.end.21

if.else:                                          ; preds = %if.end
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs10 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 0
  %15 = bitcast i16* %type_attrs10 to i8*
  %arrayidx11 = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx11, align 1, !tbaa !54
  %conv12 = zext i8 %16 to i32
  %cmp13 = icmp eq i32 %conv12, 16
  br i1 %cmp13, label %if.then.15, label %if.else.19

if.then.15:                                       ; preds = %if.else
  %value16 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %realval = bitcast %union.v* %value16 to float*
  %17 = load float, float* %realval, align 4, !tbaa !20
  %18 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom17 = sext i32 %18 to i64
  %19 = load float*, float** %dst.addr, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds float, float* %19, i64 %idxprom17
  store float %17, float* %arrayidx18, align 4, !tbaa !20
  br label %if.end.20

if.else.19:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.then.15
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20, %if.then.6
  %20 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom22 = sext i32 %20 to i64
  %21 = load float*, float** %dst.addr, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds float, float* %21, i64 %idxprom22
  %22 = load float, float* %arrayidx23, align 4, !tbaa !20
  %cmp24 = fcmp olt float %22, -1.000000e+04
  br i1 %cmp24, label %if.then.30, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.21
  %23 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom26 = sext i32 %23 to i64
  %24 = load float*, float** %dst.addr, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds float, float* %24, i64 %idxprom26
  %25 = load float, float* %arrayidx27, align 4, !tbaa !20
  %cmp28 = fcmp ogt float %25, 1.000000e+04
  br i1 %cmp28, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %lor.lhs.false, %if.end.21
  store i32 -13, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.31:                                        ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end.31
  %26 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %27, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.30, %if.else.19, %if.then
  %28 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #1
  %29 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #1
  %30 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %30) #1
  %31 = load i32, i32* %retval
  ret i32 %31
}

declare i32 @check_proc_failed(%struct.ref_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @checkRangeLMN(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %value = alloca [6 x float], align 16
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [6 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 24, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.ref_s*, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %4 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.34

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %7 to i32
  %cmp1 = icmp eq i32 %conv, 14
  br i1 %cmp1, label %if.end.34, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %9 = load i16, i16* %type_attrs4, align 2, !tbaa !22
  %conv5 = zext i16 %9 to i32
  %and = and i32 %conv5, 15360
  %cmp6 = icmp eq i32 %and, 1024
  br i1 %cmp6, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 2
  %11 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %11, 6
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i32 0
  %call14 = call i32 @get_cie_param_array(%struct.gs_memory_s* %14, %struct.ref_s* %15, i32 6, float* %arraydecay) #7
  store i32 %call14, i32* %code, align 4, !tbaa !26
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp15 = icmp slt i32 %16, 0
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.13
  %17 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.13
  %arrayidx19 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 1
  %18 = load float, float* %arrayidx19, align 4, !tbaa !20
  %arrayidx20 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 0
  %19 = load float, float* %arrayidx20, align 4, !tbaa !20
  %cmp21 = fcmp olt float %18, %19
  br i1 %cmp21, label %if.then.32, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.18
  %arrayidx23 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 3
  %20 = load float, float* %arrayidx23, align 4, !tbaa !20
  %arrayidx24 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 2
  %21 = load float, float* %arrayidx24, align 4, !tbaa !20
  %cmp25 = fcmp olt float %20, %21
  br i1 %cmp25, label %if.then.32, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %lor.lhs.false
  %arrayidx28 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 5
  %22 = load float, float* %arrayidx28, align 4, !tbaa !20
  %arrayidx29 = getelementptr inbounds [6 x float], [6 x float]* %value, i32 0, i64 4
  %23 = load float, float* %arrayidx29, align 4, !tbaa !20
  %cmp30 = fcmp olt float %22, %23
  br i1 %cmp30, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %lor.lhs.false.27, %lor.lhs.false, %if.end.18
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.33:                                        ; preds = %lor.lhs.false.27
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %land.lhs.true, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.34, %if.then.32, %if.then.17, %if.then.12, %if.then.8
  %24 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  %25 = bitcast [6 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 24, i8* %25) #1
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = load i32, i32* %retval
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i32 @checkDecodeLMN(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %tempref = alloca %struct.ref_s*, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = load %struct.ref_s*, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %5 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %5, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.31

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %7 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 1
  %8 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %8 to i32
  %cmp1 = icmp eq i32 %conv, 14
  br i1 %cmp1, label %if.end.31, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %10 = load i16, i16* %type_attrs4, align 2, !tbaa !22
  %conv5 = zext i16 %10 to i32
  %and = and i32 %conv5, 15360
  %cmp6 = icmp eq i32 %and, 1024
  br i1 %cmp6, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %11 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 2
  %12 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %12, 3
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.13
  %13 = load i32, i32* %i, align 4, !tbaa !26
  %cmp14 = icmp slt i32 %13, 3
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %14, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %15 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %16 = bitcast %struct.gs_ref_memory_s* %15 to %struct.gs_memory_s*
  %17 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %18 = load i32, i32* %i, align 4, !tbaa !26
  %conv16 = sext i32 %18 to i64
  %call17 = call i32 @array_get(%struct.gs_memory_s* %16, %struct.ref_s* %17, i64 %conv16, %struct.ref_s* %valref) #7
  store i32 %call17, i32* %code, align 4, !tbaa !26
  %19 = load i32, i32* %code, align 4, !tbaa !26
  %cmp18 = icmp slt i32 %19, 0
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %for.body
  %20 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %for.body
  br label %do.body

do.body:                                          ; preds = %if.end.21
  %tas22 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs23 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas22, i32 0, i32 0
  %21 = load i16, i16* %type_attrs23, align 2, !tbaa !22
  %conv24 = zext i16 %21 to i32
  %and25 = and i32 %conv24, 15552
  %cmp26 = icmp eq i32 %and25, 1216
  br i1 %cmp26, label %if.end.30, label %if.then.28

if.then.28:                                       ; preds = %do.body
  %call29 = call i32 @check_proc_failed(%struct.ref_s* %valref) #7
  store i32 %call29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %do.body
  br label %do.cond

do.cond:                                          ; preds = %if.end.30
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %for.inc

for.inc:                                          ; preds = %do.end
  %22 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.31

if.end.31:                                        ; preds = %for.end, %land.lhs.true, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.31, %if.then.28, %if.then.20, %if.then.12, %if.then.8
  %23 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %23) #1
  %24 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  %25 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = load i32, i32* %retval
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i32 @checkMatrixLMN(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %value = alloca [9 x float], align 16
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.ref_s*, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %4 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.19

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %7 to i32
  %cmp1 = icmp eq i32 %conv, 14
  br i1 %cmp1, label %if.end.19, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %9 = load i16, i16* %type_attrs4, align 2, !tbaa !22
  %conv5 = zext i16 %9 to i32
  %and = and i32 %conv5, 15360
  %cmp6 = icmp eq i32 %and, 1024
  br i1 %cmp6, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 2
  %11 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %11, 9
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i32 0
  %call14 = call i32 @get_cie_param_array(%struct.gs_memory_s* %14, %struct.ref_s* %15, i32 9, float* %arraydecay) #7
  store i32 %call14, i32* %code, align 4, !tbaa !26
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp15 = icmp slt i32 %16, 0
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.13
  %17 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.13
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %land.lhs.true, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.then.17, %if.then.12, %if.then.8
  %18 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  %19 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 36, i8* %19) #1
  %20 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = load i32, i32* %retval
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @checkBlackPoint(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %value = alloca [3 x float], align 4
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [3 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 12, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.ref_s*, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.63, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %4 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.19

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %7 to i32
  %cmp1 = icmp eq i32 %conv, 14
  br i1 %cmp1, label %if.end.19, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %9 = load i16, i16* %type_attrs4, align 2, !tbaa !22
  %conv5 = zext i16 %9 to i32
  %and = and i32 %conv5, 15360
  %cmp6 = icmp eq i32 %and, 1024
  br i1 %cmp6, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 2
  %11 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %11, 3
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i32 0
  %call14 = call i32 @get_cie_param_array(%struct.gs_memory_s* %14, %struct.ref_s* %15, i32 3, float* %arraydecay) #7
  store i32 %call14, i32* %code, align 4, !tbaa !26
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp15 = icmp slt i32 %16, 0
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.13
  %17 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.13
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %land.lhs.true, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.then.17, %if.then.12, %if.then.8
  %18 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  %19 = bitcast [3 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 12, i8* %19) #1
  %20 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = load i32, i32* %retval
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @comparedictkey(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict1, %struct.ref_s* %CIEdict2, i8* %key) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict1.addr = alloca %struct.ref_s*, align 8
  %CIEdict2.addr = alloca %struct.ref_s*, align 8
  %key.addr = alloca i8*, align 8
  %code = alloca i32, align 4
  %code1 = alloca i32, align 4
  %tempref1 = alloca %struct.ref_s*, align 8
  %tempref2 = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict1, %struct.ref_s** %CIEdict1.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict2, %struct.ref_s** %CIEdict2.addr, align 8, !tbaa !1
  store i8* %key, i8** %key.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast %struct.ref_s** %tempref2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load %struct.ref_s*, %struct.ref_s** %CIEdict1.addr, align 8, !tbaa !1
  %5 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %4, i8* %5, %struct.ref_s** %tempref1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load %struct.ref_s*, %struct.ref_s** %CIEdict2.addr, align 8, !tbaa !1
  %7 = load i8*, i8** %key.addr, align 8, !tbaa !1
  %call1 = call i32 @dict_find_string(%struct.ref_s* %6, i8* %7, %struct.ref_s** %tempref2) #7
  store i32 %call1, i32* %code1, align 4, !tbaa !26
  %8 = load i32, i32* %code, align 4, !tbaa !26
  %9 = load i32, i32* %code1, align 4, !tbaa !26
  %cmp = icmp ne i32 %8, %9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %code, align 4, !tbaa !26
  %cmp2 = icmp sle i32 %10, 0
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %if.end
  %11 = load %struct.ref_s*, %struct.ref_s** %tempref1, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %12 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %12, i64 1
  %13 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %13 to i32
  %14 = load %struct.ref_s*, %struct.ref_s** %tempref2, align 8, !tbaa !1
  %tas5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %14, i32 0, i32 0
  %type_attrs6 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas5, i32 0, i32 0
  %15 = bitcast i16* %type_attrs6 to i8*
  %arrayidx7 = getelementptr inbounds i8, i8* %15, i64 1
  %16 = load i8, i8* %arrayidx7, align 1, !tbaa !54
  %conv8 = zext i8 %16 to i32
  %cmp9 = icmp ne i32 %conv, %conv8
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.4
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.12:                                        ; preds = %if.end.4
  %17 = load %struct.ref_s*, %struct.ref_s** %tempref1, align 8, !tbaa !1
  %tas13 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %17, i32 0, i32 0
  %type_attrs14 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas13, i32 0, i32 0
  %18 = bitcast i16* %type_attrs14 to i8*
  %arrayidx15 = getelementptr inbounds i8, i8* %18, i64 1
  %19 = load i8, i8* %arrayidx15, align 1, !tbaa !54
  %conv16 = zext i8 %19 to i32
  %cmp17 = icmp eq i32 %conv16, 14
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.12
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.20:                                        ; preds = %if.end.12
  %20 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %21 = load %struct.ref_s*, %struct.ref_s** %tempref1, align 8, !tbaa !1
  %22 = load %struct.ref_s*, %struct.ref_s** %tempref2, align 8, !tbaa !1
  %call21 = call i32 @comparearrays(%struct.gs_context_state_s* %20, %struct.ref_s* %21, %struct.ref_s* %22) #7
  store i32 %call21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.20, %if.then.19, %if.then.11, %if.then.3, %if.then
  %23 = bitcast %struct.ref_s** %tempref2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #1
  %24 = bitcast %struct.ref_s** %tempref1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  %25 = bitcast i32* %code1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #1
  %27 = load i32, i32* %retval
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i32 @comparearrays(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %m1, %struct.ref_s* %m2) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %m1.addr = alloca %struct.ref_s*, align 8
  %m2.addr = alloca %struct.ref_s*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %ref1 = alloca %struct.ref_s, align 8
  %ref2 = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %m1, %struct.ref_s** %m1.addr, align 8, !tbaa !1
  store %struct.ref_s* %m2, %struct.ref_s** %m2.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast %struct.ref_s* %ref1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s* %ref2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #1
  %4 = load %struct.ref_s*, %struct.ref_s** %m1.addr, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %4, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 2
  %5 = load i32, i32* %rsize, align 4, !tbaa !5
  %6 = load %struct.ref_s*, %struct.ref_s** %m2.addr, align 8, !tbaa !1
  %tas1 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %6, i32 0, i32 0
  %rsize2 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas1, i32 0, i32 2
  %7 = load i32, i32* %rsize2, align 4, !tbaa !5
  %cmp = icmp ne i32 %5, %7
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !tbaa !26
  %9 = load %struct.ref_s*, %struct.ref_s** %m1.addr, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %9, i32 0, i32 0
  %rsize4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 2
  %10 = load i32, i32* %rsize4, align 4, !tbaa !5
  %cmp5 = icmp ult i32 %8, %10
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %11, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %12 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %13 = bitcast %struct.gs_ref_memory_s* %12 to %struct.gs_memory_s*
  %14 = load %struct.ref_s*, %struct.ref_s** %m1.addr, align 8, !tbaa !1
  %15 = load i32, i32* %i, align 4, !tbaa !26
  %conv = sext i32 %15 to i64
  %call = call i32 @array_get(%struct.gs_memory_s* %13, %struct.ref_s* %14, i64 %conv, %struct.ref_s* %ref1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp6 = icmp slt i32 %16, 0
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %for.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %for.body
  %17 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory10 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %17, i32 0, i32 1
  %current11 = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory10, i32 0, i32 0
  %18 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current11, align 8, !tbaa !55
  %19 = bitcast %struct.gs_ref_memory_s* %18 to %struct.gs_memory_s*
  %20 = load %struct.ref_s*, %struct.ref_s** %m2.addr, align 8, !tbaa !1
  %21 = load i32, i32* %i, align 4, !tbaa !26
  %conv12 = sext i32 %21 to i64
  %call13 = call i32 @array_get(%struct.gs_memory_s* %19, %struct.ref_s* %20, i64 %conv12, %struct.ref_s* %ref2) #7
  store i32 %call13, i32* %code, align 4, !tbaa !26
  %22 = load i32, i32* %code, align 4, !tbaa !26
  %cmp14 = icmp slt i32 %22, 0
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.9
  %tas18 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas18, i32 0, i32 0
  %23 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %23, i64 1
  %24 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv19 = zext i8 %24 to i32
  %tas20 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 0
  %type_attrs21 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas20, i32 0, i32 0
  %25 = bitcast i16* %type_attrs21 to i8*
  %arrayidx22 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx22, align 1, !tbaa !54
  %conv23 = zext i8 %26 to i32
  %cmp24 = icmp ne i32 %conv19, %conv23
  br i1 %cmp24, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.17
  %tas28 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 0
  %type_attrs29 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas28, i32 0, i32 0
  %27 = bitcast i16* %type_attrs29 to i8*
  %arrayidx30 = getelementptr inbounds i8, i8* %27, i64 1
  %28 = load i8, i8* %arrayidx30, align 1, !tbaa !54
  %conv31 = zext i8 %28 to i32
  store i32 %conv31, i32* %code, align 4, !tbaa !26
  %tas32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 0
  %type_attrs33 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas32, i32 0, i32 0
  %29 = bitcast i16* %type_attrs33 to i8*
  %arrayidx34 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx34, align 1, !tbaa !54
  %conv35 = zext i8 %30 to i32
  switch i32 %conv35, label %sw.default [
    i32 14, label %sw.epilog
    i32 1, label %sw.bb
    i32 11, label %sw.bb.44
    i32 16, label %sw.bb.52
    i32 13, label %sw.bb.60
    i32 18, label %sw.bb.68
    i32 4, label %sw.bb.88
    i32 5, label %sw.bb.88
    i32 6, label %sw.bb.88
    i32 20, label %sw.epilog
    i32 15, label %sw.bb.92
    i32 0, label %sw.bb.100
    i32 2, label %sw.bb.100
    i32 3, label %sw.bb.100
    i32 7, label %sw.bb.100
    i32 8, label %sw.bb.100
    i32 9, label %sw.bb.100
    i32 10, label %sw.bb.100
    i32 17, label %sw.bb.100
    i32 12, label %sw.bb.100
    i32 19, label %sw.bb.100
  ]

sw.bb:                                            ; preds = %if.end.27
  %value = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 1
  %boolval = bitcast %union.v* %value to i16*
  %31 = load i16, i16* %boolval, align 2, !tbaa !25
  %conv36 = zext i16 %31 to i32
  %value37 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 1
  %boolval38 = bitcast %union.v* %value37 to i16*
  %32 = load i16, i16* %boolval38, align 2, !tbaa !25
  %conv39 = zext i16 %32 to i32
  %cmp40 = icmp ne i32 %conv36, %conv39
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %sw.bb
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.43:                                        ; preds = %sw.bb
  br label %sw.epilog

sw.bb.44:                                         ; preds = %if.end.27
  %value45 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 1
  %intval = bitcast %union.v* %value45 to i64*
  %33 = load i64, i64* %intval, align 8, !tbaa !23
  %value46 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 1
  %intval47 = bitcast %union.v* %value46 to i64*
  %34 = load i64, i64* %intval47, align 8, !tbaa !23
  %cmp48 = icmp ne i64 %33, %34
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %sw.bb.44
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %sw.bb.44
  br label %sw.epilog

sw.bb.52:                                         ; preds = %if.end.27
  %value53 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 1
  %realval = bitcast %union.v* %value53 to float*
  %35 = load float, float* %realval, align 4, !tbaa !20
  %value54 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 1
  %realval55 = bitcast %union.v* %value54 to float*
  %36 = load float, float* %realval55, align 4, !tbaa !20
  %cmp56 = fcmp une float %35, %36
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %sw.bb.52
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.59:                                        ; preds = %sw.bb.52
  br label %sw.epilog

sw.bb.60:                                         ; preds = %if.end.27
  %value61 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 1
  %pname = bitcast %union.v* %value61 to %struct.name_s**
  %37 = load %struct.name_s*, %struct.name_s** %pname, align 8, !tbaa !1
  %value62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 1
  %pname63 = bitcast %union.v* %value62 to %struct.name_s**
  %38 = load %struct.name_s*, %struct.name_s** %pname63, align 8, !tbaa !1
  %cmp64 = icmp eq %struct.name_s* %37, %38
  br i1 %cmp64, label %if.end.67, label %if.then.66

if.then.66:                                       ; preds = %sw.bb.60
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.67:                                        ; preds = %sw.bb.60
  br label %sw.epilog

sw.bb.68:                                         ; preds = %if.end.27
  %tas69 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 0
  %rsize70 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas69, i32 0, i32 2
  %39 = load i32, i32* %rsize70, align 4, !tbaa !5
  %tas71 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 0
  %rsize72 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas71, i32 0, i32 2
  %40 = load i32, i32* %rsize72, align 4, !tbaa !5
  %cmp73 = icmp ne i32 %39, %40
  br i1 %cmp73, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %sw.bb.68
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.76:                                        ; preds = %sw.bb.68
  %value77 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 1
  %const_bytes = bitcast %union.v* %value77 to i8**
  %41 = load i8*, i8** %const_bytes, align 8, !tbaa !1
  %value78 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 1
  %const_bytes79 = bitcast %union.v* %value78 to i8**
  %42 = load i8*, i8** %const_bytes79, align 8, !tbaa !1
  %tas80 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 0
  %rsize81 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas80, i32 0, i32 2
  %43 = load i32, i32* %rsize81, align 4, !tbaa !5
  %conv82 = zext i32 %43 to i64
  %call83 = call i32 @strncmp(i8* %41, i8* %42, i64 %conv82) #9
  %cmp84 = icmp ne i32 %call83, 0
  br i1 %cmp84, label %if.then.86, label %if.end.87

if.then.86:                                       ; preds = %if.end.76
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.87:                                        ; preds = %if.end.76
  br label %sw.epilog

sw.bb.88:                                         ; preds = %if.end.27, %if.end.27, %if.end.27
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call89 = call i32 @comparearrays(%struct.gs_context_state_s* %44, %struct.ref_s* %ref1, %struct.ref_s* %ref2) #7
  %tobool = icmp ne i32 %call89, 0
  br i1 %tobool, label %if.end.91, label %if.then.90

if.then.90:                                       ; preds = %sw.bb.88
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.91:                                        ; preds = %sw.bb.88
  br label %sw.epilog

sw.bb.92:                                         ; preds = %if.end.27
  %value93 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref1, i32 0, i32 1
  %opproc = bitcast %union.v* %value93 to i32 (%struct.gs_context_state_s*)**
  %45 = load i32 (%struct.gs_context_state_s*)*, i32 (%struct.gs_context_state_s*)** %opproc, align 8, !tbaa !1
  %value94 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %ref2, i32 0, i32 1
  %opproc95 = bitcast %union.v* %value94 to i32 (%struct.gs_context_state_s*)**
  %46 = load i32 (%struct.gs_context_state_s*)*, i32 (%struct.gs_context_state_s*)** %opproc95, align 8, !tbaa !1
  %cmp96 = icmp ne i32 (%struct.gs_context_state_s*)* %45, %46
  br i1 %cmp96, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %sw.bb.92
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.99:                                        ; preds = %sw.bb.92
  br label %sw.epilog

sw.bb.100:                                        ; preds = %if.end.27, %if.end.27, %if.end.27, %if.end.27, %if.end.27, %if.end.27, %if.end.27, %if.end.27, %if.end.27, %if.end.27
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.default:                                       ; preds = %if.end.27
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end.99, %if.end.27, %if.end.27, %if.end.91, %if.end.87, %if.end.67, %if.end.59, %if.end.51, %if.end.43
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %47 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %47, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %sw.bb.100, %if.then.98, %if.then.90, %if.then.86, %if.then.75, %if.then.66, %if.then.58, %if.then.50, %if.then.42, %if.then.26, %if.then.16, %if.then.8, %if.then
  %48 = bitcast %struct.ref_s* %ref2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %48) #1
  %49 = bitcast %struct.ref_s* %ref1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %49) #1
  %50 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = load i32, i32* %retval
  ret i32 %52
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #3

declare i32 @cieabcspace(%struct.gs_context_state_s*, %struct.ref_s*, i64) #2

declare i32 @ciedefspace(%struct.gs_context_state_s*, %struct.ref_s*, i64) #2

declare i32 @ciedefgspace(%struct.gs_context_state_s*, %struct.ref_s*, i64) #2

declare %struct.gs_function_s* @ref_function(%struct.ref_s*) #2

; Function Attrs: nounwind uwtable
define internal i32 @convert_transform(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %arr, %struct.ref_s* %pproc) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %arr.addr = alloca %struct.ref_s*, align 8
  %pproc.addr = alloca %struct.ref_s*, align 8
  %op = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %arr, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  store %struct.ref_s* %pproc, %struct.ref_s** %pproc.addr, align 8, !tbaa !1
  %0 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %1, i32 0, i32 26
  %stack = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack, i32 0, i32 0
  %p = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack, i32 0, i32 0
  %2 = load %struct.ref_s*, %struct.ref_s** %p, align 8, !tbaa !10
  store %struct.ref_s* %2, %struct.ref_s** %op, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds %struct.ref_s, %struct.ref_s* %4, i64 1
  store %struct.ref_s* %add.ptr, %struct.ref_s** %op, align 8, !tbaa !1
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack1 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %5, i32 0, i32 26
  %stack2 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack1, i32 0, i32 0
  %top = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack2, i32 0, i32 2
  %6 = load %struct.ref_s*, %struct.ref_s** %top, align 8, !tbaa !69
  %cmp = icmp ugt %struct.ref_s* %add.ptr, %6
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %7 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack3 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %7, i32 0, i32 26
  %stack4 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack3, i32 0, i32 0
  %requested = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack4, i32 0, i32 7
  store i32 1, i32* %requested, align 4, !tbaa !70
  store i32 -16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %do.body
  %8 = load %struct.ref_s*, %struct.ref_s** %op, align 8, !tbaa !1
  %9 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %op_stack5 = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %9, i32 0, i32 26
  %stack6 = getelementptr inbounds %struct.op_stack_s, %struct.op_stack_s* %op_stack5, i32 0, i32 0
  %p7 = getelementptr inbounds %struct.ref_stack_s, %struct.ref_stack_s* %stack6, i32 0, i32 0
  store %struct.ref_s* %8, %struct.ref_s** %p7, align 8, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %do.cond

do.cond:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.cond
  %10 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %11 = load %struct.ref_s*, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  %12 = load %struct.ref_s*, %struct.ref_s** %pproc.addr, align 8, !tbaa !1
  %call = call i32 @buildfunction(%struct.gs_context_state_s* %10, %struct.ref_s* %11, %struct.ref_s* %12, i32 4) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %13 = load i32, i32* %code, align 4, !tbaa !26
  %cmp8 = icmp slt i32 %13, 0
  br i1 %cmp8, label %if.then.9, label %if.end.11

if.then.9:                                        ; preds = %do.end
  %14 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %15 = load %struct.ref_s*, %struct.ref_s** %arr.addr, align 8, !tbaa !1
  %16 = load %struct.ref_s*, %struct.ref_s** %pproc.addr, align 8, !tbaa !1
  %call10 = call i32 @buildfunction(%struct.gs_context_state_s* %14, %struct.ref_s* %15, %struct.ref_s* %16, i32 0) #7
  store i32 %call10, i32* %code, align 4, !tbaa !26
  br label %if.end.11

if.end.11:                                        ; preds = %if.then.9, %do.end
  %17 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.11, %if.then
  %18 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %18) #1
  %19 = bitcast %struct.ref_s** %op to i8*
  call void @llvm.lifetime.end(i64 8, i8* %19) #1
  %20 = load i32, i32* %retval
  ret i32 %20
}

declare i32 @names_from_string(%struct.name_table_s*, %struct.ref_s*, %struct.ref_s*) #2

declare i32 @gs_cspace_new_Separation(%struct.gs_color_space_s**, %struct.gs_color_space_s*, %struct.gs_memory_s*) #2

declare i32 @names_index(%struct.name_table_s*, %struct.ref_s*) #2

declare i32 @gs_get_colorname_string(%struct.gs_memory_s*, i64, i8**, i32*) #2

declare i32 @gs_cspace_set_sepr_function(%struct.gs_color_space_s*, %struct.gs_function_s*) #2

declare i32 @buildfunction(%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*, i32) #2

declare void @names_string_ref(%struct.name_table_s*, %struct.ref_s*, %struct.ref_s*) #2

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @colour_cleanup(%struct.gs_context_state_s* %i_ctx_p) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  ret i32 0
}

declare i32 @gs_cspace_new_DeviceN(%struct.gs_color_space_s**, i32, %struct.gs_color_space_s*, %struct.gs_memory_s*) #2

declare void @rc_decrement_cs(%struct.gs_color_space_s*, i8*) #2

declare i32 @gs_cspace_set_devn_function(%struct.gs_color_space_s*, %struct.gs_function_s*) #2

declare %struct.gs_color_space_s* @gs_cspace_alloc(%struct.gs_memory_s*, %struct.gs_color_space_type_s*) #2

declare void @rc_increment_cs(%struct.gs_color_space_s*) #2

declare i32 @zcs_begin_map(%struct.gs_context_state_s*, %struct.gs_indexed_map_s**, %struct.ref_s*, i32, %struct.gs_color_space_s*, i32 (%struct.gs_context_state_s*)*) #2

declare i32 @lookup_indexed_map(%struct.gs_color_space_s*, i32, float*) #2

; Function Attrs: nounwind readnone
declare double @floor(double) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pattern_instance_uses_base_space(%struct.gs_pattern_instance_s* %pinst) #6 {
entry:
  %pinst.addr = alloca %struct.gs_pattern_instance_s*, align 8
  store %struct.gs_pattern_instance_s* %pinst, %struct.gs_pattern_instance_s** %pinst.addr, align 8, !tbaa !1
  %0 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pinst.addr, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_pattern_instance_s, %struct.gs_pattern_instance_s* %0, i32 0, i32 1
  %1 = load %struct.gs_pattern_type_s*, %struct.gs_pattern_type_s** %type, align 8, !tbaa !138
  %procs = getelementptr inbounds %struct.gs_pattern_type_s, %struct.gs_pattern_type_s* %1, i32 0, i32 1
  %uses_base_space = getelementptr inbounds %struct.pp_, %struct.pp_* %procs, i32 0, i32 0
  %2 = load i32 (%struct.gs_pattern_template_s*)*, i32 (%struct.gs_pattern_template_s*)** %uses_base_space, align 8, !tbaa !140
  %3 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pinst.addr, align 8, !tbaa !1
  %type1 = getelementptr inbounds %struct.gs_pattern_instance_s, %struct.gs_pattern_instance_s* %3, i32 0, i32 1
  %4 = load %struct.gs_pattern_type_s*, %struct.gs_pattern_type_s** %type1, align 8, !tbaa !138
  %procs2 = getelementptr inbounds %struct.gs_pattern_type_s, %struct.gs_pattern_type_s* %4, i32 0, i32 1
  %get_pattern = getelementptr inbounds %struct.pp_, %struct.pp_* %procs2, i32 0, i32 2
  %5 = load %struct.gs_pattern_template_s* (%struct.gs_pattern_instance_s*)*, %struct.gs_pattern_template_s* (%struct.gs_pattern_instance_s*)** %get_pattern, align 8, !tbaa !143
  %6 = load %struct.gs_pattern_instance_s*, %struct.gs_pattern_instance_s** %pinst.addr, align 8, !tbaa !1
  %call = call %struct.gs_pattern_template_s* %5(%struct.gs_pattern_instance_s* %6) #7
  %call3 = call i32 %2(%struct.gs_pattern_template_s* %call) #7
  ret i32 %call3
}

declare %struct.gs_client_color_s* @gs_currentcolor(%struct.gs_state_s*) #2

declare i32 @gs_cspace_new_DevicePixel(%struct.gs_memory_s*, %struct.gs_color_space_s**, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @set_dev_space(%struct.gs_context_state_s* %i_ctx_p, i32 %components) #0 {
entry:
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %components.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %stage = alloca i32, align 4
  %cont = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store i32 %components, i32* %components.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 1, i32* %stage, align 4, !tbaa !26
  %2 = bitcast i32* %cont to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  store i32 0, i32* %cont, align 4, !tbaa !26
  %3 = load i32, i32* %components.addr, align 4, !tbaa !26
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb.1
    i32 4, label %sw.bb.3
  ]

sw.bb:                                            ; preds = %entry
  %4 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call = call i32 @setgrayspace(%struct.gs_context_state_s* %4, %struct.ref_s* null, i32* %stage, i32* %cont, i32 1) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.1:                                          ; preds = %entry
  %5 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call2 = call i32 @setrgbspace(%struct.gs_context_state_s* %5, %struct.ref_s* null, i32* %stage, i32* %cont, i32 1) #7
  store i32 %call2, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.bb.3:                                          ; preds = %entry
  %6 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %call4 = call i32 @setcmykspace(%struct.gs_context_state_s* %6, %struct.ref_s* null, i32* %stage, i32* %cont, i32 1) #7
  store i32 %call4, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  store i32 -15, i32* %code, align 4, !tbaa !26
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.3, %sw.bb.1, %sw.bb
  %7 = load i32, i32* %code, align 4, !tbaa !26
  %8 = bitcast i32* %cont to i8*
  call void @llvm.lifetime.end(i64 4, i8* %8) #1
  %9 = bitcast i32* %stage to i8*
  call void @llvm.lifetime.end(i64 4, i8* %9) #1
  %10 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %10) #1
  ret i32 %7
}

declare i32 @make_rss(%struct.gs_context_state_s*, %struct.ref_s*, i8*, i32, i32, i64, i64, i32) #2

declare i32 @seticc(%struct.gs_context_state_s*, i32, %struct.ref_s*, float*) #2

declare i32 @names_enter_string(%struct.name_table_s*, i8*, %struct.ref_s*) #2

declare i32 @dict_put_string(%struct.ref_s*, i8*, %struct.ref_s*, %struct.dict_stack_s*) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #3

declare i32 @dict_floats_param(%struct.gs_memory_s*, %struct.ref_s*, i8*, i32, float*, float*) #2

declare i32 @seticc_lab(%struct.gs_context_state_s*, float*, float*, float*) #2

declare i32 @gs_throw_imp(i8*, i8*, i32, i32, i32, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @checkrangeab(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %labdict) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %labdict.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca [4 x float], align 16
  %tempref = alloca %struct.ref_s*, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %labdict, %struct.ref_s** %labdict.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast [4 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = load %struct.ref_s*, %struct.ref_s** %labdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.86, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %6, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.55

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp1 = icmp eq i32 %conv, 14
  br i1 %cmp1, label %if.end.55, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %11 = load i16, i16* %type_attrs4, align 2, !tbaa !22
  %conv5 = zext i16 %11 to i32
  %and = and i32 %conv5, 15360
  %cmp6 = icmp eq i32 %and, 1024
  br i1 %cmp6, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %12 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %12, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 2
  %13 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %13, 4
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.13
  %14 = load i32, i32* %i, align 4, !tbaa !26
  %cmp14 = icmp slt i32 %14, 4
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %15, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %16 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %17 = bitcast %struct.gs_ref_memory_s* %16 to %struct.gs_memory_s*
  %18 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %19 = load i32, i32* %i, align 4, !tbaa !26
  %conv16 = sext i32 %19 to i64
  %call17 = call i32 @array_get(%struct.gs_memory_s* %17, %struct.ref_s* %18, i64 %conv16, %struct.ref_s* %valref) #7
  store i32 %call17, i32* %code, align 4, !tbaa !26
  %20 = load i32, i32* %code, align 4, !tbaa !26
  %cmp18 = icmp slt i32 %20, 0
  br i1 %cmp18, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %for.body
  %21 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %for.body
  %tas22 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs23 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas22, i32 0, i32 0
  %22 = bitcast i16* %type_attrs23 to i8*
  %arrayidx24 = getelementptr inbounds i8, i8* %22, i64 1
  %23 = load i8, i8* %arrayidx24, align 1, !tbaa !54
  %conv25 = zext i8 %23 to i32
  %cmp26 = icmp eq i32 %conv25, 11
  br i1 %cmp26, label %if.then.28, label %if.else

if.then.28:                                       ; preds = %if.end.21
  %value29 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval = bitcast %union.v* %value29 to i64*
  %24 = load i64, i64* %intval, align 8, !tbaa !23
  %conv30 = sitofp i64 %24 to float
  %25 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %25 to i64
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %value, i32 0, i64 %idxprom
  store float %conv30, float* %arrayidx31, align 4, !tbaa !20
  br label %if.end.44

if.else:                                          ; preds = %if.end.21
  %tas32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs33 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas32, i32 0, i32 0
  %26 = bitcast i16* %type_attrs33 to i8*
  %arrayidx34 = getelementptr inbounds i8, i8* %26, i64 1
  %27 = load i8, i8* %arrayidx34, align 1, !tbaa !54
  %conv35 = zext i8 %27 to i32
  %cmp36 = icmp eq i32 %conv35, 16
  br i1 %cmp36, label %if.then.38, label %if.else.42

if.then.38:                                       ; preds = %if.else
  %value39 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %realval = bitcast %union.v* %value39 to float*
  %28 = load float, float* %realval, align 4, !tbaa !20
  %29 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom40 = sext i32 %29 to i64
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %value, i32 0, i64 %idxprom40
  store float %28, float* %arrayidx41, align 4, !tbaa !20
  br label %if.end.43

if.else.42:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.43:                                        ; preds = %if.then.38
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.then.28
  br label %for.inc

for.inc:                                          ; preds = %if.end.44
  %30 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %value, i32 0, i64 1
  %31 = load float, float* %arrayidx45, align 4, !tbaa !20
  %arrayidx46 = getelementptr inbounds [4 x float], [4 x float]* %value, i32 0, i64 0
  %32 = load float, float* %arrayidx46, align 4, !tbaa !20
  %cmp47 = fcmp olt float %31, %32
  br i1 %cmp47, label %if.then.53, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %value, i32 0, i64 3
  %33 = load float, float* %arrayidx49, align 4, !tbaa !20
  %arrayidx50 = getelementptr inbounds [4 x float], [4 x float]* %value, i32 0, i64 2
  %34 = load float, float* %arrayidx50, align 4, !tbaa !20
  %cmp51 = fcmp olt float %33, %34
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %lor.lhs.false, %for.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.54:                                        ; preds = %lor.lhs.false
  br label %if.end.55

if.end.55:                                        ; preds = %if.end.54, %land.lhs.true, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.55, %if.then.53, %if.else.42, %if.then.20, %if.then.12, %if.then.8
  %35 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %35) #1
  %36 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #1
  %37 = bitcast [4 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 16, i8* %37) #1
  %38 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %38) #1
  %39 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  %40 = load i32, i32* %retval
  ret i32 %40
}

declare i32 @dict_float_param(%struct.ref_s*, i8*, double, float*) #2

declare i32 @seticc_cal(%struct.gs_context_state_s*, float*, float*, float*, float*, i32, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @checkGamma(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict, i32 %numvalues) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict.addr = alloca %struct.ref_s*, align 8
  %numvalues.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %value = alloca [3 x float], align 4
  %tempref = alloca %struct.ref_s*, align 8
  %valref = alloca %struct.ref_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  store i32 %numvalues, i32* %numvalues.addr, align 4, !tbaa !26
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %code, align 4, !tbaa !26
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast [3 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 12, i8* %2) #1
  %3 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = load %struct.ref_s*, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %6 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %6, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.86

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %7, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %8 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %8, i64 1
  %9 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %9 to i32
  %cmp1 = icmp eq i32 %conv, 14
  br i1 %cmp1, label %if.end.86, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %10 = load i32, i32* %numvalues.addr, align 4, !tbaa !26
  %cmp3 = icmp sgt i32 %10, 1
  br i1 %cmp3, label %if.then.5, label %if.else.54

if.then.5:                                        ; preds = %if.then
  %11 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas6 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %11, i32 0, i32 0
  %type_attrs7 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas6, i32 0, i32 0
  %12 = load i16, i16* %type_attrs7, align 2, !tbaa !22
  %conv8 = zext i16 %12 to i32
  %and = and i32 %conv8, 15360
  %cmp9 = icmp eq i32 %and, 1024
  br i1 %cmp9, label %if.end, label %if.then.11

if.then.11:                                       ; preds = %if.then.5
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.5
  %13 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas12 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %13, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas12, i32 0, i32 2
  %14 = load i32, i32* %rsize, align 4, !tbaa !5
  %15 = load i32, i32* %numvalues.addr, align 4, !tbaa !26
  %cmp13 = icmp ne i32 %14, %15
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.16:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.16
  %16 = load i32, i32* %i, align 4, !tbaa !26
  %17 = load i32, i32* %numvalues.addr, align 4, !tbaa !26
  %cmp17 = icmp slt i32 %16, %17
  br i1 %cmp17, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %18, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %19 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %20 = bitcast %struct.gs_ref_memory_s* %19 to %struct.gs_memory_s*
  %21 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %22 = load i32, i32* %i, align 4, !tbaa !26
  %conv19 = sext i32 %22 to i64
  %call20 = call i32 @array_get(%struct.gs_memory_s* %20, %struct.ref_s* %21, i64 %conv19, %struct.ref_s* %valref) #7
  store i32 %call20, i32* %code, align 4, !tbaa !26
  %23 = load i32, i32* %code, align 4, !tbaa !26
  %cmp21 = icmp slt i32 %23, 0
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %for.body
  %24 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %24, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %for.body
  %tas25 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs26 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas25, i32 0, i32 0
  %25 = bitcast i16* %type_attrs26 to i8*
  %arrayidx27 = getelementptr inbounds i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx27, align 1, !tbaa !54
  %conv28 = zext i8 %26 to i32
  %cmp29 = icmp eq i32 %conv28, 11
  br i1 %cmp29, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %if.end.24
  %value32 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %intval = bitcast %union.v* %value32 to i64*
  %27 = load i64, i64* %intval, align 8, !tbaa !23
  %conv33 = sitofp i64 %27 to float
  %28 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %28 to i64
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 %idxprom
  store float %conv33, float* %arrayidx34, align 4, !tbaa !20
  br label %if.end.47

if.else:                                          ; preds = %if.end.24
  %tas35 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 0
  %type_attrs36 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas35, i32 0, i32 0
  %29 = bitcast i16* %type_attrs36 to i8*
  %arrayidx37 = getelementptr inbounds i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx37, align 1, !tbaa !54
  %conv38 = zext i8 %30 to i32
  %cmp39 = icmp eq i32 %conv38, 16
  br i1 %cmp39, label %if.then.41, label %if.else.45

if.then.41:                                       ; preds = %if.else
  %value42 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %valref, i32 0, i32 1
  %realval = bitcast %union.v* %value42 to float*
  %31 = load float, float* %realval, align 4, !tbaa !20
  %32 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 %idxprom43
  store float %31, float* %arrayidx44, align 4, !tbaa !20
  br label %if.end.46

if.else.45:                                       ; preds = %if.else
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %if.then.41
  br label %if.end.47

if.end.47:                                        ; preds = %if.end.46, %if.then.31
  %33 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom48 = sext i32 %33 to i64
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 %idxprom48
  %34 = load float, float* %arrayidx49, align 4, !tbaa !20
  %cmp50 = fcmp ole float %34, 0.000000e+00
  br i1 %cmp50, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.47
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.53:                                        ; preds = %if.end.47
  br label %for.inc

for.inc:                                          ; preds = %if.end.53
  %35 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.85

if.else.54:                                       ; preds = %if.then
  %36 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas55 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %36, i32 0, i32 0
  %type_attrs56 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas55, i32 0, i32 0
  %37 = bitcast i16* %type_attrs56 to i8*
  %arrayidx57 = getelementptr inbounds i8, i8* %37, i64 1
  %38 = load i8, i8* %arrayidx57, align 1, !tbaa !54
  %conv58 = zext i8 %38 to i32
  %cmp59 = icmp eq i32 %conv58, 16
  br i1 %cmp59, label %if.then.61, label %if.else.65

if.then.61:                                       ; preds = %if.else.54
  %39 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value62 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %39, i32 0, i32 1
  %realval63 = bitcast %union.v* %value62 to float*
  %40 = load float, float* %realval63, align 4, !tbaa !20
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 0
  store float %40, float* %arrayidx64, align 4, !tbaa !20
  br label %if.end.79

if.else.65:                                       ; preds = %if.else.54
  %41 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas66 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %41, i32 0, i32 0
  %type_attrs67 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas66, i32 0, i32 0
  %42 = bitcast i16* %type_attrs67 to i8*
  %arrayidx68 = getelementptr inbounds i8, i8* %42, i64 1
  %43 = load i8, i8* %arrayidx68, align 1, !tbaa !54
  %conv69 = zext i8 %43 to i32
  %cmp70 = icmp eq i32 %conv69, 11
  br i1 %cmp70, label %if.then.72, label %if.else.77

if.then.72:                                       ; preds = %if.else.65
  %44 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %value73 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %44, i32 0, i32 1
  %intval74 = bitcast %union.v* %value73 to i64*
  %45 = load i64, i64* %intval74, align 8, !tbaa !23
  %conv75 = sitofp i64 %45 to float
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 0
  store float %conv75, float* %arrayidx76, align 4, !tbaa !20
  br label %if.end.78

if.else.77:                                       ; preds = %if.else.65
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.78:                                        ; preds = %if.then.72
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.then.61
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %value, i32 0, i64 0
  %46 = load float, float* %arrayidx80, align 4, !tbaa !20
  %cmp81 = fcmp ole float %46, 0.000000e+00
  br i1 %cmp81, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %if.end.79
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.84:                                        ; preds = %if.end.79
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %for.end
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.85, %land.lhs.true, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.86, %if.then.83, %if.else.77, %if.then.52, %if.else.45, %if.then.23, %if.then.15, %if.then.11
  %47 = bitcast %struct.ref_s* %valref to i8*
  call void @llvm.lifetime.end(i64 16, i8* %47) #1
  %48 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %48) #1
  %49 = bitcast [3 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 12, i8* %49) #1
  %50 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %50) #1
  %51 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %51) #1
  %52 = load i32, i32* %retval
  ret i32 %52
}

; Function Attrs: nounwind uwtable
define internal i32 @checkCalMatrix(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %CIEdict) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %CIEdict.addr = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %value = alloca [9 x float], align 16
  %tempref = alloca %struct.ref_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %CIEdict, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.start(i64 36, i8* %1) #1
  %2 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = load %struct.ref_s*, %struct.ref_s** %CIEdict.addr, align 8, !tbaa !1
  %call = call i32 @dict_find_string(%struct.ref_s* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), %struct.ref_s** %tempref) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %4 = load i32, i32* %code, align 4, !tbaa !26
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %land.lhs.true, label %if.end.19

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %5, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  %6 = bitcast i16* %type_attrs to i8*
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 1
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %7 to i32
  %cmp1 = icmp eq i32 %conv, 14
  br i1 %cmp1, label %if.end.19, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %8, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %9 = load i16, i16* %type_attrs4, align 2, !tbaa !22
  %conv5 = zext i16 %9 to i32
  %and = and i32 %conv5, 15360
  %cmp6 = icmp eq i32 %and, 1024
  br i1 %cmp6, label %if.end, label %if.then.8

if.then.8:                                        ; preds = %if.then
  store i32 -20, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %10 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %tas9 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %10, i32 0, i32 0
  %rsize = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas9, i32 0, i32 2
  %11 = load i32, i32* %rsize, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %11, 9
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  %12 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %12, i32 0, i32 1
  %current = getelementptr inbounds %struct.gs_dual_memory_s, %struct.gs_dual_memory_s* %memory, i32 0, i32 0
  %13 = load %struct.gs_ref_memory_s*, %struct.gs_ref_memory_s** %current, align 8, !tbaa !55
  %14 = bitcast %struct.gs_ref_memory_s* %13 to %struct.gs_memory_s*
  %15 = load %struct.ref_s*, %struct.ref_s** %tempref, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [9 x float], [9 x float]* %value, i32 0, i32 0
  %call14 = call i32 @get_cie_param_array(%struct.gs_memory_s* %14, %struct.ref_s* %15, i32 9, float* %arraydecay) #7
  store i32 %call14, i32* %code, align 4, !tbaa !26
  %16 = load i32, i32* %code, align 4, !tbaa !26
  %cmp15 = icmp slt i32 %16, 0
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.13
  %17 = load i32, i32* %code, align 4, !tbaa !26
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.13
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %land.lhs.true, %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.19, %if.then.17, %if.then.12, %if.then.8
  %18 = bitcast %struct.ref_s** %tempref to i8*
  call void @llvm.lifetime.end(i64 8, i8* %18) #1
  %19 = bitcast [9 x float]* %value to i8*
  call void @llvm.lifetime.end(i64 36, i8* %19) #1
  %20 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  %21 = load i32, i32* %retval
  ret i32 %21
}

declare i32 @gs_alloc_ref_array(%struct.gs_ref_memory_s*, %struct.ref_s*, i32, i32, i8*) #2

declare void @refset_null_new(%struct.ref_s*, i32, i32) #2

declare i32 @alloc_save_change(%struct.gs_dual_memory_s*, %struct.ref_s*, i16*, i8*) #2

declare i32 @float_params(%struct.ref_s*, i32, float*) #2

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @is_same_colorspace(%struct.gs_context_state_s* %i_ctx_p, %struct.ref_s* %space1, %struct.ref_s* %space2, i32 %isCIE) #0 {
entry:
  %retval = alloca i32, align 4
  %i_ctx_p.addr = alloca %struct.gs_context_state_s*, align 8
  %space1.addr = alloca %struct.ref_s*, align 8
  %space2.addr = alloca %struct.ref_s*, align 8
  %isCIE.addr = alloca i32, align 4
  %oldcspace = alloca %struct.PS_colour_space_s*, align 8
  %newcspace = alloca %struct.PS_colour_space_s*, align 8
  %oldspace = alloca %struct.ref_s, align 8
  %poldspace = alloca %struct.ref_s*, align 8
  %newspace = alloca %struct.ref_s, align 8
  %pnewspace = alloca %struct.ref_s*, align 8
  %code = alloca i32, align 4
  %CIESubst = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.gs_context_state_s* %i_ctx_p, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  store %struct.ref_s* %space1, %struct.ref_s** %space1.addr, align 8, !tbaa !1
  store %struct.ref_s* %space2, %struct.ref_s** %space2.addr, align 8, !tbaa !1
  store i32 %isCIE, i32* %isCIE.addr, align 4, !tbaa !26
  %0 = bitcast %struct.PS_colour_space_s** %oldcspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  store %struct.PS_colour_space_s* null, %struct.PS_colour_space_s** %oldcspace, align 8, !tbaa !1
  %1 = bitcast %struct.PS_colour_space_s** %newcspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store %struct.PS_colour_space_s* null, %struct.PS_colour_space_s** %newcspace, align 8, !tbaa !1
  %2 = bitcast %struct.ref_s* %oldspace to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #1
  %3 = bitcast %struct.ref_s** %poldspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store %struct.ref_s* %oldspace, %struct.ref_s** %poldspace, align 8, !tbaa !1
  %4 = bitcast %struct.ref_s* %newspace to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #1
  %5 = bitcast %struct.ref_s** %pnewspace to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.ref_s* %newspace, %struct.ref_s** %pnewspace, align 8, !tbaa !1
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #1
  %tas = getelementptr inbounds %struct.ref_s, %struct.ref_s* %oldspace, i32 0, i32 0
  %type_attrs = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas, i32 0, i32 0
  store i16 0, i16* %type_attrs, align 2, !tbaa !22
  %tas1 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %oldspace, i32 0, i32 0
  %type_attrs2 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas1, i32 0, i32 0
  store i16 0, i16* %type_attrs2, align 2, !tbaa !22
  %8 = load %struct.ref_s*, %struct.ref_s** %pnewspace, align 8, !tbaa !1
  %9 = load %struct.ref_s*, %struct.ref_s** %space1.addr, align 8, !tbaa !1
  %10 = bitcast %struct.ref_s* %8 to i8*
  %11 = bitcast %struct.ref_s* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !tbaa.struct !24
  %12 = load %struct.ref_s*, %struct.ref_s** %poldspace, align 8, !tbaa !1
  %13 = load %struct.ref_s*, %struct.ref_s** %space2.addr, align 8, !tbaa !1
  %14 = bitcast %struct.ref_s* %12 to i8*
  %15 = bitcast %struct.ref_s* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false), !tbaa.struct !24
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %16 = load %struct.ref_s*, %struct.ref_s** %poldspace, align 8, !tbaa !1
  %tas3 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %16, i32 0, i32 0
  %type_attrs4 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas3, i32 0, i32 0
  %17 = bitcast i16* %type_attrs4 to i8*
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 1
  %18 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %18 to i32
  %19 = load %struct.ref_s*, %struct.ref_s** %pnewspace, align 8, !tbaa !1
  %tas5 = getelementptr inbounds %struct.ref_s, %struct.ref_s* %19, i32 0, i32 0
  %type_attrs6 = getelementptr inbounds %struct.tas_s, %struct.tas_s* %tas5, i32 0, i32 0
  %20 = bitcast i16* %type_attrs6 to i8*
  %arrayidx7 = getelementptr inbounds i8, i8* %20, i64 1
  %21 = load i8, i8* %arrayidx7, align 1, !tbaa !54
  %conv8 = zext i8 %21 to i32
  %cmp = icmp ne i32 %conv, %conv8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %do.body
  %22 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %23 = load %struct.ref_s*, %struct.ref_s** %poldspace, align 8, !tbaa !1
  %call = call i32 @get_space_object(%struct.gs_context_state_s* %22, %struct.ref_s* %23, %struct.PS_colour_space_s** %oldcspace) #7
  store i32 %call, i32* %code, align 4, !tbaa !26
  %24 = load i32, i32* %code, align 4, !tbaa !26
  %cmp10 = icmp slt i32 %24, 0
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.end
  %25 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %26 = load %struct.ref_s*, %struct.ref_s** %pnewspace, align 8, !tbaa !1
  %call14 = call i32 @get_space_object(%struct.gs_context_state_s* %25, %struct.ref_s* %26, %struct.PS_colour_space_s** %newcspace) #7
  store i32 %call14, i32* %code, align 4, !tbaa !26
  %27 = load i32, i32* %code, align 4, !tbaa !26
  %cmp15 = icmp slt i32 %27, 0
  br i1 %cmp15, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.end.13
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.18:                                        ; preds = %if.end.13
  %28 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %28) #1
  %29 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %29) #1
  %30 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %oldcspace, align 8, !tbaa !1
  %name = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %30, i32 0, i32 0
  %31 = load i8*, i8** %name, align 8, !tbaa !112
  %32 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %newcspace, align 8, !tbaa !1
  %name19 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %32, i32 0, i32 0
  %33 = load i8*, i8** %name19, align 8, !tbaa !112
  %call20 = call i32 @strcmp(i8* %31, i8* %33) #8
  store i32 %call20, i32* %tmp, !tbaa !26
  %34 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %34) #1
  %35 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #1
  %36 = load i32, i32* %tmp, !tbaa !26
  %cmp21 = icmp ne i32 %36, 0
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.18
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.24:                                        ; preds = %if.end.18
  %37 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %oldcspace, align 8, !tbaa !1
  %compareproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %37, i32 0, i32 10
  %38 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s*)** %compareproc, align 8, !tbaa !144
  %39 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %40 = load %struct.ref_s*, %struct.ref_s** %poldspace, align 8, !tbaa !1
  %41 = load %struct.ref_s*, %struct.ref_s** %pnewspace, align 8, !tbaa !1
  %call25 = call i32 %38(%struct.gs_context_state_s* %39, %struct.ref_s* %40, %struct.ref_s* %41) #7
  %tobool = icmp ne i32 %call25, 0
  br i1 %tobool, label %if.end.27, label %if.then.26

if.then.26:                                       ; preds = %if.end.24
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.27:                                        ; preds = %if.end.24
  %42 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %newcspace, align 8, !tbaa !1
  %name28 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %42, i32 0, i32 0
  %43 = load i8*, i8** %name28, align 8, !tbaa !112
  %call29 = call i32 @name_is_device_color(i8* %43) #7
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.then.31, label %if.end.43

if.then.31:                                       ; preds = %if.end.27
  %44 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %pgs = getelementptr inbounds %struct.gs_context_state_s, %struct.gs_context_state_s* %44, i32 0, i32 0
  %45 = load %struct.gs_state_s*, %struct.gs_state_s** %pgs, align 8, !tbaa !43
  %color = getelementptr inbounds %struct.gs_state_s, %struct.gs_state_s* %45, i32 0, i32 69
  %arrayidx32 = getelementptr inbounds [2 x %struct.anon], [2 x %struct.anon]* %color, i32 0, i64 0
  %color_space = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx32, i32 0, i32 0
  %46 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %color_space, align 8, !tbaa !61
  %call33 = call i32 @gs_color_space_is_CIE(%struct.gs_color_space_s* %46) #7
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %if.then.31
  %47 = load i32, i32* %isCIE.addr, align 4, !tbaa !26
  %tobool36 = icmp ne i32 %47, 0
  br i1 %tobool36, label %if.end.38, label %if.then.37

if.then.37:                                       ; preds = %if.then.35
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %if.then.35
  br label %if.end.42

if.else:                                          ; preds = %if.then.31
  %48 = load i32, i32* %isCIE.addr, align 4, !tbaa !26
  %tobool39 = icmp ne i32 %48, 0
  br i1 %tobool39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %if.else
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.end.38
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.end.27
  %49 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %oldcspace, align 8, !tbaa !1
  %alternateproc = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %49, i32 0, i32 3
  %50 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc, align 8, !tbaa !131
  %tobool44 = icmp ne i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)* %50, null
  br i1 %tobool44, label %if.end.46, label %if.then.45

if.then.45:                                       ; preds = %if.end.43
  br label %do.end

if.end.46:                                        ; preds = %if.end.43
  %51 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %oldcspace, align 8, !tbaa !1
  %alternateproc47 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %51, i32 0, i32 3
  %52 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc47, align 8, !tbaa !131
  %53 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %54 = load %struct.ref_s*, %struct.ref_s** %poldspace, align 8, !tbaa !1
  %call48 = call i32 %52(%struct.gs_context_state_s* %53, %struct.ref_s* %54, %struct.ref_s** %poldspace, i32* %CIESubst) #7
  store i32 %call48, i32* %code, align 4, !tbaa !26
  %55 = load i32, i32* %code, align 4, !tbaa !26
  %cmp49 = icmp slt i32 %55, 0
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %if.end.46
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %if.end.46
  %56 = load %struct.PS_colour_space_s*, %struct.PS_colour_space_s** %newcspace, align 8, !tbaa !1
  %alternateproc53 = getelementptr inbounds %struct.PS_colour_space_s, %struct.PS_colour_space_s* %56, i32 0, i32 3
  %57 = load i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)*, i32 (%struct.gs_context_state_s*, %struct.ref_s*, %struct.ref_s**, i32*)** %alternateproc53, align 8, !tbaa !131
  %58 = load %struct.gs_context_state_s*, %struct.gs_context_state_s** %i_ctx_p.addr, align 8, !tbaa !1
  %59 = load %struct.ref_s*, %struct.ref_s** %pnewspace, align 8, !tbaa !1
  %call54 = call i32 %57(%struct.gs_context_state_s* %58, %struct.ref_s* %59, %struct.ref_s** %pnewspace, i32* %CIESubst) #7
  store i32 %call54, i32* %code, align 4, !tbaa !26
  %60 = load i32, i32* %code, align 4, !tbaa !26
  %cmp55 = icmp slt i32 %60, 0
  br i1 %cmp55, label %if.then.57, label %if.end.58

if.then.57:                                       ; preds = %if.end.52
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.58:                                        ; preds = %if.end.52
  br label %do.cond

do.cond:                                          ; preds = %if.end.58
  br i1 true, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %if.then.45
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.then.57, %if.then.51, %if.then.40, %if.then.37, %if.then.26, %if.then.23, %if.then.17, %if.then.12, %if.then
  %61 = bitcast i32* %CIESubst to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #1
  %62 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %62) #1
  %63 = bitcast %struct.ref_s** %pnewspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %63) #1
  %64 = bitcast %struct.ref_s* %newspace to i8*
  call void @llvm.lifetime.end(i64 16, i8* %64) #1
  %65 = bitcast %struct.ref_s** %poldspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %65) #1
  %66 = bitcast %struct.ref_s* %oldspace to i8*
  call void @llvm.lifetime.end(i64 16, i8* %66) #1
  %67 = bitcast %struct.PS_colour_space_s** %newcspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67) #1
  %68 = bitcast %struct.PS_colour_space_s** %oldcspace to i8*
  call void @llvm.lifetime.end(i64 8, i8* %68) #1
  %69 = load i32, i32* %retval
  ret i32 %69
}

; Function Attrs: nounwind uwtable
define internal i32 @name_is_device_color(i8* %cs_name) #0 {
entry:
  %cs_name.addr = alloca i8*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp35 = alloca i32, align 4
  %__s1_len40 = alloca i64, align 8
  %__s2_len42 = alloca i64, align 8
  %tmp43 = alloca i32, align 4
  %__s150 = alloca i8*, align 8
  %__result52 = alloca i32, align 4
  %tmp90 = alloca i32, align 4
  %__s1_len98 = alloca i64, align 8
  %__s2_len100 = alloca i64, align 8
  %tmp101 = alloca i32, align 4
  %__s1108 = alloca i8*, align 8
  %__result110 = alloca i32, align 4
  %tmp148 = alloca i32, align 4
  store i8* %cs_name, i8** %cs_name.addr, align 8, !tbaa !1
  %0 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i64 1) to i64), i64 ptrtoint ([11 x i8]* @.str to i64)), i64 1), label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %call = call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0)) #9
  store i64 %call, i64* %__s2_len, align 8, !tbaa !23
  %2 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp = icmp ult i64 %2, 4
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %3 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = load i8*, i8** %cs_name.addr, align 8, !tbaa !1
  store i8* %4, i8** %__s1, align 8, !tbaa !1
  %5 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 0
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !54
  %conv = zext i8 %7 to i32
  %8 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), align 1, !tbaa !54
  %conv3 = zext i8 %8 to i32
  %sub = sub nsw i32 %conv, %conv3
  store i32 %sub, i32* %__result, align 4, !tbaa !26
  %9 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp4 = icmp ugt i64 %9, 0
  br i1 %cmp4, label %land.lhs.true.6, label %if.end.34

land.lhs.true.6:                                  ; preds = %cond.true
  %10 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp7 = icmp eq i32 %10, 0
  br i1 %cmp7, label %if.then, label %if.end.34

if.then:                                          ; preds = %land.lhs.true.6
  %11 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx9, align 1, !tbaa !54
  %conv10 = zext i8 %12 to i32
  %13 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i64 1), align 1, !tbaa !54
  %conv11 = zext i8 %13 to i32
  %sub12 = sub nsw i32 %conv10, %conv11
  store i32 %sub12, i32* %__result, align 4, !tbaa !26
  %14 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp13 = icmp ugt i64 %14, 1
  br i1 %cmp13, label %land.lhs.true.15, label %if.end.33

land.lhs.true.15:                                 ; preds = %if.then
  %15 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp16 = icmp eq i32 %15, 0
  br i1 %cmp16, label %if.then.18, label %if.end.33

if.then.18:                                       ; preds = %land.lhs.true.15
  %16 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds i8, i8* %16, i64 2
  %17 = load i8, i8* %arrayidx19, align 1, !tbaa !54
  %conv20 = zext i8 %17 to i32
  %18 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i64 2), align 1, !tbaa !54
  %conv21 = zext i8 %18 to i32
  %sub22 = sub nsw i32 %conv20, %conv21
  store i32 %sub22, i32* %__result, align 4, !tbaa !26
  %19 = load i64, i64* %__s2_len, align 8, !tbaa !23
  %cmp23 = icmp ugt i64 %19, 2
  br i1 %cmp23, label %land.lhs.true.25, label %if.end

land.lhs.true.25:                                 ; preds = %if.then.18
  %20 = load i32, i32* %__result, align 4, !tbaa !26
  %cmp26 = icmp eq i32 %20, 0
  br i1 %cmp26, label %if.then.28, label %if.end

if.then.28:                                       ; preds = %land.lhs.true.25
  %21 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds i8, i8* %21, i64 3
  %22 = load i8, i8* %arrayidx29, align 1, !tbaa !54
  %conv30 = zext i8 %22 to i32
  %23 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i64 3), align 1, !tbaa !54
  %conv31 = zext i8 %23 to i32
  %sub32 = sub nsw i32 %conv30, %conv31
  store i32 %sub32, i32* %__result, align 4, !tbaa !26
  br label %if.end

if.end:                                           ; preds = %if.then.28, %land.lhs.true.25, %if.then.18
  br label %if.end.33

if.end.33:                                        ; preds = %if.end, %land.lhs.true.15, %if.then
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %land.lhs.true.6, %cond.true
  %24 = load i32, i32* %__result, align 4, !tbaa !26
  store i32 %24, i32* %tmp35, !tbaa !26
  %25 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #1
  %26 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %26) #1
  %27 = load i32, i32* %tmp35, !tbaa !26
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  %28 = load i8*, i8** %cs_name.addr, align 8, !tbaa !1
  %call36 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0)) #8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.34
  %cond = phi i32 [ %27, %if.end.34 ], [ %call36, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !26
  %29 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %29) #1
  %30 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %30) #1
  %31 = load i32, i32* %tmp, !tbaa !26
  %cmp37 = icmp eq i32 %31, 0
  br i1 %cmp37, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end
  %32 = bitcast i64* %__s1_len40 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %32) #1
  %33 = bitcast i64* %__s2_len42 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %33) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i64 1) to i64), i64 ptrtoint ([10 x i8]* @.str.1 to i64)), i64 1), label %land.lhs.true.44, label %cond.false.91

land.lhs.true.44:                                 ; preds = %lor.lhs.false
  %call45 = call i64 @strlen(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0)) #9
  store i64 %call45, i64* %__s2_len42, align 8, !tbaa !23
  %34 = load i64, i64* %__s2_len42, align 8, !tbaa !23
  %cmp46 = icmp ult i64 %34, 4
  br i1 %cmp46, label %cond.true.48, label %cond.false.91

cond.true.48:                                     ; preds = %land.lhs.true.44
  %35 = bitcast i8** %__s150 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %35) #1
  %36 = load i8*, i8** %cs_name.addr, align 8, !tbaa !1
  store i8* %36, i8** %__s150, align 8, !tbaa !1
  %37 = bitcast i32* %__result52 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %37) #1
  %38 = load i8*, i8** %__s150, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds i8, i8* %38, i64 0
  %39 = load i8, i8* %arrayidx53, align 1, !tbaa !54
  %conv54 = zext i8 %39 to i32
  %40 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), align 1, !tbaa !54
  %conv55 = zext i8 %40 to i32
  %sub56 = sub nsw i32 %conv54, %conv55
  store i32 %sub56, i32* %__result52, align 4, !tbaa !26
  %41 = load i64, i64* %__s2_len42, align 8, !tbaa !23
  %cmp57 = icmp ugt i64 %41, 0
  br i1 %cmp57, label %land.lhs.true.59, label %if.end.89

land.lhs.true.59:                                 ; preds = %cond.true.48
  %42 = load i32, i32* %__result52, align 4, !tbaa !26
  %cmp60 = icmp eq i32 %42, 0
  br i1 %cmp60, label %if.then.62, label %if.end.89

if.then.62:                                       ; preds = %land.lhs.true.59
  %43 = load i8*, i8** %__s150, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds i8, i8* %43, i64 1
  %44 = load i8, i8* %arrayidx63, align 1, !tbaa !54
  %conv64 = zext i8 %44 to i32
  %45 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i64 1), align 1, !tbaa !54
  %conv65 = zext i8 %45 to i32
  %sub66 = sub nsw i32 %conv64, %conv65
  store i32 %sub66, i32* %__result52, align 4, !tbaa !26
  %46 = load i64, i64* %__s2_len42, align 8, !tbaa !23
  %cmp67 = icmp ugt i64 %46, 1
  br i1 %cmp67, label %land.lhs.true.69, label %if.end.88

land.lhs.true.69:                                 ; preds = %if.then.62
  %47 = load i32, i32* %__result52, align 4, !tbaa !26
  %cmp70 = icmp eq i32 %47, 0
  br i1 %cmp70, label %if.then.72, label %if.end.88

if.then.72:                                       ; preds = %land.lhs.true.69
  %48 = load i8*, i8** %__s150, align 8, !tbaa !1
  %arrayidx73 = getelementptr inbounds i8, i8* %48, i64 2
  %49 = load i8, i8* %arrayidx73, align 1, !tbaa !54
  %conv74 = zext i8 %49 to i32
  %50 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i64 2), align 1, !tbaa !54
  %conv75 = zext i8 %50 to i32
  %sub76 = sub nsw i32 %conv74, %conv75
  store i32 %sub76, i32* %__result52, align 4, !tbaa !26
  %51 = load i64, i64* %__s2_len42, align 8, !tbaa !23
  %cmp77 = icmp ugt i64 %51, 2
  br i1 %cmp77, label %land.lhs.true.79, label %if.end.87

land.lhs.true.79:                                 ; preds = %if.then.72
  %52 = load i32, i32* %__result52, align 4, !tbaa !26
  %cmp80 = icmp eq i32 %52, 0
  br i1 %cmp80, label %if.then.82, label %if.end.87

if.then.82:                                       ; preds = %land.lhs.true.79
  %53 = load i8*, i8** %__s150, align 8, !tbaa !1
  %arrayidx83 = getelementptr inbounds i8, i8* %53, i64 3
  %54 = load i8, i8* %arrayidx83, align 1, !tbaa !54
  %conv84 = zext i8 %54 to i32
  %55 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i64 3), align 1, !tbaa !54
  %conv85 = zext i8 %55 to i32
  %sub86 = sub nsw i32 %conv84, %conv85
  store i32 %sub86, i32* %__result52, align 4, !tbaa !26
  br label %if.end.87

if.end.87:                                        ; preds = %if.then.82, %land.lhs.true.79, %if.then.72
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %land.lhs.true.69, %if.then.62
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88, %land.lhs.true.59, %cond.true.48
  %56 = load i32, i32* %__result52, align 4, !tbaa !26
  store i32 %56, i32* %tmp90, !tbaa !26
  %57 = bitcast i32* %__result52 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #1
  %58 = bitcast i8** %__s150 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %58) #1
  %59 = load i32, i32* %tmp90, !tbaa !26
  br label %cond.end.93

cond.false.91:                                    ; preds = %land.lhs.true.44, %lor.lhs.false
  %60 = load i8*, i8** %cs_name.addr, align 8, !tbaa !1
  %call92 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0)) #8
  br label %cond.end.93

cond.end.93:                                      ; preds = %cond.false.91, %if.end.89
  %cond94 = phi i32 [ %59, %if.end.89 ], [ %call92, %cond.false.91 ]
  store i32 %cond94, i32* %tmp43, !tbaa !26
  %61 = bitcast i64* %__s2_len42 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %61) #1
  %62 = bitcast i64* %__s1_len40 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %62) #1
  %63 = load i32, i32* %tmp43, !tbaa !26
  %cmp95 = icmp eq i32 %63, 0
  br i1 %cmp95, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.end.93
  %64 = bitcast i64* %__s1_len98 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %64) #1
  %65 = bitcast i64* %__s2_len100 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %65) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i64 1) to i64), i64 ptrtoint ([11 x i8]* @.str.2 to i64)), i64 1), label %land.lhs.true.102, label %cond.false.149

land.lhs.true.102:                                ; preds = %lor.rhs
  %call103 = call i64 @strlen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0)) #9
  store i64 %call103, i64* %__s2_len100, align 8, !tbaa !23
  %66 = load i64, i64* %__s2_len100, align 8, !tbaa !23
  %cmp104 = icmp ult i64 %66, 4
  br i1 %cmp104, label %cond.true.106, label %cond.false.149

cond.true.106:                                    ; preds = %land.lhs.true.102
  %67 = bitcast i8** %__s1108 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %67) #1
  %68 = load i8*, i8** %cs_name.addr, align 8, !tbaa !1
  store i8* %68, i8** %__s1108, align 8, !tbaa !1
  %69 = bitcast i32* %__result110 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %69) #1
  %70 = load i8*, i8** %__s1108, align 8, !tbaa !1
  %arrayidx111 = getelementptr inbounds i8, i8* %70, i64 0
  %71 = load i8, i8* %arrayidx111, align 1, !tbaa !54
  %conv112 = zext i8 %71 to i32
  %72 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), align 1, !tbaa !54
  %conv113 = zext i8 %72 to i32
  %sub114 = sub nsw i32 %conv112, %conv113
  store i32 %sub114, i32* %__result110, align 4, !tbaa !26
  %73 = load i64, i64* %__s2_len100, align 8, !tbaa !23
  %cmp115 = icmp ugt i64 %73, 0
  br i1 %cmp115, label %land.lhs.true.117, label %if.end.147

land.lhs.true.117:                                ; preds = %cond.true.106
  %74 = load i32, i32* %__result110, align 4, !tbaa !26
  %cmp118 = icmp eq i32 %74, 0
  br i1 %cmp118, label %if.then.120, label %if.end.147

if.then.120:                                      ; preds = %land.lhs.true.117
  %75 = load i8*, i8** %__s1108, align 8, !tbaa !1
  %arrayidx121 = getelementptr inbounds i8, i8* %75, i64 1
  %76 = load i8, i8* %arrayidx121, align 1, !tbaa !54
  %conv122 = zext i8 %76 to i32
  %77 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i64 1), align 1, !tbaa !54
  %conv123 = zext i8 %77 to i32
  %sub124 = sub nsw i32 %conv122, %conv123
  store i32 %sub124, i32* %__result110, align 4, !tbaa !26
  %78 = load i64, i64* %__s2_len100, align 8, !tbaa !23
  %cmp125 = icmp ugt i64 %78, 1
  br i1 %cmp125, label %land.lhs.true.127, label %if.end.146

land.lhs.true.127:                                ; preds = %if.then.120
  %79 = load i32, i32* %__result110, align 4, !tbaa !26
  %cmp128 = icmp eq i32 %79, 0
  br i1 %cmp128, label %if.then.130, label %if.end.146

if.then.130:                                      ; preds = %land.lhs.true.127
  %80 = load i8*, i8** %__s1108, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds i8, i8* %80, i64 2
  %81 = load i8, i8* %arrayidx131, align 1, !tbaa !54
  %conv132 = zext i8 %81 to i32
  %82 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i64 2), align 1, !tbaa !54
  %conv133 = zext i8 %82 to i32
  %sub134 = sub nsw i32 %conv132, %conv133
  store i32 %sub134, i32* %__result110, align 4, !tbaa !26
  %83 = load i64, i64* %__s2_len100, align 8, !tbaa !23
  %cmp135 = icmp ugt i64 %83, 2
  br i1 %cmp135, label %land.lhs.true.137, label %if.end.145

land.lhs.true.137:                                ; preds = %if.then.130
  %84 = load i32, i32* %__result110, align 4, !tbaa !26
  %cmp138 = icmp eq i32 %84, 0
  br i1 %cmp138, label %if.then.140, label %if.end.145

if.then.140:                                      ; preds = %land.lhs.true.137
  %85 = load i8*, i8** %__s1108, align 8, !tbaa !1
  %arrayidx141 = getelementptr inbounds i8, i8* %85, i64 3
  %86 = load i8, i8* %arrayidx141, align 1, !tbaa !54
  %conv142 = zext i8 %86 to i32
  %87 = load i8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i64 3), align 1, !tbaa !54
  %conv143 = zext i8 %87 to i32
  %sub144 = sub nsw i32 %conv142, %conv143
  store i32 %sub144, i32* %__result110, align 4, !tbaa !26
  br label %if.end.145

if.end.145:                                       ; preds = %if.then.140, %land.lhs.true.137, %if.then.130
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %land.lhs.true.127, %if.then.120
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %land.lhs.true.117, %cond.true.106
  %88 = load i32, i32* %__result110, align 4, !tbaa !26
  store i32 %88, i32* %tmp148, !tbaa !26
  %89 = bitcast i32* %__result110 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %89) #1
  %90 = bitcast i8** %__s1108 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %90) #1
  %91 = load i32, i32* %tmp148, !tbaa !26
  br label %cond.end.151

cond.false.149:                                   ; preds = %land.lhs.true.102, %lor.rhs
  %92 = load i8*, i8** %cs_name.addr, align 8, !tbaa !1
  %call150 = call i32 @strcmp(i8* %92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0)) #8
  br label %cond.end.151

cond.end.151:                                     ; preds = %cond.false.149, %if.end.147
  %cond152 = phi i32 [ %91, %if.end.147 ], [ %call150, %cond.false.149 ]
  store i32 %cond152, i32* %tmp101, !tbaa !26
  %93 = bitcast i64* %__s2_len100 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %93) #1
  %94 = bitcast i64* %__s1_len98 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %94) #1
  %95 = load i32, i32* %tmp101, !tbaa !26
  %cmp153 = icmp eq i32 %95, 0
  br label %lor.end

lor.end:                                          ; preds = %cond.end.151, %cond.end.93, %cond.end
  %96 = phi i1 [ true, %cond.end.93 ], [ true, %cond.end ], [ %cmp153, %cond.end.151 ]
  %lor.ext = zext i1 %96 to i32
  ret i32 %lor.ext
}

declare i32 @gs_color_space_is_CIE(%struct.gs_color_space_s*) #2

declare %struct.gx_device_s* @gs_currentdevice(%struct.gs_state_s*) #2

declare i32 @gs_settransfer_remap(%struct.gs_state_s*, float (double, %struct.gx_transfer_map_s*)*, i32) #2

declare float @gs_mapped_transfer(double, %struct.gx_transfer_map_s*) #2

declare i32 @errprintf(%struct.gs_memory_s*, i8*, ...) #2

declare i64 @gx_default_encode_color(%struct.gx_device_s*, i16*) #2

declare i32 @gx_default_decode_color(%struct.gx_device_s*, i64, i16*) #2

declare i32 @gs_includecolorspace(%struct.gs_state_s*, i8*, i32) #2

declare i32 @make_floats(%struct.ref_s*, float*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @hsb2rgb(float* %HSB) #0 {
entry:
  %HSB.addr = alloca float*, align 8
  %RGB = alloca [3 x float], align 4
  %mn = alloca float, align 4
  %md = alloca float, align 4
  %i = alloca i32, align 4
  store float* %HSB, float** %HSB.addr, align 8, !tbaa !1
  %0 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.start(i64 12, i8* %0) #1
  %1 = bitcast float* %mn to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = bitcast float* %md to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %4, i64 1
  %5 = load float, float* %arrayidx, align 4, !tbaa !20
  %conv = fpext float %5 to double
  %sub = fsub double 1.000000e+00, %conv
  %6 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds float, float* %6, i64 2
  %7 = load float, float* %arrayidx1, align 4, !tbaa !20
  %conv2 = fpext float %7 to double
  %mul = fmul double %sub, %conv2
  %conv3 = fptrunc double %mul to float
  store float %conv3, float* %mn, align 4, !tbaa !20
  %8 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1
  %9 = load float, float* %arrayidx4, align 4, !tbaa !20
  %conv5 = fpext float %9 to double
  %mul6 = fmul double 6.000000e+00, %conv5
  %10 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2
  %11 = load float, float* %arrayidx7, align 4, !tbaa !20
  %conv8 = fpext float %11 to double
  %mul9 = fmul double %mul6, %conv8
  %conv10 = fptrunc double %mul9 to float
  store float %conv10, float* %md, align 4, !tbaa !20
  %12 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds float, float* %12, i64 0
  %13 = load float, float* %arrayidx11, align 4, !tbaa !20
  %conv12 = fpext float %13 to double
  %mul13 = fmul double 6.000000e+00, %conv12
  %call = call double @floor(double %mul13) #10
  %conv14 = fptosi double %call to i32
  switch i32 %conv14, label %sw.default [
    i32 6, label %sw.bb
    i32 0, label %sw.bb.16
    i32 1, label %sw.bb.23
    i32 2, label %sw.bb.36
    i32 3, label %sw.bb.49
    i32 4, label %sw.bb.62
    i32 5, label %sw.bb.75
  ]

sw.bb:                                            ; preds = %entry
  %14 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds float, float* %14, i64 0
  store float 0.000000e+00, float* %arrayidx15, align 4, !tbaa !20
  br label %sw.default

sw.default:                                       ; preds = %entry, %sw.bb
  br label %sw.bb.16

sw.bb.16:                                         ; preds = %entry, %sw.default
  %15 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds float, float* %15, i64 2
  %16 = load float, float* %arrayidx17, align 4, !tbaa !20
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %16, float* %arrayidx18, align 4, !tbaa !20
  %17 = load float, float* %mn, align 4, !tbaa !20
  %18 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds float, float* %18, i64 0
  %19 = load float, float* %arrayidx19, align 4, !tbaa !20
  %20 = load float, float* %md, align 4, !tbaa !20
  %mul20 = fmul float %19, %20
  %add = fadd float %17, %mul20
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %add, float* %arrayidx21, align 4, !tbaa !20
  %21 = load float, float* %mn, align 4, !tbaa !20
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %21, float* %arrayidx22, align 4, !tbaa !20
  br label %sw.epilog

sw.bb.23:                                         ; preds = %entry
  %22 = load float, float* %mn, align 4, !tbaa !20
  %conv24 = fpext float %22 to double
  %23 = load float, float* %md, align 4, !tbaa !20
  %conv25 = fpext float %23 to double
  %24 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds float, float* %24, i64 0
  %25 = load float, float* %arrayidx26, align 4, !tbaa !20
  %conv27 = fpext float %25 to double
  %sub28 = fsub double 0x3FD5555555555555, %conv27
  %mul29 = fmul double %conv25, %sub28
  %add30 = fadd double %conv24, %mul29
  %conv31 = fptrunc double %add30 to float
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %conv31, float* %arrayidx32, align 4, !tbaa !20
  %26 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds float, float* %26, i64 2
  %27 = load float, float* %arrayidx33, align 4, !tbaa !20
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %27, float* %arrayidx34, align 4, !tbaa !20
  %28 = load float, float* %mn, align 4, !tbaa !20
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %28, float* %arrayidx35, align 4, !tbaa !20
  br label %sw.epilog

sw.bb.36:                                         ; preds = %entry
  %29 = load float, float* %mn, align 4, !tbaa !20
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %29, float* %arrayidx37, align 4, !tbaa !20
  %30 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds float, float* %30, i64 2
  %31 = load float, float* %arrayidx38, align 4, !tbaa !20
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %31, float* %arrayidx39, align 4, !tbaa !20
  %32 = load float, float* %mn, align 4, !tbaa !20
  %conv40 = fpext float %32 to double
  %33 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds float, float* %33, i64 0
  %34 = load float, float* %arrayidx41, align 4, !tbaa !20
  %conv42 = fpext float %34 to double
  %sub43 = fsub double %conv42, 0x3FD5555555555555
  %35 = load float, float* %md, align 4, !tbaa !20
  %conv44 = fpext float %35 to double
  %mul45 = fmul double %sub43, %conv44
  %add46 = fadd double %conv40, %mul45
  %conv47 = fptrunc double %add46 to float
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %conv47, float* %arrayidx48, align 4, !tbaa !20
  br label %sw.epilog

sw.bb.49:                                         ; preds = %entry
  %36 = load float, float* %mn, align 4, !tbaa !20
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %36, float* %arrayidx50, align 4, !tbaa !20
  %37 = load float, float* %mn, align 4, !tbaa !20
  %conv51 = fpext float %37 to double
  %38 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds float, float* %38, i64 0
  %39 = load float, float* %arrayidx52, align 4, !tbaa !20
  %conv53 = fpext float %39 to double
  %sub54 = fsub double 0x3FE5555555555555, %conv53
  %40 = load float, float* %md, align 4, !tbaa !20
  %conv55 = fpext float %40 to double
  %mul56 = fmul double %sub54, %conv55
  %add57 = fadd double %conv51, %mul56
  %conv58 = fptrunc double %add57 to float
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %conv58, float* %arrayidx59, align 4, !tbaa !20
  %41 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds float, float* %41, i64 2
  %42 = load float, float* %arrayidx60, align 4, !tbaa !20
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %42, float* %arrayidx61, align 4, !tbaa !20
  br label %sw.epilog

sw.bb.62:                                         ; preds = %entry
  %43 = load float, float* %mn, align 4, !tbaa !20
  %conv63 = fpext float %43 to double
  %44 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds float, float* %44, i64 0
  %45 = load float, float* %arrayidx64, align 4, !tbaa !20
  %conv65 = fpext float %45 to double
  %sub66 = fsub double %conv65, 0x3FE5555555555555
  %46 = load float, float* %md, align 4, !tbaa !20
  %conv67 = fpext float %46 to double
  %mul68 = fmul double %sub66, %conv67
  %add69 = fadd double %conv63, %mul68
  %conv70 = fptrunc double %add69 to float
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %conv70, float* %arrayidx71, align 4, !tbaa !20
  %47 = load float, float* %mn, align 4, !tbaa !20
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %47, float* %arrayidx72, align 4, !tbaa !20
  %48 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx73 = getelementptr inbounds float, float* %48, i64 2
  %49 = load float, float* %arrayidx73, align 4, !tbaa !20
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %49, float* %arrayidx74, align 4, !tbaa !20
  br label %sw.epilog

sw.bb.75:                                         ; preds = %entry
  %50 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx76 = getelementptr inbounds float, float* %50, i64 2
  %51 = load float, float* %arrayidx76, align 4, !tbaa !20
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 0
  store float %51, float* %arrayidx77, align 4, !tbaa !20
  %52 = load float, float* %mn, align 4, !tbaa !20
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 1
  store float %52, float* %arrayidx78, align 4, !tbaa !20
  %53 = load float, float* %mn, align 4, !tbaa !20
  %conv79 = fpext float %53 to double
  %54 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx80 = getelementptr inbounds float, float* %54, i64 0
  %55 = load float, float* %arrayidx80, align 4, !tbaa !20
  %conv81 = fpext float %55 to double
  %sub82 = fsub double 1.000000e+00, %conv81
  %56 = load float, float* %md, align 4, !tbaa !20
  %conv83 = fpext float %56 to double
  %mul84 = fmul double %sub82, %conv83
  %add85 = fadd double %conv79, %mul84
  %conv86 = fptrunc double %add85 to float
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 2
  store float %conv86, float* %arrayidx87, align 4, !tbaa !20
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb.75, %sw.bb.62, %sw.bb.49, %sw.bb.36, %sw.bb.23, %sw.bb.16
  store i32 0, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %57 = load i32, i32* %i, align 4, !tbaa !26
  %cmp = icmp slt i32 %57, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %58 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom
  %59 = load float, float* %arrayidx89, align 4, !tbaa !20
  %cmp90 = fcmp olt float %59, 0.000000e+00
  br i1 %cmp90, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom92
  store float 0.000000e+00, float* %arrayidx93, align 4, !tbaa !20
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %61 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom94
  %62 = load float, float* %arrayidx95, align 4, !tbaa !20
  %cmp96 = fcmp ogt float %62, 1.000000e+00
  br i1 %cmp96, label %if.then.98, label %if.end.101

if.then.98:                                       ; preds = %if.end
  %63 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom99 = sext i32 %63 to i64
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom99
  store float 1.000000e+00, float* %arrayidx100, align 4, !tbaa !20
  br label %if.end.101

if.end.101:                                       ; preds = %if.then.98, %if.end
  %64 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom102 = sext i32 %64 to i64
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %RGB, i32 0, i64 %idxprom102
  %65 = load float, float* %arrayidx103, align 4, !tbaa !20
  %66 = load i32, i32* %i, align 4, !tbaa !26
  %idxprom104 = sext i32 %66 to i64
  %67 = load float*, float** %HSB.addr, align 8, !tbaa !1
  %arrayidx105 = getelementptr inbounds float, float* %67, i64 %idxprom104
  store float %65, float* %arrayidx105, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %if.end.101
  %68 = load i32, i32* %i, align 4, !tbaa !26
  %inc = add nsw i32 %68, 1
  store i32 %inc, i32* %i, align 4, !tbaa !26
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %69 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #1
  %70 = bitcast float* %md to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #1
  %71 = bitcast float* %mn to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #1
  %72 = bitcast [3 x float]* %RGB to i8*
  call void @llvm.lifetime.end(i64 12, i8* %72) #1
  ret i32 0
}

declare i32 @dict_length(%struct.ref_s*) #2

declare i32 @gs_gsave(%struct.gs_state_s*) #2

declare i32 @dict_index_entry(%struct.ref_s*, i32, %struct.ref_s*) #2

declare i32 @gs_grestore(%struct.gs_state_s*) #2

declare i32 @gs_attachattributecolorspace(i64, %struct.gs_state_s*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin }
attributes #8 = { nobuiltin nounwind }
attributes #9 = { nobuiltin nounwind readonly }
attributes #10 = { nobuiltin nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !9, i64 4}
!6 = !{!"ref_s", !7, i64 0, !3, i64 8}
!7 = !{!"tas_s", !8, i64 0, !8, i64 2, !9, i64 4}
!8 = !{!"short", !3, i64 0}
!9 = !{!"int", !3, i64 0}
!10 = !{!11, !2, i64 624}
!11 = !{!"gs_context_state_s", !2, i64 0, !12, i64 8, !9, i64 80, !6, i64 88, !6, i64 104, !14, i64 120, !14, i64 128, !14, i64 136, !9, i64 144, !9, i64 148, !6, i64 152, !6, i64 168, !9, i64 184, !9, i64 188, !9, i64 192, !9, i64 196, !2, i64 200, !3, i64 208, !2, i64 256, !15, i64 264, !15, i64 304, !2, i64 344, !9, i64 352, !2, i64 360, !16, i64 368, !18, i64 520, !19, i64 624, !2, i64 720}
!12 = !{!"gs_dual_memory_s", !2, i64 0, !13, i64 8, !9, i64 48, !2, i64 56, !9, i64 64, !9, i64 68}
!13 = !{!"vm_spaces_s", !2, i64 0, !3, i64 8}
!14 = !{!"long", !3, i64 0}
!15 = !{!"op_array_table_s", !6, i64 0, !2, i64 16, !9, i64 24, !9, i64 28, !9, i64 32}
!16 = !{!"dict_stack_s", !17, i64 0, !9, i64 96, !9, i64 100, !9, i64 104, !2, i64 112, !9, i64 120, !2, i64 128, !6, i64 136}
!17 = !{!"ref_stack_s", !2, i64 0, !2, i64 8, !2, i64 16, !6, i64 24, !9, i64 40, !9, i64 44, !6, i64 48, !9, i64 64, !9, i64 68, !9, i64 72, !2, i64 80, !2, i64 88}
!18 = !{!"exec_stack_s", !17, i64 0, !2, i64 96}
!19 = !{!"op_stack_s", !17, i64 0}
!20 = !{!21, !21, i64 0}
!21 = !{!"float", !3, i64 0}
!22 = !{!6, !8, i64 0}
!23 = !{!14, !14, i64 0}
!24 = !{i64 0, i64 2, !25, i64 2, i64 2, !25, i64 4, i64 4, !26, i64 8, i64 8, !23, i64 8, i64 2, !25, i64 8, i64 4, !20, i64 8, i64 8, !23, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !23}
!25 = !{!8, !8, i64 0}
!26 = !{!9, !9, i64 0}
!27 = !{!11, !2, i64 520}
!28 = !{!29, !2, i64 8}
!29 = !{!"gs_state_s", !9, i64 0, !2, i64 8, !2, i64 16, !30, i64 24, !9, i64 128, !33, i64 132, !9, i64 168, !34, i64 176, !34, i64 192, !9, i64 208, !9, i64 212, !8, i64 216, !3, i64 220, !36, i64 224, !36, i64 228, !37, i64 232, !14, i64 240, !9, i64 248, !9, i64 252, !9, i64 256, !2, i64 264, !9, i64 272, !9, i64 276, !9, i64 280, !9, i64 284, !9, i64 288, !9, i64 292, !21, i64 296, !38, i64 300, !9, i64 308, !9, i64 312, !9, i64 316, !21, i64 320, !9, i64 324, !9, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !3, i64 376, !2, i64 392, !2, i64 400, !9, i64 408, !2, i64 416, !2, i64 424, !39, i64 432, !3, i64 496, !2, i64 1008, !2, i64 1016, !40, i64 1024, !2, i64 1304, !2, i64 1312, !2, i64 1320, !2, i64 1328, !40, i64 1336, !2, i64 1616, !31, i64 1624, !9, i64 1648, !31, i64 1652, !9, i64 1676, !2, i64 1680, !2, i64 1688, !2, i64 1696, !2, i64 1704, !14, i64 1712, !14, i64 1720, !2, i64 1728, !9, i64 1736, !3, i64 1744, !2, i64 1792, !2, i64 1800, !33, i64 1808, !9, i64 1844, !3, i64 1848, !3, i64 1852, !2, i64 1856, !9, i64 1864, !2, i64 1872, !2, i64 1880, !41, i64 1888}
!30 = !{!"gx_line_params_s", !21, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !9, i64 20, !21, i64 24, !21, i64 28, !21, i64 32, !9, i64 36, !31, i64 40, !32, i64 64}
!31 = !{!"gs_matrix_s", !21, i64 0, !21, i64 4, !21, i64 8, !21, i64 12, !21, i64 16, !21, i64 20}
!32 = !{!"gx_dash_params_s", !2, i64 0, !9, i64 8, !21, i64 12, !9, i64 16, !21, i64 20, !9, i64 24, !9, i64 28, !21, i64 32}
!33 = !{!"gs_matrix_fixed_s", !21, i64 0, !21, i64 4, !21, i64 8, !21, i64 12, !21, i64 16, !21, i64 20, !9, i64 24, !9, i64 28, !9, i64 32}
!34 = !{!"gs_point_s", !35, i64 0, !35, i64 8}
!35 = !{!"double", !3, i64 0}
!36 = !{!"gs_transparency_source_s", !21, i64 0}
!37 = !{!"gs_xstate_trans_flags", !9, i64 0, !9, i64 4}
!38 = !{!"gs_fixed_point_s", !9, i64 0, !9, i64 4}
!39 = !{!"gx_transfer_s", !9, i64 0, !2, i64 8, !9, i64 16, !2, i64 24, !9, i64 32, !2, i64 40, !9, i64 48, !2, i64 56}
!40 = !{!"gs_devicen_color_map_s", !9, i64 0, !3, i64 4, !9, i64 8, !9, i64 12, !14, i64 16, !3, i64 24}
!41 = !{!"gs_state_client_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24}
!42 = !{!35, !35, i64 0}
!43 = !{!11, !2, i64 0}
!44 = !{!45, !2, i64 16}
!45 = !{!"", !2, i64 0, !2, i64 8, !2, i64 16}
!46 = !{!47, !2, i64 0}
!47 = !{!"gx_device_color_s", !2, i64 0, !3, i64 8, !48, i64 352, !9, i64 360, !49, i64 368, !51, i64 632}
!48 = !{!"gs_int_point_s", !9, i64 0, !9, i64 4}
!49 = !{!"gs_client_color_s", !2, i64 0, !50, i64 8}
!50 = !{!"gs_paint_color_s", !3, i64 0}
!51 = !{!"_mask", !52, i64 0, !14, i64 8, !2, i64 16}
!52 = !{!"mp_", !9, i64 0, !9, i64 4}
!53 = !{!29, !2, i64 16}
!54 = !{!3, !3, i64 0}
!55 = !{!11, !2, i64 8}
!56 = !{!57, !2, i64 136}
!57 = !{!"gs_memory_s", !2, i64 0, !58, i64 8, !2, i64 192, !2, i64 200, !2, i64 208}
!58 = !{!"gs_memory_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176}
!59 = !{!12, !9, i64 48}
!60 = !{!45, !2, i64 8}
!61 = !{!45, !2, i64 0}
!62 = !{!63, !2, i64 0}
!63 = !{!"gs_color_space_s", !2, i64 0, !64, i64 8, !14, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !3, i64 72}
!64 = !{!"rc_header_s", !14, i64 0, !2, i64 8, !2, i64 16}
!65 = !{!66, !2, i64 104}
!66 = !{!"gs_color_space_type_s", !3, i64 0, !9, i64 4, !9, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128}
!67 = !{!49, !2, i64 0}
!68 = !{!11, !2, i64 632}
!69 = !{!11, !2, i64 640}
!70 = !{!11, !9, i64 688}
!71 = !{!63, !14, i64 32}
!72 = !{!11, !2, i64 536}
!73 = !{!11, !9, i64 80}
!74 = !{!57, !2, i64 192}
!75 = !{!76, !2, i64 120}
!76 = !{!"gs_lib_ctx_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !9, i64 40, !9, i64 44, !9, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !14, i64 104, !2, i64 112, !2, i64 120, !9, i64 128, !2, i64 136, !9, i64 144, !9, i64 148, !3, i64 152, !2, i64 168, !9, i64 176, !2, i64 184, !9, i64 192, !2, i64 200, !2, i64 208}
!77 = !{i64 0, i64 2, !25, i64 2, i64 2, !25, i64 4, i64 4, !26, i64 8, i64 8, !23, i64 8, i64 2, !25, i64 8, i64 4, !20, i64 8, i64 8, !23, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !1, i64 8, i64 8, !23, i64 16, i64 2, !25, i64 18, i64 2, !25, i64 20, i64 4, !26, i64 24, i64 8, !23, i64 24, i64 2, !25, i64 24, i64 4, !20, i64 24, i64 8, !23, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !23, i64 16, i64 2, !25, i64 18, i64 2, !25, i64 20, i64 4, !26, i64 24, i64 8, !23, i64 24, i64 2, !25, i64 24, i64 4, !20, i64 24, i64 8, !23, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !1, i64 24, i64 8, !23, i64 32, i64 2, !25, i64 34, i64 2, !25, i64 36, i64 4, !26, i64 40, i64 8, !23, i64 40, i64 2, !25, i64 40, i64 4, !20, i64 40, i64 8, !23, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !23, i64 32, i64 2, !25, i64 34, i64 2, !25, i64 36, i64 4, !26, i64 40, i64 8, !23, i64 40, i64 2, !25, i64 40, i64 4, !20, i64 40, i64 8, !23, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !1, i64 40, i64 8, !23, i64 48, i64 2, !25, i64 50, i64 2, !25, i64 52, i64 4, !26, i64 56, i64 8, !23, i64 56, i64 2, !25, i64 56, i64 4, !20, i64 56, i64 8, !23, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !1, i64 56, i64 8, !23, i64 64, i64 2, !25, i64 66, i64 2, !25, i64 68, i64 4, !26, i64 72, i64 8, !23, i64 72, i64 2, !25, i64 72, i64 4, !20, i64 72, i64 8, !23, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !23, i64 80, i64 2, !25, i64 82, i64 2, !25, i64 84, i64 4, !26, i64 88, i64 8, !23, i64 88, i64 2, !25, i64 88, i64 4, !20, i64 88, i64 8, !23, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !23, i64 64, i64 2, !25, i64 66, i64 2, !25, i64 68, i64 4, !26, i64 72, i64 8, !23, i64 72, i64 2, !25, i64 72, i64 4, !20, i64 72, i64 8, !23, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !23, i64 80, i64 2, !25, i64 82, i64 2, !25, i64 84, i64 4, !26, i64 88, i64 8, !23, i64 88, i64 2, !25, i64 88, i64 4, !20, i64 88, i64 8, !23, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !1, i64 88, i64 8, !23, i64 64, i64 2, !25, i64 66, i64 2, !25, i64 68, i64 4, !26, i64 72, i64 8, !23, i64 72, i64 2, !25, i64 72, i64 4, !20, i64 72, i64 8, !23, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !1, i64 72, i64 8, !23}
!78 = !{!79, !3, i64 16}
!79 = !{!"gs_separation_params_s", !14, i64 0, !2, i64 8, !3, i64 16, !9, i64 20, !2, i64 24}
!80 = !{!79, !14, i64 0}
!81 = !{!79, !2, i64 24}
!82 = !{!29, !2, i64 1872}
!83 = !{!84, !2, i64 1544}
!84 = !{!"gx_device_s", !9, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !9, i64 40, !2, i64 48, !64, i64 56, !9, i64 80, !9, i64 84, !9, i64 88, !85, i64 96, !87, i64 816, !9, i64 832, !9, i64 836, !9, i64 840, !9, i64 844, !9, i64 848, !9, i64 852, !3, i64 856, !3, i64 864, !9, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !14, i64 928, !14, i64 936, !9, i64 944, !9, i64 948, !9, i64 952, !9, i64 956, !9, i64 960, !14, i64 968, !14, i64 976, !88, i64 984, !9, i64 1052, !9, i64 1056, !89, i64 1064, !2, i64 1104, !3, i64 1112, !91, i64 1120, !92, i64 1144}
!85 = !{!"gx_device_color_info_s", !9, i64 0, !9, i64 4, !3, i64 8, !8, i64 12, !3, i64 14, !9, i64 16, !9, i64 20, !9, i64 24, !9, i64 28, !86, i64 32, !3, i64 40, !3, i64 44, !3, i64 108, !3, i64 176, !2, i64 688, !3, i64 696, !14, i64 704, !9, i64 712}
!86 = !{!"gx_device_anti_alias_info_s", !9, i64 0, !9, i64 4}
!87 = !{!"gx_device_cached_colors_s", !14, i64 0, !14, i64 8}
!88 = !{!"gx_stroked_gradient_recognizer_s", !9, i64 0, !3, i64 4, !3, i64 36}
!89 = !{!"gdev_space_params_s", !14, i64 0, !14, i64 8, !90, i64 16, !9, i64 32, !3, i64 36}
!90 = !{!"gx_band_params_s", !9, i64 0, !9, i64 4, !14, i64 8}
!91 = !{!"gx_page_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16}
!92 = !{!"gx_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176, !2, i64 184, !2, i64 192, !2, i64 200, !2, i64 208, !2, i64 216, !2, i64 224, !2, i64 232, !2, i64 240, !2, i64 248, !2, i64 256, !2, i64 264, !2, i64 272, !2, i64 280, !2, i64 288, !2, i64 296, !2, i64 304, !2, i64 312, !2, i64 320, !2, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !2, i64 376, !2, i64 384, !2, i64 392, !2, i64 400, !2, i64 408, !2, i64 416, !2, i64 424, !2, i64 432, !2, i64 440, !2, i64 448, !2, i64 456, !2, i64 464, !2, i64 472, !2, i64 480, !2, i64 488, !2, i64 496, !2, i64 504, !2, i64 512, !2, i64 520, !2, i64 528, !2, i64 536, !2, i64 544, !2, i64 552, !2, i64 560, !2, i64 568, !2, i64 576}
!93 = !{!94, !2, i64 0}
!94 = !{!"gs_device_n_params_s", !2, i64 0, !9, i64 8, !2, i64 16, !2, i64 24, !9, i64 32, !2, i64 40}
!95 = !{!94, !2, i64 40}
!96 = !{!97, !2, i64 32}
!97 = !{!"PS_colour_space_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88}
!98 = !{!66, !2, i64 24}
!99 = !{!63, !2, i64 40}
!100 = !{!101, !2, i64 0}
!101 = !{!"gs_const_string_s", !2, i64 0, !9, i64 8}
!102 = !{!63, !14, i64 8}
!103 = !{!63, !2, i64 24}
!104 = !{!63, !2, i64 16}
!105 = !{!101, !9, i64 8}
!106 = !{!107, !9, i64 24}
!107 = !{!"gs_indexed_params_s", !9, i64 0, !9, i64 4, !3, i64 8, !9, i64 24}
!108 = !{!107, !9, i64 0}
!109 = !{!107, !9, i64 4}
!110 = !{!111, !9, i64 0}
!111 = !{!"gs_pattern_params_s", !9, i64 0}
!112 = !{!97, !2, i64 0}
!113 = !{!66, !3, i64 0}
!114 = !{!12, !9, i64 68}
!115 = !{!12, !9, i64 64}
!116 = !{!97, !2, i64 72}
!117 = !{!97, !2, i64 88}
!118 = !{!84, !9, i64 100}
!119 = !{!29, !2, i64 488}
!120 = !{!84, !2, i64 1552}
!121 = !{!84, !2, i64 1560}
!122 = !{!84, !3, i64 136}
!123 = !{!84, !9, i64 112}
!124 = !{!84, !9, i64 116}
!125 = !{!84, !2, i64 24}
!126 = !{!84, !8, i64 108}
!127 = !{!84, !9, i64 120}
!128 = !{!84, !9, i64 124}
!129 = !{!84, !3, i64 104}
!130 = !{!84, !3, i64 110}
!131 = !{!97, !2, i64 24}
!132 = !{!97, !2, i64 8}
!133 = !{!97, !2, i64 64}
!134 = !{!135, !2, i64 48}
!135 = !{!"gs_indexed_map_s", !64, i64 0, !3, i64 24, !2, i64 32, !9, i64 40, !2, i64 48}
!136 = !{!97, !2, i64 56}
!137 = !{!97, !2, i64 16}
!138 = !{!139, !2, i64 24}
!139 = !{!"gs_pattern_instance_s", !64, i64 0, !2, i64 24, !2, i64 32, !14, i64 40}
!140 = !{!141, !2, i64 8}
!141 = !{!"gs_pattern_type_s", !9, i64 0, !142, i64 8}
!142 = !{!"pp_", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32}
!143 = !{!141, !2, i64 24}
!144 = !{!97, !2, i64 80}
