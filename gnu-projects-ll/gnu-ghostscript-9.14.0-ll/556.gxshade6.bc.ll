; ModuleID = './gxshade6.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gx_device_color_type_s = type { %struct.gs_memory_struct_type_s*, void (%struct.gx_device_color_s*, %struct.gx_device_color_saved_s*)*, %struct.gx_device_halftone_s* (%struct.gx_device_color_s*)*, i32 (%struct.gx_device_color_s*, %struct.gs_int_point_s*)*, i32 (%struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gx_device_color_s*, i32, i32, i32, i32, %struct.gx_device_s*, i32, %struct.gx_rop_source_s*)*, i32 (%struct.gx_device_color_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_color_saved_s*, %struct.gx_device_s*, i64, i8*, i32*)*, i32 (%struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_device_s*, i64, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gx_device_color_s*, %struct.gx_device_s*, i64*)* }
%struct.gs_memory_struct_type_s = type { i32, i8*, %struct.struct_shared_procs_s*, void (%struct.gs_memory_s*, i8*, i32, %struct.gs_memory_struct_type_s*)*, %struct.gs_ptr_procs_s* (%struct.gs_memory_s*, i8*, i32, i32, %struct.enum_ptr_s*, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (i8*, i32, %struct.gs_memory_struct_type_s*, %struct.gc_state_s*)*, void (%struct.gs_memory_s*, i8*)*, i8* }
%struct.struct_shared_procs_s = type opaque
%struct.gs_memory_s = type { %struct.gs_memory_s*, %struct.gs_memory_procs_s, %struct.gs_lib_ctx_s*, %struct.gs_memory_s*, %struct.gs_memory_s* }
%struct.gs_memory_procs_s = type { i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)*, %struct.gs_memory_s* (%struct.gs_memory_s*)*, void (%struct.gs_memory_s*, %struct.gs_memory_status_s*)*, void (%struct.gs_memory_s*, i32, i8*)*, void (%struct.gs_memory_s*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, %struct.gs_memory_struct_type_s*, i8*)*, i32 (%struct.gs_memory_s*, i8*)*, %struct.gs_memory_struct_type_s* (%struct.gs_memory_s*, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i8*, i32, i32, i8*)*, void (%struct.gs_memory_s*, i8*, i32, i8*)*, i32 (%struct.gs_memory_s*, %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i8*)*, void (%struct.gs_memory_s*, %struct.gs_gc_root_s*, i8*)*, void (%struct.gs_memory_s*, i32)* }
%struct.gs_memory_status_s = type { i64, i64, i32 }
%struct.gs_gc_root_s = type { %struct.gs_gc_root_s*, %struct.gs_ptr_procs_s*, i8**, i32 }
%struct.gs_ptr_procs_s = type { void (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i32 (%struct.enum_ptr_s*, %struct.gc_state_s*)*, i8* (i8*, %struct.gc_state_s*)* }
%struct.enum_ptr_s = type { i8*, i32 }
%struct.gc_state_s = type opaque
%struct.gs_lib_ctx_s = type { %struct.gs_memory_s*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, %struct._IO_FILE*, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i32 (i8*)*, i64, i8*, %struct.name_table_s*, i32, %struct.gx_io_device_s**, i32, i32, [2 x i64], %struct.gs_font_dir_s*, i32, i8*, i32, i8*, %struct.gs_fapi_server_s** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.name_table_s = type opaque
%struct.gx_io_device_s = type { i8*, i8*, %struct.gx_io_device_procs_s, i8* }
%struct.gx_io_device_procs_s = type { i32 (%struct.gx_io_device_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, %struct.stream_s**, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, i32, i8*, %struct.stream_s**, %struct.gs_memory_s*)*, i32 (%struct.gx_io_device_s*, i8*, i8*, %struct._IO_FILE**, i8*, i32)*, i32 (%struct.gx_io_device_s*, %struct._IO_FILE*)*, i32 (%struct.gx_io_device_s*, i8*)*, i32 (%struct.gx_io_device_s*, i8*, i8*)*, i32 (%struct.gx_io_device_s*, i8*, %struct.stat*)*, %struct.file_enum_s* (%struct.gx_io_device_s*, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.file_enum_s*, i8*, i32)*, void (%struct.file_enum_s*)*, i32 (%struct.gx_io_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_io_device_s*, %struct.gs_param_list_s*)* }
%struct.stream_s = type { %struct.stream_template_s*, %struct.gs_memory_s*, i32 (%struct.stream_state_s*, i8*)*, i32, [80 x i8], %union.stream_cursor_s, i8*, i32, i32, i16, i8, i8, %struct.gs_string_s, i64, %struct.stream_procs, %struct.stream_s*, i32, i32, %struct.stream_state_s*, i16, i16, %struct.stream_s*, %struct.stream_s*, i32, i32, i32 (%struct.stream_s*)*, %struct._IO_FILE*, %struct.gs_const_string_s, i32, i64, i64 }
%struct.stream_template_s = type opaque
%union.stream_cursor_s = type { %struct.stream_cursor_read_s }
%struct.stream_cursor_read_s = type { i8*, i8*, i8* }
%struct.gs_string_s = type { i8*, i32 }
%struct.stream_procs = type { i32 (%struct.stream_s*, i64*)*, i32 (%struct.stream_s*, i64)*, void (%struct.stream_s*)*, i32 (%struct.stream_s*)*, i32 (%struct.stream_s*)*, i32 (%struct.stream_state_s*, %struct.stream_cursor_read_s*, %struct.stream_cursor_write_s*, i32)*, i32 (%struct.stream_s*, i32)* }
%struct.stream_cursor_write_s = type { i8*, i8*, i8* }
%struct.stream_state_s = type { %struct.stream_template_s*, %struct.gs_memory_s*, {}*, i32, [80 x i8] }
%struct.gs_const_string_s = type { i8*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.file_enum_s = type opaque
%struct.gs_param_list_s = type opaque
%struct.gs_font_dir_s = type opaque
%struct.gs_fapi_server_s = type opaque
%struct.gx_device_color_s = type { %struct.gx_device_color_type_s*, %union._c, %struct.gs_int_point_s, i32, %struct.gs_client_color_s, %struct._mask }
%union._c = type { %struct._col }
%struct._col = type { %struct.gx_device_halftone_s*, i16, [64 x i8], [64 x i32], i16, i64 }
%struct.gx_device_halftone_s = type opaque
%struct.gs_int_point_s = type { i32, i32 }
%struct.gs_client_color_s = type { %struct.gs_pattern_instance_s*, %struct.gs_paint_color_s }
%struct.gs_pattern_instance_s = type opaque
%struct.gs_paint_color_s = type { [64 x float] }
%struct._mask = type { %struct.mp_, i64, %struct.gx_color_tile_s* }
%struct.mp_ = type { i32, i32 }
%struct.gx_color_tile_s = type opaque
%struct.gx_device_color_saved_s = type { %struct.gx_device_color_type_s*, %union._svc, %struct.gs_int_point_s }
%union._svc = type { %struct._svbin, [304 x i8] }
%struct._svbin = type { [2 x i64], i32, i32 }
%struct.gs_imager_state_s = type { i32, %struct.gs_memory_s*, i8*, %struct.gx_line_params_s, i32, %struct.gs_matrix_fixed_s, i32, %struct.gs_point_s, %struct.gs_point_s, i32, i32, i16, i32, %struct.gs_transparency_source_s, %struct.gs_transparency_source_s, %struct.gs_xstate_trans_flags, i64, i32, i32, i32, %struct.gx_device_s*, i32, i32, i32, i32, i32, i32, float, %struct.gs_fixed_point_s, i32, i32, i32, float, i32, i32, %struct.gsicc_manager_s*, %struct.gsicc_link_cache_s*, %struct.gsicc_profile_cache_s*, %struct.gx_color_map_procs_s* (%struct.gs_imager_state_s*, %struct.gx_device_s*)*, %struct.gs_halftone_s*, [2 x %struct.gs_int_point_s], %struct.gx_device_halftone_s*, %struct.gs_cie_render_s*, i32, %struct.gx_transfer_map_s*, %struct.gx_transfer_map_s*, %struct.gx_transfer_s, [64 x %struct.gx_transfer_map_s*], %struct.gx_cie_joint_caches_s*, %struct.gx_color_map_procs_s*, %struct.gs_devicen_color_map_s, %struct.gx_pattern_cache_s*, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_devicen_color_map_s }
%struct.gx_line_params_s = type { float, i32, i32, i32, i32, i32, float, float, float, i32, %struct.gs_matrix_s, %struct.gx_dash_params_s }
%struct.gs_matrix_s = type { float, float, float, float, float, float }
%struct.gx_dash_params_s = type { float*, i32, float, i32, float, i32, i32, float }
%struct.gs_matrix_fixed_s = type { float, float, float, float, float, float, i32, i32, i32 }
%struct.gs_point_s = type { double, double }
%struct.gs_transparency_source_s = type { float }
%struct.gs_xstate_trans_flags = type { i32, i32 }
%struct.gs_fixed_point_s = type { i32, i32 }
%struct.gsicc_manager_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gsicc_devicen_s*, %struct.gsicc_smask_s*, i32, %struct.cmm_srcgtag_profile_s*, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.cmm_profile_s = type { i8, i8, i32, i32, i32, i32, %struct.gs_range_icc_s, i64, i32, [15 x i32], i32, i32, i32, %struct.gsicc_rendering_param_s, i8*, %struct.gx_device_s*, %struct.gsicc_namelist_s*, i8*, %struct.rc_header_s, i32, i8*, %struct.gs_memory_s*, %struct.gx_monitor_s* }
%struct.gs_range_icc_s = type { [15 x %struct.gs_range_s] }
%struct.gs_range_s = type { float, float }
%struct.gsicc_rendering_param_s = type { i32, i32, i32, i32, i32, i32 }
%struct.gsicc_namelist_s = type { i32, %struct.gsicc_colorname_s*, i8*, %struct.gs_devicen_color_map_s*, i32 }
%struct.gsicc_colorname_s = type { i8*, i32, %struct.gsicc_colorname_s* }
%struct.gx_monitor_s = type { %struct.gs_memory_s*, %union.gp_monitor }
%union.gp_monitor = type { i8* }
%struct.gsicc_devicen_s = type { %struct.gsicc_devicen_entry_s*, %struct.gsicc_devicen_entry_s*, i32 }
%struct.gsicc_devicen_entry_s = type { %struct.cmm_profile_s*, %struct.gsicc_devicen_entry_s* }
%struct.gsicc_smask_s = type { %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.gs_memory_s*, i32 }
%struct.cmm_srcgtag_profile_s = type { [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], [3 x %struct.cmm_profile_s*], [3 x %struct.gsicc_rendering_param_s], %struct.cmm_profile_s*, %struct.gs_memory_s*, i32, i8*, %struct.rc_header_s }
%struct.rc_header_s = type { i64, %struct.gs_memory_s*, void (%struct.gs_memory_s*, i8*, i8*)* }
%struct.gsicc_link_cache_s = type { %struct.gsicc_link_s*, i32, %struct.rc_header_s, %struct.gs_memory_s*, %struct.gx_monitor_s*, %struct.gx_semaphore_s*, i32 }
%struct.gsicc_link_s = type { i8*, %struct.gscms_procs_s, %struct.gsicc_hashlink_s, %struct.gsicc_link_cache_s*, i32, %struct.gsicc_link_s*, %struct.gx_semaphore_s*, i32, i32, i32, i32, i32, i32, %struct.gscms_procs_s, i32, i32, i32 }
%struct.gsicc_hashlink_s = type { i64, i64, i64, i64 }
%struct.gscms_procs_s = type { void (%struct.gx_device_s*, %struct.gsicc_link_s*, %struct.gsicc_bufferdesc_s*, %struct.gsicc_bufferdesc_s*, i8*, i8*)*, void (%struct.gx_device_s*, %struct.gsicc_link_s*, i8*, i8*, i32)*, void (%struct.gsicc_link_s*)*, i32 (i8*, i32)* }
%struct.gsicc_bufferdesc_s = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gx_semaphore_s = type { %struct.gs_memory_s*, %union.gp_semaphore }
%union.gp_semaphore = type { i8* }
%struct.gsicc_profile_cache_s = type { %struct.gsicc_profile_entry_s*, i32, %struct.rc_header_s, %struct.gs_memory_s* }
%struct.gsicc_profile_entry_s = type { %struct.gs_color_space_s*, %struct.gsicc_profile_entry_s*, i64 }
%struct.gs_halftone_s = type opaque
%struct.gs_cie_render_s = type opaque
%struct.gx_transfer_map_s = type { %struct.rc_header_s, float (double, %struct.gx_transfer_map_s*)*, %struct.gs_mapping_closure_s, i64, [256 x i16] }
%struct.gs_mapping_closure_s = type { float (double, %struct.gx_transfer_map_s*, i8*)*, i8* }
%struct.gx_transfer_s = type { i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s*, i32, %struct.gx_transfer_map_s* }
%struct.gx_color_map_procs_s = type { void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32, %struct.gs_color_space_s*)*, void (i16, i16, i16, i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, void (i16*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_imager_state_s*, %struct.gx_device_s*)* }
%struct.gx_pattern_cache_s = type opaque
%struct.gs_color_space_s = type { %struct.gs_color_space_type_s*, %struct.rc_header_s, i64, %struct.gs_color_space_s*, %struct.gs_color_space_s*, %struct.client_color_space_data_s*, %struct.cmm_profile_s*, %union.anon }
%struct.gs_color_space_type_s = type { i32, i32, i32, %struct.gs_memory_struct_type_s*, i32 (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, %struct.gs_color_space_s* (%struct.gs_color_space_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i16*, %struct.gs_imager_state_s*, %struct.gx_device_s*)*, i32 (i16*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_state_s*)*, void (%struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*, i32)*, i32 (%struct.gs_color_space_s*, %struct.stream_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)*, i32 (%struct.gs_color_space_s*)* }
%struct.gs_state_s = type opaque
%struct.client_color_space_data_s = type { void (%struct.gs_color_space_s*, i32)* }
%union.anon = type { %struct.gs_device_n_params_s }
%struct.gs_device_n_params_s = type { i64*, i32, %struct.gs_device_n_map_s*, %struct.gs_device_n_attributes_s*, i32, i32 (%struct.gs_memory_s*, i64, i8**, i32*)* }
%struct.gs_device_n_map_s = type opaque
%struct.gs_device_n_attributes_s = type opaque
%struct.gx_cie_joint_caches_s = type opaque
%struct.gs_devicen_color_map_s = type { i32, i32, i32, i32, i64, [64 x i32] }
%struct.gx_device_s = type { i32, %struct.gx_device_procs_s*, i8*, %struct.gs_memory_s*, %struct.gs_memory_struct_type_s*, i32, void (%struct.gx_device_s*)*, %struct.rc_header_s, i32, i32, i32, %struct.gx_device_color_info_s, %struct.gx_device_cached_colors_s, i32, i32, i32, i32, i32, i32, [2 x float], [4 x float], i32, [2 x float], [2 x float], [2 x float], [4 x float], i64, i64, i32, i32, i32, i32, i32, i64, i64, %struct.gx_stroked_gradient_recognizer_s, i32, i32, %struct.gdev_space_params_s, %struct.cmm_dev_profile_s*, i32, %struct.gx_page_device_procs_s, %struct.gx_device_procs_s }
%struct.gx_device_color_info_s = type { i32, i32, i32, i16, i8, i32, i32, i32, i32, %struct.gx_device_anti_alias_info_s, i32, [64 x i8], [64 x i8], [64 x i64], i8*, i32, i64, i32 }
%struct.gx_device_anti_alias_info_s = type { i32, i32 }
%struct.gx_device_cached_colors_s = type { i64, i64 }
%struct.gx_stroked_gradient_recognizer_s = type { i32, [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s] }
%struct.gdev_space_params_s = type { i64, i64, %struct.gx_band_params_s, i32, i32 }
%struct.gx_band_params_s = type { i32, i32, i64 }
%struct.cmm_dev_profile_s = type { [4 x %struct.cmm_profile_s*], %struct.cmm_profile_s*, %struct.cmm_profile_s*, %struct.cmm_profile_s*, [4 x %struct.gsicc_rendering_param_s], i32, i32, i32, i32, i32, i32, %struct.gsicc_namelist_s*, i32, %struct.gs_memory_s*, %struct.rc_header_s }
%struct.gx_page_device_procs_s = type { i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, i32 (%struct.gx_device_s*, i32, %struct.gs_state_s*)* }
%struct.gx_device_procs_s = type { i32 (%struct.gx_device_s*)*, void (%struct.gx_device_s*, %struct.gs_matrix_s*)*, i32 (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32, i32)*, i32 (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, %struct.gx_tile_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i64)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i64)*, i32 (%struct.gx_device_s*, i32, i8*, i8**)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i64 (%struct.gx_device_s*, i16*)*, %struct.gx_xfont_procs_s* (%struct.gx_device_s*)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i64 (%struct.gx_device_s*, i16, i16, i16, i16)*, %struct.gx_device_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32)*, i32 (%struct.gx_device_s*, i32, i32*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_tile_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_stroke_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_image1_s*, i32, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i8**, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_image_enum_common_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, i64, i64, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32)*, void (%struct.gx_device_s*, %struct.gs_fixed_rect_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_matrix_s*, %struct.gs_image_common_s*, %struct.gs_int_rect_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gx_image_enum_common_s**)*, i32 (%struct.gx_device_s*, %struct.gs_int_rect_s*, %struct.gs_get_bits_params_s*, %struct.gs_int_rect_s**)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_composite_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_param_list_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_text_params_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_s**)*, i32 (%struct.gx_device_s*, %struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_transparency_group_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gx_transparency_mask_params_s*, %struct.gs_rect_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, %struct.gx_cm_color_map_procs_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32)*, i64 (%struct.gx_device_s*, i16*)*, i32 (%struct.gx_device_s*, i64, i16*)*, i32 (%struct.gx_device_s*, i64, %struct.gs_pattern1_instance_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_rect_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_color_space_s*, i8*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, i32, i32, i32, i32*, i32*, i32*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_state_s*)*, %struct.gs_devn_params_s* (%struct.gx_device_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_device_color_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.cmm_dev_profile_s**)*, void (%struct.gx_device_s*, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i64*, %struct.gx_strip_bitmap_s*, i64*, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_device_s*, %struct.gx_strip_bitmap_s*, i32, i32, i32, i32, %struct.gx_device_color_s*, %struct.gx_device_color_s*, i32, i32)*, i32 (%struct.gx_device_s*, i8*, i32, i32, i64, i32, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gx_process_page_options_s*)* }
%struct.gx_tile_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16 }
%struct.gx_xfont_procs_s = type opaque
%struct.gx_path_s = type { %struct.gx_path_segments_s, %struct.gs_memory_s*, i32, %struct.gx_path_segments_s*, %struct.segment_s*, %struct.gs_fixed_rect_s, %struct.segment_s*, i8, i8, i8, i8, i8, i32, i32, %struct.gs_fixed_point_s, %struct.gx_path_procs_s* }
%struct.gx_path_segments_s = type { %struct.rc_header_s, %struct.psc_ }
%struct.psc_ = type { %struct.subpath_s*, %struct.subpath_s* }
%struct.subpath_s = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s, %struct.segment_s*, i32, %struct.line_close_segment, i8 }
%struct.line_close_segment = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s, %struct.subpath_s* }
%struct.gs_fixed_rect_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.segment_s = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s }
%struct.gx_path_procs_s = type { i32 (%struct.gx_path_s*, i32, i32)*, i32 (%struct.gx_path_s*, i32, i32, i32)*, i32 (%struct.gx_path_s*, i32, i32, i32)*, i32 (%struct.gx_path_s*, i32, i32, i32, i32, i32, i32, i32)*, i32 (%struct.gx_path_s*, i32)*, i8 (%struct.gx_path_s*, i8)* }
%struct.gx_fill_params_s = type opaque
%struct.gx_clip_path_s = type opaque
%struct.gx_stroke_params_s = type opaque
%struct.gs_fixed_edge_s = type { %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct.gs_image1_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s, i32, i32, i32, [130 x float], i32, i32, i32, %struct.gs_color_space_s*, i32, i32, i32, i32 }
%struct.gx_image_type_s = type opaque
%struct.gs_int_rect_s = type { %struct.gs_int_point_s, %struct.gs_int_point_s }
%struct.gx_image_enum_common_s = type opaque
%struct.gx_strip_bitmap_s = type { i8*, i32, %struct.gs_int_point_s, i64, i16, i16, i16, i16, i32 }
%struct.gs_image_common_s = type { %struct.gx_image_type_s*, %struct.gs_matrix_s }
%struct.gs_get_bits_params_s = type opaque
%struct.gs_composite_s = type { %struct.gs_composite_type_s*, i64, i32, %struct.gs_composite_s*, %struct.gs_composite_s* }
%struct.gs_composite_type_s = type { i8, %struct.gs_composite_type_procs_s }
%struct.gs_composite_type_procs_s = type { i32 (%struct.gs_composite_s*, %struct.gx_device_s**, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s*)*, i32 (%struct.gs_composite_s*, i8*, i32*, %struct.gx_device_clist_writer_s*)*, i32 (%struct.gs_composite_s**, i8*, i32, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32, i32, %struct.gs_imager_state_s*)*, i32 (%struct.gs_composite_s*, %struct.gs_composite_s**, %struct.gx_device_s*)*, i32 (%struct.gs_composite_s*, i8, i8)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s**, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_memory_s*)*, i32 (%struct.gs_composite_s*, i32*, i32*, i32, i32)* }
%struct.gx_device_clist_writer_s = type opaque
%struct.gs_text_params_s = type { i32, %union.sd_, i32, %struct.gs_point_s, %struct.gs_point_s, %union.s_, float*, float*, i32 }
%union.sd_ = type { i8* }
%union.s_ = type { i64 }
%struct.gs_font_s = type opaque
%struct.gs_text_enum_s = type { %struct.gs_text_params_s, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_font_s*, %struct.gx_path_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*, %struct.gs_memory_s*, %struct.gs_text_enum_procs_s*, %struct.rc_header_s, i8*, %struct.gs_font_s*, i64, i32, %struct.gs_log2_scale_point_s, %struct.cached_fm_pair_s*, i32, i32, %struct.gx_font_stack_s, i32, i32, i32, %struct.gs_point_s, i64, i32, %struct.gs_log2_scale_point_s, %struct.gs_point_s, %struct.gs_text_returned_s }
%struct.gs_text_enum_procs_s = type { i32 (%struct.gs_text_enum_s*, %struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*)*, i32 (%struct.gs_text_enum_s*, %struct.gs_point_s*)*, i32 (%struct.gs_text_enum_s*, double*, i32)*, i32 (%struct.gs_text_enum_s*)*, void (%struct.gs_text_enum_s*, i8*)* }
%struct.cached_fm_pair_s = type opaque
%struct.gx_font_stack_s = type { i32, [6 x %struct.gx_font_stack_item_s] }
%struct.gx_font_stack_item_s = type { %struct.gs_font_s*, i32 }
%struct.gs_log2_scale_point_s = type { i32, i32 }
%struct.gs_text_returned_s = type { i64, i64, %struct.gs_point_s }
%struct.gs_transparency_group_params_s = type { %struct.gs_color_space_s*, i32, i32, i32, i32, i32, i32, i32, i64, %struct.cmm_profile_s* }
%struct.gs_rect_s = type { %struct.gs_point_s, %struct.gs_point_s }
%struct.gx_transparency_mask_params_s = type { i32, i32, i32, i32, [64 x float], float, i32, i32, i32, i32, [256 x i8], i64, %struct.cmm_profile_s* }
%struct.gx_cm_color_map_procs_s = type { void (%struct.gx_device_s*, i16, i16*)*, void (%struct.gx_device_s*, %struct.gs_imager_state_s*, i16, i16, i16, i16*)*, void (%struct.gx_device_s*, i16, i16, i16, i16, i16*)* }
%struct.gs_pattern1_instance_s = type opaque
%struct.gs_fill_attributes_s = type { %struct.gs_fixed_rect_s*, i32, %struct.gx_device_halftone_s*, i32, i32, i32, %struct.patch_fill_state_s* }
%struct.patch_fill_state_s = type { %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_color_space_s*, i32, [64 x float], %struct.gx_device_s*, %struct.gsicc_link_s*, %struct.gs_shading_mesh_s*, %struct.gs_fixed_rect_s, %struct.gs_function_s*, i32, i32, i32, i32, %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s*, i32, i32, %struct.gs_client_color_s, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, %struct.gs_memory_s*, %struct.gs_color_index_cache_s* }
%struct.gs_shading_mesh_s = type { %struct.gs_shading_head_s, %struct.gs_shading_mesh_params_s }
%struct.gs_shading_head_s = type { i32, %struct.gs_shading_procs_s }
%struct.gs_shading_procs_s = type { i32 (%struct.gs_shading_s*, %struct.gs_rect_s*, %struct.gs_fixed_rect_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*)* }
%struct.gs_shading_s = type { %struct.gs_shading_head_s, %struct.gs_shading_params_s }
%struct.gs_shading_params_s = type { %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_client_color_s*, i32, %struct.gs_rect_s, i32 }
%struct.gs_shading_mesh_params_s = type { %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_client_color_s*, i32, %struct.gs_rect_s, i32, %struct.gs_data_source_s, i32, i32, float*, %struct.gs_function_s* }
%struct.gs_data_source_s = type { i32 (%struct.gs_data_source_s*, i64, i32, i8*, i8**)*, i32, %union.d_ }
%union.d_ = type { %struct.gs_const_string_s }
%struct.gs_function_s = type { %struct.gs_function_head_s, %struct.gs_function_params_s }
%struct.gs_function_head_s = type { i32, %struct.gs_function_procs_s }
%struct.gs_function_procs_s = type { i32 (%struct.gs_function_s*, float*, float*)*, i32 (%struct.gs_function_s*, float*, float*, i32*)*, void (%struct.gs_function_s*, %struct.gs_function_info_s*)*, i32 (%struct.gs_function_s*, %struct.gs_param_list_s*)*, i32 (%struct.gs_function_s*, %struct.gs_function_s**, %struct.gs_range_s*, %struct.gs_memory_s*)*, void (%struct.gs_function_params_s*, %struct.gs_memory_s*)*, void (%struct.gs_function_s*, i32, %struct.gs_memory_s*)*, i32 (%struct.gs_function_s*, %struct.stream_s*)* }
%struct.gs_function_info_s = type { %struct.gs_data_source_s*, i64, %struct.gs_function_s**, i32 }
%struct.gs_function_params_s = type { i32, float*, i32, float* }
%struct.wedge_vertex_list_elem_s = type { %struct.gs_fixed_point_s, i32, i32, %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s* }
%struct.gs_color_index_cache_s = type opaque
%struct.gs_devn_params_s = type opaque
%struct.gx_process_page_options_s = type { i32 (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i32, i32, i8**)*, void (i8*, %struct.gx_device_s*, %struct.gs_memory_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, %struct.gx_device_s*, %struct.gs_int_rect_s*, i8*)*, i32 (i8*, %struct.gx_device_s*, i8*)*, i8*, i32 }
%struct.gx_rop_source_s = type { i8*, i32, i32, i64, [2 x i64], i32, i32 }
%struct.patch_color_s = type { [2 x float], %struct.gs_client_color_s }
%struct.gs_shading_Cp_s = type { %struct.gs_shading_head_s, %struct.gs_shading_Cp_params_s }
%struct.gs_shading_Cp_params_s = type { %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_client_color_s*, i32, %struct.gs_rect_s, i32, %struct.gs_data_source_s, i32, i32, float*, %struct.gs_function_s*, i32 }
%struct.shade_coord_stream_s = type { %struct.stream_s, %struct.stream_s*, i32, i32, i32, %struct.gs_shading_mesh_params_s*, %struct.gs_matrix_fixed_s*, i32 (%struct.shade_coord_stream_s*, i32, i32*)*, i32 (%struct.shade_coord_stream_s*, i32, float*, float*)*, void (%struct.shade_coord_stream_s*, i32)*, i32 (%struct.shade_coord_stream_s*)* }
%struct.patch_curve_s = type { %struct.mesh_vertex_s, [2 x %struct.gs_fixed_point_s], i32 }
%struct.mesh_vertex_s = type { %struct.gs_fixed_point_s, [64 x float] }
%struct.mesh_fill_state_s = type { %struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gs_color_space_s*, i32, [64 x float], %struct.gx_device_s*, %struct.gsicc_link_s*, %struct.gs_shading_mesh_s*, %struct.gs_fixed_rect_s }
%struct.tensor_patch = type { [4 x [4 x %struct.gs_fixed_point_s]], [2 x [2 x %struct.patch_color_s*]] }
%struct.gs_shading_Tpp_s = type { %struct.gs_shading_head_s, %struct.gs_shading_Tpp_params_s }
%struct.gs_shading_Tpp_params_s = type { %struct.gs_color_space_s*, %struct.gx_cie_joint_caches_s*, %struct.gs_client_color_s*, i32, %struct.gs_rect_s, i32, %struct.gs_data_source_s, i32, i32, float*, %struct.gs_function_s*, i32 }
%struct.quadrangle_patch = type { [2 x [2 x %struct.shading_vertex_s*]], %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t* }
%struct.shading_vertex_s = type { %struct.gs_fixed_point_s, %struct.patch_color_s* }
%struct.wedge_vertex_list_t = type { i32, %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s* }
%struct.curve_segment = type { %struct.segment_s*, %struct.segment_s*, i16, i16, %struct.gs_fixed_point_s, %struct.gs_fixed_point_s, %struct.gs_fixed_point_s }
%struct._devn = type { [64 x i16] }

@.str = private unnamed_addr constant [22 x i8] c"term_patch_fill_state\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"alloc_wedge_vertex_list_elem_buffer\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"wedge_vertex_list_elem_buffer_free\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"mesh_triangle\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"patch_fill\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"allocate_color_stack\00", align 1
@gx_dc_type_data_devn = external constant %struct.gx_device_color_type_s, align 8
@gx_dc_type_data_pure = external constant %struct.gx_device_color_type_s, align 8
@function_linearity.q = internal constant [2 x float] [float 0x3FD3333340000000, float 0x3FE6666660000000], align 4

; Function Attrs: nounwind uwtable
define i8* @reserve_colors(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s** %c, i32 %n) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c.addr = alloca %struct.patch_color_s**, align 8
  %n.addr = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s** %c, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !5
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %2 = load i32, i32* %n.addr, align 4, !tbaa !5
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %0, %struct.patch_color_s** %1, i32 %2) #5
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @reserve_colors_inline(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s** %c, i32 %n) #1 {
entry:
  %retval = alloca i8*, align 8
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c.addr = alloca %struct.patch_color_s**, align 8
  %n.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ptr0 = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s** %c, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !5
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i8** %ptr0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_ptr = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 29
  %3 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !7
  store i8* %3, i8** %ptr0, align 8, !tbaa !1
  %4 = bitcast i8** %ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load i8*, i8** %ptr0, align 8, !tbaa !1
  store i8* %5, i8** %ptr, align 8, !tbaa !1
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !tbaa !5
  %7 = load i32, i32* %n.addr, align 4, !tbaa !5
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %ptr, align 8, !tbaa !1
  %9 = bitcast i8* %8 to %struct.patch_color_s*
  %10 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %11, i64 %idxprom
  store %struct.patch_color_s* %9, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  %13 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_step = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %13, i32 0, i32 28
  %14 = load i32, i32* %color_stack_step, align 4, !tbaa !14
  %15 = load i8*, i8** %ptr, align 8, !tbaa !1
  %idx.ext = sext i32 %14 to i64
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext
  store i8* %add.ptr, i8** %ptr, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i8*, i8** %ptr, align 8, !tbaa !1
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 31
  %18 = load i8*, i8** %color_stack_limit, align 8, !tbaa !15
  %cmp1 = icmp ugt i8* %16, %18
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %19 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %19, i64 0
  store %struct.patch_color_s* null, %struct.patch_color_s** %arrayidx2, align 8, !tbaa !1
  store i8* null, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %for.end
  %20 = load i8*, i8** %ptr, align 8, !tbaa !1
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_ptr3 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %21, i32 0, i32 29
  store i8* %20, i8** %color_stack_ptr3, align 8, !tbaa !7
  %22 = load i8*, i8** %ptr0, align 8, !tbaa !1
  store i8* %22, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %23 = bitcast i8** %ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #2
  %24 = bitcast i8** %ptr0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #2
  %25 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #2
  %26 = load i8*, i8** %retval
  ret i8* %26
}

; Function Attrs: nounwind uwtable
define void @release_colors(%struct.patch_fill_state_s* %pfs, i8* %ptr, i32 %n) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !5
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1 = load i8*, i8** %ptr.addr, align 8, !tbaa !1
  %2 = load i32, i32* %n.addr, align 4, !tbaa !5
  call void @release_colors_inline(%struct.patch_fill_state_s* %0, i8* %1, i32 %2) #5
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @release_colors_inline(%struct.patch_fill_state_s* %pfs, i8* %ptr, i32 %n) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !5
  %0 = load i8*, i8** %ptr.addr, align 8, !tbaa !1
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_ptr = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 29
  store i8* %0, i8** %color_stack_ptr, align 8, !tbaa !7
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @init_patch_fill_state(%struct.patch_fill_state_s* %pfs) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %fcc0 = alloca %struct.gs_client_color_s, align 8
  %fcc1 = alloca %struct.gs_client_color_s, align 8
  %i = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %direct_space = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 2
  %2 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %direct_space, align 8, !tbaa !16
  store %struct.gs_color_space_s* %2, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %3 = bitcast %struct.gs_client_color_s* %fcc0 to i8*
  call void @llvm.lifetime.start(i64 264, i8* %3) #2
  %4 = bitcast %struct.gs_client_color_s* %fcc1 to i8*
  call void @llvm.lifetime.start(i64 264, i8* %4) #2
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !tbaa !5
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %7, i32 0, i32 3
  %8 = load i32, i32* %num_components, align 4, !tbaa !17
  %cmp = icmp slt i32 %6, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %9 to i64
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %fcc0, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  store float -1.000000e+06, float* %arrayidx, align 4, !tbaa !18
  %10 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom1 = sext i32 %10 to i64
  %paint2 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %fcc1, i32 0, i32 1
  %values3 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint2, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [64 x float], [64 x float]* %values3, i32 0, i64 %idxprom1
  store float 1.000000e+06, float* %arrayidx4, align 4, !tbaa !18
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %12, i32 0, i32 0
  %13 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !20
  %restrict_color = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %13, i32 0, i32 6
  %14 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)** %restrict_color, align 8, !tbaa !24
  %15 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void %14(%struct.gs_client_color_s* %fcc0, %struct.gs_color_space_s* %15) #5
  %16 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type5 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %16, i32 0, i32 0
  %17 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type5, align 8, !tbaa !20
  %restrict_color6 = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %17, i32 0, i32 6
  %18 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)** %restrict_color6, align 8, !tbaa !24
  %19 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void %18(%struct.gs_client_color_s* %fcc1, %struct.gs_color_space_s* %19) #5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.7

for.cond.7:                                       ; preds = %for.inc.33, %for.end
  %20 = load i32, i32* %i, align 4, !tbaa !5
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components8 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %21, i32 0, i32 3
  %22 = load i32, i32* %num_components8, align 4, !tbaa !17
  %cmp9 = icmp slt i32 %20, %22
  br i1 %cmp9, label %for.body.10, label %for.end.35

for.body.10:                                      ; preds = %for.cond.7
  %23 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom11 = sext i32 %23 to i64
  %paint12 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %fcc1, i32 0, i32 1
  %values13 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint12, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [64 x float], [64 x float]* %values13, i32 0, i64 %idxprom11
  %24 = load float, float* %arrayidx14, align 4, !tbaa !18
  %25 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom15 = sext i32 %25 to i64
  %paint16 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %fcc0, i32 0, i32 1
  %values17 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint16, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [64 x float], [64 x float]* %values17, i32 0, i64 %idxprom15
  %26 = load float, float* %arrayidx18, align 4, !tbaa !18
  %sub = fsub float %24, %26
  %cmp19 = fcmp ogt float %sub, 1.000000e+00
  br i1 %cmp19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.10
  %27 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom20 = sext i32 %27 to i64
  %paint21 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %fcc1, i32 0, i32 1
  %values22 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint21, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [64 x float], [64 x float]* %values22, i32 0, i64 %idxprom20
  %28 = load float, float* %arrayidx23, align 4, !tbaa !18
  %29 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom24 = sext i32 %29 to i64
  %paint25 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %fcc0, i32 0, i32 1
  %values26 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint25, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [64 x float], [64 x float]* %values26, i32 0, i64 %idxprom24
  %30 = load float, float* %arrayidx27, align 4, !tbaa !18
  %sub28 = fsub float %28, %30
  br label %cond.end

cond.false:                                       ; preds = %for.body.10
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %sub28, %cond.true ], [ 1.000000e+00, %cond.false ]
  %31 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom29 = sext i32 %31 to i64
  %32 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %32, i32 0, i32 18
  %paint30 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain, i32 0, i32 1
  %values31 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint30, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [64 x float], [64 x float]* %values31, i32 0, i64 %idxprom29
  store float %cond, float* %arrayidx32, align 4, !tbaa !18
  br label %for.inc.33

for.inc.33:                                       ; preds = %cond.end
  %33 = load i32, i32* %i, align 4, !tbaa !5
  %inc34 = add nsw i32 %33, 1
  store i32 %inc34, i32* %i, align 4, !tbaa !5
  br label %for.cond.7

for.end.35:                                       ; preds = %for.cond.7
  %34 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %vectorization = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %34, i32 0, i32 11
  store i32 0, i32* %vectorization, align 4, !tbaa !26
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %35, i32 0, i32 22
  store i32 1, i32* %maybe_self_intersecting, align 4, !tbaa !27
  %36 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %36, i32 0, i32 9
  %37 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %cmp36 = icmp eq %struct.gs_function_s* %37, null
  %conv = zext i1 %cmp36 to i32
  %38 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %38, i32 0, i32 23
  store i32 %conv, i32* %monotonic_color, align 4, !tbaa !29
  %39 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %function_arg_shift = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %39, i32 0, i32 10
  store i32 0, i32* %function_arg_shift, align 4, !tbaa !30
  %40 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %40, i32 0, i32 24
  store i32 0, i32* %linear_color, align 4, !tbaa !31
  %41 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %41, i32 0, i32 26
  store i32 0, i32* %inside, align 4, !tbaa !32
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %n_color_args = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %42, i32 0, i32 12
  store i32 1, i32* %n_color_args, align 4, !tbaa !33
  %43 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %43, i32 0, i32 19
  store i32 256, i32* %decomposition_limit, align 4, !tbaa !34
  %44 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %44, i32 0, i32 1
  %45 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %flatness = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %45, i32 0, i32 27
  %46 = load float, float* %flatness, align 4, !tbaa !36
  %mul = fmul float %46, 2.560000e+02
  %conv37 = fptosi float %mul to i32
  %47 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %47, i32 0, i32 20
  store i32 %conv37, i32* %fixed_flat, align 4, !tbaa !48
  %48 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis38 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %48, i32 0, i32 1
  %49 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis38, align 8, !tbaa !35
  %smoothness = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %49, i32 0, i32 32
  %50 = load float, float* %smoothness, align 4, !tbaa !49
  %conv39 = fpext float %50 to double
  %cmp40 = fcmp ogt double %conv39, 0x3F70101010101010
  br i1 %cmp40, label %cond.true.42, label %cond.false.46

cond.true.42:                                     ; preds = %for.end.35
  %51 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis43 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %51, i32 0, i32 1
  %52 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis43, align 8, !tbaa !35
  %smoothness44 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %52, i32 0, i32 32
  %53 = load float, float* %smoothness44, align 4, !tbaa !49
  %conv45 = fpext float %53 to double
  br label %cond.end.47

cond.false.46:                                    ; preds = %for.end.35
  br label %cond.end.47

cond.end.47:                                      ; preds = %cond.false.46, %cond.true.42
  %cond48 = phi double [ %conv45, %cond.true.42 ], [ 0x3F70101010101010, %cond.false.46 ]
  %54 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness49 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %54, i32 0, i32 21
  store double %cond48, double* %smoothness49, align 8, !tbaa !50
  %55 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_size = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %55, i32 0, i32 27
  store i32 0, i32* %color_stack_size, align 4, !tbaa !51
  %56 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_step = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %56, i32 0, i32 28
  store i32 0, i32* %color_stack_step, align 4, !tbaa !14
  %57 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_ptr = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %57, i32 0, i32 29
  store i8* null, i8** %color_stack_ptr, align 8, !tbaa !7
  %58 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %58, i32 0, i32 30
  store i8* null, i8** %color_stack, align 8, !tbaa !52
  %59 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %59, i32 0, i32 31
  store i8* null, i8** %color_stack_limit, align 8, !tbaa !15
  %60 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i32 @is_linear_color_applicable(%struct.patch_fill_state_s* %60) #5
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %61 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %61, i32 0, i32 25
  store i32 %lnot.ext, i32* %unlinear, align 4, !tbaa !53
  %62 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %63 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis50 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %63, i32 0, i32 1
  %64 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis50, align 8, !tbaa !35
  %memory = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %64, i32 0, i32 1
  %65 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !54
  %66 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %call51 = call i32 @alloc_patch_fill_memory(%struct.patch_fill_state_s* %62, %struct.gs_memory_s* %65, %struct.gs_color_space_s* %66) #5
  %67 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast %struct.gs_client_color_s* %fcc1 to i8*
  call void @llvm.lifetime.end(i64 264, i8* %68) #2
  %69 = bitcast %struct.gs_client_color_s* %fcc0 to i8*
  call void @llvm.lifetime.end(i64 264, i8* %69) #2
  %70 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %70) #2
  ret i32 %call51
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_linear_color_applicable(%struct.patch_fill_state_s* %pfs) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 0
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %1, i32 0, i32 11
  %separable_and_linear = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 10
  %2 = load i32, i32* %separable_and_linear, align 4, !tbaa !56
  %cmp = icmp ne i32 %2, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %3, i32 0, i32 1
  %4 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 0
  %6 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1, align 8, !tbaa !55
  %call = call %struct.gx_color_map_procs_s* @gx_get_cmap_procs(%struct.gs_imager_state_s* %4, %struct.gx_device_s* %6) #5
  %is_halftoned = getelementptr inbounds %struct.gx_color_map_procs_s, %struct.gx_color_map_procs_s* %call, i32 0, i32 6
  %7 = load i32 (%struct.gs_imager_state_s*, %struct.gx_device_s*)*, i32 (%struct.gs_imager_state_s*, %struct.gx_device_s*)** %is_halftoned, align 8, !tbaa !66
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 1
  %9 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis2, align 8, !tbaa !35
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev3 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %10, i32 0, i32 0
  %11 = load %struct.gx_device_s*, %struct.gx_device_s** %dev3, align 8, !tbaa !55
  %call4 = call i32 %7(%struct.gs_imager_state_s* %9, %struct.gx_device_s* %11) #5
  %tobool = icmp ne i32 %call4, 0
  br i1 %tobool, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.6, %if.then.5, %if.then
  %12 = load i32, i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define internal i32 @alloc_patch_fill_memory(%struct.patch_fill_state_s* %pfs, %struct.gs_memory_s* %memory, %struct.gs_color_space_s* %pcs) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %memory.addr = alloca %struct.gs_memory_s*, align 8
  %pcs.addr = alloca %struct.gs_color_space_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_memory_s* %memory, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  store %struct.gs_color_space_s* %pcs, %struct.gs_color_space_s** %pcs.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 32
  store %struct.gs_memory_s* %1, %struct.gs_memory_s** %memory1, align 8, !tbaa !68
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i32 @wedge_vertex_list_elem_buffer_alloc(%struct.patch_fill_state_s* %3) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %4 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %5, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %max_small_coord = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 13
  store i32 2097152, i32* %max_small_coord, align 4, !tbaa !69
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %8 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %call2 = call i32 @allocate_color_stack(%struct.patch_fill_state_s* %7, %struct.gs_memory_s* %8) #5
  store i32 %call2, i32* %code, align 4, !tbaa !5
  %9 = load i32, i32* %code, align 4, !tbaa !5
  %cmp3 = icmp slt i32 %9, 0
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  %10 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 25
  %12 = load i32, i32* %unlinear, align 4, !tbaa !53
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then.7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.5
  %13 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs.addr, align 8, !tbaa !1
  %cmp6 = icmp eq %struct.gs_color_space_s* %13, null
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %lor.lhs.false, %if.end.5
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %14, i32 0, i32 33
  store %struct.gs_color_index_cache_s* null, %struct.gs_color_index_cache_s** %pcic, align 8, !tbaa !70
  br label %if.end.14

if.else:                                          ; preds = %lor.lhs.false
  %15 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %16 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs.addr, align 8, !tbaa !1
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 0
  %18 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 1
  %20 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %trans_device = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %21, i32 0, i32 5
  %22 = load %struct.gx_device_s*, %struct.gx_device_s** %trans_device, align 8, !tbaa !71
  %call8 = call %struct.gs_color_index_cache_s* @gs_color_index_cache_create(%struct.gs_memory_s* %15, %struct.gs_color_space_s* %16, %struct.gx_device_s* %18, %struct.gs_imager_state_s* %20, i32 1, %struct.gx_device_s* %22) #5
  %23 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic9 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %23, i32 0, i32 33
  store %struct.gs_color_index_cache_s* %call8, %struct.gs_color_index_cache_s** %pcic9, align 8, !tbaa !70
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic10 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %24, i32 0, i32 33
  %25 = load %struct.gs_color_index_cache_s*, %struct.gs_color_index_cache_s** %pcic10, align 8, !tbaa !70
  %cmp11 = icmp eq %struct.gs_color_index_cache_s* %25, null
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.else
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.else
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %if.then.7
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.12, %if.then.4, %if.then
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = load i32, i32* %retval
  ret i32 %27
}

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #2

; Function Attrs: nounwind uwtable
define i32 @term_patch_fill_state(%struct.patch_fill_state_s* %pfs) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %b = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = bitcast i32* %b to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_ptr = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 29
  %2 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !7
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %3, i32 0, i32 30
  %4 = load i8*, i8** %color_stack, align 8, !tbaa !52
  %cmp = icmp ne i8* %2, %4
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %b, align 4, !tbaa !5
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @wedge_vertex_list_elem_buffer_free(%struct.patch_fill_state_s* %5) #5
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 30
  %7 = load i8*, i8** %color_stack1, align 8, !tbaa !52
  %tobool = icmp ne i8* %7, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 32
  %9 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !68
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %9, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 2
  %10 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !72
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %memory2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 32
  %12 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory2, align 8, !tbaa !68
  %13 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack3 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %13, i32 0, i32 30
  %14 = load i8*, i8** %color_stack3, align 8, !tbaa !52
  call void %10(%struct.gs_memory_s* %12, i8* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i32 0, i32 0)) #5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %15, i32 0, i32 33
  %16 = load %struct.gs_color_index_cache_s*, %struct.gs_color_index_cache_s** %pcic, align 8, !tbaa !70
  %cmp4 = icmp ne %struct.gs_color_index_cache_s* %16, null
  br i1 %cmp4, label %if.then.6, label %if.end.8

if.then.6:                                        ; preds = %if.end
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic7 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 33
  %18 = load %struct.gs_color_index_cache_s*, %struct.gs_color_index_cache_s** %pcic7, align 8, !tbaa !70
  call void @gs_color_index_cache_destroy(%struct.gs_color_index_cache_s* %18) #5
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.6, %if.end
  %19 = load i32, i32* %b, align 4, !tbaa !5
  %20 = bitcast i32* %b to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #2
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define void @wedge_vertex_list_elem_buffer_free(%struct.patch_fill_state_s* %pfs) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %memory = alloca %struct.gs_memory_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_memory_s** %memory to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 32
  %2 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1, align 8, !tbaa !68
  store %struct.gs_memory_s* %2, %struct.gs_memory_s** %memory, align 8, !tbaa !1
  %3 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %3, i32 0, i32 1
  %free_object = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 2
  %4 = load void (%struct.gs_memory_s*, i8*, i8*)*, void (%struct.gs_memory_s*, i8*, i8*)** %free_object, align 8, !tbaa !72
  %5 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !1
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_buffer = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 14
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %wedge_vertex_list_elem_buffer, align 8, !tbaa !75
  %8 = bitcast %struct.wedge_vertex_list_elem_s* %7 to i8*
  call void %4(%struct.gs_memory_s* %5, i8* %8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i32 0, i32 0)) #5
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_buffer2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 14
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %wedge_vertex_list_elem_buffer2, align 8, !tbaa !75
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %free_wedge_vertex = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %10, i32 0, i32 15
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %free_wedge_vertex, align 8, !tbaa !76
  %11 = bitcast %struct.gs_memory_s** %memory to i8*
  call void @llvm.lifetime.end(i64 8, i8* %11) #2
  ret void
}

declare void @gs_color_index_cache_destroy(%struct.gs_color_index_cache_s*) #3

; Function Attrs: nounwind uwtable
define void @patch_resolve_color(%struct.patch_color_s* %ppcr, %struct.patch_fill_state_s* %pfs) #0 {
entry:
  %ppcr.addr = alloca %struct.patch_color_s*, align 8
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  store %struct.patch_color_s* %ppcr, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_resolve_color_inline(%struct.patch_color_s* %0, %struct.patch_fill_state_s* %1) #5
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @patch_resolve_color_inline(%struct.patch_color_s* %ppcr, %struct.patch_fill_state_s* %pfs) #1 {
entry:
  %ppcr.addr = alloca %struct.patch_color_s*, align 8
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  store %struct.patch_color_s* %ppcr, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 9
  %1 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %tobool = icmp ne %struct.gs_function_s* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %direct_space = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %3, i32 0, i32 2
  %4 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %direct_space, align 8, !tbaa !16
  store %struct.gs_color_space_s* %4, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 9
  %6 = load %struct.gs_function_s*, %struct.gs_function_s** %Function1, align 8, !tbaa !28
  %head = getelementptr inbounds %struct.gs_function_s, %struct.gs_function_s* %6, i32 0, i32 0
  %procs = getelementptr inbounds %struct.gs_function_head_s, %struct.gs_function_head_s* %head, i32 0, i32 1
  %evaluate = getelementptr inbounds %struct.gs_function_procs_s, %struct.gs_function_procs_s* %procs, i32 0, i32 0
  %7 = load i32 (%struct.gs_function_s*, float*, float*)*, i32 (%struct.gs_function_s*, float*, float*)** %evaluate, align 8, !tbaa !77
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 9
  %9 = load %struct.gs_function_s*, %struct.gs_function_s** %Function2, align 8, !tbaa !28
  %10 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %t = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %10, i32 0, i32 0
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %t, i32 0, i32 0
  %11 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %11, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arraydecay3 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i32 0
  %call = call i32 %7(%struct.gs_function_s* %9, float* %arraydecay, float* %arraydecay3) #5
  %12 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %12, i32 0, i32 0
  %13 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !20
  %restrict_color = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %13, i32 0, i32 6
  %14 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)** %restrict_color, align 8, !tbaa !24
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %cc4 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %15, i32 0, i32 1
  %16 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void %14(%struct.gs_client_color_s* %cc4, %struct.gs_color_space_s* %16) #5
  %17 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %17) #2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @gs_shading_Cp_fill_rectangle(%struct.gs_shading_s* %psh0, %struct.gs_rect_s* %rect, %struct.gs_fixed_rect_s* %rect_clip, %struct.gx_device_s* %dev, %struct.gs_imager_state_s* %pis) #0 {
entry:
  %retval = alloca i32, align 4
  %psh0.addr = alloca %struct.gs_shading_s*, align 8
  %rect.addr = alloca %struct.gs_rect_s*, align 8
  %rect_clip.addr = alloca %struct.gs_fixed_rect_s*, align 8
  %dev.addr = alloca %struct.gx_device_s*, align 8
  %pis.addr = alloca %struct.gs_imager_state_s*, align 8
  %psh = alloca %struct.gs_shading_Cp_s*, align 8
  %state = alloca %struct.patch_fill_state_s, align 8
  %cs = alloca %struct.shade_coord_stream_s, align 8
  %curve = alloca [4 x %struct.patch_curve_s], align 16
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.gs_shading_s* %psh0, %struct.gs_shading_s** %psh0.addr, align 8, !tbaa !1
  store %struct.gs_rect_s* %rect, %struct.gs_rect_s** %rect.addr, align 8, !tbaa !1
  store %struct.gs_fixed_rect_s* %rect_clip, %struct.gs_fixed_rect_s** %rect_clip.addr, align 8, !tbaa !1
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  store %struct.gs_imager_state_s* %pis, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_shading_Cp_s** %psh to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gs_shading_s*, %struct.gs_shading_s** %psh0.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gs_shading_s* %1 to %struct.gs_shading_Cp_s*
  store %struct.gs_shading_Cp_s* %2, %struct.gs_shading_Cp_s** %psh, align 8, !tbaa !1
  %3 = bitcast %struct.patch_fill_state_s* %state to i8*
  call void @llvm.lifetime.start(i64 728, i8* %3) #2
  %4 = bitcast %struct.shade_coord_stream_s* %cs to i8*
  call void @llvm.lifetime.start(i64 424, i8* %4) #2
  %5 = bitcast [4 x %struct.patch_curve_s]* %curve to i8*
  call void @llvm.lifetime.start(i64 1136, i8* %5) #2
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast %struct.patch_fill_state_s* %state to %struct.mesh_fill_state_s*
  %8 = load %struct.gs_shading_s*, %struct.gs_shading_s** %psh0.addr, align 8, !tbaa !1
  %9 = bitcast %struct.gs_shading_s* %8 to %struct.gs_shading_mesh_s*
  %10 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect_clip.addr, align 8, !tbaa !1
  %11 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %12 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %call = call i32 @mesh_init_fill_state(%struct.mesh_fill_state_s* %7, %struct.gs_shading_mesh_s* %9, %struct.gs_fixed_rect_s* %10, %struct.gx_device_s* %11, %struct.gs_imager_state_s* %12) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %13 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %13, 0
  br i1 %cmp, label %if.then, label %if.end.4

if.then:                                          ; preds = %entry
  %icclink = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %14 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink, align 8, !tbaa !82
  %cmp1 = icmp ne %struct.gsicc_link_s* %14, null
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %icclink3 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %15 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink3, align 8, !tbaa !82
  call void @gsicc_release_link(%struct.gsicc_link_s* %15) #5
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  %16 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %16, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.4:                                         ; preds = %entry
  %17 = load %struct.gs_shading_Cp_s*, %struct.gs_shading_Cp_s** %psh, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gs_shading_Cp_s, %struct.gs_shading_Cp_s* %17, i32 0, i32 1
  %Function = getelementptr inbounds %struct.gs_shading_Cp_params_s, %struct.gs_shading_Cp_params_s* %params, i32 0, i32 10
  %18 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !83
  %Function5 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 9
  store %struct.gs_function_s* %18, %struct.gs_function_s** %Function5, align 8, !tbaa !28
  %call6 = call i32 @init_patch_fill_state(%struct.patch_fill_state_s* %state) #5
  store i32 %call6, i32* %code, align 4, !tbaa !5
  %19 = load i32, i32* %code, align 4, !tbaa !5
  %cmp7 = icmp slt i32 %19, 0
  br i1 %cmp7, label %if.then.8, label %if.end.14

if.then.8:                                        ; preds = %if.end.4
  %icclink9 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %20 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink9, align 8, !tbaa !82
  %cmp10 = icmp ne %struct.gsicc_link_s* %20, null
  br i1 %cmp10, label %if.then.11, label %if.end.13

if.then.11:                                       ; preds = %if.then.8
  %icclink12 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %21 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink12, align 8, !tbaa !82
  call void @gsicc_release_link(%struct.gsicc_link_s* %21) #5
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.11, %if.then.8
  %22 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.14:                                        ; preds = %if.end.4
  %arrayidx = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 3
  %straight = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx, i32 0, i32 2
  store i32 0, i32* %straight, align 4, !tbaa !90
  %arrayidx15 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 2
  %straight16 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx15, i32 0, i32 2
  store i32 0, i32* %straight16, align 4, !tbaa !90
  %arrayidx17 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 1
  %straight18 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx17, i32 0, i32 2
  store i32 0, i32* %straight18, align 4, !tbaa !90
  %arrayidx19 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 0
  %straight20 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx19, i32 0, i32 2
  store i32 0, i32* %straight20, align 4, !tbaa !90
  %23 = load %struct.gs_shading_Cp_s*, %struct.gs_shading_Cp_s** %psh, align 8, !tbaa !1
  %params21 = getelementptr inbounds %struct.gs_shading_Cp_s, %struct.gs_shading_Cp_s* %23, i32 0, i32 1
  %24 = bitcast %struct.gs_shading_Cp_params_s* %params21 to %struct.gs_shading_mesh_params_s*
  %25 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  call void @shade_next_init(%struct.shade_coord_stream_s* %cs, %struct.gs_shading_mesh_params_s* %24, %struct.gs_imager_state_s* %25) #5
  br label %while.cond

while.cond:                                       ; preds = %do.end, %if.end.14
  %26 = load %struct.gs_shading_Cp_s*, %struct.gs_shading_Cp_s** %psh, align 8, !tbaa !1
  %params22 = getelementptr inbounds %struct.gs_shading_Cp_s, %struct.gs_shading_Cp_s* %26, i32 0, i32 1
  %BitsPerFlag = getelementptr inbounds %struct.gs_shading_Cp_params_s, %struct.gs_shading_Cp_params_s* %params22, i32 0, i32 11
  %27 = load i32, i32* %BitsPerFlag, align 4, !tbaa !93
  %arraydecay = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i32 0
  %call23 = call i32 @shade_next_patch(%struct.shade_coord_stream_s* %cs, i32 %27, %struct.patch_curve_s* %arraydecay, %struct.gs_fixed_point_s* null) #5
  store i32 %call23, i32* %code, align 4, !tbaa !5
  %cmp24 = icmp eq i32 %call23, 0
  br i1 %cmp24, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %arraydecay25 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i32 0
  %call26 = call i32 @patch_fill(%struct.patch_fill_state_s* %state, %struct.patch_curve_s* %arraydecay25, %struct.gs_fixed_point_s* null, void (%struct.gs_fixed_point_s*, %struct.patch_curve_s*, %struct.gs_fixed_point_s*, double, double)* @Cp_transform) #5
  store i32 %call26, i32* %code, align 4, !tbaa !5
  %cmp27 = icmp sge i32 %call26, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %28 = phi i1 [ false, %while.cond ], [ %cmp27, %land.rhs ]
  br i1 %28, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %do.body

do.body:                                          ; preds = %while.body
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %while.cond

while.end:                                        ; preds = %land.end
  %call28 = call i32 @term_patch_fill_state(%struct.patch_fill_state_s* %state) #5
  %tobool = icmp ne i32 %call28, 0
  br i1 %tobool, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %while.end
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %while.end
  %icclink31 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %29 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink31, align 8, !tbaa !82
  %cmp32 = icmp ne %struct.gsicc_link_s* %29, null
  br i1 %cmp32, label %if.then.33, label %if.end.35

if.then.33:                                       ; preds = %if.end.30
  %icclink34 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %30 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink34, align 8, !tbaa !82
  call void @gsicc_release_link(%struct.gsicc_link_s* %30) #5
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.33, %if.end.30
  %31 = load i32, i32* %code, align 4, !tbaa !5
  %cmp36 = icmp slt i32 %31, 0
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.35
  %32 = load i32, i32* %code, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %if.end.35
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.then.29, %if.end.13, %if.end
  %33 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #2
  %34 = bitcast [4 x %struct.patch_curve_s]* %curve to i8*
  call void @llvm.lifetime.end(i64 1136, i8* %34) #2
  %35 = bitcast %struct.shade_coord_stream_s* %cs to i8*
  call void @llvm.lifetime.end(i64 424, i8* %35) #2
  %36 = bitcast %struct.patch_fill_state_s* %state to i8*
  call void @llvm.lifetime.end(i64 728, i8* %36) #2
  %37 = bitcast %struct.gs_shading_Cp_s** %psh to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #2
  %38 = load i32, i32* %retval
  ret i32 %38
}

declare i32 @mesh_init_fill_state(%struct.mesh_fill_state_s*, %struct.gs_shading_mesh_s*, %struct.gs_fixed_rect_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*) #3

declare void @gsicc_release_link(%struct.gsicc_link_s*) #3

declare void @shade_next_init(%struct.shade_coord_stream_s*, %struct.gs_shading_mesh_params_s*, %struct.gs_imager_state_s*) #3

; Function Attrs: nounwind uwtable
define internal i32 @shade_next_patch(%struct.shade_coord_stream_s* %cs, i32 %BitsPerFlag, %struct.patch_curve_s* %curve, %struct.gs_fixed_point_s* %interior) #0 {
entry:
  %retval = alloca i32, align 4
  %cs.addr = alloca %struct.shade_coord_stream_s*, align 8
  %BitsPerFlag.addr = alloca i32, align 4
  %curve.addr = alloca %struct.patch_curve_s*, align 8
  %interior.addr = alloca %struct.gs_fixed_point_s*, align 8
  %flag = alloca i32, align 4
  %num_colors = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.shade_coord_stream_s* %cs, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  store i32 %BitsPerFlag, i32* %BitsPerFlag.addr, align 4, !tbaa !5
  store %struct.patch_curve_s* %curve, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %interior, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %0 = bitcast i32* %flag to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %2 = load i32, i32* %BitsPerFlag.addr, align 4, !tbaa !5
  %call = call i32 @shade_next_flag(%struct.shade_coord_stream_s* %1, i32 %2) #5
  store i32 %call, i32* %flag, align 4, !tbaa !5
  %3 = bitcast i32* %num_colors to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load i32, i32* %flag, align 4, !tbaa !5
  %cmp = icmp slt i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end.3

if.then:                                          ; preds = %entry
  %6 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %is_eod = getelementptr inbounds %struct.shade_coord_stream_s, %struct.shade_coord_stream_s* %6, i32 0, i32 10
  %7 = load i32 (%struct.shade_coord_stream_s*)*, i32 (%struct.shade_coord_stream_s*)** %is_eod, align 8, !tbaa !94
  %8 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %call1 = call i32 %7(%struct.shade_coord_stream_s* %8) #5
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end, label %if.then.2

if.then.2:                                        ; preds = %if.then
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %entry
  %9 = load i32, i32* %flag, align 4, !tbaa !5
  %and = and i32 %9, 3
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.11
    i32 2, label %sw.bb.18
    i32 3, label %sw.bb.25
  ]

sw.default:                                       ; preds = %if.end.3
  store i32 -15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

sw.bb:                                            ; preds = %if.end.3
  %10 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %11 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %11, i64 0
  %call4 = call i32 @shade_next_curve(%struct.shade_coord_stream_s* %10, %struct.patch_curve_s* %arrayidx) #5
  store i32 %call4, i32* %code, align 4, !tbaa !5
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.then.9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %12 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %13 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %13, i64 1
  %vertex = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx6, i32 0, i32 0
  %p = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex, i32 0, i32 0
  %call7 = call i32 @shade_next_coords(%struct.shade_coord_stream_s* %12, %struct.gs_fixed_point_s* %p, i32 1) #5
  store i32 %call7, i32* %code, align 4, !tbaa !5
  %cmp8 = icmp slt i32 %call7, 0
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %lor.lhs.false, %sw.bb
  %14 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.10:                                        ; preds = %lor.lhs.false
  store i32 4, i32* %num_colors, align 4, !tbaa !5
  br label %vx

sw.bb.11:                                         ; preds = %if.end.3
  %15 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %15, i64 0
  %16 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %16, i64 1
  %17 = bitcast %struct.patch_curve_s* %arrayidx12 to i8*
  %18 = bitcast %struct.patch_curve_s* %arrayidx13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 284, i32 4, i1 false), !tbaa.struct !100
  %19 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %19, i64 1
  %vertex15 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx14, i32 0, i32 0
  %20 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %20, i64 2
  %vertex17 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx16, i32 0, i32 0
  %21 = bitcast %struct.mesh_vertex_s* %vertex15 to i8*
  %22 = bitcast %struct.mesh_vertex_s* %vertex17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 264, i32 4, i1 false), !tbaa.struct !102
  br label %v3

sw.bb.18:                                         ; preds = %if.end.3
  %23 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %23, i64 0
  %24 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %24, i64 2
  %25 = bitcast %struct.patch_curve_s* %arrayidx19 to i8*
  %26 = bitcast %struct.patch_curve_s* %arrayidx20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 284, i32 4, i1 false), !tbaa.struct !100
  %27 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %27, i64 1
  %vertex22 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx21, i32 0, i32 0
  %28 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %28, i64 3
  %vertex24 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx23, i32 0, i32 0
  %29 = bitcast %struct.mesh_vertex_s* %vertex22 to i8*
  %30 = bitcast %struct.mesh_vertex_s* %vertex24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 264, i32 4, i1 false), !tbaa.struct !102
  br label %v3

sw.bb.25:                                         ; preds = %if.end.3
  %31 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %31, i64 1
  %vertex27 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx26, i32 0, i32 0
  %32 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %32, i64 0
  %vertex29 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx28, i32 0, i32 0
  %33 = bitcast %struct.mesh_vertex_s* %vertex27 to i8*
  %34 = bitcast %struct.mesh_vertex_s* %vertex29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 264, i32 4, i1 false), !tbaa.struct !102
  %35 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %35, i64 0
  %36 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %36, i64 3
  %37 = bitcast %struct.patch_curve_s* %arrayidx30 to i8*
  %38 = bitcast %struct.patch_curve_s* %arrayidx31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 284, i32 4, i1 false), !tbaa.struct !100
  br label %v3

v3:                                               ; preds = %sw.bb.25, %sw.bb.18, %sw.bb.11
  store i32 2, i32* %num_colors, align 4, !tbaa !5
  br label %vx

vx:                                               ; preds = %v3, %if.end.10
  %39 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %40 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %40, i64 1
  %control = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx32, i32 0, i32 1
  %arraydecay = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control, i32 0, i32 0
  %call33 = call i32 @shade_next_coords(%struct.shade_coord_stream_s* %39, %struct.gs_fixed_point_s* %arraydecay, i32 2) #5
  store i32 %call33, i32* %code, align 4, !tbaa !5
  %cmp34 = icmp slt i32 %call33, 0
  br i1 %cmp34, label %if.then.51, label %lor.lhs.false.35

lor.lhs.false.35:                                 ; preds = %vx
  %41 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %42 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %42, i64 2
  %call37 = call i32 @shade_next_curve(%struct.shade_coord_stream_s* %41, %struct.patch_curve_s* %arrayidx36) #5
  store i32 %call37, i32* %code, align 4, !tbaa !5
  %cmp38 = icmp slt i32 %call37, 0
  br i1 %cmp38, label %if.then.51, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %lor.lhs.false.35
  %43 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %44 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %44, i64 3
  %call41 = call i32 @shade_next_curve(%struct.shade_coord_stream_s* %43, %struct.patch_curve_s* %arrayidx40) #5
  store i32 %call41, i32* %code, align 4, !tbaa !5
  %cmp42 = icmp slt i32 %call41, 0
  br i1 %cmp42, label %if.then.51, label %lor.lhs.false.43

lor.lhs.false.43:                                 ; preds = %lor.lhs.false.39
  %45 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %cmp44 = icmp ne %struct.gs_fixed_point_s* %45, null
  br i1 %cmp44, label %land.lhs.true, label %lor.lhs.false.47

land.lhs.true:                                    ; preds = %lor.lhs.false.43
  %46 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %47 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %call45 = call i32 @shade_next_coords(%struct.shade_coord_stream_s* %46, %struct.gs_fixed_point_s* %47, i32 4) #5
  store i32 %call45, i32* %code, align 4, !tbaa !5
  %cmp46 = icmp slt i32 %call45, 0
  br i1 %cmp46, label %if.then.51, label %lor.lhs.false.47

lor.lhs.false.47:                                 ; preds = %land.lhs.true, %lor.lhs.false.43
  %48 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %49 = load i32, i32* %num_colors, align 4, !tbaa !5
  %sub = sub nsw i32 4, %49
  %idxprom = sext i32 %sub to i64
  %50 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %50, i64 %idxprom
  %51 = load i32, i32* %num_colors, align 4, !tbaa !5
  %call49 = call i32 @shade_next_colors(%struct.shade_coord_stream_s* %48, %struct.patch_curve_s* %arrayidx48, i32 %51) #5
  store i32 %call49, i32* %code, align 4, !tbaa !5
  %cmp50 = icmp slt i32 %call49, 0
  br i1 %cmp50, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %lor.lhs.false.47, %land.lhs.true, %lor.lhs.false.39, %lor.lhs.false.35, %vx
  %52 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %52, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %lor.lhs.false.47
  %53 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %align = getelementptr inbounds %struct.shade_coord_stream_s, %struct.shade_coord_stream_s* %53, i32 0, i32 9
  %54 = load void (%struct.shade_coord_stream_s*, i32)*, void (%struct.shade_coord_stream_s*, i32)** %align, align 8, !tbaa !103
  %55 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  call void %54(%struct.shade_coord_stream_s* %55, i32 8) #5
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.52
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.then.51, %if.then.9, %sw.default, %if.end, %if.then.2
  %56 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #2
  %57 = bitcast i32* %num_colors to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #2
  %58 = bitcast i32* %flag to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #2
  %59 = load i32, i32* %retval
  ret i32 %59
}

; Function Attrs: nounwind uwtable
define i32 @patch_fill(%struct.patch_fill_state_s* %pfs, %struct.patch_curve_s* %curve, %struct.gs_fixed_point_s* %interior, void (%struct.gs_fixed_point_s*, %struct.patch_curve_s*, %struct.gs_fixed_point_s*, double, double)* %transform) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %curve.addr = alloca %struct.patch_curve_s*, align 8
  %interior.addr = alloca %struct.gs_fixed_point_s*, align 8
  %transform.addr = alloca void (%struct.gs_fixed_point_s*, %struct.patch_curve_s*, %struct.gs_fixed_point_s*, double, double)*, align 8
  %p = alloca %struct.tensor_patch, align 8
  %c = alloca [4 x %struct.patch_color_s*], align 16
  %kv = alloca [4 x i32], align 16
  %kvm = alloca i32, align 4
  %ku = alloca [4 x i32], align 16
  %kum = alloca i32, align 4
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %pdev = alloca %struct.gx_device_s*, align 8
  %path = alloca %struct.gx_path_s, align 8
  %d01x = alloca i32, align 4
  %d01y = alloca i32, align 4
  %d12x = alloca i32, align 4
  %d12y = alloca i32, align 4
  %d23x = alloca i32, align 4
  %d23y = alloca i32, align 4
  %d30x = alloca i32, align 4
  %d30y = alloca i32, align 4
  %s1 = alloca i64, align 8
  %s2 = alloca i64, align 8
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %jj = alloca i32, align 4
  %l = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_curve_s* %curve, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %interior, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  store void (%struct.gs_fixed_point_s*, %struct.patch_curve_s*, %struct.gs_fixed_point_s*, double, double)* %transform, void (%struct.gs_fixed_point_s*, %struct.patch_curve_s*, %struct.gs_fixed_point_s*, double, double)** %transform.addr, align 8, !tbaa !1
  %0 = bitcast %struct.tensor_patch* %p to i8*
  call void @llvm.lifetime.start(i64 160, i8* %0) #2
  %1 = bitcast [4 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 32, i8* %1) #2
  %2 = bitcast [4 x i32]* %kv to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #2
  %3 = bitcast i32* %kvm to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast [4 x i32]* %ku to i8*
  call void @llvm.lifetime.start(i64 16, i8* %4) #2
  %5 = bitcast i32* %kum to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  store i32 0, i32* %code, align 4, !tbaa !5
  %7 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [4 x %struct.patch_color_s*], [4 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %8, %struct.patch_color_s** %arraydecay, i32 4) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [4 x %struct.patch_color_s*], [4 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %9 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %c1 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c1, i32 0, i64 0
  %arrayidx3 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx2, i32 0, i64 0
  store %struct.patch_color_s* %9, %struct.patch_color_s** %arrayidx3, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds [4 x %struct.patch_color_s*], [4 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %10 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx4, align 8, !tbaa !1
  %c5 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c5, i32 0, i64 0
  %arrayidx7 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx6, i32 0, i64 1
  store %struct.patch_color_s* %10, %struct.patch_color_s** %arrayidx7, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds [4 x %struct.patch_color_s*], [4 x %struct.patch_color_s*]* %c, i32 0, i64 2
  %11 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx8, align 8, !tbaa !1
  %c9 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx10 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c9, i32 0, i64 1
  %arrayidx11 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx10, i32 0, i64 0
  store %struct.patch_color_s* %11, %struct.patch_color_s** %arrayidx11, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds [4 x %struct.patch_color_s*], [4 x %struct.patch_color_s*]* %c, i32 0, i64 3
  %12 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx12, align 8, !tbaa !1
  %c13 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c13, i32 0, i64 1
  %arrayidx15 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx14, i32 0, i64 1
  store %struct.patch_color_s* %12, %struct.patch_color_s** %arrayidx15, align 8, !tbaa !1
  %13 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %14 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  call void @make_tensor_patch(%struct.patch_fill_state_s* %13, %struct.tensor_patch* %p, %struct.patch_curve_s* %14, %struct.gs_fixed_point_s* %15) #5
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call16 = call i32 @is_linear_color_applicable(%struct.patch_fill_state_s* %16) #5
  %tobool = icmp ne i32 %call16, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 25
  store i32 %lnot.ext, i32* %unlinear, align 4, !tbaa !53
  %18 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %18, i32 0, i32 24
  store i32 0, i32* %linear_color, align 4, !tbaa !31
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 0
  %20 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %20, i32 0, i32 42
  %dev_spec_op = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 65
  %21 = load i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)** %dev_spec_op, align 8, !tbaa !104
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev17 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %22, i32 0, i32 0
  %23 = load %struct.gx_device_s*, %struct.gx_device_s** %dev17, align 8, !tbaa !55
  %call18 = call i32 %21(%struct.gx_device_s* %23, i32 4, i8* null, i32 0) #5
  %cmp = icmp sgt i32 %call18, 0
  br i1 %cmp, label %if.then, label %if.end.221

if.then:                                          ; preds = %entry
  %24 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #2
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev19 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %25, i32 0, i32 0
  %26 = load %struct.gx_device_s*, %struct.gx_device_s** %dev19, align 8, !tbaa !55
  store %struct.gx_device_s* %26, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %27 = bitcast %struct.gx_path_s* %path to i8*
  call void @llvm.lifetime.start(i64 128, i8* %27) #2
  %28 = bitcast i32* %d01x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #2
  %29 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %29, i64 1
  %vertex = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx20, i32 0, i32 0
  %p21 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p21, i32 0, i32 0
  %30 = load i32, i32* %x, align 4, !tbaa !105
  %31 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %31, i64 0
  %vertex23 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx22, i32 0, i32 0
  %p24 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex23, i32 0, i32 0
  %x25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p24, i32 0, i32 0
  %32 = load i32, i32* %x25, align 4, !tbaa !105
  %sub = sub nsw i32 %30, %32
  %shr = ashr i32 %sub, 1
  store i32 %shr, i32* %d01x, align 4, !tbaa !5
  %33 = bitcast i32* %d01y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #2
  %34 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %34, i64 1
  %vertex27 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx26, i32 0, i32 0
  %p28 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex27, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p28, i32 0, i32 1
  %35 = load i32, i32* %y, align 4, !tbaa !106
  %36 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %36, i64 0
  %vertex30 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx29, i32 0, i32 0
  %p31 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex30, i32 0, i32 0
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p31, i32 0, i32 1
  %37 = load i32, i32* %y32, align 4, !tbaa !106
  %sub33 = sub nsw i32 %35, %37
  %shr34 = ashr i32 %sub33, 1
  store i32 %shr34, i32* %d01y, align 4, !tbaa !5
  %38 = bitcast i32* %d12x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %38) #2
  %39 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx35 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %39, i64 2
  %vertex36 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx35, i32 0, i32 0
  %p37 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex36, i32 0, i32 0
  %x38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p37, i32 0, i32 0
  %40 = load i32, i32* %x38, align 4, !tbaa !105
  %41 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %41, i64 1
  %vertex40 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx39, i32 0, i32 0
  %p41 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex40, i32 0, i32 0
  %x42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p41, i32 0, i32 0
  %42 = load i32, i32* %x42, align 4, !tbaa !105
  %sub43 = sub nsw i32 %40, %42
  %shr44 = ashr i32 %sub43, 1
  store i32 %shr44, i32* %d12x, align 4, !tbaa !5
  %43 = bitcast i32* %d12y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #2
  %44 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %44, i64 2
  %vertex46 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx45, i32 0, i32 0
  %p47 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex46, i32 0, i32 0
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p47, i32 0, i32 1
  %45 = load i32, i32* %y48, align 4, !tbaa !106
  %46 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %46, i64 1
  %vertex50 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx49, i32 0, i32 0
  %p51 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex50, i32 0, i32 0
  %y52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p51, i32 0, i32 1
  %47 = load i32, i32* %y52, align 4, !tbaa !106
  %sub53 = sub nsw i32 %45, %47
  %shr54 = ashr i32 %sub53, 1
  store i32 %shr54, i32* %d12y, align 4, !tbaa !5
  %48 = bitcast i32* %d23x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #2
  %49 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %49, i64 3
  %vertex56 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx55, i32 0, i32 0
  %p57 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex56, i32 0, i32 0
  %x58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p57, i32 0, i32 0
  %50 = load i32, i32* %x58, align 4, !tbaa !105
  %51 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx59 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %51, i64 2
  %vertex60 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx59, i32 0, i32 0
  %p61 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex60, i32 0, i32 0
  %x62 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p61, i32 0, i32 0
  %52 = load i32, i32* %x62, align 4, !tbaa !105
  %sub63 = sub nsw i32 %50, %52
  %shr64 = ashr i32 %sub63, 1
  store i32 %shr64, i32* %d23x, align 4, !tbaa !5
  %53 = bitcast i32* %d23y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %53) #2
  %54 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx65 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %54, i64 3
  %vertex66 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx65, i32 0, i32 0
  %p67 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex66, i32 0, i32 0
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p67, i32 0, i32 1
  %55 = load i32, i32* %y68, align 4, !tbaa !106
  %56 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx69 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %56, i64 2
  %vertex70 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx69, i32 0, i32 0
  %p71 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex70, i32 0, i32 0
  %y72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p71, i32 0, i32 1
  %57 = load i32, i32* %y72, align 4, !tbaa !106
  %sub73 = sub nsw i32 %55, %57
  %shr74 = ashr i32 %sub73, 1
  store i32 %shr74, i32* %d23y, align 4, !tbaa !5
  %58 = bitcast i32* %d30x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %58) #2
  %59 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx75 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %59, i64 0
  %vertex76 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx75, i32 0, i32 0
  %p77 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex76, i32 0, i32 0
  %x78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p77, i32 0, i32 0
  %60 = load i32, i32* %x78, align 4, !tbaa !105
  %61 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx79 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %61, i64 3
  %vertex80 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx79, i32 0, i32 0
  %p81 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex80, i32 0, i32 0
  %x82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p81, i32 0, i32 0
  %62 = load i32, i32* %x82, align 4, !tbaa !105
  %sub83 = sub nsw i32 %60, %62
  %shr84 = ashr i32 %sub83, 1
  store i32 %shr84, i32* %d30x, align 4, !tbaa !5
  %63 = bitcast i32* %d30y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %63) #2
  %64 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx85 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %64, i64 0
  %vertex86 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx85, i32 0, i32 0
  %p87 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex86, i32 0, i32 0
  %y88 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p87, i32 0, i32 1
  %65 = load i32, i32* %y88, align 4, !tbaa !106
  %66 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx89 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %66, i64 3
  %vertex90 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx89, i32 0, i32 0
  %p91 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex90, i32 0, i32 0
  %y92 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p91, i32 0, i32 1
  %67 = load i32, i32* %y92, align 4, !tbaa !106
  %sub93 = sub nsw i32 %65, %67
  %shr94 = ashr i32 %sub93, 1
  store i32 %shr94, i32* %d30y, align 4, !tbaa !5
  %68 = bitcast i64* %s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %68) #2
  %69 = load i32, i32* %d01x, align 4, !tbaa !5
  %conv = sext i32 %69 to i64
  %70 = load i32, i32* %d12y, align 4, !tbaa !5
  %conv95 = sext i32 %70 to i64
  %mul = mul nsw i64 %conv, %conv95
  %71 = load i32, i32* %d01y, align 4, !tbaa !5
  %conv96 = sext i32 %71 to i64
  %72 = load i32, i32* %d12x, align 4, !tbaa !5
  %conv97 = sext i32 %72 to i64
  %mul98 = mul nsw i64 %conv96, %conv97
  %sub99 = sub nsw i64 %mul, %mul98
  store i64 %sub99, i64* %s1, align 8, !tbaa !107
  %73 = bitcast i64* %s2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %73) #2
  %74 = load i32, i32* %d23x, align 4, !tbaa !5
  %conv100 = sext i32 %74 to i64
  %75 = load i32, i32* %d30y, align 4, !tbaa !5
  %conv101 = sext i32 %75 to i64
  %mul102 = mul nsw i64 %conv100, %conv101
  %76 = load i32, i32* %d23y, align 4, !tbaa !5
  %conv103 = sext i32 %76 to i64
  %77 = load i32, i32* %d30x, align 4, !tbaa !5
  %conv104 = sext i32 %77 to i64
  %mul105 = mul nsw i64 %conv103, %conv104
  %sub106 = sub nsw i64 %mul102, %mul105
  store i64 %sub106, i64* %s2, align 8, !tbaa !107
  %78 = bitcast i32* %s to i8*
  call void @llvm.lifetime.start(i64 4, i8* %78) #2
  %79 = load i64, i64* %s1, align 8, !tbaa !107
  %80 = load i64, i64* %s2, align 8, !tbaa !107
  %add = add nsw i64 %79, %80
  %cmp107 = icmp sgt i64 %add, 0
  %cond = select i1 %cmp107, i32 1, i32 3
  store i32 %cond, i32* %s, align 4, !tbaa !5
  %81 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %81) #2
  %82 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %82) #2
  %83 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %83) #2
  %84 = bitcast i32* %jj to i8*
  call void @llvm.lifetime.start(i64 4, i8* %84) #2
  %85 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %85) #2
  %86 = load i32, i32* %s, align 4, !tbaa !5
  %cmp109 = icmp eq i32 %86, 1
  %cond111 = select i1 %cmp109, i32 0, i32 1
  store i32 %cond111, i32* %l, align 4, !tbaa !5
  %87 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %87, i32 0, i32 3
  %88 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !108
  %call112 = call i32 @gx_path_init_local_shared(%struct.gx_path_s* %path, %struct.gx_path_s* null, %struct.gs_memory_s* %88) #5
  %call113 = call i32 @is_x_bended(%struct.tensor_patch* %p) #5
  %tobool114 = icmp ne i32 %call113, 0
  br i1 %tobool114, label %if.then.117, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %call115 = call i32 @is_y_bended(%struct.tensor_patch* %p) #5
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %if.then.117, label %if.else

if.then.117:                                      ; preds = %lor.lhs.false, %if.then
  br label %if.end.192

if.else:                                          ; preds = %lor.lhs.false
  %89 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx118 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %89, i64 0
  %vertex119 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx118, i32 0, i32 0
  %p120 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex119, i32 0, i32 0
  %x121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p120, i32 0, i32 0
  %90 = load i32, i32* %x121, align 4, !tbaa !105
  %91 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx122 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %91, i64 0
  %vertex123 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx122, i32 0, i32 0
  %p124 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex123, i32 0, i32 0
  %y125 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p124, i32 0, i32 1
  %92 = load i32, i32* %y125, align 4, !tbaa !106
  %call126 = call i32 @gx_path_add_point(%struct.gx_path_s* %path, i32 %90, i32 %92) #5
  store i32 %call126, i32* %code, align 4, !tbaa !5
  store i32 0, i32* %k, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %93 = load i32, i32* %k, align 4, !tbaa !5
  %cmp127 = icmp slt i32 %93, 4
  br i1 %cmp127, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %94 = load i32, i32* %code, align 4, !tbaa !5
  %cmp129 = icmp sge i32 %94, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %95 = phi i1 [ false, %for.cond ], [ %cmp129, %land.rhs ]
  br i1 %95, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %96 = load i32, i32* %i, align 4, !tbaa !5
  %97 = load i32, i32* %s, align 4, !tbaa !5
  %add131 = add nsw i32 %96, %97
  %rem = srem i32 %add131, 4
  store i32 %rem, i32* %j, align 4, !tbaa !5
  %98 = load i32, i32* %s, align 4, !tbaa !5
  %cmp132 = icmp eq i32 %98, 1
  br i1 %cmp132, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %99 = load i32, i32* %i, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %100 = load i32, i32* %j, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond134 = phi i32 [ %99, %cond.true ], [ %100, %cond.false ]
  store i32 %cond134, i32* %jj, align 4, !tbaa !5
  %101 = load i32, i32* %jj, align 4, !tbaa !5
  %idxprom = sext i32 %101 to i64
  %102 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx135 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %102, i64 %idxprom
  %straight = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx135, i32 0, i32 2
  %103 = load i32, i32* %straight, align 4, !tbaa !90
  %tobool136 = icmp ne i32 %103, 0
  br i1 %tobool136, label %if.then.137, label %if.else.149

if.then.137:                                      ; preds = %cond.end
  %104 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom138 = sext i32 %104 to i64
  %105 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx139 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %105, i64 %idxprom138
  %vertex140 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx139, i32 0, i32 0
  %p141 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex140, i32 0, i32 0
  %x142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p141, i32 0, i32 0
  %106 = load i32, i32* %x142, align 4, !tbaa !105
  %107 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom143 = sext i32 %107 to i64
  %108 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx144 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %108, i64 %idxprom143
  %vertex145 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx144, i32 0, i32 0
  %p146 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex145, i32 0, i32 0
  %y147 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p146, i32 0, i32 1
  %109 = load i32, i32* %y147, align 4, !tbaa !106
  %call148 = call i32 @gx_path_add_line_notes(%struct.gx_path_s* %path, i32 %106, i32 %109, i32 0) #5
  store i32 %call148, i32* %code, align 4, !tbaa !5
  br label %if.end

if.else.149:                                      ; preds = %cond.end
  %110 = load i32, i32* %l, align 4, !tbaa !5
  %idxprom150 = sext i32 %110 to i64
  %111 = load i32, i32* %jj, align 4, !tbaa !5
  %idxprom151 = sext i32 %111 to i64
  %112 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx152 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %112, i64 %idxprom151
  %control = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx152, i32 0, i32 1
  %arrayidx153 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control, i32 0, i64 %idxprom150
  %x154 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx153, i32 0, i32 0
  %113 = load i32, i32* %x154, align 4, !tbaa !109
  %114 = load i32, i32* %l, align 4, !tbaa !5
  %idxprom155 = sext i32 %114 to i64
  %115 = load i32, i32* %jj, align 4, !tbaa !5
  %idxprom156 = sext i32 %115 to i64
  %116 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx157 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %116, i64 %idxprom156
  %control158 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx157, i32 0, i32 1
  %arrayidx159 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control158, i32 0, i64 %idxprom155
  %y160 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx159, i32 0, i32 1
  %117 = load i32, i32* %y160, align 4, !tbaa !110
  %118 = load i32, i32* %l, align 4, !tbaa !5
  %add161 = add nsw i32 %118, 1
  %and = and i32 %add161, 1
  %idxprom162 = sext i32 %and to i64
  %119 = load i32, i32* %jj, align 4, !tbaa !5
  %idxprom163 = sext i32 %119 to i64
  %120 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx164 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %120, i64 %idxprom163
  %control165 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx164, i32 0, i32 1
  %arrayidx166 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control165, i32 0, i64 %idxprom162
  %x167 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx166, i32 0, i32 0
  %121 = load i32, i32* %x167, align 4, !tbaa !109
  %122 = load i32, i32* %l, align 4, !tbaa !5
  %add168 = add nsw i32 %122, 1
  %and169 = and i32 %add168, 1
  %idxprom170 = sext i32 %and169 to i64
  %123 = load i32, i32* %jj, align 4, !tbaa !5
  %idxprom171 = sext i32 %123 to i64
  %124 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx172 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %124, i64 %idxprom171
  %control173 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx172, i32 0, i32 1
  %arrayidx174 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control173, i32 0, i64 %idxprom170
  %y175 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx174, i32 0, i32 1
  %125 = load i32, i32* %y175, align 4, !tbaa !110
  %126 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom176 = sext i32 %126 to i64
  %127 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx177 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %127, i64 %idxprom176
  %vertex178 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx177, i32 0, i32 0
  %p179 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex178, i32 0, i32 0
  %x180 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p179, i32 0, i32 0
  %128 = load i32, i32* %x180, align 4, !tbaa !105
  %129 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom181 = sext i32 %129 to i64
  %130 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx182 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %130, i64 %idxprom181
  %vertex183 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx182, i32 0, i32 0
  %p184 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex183, i32 0, i32 0
  %y185 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p184, i32 0, i32 1
  %131 = load i32, i32* %y185, align 4, !tbaa !106
  %call186 = call i32 @gx_path_add_curve_notes(%struct.gx_path_s* %path, i32 %113, i32 %117, i32 %121, i32 %125, i32 %128, i32 %131, i32 0) #5
  store i32 %call186, i32* %code, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.else.149, %if.then.137
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %132 = load i32, i32* %j, align 4, !tbaa !5
  store i32 %132, i32* %i, align 4, !tbaa !5
  %133 = load i32, i32* %k, align 4, !tbaa !5
  %inc = add nsw i32 %133, 1
  store i32 %inc, i32* %k, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %land.end
  %134 = load i32, i32* %code, align 4, !tbaa !5
  %cmp187 = icmp sge i32 %134, 0
  br i1 %cmp187, label %if.then.189, label %if.end.191

if.then.189:                                      ; preds = %for.end
  %call190 = call i32 @gx_path_close_subpath_notes(%struct.gx_path_s* %path, i32 0) #5
  store i32 %call190, i32* %code, align 4, !tbaa !5
  br label %if.end.191

if.end.191:                                       ; preds = %if.then.189, %for.end
  br label %if.end.192

if.end.192:                                       ; preds = %if.end.191, %if.then.117
  %135 = load i32, i32* %code, align 4, !tbaa !5
  %cmp193 = icmp sge i32 %135, 0
  br i1 %cmp193, label %if.then.195, label %if.end.199

if.then.195:                                      ; preds = %if.end.192
  %136 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev196 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %136, i32 0, i32 0
  %137 = load %struct.gx_device_s*, %struct.gx_device_s** %dev196, align 8, !tbaa !55
  %procs197 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %137, i32 0, i32 42
  %fill_path = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs197, i32 0, i32 24
  %138 = load i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)** %fill_path, align 8, !tbaa !111
  %139 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %call198 = call i32 %138(%struct.gx_device_s* %139, %struct.gs_imager_state_s* null, %struct.gx_path_s* %path, %struct.gx_fill_params_s* null, %struct.gx_device_color_s* null, %struct.gx_clip_path_s* null) #5
  store i32 %call198, i32* %code, align 4, !tbaa !5
  br label %if.end.199

if.end.199:                                       ; preds = %if.then.195, %if.end.192
  call void @gx_path_free(%struct.gx_path_s* %path, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0)) #5
  %140 = load i32, i32* %code, align 4, !tbaa !5
  %cmp200 = icmp slt i32 %140, 0
  br i1 %cmp200, label %if.then.202, label %if.end.203

if.then.202:                                      ; preds = %if.end.199
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.203:                                       ; preds = %if.end.199
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.202, %if.end.203
  %141 = bitcast i32* %l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %141) #2
  %142 = bitcast i32* %jj to i8*
  call void @llvm.lifetime.end(i64 4, i8* %142) #2
  %143 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %143) #2
  %144 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %144) #2
  %145 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %145) #2
  %146 = bitcast i32* %s to i8*
  call void @llvm.lifetime.end(i64 4, i8* %146) #2
  %147 = bitcast i64* %s2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %147) #2
  %148 = bitcast i64* %s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %148) #2
  %149 = bitcast i32* %d30y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %149) #2
  %150 = bitcast i32* %d30x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %150) #2
  %151 = bitcast i32* %d23y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %151) #2
  %152 = bitcast i32* %d23x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %152) #2
  %153 = bitcast i32* %d12y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153) #2
  %154 = bitcast i32* %d12x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %154) #2
  %155 = bitcast i32* %d01y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %155) #2
  %156 = bitcast i32* %d01x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %156) #2
  %157 = bitcast %struct.gx_path_s* %path to i8*
  call void @llvm.lifetime.end(i64 128, i8* %157) #2
  %158 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %158) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.393 [
    i32 0, label %cleanup.cont
    i32 5, label %out
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.221

if.end.221:                                       ; preds = %cleanup.cont, %entry
  %159 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx222 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx223 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx222, i32 0, i64 0
  %160 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %160, i32 0, i32 20
  %161 = load i32, i32* %fixed_flat, align 4, !tbaa !48
  %call224 = call i32 @curve_samples(%struct.patch_fill_state_s* %159, %struct.gs_fixed_point_s* %arrayidx223, i32 4, i32 %161) #5
  %arrayidx225 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 0
  store i32 %call224, i32* %arrayidx225, align 4, !tbaa !5
  %162 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole226 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx227 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole226, i32 0, i64 0
  %arrayidx228 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx227, i32 0, i64 1
  %163 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat229 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %163, i32 0, i32 20
  %164 = load i32, i32* %fixed_flat229, align 4, !tbaa !48
  %call230 = call i32 @curve_samples(%struct.patch_fill_state_s* %162, %struct.gs_fixed_point_s* %arrayidx228, i32 4, i32 %164) #5
  %arrayidx231 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 1
  store i32 %call230, i32* %arrayidx231, align 4, !tbaa !5
  %165 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole232 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx233 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole232, i32 0, i64 0
  %arrayidx234 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx233, i32 0, i64 2
  %166 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat235 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %166, i32 0, i32 20
  %167 = load i32, i32* %fixed_flat235, align 4, !tbaa !48
  %call236 = call i32 @curve_samples(%struct.patch_fill_state_s* %165, %struct.gs_fixed_point_s* %arrayidx234, i32 4, i32 %167) #5
  %arrayidx237 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 2
  store i32 %call236, i32* %arrayidx237, align 4, !tbaa !5
  %168 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole238 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx239 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole238, i32 0, i64 0
  %arrayidx240 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx239, i32 0, i64 3
  %169 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat241 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %169, i32 0, i32 20
  %170 = load i32, i32* %fixed_flat241, align 4, !tbaa !48
  %call242 = call i32 @curve_samples(%struct.patch_fill_state_s* %168, %struct.gs_fixed_point_s* %arrayidx240, i32 4, i32 %170) #5
  %arrayidx243 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 3
  store i32 %call242, i32* %arrayidx243, align 4, !tbaa !5
  %arrayidx244 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 0
  %171 = load i32, i32* %arrayidx244, align 4, !tbaa !5
  %arrayidx245 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 1
  %172 = load i32, i32* %arrayidx245, align 4, !tbaa !5
  %cmp246 = icmp sgt i32 %171, %172
  br i1 %cmp246, label %cond.true.248, label %cond.false.250

cond.true.248:                                    ; preds = %if.end.221
  %arrayidx249 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 0
  %173 = load i32, i32* %arrayidx249, align 4, !tbaa !5
  br label %cond.end.252

cond.false.250:                                   ; preds = %if.end.221
  %arrayidx251 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 1
  %174 = load i32, i32* %arrayidx251, align 4, !tbaa !5
  br label %cond.end.252

cond.end.252:                                     ; preds = %cond.false.250, %cond.true.248
  %cond253 = phi i32 [ %173, %cond.true.248 ], [ %174, %cond.false.250 ]
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 2
  %175 = load i32, i32* %arrayidx254, align 4, !tbaa !5
  %arrayidx255 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 3
  %176 = load i32, i32* %arrayidx255, align 4, !tbaa !5
  %cmp256 = icmp sgt i32 %175, %176
  br i1 %cmp256, label %cond.true.258, label %cond.false.260

cond.true.258:                                    ; preds = %cond.end.252
  %arrayidx259 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 2
  %177 = load i32, i32* %arrayidx259, align 4, !tbaa !5
  br label %cond.end.262

cond.false.260:                                   ; preds = %cond.end.252
  %arrayidx261 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 3
  %178 = load i32, i32* %arrayidx261, align 4, !tbaa !5
  br label %cond.end.262

cond.end.262:                                     ; preds = %cond.false.260, %cond.true.258
  %cond263 = phi i32 [ %177, %cond.true.258 ], [ %178, %cond.false.260 ]
  %cmp264 = icmp sgt i32 %cond253, %cond263
  br i1 %cmp264, label %cond.true.266, label %cond.false.277

cond.true.266:                                    ; preds = %cond.end.262
  %arrayidx267 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 0
  %179 = load i32, i32* %arrayidx267, align 4, !tbaa !5
  %arrayidx268 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 1
  %180 = load i32, i32* %arrayidx268, align 4, !tbaa !5
  %cmp269 = icmp sgt i32 %179, %180
  br i1 %cmp269, label %cond.true.271, label %cond.false.273

cond.true.271:                                    ; preds = %cond.true.266
  %arrayidx272 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 0
  %181 = load i32, i32* %arrayidx272, align 4, !tbaa !5
  br label %cond.end.275

cond.false.273:                                   ; preds = %cond.true.266
  %arrayidx274 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 1
  %182 = load i32, i32* %arrayidx274, align 4, !tbaa !5
  br label %cond.end.275

cond.end.275:                                     ; preds = %cond.false.273, %cond.true.271
  %cond276 = phi i32 [ %181, %cond.true.271 ], [ %182, %cond.false.273 ]
  br label %cond.end.288

cond.false.277:                                   ; preds = %cond.end.262
  %arrayidx278 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 2
  %183 = load i32, i32* %arrayidx278, align 4, !tbaa !5
  %arrayidx279 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 3
  %184 = load i32, i32* %arrayidx279, align 4, !tbaa !5
  %cmp280 = icmp sgt i32 %183, %184
  br i1 %cmp280, label %cond.true.282, label %cond.false.284

cond.true.282:                                    ; preds = %cond.false.277
  %arrayidx283 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 2
  %185 = load i32, i32* %arrayidx283, align 4, !tbaa !5
  br label %cond.end.286

cond.false.284:                                   ; preds = %cond.false.277
  %arrayidx285 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 3
  %186 = load i32, i32* %arrayidx285, align 4, !tbaa !5
  br label %cond.end.286

cond.end.286:                                     ; preds = %cond.false.284, %cond.true.282
  %cond287 = phi i32 [ %185, %cond.true.282 ], [ %186, %cond.false.284 ]
  br label %cond.end.288

cond.end.288:                                     ; preds = %cond.end.286, %cond.end.275
  %cond289 = phi i32 [ %cond276, %cond.end.275 ], [ %cond287, %cond.end.286 ]
  store i32 %cond289, i32* %kvm, align 4, !tbaa !5
  %187 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole290 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx291 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole290, i32 0, i64 0
  %arraydecay292 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx291, i32 0, i32 0
  %188 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat293 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %188, i32 0, i32 20
  %189 = load i32, i32* %fixed_flat293, align 4, !tbaa !48
  %call294 = call i32 @curve_samples(%struct.patch_fill_state_s* %187, %struct.gs_fixed_point_s* %arraydecay292, i32 1, i32 %189) #5
  %arrayidx295 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  store i32 %call294, i32* %arrayidx295, align 4, !tbaa !5
  %190 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole296 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx297 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole296, i32 0, i64 1
  %arraydecay298 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx297, i32 0, i32 0
  %191 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat299 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %191, i32 0, i32 20
  %192 = load i32, i32* %fixed_flat299, align 4, !tbaa !48
  %call300 = call i32 @curve_samples(%struct.patch_fill_state_s* %190, %struct.gs_fixed_point_s* %arraydecay298, i32 1, i32 %192) #5
  %arrayidx301 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 1
  store i32 %call300, i32* %arrayidx301, align 4, !tbaa !5
  %193 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole302 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx303 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole302, i32 0, i64 2
  %arraydecay304 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx303, i32 0, i32 0
  %194 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat305 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %194, i32 0, i32 20
  %195 = load i32, i32* %fixed_flat305, align 4, !tbaa !48
  %call306 = call i32 @curve_samples(%struct.patch_fill_state_s* %193, %struct.gs_fixed_point_s* %arraydecay304, i32 1, i32 %195) #5
  %arrayidx307 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 2
  store i32 %call306, i32* %arrayidx307, align 4, !tbaa !5
  %196 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pole308 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx309 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole308, i32 0, i64 3
  %arraydecay310 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx309, i32 0, i32 0
  %197 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat311 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %197, i32 0, i32 20
  %198 = load i32, i32* %fixed_flat311, align 4, !tbaa !48
  %call312 = call i32 @curve_samples(%struct.patch_fill_state_s* %196, %struct.gs_fixed_point_s* %arraydecay310, i32 1, i32 %198) #5
  %arrayidx313 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  store i32 %call312, i32* %arrayidx313, align 4, !tbaa !5
  %arrayidx314 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %199 = load i32, i32* %arrayidx314, align 4, !tbaa !5
  %arrayidx315 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 1
  %200 = load i32, i32* %arrayidx315, align 4, !tbaa !5
  %cmp316 = icmp sgt i32 %199, %200
  br i1 %cmp316, label %cond.true.318, label %cond.false.320

cond.true.318:                                    ; preds = %cond.end.288
  %arrayidx319 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %201 = load i32, i32* %arrayidx319, align 4, !tbaa !5
  br label %cond.end.322

cond.false.320:                                   ; preds = %cond.end.288
  %arrayidx321 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 1
  %202 = load i32, i32* %arrayidx321, align 4, !tbaa !5
  br label %cond.end.322

cond.end.322:                                     ; preds = %cond.false.320, %cond.true.318
  %cond323 = phi i32 [ %201, %cond.true.318 ], [ %202, %cond.false.320 ]
  %arrayidx324 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 2
  %203 = load i32, i32* %arrayidx324, align 4, !tbaa !5
  %arrayidx325 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %204 = load i32, i32* %arrayidx325, align 4, !tbaa !5
  %cmp326 = icmp sgt i32 %203, %204
  br i1 %cmp326, label %cond.true.328, label %cond.false.330

cond.true.328:                                    ; preds = %cond.end.322
  %arrayidx329 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 2
  %205 = load i32, i32* %arrayidx329, align 4, !tbaa !5
  br label %cond.end.332

cond.false.330:                                   ; preds = %cond.end.322
  %arrayidx331 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %206 = load i32, i32* %arrayidx331, align 4, !tbaa !5
  br label %cond.end.332

cond.end.332:                                     ; preds = %cond.false.330, %cond.true.328
  %cond333 = phi i32 [ %205, %cond.true.328 ], [ %206, %cond.false.330 ]
  %cmp334 = icmp sgt i32 %cond323, %cond333
  br i1 %cmp334, label %cond.true.336, label %cond.false.347

cond.true.336:                                    ; preds = %cond.end.332
  %arrayidx337 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %207 = load i32, i32* %arrayidx337, align 4, !tbaa !5
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 1
  %208 = load i32, i32* %arrayidx338, align 4, !tbaa !5
  %cmp339 = icmp sgt i32 %207, %208
  br i1 %cmp339, label %cond.true.341, label %cond.false.343

cond.true.341:                                    ; preds = %cond.true.336
  %arrayidx342 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %209 = load i32, i32* %arrayidx342, align 4, !tbaa !5
  br label %cond.end.345

cond.false.343:                                   ; preds = %cond.true.336
  %arrayidx344 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 1
  %210 = load i32, i32* %arrayidx344, align 4, !tbaa !5
  br label %cond.end.345

cond.end.345:                                     ; preds = %cond.false.343, %cond.true.341
  %cond346 = phi i32 [ %209, %cond.true.341 ], [ %210, %cond.false.343 ]
  br label %cond.end.358

cond.false.347:                                   ; preds = %cond.end.332
  %arrayidx348 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 2
  %211 = load i32, i32* %arrayidx348, align 4, !tbaa !5
  %arrayidx349 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %212 = load i32, i32* %arrayidx349, align 4, !tbaa !5
  %cmp350 = icmp sgt i32 %211, %212
  br i1 %cmp350, label %cond.true.352, label %cond.false.354

cond.true.352:                                    ; preds = %cond.false.347
  %arrayidx353 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 2
  %213 = load i32, i32* %arrayidx353, align 4, !tbaa !5
  br label %cond.end.356

cond.false.354:                                   ; preds = %cond.false.347
  %arrayidx355 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %214 = load i32, i32* %arrayidx355, align 4, !tbaa !5
  br label %cond.end.356

cond.end.356:                                     ; preds = %cond.false.354, %cond.true.352
  %cond357 = phi i32 [ %213, %cond.true.352 ], [ %214, %cond.false.354 ]
  br label %cond.end.358

cond.end.358:                                     ; preds = %cond.end.356, %cond.end.345
  %cond359 = phi i32 [ %cond346, %cond.end.345 ], [ %cond357, %cond.end.356 ]
  store i32 %cond359, i32* %kum, align 4, !tbaa !5
  %215 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx360 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %216 = load i32, i32* %arrayidx360, align 4, !tbaa !5
  %217 = load i32, i32* %kum, align 4, !tbaa !5
  %pole361 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx362 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole361, i32 0, i64 0
  %arraydecay363 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx362, i32 0, i32 0
  %c364 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx365 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c364, i32 0, i64 0
  %arrayidx366 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx365, i32 0, i64 0
  %218 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx366, align 8, !tbaa !1
  %c367 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx368 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c367, i32 0, i64 0
  %arrayidx369 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx368, i32 0, i64 1
  %219 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx369, align 8, !tbaa !1
  %call370 = call i32 @fill_wedges(%struct.patch_fill_state_s* %215, i32 %216, i32 %217, %struct.gs_fixed_point_s* %arraydecay363, i32 1, %struct.patch_color_s* %218, %struct.patch_color_s* %219, i32 3) #5
  store i32 %call370, i32* %code, align 4, !tbaa !5
  %220 = load i32, i32* %code, align 4, !tbaa !5
  %cmp371 = icmp sge i32 %220, 0
  br i1 %cmp371, label %if.then.373, label %if.end.377

if.then.373:                                      ; preds = %cond.end.358
  %221 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %222 = load i32, i32* %kvm, align 4, !tbaa !5
  %arrayidx374 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 0
  %223 = load i32, i32* %arrayidx374, align 4, !tbaa !5
  %arrayidx375 = getelementptr inbounds [4 x i32], [4 x i32]* %kv, i32 0, i64 3
  %224 = load i32, i32* %arrayidx375, align 4, !tbaa !5
  %call376 = call i32 @fill_patch(%struct.patch_fill_state_s* %221, %struct.tensor_patch* %p, i32 %222, i32 %223, i32 %224) #5
  store i32 %call376, i32* %code, align 4, !tbaa !5
  br label %if.end.377

if.end.377:                                       ; preds = %if.then.373, %cond.end.358
  %225 = load i32, i32* %code, align 4, !tbaa !5
  %cmp378 = icmp sge i32 %225, 0
  br i1 %cmp378, label %if.then.380, label %if.end.392

if.then.380:                                      ; preds = %if.end.377
  %226 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx381 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %227 = load i32, i32* %arrayidx381, align 4, !tbaa !5
  %228 = load i32, i32* %kum, align 4, !tbaa !5
  %pole382 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 0
  %arrayidx383 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole382, i32 0, i64 3
  %arraydecay384 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx383, i32 0, i32 0
  %c385 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx386 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c385, i32 0, i64 1
  %arrayidx387 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx386, i32 0, i64 0
  %229 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx387, align 8, !tbaa !1
  %c388 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %p, i32 0, i32 1
  %arrayidx389 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c388, i32 0, i64 1
  %arrayidx390 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx389, i32 0, i64 1
  %230 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx390, align 8, !tbaa !1
  %call391 = call i32 @fill_wedges(%struct.patch_fill_state_s* %226, i32 %227, i32 %228, %struct.gs_fixed_point_s* %arraydecay384, i32 1, %struct.patch_color_s* %229, %struct.patch_color_s* %230, i32 3) #5
  store i32 %call391, i32* %code, align 4, !tbaa !5
  br label %if.end.392

if.end.392:                                       ; preds = %if.then.380, %if.end.377
  br label %out

out:                                              ; preds = %if.end.392, %cleanup
  %231 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %232 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %231, i8* %232, i32 4) #5
  %233 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %233, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.393

cleanup.393:                                      ; preds = %out, %cleanup
  %234 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %234) #2
  %235 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %235) #2
  %236 = bitcast i32* %kum to i8*
  call void @llvm.lifetime.end(i64 4, i8* %236) #2
  %237 = bitcast [4 x i32]* %ku to i8*
  call void @llvm.lifetime.end(i64 16, i8* %237) #2
  %238 = bitcast i32* %kvm to i8*
  call void @llvm.lifetime.end(i64 4, i8* %238) #2
  %239 = bitcast [4 x i32]* %kv to i8*
  call void @llvm.lifetime.end(i64 16, i8* %239) #2
  %240 = bitcast [4 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 32, i8* %240) #2
  %241 = bitcast %struct.tensor_patch* %p to i8*
  call void @llvm.lifetime.end(i64 160, i8* %241) #2
  %242 = load i32, i32* %retval
  ret i32 %242
}

; Function Attrs: nounwind uwtable
define internal void @Cp_transform(%struct.gs_fixed_point_s* %pt, %struct.patch_curve_s* %curve, %struct.gs_fixed_point_s* %ignore_interior, double %u, double %v) #0 {
entry:
  %pt.addr = alloca %struct.gs_fixed_point_s*, align 8
  %curve.addr = alloca %struct.patch_curve_s*, align 8
  %ignore_interior.addr = alloca %struct.gs_fixed_point_s*, align 8
  %u.addr = alloca double, align 8
  %v.addr = alloca double, align 8
  %co_u = alloca double, align 8
  %co_v = alloca double, align 8
  %c1u = alloca %struct.gs_fixed_point_s, align 4
  %d1v = alloca %struct.gs_fixed_point_s, align 4
  %c2u = alloca %struct.gs_fixed_point_s, align 4
  %d2v = alloca %struct.gs_fixed_point_s, align 4
  store %struct.gs_fixed_point_s* %pt, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  store %struct.patch_curve_s* %curve, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %ignore_interior, %struct.gs_fixed_point_s** %ignore_interior.addr, align 8, !tbaa !1
  store double %u, double* %u.addr, align 8, !tbaa !112
  store double %v, double* %v.addr, align 8, !tbaa !112
  %0 = bitcast double* %co_u to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load double, double* %u.addr, align 8, !tbaa !112
  %sub = fsub double 1.000000e+00, %1
  store double %sub, double* %co_u, align 8, !tbaa !112
  %2 = bitcast double* %co_v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load double, double* %v.addr, align 8, !tbaa !112
  %sub1 = fsub double 1.000000e+00, %3
  store double %sub1, double* %co_v, align 8, !tbaa !112
  %4 = bitcast %struct.gs_fixed_point_s* %c1u to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = bitcast %struct.gs_fixed_point_s* %d1v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast %struct.gs_fixed_point_s* %c2u to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast %struct.gs_fixed_point_s* %d2v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %8, i64 0
  %vertex = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx, i32 0, i32 0
  %p = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex, i32 0, i32 0
  %9 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %9, i64 3
  %control = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx2, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control, i32 0, i64 1
  %10 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %10, i64 3
  %control5 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx4, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control5, i32 0, i64 0
  %11 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %11, i64 3
  %vertex8 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx7, i32 0, i32 0
  %p9 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex8, i32 0, i32 0
  %12 = load double, double* %u.addr, align 8, !tbaa !112
  call void @curve_eval(%struct.gs_fixed_point_s* %c1u, %struct.gs_fixed_point_s* %p, %struct.gs_fixed_point_s* %arrayidx3, %struct.gs_fixed_point_s* %arrayidx6, %struct.gs_fixed_point_s* %p9, double %12) #5
  %13 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %13, i64 0
  %vertex11 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx10, i32 0, i32 0
  %p12 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex11, i32 0, i32 0
  %14 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %14, i64 0
  %control14 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx13, i32 0, i32 1
  %arrayidx15 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control14, i32 0, i64 0
  %15 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %15, i64 0
  %control17 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx16, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control17, i32 0, i64 1
  %16 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %16, i64 1
  %vertex20 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx19, i32 0, i32 0
  %p21 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex20, i32 0, i32 0
  %17 = load double, double* %v.addr, align 8, !tbaa !112
  call void @curve_eval(%struct.gs_fixed_point_s* %d1v, %struct.gs_fixed_point_s* %p12, %struct.gs_fixed_point_s* %arrayidx15, %struct.gs_fixed_point_s* %arrayidx18, %struct.gs_fixed_point_s* %p21, double %17) #5
  %18 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %18, i64 1
  %vertex23 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx22, i32 0, i32 0
  %p24 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex23, i32 0, i32 0
  %19 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %19, i64 1
  %control26 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx25, i32 0, i32 1
  %arrayidx27 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control26, i32 0, i64 0
  %20 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %20, i64 1
  %control29 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx28, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control29, i32 0, i64 1
  %21 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %21, i64 2
  %vertex32 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx31, i32 0, i32 0
  %p33 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex32, i32 0, i32 0
  %22 = load double, double* %u.addr, align 8, !tbaa !112
  call void @curve_eval(%struct.gs_fixed_point_s* %c2u, %struct.gs_fixed_point_s* %p24, %struct.gs_fixed_point_s* %arrayidx27, %struct.gs_fixed_point_s* %arrayidx30, %struct.gs_fixed_point_s* %p33, double %22) #5
  %23 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %23, i64 3
  %vertex35 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx34, i32 0, i32 0
  %p36 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex35, i32 0, i32 0
  %24 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %24, i64 2
  %control38 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx37, i32 0, i32 1
  %arrayidx39 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control38, i32 0, i64 1
  %25 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx40 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %25, i64 2
  %control41 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx40, i32 0, i32 1
  %arrayidx42 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control41, i32 0, i64 0
  %26 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %26, i64 2
  %vertex44 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx43, i32 0, i32 0
  %p45 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex44, i32 0, i32 0
  %27 = load double, double* %v.addr, align 8, !tbaa !112
  call void @curve_eval(%struct.gs_fixed_point_s* %d2v, %struct.gs_fixed_point_s* %p36, %struct.gs_fixed_point_s* %arrayidx39, %struct.gs_fixed_point_s* %arrayidx42, %struct.gs_fixed_point_s* %p45, double %27) #5
  %28 = load double, double* %co_v, align 8, !tbaa !112
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %c1u, i32 0, i32 0
  %29 = load i32, i32* %x, align 4, !tbaa !109
  %conv = sitofp i32 %29 to double
  %mul = fmul double %28, %conv
  %30 = load double, double* %v.addr, align 8, !tbaa !112
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %c2u, i32 0, i32 0
  %31 = load i32, i32* %x46, align 4, !tbaa !109
  %conv47 = sitofp i32 %31 to double
  %mul48 = fmul double %30, %conv47
  %add = fadd double %mul, %mul48
  %32 = load double, double* %co_u, align 8, !tbaa !112
  %x49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %d1v, i32 0, i32 0
  %33 = load i32, i32* %x49, align 4, !tbaa !109
  %conv50 = sitofp i32 %33 to double
  %mul51 = fmul double %32, %conv50
  %34 = load double, double* %u.addr, align 8, !tbaa !112
  %x52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %d2v, i32 0, i32 0
  %35 = load i32, i32* %x52, align 4, !tbaa !109
  %conv53 = sitofp i32 %35 to double
  %mul54 = fmul double %34, %conv53
  %add55 = fadd double %mul51, %mul54
  %add56 = fadd double %add, %add55
  %36 = load double, double* %co_v, align 8, !tbaa !112
  %37 = load double, double* %co_u, align 8, !tbaa !112
  %38 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx57 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %38, i64 0
  %vertex58 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx57, i32 0, i32 0
  %p59 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex58, i32 0, i32 0
  %x60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p59, i32 0, i32 0
  %39 = load i32, i32* %x60, align 4, !tbaa !105
  %conv61 = sitofp i32 %39 to double
  %mul62 = fmul double %37, %conv61
  %40 = load double, double* %u.addr, align 8, !tbaa !112
  %41 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %41, i64 3
  %vertex64 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx63, i32 0, i32 0
  %p65 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex64, i32 0, i32 0
  %x66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p65, i32 0, i32 0
  %42 = load i32, i32* %x66, align 4, !tbaa !105
  %conv67 = sitofp i32 %42 to double
  %mul68 = fmul double %40, %conv67
  %add69 = fadd double %mul62, %mul68
  %mul70 = fmul double %36, %add69
  %43 = load double, double* %v.addr, align 8, !tbaa !112
  %44 = load double, double* %co_u, align 8, !tbaa !112
  %45 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %45, i64 1
  %vertex72 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx71, i32 0, i32 0
  %p73 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex72, i32 0, i32 0
  %x74 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p73, i32 0, i32 0
  %46 = load i32, i32* %x74, align 4, !tbaa !105
  %conv75 = sitofp i32 %46 to double
  %mul76 = fmul double %44, %conv75
  %47 = load double, double* %u.addr, align 8, !tbaa !112
  %48 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx77 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %48, i64 2
  %vertex78 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx77, i32 0, i32 0
  %p79 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex78, i32 0, i32 0
  %x80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p79, i32 0, i32 0
  %49 = load i32, i32* %x80, align 4, !tbaa !105
  %conv81 = sitofp i32 %49 to double
  %mul82 = fmul double %47, %conv81
  %add83 = fadd double %mul76, %mul82
  %mul84 = fmul double %43, %add83
  %add85 = fadd double %mul70, %mul84
  %sub86 = fsub double %add56, %add85
  %conv87 = fptosi double %sub86 to i32
  %50 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  %x88 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %50, i32 0, i32 0
  store i32 %conv87, i32* %x88, align 4, !tbaa !109
  %51 = load double, double* %co_v, align 8, !tbaa !112
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %c1u, i32 0, i32 1
  %52 = load i32, i32* %y, align 4, !tbaa !110
  %conv89 = sitofp i32 %52 to double
  %mul90 = fmul double %51, %conv89
  %53 = load double, double* %v.addr, align 8, !tbaa !112
  %y91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %c2u, i32 0, i32 1
  %54 = load i32, i32* %y91, align 4, !tbaa !110
  %conv92 = sitofp i32 %54 to double
  %mul93 = fmul double %53, %conv92
  %add94 = fadd double %mul90, %mul93
  %55 = load double, double* %co_u, align 8, !tbaa !112
  %y95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %d1v, i32 0, i32 1
  %56 = load i32, i32* %y95, align 4, !tbaa !110
  %conv96 = sitofp i32 %56 to double
  %mul97 = fmul double %55, %conv96
  %57 = load double, double* %u.addr, align 8, !tbaa !112
  %y98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %d2v, i32 0, i32 1
  %58 = load i32, i32* %y98, align 4, !tbaa !110
  %conv99 = sitofp i32 %58 to double
  %mul100 = fmul double %57, %conv99
  %add101 = fadd double %mul97, %mul100
  %add102 = fadd double %add94, %add101
  %59 = load double, double* %co_v, align 8, !tbaa !112
  %60 = load double, double* %co_u, align 8, !tbaa !112
  %61 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx103 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %61, i64 0
  %vertex104 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx103, i32 0, i32 0
  %p105 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex104, i32 0, i32 0
  %y106 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p105, i32 0, i32 1
  %62 = load i32, i32* %y106, align 4, !tbaa !106
  %conv107 = sitofp i32 %62 to double
  %mul108 = fmul double %60, %conv107
  %63 = load double, double* %u.addr, align 8, !tbaa !112
  %64 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx109 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %64, i64 3
  %vertex110 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx109, i32 0, i32 0
  %p111 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex110, i32 0, i32 0
  %y112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p111, i32 0, i32 1
  %65 = load i32, i32* %y112, align 4, !tbaa !106
  %conv113 = sitofp i32 %65 to double
  %mul114 = fmul double %63, %conv113
  %add115 = fadd double %mul108, %mul114
  %mul116 = fmul double %59, %add115
  %66 = load double, double* %v.addr, align 8, !tbaa !112
  %67 = load double, double* %co_u, align 8, !tbaa !112
  %68 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx117 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %68, i64 1
  %vertex118 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx117, i32 0, i32 0
  %p119 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex118, i32 0, i32 0
  %y120 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p119, i32 0, i32 1
  %69 = load i32, i32* %y120, align 4, !tbaa !106
  %conv121 = sitofp i32 %69 to double
  %mul122 = fmul double %67, %conv121
  %70 = load double, double* %u.addr, align 8, !tbaa !112
  %71 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %71, i64 2
  %vertex124 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx123, i32 0, i32 0
  %p125 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex124, i32 0, i32 0
  %y126 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p125, i32 0, i32 1
  %72 = load i32, i32* %y126, align 4, !tbaa !106
  %conv127 = sitofp i32 %72 to double
  %mul128 = fmul double %70, %conv127
  %add129 = fadd double %mul122, %mul128
  %mul130 = fmul double %66, %add129
  %add131 = fadd double %mul116, %mul130
  %sub132 = fsub double %add102, %add131
  %conv133 = fptosi double %sub132 to i32
  %73 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  %y134 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %73, i32 0, i32 1
  store i32 %conv133, i32* %y134, align 4, !tbaa !110
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %74 = bitcast %struct.gs_fixed_point_s* %d2v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %74) #2
  %75 = bitcast %struct.gs_fixed_point_s* %c2u to i8*
  call void @llvm.lifetime.end(i64 8, i8* %75) #2
  %76 = bitcast %struct.gs_fixed_point_s* %d1v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %76) #2
  %77 = bitcast %struct.gs_fixed_point_s* %c1u to i8*
  call void @llvm.lifetime.end(i64 8, i8* %77) #2
  %78 = bitcast double* %co_v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %78) #2
  %79 = bitcast double* %co_u to i8*
  call void @llvm.lifetime.end(i64 8, i8* %79) #2
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @gs_shading_Tpp_fill_rectangle(%struct.gs_shading_s* %psh0, %struct.gs_rect_s* %rect, %struct.gs_fixed_rect_s* %rect_clip, %struct.gx_device_s* %dev, %struct.gs_imager_state_s* %pis) #0 {
entry:
  %retval = alloca i32, align 4
  %psh0.addr = alloca %struct.gs_shading_s*, align 8
  %rect.addr = alloca %struct.gs_rect_s*, align 8
  %rect_clip.addr = alloca %struct.gs_fixed_rect_s*, align 8
  %dev.addr = alloca %struct.gx_device_s*, align 8
  %pis.addr = alloca %struct.gs_imager_state_s*, align 8
  %psh = alloca %struct.gs_shading_Tpp_s*, align 8
  %state = alloca %struct.patch_fill_state_s, align 8
  %cs = alloca %struct.shade_coord_stream_s, align 8
  %curve = alloca [4 x %struct.patch_curve_s], align 16
  %interior = alloca [4 x %struct.gs_fixed_point_s], align 16
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %swapped_interior = alloca [4 x %struct.gs_fixed_point_s], align 16
  store %struct.gs_shading_s* %psh0, %struct.gs_shading_s** %psh0.addr, align 8, !tbaa !1
  store %struct.gs_rect_s* %rect, %struct.gs_rect_s** %rect.addr, align 8, !tbaa !1
  store %struct.gs_fixed_rect_s* %rect_clip, %struct.gs_fixed_rect_s** %rect_clip.addr, align 8, !tbaa !1
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  store %struct.gs_imager_state_s* %pis, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_shading_Tpp_s** %psh to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gs_shading_s*, %struct.gs_shading_s** %psh0.addr, align 8, !tbaa !1
  %2 = bitcast %struct.gs_shading_s* %1 to %struct.gs_shading_Tpp_s*
  store %struct.gs_shading_Tpp_s* %2, %struct.gs_shading_Tpp_s** %psh, align 8, !tbaa !1
  %3 = bitcast %struct.patch_fill_state_s* %state to i8*
  call void @llvm.lifetime.start(i64 728, i8* %3) #2
  %4 = bitcast %struct.shade_coord_stream_s* %cs to i8*
  call void @llvm.lifetime.start(i64 424, i8* %4) #2
  %5 = bitcast [4 x %struct.patch_curve_s]* %curve to i8*
  call void @llvm.lifetime.start(i64 1136, i8* %5) #2
  %6 = bitcast [4 x %struct.gs_fixed_point_s]* %interior to i8*
  call void @llvm.lifetime.start(i64 32, i8* %6) #2
  %7 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = bitcast %struct.patch_fill_state_s* %state to %struct.mesh_fill_state_s*
  %9 = load %struct.gs_shading_s*, %struct.gs_shading_s** %psh0.addr, align 8, !tbaa !1
  %10 = bitcast %struct.gs_shading_s* %9 to %struct.gs_shading_mesh_s*
  %11 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect_clip.addr, align 8, !tbaa !1
  %12 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %13 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  %call = call i32 @mesh_init_fill_state(%struct.mesh_fill_state_s* %8, %struct.gs_shading_mesh_s* %10, %struct.gs_fixed_rect_s* %11, %struct.gx_device_s* %12, %struct.gs_imager_state_s* %13) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %14 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %14, 0
  br i1 %cmp, label %if.then, label %if.end.4

if.then:                                          ; preds = %entry
  %icclink = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %15 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink, align 8, !tbaa !82
  %cmp1 = icmp ne %struct.gsicc_link_s* %15, null
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %icclink3 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %16 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink3, align 8, !tbaa !82
  call void @gsicc_release_link(%struct.gsicc_link_s* %16) #5
  br label %if.end

if.end:                                           ; preds = %if.then.2, %if.then
  %17 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.44

if.end.4:                                         ; preds = %entry
  %18 = load %struct.gs_shading_Tpp_s*, %struct.gs_shading_Tpp_s** %psh, align 8, !tbaa !1
  %params = getelementptr inbounds %struct.gs_shading_Tpp_s, %struct.gs_shading_Tpp_s* %18, i32 0, i32 1
  %Function = getelementptr inbounds %struct.gs_shading_Tpp_params_s, %struct.gs_shading_Tpp_params_s* %params, i32 0, i32 10
  %19 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !113
  %Function5 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 9
  store %struct.gs_function_s* %19, %struct.gs_function_s** %Function5, align 8, !tbaa !28
  %call6 = call i32 @init_patch_fill_state(%struct.patch_fill_state_s* %state) #5
  store i32 %call6, i32* %code, align 4, !tbaa !5
  %20 = load i32, i32* %code, align 4, !tbaa !5
  %cmp7 = icmp slt i32 %20, 0
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.4
  %21 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.44

if.end.9:                                         ; preds = %if.end.4
  %arrayidx = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 3
  %straight = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx, i32 0, i32 2
  store i32 0, i32* %straight, align 4, !tbaa !90
  %arrayidx10 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 2
  %straight11 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx10, i32 0, i32 2
  store i32 0, i32* %straight11, align 4, !tbaa !90
  %arrayidx12 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 1
  %straight13 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx12, i32 0, i32 2
  store i32 0, i32* %straight13, align 4, !tbaa !90
  %arrayidx14 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i64 0
  %straight15 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx14, i32 0, i32 2
  store i32 0, i32* %straight15, align 4, !tbaa !90
  %22 = load %struct.gs_shading_Tpp_s*, %struct.gs_shading_Tpp_s** %psh, align 8, !tbaa !1
  %params16 = getelementptr inbounds %struct.gs_shading_Tpp_s, %struct.gs_shading_Tpp_s* %22, i32 0, i32 1
  %23 = bitcast %struct.gs_shading_Tpp_params_s* %params16 to %struct.gs_shading_mesh_params_s*
  %24 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis.addr, align 8, !tbaa !1
  call void @shade_next_init(%struct.shade_coord_stream_s* %cs, %struct.gs_shading_mesh_params_s* %23, %struct.gs_imager_state_s* %24) #5
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont, %if.end.9
  %25 = load %struct.gs_shading_Tpp_s*, %struct.gs_shading_Tpp_s** %psh, align 8, !tbaa !1
  %params17 = getelementptr inbounds %struct.gs_shading_Tpp_s, %struct.gs_shading_Tpp_s* %25, i32 0, i32 1
  %BitsPerFlag = getelementptr inbounds %struct.gs_shading_Tpp_params_s, %struct.gs_shading_Tpp_params_s* %params17, i32 0, i32 11
  %26 = load i32, i32* %BitsPerFlag, align 4, !tbaa !116
  %arraydecay = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i32 0
  %arraydecay18 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %interior, i32 0, i32 0
  %call19 = call i32 @shade_next_patch(%struct.shade_coord_stream_s* %cs, i32 %26, %struct.patch_curve_s* %arraydecay, %struct.gs_fixed_point_s* %arraydecay18) #5
  store i32 %call19, i32* %code, align 4, !tbaa !5
  %cmp20 = icmp eq i32 %call19, 0
  br i1 %cmp20, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %27 = bitcast [4 x %struct.gs_fixed_point_s]* %swapped_interior to i8*
  call void @llvm.lifetime.start(i64 32, i8* %27) #2
  %arrayidx21 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %swapped_interior, i32 0, i64 0
  %arrayidx22 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %interior, i32 0, i64 0
  %28 = bitcast %struct.gs_fixed_point_s* %arrayidx21 to i8*
  %29 = bitcast %struct.gs_fixed_point_s* %arrayidx22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx23 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %swapped_interior, i32 0, i64 1
  %arrayidx24 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %interior, i32 0, i64 3
  %30 = bitcast %struct.gs_fixed_point_s* %arrayidx23 to i8*
  %31 = bitcast %struct.gs_fixed_point_s* %arrayidx24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx25 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %swapped_interior, i32 0, i64 2
  %arrayidx26 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %interior, i32 0, i64 2
  %32 = bitcast %struct.gs_fixed_point_s* %arrayidx25 to i8*
  %33 = bitcast %struct.gs_fixed_point_s* %arrayidx26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx27 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %swapped_interior, i32 0, i64 3
  %arrayidx28 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %interior, i32 0, i64 1
  %34 = bitcast %struct.gs_fixed_point_s* %arrayidx27 to i8*
  %35 = bitcast %struct.gs_fixed_point_s* %arrayidx28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arraydecay29 = getelementptr inbounds [4 x %struct.patch_curve_s], [4 x %struct.patch_curve_s]* %curve, i32 0, i32 0
  %arraydecay30 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %swapped_interior, i32 0, i32 0
  %call31 = call i32 @patch_fill(%struct.patch_fill_state_s* %state, %struct.patch_curve_s* %arraydecay29, %struct.gs_fixed_point_s* %arraydecay30, void (%struct.gs_fixed_point_s*, %struct.patch_curve_s*, %struct.gs_fixed_point_s*, double, double)* @Tpp_transform) #5
  store i32 %call31, i32* %code, align 4, !tbaa !5
  %36 = load i32, i32* %code, align 4, !tbaa !5
  %cmp32 = icmp slt i32 %36, 0
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %while.body
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup

if.end.34:                                        ; preds = %while.body
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.34, %if.then.33
  %37 = bitcast [4 x %struct.gs_fixed_point_s]* %swapped_interior to i8*
  call void @llvm.lifetime.end(i64 32, i8* %37) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %while.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond

while.end:                                        ; preds = %cleanup, %while.cond
  %call35 = call i32 @term_patch_fill_state(%struct.patch_fill_state_s* %state) #5
  %tobool = icmp ne i32 %call35, 0
  br i1 %tobool, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %while.end
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.44

if.end.37:                                        ; preds = %while.end
  %icclink38 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %38 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink38, align 8, !tbaa !82
  %cmp39 = icmp ne %struct.gsicc_link_s* %38, null
  br i1 %cmp39, label %if.then.40, label %if.end.42

if.then.40:                                       ; preds = %if.end.37
  %icclink41 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %state, i32 0, i32 6
  %39 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink41, align 8, !tbaa !82
  call void @gsicc_release_link(%struct.gsicc_link_s* %39) #5
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.40, %if.end.37
  %40 = load i32, i32* %code, align 4, !tbaa !5
  %cmp43 = icmp slt i32 %40, 0
  br i1 %cmp43, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.42
  %41 = load i32, i32* %code, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %if.end.42
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %41, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.44

cleanup.44:                                       ; preds = %cond.end, %if.then.36, %if.then.8, %if.end
  %42 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %42) #2
  %43 = bitcast [4 x %struct.gs_fixed_point_s]* %interior to i8*
  call void @llvm.lifetime.end(i64 32, i8* %43) #2
  %44 = bitcast [4 x %struct.patch_curve_s]* %curve to i8*
  call void @llvm.lifetime.end(i64 1136, i8* %44) #2
  %45 = bitcast %struct.shade_coord_stream_s* %cs to i8*
  call void @llvm.lifetime.end(i64 424, i8* %45) #2
  %46 = bitcast %struct.patch_fill_state_s* %state to i8*
  call void @llvm.lifetime.end(i64 728, i8* %46) #2
  %47 = bitcast %struct.gs_shading_Tpp_s** %psh to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #2
  %48 = load i32, i32* %retval
  ret i32 %48

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @Tpp_transform(%struct.gs_fixed_point_s* %pt, %struct.patch_curve_s* %curve, %struct.gs_fixed_point_s* %interior, double %u, double %v) #0 {
entry:
  %pt.addr = alloca %struct.gs_fixed_point_s*, align 8
  %curve.addr = alloca %struct.patch_curve_s*, align 8
  %interior.addr = alloca %struct.gs_fixed_point_s*, align 8
  %u.addr = alloca double, align 8
  %v.addr = alloca double, align 8
  %Bu = alloca [4 x double], align 16
  %Bv = alloca [4 x double], align 16
  %pts = alloca [4 x [4 x %struct.gs_fixed_point_s]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca double, align 8
  %y = alloca double, align 8
  %u2 = alloca double, align 8
  %co_u = alloca double, align 8
  %co_u2 = alloca double, align 8
  %v2 = alloca double, align 8
  %co_v = alloca double, align 8
  %co_v2 = alloca double, align 8
  %coeff = alloca double, align 8
  store %struct.gs_fixed_point_s* %pt, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  store %struct.patch_curve_s* %curve, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %interior, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  store double %u, double* %u.addr, align 8, !tbaa !112
  store double %v, double* %v.addr, align 8, !tbaa !112
  %0 = bitcast [4 x double]* %Bu to i8*
  call void @llvm.lifetime.start(i64 32, i8* %0) #2
  %1 = bitcast [4 x double]* %Bv to i8*
  call void @llvm.lifetime.start(i64 32, i8* %1) #2
  %2 = bitcast [4 x [4 x %struct.gs_fixed_point_s]]* %pts to i8*
  call void @llvm.lifetime.start(i64 128, i8* %2) #2
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast double* %x to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  store double 0.000000e+00, double* %x, align 8, !tbaa !112
  %6 = bitcast double* %y to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  store double 0.000000e+00, double* %y, align 8, !tbaa !112
  %7 = bitcast double* %u2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load double, double* %u.addr, align 8, !tbaa !112
  %9 = load double, double* %u.addr, align 8, !tbaa !112
  %mul = fmul double %8, %9
  store double %mul, double* %u2, align 8, !tbaa !112
  %10 = bitcast double* %co_u to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #2
  %11 = load double, double* %u.addr, align 8, !tbaa !112
  %sub = fsub double 1.000000e+00, %11
  store double %sub, double* %co_u, align 8, !tbaa !112
  %12 = bitcast double* %co_u2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load double, double* %co_u, align 8, !tbaa !112
  %14 = load double, double* %co_u, align 8, !tbaa !112
  %mul1 = fmul double %13, %14
  store double %mul1, double* %co_u2, align 8, !tbaa !112
  %15 = bitcast double* %v2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #2
  %16 = load double, double* %v.addr, align 8, !tbaa !112
  %17 = load double, double* %v.addr, align 8, !tbaa !112
  %mul2 = fmul double %16, %17
  store double %mul2, double* %v2, align 8, !tbaa !112
  %18 = bitcast double* %co_v to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #2
  %19 = load double, double* %v.addr, align 8, !tbaa !112
  %sub3 = fsub double 1.000000e+00, %19
  store double %sub3, double* %co_v, align 8, !tbaa !112
  %20 = bitcast double* %co_v2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = load double, double* %co_v, align 8, !tbaa !112
  %22 = load double, double* %co_v, align 8, !tbaa !112
  %mul4 = fmul double %21, %22
  store double %mul4, double* %co_v2, align 8, !tbaa !112
  %23 = load double, double* %co_u, align 8, !tbaa !112
  %24 = load double, double* %co_u2, align 8, !tbaa !112
  %mul5 = fmul double %23, %24
  %arrayidx = getelementptr inbounds [4 x double], [4 x double]* %Bu, i32 0, i64 0
  store double %mul5, double* %arrayidx, align 8, !tbaa !112
  %25 = load double, double* %u.addr, align 8, !tbaa !112
  %mul6 = fmul double 3.000000e+00, %25
  %26 = load double, double* %co_u2, align 8, !tbaa !112
  %mul7 = fmul double %mul6, %26
  %arrayidx8 = getelementptr inbounds [4 x double], [4 x double]* %Bu, i32 0, i64 1
  store double %mul7, double* %arrayidx8, align 8, !tbaa !112
  %27 = load double, double* %u2, align 8, !tbaa !112
  %mul9 = fmul double 3.000000e+00, %27
  %28 = load double, double* %co_u, align 8, !tbaa !112
  %mul10 = fmul double %mul9, %28
  %arrayidx11 = getelementptr inbounds [4 x double], [4 x double]* %Bu, i32 0, i64 2
  store double %mul10, double* %arrayidx11, align 8, !tbaa !112
  %29 = load double, double* %u.addr, align 8, !tbaa !112
  %30 = load double, double* %u2, align 8, !tbaa !112
  %mul12 = fmul double %29, %30
  %arrayidx13 = getelementptr inbounds [4 x double], [4 x double]* %Bu, i32 0, i64 3
  store double %mul12, double* %arrayidx13, align 8, !tbaa !112
  %31 = load double, double* %co_v, align 8, !tbaa !112
  %32 = load double, double* %co_v2, align 8, !tbaa !112
  %mul14 = fmul double %31, %32
  %arrayidx15 = getelementptr inbounds [4 x double], [4 x double]* %Bv, i32 0, i64 0
  store double %mul14, double* %arrayidx15, align 8, !tbaa !112
  %33 = load double, double* %v.addr, align 8, !tbaa !112
  %mul16 = fmul double 3.000000e+00, %33
  %34 = load double, double* %co_v2, align 8, !tbaa !112
  %mul17 = fmul double %mul16, %34
  %arrayidx18 = getelementptr inbounds [4 x double], [4 x double]* %Bv, i32 0, i64 1
  store double %mul17, double* %arrayidx18, align 8, !tbaa !112
  %35 = load double, double* %v2, align 8, !tbaa !112
  %mul19 = fmul double 3.000000e+00, %35
  %36 = load double, double* %co_v, align 8, !tbaa !112
  %mul20 = fmul double %mul19, %36
  %arrayidx21 = getelementptr inbounds [4 x double], [4 x double]* %Bv, i32 0, i64 2
  store double %mul20, double* %arrayidx21, align 8, !tbaa !112
  %37 = load double, double* %v.addr, align 8, !tbaa !112
  %38 = load double, double* %v2, align 8, !tbaa !112
  %mul22 = fmul double %37, %38
  %arrayidx23 = getelementptr inbounds [4 x double], [4 x double]* %Bv, i32 0, i64 3
  store double %mul22, double* %arrayidx23, align 8, !tbaa !112
  %39 = bitcast double* %co_v2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #2
  %40 = bitcast double* %co_v to i8*
  call void @llvm.lifetime.end(i64 8, i8* %40) #2
  %41 = bitcast double* %v2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #2
  %42 = bitcast double* %co_u2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %42) #2
  %43 = bitcast double* %co_u to i8*
  call void @llvm.lifetime.end(i64 8, i8* %43) #2
  %44 = bitcast double* %u2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  %arrayidx24 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 0
  %arrayidx25 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx24, i32 0, i64 0
  %45 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %45, i64 0
  %vertex = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx26, i32 0, i32 0
  %p = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex, i32 0, i32 0
  %46 = bitcast %struct.gs_fixed_point_s* %arrayidx25 to i8*
  %47 = bitcast %struct.gs_fixed_point_s* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx27 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 0
  %arrayidx28 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx27, i32 0, i64 1
  %48 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %48, i64 0
  %control = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx29, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control, i32 0, i64 0
  %49 = bitcast %struct.gs_fixed_point_s* %arrayidx28 to i8*
  %50 = bitcast %struct.gs_fixed_point_s* %arrayidx30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx31 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 0
  %arrayidx32 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx31, i32 0, i64 2
  %51 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %51, i64 0
  %control34 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx33, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control34, i32 0, i64 1
  %52 = bitcast %struct.gs_fixed_point_s* %arrayidx32 to i8*
  %53 = bitcast %struct.gs_fixed_point_s* %arrayidx35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx36 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 0
  %arrayidx37 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx36, i32 0, i64 3
  %54 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %54, i64 1
  %vertex39 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx38, i32 0, i32 0
  %p40 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex39, i32 0, i32 0
  %55 = bitcast %struct.gs_fixed_point_s* %arrayidx37 to i8*
  %56 = bitcast %struct.gs_fixed_point_s* %p40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx41 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 1
  %arrayidx42 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx41, i32 0, i64 3
  %57 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %57, i64 1
  %control44 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx43, i32 0, i32 1
  %arrayidx45 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control44, i32 0, i64 0
  %58 = bitcast %struct.gs_fixed_point_s* %arrayidx42 to i8*
  %59 = bitcast %struct.gs_fixed_point_s* %arrayidx45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx46 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 2
  %arrayidx47 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx46, i32 0, i64 3
  %60 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %60, i64 1
  %control49 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx48, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control49, i32 0, i64 1
  %61 = bitcast %struct.gs_fixed_point_s* %arrayidx47 to i8*
  %62 = bitcast %struct.gs_fixed_point_s* %arrayidx50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx51 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 3
  %arrayidx52 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx51, i32 0, i64 3
  %63 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %63, i64 2
  %vertex54 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx53, i32 0, i32 0
  %p55 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex54, i32 0, i32 0
  %64 = bitcast %struct.gs_fixed_point_s* %arrayidx52 to i8*
  %65 = bitcast %struct.gs_fixed_point_s* %p55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx56 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 3
  %arrayidx57 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx56, i32 0, i64 2
  %66 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx58 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %66, i64 2
  %control59 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx58, i32 0, i32 1
  %arrayidx60 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control59, i32 0, i64 0
  %67 = bitcast %struct.gs_fixed_point_s* %arrayidx57 to i8*
  %68 = bitcast %struct.gs_fixed_point_s* %arrayidx60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx61 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 3
  %arrayidx62 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx61, i32 0, i64 1
  %69 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx63 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %69, i64 2
  %control64 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx63, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control64, i32 0, i64 1
  %70 = bitcast %struct.gs_fixed_point_s* %arrayidx62 to i8*
  %71 = bitcast %struct.gs_fixed_point_s* %arrayidx65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx66 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 3
  %arrayidx67 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx66, i32 0, i64 0
  %72 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx68 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %72, i64 3
  %vertex69 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx68, i32 0, i32 0
  %p70 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex69, i32 0, i32 0
  %73 = bitcast %struct.gs_fixed_point_s* %arrayidx67 to i8*
  %74 = bitcast %struct.gs_fixed_point_s* %p70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx71 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 2
  %arrayidx72 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx71, i32 0, i64 0
  %75 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx73 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %75, i64 3
  %control74 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx73, i32 0, i32 1
  %arrayidx75 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control74, i32 0, i64 0
  %76 = bitcast %struct.gs_fixed_point_s* %arrayidx72 to i8*
  %77 = bitcast %struct.gs_fixed_point_s* %arrayidx75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx76 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 1
  %arrayidx77 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx76, i32 0, i64 0
  %78 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx78 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %78, i64 3
  %control79 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx78, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control79, i32 0, i64 1
  %79 = bitcast %struct.gs_fixed_point_s* %arrayidx77 to i8*
  %80 = bitcast %struct.gs_fixed_point_s* %arrayidx80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx81 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 1
  %arrayidx82 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx81, i32 0, i64 1
  %81 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx83 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %81, i64 0
  %82 = bitcast %struct.gs_fixed_point_s* %arrayidx82 to i8*
  %83 = bitcast %struct.gs_fixed_point_s* %arrayidx83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx84 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 2
  %arrayidx85 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx84, i32 0, i64 1
  %84 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %84, i64 1
  %85 = bitcast %struct.gs_fixed_point_s* %arrayidx85 to i8*
  %86 = bitcast %struct.gs_fixed_point_s* %arrayidx86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx87 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 2
  %arrayidx88 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx87, i32 0, i64 2
  %87 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx89 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %87, i64 2
  %88 = bitcast %struct.gs_fixed_point_s* %arrayidx88 to i8*
  %89 = bitcast %struct.gs_fixed_point_s* %arrayidx89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx90 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 1
  %arrayidx91 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx90, i32 0, i64 2
  %90 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx92 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %90, i64 3
  %91 = bitcast %struct.gs_fixed_point_s* %arrayidx91 to i8*
  %92 = bitcast %struct.gs_fixed_point_s* %arrayidx92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 4, i1 false), !tbaa.struct !117
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.114, %entry
  %93 = load i32, i32* %i, align 4, !tbaa !5
  %cmp = icmp slt i32 %93, 4
  br i1 %cmp, label %for.body, label %for.end.116

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.93

for.cond.93:                                      ; preds = %for.inc, %for.body
  %94 = load i32, i32* %j, align 4, !tbaa !5
  %cmp94 = icmp slt i32 %94, 4
  br i1 %cmp94, label %for.body.95, label %for.end

for.body.95:                                      ; preds = %for.cond.93
  %95 = bitcast double* %coeff to i8*
  call void @llvm.lifetime.start(i64 8, i8* %95) #2
  %96 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %96 to i64
  %arrayidx96 = getelementptr inbounds [4 x double], [4 x double]* %Bu, i32 0, i64 %idxprom
  %97 = load double, double* %arrayidx96, align 8, !tbaa !112
  %98 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom97 = sext i32 %98 to i64
  %arrayidx98 = getelementptr inbounds [4 x double], [4 x double]* %Bv, i32 0, i64 %idxprom97
  %99 = load double, double* %arrayidx98, align 8, !tbaa !112
  %mul99 = fmul double %97, %99
  store double %mul99, double* %coeff, align 8, !tbaa !112
  %100 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom100 = sext i32 %100 to i64
  %101 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom101 = sext i32 %101 to i64
  %arrayidx102 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 %idxprom101
  %arrayidx103 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx102, i32 0, i64 %idxprom100
  %x104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx103, i32 0, i32 0
  %102 = load i32, i32* %x104, align 4, !tbaa !109
  %conv = sitofp i32 %102 to double
  %103 = load double, double* %coeff, align 8, !tbaa !112
  %mul105 = fmul double %conv, %103
  %104 = load double, double* %x, align 8, !tbaa !112
  %add = fadd double %104, %mul105
  store double %add, double* %x, align 8, !tbaa !112
  %105 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom106 = sext i32 %105 to i64
  %106 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom107 = sext i32 %106 to i64
  %arrayidx108 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pts, i32 0, i64 %idxprom107
  %arrayidx109 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx108, i32 0, i64 %idxprom106
  %y110 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx109, i32 0, i32 1
  %107 = load i32, i32* %y110, align 4, !tbaa !110
  %conv111 = sitofp i32 %107 to double
  %108 = load double, double* %coeff, align 8, !tbaa !112
  %mul112 = fmul double %conv111, %108
  %109 = load double, double* %y, align 8, !tbaa !112
  %add113 = fadd double %109, %mul112
  store double %add113, double* %y, align 8, !tbaa !112
  %110 = bitcast double* %coeff to i8*
  call void @llvm.lifetime.end(i64 8, i8* %110) #2
  br label %for.inc

for.inc:                                          ; preds = %for.body.95
  %111 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add nsw i32 %111, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond.93

for.end:                                          ; preds = %for.cond.93
  br label %for.inc.114

for.inc.114:                                      ; preds = %for.end
  %112 = load i32, i32* %i, align 4, !tbaa !5
  %inc115 = add nsw i32 %112, 1
  store i32 %inc115, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.116:                                      ; preds = %for.cond
  %113 = load double, double* %x, align 8, !tbaa !112
  %conv117 = fptosi double %113 to i32
  %114 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  %x118 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %114, i32 0, i32 0
  store i32 %conv117, i32* %x118, align 4, !tbaa !109
  %115 = load double, double* %y, align 8, !tbaa !112
  %conv119 = fptosi double %115 to i32
  %116 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  %y120 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %116, i32 0, i32 1
  store i32 %conv119, i32* %y120, align 4, !tbaa !110
  %117 = bitcast double* %y to i8*
  call void @llvm.lifetime.end(i64 8, i8* %117) #2
  %118 = bitcast double* %x to i8*
  call void @llvm.lifetime.end(i64 8, i8* %118) #2
  %119 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %119) #2
  %120 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %120) #2
  %121 = bitcast [4 x [4 x %struct.gs_fixed_point_s]]* %pts to i8*
  call void @llvm.lifetime.end(i64 128, i8* %121) #2
  %122 = bitcast [4 x double]* %Bv to i8*
  call void @llvm.lifetime.end(i64 32, i8* %122) #2
  %123 = bitcast [4 x double]* %Bu to i8*
  call void @llvm.lifetime.end(i64 32, i8* %123) #2
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @wedge_vertex_list_elem_buffer_alloc(%struct.patch_fill_state_s* %pfs) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %max_level = alloca i32, align 4
  %memory = alloca %struct.gs_memory_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = bitcast i32* %max_level to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 9, i32* %max_level, align 4, !tbaa !5
  %1 = bitcast %struct.gs_memory_s** %memory to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %memory1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 32
  %3 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory1, align 8, !tbaa !68
  store %struct.gs_memory_s* %3, %struct.gs_memory_s** %memory, align 8, !tbaa !1
  %4 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count_max = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %4, i32 0, i32 17
  store i32 9216, i32* %wedge_vertex_list_elem_count_max, align 4, !tbaa !118
  %5 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %5, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 7
  %6 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !119
  %7 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !1
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count_max2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 17
  %9 = load i32, i32* %wedge_vertex_list_elem_count_max2, align 4, !tbaa !118
  %conv = sext i32 %9 to i64
  %mul = mul i64 32, %conv
  %conv3 = trunc i64 %mul to i32
  %call = call i8* %6(%struct.gs_memory_s* %7, i32 %conv3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i32 0, i32 0)) #5
  %10 = bitcast i8* %call to %struct.wedge_vertex_list_elem_s*
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_buffer = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 14
  store %struct.wedge_vertex_list_elem_s* %10, %struct.wedge_vertex_list_elem_s** %wedge_vertex_list_elem_buffer, align 8, !tbaa !75
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_buffer4 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 14
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %wedge_vertex_list_elem_buffer4, align 8, !tbaa !75
  %cmp = icmp eq %struct.wedge_vertex_list_elem_s* %13, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %free_wedge_vertex = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %14, i32 0, i32 15
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %free_wedge_vertex, align 8, !tbaa !76
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %15, i32 0, i32 16
  store i32 0, i32* %wedge_vertex_list_elem_count, align 4, !tbaa !120
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %16 = bitcast %struct.gs_memory_s** %memory to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #2
  %17 = bitcast i32* %max_level to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #2
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define i32 @patch_color_to_device_color(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c, %struct.gx_device_color_s* %pdevc) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c.addr = alloca %struct.patch_color_s*, align 8
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %2 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %call = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %0, %struct.patch_color_s* %1, %struct.gx_device_color_s* %2, i32* null) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c, %struct.gx_device_color_s* %pdevc, i32* %frac_values) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c.addr = alloca %struct.patch_color_s*, align 8
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  %frac_values.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %devc = alloca %struct.gx_device_color_s, align 8
  %dev = alloca %struct.gx_device_s*, align 8
  %cleanup.dest.slot = alloca i32
  %fcc = alloca %struct.gs_client_color_s, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  %j = alloca i32, align 4
  %cinfo = alloca %struct.gx_device_color_info_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  store i32* %frac_values, i32** %frac_values.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct.gx_device_color_s* %devc to i8*
  call void @llvm.lifetime.start(i64 656, i8* %1) #2
  %2 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %3, i32 0, i32 0
  %4 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1, align 8, !tbaa !55
  store %struct.gx_device_s* %4, %struct.gx_device_s** %dev, align 8, !tbaa !1
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %trans_device = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 5
  %6 = load %struct.gx_device_s*, %struct.gx_device_s** %trans_device, align 8, !tbaa !71
  %cmp = icmp ne %struct.gx_device_s* %6, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %trans_device2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %7, i32 0, i32 5
  %8 = load %struct.gx_device_s*, %struct.gx_device_s** %trans_device2, align 8, !tbaa !71
  store %struct.gx_device_s* %8, %struct.gx_device_s** %dev, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 33
  %10 = load %struct.gs_color_index_cache_s*, %struct.gs_color_index_cache_s** %pcic, align 8, !tbaa !70
  %tobool = icmp ne %struct.gs_color_index_cache_s* %10, null
  br i1 %tobool, label %if.then.3, label %if.end.8

if.then.3:                                        ; preds = %if.end
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic4 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 33
  %12 = load %struct.gs_color_index_cache_s*, %struct.gs_color_index_cache_s** %pcic4, align 8, !tbaa !70
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %13, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i32 0
  %14 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %15 = load i32*, i32** %frac_values.addr, align 8, !tbaa !1
  %call = call i32 @gs_cached_color_index(%struct.gs_color_index_cache_s* %12, float* %arraydecay, %struct.gx_device_color_s* %14, i32* %15) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %16 = load i32, i32* %code, align 4, !tbaa !5
  %cmp5 = icmp slt i32 %16, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.then.3
  %17 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %17, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.57

if.end.7:                                         ; preds = %if.then.3
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %if.end
  %18 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic9 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %18, i32 0, i32 33
  %19 = load %struct.gs_color_index_cache_s*, %struct.gs_color_index_cache_s** %pcic9, align 8, !tbaa !70
  %cmp10 = icmp eq %struct.gs_color_index_cache_s* %19, null
  br i1 %cmp10, label %if.then.11, label %if.end.56

if.then.11:                                       ; preds = %if.end.8
  %20 = bitcast %struct.gs_client_color_s* %fcc to i8*
  call void @llvm.lifetime.start(i64 264, i8* %20) #2
  %21 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #2
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %direct_space = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %22, i32 0, i32 2
  %23 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %direct_space, align 8, !tbaa !16
  store %struct.gs_color_space_s* %23, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %24 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %cmp12 = icmp ne %struct.gs_color_space_s* %24, null
  br i1 %cmp12, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %if.then.11
  %25 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %cmp14 = icmp eq %struct.gx_device_color_s* %25, null
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.then.13
  store %struct.gx_device_color_s* %devc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.15, %if.then.13
  %paint17 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %fcc, i32 0, i32 1
  %values18 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint17, i32 0, i32 0
  %arraydecay19 = getelementptr inbounds [64 x float], [64 x float]* %values18, i32 0, i32 0
  %26 = bitcast float* %arraydecay19 to i8*
  %27 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc20 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %27, i32 0, i32 1
  %paint21 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc20, i32 0, i32 1
  %values22 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint21, i32 0, i32 0
  %arraydecay23 = getelementptr inbounds [64 x float], [64 x float]* %values22, i32 0, i32 0
  %28 = bitcast float* %arraydecay23 to i8*
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %29, i32 0, i32 3
  %30 = load i32, i32* %num_components, align 4, !tbaa !17
  %conv = sext i32 %30 to i64
  %mul = mul i64 4, %conv
  %call24 = call i8* @memcpy(i8* %26, i8* %28, i64 %mul) #6
  %31 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %31, i32 0, i32 0
  %32 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !20
  %remap_color = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %32, i32 0, i32 10
  %33 = load i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)*, i32 (%struct.gs_client_color_s*, %struct.gs_color_space_s*, %struct.gx_device_color_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, i32)** %remap_color, align 8, !tbaa !121
  %34 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %35 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %36 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %36, i32 0, i32 1
  %37 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %38 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev25 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %38, i32 0, i32 0
  %39 = load %struct.gx_device_s*, %struct.gx_device_s** %dev25, align 8, !tbaa !55
  %call26 = call i32 %33(%struct.gs_client_color_s* %fcc, %struct.gs_color_space_s* %34, %struct.gx_device_color_s* %35, %struct.gs_imager_state_s* %37, %struct.gx_device_s* %39, i32 0) #5
  store i32 %call26, i32* %code, align 4, !tbaa !5
  %40 = load i32, i32* %code, align 4, !tbaa !5
  %cmp27 = icmp slt i32 %40, 0
  br i1 %cmp27, label %if.then.29, label %if.end.30

if.then.29:                                       ; preds = %if.end.16
  %41 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %41, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.30:                                        ; preds = %if.end.16
  %42 = load i32*, i32** %frac_values.addr, align 8, !tbaa !1
  %cmp31 = icmp ne i32* %42, null
  br i1 %cmp31, label %if.then.33, label %if.end.42

if.then.33:                                       ; preds = %if.end.30
  %43 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type34 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %43, i32 0, i32 0
  %44 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type34, align 8, !tbaa !122
  %cmp35 = icmp eq %struct.gx_device_color_type_s* %44, @gx_dc_type_data_devn
  br i1 %cmp35, label %if.end.41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then.33
  %45 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type37 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %45, i32 0, i32 0
  %46 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type37, align 8, !tbaa !122
  %cmp38 = icmp eq %struct.gx_device_color_type_s* %46, @gx_dc_type_data_pure
  br i1 %cmp38, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %lor.lhs.false
  store i32 2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.41:                                        ; preds = %lor.lhs.false, %if.then.33
  %47 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %48 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %49 = load i32*, i32** %frac_values.addr, align 8, !tbaa !1
  call void @dc2fc(%struct.patch_fill_state_s* %47, %struct.gx_device_color_s* %48, i32* %49) #5
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.end.30
  br label %if.end.54

if.else:                                          ; preds = %if.then.11
  %50 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #2
  %51 = bitcast %struct.gx_device_color_info_s** %cinfo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %51) #2
  %52 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev43 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %52, i32 0, i32 0
  %53 = load %struct.gx_device_s*, %struct.gx_device_s** %dev43, align 8, !tbaa !55
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %53, i32 0, i32 11
  store %struct.gx_device_color_info_s* %color_info, %struct.gx_device_color_info_s** %cinfo, align 8, !tbaa !1
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %54 = load i32, i32* %j, align 4, !tbaa !5
  %55 = load %struct.gx_device_color_info_s*, %struct.gx_device_color_info_s** %cinfo, align 8, !tbaa !1
  %num_components44 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %55, i32 0, i32 1
  %56 = load i32, i32* %num_components44, align 4, !tbaa !127
  %cmp45 = icmp slt i32 %54, %56
  br i1 %cmp45, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %57 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom = sext i32 %57 to i64
  %58 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc47 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %58, i32 0, i32 1
  %paint48 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc47, i32 0, i32 1
  %values49 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint48, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values49, i32 0, i64 %idxprom
  %59 = load float, float* %arrayidx, align 4, !tbaa !18
  %conv50 = fptosi float %59 to i32
  %60 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom51 = sext i32 %60 to i64
  %61 = load i32*, i32** %frac_values.addr, align 8, !tbaa !1
  %arrayidx52 = getelementptr inbounds i32, i32* %61, i64 %idxprom51
  store i32 %conv50, i32* %arrayidx52, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %62 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add nsw i32 %62, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %63 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type53 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %63, i32 0, i32 0
  store %struct.gx_device_color_type_s* @gx_dc_type_data_pure, %struct.gx_device_color_type_s** %type53, align 8, !tbaa !122
  %64 = bitcast %struct.gx_device_color_info_s** %cinfo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %64) #2
  %65 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  br label %if.end.54

if.end.54:                                        ; preds = %for.end, %if.end.42
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.54, %if.then.40, %if.then.29
  %66 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #2
  %67 = bitcast %struct.gs_client_color_s* %fcc to i8*
  call void @llvm.lifetime.end(i64 264, i8* %67) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.57 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.56

if.end.56:                                        ; preds = %cleanup.cont, %if.end.8
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.57

cleanup.57:                                       ; preds = %if.end.56, %cleanup, %if.then.6
  %68 = bitcast %struct.gx_device_s** %dev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %68) #2
  %69 = bitcast %struct.gx_device_color_s* %devc to i8*
  call void @llvm.lifetime.end(i64 656, i8* %69) #2
  %70 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = load i32, i32* %retval
  ret i32 %71
}

; Function Attrs: nounwind uwtable
define i32 @mesh_padding(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %q0 = alloca %struct.gs_fixed_point_s, align 4
  %q1 = alloca %struct.gs_fixed_point_s, align 4
  %cc0 = alloca %struct.patch_color_s*, align 8
  %cc1 = alloca %struct.patch_color_s*, align 8
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  %swap_axes = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %adjust = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_fixed_point_s* %q0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast %struct.gs_fixed_point_s* %q1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast %struct.patch_color_s** %cc0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast %struct.patch_color_s** %cc1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast i32* %dx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i32 0, i32 0
  %6 = load i32, i32* %x, align 4, !tbaa !109
  %7 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %7, i32 0, i32 0
  %8 = load i32, i32* %x1, align 4, !tbaa !109
  %sub = sub nsw i32 %6, %8
  store i32 %sub, i32* %dx, align 4, !tbaa !5
  %9 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %10, i32 0, i32 1
  %11 = load i32, i32* %y, align 4, !tbaa !110
  %12 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %12, i32 0, i32 1
  %13 = load i32, i32* %y2, align 4, !tbaa !110
  %sub3 = sub nsw i32 %11, %13
  store i32 %sub3, i32* %dy, align 4, !tbaa !5
  %14 = bitcast i32* %swap_axes to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #2
  %15 = load i32, i32* %dx, align 4, !tbaa !5
  %cmp = icmp slt i32 %15, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %16 = load i32, i32* %dx, align 4, !tbaa !5
  %sub4 = sub nsw i32 0, %16
  br label %cond.end

cond.false:                                       ; preds = %entry
  %17 = load i32, i32* %dx, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub4, %cond.true ], [ %17, %cond.false ]
  %18 = load i32, i32* %dy, align 4, !tbaa !5
  %cmp5 = icmp slt i32 %18, 0
  br i1 %cmp5, label %cond.true.6, label %cond.false.8

cond.true.6:                                      ; preds = %cond.end
  %19 = load i32, i32* %dy, align 4, !tbaa !5
  %sub7 = sub nsw i32 0, %19
  br label %cond.end.9

cond.false.8:                                     ; preds = %cond.end
  %20 = load i32, i32* %dy, align 4, !tbaa !5
  br label %cond.end.9

cond.end.9:                                       ; preds = %cond.false.8, %cond.true.6
  %cond10 = phi i32 [ %sub7, %cond.true.6 ], [ %20, %cond.false.8 ]
  %cmp11 = icmp sgt i32 %cond, %cond10
  %conv = zext i1 %cmp11 to i32
  store i32 %conv, i32* %swap_axes, align 4, !tbaa !5
  %21 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %21) #2
  %22 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %22) #2
  %23 = bitcast i32* %adjust to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #2
  store i32 128, i32* %adjust, align 4, !tbaa !5
  %24 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %tobool = icmp ne i32 %24, 0
  br i1 %tobool, label %if.then, label %if.else.33

if.then:                                          ; preds = %cond.end.9
  %25 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %25, i32 0, i32 0
  %26 = load i32, i32* %x12, align 4, !tbaa !109
  %27 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %27, i32 0, i32 0
  %28 = load i32, i32* %x13, align 4, !tbaa !109
  %cmp14 = icmp slt i32 %26, %28
  br i1 %cmp14, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %if.then
  %29 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %29, i32 0, i32 1
  %30 = load i32, i32* %y17, align 4, !tbaa !110
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q0, i32 0, i32 0
  store i32 %30, i32* %x18, align 4, !tbaa !109
  %31 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %31, i32 0, i32 0
  %32 = load i32, i32* %x19, align 4, !tbaa !109
  %y20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q0, i32 0, i32 1
  store i32 %32, i32* %y20, align 4, !tbaa !110
  %33 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %33, i32 0, i32 1
  %34 = load i32, i32* %y21, align 4, !tbaa !110
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1, i32 0, i32 0
  store i32 %34, i32* %x22, align 4, !tbaa !109
  %35 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %35, i32 0, i32 0
  %36 = load i32, i32* %x23, align 4, !tbaa !109
  %y24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1, i32 0, i32 1
  store i32 %36, i32* %y24, align 4, !tbaa !110
  %37 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %37, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %38, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %if.then
  %39 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %39, i32 0, i32 1
  %40 = load i32, i32* %y25, align 4, !tbaa !110
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q0, i32 0, i32 0
  store i32 %40, i32* %x26, align 4, !tbaa !109
  %41 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %41, i32 0, i32 0
  %42 = load i32, i32* %x27, align 4, !tbaa !109
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q0, i32 0, i32 1
  store i32 %42, i32* %y28, align 4, !tbaa !110
  %43 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %43, i32 0, i32 1
  %44 = load i32, i32* %y29, align 4, !tbaa !110
  %x30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1, i32 0, i32 0
  store i32 %44, i32* %x30, align 4, !tbaa !109
  %45 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %45, i32 0, i32 0
  %46 = load i32, i32* %x31, align 4, !tbaa !109
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1, i32 0, i32 1
  store i32 %46, i32* %y32, align 4, !tbaa !110
  %47 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %47, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %48 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %48, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.16
  br label %if.end.41

if.else.33:                                       ; preds = %cond.end.9
  %49 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y34 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %49, i32 0, i32 1
  %50 = load i32, i32* %y34, align 4, !tbaa !110
  %51 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %51, i32 0, i32 1
  %52 = load i32, i32* %y35, align 4, !tbaa !110
  %cmp36 = icmp slt i32 %50, %52
  br i1 %cmp36, label %if.then.38, label %if.else.39

if.then.38:                                       ; preds = %if.else.33
  %53 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %54 = bitcast %struct.gs_fixed_point_s* %q0 to i8*
  %55 = bitcast %struct.gs_fixed_point_s* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 4, i1 false), !tbaa.struct !117
  %56 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %57 = bitcast %struct.gs_fixed_point_s* %q1 to i8*
  %58 = bitcast %struct.gs_fixed_point_s* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 4, i1 false), !tbaa.struct !117
  %59 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %59, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %60 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %60, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  br label %if.end.40

if.else.39:                                       ; preds = %if.else.33
  %61 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %62 = bitcast %struct.gs_fixed_point_s* %q0 to i8*
  %63 = bitcast %struct.gs_fixed_point_s* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 4, i1 false), !tbaa.struct !117
  %64 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %65 = bitcast %struct.gs_fixed_point_s* %q1 to i8*
  %66 = bitcast %struct.gs_fixed_point_s* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false), !tbaa.struct !117
  %67 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %67, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %68 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %68, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.39, %if.then.38
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end
  %x42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q0, i32 0, i32 0
  %69 = load i32, i32* %x42, align 4, !tbaa !109
  %sub43 = sub nsw i32 %69, 128
  %start = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  store i32 %sub43, i32* %x44, align 4, !tbaa !128
  %x45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q0, i32 0, i32 0
  %70 = load i32, i32* %x45, align 4, !tbaa !109
  %add = add nsw i32 %70, 128
  %start46 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start46, i32 0, i32 0
  store i32 %add, i32* %x47, align 4, !tbaa !128
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q0, i32 0, i32 1
  %71 = load i32, i32* %y48, align 4, !tbaa !110
  %sub49 = sub nsw i32 %71, 128
  %start50 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start50, i32 0, i32 1
  store i32 %sub49, i32* %y51, align 4, !tbaa !130
  %start52 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start52, i32 0, i32 1
  store i32 %sub49, i32* %y53, align 4, !tbaa !130
  %x54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1, i32 0, i32 0
  %72 = load i32, i32* %x54, align 4, !tbaa !109
  %sub55 = sub nsw i32 %72, 128
  %end = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  store i32 %sub55, i32* %x56, align 4, !tbaa !131
  %x57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1, i32 0, i32 0
  %73 = load i32, i32* %x57, align 4, !tbaa !109
  %add58 = add nsw i32 %73, 128
  %end59 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end59, i32 0, i32 0
  store i32 %add58, i32* %x60, align 4, !tbaa !131
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1, i32 0, i32 1
  %74 = load i32, i32* %y61, align 4, !tbaa !110
  %add62 = add nsw i32 %74, 128
  %end63 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end63, i32 0, i32 1
  store i32 %add62, i32* %y64, align 4, !tbaa !132
  %end65 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end65, i32 0, i32 1
  store i32 %add62, i32* %y66, align 4, !tbaa !132
  %start67 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start67, i32 0, i32 0
  %75 = load i32, i32* %swap_axes, align 4, !tbaa !5
  call void @adjust_swapped_boundary(i32* %x68, i32 %75) #5
  %end69 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end69, i32 0, i32 0
  %76 = load i32, i32* %swap_axes, align 4, !tbaa !5
  call void @adjust_swapped_boundary(i32* %x70, i32 %76) #5
  %77 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %start71 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start71, i32 0, i32 1
  %78 = load i32, i32* %y72, align 4, !tbaa !130
  %end73 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y74 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end73, i32 0, i32 1
  %79 = load i32, i32* %y74, align 4, !tbaa !132
  %80 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %81 = load %struct.patch_color_s*, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %82 = load %struct.patch_color_s*, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  %call = call i32 @decompose_linear_color(%struct.patch_fill_state_s* %77, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %78, i32 %79, i32 %80, %struct.patch_color_s* %81, %struct.patch_color_s* %82) #5
  %83 = bitcast i32* %adjust to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #2
  %84 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %84) #2
  %85 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %85) #2
  %86 = bitcast i32* %swap_axes to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #2
  %87 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %87) #2
  %88 = bitcast i32* %dx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #2
  %89 = bitcast %struct.patch_color_s** %cc1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #2
  %90 = bitcast %struct.patch_color_s** %cc0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %90) #2
  %91 = bitcast %struct.gs_fixed_point_s* %q1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %91) #2
  %92 = bitcast %struct.gs_fixed_point_s* %q0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #2
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @adjust_swapped_boundary(i32* %b, i32 %swap_axes) #1 {
entry:
  %b.addr = alloca i32*, align 8
  %swap_axes.addr = alloca i32, align 4
  store i32* %b, i32** %b.addr, align 8, !tbaa !1
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  %0 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %b.addr, align 8, !tbaa !1
  %2 = load i32, i32* %1, align 4, !tbaa !5
  %conv = sext i32 %2 to i64
  %add = add nsw i64 %conv, 1
  %conv1 = trunc i64 %add to i32
  store i32 %conv1, i32* %1, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @decompose_linear_color(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %ybot, i32 %ytop, i32 %swap_axes, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %le.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %re.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %ybot.addr = alloca i32, align 4
  %ytop.addr = alloca i32, align 4
  %swap_axes.addr = alloca i32, align 4
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %code = alloca i32, align 4
  %c = alloca %struct.patch_color_s*, align 8
  %color_stack_ptr = alloca i8*, align 8
  %save_inside = alloca i32, align 4
  %r = alloca %struct.gs_fixed_rect_s, align 4
  %r1 = alloca %struct.gs_fixed_rect_s, align 4
  %cleanup.dest.slot = alloca i32
  %monotonic_color_save = alloca i32, align 4
  %linear_color_save = alloca i32, align 4
  %pdev = alloca %struct.gx_device_s*, align 8
  %fc = alloca [2 x [64 x i32]], align 16
  %fa = alloca %struct.gs_fill_attributes_s, align 8
  %clip = alloca %struct.gs_fixed_rect_s, align 4
  %v = alloca i32, align 4
  %y342 = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %re, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  store i32 %ybot, i32* %ybot.addr, align 4, !tbaa !5
  store i32 %ytop, i32* %ytop.addr, align 4, !tbaa !5
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %4, i32 0, i32 26
  %5 = load i32, i32* %inside, align 4, !tbaa !32
  store i32 %5, i32* %save_inside, align 4, !tbaa !5
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 26
  %7 = load i32, i32* %inside1, align 4, !tbaa !32
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.end.202, label %if.then

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.start(i64 16, i8* %8) #2
  %9 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %9) #2
  %10 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool2 = icmp ne i32 %10, 0
  br i1 %tobool2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.then
  %11 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %11, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %12 = load i32, i32* %x, align 4, !tbaa !128
  %13 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %13, i32 0, i32 1
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %14 = load i32, i32* %x4, align 4, !tbaa !131
  %cmp = icmp slt i32 %12, %14
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.3
  %15 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start5 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %15, i32 0, i32 0
  %x6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start5, i32 0, i32 0
  %16 = load i32, i32* %x6, align 4, !tbaa !128
  br label %cond.end

cond.false:                                       ; preds = %if.then.3
  %17 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end7 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %17, i32 0, i32 1
  %x8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end7, i32 0, i32 0
  %18 = load i32, i32* %x8, align 4, !tbaa !131
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ %18, %cond.false ]
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  store i32 %cond, i32* %y, align 4, !tbaa !133
  %19 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start9 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %19, i32 0, i32 0
  %y10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start9, i32 0, i32 1
  %20 = load i32, i32* %y10, align 4, !tbaa !130
  %21 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end11 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %21, i32 0, i32 1
  %y12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end11, i32 0, i32 1
  %22 = load i32, i32* %y12, align 4, !tbaa !132
  %cmp13 = icmp slt i32 %20, %22
  br i1 %cmp13, label %cond.true.14, label %cond.false.17

cond.true.14:                                     ; preds = %cond.end
  %23 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start15 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %23, i32 0, i32 0
  %y16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start15, i32 0, i32 1
  %24 = load i32, i32* %y16, align 4, !tbaa !130
  br label %cond.end.20

cond.false.17:                                    ; preds = %cond.end
  %25 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end18 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %25, i32 0, i32 1
  %y19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end18, i32 0, i32 1
  %26 = load i32, i32* %y19, align 4, !tbaa !132
  br label %cond.end.20

cond.end.20:                                      ; preds = %cond.false.17, %cond.true.14
  %cond21 = phi i32 [ %24, %cond.true.14 ], [ %26, %cond.false.17 ]
  %p22 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p22, i32 0, i32 0
  store i32 %cond21, i32* %x23, align 4, !tbaa !134
  %27 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start24 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %27, i32 0, i32 0
  %x25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start24, i32 0, i32 0
  %28 = load i32, i32* %x25, align 4, !tbaa !128
  %29 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end26 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %29, i32 0, i32 1
  %x27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end26, i32 0, i32 0
  %30 = load i32, i32* %x27, align 4, !tbaa !131
  %cmp28 = icmp sgt i32 %28, %30
  br i1 %cmp28, label %cond.true.29, label %cond.false.32

cond.true.29:                                     ; preds = %cond.end.20
  %31 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start30 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %31, i32 0, i32 0
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start30, i32 0, i32 0
  %32 = load i32, i32* %x31, align 4, !tbaa !128
  br label %cond.end.35

cond.false.32:                                    ; preds = %cond.end.20
  %33 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end33 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %33, i32 0, i32 1
  %x34 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end33, i32 0, i32 0
  %34 = load i32, i32* %x34, align 4, !tbaa !131
  br label %cond.end.35

cond.end.35:                                      ; preds = %cond.false.32, %cond.true.29
  %cond36 = phi i32 [ %32, %cond.true.29 ], [ %34, %cond.false.32 ]
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  store i32 %cond36, i32* %y37, align 4, !tbaa !135
  %35 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start38 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %35, i32 0, i32 0
  %y39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start38, i32 0, i32 1
  %36 = load i32, i32* %y39, align 4, !tbaa !130
  %37 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end40 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %37, i32 0, i32 1
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end40, i32 0, i32 1
  %38 = load i32, i32* %y41, align 4, !tbaa !132
  %cmp42 = icmp sgt i32 %36, %38
  br i1 %cmp42, label %cond.true.43, label %cond.false.46

cond.true.43:                                     ; preds = %cond.end.35
  %39 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start44 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %39, i32 0, i32 0
  %y45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start44, i32 0, i32 1
  %40 = load i32, i32* %y45, align 4, !tbaa !130
  br label %cond.end.49

cond.false.46:                                    ; preds = %cond.end.35
  %41 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end47 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %41, i32 0, i32 1
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end47, i32 0, i32 1
  %42 = load i32, i32* %y48, align 4, !tbaa !132
  br label %cond.end.49

cond.end.49:                                      ; preds = %cond.false.46, %cond.true.43
  %cond50 = phi i32 [ %40, %cond.true.43 ], [ %42, %cond.false.46 ]
  %q51 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q51, i32 0, i32 0
  store i32 %cond50, i32* %x52, align 4, !tbaa !136
  br label %if.end

if.else:                                          ; preds = %if.then
  %43 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start53 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %43, i32 0, i32 0
  %x54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start53, i32 0, i32 0
  %44 = load i32, i32* %x54, align 4, !tbaa !128
  %45 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end55 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %45, i32 0, i32 1
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end55, i32 0, i32 0
  %46 = load i32, i32* %x56, align 4, !tbaa !131
  %cmp57 = icmp slt i32 %44, %46
  br i1 %cmp57, label %cond.true.58, label %cond.false.61

cond.true.58:                                     ; preds = %if.else
  %47 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start59 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %47, i32 0, i32 0
  %x60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start59, i32 0, i32 0
  %48 = load i32, i32* %x60, align 4, !tbaa !128
  br label %cond.end.64

cond.false.61:                                    ; preds = %if.else
  %49 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end62 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %49, i32 0, i32 1
  %x63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end62, i32 0, i32 0
  %50 = load i32, i32* %x63, align 4, !tbaa !131
  br label %cond.end.64

cond.end.64:                                      ; preds = %cond.false.61, %cond.true.58
  %cond65 = phi i32 [ %48, %cond.true.58 ], [ %50, %cond.false.61 ]
  %p66 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p66, i32 0, i32 0
  store i32 %cond65, i32* %x67, align 4, !tbaa !134
  %51 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start68 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %51, i32 0, i32 0
  %y69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start68, i32 0, i32 1
  %52 = load i32, i32* %y69, align 4, !tbaa !130
  %53 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end70 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %53, i32 0, i32 1
  %y71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end70, i32 0, i32 1
  %54 = load i32, i32* %y71, align 4, !tbaa !132
  %cmp72 = icmp slt i32 %52, %54
  br i1 %cmp72, label %cond.true.73, label %cond.false.76

cond.true.73:                                     ; preds = %cond.end.64
  %55 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start74 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %55, i32 0, i32 0
  %y75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start74, i32 0, i32 1
  %56 = load i32, i32* %y75, align 4, !tbaa !130
  br label %cond.end.79

cond.false.76:                                    ; preds = %cond.end.64
  %57 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end77 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %57, i32 0, i32 1
  %y78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end77, i32 0, i32 1
  %58 = load i32, i32* %y78, align 4, !tbaa !132
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.false.76, %cond.true.73
  %cond80 = phi i32 [ %56, %cond.true.73 ], [ %58, %cond.false.76 ]
  %p81 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p81, i32 0, i32 1
  store i32 %cond80, i32* %y82, align 4, !tbaa !133
  %59 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start83 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %59, i32 0, i32 0
  %x84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start83, i32 0, i32 0
  %60 = load i32, i32* %x84, align 4, !tbaa !128
  %61 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end85 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %61, i32 0, i32 1
  %x86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end85, i32 0, i32 0
  %62 = load i32, i32* %x86, align 4, !tbaa !131
  %cmp87 = icmp sgt i32 %60, %62
  br i1 %cmp87, label %cond.true.88, label %cond.false.91

cond.true.88:                                     ; preds = %cond.end.79
  %63 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start89 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %63, i32 0, i32 0
  %x90 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start89, i32 0, i32 0
  %64 = load i32, i32* %x90, align 4, !tbaa !128
  br label %cond.end.94

cond.false.91:                                    ; preds = %cond.end.79
  %65 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end92 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %65, i32 0, i32 1
  %x93 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end92, i32 0, i32 0
  %66 = load i32, i32* %x93, align 4, !tbaa !131
  br label %cond.end.94

cond.end.94:                                      ; preds = %cond.false.91, %cond.true.88
  %cond95 = phi i32 [ %64, %cond.true.88 ], [ %66, %cond.false.91 ]
  %q96 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x97 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q96, i32 0, i32 0
  store i32 %cond95, i32* %x97, align 4, !tbaa !136
  %67 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start98 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %67, i32 0, i32 0
  %y99 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start98, i32 0, i32 1
  %68 = load i32, i32* %y99, align 4, !tbaa !130
  %69 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end100 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %69, i32 0, i32 1
  %y101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end100, i32 0, i32 1
  %70 = load i32, i32* %y101, align 4, !tbaa !132
  %cmp102 = icmp sgt i32 %68, %70
  br i1 %cmp102, label %cond.true.103, label %cond.false.106

cond.true.103:                                    ; preds = %cond.end.94
  %71 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start104 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %71, i32 0, i32 0
  %y105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start104, i32 0, i32 1
  %72 = load i32, i32* %y105, align 4, !tbaa !130
  br label %cond.end.109

cond.false.106:                                   ; preds = %cond.end.94
  %73 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end107 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %73, i32 0, i32 1
  %y108 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end107, i32 0, i32 1
  %74 = load i32, i32* %y108, align 4, !tbaa !132
  br label %cond.end.109

cond.end.109:                                     ; preds = %cond.false.106, %cond.true.103
  %cond110 = phi i32 [ %72, %cond.true.103 ], [ %74, %cond.false.106 ]
  %q111 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q111, i32 0, i32 1
  store i32 %cond110, i32* %y112, align 4, !tbaa !135
  br label %if.end

if.end:                                           ; preds = %cond.end.109, %cond.end.49
  %75 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  %76 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 16, i32 4, i1 false), !tbaa.struct !137
  br label %do.body

do.body:                                          ; preds = %if.end
  %77 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %77, i32 0, i32 8
  %p113 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect, i32 0, i32 0
  %x114 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p113, i32 0, i32 0
  %78 = load i32, i32* %x114, align 4, !tbaa !138
  %p115 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x116 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p115, i32 0, i32 0
  %79 = load i32, i32* %x116, align 4, !tbaa !134
  %cmp117 = icmp sgt i32 %78, %79
  br i1 %cmp117, label %if.then.118, label %if.end.124

if.then.118:                                      ; preds = %do.body
  %80 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect119 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %80, i32 0, i32 8
  %p120 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect119, i32 0, i32 0
  %x121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p120, i32 0, i32 0
  %81 = load i32, i32* %x121, align 4, !tbaa !138
  %p122 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x123 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p122, i32 0, i32 0
  store i32 %81, i32* %x123, align 4, !tbaa !134
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.118, %do.body
  %82 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect125 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %82, i32 0, i32 8
  %q126 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect125, i32 0, i32 1
  %x127 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q126, i32 0, i32 0
  %83 = load i32, i32* %x127, align 4, !tbaa !139
  %q128 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x129 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q128, i32 0, i32 0
  %84 = load i32, i32* %x129, align 4, !tbaa !136
  %cmp130 = icmp slt i32 %83, %84
  br i1 %cmp130, label %if.then.131, label %if.end.137

if.then.131:                                      ; preds = %if.end.124
  %85 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect132 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %85, i32 0, i32 8
  %q133 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect132, i32 0, i32 1
  %x134 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q133, i32 0, i32 0
  %86 = load i32, i32* %x134, align 4, !tbaa !139
  %q135 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x136 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q135, i32 0, i32 0
  store i32 %86, i32* %x136, align 4, !tbaa !136
  br label %if.end.137

if.end.137:                                       ; preds = %if.then.131, %if.end.124
  %87 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect138 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %87, i32 0, i32 8
  %p139 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect138, i32 0, i32 0
  %y140 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p139, i32 0, i32 1
  %88 = load i32, i32* %y140, align 4, !tbaa !140
  %p141 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p141, i32 0, i32 1
  %89 = load i32, i32* %y142, align 4, !tbaa !133
  %cmp143 = icmp sgt i32 %88, %89
  br i1 %cmp143, label %if.then.144, label %if.end.150

if.then.144:                                      ; preds = %if.end.137
  %90 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect145 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %90, i32 0, i32 8
  %p146 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect145, i32 0, i32 0
  %y147 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p146, i32 0, i32 1
  %91 = load i32, i32* %y147, align 4, !tbaa !140
  %p148 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y149 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p148, i32 0, i32 1
  store i32 %91, i32* %y149, align 4, !tbaa !133
  br label %if.end.150

if.end.150:                                       ; preds = %if.then.144, %if.end.137
  %92 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect151 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %92, i32 0, i32 8
  %q152 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect151, i32 0, i32 1
  %y153 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q152, i32 0, i32 1
  %93 = load i32, i32* %y153, align 4, !tbaa !141
  %q154 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y155 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q154, i32 0, i32 1
  %94 = load i32, i32* %y155, align 4, !tbaa !135
  %cmp156 = icmp slt i32 %93, %94
  br i1 %cmp156, label %if.then.157, label %if.end.163

if.then.157:                                      ; preds = %if.end.150
  %95 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect158 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %95, i32 0, i32 8
  %q159 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect158, i32 0, i32 1
  %y160 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q159, i32 0, i32 1
  %96 = load i32, i32* %y160, align 4, !tbaa !141
  %q161 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q161, i32 0, i32 1
  store i32 %96, i32* %y162, align 4, !tbaa !135
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.157, %if.end.150
  br label %do.cond

do.cond:                                          ; preds = %if.end.163
  br label %do.end

do.end:                                           ; preds = %do.cond
  %q164 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x165 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q164, i32 0, i32 0
  %97 = load i32, i32* %x165, align 4, !tbaa !136
  %p166 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x167 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p166, i32 0, i32 0
  %98 = load i32, i32* %x167, align 4, !tbaa !134
  %cmp168 = icmp sle i32 %97, %98
  br i1 %cmp168, label %if.then.174, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %q169 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y170 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q169, i32 0, i32 1
  %99 = load i32, i32* %y170, align 4, !tbaa !135
  %p171 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y172 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p171, i32 0, i32 1
  %100 = load i32, i32* %y172, align 4, !tbaa !133
  %cmp173 = icmp sle i32 %99, %100
  br i1 %cmp173, label %if.then.174, label %if.end.175

if.then.174:                                      ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.175:                                       ; preds = %lor.lhs.false
  %p176 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %x177 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p176, i32 0, i32 0
  %101 = load i32, i32* %x177, align 4, !tbaa !134
  %p178 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x179 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p178, i32 0, i32 0
  %102 = load i32, i32* %x179, align 4, !tbaa !134
  %cmp180 = icmp eq i32 %101, %102
  br i1 %cmp180, label %land.lhs.true, label %if.end.200

land.lhs.true:                                    ; preds = %if.end.175
  %p181 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %y182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p181, i32 0, i32 1
  %103 = load i32, i32* %y182, align 4, !tbaa !133
  %p183 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y184 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p183, i32 0, i32 1
  %104 = load i32, i32* %y184, align 4, !tbaa !133
  %cmp185 = icmp eq i32 %103, %104
  br i1 %cmp185, label %land.lhs.true.186, label %if.end.200

land.lhs.true.186:                                ; preds = %land.lhs.true
  %q187 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %x188 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q187, i32 0, i32 0
  %105 = load i32, i32* %x188, align 4, !tbaa !136
  %q189 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x190 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q189, i32 0, i32 0
  %106 = load i32, i32* %x190, align 4, !tbaa !136
  %cmp191 = icmp eq i32 %105, %106
  br i1 %cmp191, label %land.lhs.true.192, label %if.end.200

land.lhs.true.192:                                ; preds = %land.lhs.true.186
  %q193 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %y194 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q193, i32 0, i32 1
  %107 = load i32, i32* %y194, align 4, !tbaa !135
  %q195 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y196 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q195, i32 0, i32 1
  %108 = load i32, i32* %y196, align 4, !tbaa !135
  %cmp197 = icmp eq i32 %107, %108
  br i1 %cmp197, label %if.then.198, label %if.end.200

if.then.198:                                      ; preds = %land.lhs.true.192
  %109 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside199 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %109, i32 0, i32 26
  store i32 1, i32* %inside199, align 4, !tbaa !32
  br label %if.end.200

if.end.200:                                       ; preds = %if.then.198, %land.lhs.true.192, %land.lhs.true.186, %land.lhs.true, %if.end.175
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.200, %if.then.174
  %110 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %110) #2
  %111 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.end(i64 16, i8* %111) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.359 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.202

if.end.202:                                       ; preds = %cleanup.cont, %entry
  %112 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %112, %struct.patch_color_s** %c, i32 1) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %113 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp203 = icmp eq i8* %113, null
  br i1 %cmp203, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.end.202
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.359

if.end.205:                                       ; preds = %if.end.202
  %114 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %115 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %116 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %117 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %114, %struct.patch_color_s* %115, %struct.patch_color_s* %116, %struct.patch_fill_state_s* %117, double 5.000000e-01) #5
  %118 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %119 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %sub = sub nsw i32 %118, %119
  %120 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %120, i32 0, i32 19
  %121 = load i32, i32* %decomposition_limit, align 4, !tbaa !34
  %cmp206 = icmp slt i32 %sub, %121
  br i1 %cmp206, label %if.then.207, label %if.else.209

if.then.207:                                      ; preds = %if.end.205
  %122 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %123 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %124 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %125 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %126 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %127 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %128 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %call208 = call i32 @constant_color_trapezoid(%struct.patch_fill_state_s* %122, %struct.gs_fixed_edge_s* %123, %struct.gs_fixed_edge_s* %124, i32 %125, i32 %126, i32 %127, %struct.patch_color_s* %128) #5
  store i32 %call208, i32* %code, align 4, !tbaa !5
  br label %if.end.357

if.else.209:                                      ; preds = %if.end.205
  %129 = bitcast i32* %monotonic_color_save to i8*
  call void @llvm.lifetime.start(i64 4, i8* %129) #2
  %130 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %130, i32 0, i32 23
  %131 = load i32, i32* %monotonic_color, align 4, !tbaa !29
  store i32 %131, i32* %monotonic_color_save, align 4, !tbaa !5
  %132 = bitcast i32* %linear_color_save to i8*
  call void @llvm.lifetime.start(i64 4, i8* %132) #2
  %133 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %133, i32 0, i32 24
  %134 = load i32, i32* %linear_color, align 4, !tbaa !31
  store i32 %134, i32* %linear_color_save, align 4, !tbaa !5
  %135 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color210 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %135, i32 0, i32 23
  %136 = load i32, i32* %monotonic_color210, align 4, !tbaa !29
  %tobool211 = icmp ne i32 %136, 0
  br i1 %tobool211, label %if.end.221, label %if.then.212

if.then.212:                                      ; preds = %if.else.209
  %137 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %138 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %139 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call213 = call i32 @isnt_color_monotonic(%struct.patch_fill_state_s* %137, %struct.patch_color_s* %138, %struct.patch_color_s* %139) #5
  store i32 %call213, i32* %code, align 4, !tbaa !5
  %140 = load i32, i32* %code, align 4, !tbaa !5
  %cmp214 = icmp slt i32 %140, 0
  br i1 %cmp214, label %if.then.215, label %if.end.216

if.then.215:                                      ; preds = %if.then.212
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.353

if.end.216:                                       ; preds = %if.then.212
  %141 = load i32, i32* %code, align 4, !tbaa !5
  %tobool217 = icmp ne i32 %141, 0
  br i1 %tobool217, label %if.end.220, label %if.then.218

if.then.218:                                      ; preds = %if.end.216
  %142 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color219 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %142, i32 0, i32 23
  store i32 1, i32* %monotonic_color219, align 4, !tbaa !29
  br label %if.end.220

if.end.220:                                       ; preds = %if.then.218, %if.end.216
  br label %if.end.221

if.end.221:                                       ; preds = %if.end.220, %if.else.209
  %143 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color222 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %143, i32 0, i32 23
  %144 = load i32, i32* %monotonic_color222, align 4, !tbaa !29
  %tobool223 = icmp ne i32 %144, 0
  br i1 %tobool223, label %land.lhs.true.224, label %if.end.236

land.lhs.true.224:                                ; preds = %if.end.221
  %145 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color225 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %145, i32 0, i32 24
  %146 = load i32, i32* %linear_color225, align 4, !tbaa !31
  %tobool226 = icmp ne i32 %146, 0
  br i1 %tobool226, label %if.end.236, label %if.then.227

if.then.227:                                      ; preds = %land.lhs.true.224
  %147 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %148 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %149 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call228 = call i32 @is_color_linear(%struct.patch_fill_state_s* %147, %struct.patch_color_s* %148, %struct.patch_color_s* %149) #5
  store i32 %call228, i32* %code, align 4, !tbaa !5
  %150 = load i32, i32* %code, align 4, !tbaa !5
  %cmp229 = icmp slt i32 %150, 0
  br i1 %cmp229, label %if.then.230, label %if.end.231

if.then.230:                                      ; preds = %if.then.227
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.353

if.end.231:                                       ; preds = %if.then.227
  %151 = load i32, i32* %code, align 4, !tbaa !5
  %cmp232 = icmp sgt i32 %151, 0
  br i1 %cmp232, label %if.then.233, label %if.end.235

if.then.233:                                      ; preds = %if.end.231
  %152 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color234 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %152, i32 0, i32 24
  store i32 1, i32* %linear_color234, align 4, !tbaa !31
  br label %if.end.235

if.end.235:                                       ; preds = %if.then.233, %if.end.231
  br label %if.end.236

if.end.236:                                       ; preds = %if.end.235, %land.lhs.true.224, %if.end.221
  %153 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %153, i32 0, i32 25
  %154 = load i32, i32* %unlinear, align 4, !tbaa !53
  %tobool237 = icmp ne i32 %154, 0
  br i1 %tobool237, label %if.end.332, label %land.lhs.true.238

land.lhs.true.238:                                ; preds = %if.end.236
  %155 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color239 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %155, i32 0, i32 24
  %156 = load i32, i32* %linear_color239, align 4, !tbaa !31
  %tobool240 = icmp ne i32 %156, 0
  br i1 %tobool240, label %if.then.241, label %if.end.332

if.then.241:                                      ; preds = %land.lhs.true.238
  %157 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %157) #2
  %158 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %158, i32 0, i32 0
  %159 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  store %struct.gx_device_s* %159, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %160 = bitcast [2 x [64 x i32]]* %fc to i8*
  call void @llvm.lifetime.start(i64 512, i8* %160) #2
  %161 = bitcast %struct.gs_fill_attributes_s* %fa to i8*
  call void @llvm.lifetime.start(i64 48, i8* %161) #2
  %162 = bitcast %struct.gs_fixed_rect_s* %clip to i8*
  call void @llvm.lifetime.start(i64 16, i8* %162) #2
  %163 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect242 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %163, i32 0, i32 8
  %164 = bitcast %struct.gs_fixed_rect_s* %clip to i8*
  %165 = bitcast %struct.gs_fixed_rect_s* %rect242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 16, i32 4, i1 false), !tbaa.struct !137
  %166 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool243 = icmp ne i32 %166, 0
  br i1 %tobool243, label %if.then.244, label %if.end.261

if.then.244:                                      ; preds = %if.then.241
  %167 = bitcast i32* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %167) #2
  %p245 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 0
  %x246 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p245, i32 0, i32 0
  %168 = load i32, i32* %x246, align 4, !tbaa !134
  store i32 %168, i32* %v, align 4, !tbaa !5
  %p247 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 0
  %y248 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p247, i32 0, i32 1
  %169 = load i32, i32* %y248, align 4, !tbaa !133
  %p249 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 0
  %x250 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p249, i32 0, i32 0
  store i32 %169, i32* %x250, align 4, !tbaa !134
  %170 = load i32, i32* %v, align 4, !tbaa !5
  %p251 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 0
  %y252 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p251, i32 0, i32 1
  store i32 %170, i32* %y252, align 4, !tbaa !133
  %q253 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 1
  %x254 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q253, i32 0, i32 0
  %171 = load i32, i32* %x254, align 4, !tbaa !136
  store i32 %171, i32* %v, align 4, !tbaa !5
  %q255 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 1
  %y256 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q255, i32 0, i32 1
  %172 = load i32, i32* %y256, align 4, !tbaa !135
  %q257 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 1
  %x258 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q257, i32 0, i32 0
  store i32 %172, i32* %x258, align 4, !tbaa !136
  %173 = load i32, i32* %v, align 4, !tbaa !5
  %q259 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 1
  %y260 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q259, i32 0, i32 1
  store i32 %173, i32* %y260, align 4, !tbaa !135
  %174 = bitcast i32* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %174) #2
  br label %if.end.261

if.end.261:                                       ; preds = %if.then.244, %if.then.241
  %p262 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 0
  %y263 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p262, i32 0, i32 1
  %175 = load i32, i32* %y263, align 4, !tbaa !133
  %176 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %cmp264 = icmp sgt i32 %175, %176
  br i1 %cmp264, label %cond.true.265, label %cond.false.268

cond.true.265:                                    ; preds = %if.end.261
  %p266 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 0
  %y267 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p266, i32 0, i32 1
  %177 = load i32, i32* %y267, align 4, !tbaa !133
  br label %cond.end.269

cond.false.268:                                   ; preds = %if.end.261
  %178 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  br label %cond.end.269

cond.end.269:                                     ; preds = %cond.false.268, %cond.true.265
  %cond270 = phi i32 [ %177, %cond.true.265 ], [ %178, %cond.false.268 ]
  %p271 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 0
  %y272 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p271, i32 0, i32 1
  store i32 %cond270, i32* %y272, align 4, !tbaa !133
  %q273 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 1
  %y274 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q273, i32 0, i32 1
  %179 = load i32, i32* %y274, align 4, !tbaa !135
  %180 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %cmp275 = icmp slt i32 %179, %180
  br i1 %cmp275, label %cond.true.276, label %cond.false.279

cond.true.276:                                    ; preds = %cond.end.269
  %q277 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 1
  %y278 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q277, i32 0, i32 1
  %181 = load i32, i32* %y278, align 4, !tbaa !135
  br label %cond.end.280

cond.false.279:                                   ; preds = %cond.end.269
  %182 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  br label %cond.end.280

cond.end.280:                                     ; preds = %cond.false.279, %cond.true.276
  %cond281 = phi i32 [ %181, %cond.true.276 ], [ %182, %cond.false.279 ]
  %q282 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %clip, i32 0, i32 1
  %y283 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q282, i32 0, i32 1
  store i32 %cond281, i32* %y283, align 4, !tbaa !135
  %clip284 = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 0
  store %struct.gs_fixed_rect_s* %clip, %struct.gs_fixed_rect_s** %clip284, align 8, !tbaa !142
  %ht = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 2
  store %struct.gx_device_halftone_s* null, %struct.gx_device_halftone_s** %ht, align 8, !tbaa !144
  %183 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %swap_axes285 = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 1
  store i32 %183, i32* %swap_axes285, align 4, !tbaa !145
  %lop = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 3
  store i32 0, i32* %lop, align 4, !tbaa !146
  %184 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %ystart = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 4
  store i32 %184, i32* %ystart, align 4, !tbaa !147
  %185 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %yend = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 5
  store i32 %185, i32* %yend, align 4, !tbaa !148
  %186 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %187 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %fc, i32 0, i64 0
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx, i32 0, i32 0
  %call286 = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %186, %struct.patch_color_s* %187, %struct.gx_device_color_s* null, i32* %arraydecay) #5
  store i32 %call286, i32* %code, align 4, !tbaa !5
  %188 = load i32, i32* %code, align 4, !tbaa !5
  %cmp287 = icmp slt i32 %188, 0
  br i1 %cmp287, label %if.then.288, label %if.end.289

if.then.288:                                      ; preds = %cond.end.280
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.328

if.end.289:                                       ; preds = %cond.end.280
  %189 = load i32, i32* %code, align 4, !tbaa !5
  %cmp290 = icmp eq i32 %189, 2
  br i1 %cmp290, label %if.then.291, label %if.end.292

if.then.291:                                      ; preds = %if.end.289
  store i32 -28, i32* %code, align 4, !tbaa !5
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.328

if.end.292:                                       ; preds = %if.end.289
  %190 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %191 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %arrayidx293 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %fc, i32 0, i64 1
  %arraydecay294 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx293, i32 0, i32 0
  %call295 = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %190, %struct.patch_color_s* %191, %struct.gx_device_color_s* null, i32* %arraydecay294) #5
  store i32 %call295, i32* %code, align 4, !tbaa !5
  %192 = load i32, i32* %code, align 4, !tbaa !5
  %cmp296 = icmp slt i32 %192, 0
  br i1 %cmp296, label %if.then.297, label %if.end.298

if.then.297:                                      ; preds = %if.end.292
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.328

if.end.298:                                       ; preds = %if.end.292
  %swap_axes299 = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 1
  %193 = load i32, i32* %swap_axes299, align 4, !tbaa !145
  %tobool300 = icmp ne i32 %193, 0
  br i1 %tobool300, label %if.then.301, label %if.else.305

if.then.301:                                      ; preds = %if.end.298
  br label %do.body.302

do.body.302:                                      ; preds = %if.then.301
  br label %do.cond.303

do.cond.303:                                      ; preds = %do.body.302
  br label %do.end.304

do.end.304:                                       ; preds = %do.cond.303
  br label %if.end.309

if.else.305:                                      ; preds = %if.end.298
  br label %do.body.306

do.body.306:                                      ; preds = %if.else.305
  br label %do.cond.307

do.cond.307:                                      ; preds = %do.body.306
  br label %do.end.308

do.end.308:                                       ; preds = %do.cond.307
  br label %if.end.309

if.end.309:                                       ; preds = %do.end.308, %do.end.304
  %194 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %194, i32 0, i32 42
  %fill_linear_color_trapezoid = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 57
  %195 = load i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*, i32*)** %fill_linear_color_trapezoid, align 8, !tbaa !149
  %196 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %197 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start310 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %197, i32 0, i32 0
  %198 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end311 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %198, i32 0, i32 1
  %199 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start312 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %199, i32 0, i32 0
  %200 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end313 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %200, i32 0, i32 1
  %arrayidx314 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %fc, i32 0, i64 0
  %arraydecay315 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx314, i32 0, i32 0
  %arrayidx316 = getelementptr inbounds [2 x [64 x i32]], [2 x [64 x i32]]* %fc, i32 0, i64 1
  %arraydecay317 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx316, i32 0, i32 0
  %call318 = call i32 %195(%struct.gx_device_s* %196, %struct.gs_fill_attributes_s* %fa, %struct.gs_fixed_point_s* %start310, %struct.gs_fixed_point_s* %end311, %struct.gs_fixed_point_s* %start312, %struct.gs_fixed_point_s* %end313, i32* %arraydecay315, i32* %arraydecay317, i32* null, i32* null) #5
  store i32 %call318, i32* %code, align 4, !tbaa !5
  %201 = load i32, i32* %code, align 4, !tbaa !5
  %cmp319 = icmp eq i32 %201, 1
  br i1 %cmp319, label %if.then.320, label %if.end.323

if.then.320:                                      ; preds = %if.end.309
  %202 = load i32, i32* %monotonic_color_save, align 4, !tbaa !5
  %203 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color321 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %203, i32 0, i32 23
  store i32 %202, i32* %monotonic_color321, align 4, !tbaa !29
  %204 = load i32, i32* %linear_color_save, align 4, !tbaa !5
  %205 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color322 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %205, i32 0, i32 24
  store i32 %204, i32* %linear_color322, align 4, !tbaa !31
  store i32 0, i32* %code, align 4, !tbaa !5
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.328

if.end.323:                                       ; preds = %if.end.309
  %206 = load i32, i32* %code, align 4, !tbaa !5
  %cmp324 = icmp slt i32 %206, 0
  br i1 %cmp324, label %if.then.325, label %if.else.326

if.then.325:                                      ; preds = %if.end.323
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.328

if.else.326:                                      ; preds = %if.end.323
  store i32 -28, i32* %code, align 4, !tbaa !5
  br label %if.end.327

if.end.327:                                       ; preds = %if.else.326
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.328

cleanup.328:                                      ; preds = %if.end.327, %if.then.325, %if.then.320, %if.then.297, %if.then.291, %if.then.288
  %207 = bitcast %struct.gs_fixed_rect_s* %clip to i8*
  call void @llvm.lifetime.end(i64 16, i8* %207) #2
  %208 = bitcast %struct.gs_fill_attributes_s* %fa to i8*
  call void @llvm.lifetime.end(i64 48, i8* %208) #2
  %209 = bitcast [2 x [64 x i32]]* %fc to i8*
  call void @llvm.lifetime.end(i64 512, i8* %209) #2
  %210 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %210) #2
  br label %cleanup.353

if.end.332:                                       ; preds = %land.lhs.true.238, %if.end.236
  %211 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear333 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %211, i32 0, i32 25
  %212 = load i32, i32* %unlinear333, align 4, !tbaa !53
  %tobool334 = icmp ne i32 %212, 0
  br i1 %tobool334, label %lor.lhs.false.335, label %if.then.341

lor.lhs.false.335:                                ; preds = %if.end.332
  %213 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color336 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %213, i32 0, i32 24
  %214 = load i32, i32* %linear_color336, align 4, !tbaa !31
  %tobool337 = icmp ne i32 %214, 0
  br i1 %tobool337, label %lor.lhs.false.338, label %if.then.341

lor.lhs.false.338:                                ; preds = %lor.lhs.false.335
  %215 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %216 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %217 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call339 = call double @color_span(%struct.patch_fill_state_s* %215, %struct.patch_color_s* %216, %struct.patch_color_s* %217) #5
  %218 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %218, i32 0, i32 21
  %219 = load double, double* %smoothness, align 8, !tbaa !50
  %cmp340 = fcmp ogt double %call339, %219
  br i1 %cmp340, label %if.then.341, label %if.else.348

if.then.341:                                      ; preds = %lor.lhs.false.338, %lor.lhs.false.335, %if.end.332
  %220 = bitcast i32* %y342 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %220) #2
  %221 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %222 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %add = add nsw i32 %221, %222
  %div = sdiv i32 %add, 2
  store i32 %div, i32* %y342, align 4, !tbaa !5
  %223 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %224 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %225 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %226 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %227 = load i32, i32* %y342, align 4, !tbaa !5
  %228 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %229 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %230 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %call343 = call i32 @decompose_linear_color(%struct.patch_fill_state_s* %223, %struct.gs_fixed_edge_s* %224, %struct.gs_fixed_edge_s* %225, i32 %226, i32 %227, i32 %228, %struct.patch_color_s* %229, %struct.patch_color_s* %230) #5
  store i32 %call343, i32* %code, align 4, !tbaa !5
  %231 = load i32, i32* %code, align 4, !tbaa !5
  %cmp344 = icmp sge i32 %231, 0
  br i1 %cmp344, label %if.then.345, label %if.end.347

if.then.345:                                      ; preds = %if.then.341
  %232 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %233 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %234 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %235 = load i32, i32* %y342, align 4, !tbaa !5
  %236 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %237 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %238 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %239 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call346 = call i32 @decompose_linear_color(%struct.patch_fill_state_s* %232, %struct.gs_fixed_edge_s* %233, %struct.gs_fixed_edge_s* %234, i32 %235, i32 %236, i32 %237, %struct.patch_color_s* %238, %struct.patch_color_s* %239) #5
  store i32 %call346, i32* %code, align 4, !tbaa !5
  br label %if.end.347

if.end.347:                                       ; preds = %if.then.345, %if.then.341
  %240 = bitcast i32* %y342 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %240) #2
  br label %if.end.350

if.else.348:                                      ; preds = %lor.lhs.false.338
  %241 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %242 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %243 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %244 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %245 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %246 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %247 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %call349 = call i32 @constant_color_trapezoid(%struct.patch_fill_state_s* %241, %struct.gs_fixed_edge_s* %242, %struct.gs_fixed_edge_s* %243, i32 %244, i32 %245, i32 %246, %struct.patch_color_s* %247) #5
  store i32 %call349, i32* %code, align 4, !tbaa !5
  br label %if.end.350

if.end.350:                                       ; preds = %if.else.348, %if.end.347
  %248 = load i32, i32* %monotonic_color_save, align 4, !tbaa !5
  %249 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color351 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %249, i32 0, i32 23
  store i32 %248, i32* %monotonic_color351, align 4, !tbaa !29
  %250 = load i32, i32* %linear_color_save, align 4, !tbaa !5
  %251 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color352 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %251, i32 0, i32 24
  store i32 %250, i32* %linear_color352, align 4, !tbaa !31
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.353

cleanup.353:                                      ; preds = %if.then.230, %if.then.215, %if.end.350, %cleanup.328
  %252 = bitcast i32* %linear_color_save to i8*
  call void @llvm.lifetime.end(i64 4, i8* %252) #2
  %253 = bitcast i32* %monotonic_color_save to i8*
  call void @llvm.lifetime.end(i64 4, i8* %253) #2
  %cleanup.dest.355 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.355, label %cleanup.359 [
    i32 0, label %cleanup.cont.356
    i32 4, label %out
  ]

cleanup.cont.356:                                 ; preds = %cleanup.353
  br label %if.end.357

if.end.357:                                       ; preds = %cleanup.cont.356, %if.then.207
  br label %out

out:                                              ; preds = %if.end.357, %cleanup.353
  %254 = load i32, i32* %save_inside, align 4, !tbaa !5
  %255 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside358 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %255, i32 0, i32 26
  store i32 %254, i32* %inside358, align 4, !tbaa !32
  %256 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %257 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %256, i8* %257, i32 1) #5
  %258 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %258, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.359

cleanup.359:                                      ; preds = %out, %cleanup.353, %if.then.204, %cleanup
  %259 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %259) #2
  %260 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %260) #2
  %261 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.end(i64 8, i8* %261) #2
  %262 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %262) #2
  %263 = load i32, i32* %retval
  ret i32 %263
}

; Function Attrs: nounwind uwtable
define i32 @constant_color_quadrangle(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p, i32 %self_intersecting) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %self_intersecting.addr = alloca i32, align 4
  %c = alloca [3 x %struct.patch_color_s*], align 16
  %color_stack_ptr = alloca i8*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i32 %self_intersecting, i32* %self_intersecting.addr, align 4, !tbaa !5
  %0 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 24, i8* %0) #2
  %1 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %2, %struct.patch_color_s** %arraydecay, i32 3) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp = icmp eq i8* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %6 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %7 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %arraydecay1 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call2 = call i32 @constant_color_quadrangle_aux(%struct.patch_fill_state_s* %5, %struct.quadrangle_patch* %6, i32 %7, %struct.patch_color_s** %arraydecay1) #5
  store i32 %call2, i32* %code, align 4, !tbaa !5
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %9 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %8, i8* %9, i32 3) #5
  %10 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %11 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %11) #2
  %12 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #2
  %13 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 24, i8* %13) #2
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @constant_color_quadrangle_aux(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p, i32 %self_intersecting, %struct.patch_color_s** %c) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %self_intersecting.addr = alloca i32, align 4
  %c.addr = alloca %struct.patch_color_s**, align 8
  %q = alloca [4 x %struct.gs_fixed_point_s], align 16
  %ry = alloca i32, align 4
  %ey = alloca i32, align 4
  %code = alloca i32, align 4
  %swap_axes = alloca i32, align 4
  %dc = alloca %struct.gx_device_color_s, align 8
  %orient = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %qq = alloca [4 x %struct.gs_fixed_point_s], align 16
  %dx1 = alloca i32, align 4
  %dy1 = alloca i32, align 4
  %dx3 = alloca i32, align 4
  %dy3 = alloca i32, align 4
  %g13 = alloca i64, align 8
  %h13 = alloca i64, align 8
  %dx2 = alloca i32, align 4
  %dy2 = alloca i32, align 4
  %g23 = alloca i64, align 8
  %h23 = alloca i64, align 8
  %g12 = alloca i64, align 8
  %h12 = alloca i64, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i32 %self_intersecting, i32* %self_intersecting.addr, align 4, !tbaa !5
  store %struct.patch_color_s** %c, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %0 = bitcast [4 x %struct.gs_fixed_point_s]* %q to i8*
  call void @llvm.lifetime.start(i64 32, i8* %0) #2
  %1 = bitcast i32* %ry to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %ey to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %swap_axes to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  store i32 0, i32* %swap_axes, align 4, !tbaa !5
  %5 = bitcast %struct.gx_device_color_s* %dc to i8*
  call void @llvm.lifetime.start(i64 656, i8* %5) #2
  %6 = bitcast i32* %orient to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  call void @draw_quadrangle(%struct.quadrangle_patch* %7, i64 65280) #5
  %8 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %8, i64 1
  %9 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %10 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %10, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx3 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2, i32 0, i64 0
  %11 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx3, align 8, !tbaa !1
  %c4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %11, i32 0, i32 1
  %12 = load %struct.patch_color_s*, %struct.patch_color_s** %c4, align 8, !tbaa !150
  %13 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %13, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p5, i32 0, i64 0
  %arrayidx7 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx6, i32 0, i64 1
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx7, align 8, !tbaa !1
  %c8 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 1
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %c8, align 8, !tbaa !150
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %9, %struct.patch_color_s* %12, %struct.patch_color_s* %15, %struct.patch_fill_state_s* %16, double 5.000000e-01) #5
  %17 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %17, i64 2
  %18 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx9, align 8, !tbaa !1
  %19 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %19, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p10, i32 0, i64 1
  %arrayidx12 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx11, i32 0, i64 0
  %20 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx12, align 8, !tbaa !1
  %c13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %20, i32 0, i32 1
  %21 = load %struct.patch_color_s*, %struct.patch_color_s** %c13, align 8, !tbaa !150
  %22 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p14 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %22, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p14, i32 0, i64 1
  %arrayidx16 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx15, i32 0, i64 1
  %23 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx16, align 8, !tbaa !1
  %c17 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %23, i32 0, i32 1
  %24 = load %struct.patch_color_s*, %struct.patch_color_s** %c17, align 8, !tbaa !150
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %18, %struct.patch_color_s* %21, %struct.patch_color_s* %24, %struct.patch_fill_state_s* %25, double 5.000000e-01) #5
  %26 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %26, i64 0
  %27 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx18, align 8, !tbaa !1
  %28 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %28, i64 1
  %29 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx19, align 8, !tbaa !1
  %30 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %30, i64 2
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx20, align 8, !tbaa !1
  %32 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %27, %struct.patch_color_s* %29, %struct.patch_color_s* %31, %struct.patch_fill_state_s* %32, double 5.000000e-01) #5
  %33 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %34 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %34, i64 0
  %35 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx21, align 8, !tbaa !1
  %call = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %33, %struct.patch_color_s* %35, %struct.gx_device_color_s* %dc, i32* null) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %36 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %36, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %37 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %37, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end:                                           ; preds = %entry
  %38 = bitcast [4 x %struct.gs_fixed_point_s]* %qq to i8*
  call void @llvm.lifetime.start(i64 32, i8* %38) #2
  %arraydecay = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %qq, i32 0, i32 0
  %39 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  call void @make_vertices(%struct.gs_fixed_point_s* %arraydecay, %struct.quadrangle_patch* %39) #5
  %arraydecay22 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arraydecay23 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %qq, i32 0, i32 0
  call void @wrap_vertices_by_y(%struct.gs_fixed_point_s* %arraydecay22, %struct.gs_fixed_point_s* %arraydecay23) #5
  %40 = bitcast [4 x %struct.gs_fixed_point_s]* %qq to i8*
  call void @llvm.lifetime.end(i64 32, i8* %40) #2
  %41 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %41) #2
  %arrayidx24 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx24, i32 0, i32 0
  %42 = load i32, i32* %x, align 4, !tbaa !109
  %arrayidx25 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx25, i32 0, i32 0
  %43 = load i32, i32* %x26, align 4, !tbaa !109
  %sub = sub nsw i32 %42, %43
  store i32 %sub, i32* %dx1, align 4, !tbaa !5
  %44 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #2
  %arrayidx27 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx27, i32 0, i32 1
  %45 = load i32, i32* %y, align 4, !tbaa !110
  %arrayidx28 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx28, i32 0, i32 1
  %46 = load i32, i32* %y29, align 4, !tbaa !110
  %sub30 = sub nsw i32 %45, %46
  store i32 %sub30, i32* %dy1, align 4, !tbaa !5
  %47 = bitcast i32* %dx3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %47) #2
  %arrayidx31 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %x32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx31, i32 0, i32 0
  %48 = load i32, i32* %x32, align 4, !tbaa !109
  %arrayidx33 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %x34 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx33, i32 0, i32 0
  %49 = load i32, i32* %x34, align 4, !tbaa !109
  %sub35 = sub nsw i32 %48, %49
  store i32 %sub35, i32* %dx3, align 4, !tbaa !5
  %50 = bitcast i32* %dy3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %50) #2
  %arrayidx36 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx36, i32 0, i32 1
  %51 = load i32, i32* %y37, align 4, !tbaa !110
  %arrayidx38 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx38, i32 0, i32 1
  %52 = load i32, i32* %y39, align 4, !tbaa !110
  %sub40 = sub nsw i32 %51, %52
  store i32 %sub40, i32* %dy3, align 4, !tbaa !5
  %53 = bitcast i64* %g13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %53) #2
  %54 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv = sext i32 %54 to i64
  %55 = load i32, i32* %dy3, align 4, !tbaa !5
  %conv41 = sext i32 %55 to i64
  %mul = mul nsw i64 %conv, %conv41
  store i64 %mul, i64* %g13, align 8, !tbaa !107
  %56 = bitcast i64* %h13 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %56) #2
  %57 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv42 = sext i32 %57 to i64
  %58 = load i32, i32* %dx3, align 4, !tbaa !5
  %conv43 = sext i32 %58 to i64
  %mul44 = mul nsw i64 %conv42, %conv43
  store i64 %mul44, i64* %h13, align 8, !tbaa !107
  %59 = load i64, i64* %g13, align 8, !tbaa !107
  %60 = load i64, i64* %h13, align 8, !tbaa !107
  %cmp45 = icmp eq i64 %59, %60
  br i1 %cmp45, label %if.then.47, label %if.end.181

if.then.47:                                       ; preds = %if.end
  %61 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %61) #2
  %arrayidx48 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %x49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx48, i32 0, i32 0
  %62 = load i32, i32* %x49, align 4, !tbaa !109
  %arrayidx50 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %x51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx50, i32 0, i32 0
  %63 = load i32, i32* %x51, align 4, !tbaa !109
  %sub52 = sub nsw i32 %62, %63
  store i32 %sub52, i32* %dx2, align 4, !tbaa !5
  %64 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %64) #2
  %arrayidx53 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx53, i32 0, i32 1
  %65 = load i32, i32* %y54, align 4, !tbaa !110
  %arrayidx55 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx55, i32 0, i32 1
  %66 = load i32, i32* %y56, align 4, !tbaa !110
  %sub57 = sub nsw i32 %65, %66
  store i32 %sub57, i32* %dy2, align 4, !tbaa !5
  %67 = bitcast i64* %g23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %67) #2
  %68 = load i32, i32* %dx2, align 4, !tbaa !5
  %conv58 = sext i32 %68 to i64
  %69 = load i32, i32* %dy3, align 4, !tbaa !5
  %conv59 = sext i32 %69 to i64
  %mul60 = mul nsw i64 %conv58, %conv59
  store i64 %mul60, i64* %g23, align 8, !tbaa !107
  %70 = bitcast i64* %h23 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %70) #2
  %71 = load i32, i32* %dy2, align 4, !tbaa !5
  %conv61 = sext i32 %71 to i64
  %72 = load i32, i32* %dx3, align 4, !tbaa !5
  %conv62 = sext i32 %72 to i64
  %mul63 = mul nsw i64 %conv61, %conv62
  store i64 %mul63, i64* %h23, align 8, !tbaa !107
  %73 = load i32, i32* %dx1, align 4, !tbaa !5
  %cmp64 = icmp eq i32 %73, 0
  br i1 %cmp64, label %land.lhs.true, label %if.end.72

land.lhs.true:                                    ; preds = %if.then.47
  %74 = load i32, i32* %dy1, align 4, !tbaa !5
  %cmp66 = icmp eq i32 %74, 0
  br i1 %cmp66, label %land.lhs.true.68, label %if.end.72

land.lhs.true.68:                                 ; preds = %land.lhs.true
  %75 = load i64, i64* %g23, align 8, !tbaa !107
  %76 = load i64, i64* %h23, align 8, !tbaa !107
  %cmp69 = icmp eq i64 %75, %76
  br i1 %cmp69, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %land.lhs.true.68
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.177

if.end.72:                                        ; preds = %land.lhs.true.68, %land.lhs.true, %if.then.47
  %77 = load i64, i64* %g23, align 8, !tbaa !107
  %78 = load i64, i64* %h23, align 8, !tbaa !107
  %cmp73 = icmp ne i64 %77, %78
  br i1 %cmp73, label %if.then.75, label %if.else.117

if.then.75:                                       ; preds = %if.end.72
  %79 = load i64, i64* %g23, align 8, !tbaa !107
  %80 = load i64, i64* %h23, align 8, !tbaa !107
  %cmp76 = icmp sgt i64 %79, %80
  %conv77 = zext i1 %cmp76 to i32
  store i32 %conv77, i32* %orient, align 4, !tbaa !5
  %arrayidx78 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y79 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx78, i32 0, i32 1
  %81 = load i32, i32* %y79, align 4, !tbaa !110
  %arrayidx80 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx80, i32 0, i32 1
  %82 = load i32, i32* %y81, align 4, !tbaa !110
  %cmp82 = icmp sle i32 %81, %82
  br i1 %cmp82, label %if.then.84, label %if.else

if.then.84:                                       ; preds = %if.then.75
  %83 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay85 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y87 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx86, i32 0, i32 1
  %84 = load i32, i32* %y87, align 4, !tbaa !110
  %arrayidx88 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y89 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx88, i32 0, i32 1
  %85 = load i32, i32* %y89, align 4, !tbaa !110
  %86 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %87 = load i32, i32* %orient, align 4, !tbaa !5
  %call90 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %83, %struct.gs_fixed_point_s* %arraydecay85, i32 1, i32 2, i32 0, i32 3, i32 %84, i32 %85, i32 %86, %struct.gx_device_color_s* %dc, i32 %87) #5
  store i32 %call90, i32* %code, align 4, !tbaa !5
  %cmp91 = icmp slt i32 %call90, 0
  br i1 %cmp91, label %if.then.93, label %if.end.94

if.then.93:                                       ; preds = %if.then.84
  %88 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %88, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.177

if.end.94:                                        ; preds = %if.then.84
  %89 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay95 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx96 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y97 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx96, i32 0, i32 1
  %90 = load i32, i32* %y97, align 4, !tbaa !110
  %arrayidx98 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y99 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx98, i32 0, i32 1
  %91 = load i32, i32* %y99, align 4, !tbaa !110
  %92 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %93 = load i32, i32* %orient, align 4, !tbaa !5
  %call100 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %89, %struct.gs_fixed_point_s* %arraydecay95, i32 2, i32 3, i32 0, i32 3, i32 %90, i32 %91, i32 %92, %struct.gx_device_color_s* %dc, i32 %93) #5
  store i32 %call100, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.177

if.else:                                          ; preds = %if.then.75
  %94 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay101 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx102 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y103 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx102, i32 0, i32 1
  %95 = load i32, i32* %y103, align 4, !tbaa !110
  %arrayidx104 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx104, i32 0, i32 1
  %96 = load i32, i32* %y105, align 4, !tbaa !110
  %97 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %98 = load i32, i32* %orient, align 4, !tbaa !5
  %call106 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %94, %struct.gs_fixed_point_s* %arraydecay101, i32 1, i32 2, i32 0, i32 3, i32 %95, i32 %96, i32 %97, %struct.gx_device_color_s* %dc, i32 %98) #5
  store i32 %call106, i32* %code, align 4, !tbaa !5
  %cmp107 = icmp slt i32 %call106, 0
  br i1 %cmp107, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %if.else
  %99 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %99, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.177

if.end.110:                                       ; preds = %if.else
  %100 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay111 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx112 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y113 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx112, i32 0, i32 1
  %101 = load i32, i32* %y113, align 4, !tbaa !110
  %arrayidx114 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y115 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx114, i32 0, i32 1
  %102 = load i32, i32* %y115, align 4, !tbaa !110
  %103 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %104 = load i32, i32* %orient, align 4, !tbaa !5
  %call116 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %100, %struct.gs_fixed_point_s* %arraydecay111, i32 1, i32 2, i32 3, i32 2, i32 %101, i32 %102, i32 %103, %struct.gx_device_color_s* %dc, i32 %104) #5
  store i32 %call116, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.177

if.else.117:                                      ; preds = %if.end.72
  %105 = bitcast i64* %g12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %105) #2
  %106 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv118 = sext i32 %106 to i64
  %107 = load i32, i32* %dy2, align 4, !tbaa !5
  %conv119 = sext i32 %107 to i64
  %mul120 = mul nsw i64 %conv118, %conv119
  store i64 %mul120, i64* %g12, align 8, !tbaa !107
  %108 = bitcast i64* %h12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %108) #2
  %109 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv121 = sext i32 %109 to i64
  %110 = load i32, i32* %dx2, align 4, !tbaa !5
  %conv122 = sext i32 %110 to i64
  %mul123 = mul nsw i64 %conv121, %conv122
  store i64 %mul123, i64* %h12, align 8, !tbaa !107
  %111 = load i32, i32* %dx3, align 4, !tbaa !5
  %cmp124 = icmp eq i32 %111, 0
  br i1 %cmp124, label %land.lhs.true.126, label %if.end.133

land.lhs.true.126:                                ; preds = %if.else.117
  %112 = load i32, i32* %dy3, align 4, !tbaa !5
  %cmp127 = icmp eq i32 %112, 0
  br i1 %cmp127, label %land.lhs.true.129, label %if.end.133

land.lhs.true.129:                                ; preds = %land.lhs.true.126
  %113 = load i64, i64* %g12, align 8, !tbaa !107
  %114 = load i64, i64* %h12, align 8, !tbaa !107
  %cmp130 = icmp eq i64 %113, %114
  br i1 %cmp130, label %if.then.132, label %if.end.133

if.then.132:                                      ; preds = %land.lhs.true.129
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.133:                                       ; preds = %land.lhs.true.129, %land.lhs.true.126, %if.else.117
  %115 = load i64, i64* %g12, align 8, !tbaa !107
  %116 = load i64, i64* %h12, align 8, !tbaa !107
  %cmp134 = icmp sgt i64 %115, %116
  %conv135 = zext i1 %cmp134 to i32
  store i32 %conv135, i32* %orient, align 4, !tbaa !5
  %arrayidx136 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y137 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx136, i32 0, i32 1
  %117 = load i32, i32* %y137, align 4, !tbaa !110
  %arrayidx138 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y139 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx138, i32 0, i32 1
  %118 = load i32, i32* %y139, align 4, !tbaa !110
  %cmp140 = icmp sle i32 %117, %118
  br i1 %cmp140, label %if.then.142, label %if.else.159

if.then.142:                                      ; preds = %if.end.133
  %119 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay143 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx144 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y145 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx144, i32 0, i32 1
  %120 = load i32, i32* %y145, align 4, !tbaa !110
  %arrayidx146 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y147 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx146, i32 0, i32 1
  %121 = load i32, i32* %y147, align 4, !tbaa !110
  %122 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %123 = load i32, i32* %orient, align 4, !tbaa !5
  %call148 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %119, %struct.gs_fixed_point_s* %arraydecay143, i32 0, i32 1, i32 3, i32 2, i32 %120, i32 %121, i32 %122, %struct.gx_device_color_s* %dc, i32 %123) #5
  store i32 %call148, i32* %code, align 4, !tbaa !5
  %cmp149 = icmp slt i32 %call148, 0
  br i1 %cmp149, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.then.142
  %124 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %124, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.152:                                       ; preds = %if.then.142
  %125 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay153 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx154 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y155 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx154, i32 0, i32 1
  %126 = load i32, i32* %y155, align 4, !tbaa !110
  %arrayidx156 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y157 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx156, i32 0, i32 1
  %127 = load i32, i32* %y157, align 4, !tbaa !110
  %128 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %129 = load i32, i32* %orient, align 4, !tbaa !5
  %call158 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %125, %struct.gs_fixed_point_s* %arraydecay153, i32 1, i32 2, i32 3, i32 2, i32 %126, i32 %127, i32 %128, %struct.gx_device_color_s* %dc, i32 %129) #5
  store i32 %call158, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.159:                                      ; preds = %if.end.133
  %130 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay160 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx161 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx161, i32 0, i32 1
  %131 = load i32, i32* %y162, align 4, !tbaa !110
  %arrayidx163 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y164 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx163, i32 0, i32 1
  %132 = load i32, i32* %y164, align 4, !tbaa !110
  %133 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %134 = load i32, i32* %orient, align 4, !tbaa !5
  %call165 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %130, %struct.gs_fixed_point_s* %arraydecay160, i32 0, i32 1, i32 3, i32 2, i32 %131, i32 %132, i32 %133, %struct.gx_device_color_s* %dc, i32 %134) #5
  store i32 %call165, i32* %code, align 4, !tbaa !5
  %cmp166 = icmp slt i32 %call165, 0
  br i1 %cmp166, label %if.then.168, label %if.end.169

if.then.168:                                      ; preds = %if.else.159
  %135 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %135, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.169:                                       ; preds = %if.else.159
  %136 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay170 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx171 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y172 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx171, i32 0, i32 1
  %137 = load i32, i32* %y172, align 4, !tbaa !110
  %arrayidx173 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y174 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx173, i32 0, i32 1
  %138 = load i32, i32* %y174, align 4, !tbaa !110
  %139 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %140 = load i32, i32* %orient, align 4, !tbaa !5
  %call175 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %136, %struct.gs_fixed_point_s* %arraydecay170, i32 0, i32 1, i32 2, i32 1, i32 %137, i32 %138, i32 %139, %struct.gx_device_color_s* %dc, i32 %140) #5
  store i32 %call175, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.169, %if.then.168, %if.end.152, %if.then.151, %if.then.132
  %141 = bitcast i64* %h12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %141) #2
  %142 = bitcast i64* %g12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %142) #2
  br label %cleanup.177

cleanup.177:                                      ; preds = %cleanup, %if.end.110, %if.then.109, %if.end.94, %if.then.93, %if.then.71
  %143 = bitcast i64* %h23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %143) #2
  %144 = bitcast i64* %g23 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %144) #2
  %145 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %145) #2
  %146 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %146) #2
  br label %cleanup.190

if.end.181:                                       ; preds = %if.end
  %147 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv182 = sext i32 %147 to i64
  %148 = load i32, i32* %dy3, align 4, !tbaa !5
  %conv183 = sext i32 %148 to i64
  %mul184 = mul nsw i64 %conv182, %conv183
  %149 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv185 = sext i32 %149 to i64
  %150 = load i32, i32* %dx3, align 4, !tbaa !5
  %conv186 = sext i32 %150 to i64
  %mul187 = mul nsw i64 %conv185, %conv186
  %cmp188 = icmp sgt i64 %mul184, %mul187
  %conv189 = zext i1 %cmp188 to i32
  store i32 %conv189, i32* %orient, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.190

cleanup.190:                                      ; preds = %if.end.181, %cleanup.177
  %151 = bitcast i64* %h13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %151) #2
  %152 = bitcast i64* %g13 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %152) #2
  %153 = bitcast i32* %dy3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153) #2
  %154 = bitcast i32* %dx3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %154) #2
  %155 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %155) #2
  %156 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %156) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.748 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup.190
  %arrayidx196 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y197 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx196, i32 0, i32 1
  %157 = load i32, i32* %y197, align 4, !tbaa !110
  %arrayidx198 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y199 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx198, i32 0, i32 1
  %158 = load i32, i32* %y199, align 4, !tbaa !110
  %cmp200 = icmp sle i32 %157, %158
  br i1 %cmp200, label %land.lhs.true.202, label %if.else.274

land.lhs.true.202:                                ; preds = %cleanup.cont
  %arrayidx203 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y204 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx203, i32 0, i32 1
  %159 = load i32, i32* %y204, align 4, !tbaa !110
  %arrayidx205 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y206 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx205, i32 0, i32 1
  %160 = load i32, i32* %y206, align 4, !tbaa !110
  %cmp207 = icmp sle i32 %159, %160
  br i1 %cmp207, label %if.then.209, label %if.else.274

if.then.209:                                      ; preds = %land.lhs.true.202
  %161 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %161, 0
  br i1 %tobool, label %land.lhs.true.210, label %if.else.247

land.lhs.true.210:                                ; preds = %if.then.209
  %arraydecay211 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call212 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay211, i32 0, i32 3, i32 1, i32 2, i32* %ry, i32* %ey) #5
  %tobool213 = icmp ne i32 %call212, 0
  br i1 %tobool213, label %if.then.214, label %if.else.247

if.then.214:                                      ; preds = %land.lhs.true.210
  %162 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay215 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y217 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx216, i32 0, i32 1
  %163 = load i32, i32* %y217, align 4, !tbaa !110
  %arrayidx218 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y219 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx218, i32 0, i32 1
  %164 = load i32, i32* %y219, align 4, !tbaa !110
  %165 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %166 = load i32, i32* %orient, align 4, !tbaa !5
  %call220 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %162, %struct.gs_fixed_point_s* %arraydecay215, i32 0, i32 1, i32 0, i32 3, i32 %163, i32 %164, i32 %165, %struct.gx_device_color_s* %dc, i32 %166) #5
  store i32 %call220, i32* %code, align 4, !tbaa !5
  %cmp221 = icmp slt i32 %call220, 0
  br i1 %cmp221, label %if.then.223, label %if.end.224

if.then.223:                                      ; preds = %if.then.214
  %167 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %167, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.224:                                       ; preds = %if.then.214
  %168 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay225 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx226 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y227 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx226, i32 0, i32 1
  %169 = load i32, i32* %y227, align 4, !tbaa !110
  %170 = load i32, i32* %ry, align 4, !tbaa !5
  %171 = load i32, i32* %ey, align 4, !tbaa !5
  %add = add nsw i32 %170, %171
  %172 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %173 = load i32, i32* %orient, align 4, !tbaa !5
  %call228 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %168, %struct.gs_fixed_point_s* %arraydecay225, i32 0, i32 3, i32 1, i32 2, i32 %169, i32 %add, i32 %172, %struct.gx_device_color_s* %dc, i32 %173) #5
  store i32 %call228, i32* %code, align 4, !tbaa !5
  %cmp229 = icmp slt i32 %call228, 0
  br i1 %cmp229, label %if.then.231, label %if.end.232

if.then.231:                                      ; preds = %if.end.224
  %174 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %174, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.232:                                       ; preds = %if.end.224
  %175 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay233 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %176 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx234 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y235 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx234, i32 0, i32 1
  %177 = load i32, i32* %y235, align 4, !tbaa !110
  %178 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %179 = load i32, i32* %orient, align 4, !tbaa !5
  %call236 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %175, %struct.gs_fixed_point_s* %arraydecay233, i32 1, i32 2, i32 0, i32 3, i32 %176, i32 %177, i32 %178, %struct.gx_device_color_s* %dc, i32 %179) #5
  store i32 %call236, i32* %code, align 4, !tbaa !5
  %cmp237 = icmp slt i32 %call236, 0
  br i1 %cmp237, label %if.then.239, label %if.end.240

if.then.239:                                      ; preds = %if.end.232
  %180 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %180, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.240:                                       ; preds = %if.end.232
  %181 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay241 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx242 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y243 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx242, i32 0, i32 1
  %182 = load i32, i32* %y243, align 4, !tbaa !110
  %arrayidx244 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y245 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx244, i32 0, i32 1
  %183 = load i32, i32* %y245, align 4, !tbaa !110
  %184 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %185 = load i32, i32* %orient, align 4, !tbaa !5
  %call246 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %181, %struct.gs_fixed_point_s* %arraydecay241, i32 0, i32 3, i32 2, i32 3, i32 %182, i32 %183, i32 %184, %struct.gx_device_color_s* %dc, i32 %185) #5
  store i32 %call246, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.247:                                      ; preds = %land.lhs.true.210, %if.then.209
  %186 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay248 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx249 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y250 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx249, i32 0, i32 1
  %187 = load i32, i32* %y250, align 4, !tbaa !110
  %arrayidx251 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y252 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx251, i32 0, i32 1
  %188 = load i32, i32* %y252, align 4, !tbaa !110
  %189 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %190 = load i32, i32* %orient, align 4, !tbaa !5
  %call253 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %186, %struct.gs_fixed_point_s* %arraydecay248, i32 0, i32 1, i32 0, i32 3, i32 %187, i32 %188, i32 %189, %struct.gx_device_color_s* %dc, i32 %190) #5
  store i32 %call253, i32* %code, align 4, !tbaa !5
  %cmp254 = icmp slt i32 %call253, 0
  br i1 %cmp254, label %if.then.256, label %if.end.257

if.then.256:                                      ; preds = %if.else.247
  %191 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %191, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.257:                                       ; preds = %if.else.247
  %192 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay258 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx259 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y260 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx259, i32 0, i32 1
  %193 = load i32, i32* %y260, align 4, !tbaa !110
  %arrayidx261 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y262 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx261, i32 0, i32 1
  %194 = load i32, i32* %y262, align 4, !tbaa !110
  %195 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %196 = load i32, i32* %orient, align 4, !tbaa !5
  %call263 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %192, %struct.gs_fixed_point_s* %arraydecay258, i32 1, i32 2, i32 0, i32 3, i32 %193, i32 %194, i32 %195, %struct.gx_device_color_s* %dc, i32 %196) #5
  store i32 %call263, i32* %code, align 4, !tbaa !5
  %cmp264 = icmp slt i32 %call263, 0
  br i1 %cmp264, label %if.then.266, label %if.end.267

if.then.266:                                      ; preds = %if.end.257
  %197 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %197, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.267:                                       ; preds = %if.end.257
  %198 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay268 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx269 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y270 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx269, i32 0, i32 1
  %199 = load i32, i32* %y270, align 4, !tbaa !110
  %arrayidx271 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y272 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx271, i32 0, i32 1
  %200 = load i32, i32* %y272, align 4, !tbaa !110
  %201 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %202 = load i32, i32* %orient, align 4, !tbaa !5
  %call273 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %198, %struct.gs_fixed_point_s* %arraydecay268, i32 2, i32 3, i32 0, i32 3, i32 %199, i32 %200, i32 %201, %struct.gx_device_color_s* %dc, i32 %202) #5
  store i32 %call273, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.274:                                      ; preds = %land.lhs.true.202, %cleanup.cont
  %arrayidx275 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y276 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx275, i32 0, i32 1
  %203 = load i32, i32* %y276, align 4, !tbaa !110
  %arrayidx277 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y278 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx277, i32 0, i32 1
  %204 = load i32, i32* %y278, align 4, !tbaa !110
  %cmp279 = icmp sle i32 %203, %204
  br i1 %cmp279, label %land.lhs.true.281, label %if.else.355

land.lhs.true.281:                                ; preds = %if.else.274
  %arrayidx282 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y283 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx282, i32 0, i32 1
  %205 = load i32, i32* %y283, align 4, !tbaa !110
  %arrayidx284 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y285 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx284, i32 0, i32 1
  %206 = load i32, i32* %y285, align 4, !tbaa !110
  %cmp286 = icmp sle i32 %205, %206
  br i1 %cmp286, label %if.then.288, label %if.else.355

if.then.288:                                      ; preds = %land.lhs.true.281
  %207 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool289 = icmp ne i32 %207, 0
  br i1 %tobool289, label %land.lhs.true.290, label %if.else.328

land.lhs.true.290:                                ; preds = %if.then.288
  %arraydecay291 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call292 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay291, i32 0, i32 3, i32 1, i32 2, i32* %ry, i32* %ey) #5
  %tobool293 = icmp ne i32 %call292, 0
  br i1 %tobool293, label %if.then.294, label %if.else.328

if.then.294:                                      ; preds = %land.lhs.true.290
  %208 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay295 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx296 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y297 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx296, i32 0, i32 1
  %209 = load i32, i32* %y297, align 4, !tbaa !110
  %arrayidx298 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y299 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx298, i32 0, i32 1
  %210 = load i32, i32* %y299, align 4, !tbaa !110
  %211 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %212 = load i32, i32* %orient, align 4, !tbaa !5
  %call300 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %208, %struct.gs_fixed_point_s* %arraydecay295, i32 0, i32 1, i32 0, i32 3, i32 %209, i32 %210, i32 %211, %struct.gx_device_color_s* %dc, i32 %212) #5
  store i32 %call300, i32* %code, align 4, !tbaa !5
  %cmp301 = icmp slt i32 %call300, 0
  br i1 %cmp301, label %if.then.303, label %if.end.304

if.then.303:                                      ; preds = %if.then.294
  %213 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %213, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.304:                                       ; preds = %if.then.294
  %214 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay305 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx306 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y307 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx306, i32 0, i32 1
  %215 = load i32, i32* %y307, align 4, !tbaa !110
  %216 = load i32, i32* %ry, align 4, !tbaa !5
  %217 = load i32, i32* %ey, align 4, !tbaa !5
  %add308 = add nsw i32 %216, %217
  %218 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %219 = load i32, i32* %orient, align 4, !tbaa !5
  %call309 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %214, %struct.gs_fixed_point_s* %arraydecay305, i32 1, i32 2, i32 0, i32 3, i32 %215, i32 %add308, i32 %218, %struct.gx_device_color_s* %dc, i32 %219) #5
  store i32 %call309, i32* %code, align 4, !tbaa !5
  %cmp310 = icmp slt i32 %call309, 0
  br i1 %cmp310, label %if.then.312, label %if.end.313

if.then.312:                                      ; preds = %if.end.304
  %220 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %220, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.313:                                       ; preds = %if.end.304
  %221 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay314 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %222 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx315 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y316 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx315, i32 0, i32 1
  %223 = load i32, i32* %y316, align 4, !tbaa !110
  %224 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %225 = load i32, i32* %orient, align 4, !tbaa !5
  %call317 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %221, %struct.gs_fixed_point_s* %arraydecay314, i32 0, i32 3, i32 1, i32 2, i32 %222, i32 %223, i32 %224, %struct.gx_device_color_s* %dc, i32 %225) #5
  store i32 %call317, i32* %code, align 4, !tbaa !5
  %cmp318 = icmp slt i32 %call317, 0
  br i1 %cmp318, label %if.then.320, label %if.end.321

if.then.320:                                      ; preds = %if.end.313
  %226 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %226, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.321:                                       ; preds = %if.end.313
  %227 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay322 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx323 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y324 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx323, i32 0, i32 1
  %228 = load i32, i32* %y324, align 4, !tbaa !110
  %arrayidx325 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y326 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx325, i32 0, i32 1
  %229 = load i32, i32* %y326, align 4, !tbaa !110
  %230 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %231 = load i32, i32* %orient, align 4, !tbaa !5
  %call327 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %227, %struct.gs_fixed_point_s* %arraydecay322, i32 3, i32 2, i32 1, i32 2, i32 %228, i32 %229, i32 %230, %struct.gx_device_color_s* %dc, i32 %231) #5
  store i32 %call327, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.328:                                      ; preds = %land.lhs.true.290, %if.then.288
  %232 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay329 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx330 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y331 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx330, i32 0, i32 1
  %233 = load i32, i32* %y331, align 4, !tbaa !110
  %arrayidx332 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y333 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx332, i32 0, i32 1
  %234 = load i32, i32* %y333, align 4, !tbaa !110
  %235 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %236 = load i32, i32* %orient, align 4, !tbaa !5
  %call334 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %232, %struct.gs_fixed_point_s* %arraydecay329, i32 0, i32 1, i32 0, i32 3, i32 %233, i32 %234, i32 %235, %struct.gx_device_color_s* %dc, i32 %236) #5
  store i32 %call334, i32* %code, align 4, !tbaa !5
  %cmp335 = icmp slt i32 %call334, 0
  br i1 %cmp335, label %if.then.337, label %if.end.338

if.then.337:                                      ; preds = %if.else.328
  %237 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %237, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.338:                                       ; preds = %if.else.328
  %238 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay339 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx340 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y341 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx340, i32 0, i32 1
  %239 = load i32, i32* %y341, align 4, !tbaa !110
  %arrayidx342 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y343 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx342, i32 0, i32 1
  %240 = load i32, i32* %y343, align 4, !tbaa !110
  %241 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %242 = load i32, i32* %orient, align 4, !tbaa !5
  %call344 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %238, %struct.gs_fixed_point_s* %arraydecay339, i32 1, i32 2, i32 0, i32 3, i32 %239, i32 %240, i32 %241, %struct.gx_device_color_s* %dc, i32 %242) #5
  store i32 %call344, i32* %code, align 4, !tbaa !5
  %cmp345 = icmp slt i32 %call344, 0
  br i1 %cmp345, label %if.then.347, label %if.end.348

if.then.347:                                      ; preds = %if.end.338
  %243 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %243, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.348:                                       ; preds = %if.end.338
  %244 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay349 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx350 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y351 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx350, i32 0, i32 1
  %245 = load i32, i32* %y351, align 4, !tbaa !110
  %arrayidx352 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y353 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx352, i32 0, i32 1
  %246 = load i32, i32* %y353, align 4, !tbaa !110
  %247 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %248 = load i32, i32* %orient, align 4, !tbaa !5
  %call354 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %244, %struct.gs_fixed_point_s* %arraydecay349, i32 1, i32 2, i32 3, i32 2, i32 %245, i32 %246, i32 %247, %struct.gx_device_color_s* %dc, i32 %248) #5
  store i32 %call354, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.355:                                      ; preds = %land.lhs.true.281, %if.else.274
  %arrayidx356 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y357 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx356, i32 0, i32 1
  %249 = load i32, i32* %y357, align 4, !tbaa !110
  %arrayidx358 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y359 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx358, i32 0, i32 1
  %250 = load i32, i32* %y359, align 4, !tbaa !110
  %cmp360 = icmp sle i32 %249, %250
  br i1 %cmp360, label %land.lhs.true.362, label %if.else.470

land.lhs.true.362:                                ; preds = %if.else.355
  %arrayidx363 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y364 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx363, i32 0, i32 1
  %251 = load i32, i32* %y364, align 4, !tbaa !110
  %arrayidx365 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y366 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx365, i32 0, i32 1
  %252 = load i32, i32* %y366, align 4, !tbaa !110
  %cmp367 = icmp sle i32 %251, %252
  br i1 %cmp367, label %if.then.369, label %if.else.470

if.then.369:                                      ; preds = %land.lhs.true.362
  %253 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool370 = icmp ne i32 %253, 0
  br i1 %tobool370, label %land.lhs.true.371, label %if.else.406

land.lhs.true.371:                                ; preds = %if.then.369
  %arraydecay372 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call373 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay372, i32 0, i32 1, i32 2, i32 3, i32* %ry, i32* %ey) #5
  %tobool374 = icmp ne i32 %call373, 0
  br i1 %tobool374, label %if.then.375, label %if.else.406

if.then.375:                                      ; preds = %land.lhs.true.371
  %254 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay376 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx377 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y378 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx377, i32 0, i32 1
  %255 = load i32, i32* %y378, align 4, !tbaa !110
  %256 = load i32, i32* %ry, align 4, !tbaa !5
  %257 = load i32, i32* %ey, align 4, !tbaa !5
  %add379 = add nsw i32 %256, %257
  %258 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %259 = load i32, i32* %orient, align 4, !tbaa !5
  %call380 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %254, %struct.gs_fixed_point_s* %arraydecay376, i32 0, i32 1, i32 0, i32 3, i32 %255, i32 %add379, i32 %258, %struct.gx_device_color_s* %dc, i32 %259) #5
  store i32 %call380, i32* %code, align 4, !tbaa !5
  %cmp381 = icmp slt i32 %call380, 0
  br i1 %cmp381, label %if.then.383, label %if.end.384

if.then.383:                                      ; preds = %if.then.375
  %260 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %260, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.384:                                       ; preds = %if.then.375
  %261 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay385 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx386 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y387 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx386, i32 0, i32 1
  %262 = load i32, i32* %y387, align 4, !tbaa !110
  %263 = load i32, i32* %ry, align 4, !tbaa !5
  %264 = load i32, i32* %ey, align 4, !tbaa !5
  %add388 = add nsw i32 %263, %264
  %265 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %266 = load i32, i32* %orient, align 4, !tbaa !5
  %call389 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %261, %struct.gs_fixed_point_s* %arraydecay385, i32 2, i32 1, i32 2, i32 3, i32 %262, i32 %add388, i32 %265, %struct.gx_device_color_s* %dc, i32 %266) #5
  store i32 %call389, i32* %code, align 4, !tbaa !5
  %cmp390 = icmp slt i32 %call389, 0
  br i1 %cmp390, label %if.then.392, label %if.end.393

if.then.392:                                      ; preds = %if.end.384
  %267 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %267, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.393:                                       ; preds = %if.end.384
  %268 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay394 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %269 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx395 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y396 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx395, i32 0, i32 1
  %270 = load i32, i32* %y396, align 4, !tbaa !110
  %271 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %272 = load i32, i32* %orient, align 4, !tbaa !5
  %call397 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %268, %struct.gs_fixed_point_s* %arraydecay394, i32 2, i32 1, i32 0, i32 1, i32 %269, i32 %270, i32 %271, %struct.gx_device_color_s* %dc, i32 %272) #5
  store i32 %call397, i32* %code, align 4, !tbaa !5
  %cmp398 = icmp slt i32 %call397, 0
  br i1 %cmp398, label %if.then.400, label %if.end.401

if.then.400:                                      ; preds = %if.end.393
  %273 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %273, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.401:                                       ; preds = %if.end.393
  %274 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay402 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %275 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx403 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y404 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx403, i32 0, i32 1
  %276 = load i32, i32* %y404, align 4, !tbaa !110
  %277 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %278 = load i32, i32* %orient, align 4, !tbaa !5
  %call405 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %274, %struct.gs_fixed_point_s* %arraydecay402, i32 2, i32 3, i32 0, i32 3, i32 %275, i32 %276, i32 %277, %struct.gx_device_color_s* %dc, i32 %278) #5
  store i32 %call405, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.406:                                      ; preds = %land.lhs.true.371, %if.then.369
  %279 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool407 = icmp ne i32 %279, 0
  br i1 %tobool407, label %land.lhs.true.408, label %if.else.443

land.lhs.true.408:                                ; preds = %if.else.406
  %arraydecay409 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call410 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay409, i32 0, i32 3, i32 1, i32 2, i32* %ry, i32* %ey) #5
  %tobool411 = icmp ne i32 %call410, 0
  br i1 %tobool411, label %if.then.412, label %if.else.443

if.then.412:                                      ; preds = %land.lhs.true.408
  %280 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay413 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx414 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y415 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx414, i32 0, i32 1
  %281 = load i32, i32* %y415, align 4, !tbaa !110
  %282 = load i32, i32* %ry, align 4, !tbaa !5
  %283 = load i32, i32* %ey, align 4, !tbaa !5
  %add416 = add nsw i32 %282, %283
  %284 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %285 = load i32, i32* %orient, align 4, !tbaa !5
  %call417 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %280, %struct.gs_fixed_point_s* %arraydecay413, i32 0, i32 1, i32 0, i32 3, i32 %281, i32 %add416, i32 %284, %struct.gx_device_color_s* %dc, i32 %285) #5
  store i32 %call417, i32* %code, align 4, !tbaa !5
  %cmp418 = icmp slt i32 %call417, 0
  br i1 %cmp418, label %if.then.420, label %if.end.421

if.then.420:                                      ; preds = %if.then.412
  %286 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %286, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.421:                                       ; preds = %if.then.412
  %287 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay422 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx423 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y424 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx423, i32 0, i32 1
  %288 = load i32, i32* %y424, align 4, !tbaa !110
  %289 = load i32, i32* %ry, align 4, !tbaa !5
  %290 = load i32, i32* %ey, align 4, !tbaa !5
  %add425 = add nsw i32 %289, %290
  %291 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %292 = load i32, i32* %orient, align 4, !tbaa !5
  %call426 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %287, %struct.gs_fixed_point_s* %arraydecay422, i32 2, i32 1, i32 2, i32 3, i32 %288, i32 %add425, i32 %291, %struct.gx_device_color_s* %dc, i32 %292) #5
  store i32 %call426, i32* %code, align 4, !tbaa !5
  %cmp427 = icmp slt i32 %call426, 0
  br i1 %cmp427, label %if.then.429, label %if.end.430

if.then.429:                                      ; preds = %if.end.421
  %293 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %293, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.430:                                       ; preds = %if.end.421
  %294 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay431 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %295 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx432 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y433 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx432, i32 0, i32 1
  %296 = load i32, i32* %y433, align 4, !tbaa !110
  %297 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %298 = load i32, i32* %orient, align 4, !tbaa !5
  %call434 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %294, %struct.gs_fixed_point_s* %arraydecay431, i32 0, i32 1, i32 2, i32 1, i32 %295, i32 %296, i32 %297, %struct.gx_device_color_s* %dc, i32 %298) #5
  store i32 %call434, i32* %code, align 4, !tbaa !5
  %cmp435 = icmp slt i32 %call434, 0
  br i1 %cmp435, label %if.then.437, label %if.end.438

if.then.437:                                      ; preds = %if.end.430
  %299 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %299, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.438:                                       ; preds = %if.end.430
  %300 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay439 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %301 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx440 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y441 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx440, i32 0, i32 1
  %302 = load i32, i32* %y441, align 4, !tbaa !110
  %303 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %304 = load i32, i32* %orient, align 4, !tbaa !5
  %call442 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %300, %struct.gs_fixed_point_s* %arraydecay439, i32 0, i32 3, i32 2, i32 3, i32 %301, i32 %302, i32 %303, %struct.gx_device_color_s* %dc, i32 %304) #5
  store i32 %call442, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.443:                                      ; preds = %land.lhs.true.408, %if.else.406
  %305 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay444 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx445 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y446 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx445, i32 0, i32 1
  %306 = load i32, i32* %y446, align 4, !tbaa !110
  %arrayidx447 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y448 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx447, i32 0, i32 1
  %307 = load i32, i32* %y448, align 4, !tbaa !110
  %308 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %309 = load i32, i32* %orient, align 4, !tbaa !5
  %call449 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %305, %struct.gs_fixed_point_s* %arraydecay444, i32 0, i32 1, i32 0, i32 3, i32 %306, i32 %307, i32 %308, %struct.gx_device_color_s* %dc, i32 %309) #5
  store i32 %call449, i32* %code, align 4, !tbaa !5
  %cmp450 = icmp slt i32 %call449, 0
  br i1 %cmp450, label %if.then.452, label %if.end.453

if.then.452:                                      ; preds = %if.else.443
  %310 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %310, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.453:                                       ; preds = %if.else.443
  %311 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay454 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx455 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y456 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx455, i32 0, i32 1
  %312 = load i32, i32* %y456, align 4, !tbaa !110
  %arrayidx457 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y458 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx457, i32 0, i32 1
  %313 = load i32, i32* %y458, align 4, !tbaa !110
  %314 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %315 = load i32, i32* %orient, align 4, !tbaa !5
  %call459 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %311, %struct.gs_fixed_point_s* %arraydecay454, i32 2, i32 3, i32 2, i32 1, i32 %312, i32 %313, i32 %314, %struct.gx_device_color_s* %dc, i32 %315) #5
  store i32 %call459, i32* %code, align 4, !tbaa !5
  %cmp460 = icmp slt i32 %call459, 0
  br i1 %cmp460, label %if.then.462, label %if.end.463

if.then.462:                                      ; preds = %if.end.453
  %316 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %316, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.463:                                       ; preds = %if.end.453
  %317 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay464 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx465 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y466 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx465, i32 0, i32 1
  %318 = load i32, i32* %y466, align 4, !tbaa !110
  %arrayidx467 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y468 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx467, i32 0, i32 1
  %319 = load i32, i32* %y468, align 4, !tbaa !110
  %320 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %321 = load i32, i32* %orient, align 4, !tbaa !5
  %call469 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %317, %struct.gs_fixed_point_s* %arraydecay464, i32 2, i32 3, i32 0, i32 3, i32 %318, i32 %319, i32 %320, %struct.gx_device_color_s* %dc, i32 %321) #5
  store i32 %call469, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.470:                                      ; preds = %land.lhs.true.362, %if.else.355
  %arrayidx471 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y472 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx471, i32 0, i32 1
  %322 = load i32, i32* %y472, align 4, !tbaa !110
  %arrayidx473 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y474 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx473, i32 0, i32 1
  %323 = load i32, i32* %y474, align 4, !tbaa !110
  %cmp475 = icmp sle i32 %322, %323
  br i1 %cmp475, label %land.lhs.true.477, label %if.else.585

land.lhs.true.477:                                ; preds = %if.else.470
  %arrayidx478 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y479 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx478, i32 0, i32 1
  %324 = load i32, i32* %y479, align 4, !tbaa !110
  %arrayidx480 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y481 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx480, i32 0, i32 1
  %325 = load i32, i32* %y481, align 4, !tbaa !110
  %cmp482 = icmp sle i32 %324, %325
  br i1 %cmp482, label %if.then.484, label %if.else.585

if.then.484:                                      ; preds = %land.lhs.true.477
  %326 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool485 = icmp ne i32 %326, 0
  br i1 %tobool485, label %land.lhs.true.486, label %if.else.521

land.lhs.true.486:                                ; preds = %if.then.484
  %arraydecay487 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call488 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay487, i32 0, i32 1, i32 2, i32 3, i32* %ry, i32* %ey) #5
  %tobool489 = icmp ne i32 %call488, 0
  br i1 %tobool489, label %if.then.490, label %if.else.521

if.then.490:                                      ; preds = %land.lhs.true.486
  %327 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay491 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx492 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y493 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx492, i32 0, i32 1
  %328 = load i32, i32* %y493, align 4, !tbaa !110
  %329 = load i32, i32* %ry, align 4, !tbaa !5
  %330 = load i32, i32* %ey, align 4, !tbaa !5
  %add494 = add nsw i32 %329, %330
  %331 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %332 = load i32, i32* %orient, align 4, !tbaa !5
  %call495 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %327, %struct.gs_fixed_point_s* %arraydecay491, i32 0, i32 1, i32 0, i32 3, i32 %328, i32 %add494, i32 %331, %struct.gx_device_color_s* %dc, i32 %332) #5
  store i32 %call495, i32* %code, align 4, !tbaa !5
  %cmp496 = icmp slt i32 %call495, 0
  br i1 %cmp496, label %if.then.498, label %if.end.499

if.then.498:                                      ; preds = %if.then.490
  %333 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %333, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.499:                                       ; preds = %if.then.490
  %334 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay500 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx501 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y502 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx501, i32 0, i32 1
  %335 = load i32, i32* %y502, align 4, !tbaa !110
  %336 = load i32, i32* %ry, align 4, !tbaa !5
  %337 = load i32, i32* %ey, align 4, !tbaa !5
  %add503 = add nsw i32 %336, %337
  %338 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %339 = load i32, i32* %orient, align 4, !tbaa !5
  %call504 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %334, %struct.gs_fixed_point_s* %arraydecay500, i32 2, i32 1, i32 2, i32 3, i32 %335, i32 %add503, i32 %338, %struct.gx_device_color_s* %dc, i32 %339) #5
  store i32 %call504, i32* %code, align 4, !tbaa !5
  %cmp505 = icmp slt i32 %call504, 0
  br i1 %cmp505, label %if.then.507, label %if.end.508

if.then.507:                                      ; preds = %if.end.499
  %340 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %340, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.508:                                       ; preds = %if.end.499
  %341 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay509 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %342 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx510 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y511 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx510, i32 0, i32 1
  %343 = load i32, i32* %y511, align 4, !tbaa !110
  %344 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %345 = load i32, i32* %orient, align 4, !tbaa !5
  %call512 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %341, %struct.gs_fixed_point_s* %arraydecay509, i32 2, i32 1, i32 0, i32 1, i32 %342, i32 %343, i32 %344, %struct.gx_device_color_s* %dc, i32 %345) #5
  store i32 %call512, i32* %code, align 4, !tbaa !5
  %cmp513 = icmp slt i32 %call512, 0
  br i1 %cmp513, label %if.then.515, label %if.end.516

if.then.515:                                      ; preds = %if.end.508
  %346 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %346, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.516:                                       ; preds = %if.end.508
  %347 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay517 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %348 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx518 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y519 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx518, i32 0, i32 1
  %349 = load i32, i32* %y519, align 4, !tbaa !110
  %350 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %351 = load i32, i32* %orient, align 4, !tbaa !5
  %call520 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %347, %struct.gs_fixed_point_s* %arraydecay517, i32 2, i32 3, i32 0, i32 3, i32 %348, i32 %349, i32 %350, %struct.gx_device_color_s* %dc, i32 %351) #5
  store i32 %call520, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.521:                                      ; preds = %land.lhs.true.486, %if.then.484
  %352 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool522 = icmp ne i32 %352, 0
  br i1 %tobool522, label %land.lhs.true.523, label %if.else.558

land.lhs.true.523:                                ; preds = %if.else.521
  %arraydecay524 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call525 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay524, i32 0, i32 3, i32 2, i32 1, i32* %ry, i32* %ey) #5
  %tobool526 = icmp ne i32 %call525, 0
  br i1 %tobool526, label %if.then.527, label %if.else.558

if.then.527:                                      ; preds = %land.lhs.true.523
  %353 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay528 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx529 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y530 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx529, i32 0, i32 1
  %354 = load i32, i32* %y530, align 4, !tbaa !110
  %355 = load i32, i32* %ry, align 4, !tbaa !5
  %356 = load i32, i32* %ey, align 4, !tbaa !5
  %add531 = add nsw i32 %355, %356
  %357 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %358 = load i32, i32* %orient, align 4, !tbaa !5
  %call532 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %353, %struct.gs_fixed_point_s* %arraydecay528, i32 0, i32 1, i32 0, i32 3, i32 %354, i32 %add531, i32 %357, %struct.gx_device_color_s* %dc, i32 %358) #5
  store i32 %call532, i32* %code, align 4, !tbaa !5
  %cmp533 = icmp slt i32 %call532, 0
  br i1 %cmp533, label %if.then.535, label %if.end.536

if.then.535:                                      ; preds = %if.then.527
  %359 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %359, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.536:                                       ; preds = %if.then.527
  %360 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay537 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx538 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y539 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx538, i32 0, i32 1
  %361 = load i32, i32* %y539, align 4, !tbaa !110
  %362 = load i32, i32* %ry, align 4, !tbaa !5
  %363 = load i32, i32* %ey, align 4, !tbaa !5
  %add540 = add nsw i32 %362, %363
  %364 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %365 = load i32, i32* %orient, align 4, !tbaa !5
  %call541 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %360, %struct.gs_fixed_point_s* %arraydecay537, i32 2, i32 1, i32 2, i32 3, i32 %361, i32 %add540, i32 %364, %struct.gx_device_color_s* %dc, i32 %365) #5
  store i32 %call541, i32* %code, align 4, !tbaa !5
  %cmp542 = icmp slt i32 %call541, 0
  br i1 %cmp542, label %if.then.544, label %if.end.545

if.then.544:                                      ; preds = %if.end.536
  %366 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %366, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.545:                                       ; preds = %if.end.536
  %367 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay546 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %368 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx547 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y548 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx547, i32 0, i32 1
  %369 = load i32, i32* %y548, align 4, !tbaa !110
  %370 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %371 = load i32, i32* %orient, align 4, !tbaa !5
  %call549 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %367, %struct.gs_fixed_point_s* %arraydecay546, i32 0, i32 1, i32 2, i32 1, i32 %368, i32 %369, i32 %370, %struct.gx_device_color_s* %dc, i32 %371) #5
  store i32 %call549, i32* %code, align 4, !tbaa !5
  %cmp550 = icmp slt i32 %call549, 0
  br i1 %cmp550, label %if.then.552, label %if.end.553

if.then.552:                                      ; preds = %if.end.545
  %372 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %372, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.553:                                       ; preds = %if.end.545
  %373 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay554 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %374 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx555 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y556 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx555, i32 0, i32 1
  %375 = load i32, i32* %y556, align 4, !tbaa !110
  %376 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %377 = load i32, i32* %orient, align 4, !tbaa !5
  %call557 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %373, %struct.gs_fixed_point_s* %arraydecay554, i32 0, i32 3, i32 2, i32 3, i32 %374, i32 %375, i32 %376, %struct.gx_device_color_s* %dc, i32 %377) #5
  store i32 %call557, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.558:                                      ; preds = %land.lhs.true.523, %if.else.521
  %378 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay559 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx560 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y561 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx560, i32 0, i32 1
  %379 = load i32, i32* %y561, align 4, !tbaa !110
  %arrayidx562 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y563 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx562, i32 0, i32 1
  %380 = load i32, i32* %y563, align 4, !tbaa !110
  %381 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %382 = load i32, i32* %orient, align 4, !tbaa !5
  %call564 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %378, %struct.gs_fixed_point_s* %arraydecay559, i32 0, i32 1, i32 0, i32 3, i32 %379, i32 %380, i32 %381, %struct.gx_device_color_s* %dc, i32 %382) #5
  store i32 %call564, i32* %code, align 4, !tbaa !5
  %cmp565 = icmp slt i32 %call564, 0
  br i1 %cmp565, label %if.then.567, label %if.end.568

if.then.567:                                      ; preds = %if.else.558
  %383 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %383, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.568:                                       ; preds = %if.else.558
  %384 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay569 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx570 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y571 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx570, i32 0, i32 1
  %385 = load i32, i32* %y571, align 4, !tbaa !110
  %arrayidx572 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y573 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx572, i32 0, i32 1
  %386 = load i32, i32* %y573, align 4, !tbaa !110
  %387 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %388 = load i32, i32* %orient, align 4, !tbaa !5
  %call574 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %384, %struct.gs_fixed_point_s* %arraydecay569, i32 2, i32 3, i32 0, i32 3, i32 %385, i32 %386, i32 %387, %struct.gx_device_color_s* %dc, i32 %388) #5
  store i32 %call574, i32* %code, align 4, !tbaa !5
  %cmp575 = icmp slt i32 %call574, 0
  br i1 %cmp575, label %if.then.577, label %if.end.578

if.then.577:                                      ; preds = %if.end.568
  %389 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %389, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.578:                                       ; preds = %if.end.568
  %390 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay579 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx580 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y581 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx580, i32 0, i32 1
  %391 = load i32, i32* %y581, align 4, !tbaa !110
  %arrayidx582 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y583 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx582, i32 0, i32 1
  %392 = load i32, i32* %y583, align 4, !tbaa !110
  %393 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %394 = load i32, i32* %orient, align 4, !tbaa !5
  %call584 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %390, %struct.gs_fixed_point_s* %arraydecay579, i32 0, i32 1, i32 2, i32 1, i32 %391, i32 %392, i32 %393, %struct.gx_device_color_s* %dc, i32 %394) #5
  store i32 %call584, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.585:                                      ; preds = %land.lhs.true.477, %if.else.470
  %arrayidx586 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y587 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx586, i32 0, i32 1
  %395 = load i32, i32* %y587, align 4, !tbaa !110
  %arrayidx588 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y589 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx588, i32 0, i32 1
  %396 = load i32, i32* %y589, align 4, !tbaa !110
  %cmp590 = icmp sle i32 %395, %396
  br i1 %cmp590, label %land.lhs.true.592, label %if.else.666

land.lhs.true.592:                                ; preds = %if.else.585
  %arrayidx593 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y594 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx593, i32 0, i32 1
  %397 = load i32, i32* %y594, align 4, !tbaa !110
  %arrayidx595 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y596 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx595, i32 0, i32 1
  %398 = load i32, i32* %y596, align 4, !tbaa !110
  %cmp597 = icmp sle i32 %397, %398
  br i1 %cmp597, label %if.then.599, label %if.else.666

if.then.599:                                      ; preds = %land.lhs.true.592
  %399 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool600 = icmp ne i32 %399, 0
  br i1 %tobool600, label %land.lhs.true.601, label %if.else.639

land.lhs.true.601:                                ; preds = %if.then.599
  %arraydecay602 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call603 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay602, i32 0, i32 1, i32 3, i32 2, i32* %ry, i32* %ey) #5
  %tobool604 = icmp ne i32 %call603, 0
  br i1 %tobool604, label %if.then.605, label %if.else.639

if.then.605:                                      ; preds = %land.lhs.true.601
  %400 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay606 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx607 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y608 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx607, i32 0, i32 1
  %401 = load i32, i32* %y608, align 4, !tbaa !110
  %arrayidx609 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y610 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx609, i32 0, i32 1
  %402 = load i32, i32* %y610, align 4, !tbaa !110
  %403 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %404 = load i32, i32* %orient, align 4, !tbaa !5
  %call611 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %400, %struct.gs_fixed_point_s* %arraydecay606, i32 0, i32 1, i32 0, i32 3, i32 %401, i32 %402, i32 %403, %struct.gx_device_color_s* %dc, i32 %404) #5
  store i32 %call611, i32* %code, align 4, !tbaa !5
  %cmp612 = icmp slt i32 %call611, 0
  br i1 %cmp612, label %if.then.614, label %if.end.615

if.then.614:                                      ; preds = %if.then.605
  %405 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %405, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.615:                                       ; preds = %if.then.605
  %406 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay616 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx617 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y618 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx617, i32 0, i32 1
  %407 = load i32, i32* %y618, align 4, !tbaa !110
  %408 = load i32, i32* %ry, align 4, !tbaa !5
  %409 = load i32, i32* %ey, align 4, !tbaa !5
  %add619 = add nsw i32 %408, %409
  %410 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %411 = load i32, i32* %orient, align 4, !tbaa !5
  %call620 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %406, %struct.gs_fixed_point_s* %arraydecay616, i32 0, i32 1, i32 3, i32 2, i32 %407, i32 %add619, i32 %410, %struct.gx_device_color_s* %dc, i32 %411) #5
  store i32 %call620, i32* %code, align 4, !tbaa !5
  %cmp621 = icmp slt i32 %call620, 0
  br i1 %cmp621, label %if.then.623, label %if.end.624

if.then.623:                                      ; preds = %if.end.615
  %412 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %412, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.624:                                       ; preds = %if.end.615
  %413 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay625 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %414 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx626 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y627 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx626, i32 0, i32 1
  %415 = load i32, i32* %y627, align 4, !tbaa !110
  %416 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %417 = load i32, i32* %orient, align 4, !tbaa !5
  %call628 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %413, %struct.gs_fixed_point_s* %arraydecay625, i32 3, i32 2, i32 0, i32 1, i32 %414, i32 %415, i32 %416, %struct.gx_device_color_s* %dc, i32 %417) #5
  store i32 %call628, i32* %code, align 4, !tbaa !5
  %cmp629 = icmp slt i32 %call628, 0
  br i1 %cmp629, label %if.then.631, label %if.end.632

if.then.631:                                      ; preds = %if.end.624
  %418 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %418, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.632:                                       ; preds = %if.end.624
  %419 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay633 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx634 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y635 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx634, i32 0, i32 1
  %420 = load i32, i32* %y635, align 4, !tbaa !110
  %arrayidx636 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y637 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx636, i32 0, i32 1
  %421 = load i32, i32* %y637, align 4, !tbaa !110
  %422 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %423 = load i32, i32* %orient, align 4, !tbaa !5
  %call638 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %419, %struct.gs_fixed_point_s* %arraydecay633, i32 3, i32 2, i32 1, i32 2, i32 %420, i32 %421, i32 %422, %struct.gx_device_color_s* %dc, i32 %423) #5
  store i32 %call638, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.639:                                      ; preds = %land.lhs.true.601, %if.then.599
  %424 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay640 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx641 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y642 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx641, i32 0, i32 1
  %425 = load i32, i32* %y642, align 4, !tbaa !110
  %arrayidx643 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y644 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx643, i32 0, i32 1
  %426 = load i32, i32* %y644, align 4, !tbaa !110
  %427 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %428 = load i32, i32* %orient, align 4, !tbaa !5
  %call645 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %424, %struct.gs_fixed_point_s* %arraydecay640, i32 0, i32 1, i32 0, i32 3, i32 %425, i32 %426, i32 %427, %struct.gx_device_color_s* %dc, i32 %428) #5
  store i32 %call645, i32* %code, align 4, !tbaa !5
  %cmp646 = icmp slt i32 %call645, 0
  br i1 %cmp646, label %if.then.648, label %if.end.649

if.then.648:                                      ; preds = %if.else.639
  %429 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %429, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.649:                                       ; preds = %if.else.639
  %430 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay650 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx651 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y652 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx651, i32 0, i32 1
  %431 = load i32, i32* %y652, align 4, !tbaa !110
  %arrayidx653 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y654 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx653, i32 0, i32 1
  %432 = load i32, i32* %y654, align 4, !tbaa !110
  %433 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %434 = load i32, i32* %orient, align 4, !tbaa !5
  %call655 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %430, %struct.gs_fixed_point_s* %arraydecay650, i32 0, i32 1, i32 3, i32 2, i32 %431, i32 %432, i32 %433, %struct.gx_device_color_s* %dc, i32 %434) #5
  store i32 %call655, i32* %code, align 4, !tbaa !5
  %cmp656 = icmp slt i32 %call655, 0
  br i1 %cmp656, label %if.then.658, label %if.end.659

if.then.658:                                      ; preds = %if.end.649
  %435 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %435, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.659:                                       ; preds = %if.end.649
  %436 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay660 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx661 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y662 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx661, i32 0, i32 1
  %437 = load i32, i32* %y662, align 4, !tbaa !110
  %arrayidx663 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y664 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx663, i32 0, i32 1
  %438 = load i32, i32* %y664, align 4, !tbaa !110
  %439 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %440 = load i32, i32* %orient, align 4, !tbaa !5
  %call665 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %436, %struct.gs_fixed_point_s* %arraydecay660, i32 1, i32 2, i32 3, i32 2, i32 %437, i32 %438, i32 %439, %struct.gx_device_color_s* %dc, i32 %440) #5
  store i32 %call665, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.666:                                      ; preds = %land.lhs.true.592, %if.else.585
  %arrayidx667 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y668 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx667, i32 0, i32 1
  %441 = load i32, i32* %y668, align 4, !tbaa !110
  %arrayidx669 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y670 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx669, i32 0, i32 1
  %442 = load i32, i32* %y670, align 4, !tbaa !110
  %cmp671 = icmp sle i32 %441, %442
  br i1 %cmp671, label %land.lhs.true.673, label %if.else.747

land.lhs.true.673:                                ; preds = %if.else.666
  %arrayidx674 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y675 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx674, i32 0, i32 1
  %443 = load i32, i32* %y675, align 4, !tbaa !110
  %arrayidx676 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y677 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx676, i32 0, i32 1
  %444 = load i32, i32* %y677, align 4, !tbaa !110
  %cmp678 = icmp sle i32 %443, %444
  br i1 %cmp678, label %if.then.680, label %if.else.747

if.then.680:                                      ; preds = %land.lhs.true.673
  %445 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %tobool681 = icmp ne i32 %445, 0
  br i1 %tobool681, label %land.lhs.true.682, label %if.else.720

land.lhs.true.682:                                ; preds = %if.then.680
  %arraydecay683 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %call684 = call i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %arraydecay683, i32 0, i32 1, i32 2, i32 3, i32* %ry, i32* %ey) #5
  %tobool685 = icmp ne i32 %call684, 0
  br i1 %tobool685, label %if.then.686, label %if.else.720

if.then.686:                                      ; preds = %land.lhs.true.682
  %446 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay687 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx688 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y689 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx688, i32 0, i32 1
  %447 = load i32, i32* %y689, align 4, !tbaa !110
  %arrayidx690 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y691 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx690, i32 0, i32 1
  %448 = load i32, i32* %y691, align 4, !tbaa !110
  %449 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %450 = load i32, i32* %orient, align 4, !tbaa !5
  %call692 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %446, %struct.gs_fixed_point_s* %arraydecay687, i32 0, i32 1, i32 0, i32 3, i32 %447, i32 %448, i32 %449, %struct.gx_device_color_s* %dc, i32 %450) #5
  store i32 %call692, i32* %code, align 4, !tbaa !5
  %cmp693 = icmp slt i32 %call692, 0
  br i1 %cmp693, label %if.then.695, label %if.end.696

if.then.695:                                      ; preds = %if.then.686
  %451 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %451, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.696:                                       ; preds = %if.then.686
  %452 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay697 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx698 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y699 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx698, i32 0, i32 1
  %453 = load i32, i32* %y699, align 4, !tbaa !110
  %454 = load i32, i32* %ry, align 4, !tbaa !5
  %455 = load i32, i32* %ey, align 4, !tbaa !5
  %add700 = add nsw i32 %454, %455
  %456 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %457 = load i32, i32* %orient, align 4, !tbaa !5
  %call701 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %452, %struct.gs_fixed_point_s* %arraydecay697, i32 0, i32 1, i32 3, i32 2, i32 %453, i32 %add700, i32 %456, %struct.gx_device_color_s* %dc, i32 %457) #5
  store i32 %call701, i32* %code, align 4, !tbaa !5
  %cmp702 = icmp slt i32 %call701, 0
  br i1 %cmp702, label %if.then.704, label %if.end.705

if.then.704:                                      ; preds = %if.end.696
  %458 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %458, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.705:                                       ; preds = %if.end.696
  %459 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay706 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %460 = load i32, i32* %ry, align 4, !tbaa !5
  %arrayidx707 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y708 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx707, i32 0, i32 1
  %461 = load i32, i32* %y708, align 4, !tbaa !110
  %462 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %463 = load i32, i32* %orient, align 4, !tbaa !5
  %call709 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %459, %struct.gs_fixed_point_s* %arraydecay706, i32 3, i32 2, i32 0, i32 1, i32 %460, i32 %461, i32 %462, %struct.gx_device_color_s* %dc, i32 %463) #5
  store i32 %call709, i32* %code, align 4, !tbaa !5
  %cmp710 = icmp slt i32 %call709, 0
  br i1 %cmp710, label %if.then.712, label %if.end.713

if.then.712:                                      ; preds = %if.end.705
  %464 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %464, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.713:                                       ; preds = %if.end.705
  %465 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay714 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx715 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y716 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx715, i32 0, i32 1
  %466 = load i32, i32* %y716, align 4, !tbaa !110
  %arrayidx717 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y718 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx717, i32 0, i32 1
  %467 = load i32, i32* %y718, align 4, !tbaa !110
  %468 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %469 = load i32, i32* %orient, align 4, !tbaa !5
  %call719 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %465, %struct.gs_fixed_point_s* %arraydecay714, i32 2, i32 1, i32 0, i32 1, i32 %466, i32 %467, i32 %468, %struct.gx_device_color_s* %dc, i32 %469) #5
  store i32 %call719, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.720:                                      ; preds = %land.lhs.true.682, %if.then.680
  %470 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay721 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx722 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 0
  %y723 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx722, i32 0, i32 1
  %471 = load i32, i32* %y723, align 4, !tbaa !110
  %arrayidx724 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y725 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx724, i32 0, i32 1
  %472 = load i32, i32* %y725, align 4, !tbaa !110
  %473 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %474 = load i32, i32* %orient, align 4, !tbaa !5
  %call726 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %470, %struct.gs_fixed_point_s* %arraydecay721, i32 0, i32 1, i32 0, i32 3, i32 %471, i32 %472, i32 %473, %struct.gx_device_color_s* %dc, i32 %474) #5
  store i32 %call726, i32* %code, align 4, !tbaa !5
  %cmp727 = icmp slt i32 %call726, 0
  br i1 %cmp727, label %if.then.729, label %if.end.730

if.then.729:                                      ; preds = %if.else.720
  %475 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %475, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.730:                                       ; preds = %if.else.720
  %476 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay731 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx732 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 3
  %y733 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx732, i32 0, i32 1
  %477 = load i32, i32* %y733, align 4, !tbaa !110
  %arrayidx734 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y735 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx734, i32 0, i32 1
  %478 = load i32, i32* %y735, align 4, !tbaa !110
  %479 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %480 = load i32, i32* %orient, align 4, !tbaa !5
  %call736 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %476, %struct.gs_fixed_point_s* %arraydecay731, i32 0, i32 1, i32 3, i32 2, i32 %477, i32 %478, i32 %479, %struct.gx_device_color_s* %dc, i32 %480) #5
  store i32 %call736, i32* %code, align 4, !tbaa !5
  %cmp737 = icmp slt i32 %call736, 0
  br i1 %cmp737, label %if.then.739, label %if.end.740

if.then.739:                                      ; preds = %if.end.730
  %481 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %481, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.end.740:                                       ; preds = %if.end.730
  %482 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay741 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i32 0
  %arrayidx742 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 2
  %y743 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx742, i32 0, i32 1
  %483 = load i32, i32* %y743, align 4, !tbaa !110
  %arrayidx744 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %q, i32 0, i64 1
  %y745 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx744, i32 0, i32 1
  %484 = load i32, i32* %y745, align 4, !tbaa !110
  %485 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %486 = load i32, i32* %orient, align 4, !tbaa !5
  %call746 = call i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %482, %struct.gs_fixed_point_s* %arraydecay741, i32 0, i32 1, i32 2, i32 1, i32 %483, i32 %484, i32 %485, %struct.gx_device_color_s* %dc, i32 %486) #5
  store i32 %call746, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

if.else.747:                                      ; preds = %land.lhs.true.673, %if.else.666
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.748

cleanup.748:                                      ; preds = %if.else.747, %if.end.740, %if.then.739, %if.then.729, %if.end.713, %if.then.712, %if.then.704, %if.then.695, %if.end.659, %if.then.658, %if.then.648, %if.end.632, %if.then.631, %if.then.623, %if.then.614, %if.end.578, %if.then.577, %if.then.567, %if.end.553, %if.then.552, %if.then.544, %if.then.535, %if.end.516, %if.then.515, %if.then.507, %if.then.498, %if.end.463, %if.then.462, %if.then.452, %if.end.438, %if.then.437, %if.then.429, %if.then.420, %if.end.401, %if.then.400, %if.then.392, %if.then.383, %if.end.348, %if.then.347, %if.then.337, %if.end.321, %if.then.320, %if.then.312, %if.then.303, %if.end.267, %if.then.266, %if.then.256, %if.end.240, %if.then.239, %if.then.231, %if.then.223, %cleanup.190, %if.then
  %487 = bitcast i32* %orient to i8*
  call void @llvm.lifetime.end(i64 4, i8* %487) #2
  %488 = bitcast %struct.gx_device_color_s* %dc to i8*
  call void @llvm.lifetime.end(i64 656, i8* %488) #2
  %489 = bitcast i32* %swap_axes to i8*
  call void @llvm.lifetime.end(i64 4, i8* %489) #2
  %490 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %490) #2
  %491 = bitcast i32* %ey to i8*
  call void @llvm.lifetime.end(i64 4, i8* %491) #2
  %492 = bitcast i32* %ry to i8*
  call void @llvm.lifetime.end(i64 4, i8* %492) #2
  %493 = bitcast [4 x %struct.gs_fixed_point_s]* %q to i8*
  call void @llvm.lifetime.end(i64 32, i8* %493) #2
  %494 = load i32, i32* %retval
  ret i32 %494
}

; Function Attrs: nounwind uwtable
define i32 @gx_init_patch_fill_state_for_clist(%struct.gx_device_s* %dev, %struct.patch_fill_state_s* %pfs, %struct.gs_memory_s* %memory) #0 {
entry:
  %dev.addr = alloca %struct.gx_device_s*, align 8
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %memory.addr = alloca %struct.gs_memory_s*, align 8
  %i = alloca i32, align 4
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_memory_s* %memory, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 0
  store %struct.gx_device_s* %1, %struct.gx_device_s** %dev1, align 8, !tbaa !55
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %3, i32 0, i32 1
  store %struct.gs_imager_state_s* null, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %4 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %direct_space = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %4, i32 0, i32 2
  store %struct.gs_color_space_s* null, %struct.gs_color_space_s** %direct_space, align 8, !tbaa !16
  %5 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %5, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %6 = load i32, i32* %num_components, align 4, !tbaa !152
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %7, i32 0, i32 3
  store i32 %6, i32* %num_components2, align 4, !tbaa !17
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pshm = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 7
  store %struct.gs_shading_mesh_s* null, %struct.gs_shading_mesh_s** %pshm, align 8, !tbaa !153
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 9
  store %struct.gs_function_s* null, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %function_arg_shift = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %10, i32 0, i32 10
  store i32 0, i32* %function_arg_shift, align 4, !tbaa !30
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %vectorization = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 11
  store i32 0, i32* %vectorization, align 4, !tbaa !26
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %n_color_args = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 12
  store i32 1, i32* %n_color_args, align 4, !tbaa !33
  %13 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %max_small_coord = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %13, i32 0, i32 13
  store i32 0, i32* %max_small_coord, align 4, !tbaa !69
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_buffer = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %14, i32 0, i32 14
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %wedge_vertex_list_elem_buffer, align 8, !tbaa !75
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %free_wedge_vertex = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %15, i32 0, i32 15
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %free_wedge_vertex, align 8, !tbaa !76
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %16, i32 0, i32 16
  store i32 0, i32* %wedge_vertex_list_elem_count, align 4, !tbaa !120
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count_max = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 17
  store i32 0, i32* %wedge_vertex_list_elem_count_max, align 4, !tbaa !118
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %18 = load i32, i32* %i, align 4, !tbaa !5
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components3 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 3
  %20 = load i32, i32* %num_components3, align 4, !tbaa !17
  %cmp = icmp slt i32 %18, %20
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %21 to i64
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %22, i32 0, i32 18
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  store float 0x41E0000000000000, float* %arrayidx, align 4, !tbaa !18
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %24, i32 0, i32 19
  store i32 256, i32* %decomposition_limit, align 4, !tbaa !34
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %25, i32 0, i32 20
  store i32 0, i32* %fixed_flat, align 4, !tbaa !48
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %26, i32 0, i32 21
  store double 0.000000e+00, double* %smoothness, align 8, !tbaa !50
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %27, i32 0, i32 22
  store i32 0, i32* %maybe_self_intersecting, align 4, !tbaa !27
  %28 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %28, i32 0, i32 23
  store i32 1, i32* %monotonic_color, align 4, !tbaa !29
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %29, i32 0, i32 24
  store i32 1, i32* %linear_color, align 4, !tbaa !31
  %30 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %30, i32 0, i32 25
  store i32 0, i32* %unlinear, align 4, !tbaa !53
  %31 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %31, i32 0, i32 26
  store i32 0, i32* %inside, align 4, !tbaa !32
  %32 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_size = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %32, i32 0, i32 27
  store i32 0, i32* %color_stack_size, align 4, !tbaa !51
  %33 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %color_info4 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %33, i32 0, i32 11
  %num_components5 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info4, i32 0, i32 1
  %34 = load i32, i32* %num_components5, align 4, !tbaa !152
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_step = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %35, i32 0, i32 28
  store i32 %34, i32* %color_stack_step, align 4, !tbaa !14
  %36 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_ptr = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %36, i32 0, i32 29
  store i8* null, i8** %color_stack_ptr, align 8, !tbaa !7
  %37 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %37, i32 0, i32 30
  store i8* null, i8** %color_stack, align 8, !tbaa !52
  %38 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %38, i32 0, i32 31
  store i8* null, i8** %color_stack_limit, align 8, !tbaa !15
  %39 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pcic = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %39, i32 0, i32 33
  store %struct.gs_color_index_cache_s* null, %struct.gs_color_index_cache_s** %pcic, align 8, !tbaa !70
  %40 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %trans_device = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %40, i32 0, i32 5
  store %struct.gx_device_s* null, %struct.gx_device_s** %trans_device, align 8, !tbaa !71
  %41 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %icclink = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %41, i32 0, i32 6
  store %struct.gsicc_link_s* null, %struct.gsicc_link_s** %icclink, align 8, !tbaa !82
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %43 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %call = call i32 @alloc_patch_fill_memory(%struct.patch_fill_state_s* %42, %struct.gs_memory_s* %43, %struct.gs_color_space_s* null) #5
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #2
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @gx_fill_triangle_small(%struct.gx_device_s* %dev, %struct.gs_fill_attributes_s* %fa, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %p2, i32* %c0, i32* %c1, i32* %c2) #0 {
entry:
  %dev.addr = alloca %struct.gx_device_s*, align 8
  %fa.addr = alloca %struct.gs_fill_attributes_s*, align 8
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p2.addr = alloca %struct.gs_fixed_point_s*, align 8
  %c0.addr = alloca i32*, align 8
  %c1.addr = alloca i32*, align 8
  %c2.addr = alloca i32*, align 8
  %pfs = alloca %struct.patch_fill_state_s*, align 8
  %c = alloca [3 x %struct.patch_color_s], align 16
  %p = alloca [3 x %struct.shading_vertex_s], align 16
  %i = alloca i32, align 4
  store %struct.gx_device_s* %dev, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  store %struct.gs_fill_attributes_s* %fa, %struct.gs_fill_attributes_s** %fa.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p2, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  store i32* %c0, i32** %c0.addr, align 8, !tbaa !1
  store i32* %c1, i32** %c1.addr, align 8, !tbaa !1
  store i32* %c2, i32** %c2.addr, align 8, !tbaa !1
  %0 = bitcast %struct.patch_fill_state_s** %pfs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.gs_fill_attributes_s*, %struct.gs_fill_attributes_s** %fa.addr, align 8, !tbaa !1
  %pfs1 = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %1, i32 0, i32 6
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs1, align 8, !tbaa !154
  store %struct.patch_fill_state_s* %2, %struct.patch_fill_state_s** %pfs, align 8, !tbaa !1
  %3 = bitcast [3 x %struct.patch_color_s]* %c to i8*
  call void @llvm.lifetime.start(i64 816, i8* %3) #2
  %4 = bitcast [3 x %struct.shading_vertex_s]* %p to i8*
  call void @llvm.lifetime.start(i64 48, i8* %4) #2
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %arrayidx = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx, i32 0, i32 0
  %6 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %7 = bitcast %struct.gs_fixed_point_s* %p3 to i8*
  %8 = bitcast %struct.gs_fixed_point_s* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx4 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %p5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx4, i32 0, i32 0
  %9 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %10 = bitcast %struct.gs_fixed_point_s* %p5 to i8*
  %11 = bitcast %struct.gs_fixed_point_s* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx6 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %p7 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx6, i32 0, i32 0
  %12 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %13 = bitcast %struct.gs_fixed_point_s* %p7 to i8*
  %14 = bitcast %struct.gs_fixed_point_s* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx8 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 0
  %arrayidx9 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx9, i32 0, i32 1
  store %struct.patch_color_s* %arrayidx8, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %arrayidx11 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 1
  %arrayidx12 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %c13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx12, i32 0, i32 1
  store %struct.patch_color_s* %arrayidx11, %struct.patch_color_s** %c13, align 8, !tbaa !150
  %arrayidx14 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 2
  %arrayidx15 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %c16 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx15, i32 0, i32 1
  store %struct.patch_color_s* %arrayidx14, %struct.patch_color_s** %c16, align 8, !tbaa !150
  %arrayidx17 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 2
  %t = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx17, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %t, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx18, align 4, !tbaa !18
  %arrayidx19 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 2
  %t20 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx19, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %t20, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx21, align 4, !tbaa !18
  %arrayidx22 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 1
  %t23 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx22, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %t23, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx24, align 4, !tbaa !18
  %arrayidx25 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 1
  %t26 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx25, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %t26, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx27, align 4, !tbaa !18
  %arrayidx28 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 0
  %t29 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx28, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* %t29, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx30, align 4, !tbaa !18
  %arrayidx31 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 0
  %t32 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx31, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %t32, i32 0, i64 0
  store float 0.000000e+00, float* %arrayidx33, align 4, !tbaa !18
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %15 = load i32, i32* %i, align 4, !tbaa !5
  %16 = load %struct.gx_device_s*, %struct.gx_device_s** %dev.addr, align 8, !tbaa !1
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %16, i32 0, i32 11
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %color_info, i32 0, i32 1
  %17 = load i32, i32* %num_components, align 4, !tbaa !152
  %cmp = icmp slt i32 %15, %17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %18 to i64
  %19 = load i32*, i32** %c0.addr, align 8, !tbaa !1
  %arrayidx34 = getelementptr inbounds i32, i32* %19, i64 %idxprom
  %20 = load i32, i32* %arrayidx34, align 4, !tbaa !5
  %conv = sitofp i32 %20 to float
  %21 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom35 = sext i32 %21 to i64
  %arrayidx36 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 0
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx36, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom35
  store float %conv, float* %arrayidx37, align 4, !tbaa !18
  %22 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom38 = sext i32 %22 to i64
  %23 = load i32*, i32** %c1.addr, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds i32, i32* %23, i64 %idxprom38
  %24 = load i32, i32* %arrayidx39, align 4, !tbaa !5
  %conv40 = sitofp i32 %24 to float
  %25 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom41 = sext i32 %25 to i64
  %arrayidx42 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 1
  %cc43 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx42, i32 0, i32 1
  %paint44 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc43, i32 0, i32 1
  %values45 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint44, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [64 x float], [64 x float]* %values45, i32 0, i64 %idxprom41
  store float %conv40, float* %arrayidx46, align 4, !tbaa !18
  %26 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom47 = sext i32 %26 to i64
  %27 = load i32*, i32** %c2.addr, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds i32, i32* %27, i64 %idxprom47
  %28 = load i32, i32* %arrayidx48, align 4, !tbaa !5
  %conv49 = sitofp i32 %28 to float
  %29 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom50 = sext i32 %29 to i64
  %arrayidx51 = getelementptr inbounds [3 x %struct.patch_color_s], [3 x %struct.patch_color_s]* %c, i32 0, i64 2
  %cc52 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %arrayidx51, i32 0, i32 1
  %paint53 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc52, i32 0, i32 1
  %values54 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint53, i32 0, i32 0
  %arrayidx55 = getelementptr inbounds [64 x float], [64 x float]* %values54, i32 0, i64 %idxprom50
  store float %conv49, float* %arrayidx55, align 4, !tbaa !18
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %31 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs, align 8, !tbaa !1
  %arrayidx56 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %arrayidx57 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %arrayidx58 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %call = call i32 @small_mesh_triangle(%struct.patch_fill_state_s* %31, %struct.shading_vertex_s* %arrayidx56, %struct.shading_vertex_s* %arrayidx57, %struct.shading_vertex_s* %arrayidx58) #5
  %32 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %32) #2
  %33 = bitcast [3 x %struct.shading_vertex_s]* %p to i8*
  call void @llvm.lifetime.end(i64 48, i8* %33) #2
  %34 = bitcast [3 x %struct.patch_color_s]* %c to i8*
  call void @llvm.lifetime.end(i64 816, i8* %34) #2
  %35 = bitcast %struct.patch_fill_state_s** %pfs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #2
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @small_mesh_triangle(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, %struct.shading_vertex_s* %p2) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %p2.addr = alloca %struct.shading_vertex_s*, align 8
  %code = alloca i32, align 4
  %l = alloca [3 x %struct.wedge_vertex_list_t], align 16
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p2, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast [3 x %struct.wedge_vertex_list_t]* %l to i8*
  call void @llvm.lifetime.start(i64 72, i8* %1) #2
  %arraydecay = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %l, i32 0, i32 0
  call void @init_wedge_vertex_list(%struct.wedge_vertex_list_t* %arraydecay, i32 3) #5
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %3 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %4 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %5 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 1
  %arrayidx2 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 2
  %call = call i32 @fill_triangle(%struct.patch_fill_state_s* %2, %struct.shading_vertex_s* %3, %struct.shading_vertex_s* %4, %struct.shading_vertex_s* %5, %struct.wedge_vertex_list_t* %arrayidx, %struct.wedge_vertex_list_t* %arrayidx1, %struct.wedge_vertex_list_t* %arrayidx2) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %6 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %7, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 0
  %9 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %9, i32 0, i32 1
  %10 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %11 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %11, i32 0, i32 1
  %12 = load %struct.patch_color_s*, %struct.patch_color_s** %c4, align 8, !tbaa !150
  %call5 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %8, %struct.wedge_vertex_list_t* %arrayidx3, %struct.patch_color_s* %10, %struct.patch_color_s* %12) #5
  store i32 %call5, i32* %code, align 4, !tbaa !5
  %13 = load i32, i32* %code, align 4, !tbaa !5
  %cmp6 = icmp slt i32 %13, 0
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end
  %14 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.end
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 1
  %16 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %16, i32 0, i32 1
  %17 = load %struct.patch_color_s*, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %18 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c11 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %18, i32 0, i32 1
  %19 = load %struct.patch_color_s*, %struct.patch_color_s** %c11, align 8, !tbaa !150
  %call12 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %15, %struct.wedge_vertex_list_t* %arrayidx9, %struct.patch_color_s* %17, %struct.patch_color_s* %19) #5
  store i32 %call12, i32* %code, align 4, !tbaa !5
  %20 = load i32, i32* %code, align 4, !tbaa !5
  %cmp13 = icmp slt i32 %20, 0
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.8
  %21 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %21, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.8
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 2
  %23 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c17 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %23, i32 0, i32 1
  %24 = load %struct.patch_color_s*, %struct.patch_color_s** %c17, align 8, !tbaa !150
  %25 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c18 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %25, i32 0, i32 1
  %26 = load %struct.patch_color_s*, %struct.patch_color_s** %c18, align 8, !tbaa !150
  %call19 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %22, %struct.wedge_vertex_list_t* %arrayidx16, %struct.patch_color_s* %24, %struct.patch_color_s* %26) #5
  store i32 %call19, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.15, %if.then.14, %if.then.7, %if.then
  %27 = bitcast [3 x %struct.wedge_vertex_list_t]* %l to i8*
  call void @llvm.lifetime.end(i64 72, i8* %27) #2
  %28 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = load i32, i32* %retval
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define i32 @mesh_triangle(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, %struct.shading_vertex_s* %p2) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %p2.addr = alloca %struct.shading_vertex_s*, align 8
  %pdev = alloca %struct.gx_device_s*, align 8
  %path = alloca %struct.gx_path_s, align 8
  %code = alloca i32, align 4
  %d01x = alloca i32, align 4
  %d01y = alloca i32, align 4
  %d12x = alloca i32, align 4
  %d12y = alloca i32, align 4
  %s1 = alloca i64, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p2, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 0
  %1 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %1, i32 0, i32 42
  %dev_spec_op = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 65
  %2 = load i32 (%struct.gx_device_s*, i32, i8*, i32)*, i32 (%struct.gx_device_s*, i32, i8*, i32)** %dev_spec_op, align 8, !tbaa !104
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %3, i32 0, i32 0
  %4 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1, align 8, !tbaa !55
  %call = call i32 %2(%struct.gx_device_s* %4, i32 4, i8* null, i32 0) #5
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end.84

if.then:                                          ; preds = %entry
  %5 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 0
  %7 = load %struct.gx_device_s*, %struct.gx_device_s** %dev2, align 8, !tbaa !55
  store %struct.gx_device_s* %7, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %8 = bitcast %struct.gx_path_s* %path to i8*
  call void @llvm.lifetime.start(i64 128, i8* %8) #2
  %9 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = bitcast i32* %d01x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %11, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %12 = load i32, i32* %x, align 4, !tbaa !155
  %13 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %13, i32 0, i32 0
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p3, i32 0, i32 0
  %14 = load i32, i32* %x4, align 4, !tbaa !155
  %sub = sub nsw i32 %12, %14
  store i32 %sub, i32* %d01x, align 4, !tbaa !5
  %15 = bitcast i32* %d01y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #2
  %16 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %16, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p5, i32 0, i32 1
  %17 = load i32, i32* %y, align 4, !tbaa !156
  %18 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %18, i32 0, i32 0
  %y7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p6, i32 0, i32 1
  %19 = load i32, i32* %y7, align 4, !tbaa !156
  %sub8 = sub nsw i32 %17, %19
  store i32 %sub8, i32* %d01y, align 4, !tbaa !5
  %20 = bitcast i32* %d12x to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #2
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p9 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %21, i32 0, i32 0
  %x10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p9, i32 0, i32 0
  %22 = load i32, i32* %x10, align 4, !tbaa !155
  %23 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %23, i32 0, i32 0
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p11, i32 0, i32 0
  %24 = load i32, i32* %x12, align 4, !tbaa !155
  %sub13 = sub nsw i32 %22, %24
  store i32 %sub13, i32* %d12x, align 4, !tbaa !5
  %25 = bitcast i32* %d12y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #2
  %26 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %26, i32 0, i32 0
  %y15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p14, i32 0, i32 1
  %27 = load i32, i32* %y15, align 4, !tbaa !156
  %28 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p16 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %28, i32 0, i32 0
  %y17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p16, i32 0, i32 1
  %29 = load i32, i32* %y17, align 4, !tbaa !156
  %sub18 = sub nsw i32 %27, %29
  store i32 %sub18, i32* %d12y, align 4, !tbaa !5
  %30 = bitcast i64* %s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %30) #2
  %31 = load i32, i32* %d01x, align 4, !tbaa !5
  %conv = sext i32 %31 to i64
  %32 = load i32, i32* %d12y, align 4, !tbaa !5
  %conv19 = sext i32 %32 to i64
  %mul = mul nsw i64 %conv, %conv19
  %33 = load i32, i32* %d01y, align 4, !tbaa !5
  %conv20 = sext i32 %33 to i64
  %34 = load i32, i32* %d12x, align 4, !tbaa !5
  %conv21 = sext i32 %34 to i64
  %mul22 = mul nsw i64 %conv20, %conv21
  %sub23 = sub nsw i64 %mul, %mul22
  store i64 %sub23, i64* %s1, align 8, !tbaa !107
  %35 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %memory = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %35, i32 0, i32 3
  %36 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory, align 8, !tbaa !108
  %call24 = call i32 @gx_path_init_local_shared(%struct.gx_path_s* %path, %struct.gx_path_s* null, %struct.gs_memory_s* %36) #5
  %37 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p25 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %37, i32 0, i32 0
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p25, i32 0, i32 0
  %38 = load i32, i32* %x26, align 4, !tbaa !155
  %39 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p27 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %39, i32 0, i32 0
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p27, i32 0, i32 1
  %40 = load i32, i32* %y28, align 4, !tbaa !156
  %call29 = call i32 @gx_path_add_point(%struct.gx_path_s* %path, i32 %38, i32 %40) #5
  store i32 %call29, i32* %code, align 4, !tbaa !5
  %41 = load i32, i32* %code, align 4, !tbaa !5
  %cmp30 = icmp sge i32 %41, 0
  br i1 %cmp30, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %42 = load i64, i64* %s1, align 8, !tbaa !107
  %cmp32 = icmp sge i64 %42, 0
  br i1 %cmp32, label %if.then.34, label %if.end

if.then.34:                                       ; preds = %land.lhs.true
  %43 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p35 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %43, i32 0, i32 0
  %x36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p35, i32 0, i32 0
  %44 = load i32, i32* %x36, align 4, !tbaa !155
  %45 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p37 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %45, i32 0, i32 0
  %y38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p37, i32 0, i32 1
  %46 = load i32, i32* %y38, align 4, !tbaa !156
  %call39 = call i32 @gx_path_add_line_notes(%struct.gx_path_s* %path, i32 %44, i32 %46, i32 0) #5
  store i32 %call39, i32* %code, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then.34, %land.lhs.true, %if.then
  %47 = load i32, i32* %code, align 4, !tbaa !5
  %cmp40 = icmp sge i32 %47, 0
  br i1 %cmp40, label %if.then.42, label %if.end.48

if.then.42:                                       ; preds = %if.end
  %48 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p43 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %48, i32 0, i32 0
  %x44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p43, i32 0, i32 0
  %49 = load i32, i32* %x44, align 4, !tbaa !155
  %50 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p45 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %50, i32 0, i32 0
  %y46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p45, i32 0, i32 1
  %51 = load i32, i32* %y46, align 4, !tbaa !156
  %call47 = call i32 @gx_path_add_line_notes(%struct.gx_path_s* %path, i32 %49, i32 %51, i32 0) #5
  store i32 %call47, i32* %code, align 4, !tbaa !5
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.42, %if.end
  %52 = load i32, i32* %code, align 4, !tbaa !5
  %cmp49 = icmp sge i32 %52, 0
  br i1 %cmp49, label %land.lhs.true.51, label %if.end.60

land.lhs.true.51:                                 ; preds = %if.end.48
  %53 = load i64, i64* %s1, align 8, !tbaa !107
  %cmp52 = icmp slt i64 %53, 0
  br i1 %cmp52, label %if.then.54, label %if.end.60

if.then.54:                                       ; preds = %land.lhs.true.51
  %54 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p55 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %54, i32 0, i32 0
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p55, i32 0, i32 0
  %55 = load i32, i32* %x56, align 4, !tbaa !155
  %56 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p57 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %56, i32 0, i32 0
  %y58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p57, i32 0, i32 1
  %57 = load i32, i32* %y58, align 4, !tbaa !156
  %call59 = call i32 @gx_path_add_line_notes(%struct.gx_path_s* %path, i32 %55, i32 %57, i32 0) #5
  store i32 %call59, i32* %code, align 4, !tbaa !5
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.54, %land.lhs.true.51, %if.end.48
  %58 = load i32, i32* %code, align 4, !tbaa !5
  %cmp61 = icmp sge i32 %58, 0
  br i1 %cmp61, label %if.then.63, label %if.end.65

if.then.63:                                       ; preds = %if.end.60
  %call64 = call i32 @gx_path_close_subpath_notes(%struct.gx_path_s* %path, i32 0) #5
  store i32 %call64, i32* %code, align 4, !tbaa !5
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.63, %if.end.60
  %59 = load i32, i32* %code, align 4, !tbaa !5
  %cmp66 = icmp sge i32 %59, 0
  br i1 %cmp66, label %if.then.68, label %if.end.72

if.then.68:                                       ; preds = %if.end.65
  %60 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev69 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %60, i32 0, i32 0
  %61 = load %struct.gx_device_s*, %struct.gx_device_s** %dev69, align 8, !tbaa !55
  %procs70 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %61, i32 0, i32 42
  %fill_path = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs70, i32 0, i32 24
  %62 = load i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)*, i32 (%struct.gx_device_s*, %struct.gs_imager_state_s*, %struct.gx_path_s*, %struct.gx_fill_params_s*, %struct.gx_device_color_s*, %struct.gx_clip_path_s*)** %fill_path, align 8, !tbaa !111
  %63 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %call71 = call i32 %62(%struct.gx_device_s* %63, %struct.gs_imager_state_s* null, %struct.gx_path_s* %path, %struct.gx_fill_params_s* null, %struct.gx_device_color_s* null, %struct.gx_clip_path_s* null) #5
  store i32 %call71, i32* %code, align 4, !tbaa !5
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.68, %if.end.65
  call void @gx_path_free(%struct.gx_path_s* %path, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)) #5
  %64 = load i32, i32* %code, align 4, !tbaa !5
  %cmp73 = icmp slt i32 %64, 0
  br i1 %cmp73, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.end.72
  %65 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %65, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.76:                                        ; preds = %if.end.72
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.76, %if.then.75
  %66 = bitcast i64* %s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #2
  %67 = bitcast i32* %d12y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast i32* %d12x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast i32* %d01y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #2
  %70 = bitcast i32* %d01x to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = bitcast %struct.gx_path_s* %path to i8*
  call void @llvm.lifetime.end(i64 128, i8* %72) #2
  %73 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %73) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.84

if.end.84:                                        ; preds = %cleanup.cont, %entry
  %74 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %75 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %76 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %77 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %call85 = call i32 @mesh_triangle_rec(%struct.patch_fill_state_s* %74, %struct.shading_vertex_s* %75, %struct.shading_vertex_s* %76, %struct.shading_vertex_s* %77) #5
  store i32 %call85, i32* %retval
  br label %return

return:                                           ; preds = %if.end.84, %cleanup
  %78 = load i32, i32* %retval
  ret i32 %78

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i32 @gx_path_init_local_shared(%struct.gx_path_s*, %struct.gx_path_s*, %struct.gs_memory_s*) #3

declare i32 @gx_path_add_point(%struct.gx_path_s*, i32, i32) #3

declare i32 @gx_path_add_line_notes(%struct.gx_path_s*, i32, i32, i32) #3

declare i32 @gx_path_close_subpath_notes(%struct.gx_path_s*, i32) #3

declare void @gx_path_free(%struct.gx_path_s*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @mesh_triangle_rec(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, %struct.shading_vertex_s* %p2) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %p2.addr = alloca %struct.shading_vertex_s*, align 8
  %p01 = alloca %struct.shading_vertex_s, align 8
  %p1217 = alloca %struct.shading_vertex_s, align 8
  %p20 = alloca %struct.shading_vertex_s, align 8
  %c = alloca [3 x %struct.patch_color_s*], align 16
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p2, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i32 @is_linear_color_applicable(%struct.patch_fill_state_s* %0) #5
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 25
  store i32 %lnot.ext, i32* %unlinear, align 4, !tbaa !53
  %2 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %2, i32 0, i32 0
  %3 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %3, i32 0, i32 0
  %call4 = call i32 @manhattan_dist(%struct.gs_fixed_point_s* %p, %struct.gs_fixed_point_s* %p3) #5
  %4 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %max_small_coord = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %4, i32 0, i32 13
  %5 = load i32, i32* %max_small_coord, align 4, !tbaa !69
  %cmp = icmp slt i32 %call4, %5
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %6, i32 0, i32 0
  %7 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %7, i32 0, i32 0
  %call7 = call i32 @manhattan_dist(%struct.gs_fixed_point_s* %p5, %struct.gs_fixed_point_s* %p6) #5
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %max_small_coord8 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 13
  %9 = load i32, i32* %max_small_coord8, align 4, !tbaa !69
  %cmp9 = icmp slt i32 %call7, %9
  br i1 %cmp9, label %land.lhs.true.10, label %if.else

land.lhs.true.10:                                 ; preds = %land.lhs.true
  %10 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %10, i32 0, i32 0
  %11 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p12 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %11, i32 0, i32 0
  %call13 = call i32 @manhattan_dist(%struct.gs_fixed_point_s* %p11, %struct.gs_fixed_point_s* %p12) #5
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %max_small_coord14 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 13
  %13 = load i32, i32* %max_small_coord14, align 4, !tbaa !69
  %cmp15 = icmp slt i32 %call13, %13
  br i1 %cmp15, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true.10
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %15 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %16 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %call16 = call i32 @small_mesh_triangle(%struct.patch_fill_state_s* %14, %struct.shading_vertex_s* %15, %struct.shading_vertex_s* %16, %struct.shading_vertex_s* %17) #5
  store i32 %call16, i32* %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true.10, %land.lhs.true, %entry
  %18 = bitcast %struct.shading_vertex_s* %p01 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %18) #2
  %19 = bitcast %struct.shading_vertex_s* %p1217 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %19) #2
  %20 = bitcast %struct.shading_vertex_s* %p20 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %20) #2
  %21 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 24, i8* %21) #2
  %22 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #2
  %23 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #2
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call18 = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %24, %struct.patch_color_s** %arraydecay, i32 3) #5
  store i8* %call18, i8** %color_stack_ptr, align 8, !tbaa !1
  %25 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp19 = icmp eq i8* %25, null
  br i1 %cmp19, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %if.else
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.else
  %arrayidx = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %26 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %c21 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p01, i32 0, i32 1
  store %struct.patch_color_s* %26, %struct.patch_color_s** %c21, align 8, !tbaa !150
  %arrayidx22 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %27 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx22, align 8, !tbaa !1
  %c23 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p1217, i32 0, i32 1
  store %struct.patch_color_s* %27, %struct.patch_color_s** %c23, align 8, !tbaa !150
  %arrayidx24 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 2
  %28 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx24, align 8, !tbaa !1
  %c25 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p20, i32 0, i32 1
  store %struct.patch_color_s* %28, %struct.patch_color_s** %c25, align 8, !tbaa !150
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %30 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %31 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %32 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx26, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %29, %struct.shading_vertex_s* %30, %struct.shading_vertex_s* %31, i32 2, %struct.shading_vertex_s* %p01, %struct.patch_color_s* %32) #5
  %33 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %34 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %35 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %36 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx27, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %33, %struct.shading_vertex_s* %34, %struct.shading_vertex_s* %35, i32 2, %struct.shading_vertex_s* %p1217, %struct.patch_color_s* %36) #5
  %37 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %38 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %39 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 2
  %40 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx28, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %37, %struct.shading_vertex_s* %38, %struct.shading_vertex_s* %39, i32 2, %struct.shading_vertex_s* %p20, %struct.patch_color_s* %40) #5
  %41 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %42 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %43 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %call29 = call i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %41, %struct.shading_vertex_s* %42, %struct.shading_vertex_s* %43, %struct.shading_vertex_s* %p01) #5
  store i32 %call29, i32* %code, align 4, !tbaa !5
  %44 = load i32, i32* %code, align 4, !tbaa !5
  %cmp30 = icmp sge i32 %44, 0
  br i1 %cmp30, label %if.then.31, label %if.end.33

if.then.31:                                       ; preds = %if.end
  %45 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %46 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %47 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %call32 = call i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %45, %struct.shading_vertex_s* %46, %struct.shading_vertex_s* %47, %struct.shading_vertex_s* %p1217) #5
  store i32 %call32, i32* %code, align 4, !tbaa !5
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.31, %if.end
  %48 = load i32, i32* %code, align 4, !tbaa !5
  %cmp34 = icmp sge i32 %48, 0
  br i1 %cmp34, label %if.then.35, label %if.end.37

if.then.35:                                       ; preds = %if.end.33
  %49 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %50 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %51 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %call36 = call i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %49, %struct.shading_vertex_s* %50, %struct.shading_vertex_s* %51, %struct.shading_vertex_s* %p20) #5
  store i32 %call36, i32* %code, align 4, !tbaa !5
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.35, %if.end.33
  %52 = load i32, i32* %code, align 4, !tbaa !5
  %cmp38 = icmp sge i32 %52, 0
  br i1 %cmp38, label %if.then.39, label %if.end.41

if.then.39:                                       ; preds = %if.end.37
  %53 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %54 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %call40 = call i32 @mesh_triangle_rec(%struct.patch_fill_state_s* %53, %struct.shading_vertex_s* %54, %struct.shading_vertex_s* %p01, %struct.shading_vertex_s* %p20) #5
  store i32 %call40, i32* %code, align 4, !tbaa !5
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.39, %if.end.37
  %55 = load i32, i32* %code, align 4, !tbaa !5
  %cmp42 = icmp sge i32 %55, 0
  br i1 %cmp42, label %if.then.43, label %if.end.45

if.then.43:                                       ; preds = %if.end.41
  %56 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %57 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %call44 = call i32 @mesh_triangle_rec(%struct.patch_fill_state_s* %56, %struct.shading_vertex_s* %57, %struct.shading_vertex_s* %p1217, %struct.shading_vertex_s* %p01) #5
  store i32 %call44, i32* %code, align 4, !tbaa !5
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.43, %if.end.41
  %58 = load i32, i32* %code, align 4, !tbaa !5
  %cmp46 = icmp sge i32 %58, 0
  br i1 %cmp46, label %if.then.47, label %if.end.49

if.then.47:                                       ; preds = %if.end.45
  %59 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %60 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %call48 = call i32 @mesh_triangle_rec(%struct.patch_fill_state_s* %59, %struct.shading_vertex_s* %60, %struct.shading_vertex_s* %p20, %struct.shading_vertex_s* %p1217) #5
  store i32 %call48, i32* %code, align 4, !tbaa !5
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.47, %if.end.45
  %61 = load i32, i32* %code, align 4, !tbaa !5
  %cmp50 = icmp sge i32 %61, 0
  br i1 %cmp50, label %if.then.51, label %if.end.53

if.then.51:                                       ; preds = %if.end.49
  %62 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call52 = call i32 @mesh_triangle_rec(%struct.patch_fill_state_s* %62, %struct.shading_vertex_s* %p01, %struct.shading_vertex_s* %p1217, %struct.shading_vertex_s* %p20) #5
  store i32 %call52, i32* %code, align 4, !tbaa !5
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.51, %if.end.49
  %63 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %64 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %63, i8* %64, i32 3) #5
  %65 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %65, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.53, %if.then.20
  %66 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #2
  %67 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 24, i8* %68) #2
  %69 = bitcast %struct.shading_vertex_s* %p20 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %69) #2
  %70 = bitcast %struct.shading_vertex_s* %p1217 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %70) #2
  %71 = bitcast %struct.shading_vertex_s* %p01 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %71) #2
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %72 = load i32, i32* %retval
  ret i32 %72
}

; Function Attrs: nounwind uwtable
define i32 @gx_shade_background(%struct.gx_device_s* %pdev, %struct.gs_fixed_rect_s* %rect, %struct.gx_device_color_s* %pdevc, i32 %log_op) #0 {
entry:
  %pdev.addr = alloca %struct.gx_device_s*, align 8
  %rect.addr = alloca %struct.gs_fixed_rect_s*, align 8
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  %log_op.addr = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.gx_device_s* %pdev, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  store %struct.gs_fixed_rect_s* %rect, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  store i32 %log_op, i32* %log_op.addr, align 4, !tbaa !5
  %0 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %2, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %3 = load i32, i32* %x, align 4, !tbaa !134
  %conv = sext i32 %3 to i64
  %sub = sub nsw i64 %conv, 128
  %conv1 = trunc i64 %sub to i32
  %start = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  store i32 %conv1, i32* %x2, align 4, !tbaa !128
  %4 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %4, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p3, i32 0, i32 1
  %5 = load i32, i32* %y, align 4, !tbaa !133
  %conv4 = sext i32 %5 to i64
  %sub5 = sub nsw i64 %conv4, 128
  %conv6 = trunc i64 %sub5 to i32
  %start7 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start7, i32 0, i32 1
  store i32 %conv6, i32* %y8, align 4, !tbaa !130
  %6 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %p9 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %6, i32 0, i32 0
  %x10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p9, i32 0, i32 0
  %7 = load i32, i32* %x10, align 4, !tbaa !134
  %conv11 = sext i32 %7 to i64
  %sub12 = sub nsw i64 %conv11, 128
  %conv13 = trunc i64 %sub12 to i32
  %end = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  store i32 %conv13, i32* %x14, align 4, !tbaa !131
  %8 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %8, i32 0, i32 1
  %y15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 1
  %9 = load i32, i32* %y15, align 4, !tbaa !135
  %conv16 = sext i32 %9 to i64
  %add = add nsw i64 %conv16, 128
  %conv17 = trunc i64 %add to i32
  %end18 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end18, i32 0, i32 1
  store i32 %conv17, i32* %y19, align 4, !tbaa !132
  %10 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %q20 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %10, i32 0, i32 1
  %x21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q20, i32 0, i32 0
  %11 = load i32, i32* %x21, align 4, !tbaa !136
  %conv22 = sext i32 %11 to i64
  %add23 = add nsw i64 %conv22, 128
  %conv24 = trunc i64 %add23 to i32
  %start25 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start25, i32 0, i32 0
  store i32 %conv24, i32* %x26, align 4, !tbaa !128
  %12 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %p27 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %12, i32 0, i32 0
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p27, i32 0, i32 1
  %13 = load i32, i32* %y28, align 4, !tbaa !133
  %conv29 = sext i32 %13 to i64
  %sub30 = sub nsw i64 %conv29, 128
  %conv31 = trunc i64 %sub30 to i32
  %start32 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y33 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start32, i32 0, i32 1
  store i32 %conv31, i32* %y33, align 4, !tbaa !130
  %14 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %q34 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %14, i32 0, i32 1
  %x35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q34, i32 0, i32 0
  %15 = load i32, i32* %x35, align 4, !tbaa !136
  %conv36 = sext i32 %15 to i64
  %add37 = add nsw i64 %conv36, 128
  %conv38 = trunc i64 %add37 to i32
  %end39 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x40 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end39, i32 0, i32 0
  store i32 %conv38, i32* %x40, align 4, !tbaa !131
  %16 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %rect.addr, align 8, !tbaa !1
  %q41 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %16, i32 0, i32 1
  %y42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q41, i32 0, i32 1
  %17 = load i32, i32* %y42, align 4, !tbaa !135
  %conv43 = sext i32 %17 to i64
  %add44 = add nsw i64 %conv43, 128
  %conv45 = trunc i64 %add44 to i32
  %end46 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end46, i32 0, i32 1
  store i32 %conv45, i32* %y47, align 4, !tbaa !132
  %18 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %18, i32 0, i32 42
  %fill_trapezoid = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 27
  %19 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid, align 8, !tbaa !157
  %20 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev.addr, align 8, !tbaa !1
  %start48 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start48, i32 0, i32 1
  %21 = load i32, i32* %y49, align 4, !tbaa !130
  %end50 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end50, i32 0, i32 1
  %22 = load i32, i32* %y51, align 4, !tbaa !132
  %23 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %24 = load i32, i32* %log_op.addr, align 4, !tbaa !5
  %call = call i32 %19(%struct.gx_device_s* %20, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %21, i32 %22, i32 0, %struct.gx_device_color_s* %23, i32 %24) #5
  %25 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %25) #2
  %26 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %26) #2
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal void @make_tensor_patch(%struct.patch_fill_state_s* %pfs, %struct.tensor_patch* %p, %struct.patch_curve_s* %curve, %struct.gs_fixed_point_s* %interior) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  %curve.addr = alloca %struct.patch_curve_s*, align 8
  %interior.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pcs = alloca %struct.gs_color_space_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  store %struct.patch_curve_s* %curve, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %interior, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %direct_space = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 2
  %2 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %direct_space, align 8, !tbaa !16
  store %struct.gs_color_space_s* %2, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %3 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx, i32 0, i64 0
  %4 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %4, i64 0
  %vertex = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx2, i32 0, i32 0
  %p3 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex, i32 0, i32 0
  %5 = bitcast %struct.gs_fixed_point_s* %arrayidx1 to i8*
  %6 = bitcast %struct.gs_fixed_point_s* %p3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false), !tbaa.struct !117
  %7 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole4 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %7, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole4, i32 0, i64 1
  %arrayidx6 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx5, i32 0, i64 0
  %8 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %8, i64 0
  %control = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx7, i32 0, i32 1
  %arrayidx8 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control, i32 0, i64 0
  %9 = bitcast %struct.gs_fixed_point_s* %arrayidx6 to i8*
  %10 = bitcast %struct.gs_fixed_point_s* %arrayidx8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 4, i1 false), !tbaa.struct !117
  %11 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole9 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %11, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole9, i32 0, i64 2
  %arrayidx11 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx10, i32 0, i64 0
  %12 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %12, i64 0
  %control13 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx12, i32 0, i32 1
  %arrayidx14 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control13, i32 0, i64 1
  %13 = bitcast %struct.gs_fixed_point_s* %arrayidx11 to i8*
  %14 = bitcast %struct.gs_fixed_point_s* %arrayidx14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false), !tbaa.struct !117
  %15 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole15 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %15, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole15, i32 0, i64 3
  %arrayidx17 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx16, i32 0, i64 0
  %16 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %16, i64 1
  %vertex19 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx18, i32 0, i32 0
  %p20 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex19, i32 0, i32 0
  %17 = bitcast %struct.gs_fixed_point_s* %arrayidx17 to i8*
  %18 = bitcast %struct.gs_fixed_point_s* %p20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false), !tbaa.struct !117
  %19 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole21 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %19, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole21, i32 0, i64 3
  %arrayidx23 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx22, i32 0, i64 1
  %20 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx24 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %20, i64 1
  %control25 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx24, i32 0, i32 1
  %arrayidx26 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control25, i32 0, i64 0
  %21 = bitcast %struct.gs_fixed_point_s* %arrayidx23 to i8*
  %22 = bitcast %struct.gs_fixed_point_s* %arrayidx26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !tbaa.struct !117
  %23 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole27 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %23, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole27, i32 0, i64 3
  %arrayidx29 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx28, i32 0, i64 2
  %24 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %24, i64 1
  %control31 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx30, i32 0, i32 1
  %arrayidx32 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control31, i32 0, i64 1
  %25 = bitcast %struct.gs_fixed_point_s* %arrayidx29 to i8*
  %26 = bitcast %struct.gs_fixed_point_s* %arrayidx32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 4, i1 false), !tbaa.struct !117
  %27 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole33 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %27, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole33, i32 0, i64 3
  %arrayidx35 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx34, i32 0, i64 3
  %28 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %28, i64 2
  %vertex37 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx36, i32 0, i32 0
  %p38 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex37, i32 0, i32 0
  %29 = bitcast %struct.gs_fixed_point_s* %arrayidx35 to i8*
  %30 = bitcast %struct.gs_fixed_point_s* %p38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false), !tbaa.struct !117
  %31 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole39 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %31, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole39, i32 0, i64 2
  %arrayidx41 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx40, i32 0, i64 3
  %32 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx42 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %32, i64 2
  %control43 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx42, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control43, i32 0, i64 0
  %33 = bitcast %struct.gs_fixed_point_s* %arrayidx41 to i8*
  %34 = bitcast %struct.gs_fixed_point_s* %arrayidx44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 4, i1 false), !tbaa.struct !117
  %35 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole45 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %35, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole45, i32 0, i64 1
  %arrayidx47 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx46, i32 0, i64 3
  %36 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %36, i64 2
  %control49 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx48, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control49, i32 0, i64 1
  %37 = bitcast %struct.gs_fixed_point_s* %arrayidx47 to i8*
  %38 = bitcast %struct.gs_fixed_point_s* %arrayidx50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false), !tbaa.struct !117
  %39 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole51 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %39, i32 0, i32 0
  %arrayidx52 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole51, i32 0, i64 0
  %arrayidx53 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx52, i32 0, i64 3
  %40 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx54 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %40, i64 3
  %vertex55 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx54, i32 0, i32 0
  %p56 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex55, i32 0, i32 0
  %41 = bitcast %struct.gs_fixed_point_s* %arrayidx53 to i8*
  %42 = bitcast %struct.gs_fixed_point_s* %p56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 4, i1 false), !tbaa.struct !117
  %43 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole57 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %43, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole57, i32 0, i64 0
  %arrayidx59 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx58, i32 0, i64 2
  %44 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %44, i64 3
  %control61 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx60, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control61, i32 0, i64 0
  %45 = bitcast %struct.gs_fixed_point_s* %arrayidx59 to i8*
  %46 = bitcast %struct.gs_fixed_point_s* %arrayidx62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false), !tbaa.struct !117
  %47 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole63 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %47, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole63, i32 0, i64 0
  %arrayidx65 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx64, i32 0, i64 1
  %48 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %48, i64 3
  %control67 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx66, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control67, i32 0, i64 1
  %49 = bitcast %struct.gs_fixed_point_s* %arrayidx65 to i8*
  %50 = bitcast %struct.gs_fixed_point_s* %arrayidx68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 4, i1 false), !tbaa.struct !117
  %51 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.gs_fixed_point_s* %51, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %52 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole69 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %52, i32 0, i32 0
  %arrayidx70 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole69, i32 0, i64 1
  %arrayidx71 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx70, i32 0, i64 1
  %53 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %53, i64 0
  %54 = bitcast %struct.gs_fixed_point_s* %arrayidx71 to i8*
  %55 = bitcast %struct.gs_fixed_point_s* %arrayidx72 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 4, i1 false), !tbaa.struct !117
  %56 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole73 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %56, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole73, i32 0, i64 1
  %arrayidx75 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx74, i32 0, i64 2
  %57 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx76 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %57, i64 1
  %58 = bitcast %struct.gs_fixed_point_s* %arrayidx75 to i8*
  %59 = bitcast %struct.gs_fixed_point_s* %arrayidx76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 4, i1 false), !tbaa.struct !117
  %60 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole77 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %60, i32 0, i32 0
  %arrayidx78 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole77, i32 0, i64 2
  %arrayidx79 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx78, i32 0, i64 2
  %61 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %61, i64 2
  %62 = bitcast %struct.gs_fixed_point_s* %arrayidx79 to i8*
  %63 = bitcast %struct.gs_fixed_point_s* %arrayidx80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 4, i1 false), !tbaa.struct !117
  %64 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole81 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %64, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole81, i32 0, i64 2
  %arrayidx83 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx82, i32 0, i64 1
  %65 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %interior.addr, align 8, !tbaa !1
  %arrayidx84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %65, i64 3
  %66 = bitcast %struct.gs_fixed_point_s* %arrayidx83 to i8*
  %67 = bitcast %struct.gs_fixed_point_s* %arrayidx84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 4, i1 false), !tbaa.struct !117
  br label %if.end

if.else:                                          ; preds = %entry
  %68 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole85 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %68, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole85, i32 0, i64 0
  %arrayidx87 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx86, i32 0, i64 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx87, i32 0, i32 0
  %69 = load i32, i32* %x, align 4, !tbaa !109
  %70 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole88 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %70, i32 0, i32 0
  %arrayidx89 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole88, i32 0, i64 3
  %arrayidx90 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx89, i32 0, i64 1
  %x91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx90, i32 0, i32 0
  %71 = load i32, i32* %x91, align 4, !tbaa !109
  %call = call i32 @lcp1(i32 %69, i32 %71) #5
  %72 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole92 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %72, i32 0, i32 0
  %arrayidx93 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole92, i32 0, i64 1
  %arrayidx94 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx93, i32 0, i64 0
  %x95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx94, i32 0, i32 0
  %73 = load i32, i32* %x95, align 4, !tbaa !109
  %74 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole96 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %74, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole96, i32 0, i64 1
  %arrayidx98 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx97, i32 0, i64 3
  %x99 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx98, i32 0, i32 0
  %75 = load i32, i32* %x99, align 4, !tbaa !109
  %call100 = call i32 @lcp1(i32 %73, i32 %75) #5
  %add = add nsw i32 %call, %call100
  %76 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole101 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %76, i32 0, i32 0
  %arrayidx102 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole101, i32 0, i64 0
  %arrayidx103 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx102, i32 0, i64 0
  %x104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx103, i32 0, i32 0
  %77 = load i32, i32* %x104, align 4, !tbaa !109
  %78 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole105 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %78, i32 0, i32 0
  %arrayidx106 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole105, i32 0, i64 0
  %arrayidx107 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx106, i32 0, i64 3
  %x108 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx107, i32 0, i32 0
  %79 = load i32, i32* %x108, align 4, !tbaa !109
  %call109 = call i32 @lcp1(i32 %77, i32 %79) #5
  %80 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole110 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %80, i32 0, i32 0
  %arrayidx111 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole110, i32 0, i64 3
  %arrayidx112 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx111, i32 0, i64 0
  %x113 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx112, i32 0, i32 0
  %81 = load i32, i32* %x113, align 4, !tbaa !109
  %82 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole114 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %82, i32 0, i32 0
  %arrayidx115 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole114, i32 0, i64 3
  %arrayidx116 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx115, i32 0, i64 3
  %x117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx116, i32 0, i32 0
  %83 = load i32, i32* %x117, align 4, !tbaa !109
  %call118 = call i32 @lcp1(i32 %81, i32 %83) #5
  %call119 = call i32 @lcp1(i32 %call109, i32 %call118) #5
  %sub = sub nsw i32 %add, %call119
  %84 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole120 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %84, i32 0, i32 0
  %arrayidx121 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole120, i32 0, i64 1
  %arrayidx122 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx121, i32 0, i64 1
  %x123 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx122, i32 0, i32 0
  store i32 %sub, i32* %x123, align 4, !tbaa !109
  %85 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole124 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %85, i32 0, i32 0
  %arrayidx125 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole124, i32 0, i64 0
  %arrayidx126 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx125, i32 0, i64 2
  %x127 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx126, i32 0, i32 0
  %86 = load i32, i32* %x127, align 4, !tbaa !109
  %87 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole128 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %87, i32 0, i32 0
  %arrayidx129 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole128, i32 0, i64 3
  %arrayidx130 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx129, i32 0, i64 2
  %x131 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx130, i32 0, i32 0
  %88 = load i32, i32* %x131, align 4, !tbaa !109
  %call132 = call i32 @lcp1(i32 %86, i32 %88) #5
  %89 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole133 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %89, i32 0, i32 0
  %arrayidx134 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole133, i32 0, i64 1
  %arrayidx135 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx134, i32 0, i64 0
  %x136 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx135, i32 0, i32 0
  %90 = load i32, i32* %x136, align 4, !tbaa !109
  %91 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole137 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %91, i32 0, i32 0
  %arrayidx138 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole137, i32 0, i64 1
  %arrayidx139 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx138, i32 0, i64 3
  %x140 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx139, i32 0, i32 0
  %92 = load i32, i32* %x140, align 4, !tbaa !109
  %call141 = call i32 @lcp2(i32 %90, i32 %92) #5
  %add142 = add nsw i32 %call132, %call141
  %93 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole143 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %93, i32 0, i32 0
  %arrayidx144 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole143, i32 0, i64 0
  %arrayidx145 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx144, i32 0, i64 0
  %x146 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx145, i32 0, i32 0
  %94 = load i32, i32* %x146, align 4, !tbaa !109
  %95 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole147 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %95, i32 0, i32 0
  %arrayidx148 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole147, i32 0, i64 0
  %arrayidx149 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx148, i32 0, i64 3
  %x150 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx149, i32 0, i32 0
  %96 = load i32, i32* %x150, align 4, !tbaa !109
  %call151 = call i32 @lcp2(i32 %94, i32 %96) #5
  %97 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole152 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %97, i32 0, i32 0
  %arrayidx153 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole152, i32 0, i64 3
  %arrayidx154 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx153, i32 0, i64 0
  %x155 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx154, i32 0, i32 0
  %98 = load i32, i32* %x155, align 4, !tbaa !109
  %99 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole156 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %99, i32 0, i32 0
  %arrayidx157 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole156, i32 0, i64 3
  %arrayidx158 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx157, i32 0, i64 3
  %x159 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx158, i32 0, i32 0
  %100 = load i32, i32* %x159, align 4, !tbaa !109
  %call160 = call i32 @lcp2(i32 %98, i32 %100) #5
  %call161 = call i32 @lcp1(i32 %call151, i32 %call160) #5
  %sub162 = sub nsw i32 %add142, %call161
  %101 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole163 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %101, i32 0, i32 0
  %arrayidx164 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole163, i32 0, i64 1
  %arrayidx165 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx164, i32 0, i64 2
  %x166 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx165, i32 0, i32 0
  store i32 %sub162, i32* %x166, align 4, !tbaa !109
  %102 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole167 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %102, i32 0, i32 0
  %arrayidx168 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole167, i32 0, i64 0
  %arrayidx169 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx168, i32 0, i64 1
  %x170 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx169, i32 0, i32 0
  %103 = load i32, i32* %x170, align 4, !tbaa !109
  %104 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole171 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %104, i32 0, i32 0
  %arrayidx172 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole171, i32 0, i64 3
  %arrayidx173 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx172, i32 0, i64 1
  %x174 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx173, i32 0, i32 0
  %105 = load i32, i32* %x174, align 4, !tbaa !109
  %call175 = call i32 @lcp2(i32 %103, i32 %105) #5
  %106 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole176 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %106, i32 0, i32 0
  %arrayidx177 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole176, i32 0, i64 2
  %arrayidx178 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx177, i32 0, i64 0
  %x179 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx178, i32 0, i32 0
  %107 = load i32, i32* %x179, align 4, !tbaa !109
  %108 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole180 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %108, i32 0, i32 0
  %arrayidx181 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole180, i32 0, i64 2
  %arrayidx182 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx181, i32 0, i64 3
  %x183 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx182, i32 0, i32 0
  %109 = load i32, i32* %x183, align 4, !tbaa !109
  %call184 = call i32 @lcp1(i32 %107, i32 %109) #5
  %add185 = add nsw i32 %call175, %call184
  %110 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole186 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %110, i32 0, i32 0
  %arrayidx187 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole186, i32 0, i64 0
  %arrayidx188 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx187, i32 0, i64 0
  %x189 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx188, i32 0, i32 0
  %111 = load i32, i32* %x189, align 4, !tbaa !109
  %112 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole190 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %112, i32 0, i32 0
  %arrayidx191 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole190, i32 0, i64 0
  %arrayidx192 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx191, i32 0, i64 3
  %x193 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx192, i32 0, i32 0
  %113 = load i32, i32* %x193, align 4, !tbaa !109
  %call194 = call i32 @lcp1(i32 %111, i32 %113) #5
  %114 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole195 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %114, i32 0, i32 0
  %arrayidx196 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole195, i32 0, i64 3
  %arrayidx197 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx196, i32 0, i64 0
  %x198 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx197, i32 0, i32 0
  %115 = load i32, i32* %x198, align 4, !tbaa !109
  %116 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole199 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %116, i32 0, i32 0
  %arrayidx200 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole199, i32 0, i64 3
  %arrayidx201 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx200, i32 0, i64 3
  %x202 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx201, i32 0, i32 0
  %117 = load i32, i32* %x202, align 4, !tbaa !109
  %call203 = call i32 @lcp1(i32 %115, i32 %117) #5
  %call204 = call i32 @lcp2(i32 %call194, i32 %call203) #5
  %sub205 = sub nsw i32 %add185, %call204
  %118 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole206 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %118, i32 0, i32 0
  %arrayidx207 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole206, i32 0, i64 2
  %arrayidx208 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx207, i32 0, i64 1
  %x209 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx208, i32 0, i32 0
  store i32 %sub205, i32* %x209, align 4, !tbaa !109
  %119 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole210 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %119, i32 0, i32 0
  %arrayidx211 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole210, i32 0, i64 0
  %arrayidx212 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx211, i32 0, i64 2
  %x213 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx212, i32 0, i32 0
  %120 = load i32, i32* %x213, align 4, !tbaa !109
  %121 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole214 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %121, i32 0, i32 0
  %arrayidx215 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole214, i32 0, i64 3
  %arrayidx216 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx215, i32 0, i64 2
  %x217 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx216, i32 0, i32 0
  %122 = load i32, i32* %x217, align 4, !tbaa !109
  %call218 = call i32 @lcp2(i32 %120, i32 %122) #5
  %123 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole219 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %123, i32 0, i32 0
  %arrayidx220 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole219, i32 0, i64 2
  %arrayidx221 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx220, i32 0, i64 0
  %x222 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx221, i32 0, i32 0
  %124 = load i32, i32* %x222, align 4, !tbaa !109
  %125 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole223 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %125, i32 0, i32 0
  %arrayidx224 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole223, i32 0, i64 2
  %arrayidx225 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx224, i32 0, i64 3
  %x226 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx225, i32 0, i32 0
  %126 = load i32, i32* %x226, align 4, !tbaa !109
  %call227 = call i32 @lcp2(i32 %124, i32 %126) #5
  %add228 = add nsw i32 %call218, %call227
  %127 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole229 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %127, i32 0, i32 0
  %arrayidx230 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole229, i32 0, i64 0
  %arrayidx231 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx230, i32 0, i64 0
  %x232 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx231, i32 0, i32 0
  %128 = load i32, i32* %x232, align 4, !tbaa !109
  %129 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole233 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %129, i32 0, i32 0
  %arrayidx234 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole233, i32 0, i64 0
  %arrayidx235 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx234, i32 0, i64 3
  %x236 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx235, i32 0, i32 0
  %130 = load i32, i32* %x236, align 4, !tbaa !109
  %call237 = call i32 @lcp2(i32 %128, i32 %130) #5
  %131 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole238 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %131, i32 0, i32 0
  %arrayidx239 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole238, i32 0, i64 3
  %arrayidx240 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx239, i32 0, i64 0
  %x241 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx240, i32 0, i32 0
  %132 = load i32, i32* %x241, align 4, !tbaa !109
  %133 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole242 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %133, i32 0, i32 0
  %arrayidx243 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole242, i32 0, i64 3
  %arrayidx244 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx243, i32 0, i64 3
  %x245 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx244, i32 0, i32 0
  %134 = load i32, i32* %x245, align 4, !tbaa !109
  %call246 = call i32 @lcp2(i32 %132, i32 %134) #5
  %call247 = call i32 @lcp2(i32 %call237, i32 %call246) #5
  %sub248 = sub nsw i32 %add228, %call247
  %135 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole249 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %135, i32 0, i32 0
  %arrayidx250 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole249, i32 0, i64 2
  %arrayidx251 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx250, i32 0, i64 2
  %x252 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx251, i32 0, i32 0
  store i32 %sub248, i32* %x252, align 4, !tbaa !109
  %136 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole253 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %136, i32 0, i32 0
  %arrayidx254 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole253, i32 0, i64 0
  %arrayidx255 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx254, i32 0, i64 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx255, i32 0, i32 1
  %137 = load i32, i32* %y, align 4, !tbaa !110
  %138 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole256 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %138, i32 0, i32 0
  %arrayidx257 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole256, i32 0, i64 3
  %arrayidx258 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx257, i32 0, i64 1
  %y259 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx258, i32 0, i32 1
  %139 = load i32, i32* %y259, align 4, !tbaa !110
  %call260 = call i32 @lcp1(i32 %137, i32 %139) #5
  %140 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole261 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %140, i32 0, i32 0
  %arrayidx262 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole261, i32 0, i64 1
  %arrayidx263 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx262, i32 0, i64 0
  %y264 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx263, i32 0, i32 1
  %141 = load i32, i32* %y264, align 4, !tbaa !110
  %142 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole265 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %142, i32 0, i32 0
  %arrayidx266 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole265, i32 0, i64 1
  %arrayidx267 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx266, i32 0, i64 3
  %y268 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx267, i32 0, i32 1
  %143 = load i32, i32* %y268, align 4, !tbaa !110
  %call269 = call i32 @lcp1(i32 %141, i32 %143) #5
  %add270 = add nsw i32 %call260, %call269
  %144 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole271 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %144, i32 0, i32 0
  %arrayidx272 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole271, i32 0, i64 0
  %arrayidx273 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx272, i32 0, i64 0
  %y274 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx273, i32 0, i32 1
  %145 = load i32, i32* %y274, align 4, !tbaa !110
  %146 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole275 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %146, i32 0, i32 0
  %arrayidx276 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole275, i32 0, i64 0
  %arrayidx277 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx276, i32 0, i64 3
  %y278 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx277, i32 0, i32 1
  %147 = load i32, i32* %y278, align 4, !tbaa !110
  %call279 = call i32 @lcp1(i32 %145, i32 %147) #5
  %148 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole280 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %148, i32 0, i32 0
  %arrayidx281 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole280, i32 0, i64 3
  %arrayidx282 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx281, i32 0, i64 0
  %y283 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx282, i32 0, i32 1
  %149 = load i32, i32* %y283, align 4, !tbaa !110
  %150 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole284 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %150, i32 0, i32 0
  %arrayidx285 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole284, i32 0, i64 3
  %arrayidx286 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx285, i32 0, i64 3
  %y287 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx286, i32 0, i32 1
  %151 = load i32, i32* %y287, align 4, !tbaa !110
  %call288 = call i32 @lcp1(i32 %149, i32 %151) #5
  %call289 = call i32 @lcp1(i32 %call279, i32 %call288) #5
  %sub290 = sub nsw i32 %add270, %call289
  %152 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole291 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %152, i32 0, i32 0
  %arrayidx292 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole291, i32 0, i64 1
  %arrayidx293 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx292, i32 0, i64 1
  %y294 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx293, i32 0, i32 1
  store i32 %sub290, i32* %y294, align 4, !tbaa !110
  %153 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole295 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %153, i32 0, i32 0
  %arrayidx296 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole295, i32 0, i64 0
  %arrayidx297 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx296, i32 0, i64 2
  %y298 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx297, i32 0, i32 1
  %154 = load i32, i32* %y298, align 4, !tbaa !110
  %155 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole299 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %155, i32 0, i32 0
  %arrayidx300 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole299, i32 0, i64 3
  %arrayidx301 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx300, i32 0, i64 2
  %y302 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx301, i32 0, i32 1
  %156 = load i32, i32* %y302, align 4, !tbaa !110
  %call303 = call i32 @lcp1(i32 %154, i32 %156) #5
  %157 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole304 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %157, i32 0, i32 0
  %arrayidx305 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole304, i32 0, i64 1
  %arrayidx306 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx305, i32 0, i64 0
  %y307 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx306, i32 0, i32 1
  %158 = load i32, i32* %y307, align 4, !tbaa !110
  %159 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole308 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %159, i32 0, i32 0
  %arrayidx309 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole308, i32 0, i64 1
  %arrayidx310 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx309, i32 0, i64 3
  %y311 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx310, i32 0, i32 1
  %160 = load i32, i32* %y311, align 4, !tbaa !110
  %call312 = call i32 @lcp2(i32 %158, i32 %160) #5
  %add313 = add nsw i32 %call303, %call312
  %161 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole314 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %161, i32 0, i32 0
  %arrayidx315 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole314, i32 0, i64 0
  %arrayidx316 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx315, i32 0, i64 0
  %y317 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx316, i32 0, i32 1
  %162 = load i32, i32* %y317, align 4, !tbaa !110
  %163 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole318 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %163, i32 0, i32 0
  %arrayidx319 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole318, i32 0, i64 0
  %arrayidx320 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx319, i32 0, i64 3
  %y321 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx320, i32 0, i32 1
  %164 = load i32, i32* %y321, align 4, !tbaa !110
  %call322 = call i32 @lcp2(i32 %162, i32 %164) #5
  %165 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole323 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %165, i32 0, i32 0
  %arrayidx324 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole323, i32 0, i64 3
  %arrayidx325 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx324, i32 0, i64 0
  %y326 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx325, i32 0, i32 1
  %166 = load i32, i32* %y326, align 4, !tbaa !110
  %167 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole327 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %167, i32 0, i32 0
  %arrayidx328 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole327, i32 0, i64 3
  %arrayidx329 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx328, i32 0, i64 3
  %y330 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx329, i32 0, i32 1
  %168 = load i32, i32* %y330, align 4, !tbaa !110
  %call331 = call i32 @lcp2(i32 %166, i32 %168) #5
  %call332 = call i32 @lcp1(i32 %call322, i32 %call331) #5
  %sub333 = sub nsw i32 %add313, %call332
  %169 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole334 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %169, i32 0, i32 0
  %arrayidx335 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole334, i32 0, i64 1
  %arrayidx336 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx335, i32 0, i64 2
  %y337 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx336, i32 0, i32 1
  store i32 %sub333, i32* %y337, align 4, !tbaa !110
  %170 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole338 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %170, i32 0, i32 0
  %arrayidx339 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole338, i32 0, i64 0
  %arrayidx340 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx339, i32 0, i64 1
  %y341 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx340, i32 0, i32 1
  %171 = load i32, i32* %y341, align 4, !tbaa !110
  %172 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole342 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %172, i32 0, i32 0
  %arrayidx343 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole342, i32 0, i64 3
  %arrayidx344 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx343, i32 0, i64 1
  %y345 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx344, i32 0, i32 1
  %173 = load i32, i32* %y345, align 4, !tbaa !110
  %call346 = call i32 @lcp2(i32 %171, i32 %173) #5
  %174 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole347 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %174, i32 0, i32 0
  %arrayidx348 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole347, i32 0, i64 2
  %arrayidx349 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx348, i32 0, i64 0
  %y350 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx349, i32 0, i32 1
  %175 = load i32, i32* %y350, align 4, !tbaa !110
  %176 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole351 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %176, i32 0, i32 0
  %arrayidx352 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole351, i32 0, i64 2
  %arrayidx353 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx352, i32 0, i64 3
  %y354 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx353, i32 0, i32 1
  %177 = load i32, i32* %y354, align 4, !tbaa !110
  %call355 = call i32 @lcp1(i32 %175, i32 %177) #5
  %add356 = add nsw i32 %call346, %call355
  %178 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole357 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %178, i32 0, i32 0
  %arrayidx358 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole357, i32 0, i64 0
  %arrayidx359 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx358, i32 0, i64 0
  %y360 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx359, i32 0, i32 1
  %179 = load i32, i32* %y360, align 4, !tbaa !110
  %180 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole361 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %180, i32 0, i32 0
  %arrayidx362 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole361, i32 0, i64 0
  %arrayidx363 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx362, i32 0, i64 3
  %y364 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx363, i32 0, i32 1
  %181 = load i32, i32* %y364, align 4, !tbaa !110
  %call365 = call i32 @lcp1(i32 %179, i32 %181) #5
  %182 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole366 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %182, i32 0, i32 0
  %arrayidx367 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole366, i32 0, i64 3
  %arrayidx368 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx367, i32 0, i64 0
  %y369 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx368, i32 0, i32 1
  %183 = load i32, i32* %y369, align 4, !tbaa !110
  %184 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole370 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %184, i32 0, i32 0
  %arrayidx371 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole370, i32 0, i64 3
  %arrayidx372 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx371, i32 0, i64 3
  %y373 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx372, i32 0, i32 1
  %185 = load i32, i32* %y373, align 4, !tbaa !110
  %call374 = call i32 @lcp1(i32 %183, i32 %185) #5
  %call375 = call i32 @lcp2(i32 %call365, i32 %call374) #5
  %sub376 = sub nsw i32 %add356, %call375
  %186 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole377 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %186, i32 0, i32 0
  %arrayidx378 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole377, i32 0, i64 2
  %arrayidx379 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx378, i32 0, i64 1
  %y380 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx379, i32 0, i32 1
  store i32 %sub376, i32* %y380, align 4, !tbaa !110
  %187 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole381 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %187, i32 0, i32 0
  %arrayidx382 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole381, i32 0, i64 0
  %arrayidx383 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx382, i32 0, i64 2
  %y384 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx383, i32 0, i32 1
  %188 = load i32, i32* %y384, align 4, !tbaa !110
  %189 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole385 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %189, i32 0, i32 0
  %arrayidx386 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole385, i32 0, i64 3
  %arrayidx387 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx386, i32 0, i64 2
  %y388 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx387, i32 0, i32 1
  %190 = load i32, i32* %y388, align 4, !tbaa !110
  %call389 = call i32 @lcp2(i32 %188, i32 %190) #5
  %191 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole390 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %191, i32 0, i32 0
  %arrayidx391 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole390, i32 0, i64 2
  %arrayidx392 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx391, i32 0, i64 0
  %y393 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx392, i32 0, i32 1
  %192 = load i32, i32* %y393, align 4, !tbaa !110
  %193 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole394 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %193, i32 0, i32 0
  %arrayidx395 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole394, i32 0, i64 2
  %arrayidx396 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx395, i32 0, i64 3
  %y397 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx396, i32 0, i32 1
  %194 = load i32, i32* %y397, align 4, !tbaa !110
  %call398 = call i32 @lcp2(i32 %192, i32 %194) #5
  %add399 = add nsw i32 %call389, %call398
  %195 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole400 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %195, i32 0, i32 0
  %arrayidx401 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole400, i32 0, i64 0
  %arrayidx402 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx401, i32 0, i64 0
  %y403 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx402, i32 0, i32 1
  %196 = load i32, i32* %y403, align 4, !tbaa !110
  %197 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole404 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %197, i32 0, i32 0
  %arrayidx405 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole404, i32 0, i64 0
  %arrayidx406 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx405, i32 0, i64 3
  %y407 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx406, i32 0, i32 1
  %198 = load i32, i32* %y407, align 4, !tbaa !110
  %call408 = call i32 @lcp2(i32 %196, i32 %198) #5
  %199 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole409 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %199, i32 0, i32 0
  %arrayidx410 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole409, i32 0, i64 3
  %arrayidx411 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx410, i32 0, i64 0
  %y412 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx411, i32 0, i32 1
  %200 = load i32, i32* %y412, align 4, !tbaa !110
  %201 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole413 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %201, i32 0, i32 0
  %arrayidx414 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole413, i32 0, i64 3
  %arrayidx415 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx414, i32 0, i64 3
  %y416 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx415, i32 0, i32 1
  %202 = load i32, i32* %y416, align 4, !tbaa !110
  %call417 = call i32 @lcp2(i32 %200, i32 %202) #5
  %call418 = call i32 @lcp2(i32 %call408, i32 %call417) #5
  %sub419 = sub nsw i32 %add399, %call418
  %203 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole420 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %203, i32 0, i32 0
  %arrayidx421 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole420, i32 0, i64 2
  %arrayidx422 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx421, i32 0, i64 2
  %y423 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx422, i32 0, i32 1
  store i32 %sub419, i32* %y423, align 4, !tbaa !110
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %204 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %205 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %205, i32 0, i32 1
  %arrayidx424 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c, i32 0, i64 0
  %arrayidx425 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx424, i32 0, i64 0
  %206 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx425, align 8, !tbaa !1
  %207 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx426 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %207, i64 0
  %vertex427 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx426, i32 0, i32 0
  %cc = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex427, i32 0, i32 1
  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %cc, i32 0, i32 0
  call void @patch_set_color(%struct.patch_fill_state_s* %204, %struct.patch_color_s* %206, float* %arraydecay) #5
  %208 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %209 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c428 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %209, i32 0, i32 1
  %arrayidx429 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c428, i32 0, i64 1
  %arrayidx430 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx429, i32 0, i64 0
  %210 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx430, align 8, !tbaa !1
  %211 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx431 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %211, i64 1
  %vertex432 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx431, i32 0, i32 0
  %cc433 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex432, i32 0, i32 1
  %arraydecay434 = getelementptr inbounds [64 x float], [64 x float]* %cc433, i32 0, i32 0
  call void @patch_set_color(%struct.patch_fill_state_s* %208, %struct.patch_color_s* %210, float* %arraydecay434) #5
  %212 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %213 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c435 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %213, i32 0, i32 1
  %arrayidx436 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c435, i32 0, i64 1
  %arrayidx437 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx436, i32 0, i64 1
  %214 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx437, align 8, !tbaa !1
  %215 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx438 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %215, i64 2
  %vertex439 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx438, i32 0, i32 0
  %cc440 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex439, i32 0, i32 1
  %arraydecay441 = getelementptr inbounds [64 x float], [64 x float]* %cc440, i32 0, i32 0
  call void @patch_set_color(%struct.patch_fill_state_s* %212, %struct.patch_color_s* %214, float* %arraydecay441) #5
  %216 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %217 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c442 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %217, i32 0, i32 1
  %arrayidx443 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c442, i32 0, i64 0
  %arrayidx444 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx443, i32 0, i64 1
  %218 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx444, align 8, !tbaa !1
  %219 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %arrayidx445 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %219, i64 3
  %vertex446 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx445, i32 0, i32 0
  %cc447 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex446, i32 0, i32 1
  %arraydecay448 = getelementptr inbounds [64 x float], [64 x float]* %cc447, i32 0, i32 0
  call void @patch_set_color(%struct.patch_fill_state_s* %216, %struct.patch_color_s* %218, float* %arraydecay448) #5
  %220 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c449 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %220, i32 0, i32 1
  %arrayidx450 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c449, i32 0, i64 0
  %arrayidx451 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx450, i32 0, i64 0
  %221 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx451, align 8, !tbaa !1
  %222 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_resolve_color_inline(%struct.patch_color_s* %221, %struct.patch_fill_state_s* %222) #5
  %223 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c452 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %223, i32 0, i32 1
  %arrayidx453 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c452, i32 0, i64 0
  %arrayidx454 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx453, i32 0, i64 1
  %224 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx454, align 8, !tbaa !1
  %225 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_resolve_color_inline(%struct.patch_color_s* %224, %struct.patch_fill_state_s* %225) #5
  %226 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c455 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %226, i32 0, i32 1
  %arrayidx456 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c455, i32 0, i64 1
  %arrayidx457 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx456, i32 0, i64 0
  %227 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx457, align 8, !tbaa !1
  %228 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_resolve_color_inline(%struct.patch_color_s* %227, %struct.patch_fill_state_s* %228) #5
  %229 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c458 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %229, i32 0, i32 1
  %arrayidx459 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c458, i32 0, i64 1
  %arrayidx460 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx459, i32 0, i64 1
  %230 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx460, align 8, !tbaa !1
  %231 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_resolve_color_inline(%struct.patch_color_s* %230, %struct.patch_fill_state_s* %231) #5
  %232 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %232, i32 0, i32 9
  %233 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %tobool = icmp ne %struct.gs_function_s* %233, null
  br i1 %tobool, label %if.end.484, label %if.then.461

if.then.461:                                      ; preds = %if.end
  %234 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %234, i32 0, i32 0
  %235 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !20
  %restrict_color = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %235, i32 0, i32 6
  %236 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)** %restrict_color, align 8, !tbaa !24
  %237 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c462 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %237, i32 0, i32 1
  %arrayidx463 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c462, i32 0, i64 0
  %arrayidx464 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx463, i32 0, i64 0
  %238 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx464, align 8, !tbaa !1
  %cc465 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %238, i32 0, i32 1
  %239 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void %236(%struct.gs_client_color_s* %cc465, %struct.gs_color_space_s* %239) #5
  %240 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type466 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %240, i32 0, i32 0
  %241 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type466, align 8, !tbaa !20
  %restrict_color467 = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %241, i32 0, i32 6
  %242 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)** %restrict_color467, align 8, !tbaa !24
  %243 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c468 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %243, i32 0, i32 1
  %arrayidx469 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c468, i32 0, i64 0
  %arrayidx470 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx469, i32 0, i64 1
  %244 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx470, align 8, !tbaa !1
  %cc471 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %244, i32 0, i32 1
  %245 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void %242(%struct.gs_client_color_s* %cc471, %struct.gs_color_space_s* %245) #5
  %246 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type472 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %246, i32 0, i32 0
  %247 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type472, align 8, !tbaa !20
  %restrict_color473 = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %247, i32 0, i32 6
  %248 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)** %restrict_color473, align 8, !tbaa !24
  %249 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c474 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %249, i32 0, i32 1
  %arrayidx475 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c474, i32 0, i64 1
  %arrayidx476 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx475, i32 0, i64 0
  %250 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx476, align 8, !tbaa !1
  %cc477 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %250, i32 0, i32 1
  %251 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void %248(%struct.gs_client_color_s* %cc477, %struct.gs_color_space_s* %251) #5
  %252 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  %type478 = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %252, i32 0, i32 0
  %253 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type478, align 8, !tbaa !20
  %restrict_color479 = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %253, i32 0, i32 6
  %254 = load void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)*, void (%struct.gs_client_color_s*, %struct.gs_color_space_s*)** %restrict_color479, align 8, !tbaa !24
  %255 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c480 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %255, i32 0, i32 1
  %arrayidx481 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c480, i32 0, i64 1
  %arrayidx482 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx481, i32 0, i64 1
  %256 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx482, align 8, !tbaa !1
  %cc483 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %256, i32 0, i32 1
  %257 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %pcs, align 8, !tbaa !1
  call void %254(%struct.gs_client_color_s* %cc483, %struct.gs_color_space_s* %257) #5
  br label %if.end.484

if.end.484:                                       ; preds = %if.then.461, %if.end
  %258 = bitcast %struct.gs_color_space_s** %pcs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %258) #2
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_x_bended(%struct.tensor_patch* %p) #1 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.tensor_patch*, align 8
  %sign = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %sign to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx, i32 0, i64 0
  %2 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole2 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx3, i32 0, i64 1
  %3 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole5 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %3, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole5, i32 0, i64 1
  %arrayidx7 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx6, i32 0, i64 0
  %call = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx1, %struct.gs_fixed_point_s* %arrayidx4, %struct.gs_fixed_point_s* %arrayidx7) #5
  store i32 %call, i32* %sign, align 4, !tbaa !5
  %4 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole8 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %4, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole8, i32 0, i64 0
  %arrayidx10 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx9, i32 0, i64 1
  %5 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole11 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %5, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole11, i32 0, i64 0
  %arrayidx13 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx12, i32 0, i64 2
  %6 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole14 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %6, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole14, i32 0, i64 1
  %arrayidx16 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx15, i32 0, i64 1
  %call17 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx10, %struct.gs_fixed_point_s* %arrayidx13, %struct.gs_fixed_point_s* %arrayidx16) #5
  %call18 = call i32 @neqs(i32* %sign, i32 %call17) #5
  %tobool = icmp ne i32 %call18, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole19 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %7, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole19, i32 0, i64 0
  %arrayidx21 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx20, i32 0, i64 2
  %8 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole22 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %8, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole22, i32 0, i64 0
  %arrayidx24 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx23, i32 0, i64 3
  %9 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole25 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %9, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole25, i32 0, i64 1
  %arrayidx27 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx26, i32 0, i64 2
  %call28 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx21, %struct.gs_fixed_point_s* %arrayidx24, %struct.gs_fixed_point_s* %arrayidx27) #5
  %call29 = call i32 @neqs(i32* %sign, i32 %call28) #5
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end
  %10 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole33 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %10, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole33, i32 0, i64 0
  %arrayidx35 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx34, i32 0, i64 3
  %11 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole36 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %11, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole36, i32 0, i64 0
  %arrayidx38 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx37, i32 0, i64 2
  %12 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole39 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %12, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole39, i32 0, i64 1
  %arrayidx41 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx40, i32 0, i64 3
  %call42 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx35, %struct.gs_fixed_point_s* %arrayidx38, %struct.gs_fixed_point_s* %arrayidx41) #5
  %sub = sub nsw i32 0, %call42
  %call43 = call i32 @neqs(i32* %sign, i32 %sub) #5
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.end.32
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %if.end.32
  %13 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole47 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %13, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole47, i32 0, i64 1
  %arrayidx49 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx48, i32 0, i64 1
  %14 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole50 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %14, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole50, i32 0, i64 1
  %arrayidx52 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx51, i32 0, i64 2
  %15 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole53 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %15, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole53, i32 0, i64 2
  %arrayidx55 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx54, i32 0, i64 1
  %call56 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx49, %struct.gs_fixed_point_s* %arrayidx52, %struct.gs_fixed_point_s* %arrayidx55) #5
  %call57 = call i32 @neqs(i32* %sign, i32 %call56) #5
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.46
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.60:                                        ; preds = %if.end.46
  %16 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole61 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %16, i32 0, i32 0
  %arrayidx62 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole61, i32 0, i64 1
  %arrayidx63 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx62, i32 0, i64 1
  %17 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole64 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %17, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole64, i32 0, i64 1
  %arrayidx66 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx65, i32 0, i64 2
  %18 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole67 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %18, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole67, i32 0, i64 2
  %arrayidx69 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx68, i32 0, i64 1
  %call70 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx63, %struct.gs_fixed_point_s* %arrayidx66, %struct.gs_fixed_point_s* %arrayidx69) #5
  %call71 = call i32 @neqs(i32* %sign, i32 %call70) #5
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.end.60
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.74:                                        ; preds = %if.end.60
  %19 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole75 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %19, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole75, i32 0, i64 1
  %arrayidx77 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx76, i32 0, i64 2
  %20 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole78 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %20, i32 0, i32 0
  %arrayidx79 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole78, i32 0, i64 1
  %arrayidx80 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx79, i32 0, i64 3
  %21 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole81 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %21, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole81, i32 0, i64 2
  %arrayidx83 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx82, i32 0, i64 2
  %call84 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx77, %struct.gs_fixed_point_s* %arrayidx80, %struct.gs_fixed_point_s* %arrayidx83) #5
  %call85 = call i32 @neqs(i32* %sign, i32 %call84) #5
  %tobool86 = icmp ne i32 %call85, 0
  br i1 %tobool86, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.end.74
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.88:                                        ; preds = %if.end.74
  %22 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole89 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %22, i32 0, i32 0
  %arrayidx90 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole89, i32 0, i64 1
  %arrayidx91 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx90, i32 0, i64 3
  %23 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole92 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %23, i32 0, i32 0
  %arrayidx93 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole92, i32 0, i64 1
  %arrayidx94 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx93, i32 0, i64 2
  %24 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole95 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %24, i32 0, i32 0
  %arrayidx96 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole95, i32 0, i64 2
  %arrayidx97 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx96, i32 0, i64 3
  %call98 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx91, %struct.gs_fixed_point_s* %arrayidx94, %struct.gs_fixed_point_s* %arrayidx97) #5
  %sub99 = sub nsw i32 0, %call98
  %call100 = call i32 @neqs(i32* %sign, i32 %sub99) #5
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.end.88
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.103:                                       ; preds = %if.end.88
  %25 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole104 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %25, i32 0, i32 0
  %arrayidx105 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole104, i32 0, i64 2
  %arrayidx106 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx105, i32 0, i64 1
  %26 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole107 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %26, i32 0, i32 0
  %arrayidx108 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole107, i32 0, i64 2
  %arrayidx109 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx108, i32 0, i64 2
  %27 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole110 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %27, i32 0, i32 0
  %arrayidx111 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole110, i32 0, i64 3
  %arrayidx112 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx111, i32 0, i64 1
  %call113 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx106, %struct.gs_fixed_point_s* %arrayidx109, %struct.gs_fixed_point_s* %arrayidx112) #5
  %call114 = call i32 @neqs(i32* %sign, i32 %call113) #5
  %tobool115 = icmp ne i32 %call114, 0
  br i1 %tobool115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %if.end.103
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.117:                                       ; preds = %if.end.103
  %28 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole118 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %28, i32 0, i32 0
  %arrayidx119 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole118, i32 0, i64 2
  %arrayidx120 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx119, i32 0, i64 1
  %29 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole121 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %29, i32 0, i32 0
  %arrayidx122 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole121, i32 0, i64 2
  %arrayidx123 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx122, i32 0, i64 2
  %30 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole124 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %30, i32 0, i32 0
  %arrayidx125 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole124, i32 0, i64 3
  %arrayidx126 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx125, i32 0, i64 1
  %call127 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx120, %struct.gs_fixed_point_s* %arrayidx123, %struct.gs_fixed_point_s* %arrayidx126) #5
  %call128 = call i32 @neqs(i32* %sign, i32 %call127) #5
  %tobool129 = icmp ne i32 %call128, 0
  br i1 %tobool129, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %if.end.117
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.131:                                       ; preds = %if.end.117
  %31 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole132 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %31, i32 0, i32 0
  %arrayidx133 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole132, i32 0, i64 2
  %arrayidx134 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx133, i32 0, i64 2
  %32 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole135 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %32, i32 0, i32 0
  %arrayidx136 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole135, i32 0, i64 2
  %arrayidx137 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx136, i32 0, i64 3
  %33 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole138 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %33, i32 0, i32 0
  %arrayidx139 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole138, i32 0, i64 3
  %arrayidx140 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx139, i32 0, i64 2
  %call141 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx134, %struct.gs_fixed_point_s* %arrayidx137, %struct.gs_fixed_point_s* %arrayidx140) #5
  %call142 = call i32 @neqs(i32* %sign, i32 %call141) #5
  %tobool143 = icmp ne i32 %call142, 0
  br i1 %tobool143, label %if.then.144, label %if.end.145

if.then.144:                                      ; preds = %if.end.131
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.145:                                       ; preds = %if.end.131
  %34 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole146 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %34, i32 0, i32 0
  %arrayidx147 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole146, i32 0, i64 2
  %arrayidx148 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx147, i32 0, i64 3
  %35 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole149 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %35, i32 0, i32 0
  %arrayidx150 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole149, i32 0, i64 2
  %arrayidx151 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx150, i32 0, i64 2
  %36 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole152 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %36, i32 0, i32 0
  %arrayidx153 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole152, i32 0, i64 3
  %arrayidx154 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx153, i32 0, i64 3
  %call155 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx148, %struct.gs_fixed_point_s* %arrayidx151, %struct.gs_fixed_point_s* %arrayidx154) #5
  %sub156 = sub nsw i32 0, %call155
  %call157 = call i32 @neqs(i32* %sign, i32 %sub156) #5
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.end.145
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.160:                                       ; preds = %if.end.145
  %37 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole161 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %37, i32 0, i32 0
  %arrayidx162 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole161, i32 0, i64 3
  %arrayidx163 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx162, i32 0, i64 1
  %38 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole164 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %38, i32 0, i32 0
  %arrayidx165 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole164, i32 0, i64 3
  %arrayidx166 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx165, i32 0, i64 2
  %39 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole167 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %39, i32 0, i32 0
  %arrayidx168 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole167, i32 0, i64 2
  %arrayidx169 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx168, i32 0, i64 1
  %call170 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx163, %struct.gs_fixed_point_s* %arrayidx166, %struct.gs_fixed_point_s* %arrayidx169) #5
  %sub171 = sub nsw i32 0, %call170
  %call172 = call i32 @neqs(i32* %sign, i32 %sub171) #5
  %tobool173 = icmp ne i32 %call172, 0
  br i1 %tobool173, label %if.then.174, label %if.end.175

if.then.174:                                      ; preds = %if.end.160
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.175:                                       ; preds = %if.end.160
  %40 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole176 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %40, i32 0, i32 0
  %arrayidx177 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole176, i32 0, i64 3
  %arrayidx178 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx177, i32 0, i64 1
  %41 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole179 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %41, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole179, i32 0, i64 3
  %arrayidx181 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx180, i32 0, i64 2
  %42 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole182 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %42, i32 0, i32 0
  %arrayidx183 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole182, i32 0, i64 2
  %arrayidx184 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx183, i32 0, i64 1
  %call185 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx178, %struct.gs_fixed_point_s* %arrayidx181, %struct.gs_fixed_point_s* %arrayidx184) #5
  %sub186 = sub nsw i32 0, %call185
  %call187 = call i32 @neqs(i32* %sign, i32 %sub186) #5
  %tobool188 = icmp ne i32 %call187, 0
  br i1 %tobool188, label %if.then.189, label %if.end.190

if.then.189:                                      ; preds = %if.end.175
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.190:                                       ; preds = %if.end.175
  %43 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole191 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %43, i32 0, i32 0
  %arrayidx192 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole191, i32 0, i64 3
  %arrayidx193 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx192, i32 0, i64 2
  %44 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole194 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %44, i32 0, i32 0
  %arrayidx195 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole194, i32 0, i64 3
  %arrayidx196 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx195, i32 0, i64 3
  %45 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole197 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %45, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole197, i32 0, i64 2
  %arrayidx199 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx198, i32 0, i64 2
  %call200 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx193, %struct.gs_fixed_point_s* %arrayidx196, %struct.gs_fixed_point_s* %arrayidx199) #5
  %sub201 = sub nsw i32 0, %call200
  %call202 = call i32 @neqs(i32* %sign, i32 %sub201) #5
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.end.190
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.205:                                       ; preds = %if.end.190
  %46 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole206 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %46, i32 0, i32 0
  %arrayidx207 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole206, i32 0, i64 3
  %arrayidx208 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx207, i32 0, i64 3
  %47 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole209 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %47, i32 0, i32 0
  %arrayidx210 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole209, i32 0, i64 3
  %arrayidx211 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx210, i32 0, i64 2
  %48 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole212 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %48, i32 0, i32 0
  %arrayidx213 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole212, i32 0, i64 2
  %arrayidx214 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx213, i32 0, i64 3
  %call215 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx208, %struct.gs_fixed_point_s* %arrayidx211, %struct.gs_fixed_point_s* %arrayidx214) #5
  %call216 = call i32 @neqs(i32* %sign, i32 %call215) #5
  %tobool217 = icmp ne i32 %call216, 0
  br i1 %tobool217, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %if.end.205
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.219:                                       ; preds = %if.end.205
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.219, %if.then.218, %if.then.204, %if.then.189, %if.then.174, %if.then.159, %if.then.144, %if.then.130, %if.then.116, %if.then.102, %if.then.87, %if.then.73, %if.then.59, %if.then.45, %if.then.31, %if.then
  %49 = bitcast i32* %sign to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #2
  %50 = load i32, i32* %retval
  ret i32 %50
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_y_bended(%struct.tensor_patch* %p) #1 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.tensor_patch*, align 8
  %sign = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %sign to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx, i32 0, i64 0
  %2 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole2 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole2, i32 0, i64 1
  %arrayidx4 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx3, i32 0, i64 0
  %3 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole5 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %3, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole5, i32 0, i64 0
  %arrayidx7 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx6, i32 0, i64 1
  %call = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx1, %struct.gs_fixed_point_s* %arrayidx4, %struct.gs_fixed_point_s* %arrayidx7) #5
  store i32 %call, i32* %sign, align 4, !tbaa !5
  %4 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole8 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %4, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole8, i32 0, i64 1
  %arrayidx10 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx9, i32 0, i64 0
  %5 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole11 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %5, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole11, i32 0, i64 2
  %arrayidx13 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx12, i32 0, i64 0
  %6 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole14 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %6, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole14, i32 0, i64 1
  %arrayidx16 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx15, i32 0, i64 1
  %call17 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx10, %struct.gs_fixed_point_s* %arrayidx13, %struct.gs_fixed_point_s* %arrayidx16) #5
  %call18 = call i32 @neqs(i32* %sign, i32 %call17) #5
  %tobool = icmp ne i32 %call18, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole19 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %7, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole19, i32 0, i64 2
  %arrayidx21 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx20, i32 0, i64 0
  %8 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole22 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %8, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole22, i32 0, i64 3
  %arrayidx24 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx23, i32 0, i64 0
  %9 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole25 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %9, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole25, i32 0, i64 2
  %arrayidx27 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx26, i32 0, i64 1
  %call28 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx21, %struct.gs_fixed_point_s* %arrayidx24, %struct.gs_fixed_point_s* %arrayidx27) #5
  %call29 = call i32 @neqs(i32* %sign, i32 %call28) #5
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end
  %10 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole33 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %10, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole33, i32 0, i64 3
  %arrayidx35 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx34, i32 0, i64 0
  %11 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole36 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %11, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole36, i32 0, i64 2
  %arrayidx38 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx37, i32 0, i64 0
  %12 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole39 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %12, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole39, i32 0, i64 3
  %arrayidx41 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx40, i32 0, i64 1
  %call42 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx35, %struct.gs_fixed_point_s* %arrayidx38, %struct.gs_fixed_point_s* %arrayidx41) #5
  %sub = sub nsw i32 0, %call42
  %call43 = call i32 @neqs(i32* %sign, i32 %sub) #5
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %if.end.32
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %if.end.32
  %13 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole47 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %13, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole47, i32 0, i64 1
  %arrayidx49 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx48, i32 0, i64 1
  %14 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole50 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %14, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole50, i32 0, i64 2
  %arrayidx52 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx51, i32 0, i64 1
  %15 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole53 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %15, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole53, i32 0, i64 1
  %arrayidx55 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx54, i32 0, i64 2
  %call56 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx49, %struct.gs_fixed_point_s* %arrayidx52, %struct.gs_fixed_point_s* %arrayidx55) #5
  %call57 = call i32 @neqs(i32* %sign, i32 %call56) #5
  %tobool58 = icmp ne i32 %call57, 0
  br i1 %tobool58, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.46
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.60:                                        ; preds = %if.end.46
  %16 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole61 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %16, i32 0, i32 0
  %arrayidx62 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole61, i32 0, i64 1
  %arrayidx63 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx62, i32 0, i64 1
  %17 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole64 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %17, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole64, i32 0, i64 2
  %arrayidx66 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx65, i32 0, i64 1
  %18 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole67 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %18, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole67, i32 0, i64 1
  %arrayidx69 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx68, i32 0, i64 2
  %call70 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx63, %struct.gs_fixed_point_s* %arrayidx66, %struct.gs_fixed_point_s* %arrayidx69) #5
  %call71 = call i32 @neqs(i32* %sign, i32 %call70) #5
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.end.60
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.74:                                        ; preds = %if.end.60
  %19 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole75 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %19, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole75, i32 0, i64 2
  %arrayidx77 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx76, i32 0, i64 1
  %20 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole78 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %20, i32 0, i32 0
  %arrayidx79 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole78, i32 0, i64 3
  %arrayidx80 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx79, i32 0, i64 1
  %21 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole81 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %21, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole81, i32 0, i64 2
  %arrayidx83 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx82, i32 0, i64 2
  %call84 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx77, %struct.gs_fixed_point_s* %arrayidx80, %struct.gs_fixed_point_s* %arrayidx83) #5
  %call85 = call i32 @neqs(i32* %sign, i32 %call84) #5
  %tobool86 = icmp ne i32 %call85, 0
  br i1 %tobool86, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.end.74
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.88:                                        ; preds = %if.end.74
  %22 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole89 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %22, i32 0, i32 0
  %arrayidx90 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole89, i32 0, i64 3
  %arrayidx91 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx90, i32 0, i64 1
  %23 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole92 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %23, i32 0, i32 0
  %arrayidx93 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole92, i32 0, i64 2
  %arrayidx94 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx93, i32 0, i64 1
  %24 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole95 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %24, i32 0, i32 0
  %arrayidx96 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole95, i32 0, i64 3
  %arrayidx97 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx96, i32 0, i64 2
  %call98 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx91, %struct.gs_fixed_point_s* %arrayidx94, %struct.gs_fixed_point_s* %arrayidx97) #5
  %sub99 = sub nsw i32 0, %call98
  %call100 = call i32 @neqs(i32* %sign, i32 %sub99) #5
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.end.88
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.103:                                       ; preds = %if.end.88
  %25 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole104 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %25, i32 0, i32 0
  %arrayidx105 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole104, i32 0, i64 1
  %arrayidx106 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx105, i32 0, i64 2
  %26 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole107 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %26, i32 0, i32 0
  %arrayidx108 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole107, i32 0, i64 2
  %arrayidx109 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx108, i32 0, i64 2
  %27 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole110 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %27, i32 0, i32 0
  %arrayidx111 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole110, i32 0, i64 1
  %arrayidx112 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx111, i32 0, i64 3
  %call113 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx106, %struct.gs_fixed_point_s* %arrayidx109, %struct.gs_fixed_point_s* %arrayidx112) #5
  %call114 = call i32 @neqs(i32* %sign, i32 %call113) #5
  %tobool115 = icmp ne i32 %call114, 0
  br i1 %tobool115, label %if.then.116, label %if.end.117

if.then.116:                                      ; preds = %if.end.103
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.117:                                       ; preds = %if.end.103
  %28 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole118 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %28, i32 0, i32 0
  %arrayidx119 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole118, i32 0, i64 1
  %arrayidx120 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx119, i32 0, i64 2
  %29 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole121 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %29, i32 0, i32 0
  %arrayidx122 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole121, i32 0, i64 2
  %arrayidx123 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx122, i32 0, i64 2
  %30 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole124 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %30, i32 0, i32 0
  %arrayidx125 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole124, i32 0, i64 1
  %arrayidx126 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx125, i32 0, i64 3
  %call127 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx120, %struct.gs_fixed_point_s* %arrayidx123, %struct.gs_fixed_point_s* %arrayidx126) #5
  %call128 = call i32 @neqs(i32* %sign, i32 %call127) #5
  %tobool129 = icmp ne i32 %call128, 0
  br i1 %tobool129, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %if.end.117
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.131:                                       ; preds = %if.end.117
  %31 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole132 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %31, i32 0, i32 0
  %arrayidx133 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole132, i32 0, i64 2
  %arrayidx134 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx133, i32 0, i64 2
  %32 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole135 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %32, i32 0, i32 0
  %arrayidx136 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole135, i32 0, i64 3
  %arrayidx137 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx136, i32 0, i64 2
  %33 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole138 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %33, i32 0, i32 0
  %arrayidx139 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole138, i32 0, i64 2
  %arrayidx140 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx139, i32 0, i64 3
  %call141 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx134, %struct.gs_fixed_point_s* %arrayidx137, %struct.gs_fixed_point_s* %arrayidx140) #5
  %call142 = call i32 @neqs(i32* %sign, i32 %call141) #5
  %tobool143 = icmp ne i32 %call142, 0
  br i1 %tobool143, label %if.then.144, label %if.end.145

if.then.144:                                      ; preds = %if.end.131
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.145:                                       ; preds = %if.end.131
  %34 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole146 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %34, i32 0, i32 0
  %arrayidx147 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole146, i32 0, i64 3
  %arrayidx148 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx147, i32 0, i64 2
  %35 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole149 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %35, i32 0, i32 0
  %arrayidx150 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole149, i32 0, i64 2
  %arrayidx151 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx150, i32 0, i64 2
  %36 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole152 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %36, i32 0, i32 0
  %arrayidx153 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole152, i32 0, i64 3
  %arrayidx154 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx153, i32 0, i64 3
  %call155 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx148, %struct.gs_fixed_point_s* %arrayidx151, %struct.gs_fixed_point_s* %arrayidx154) #5
  %sub156 = sub nsw i32 0, %call155
  %call157 = call i32 @neqs(i32* %sign, i32 %sub156) #5
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %if.then.159, label %if.end.160

if.then.159:                                      ; preds = %if.end.145
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.160:                                       ; preds = %if.end.145
  %37 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole161 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %37, i32 0, i32 0
  %arrayidx162 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole161, i32 0, i64 1
  %arrayidx163 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx162, i32 0, i64 3
  %38 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole164 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %38, i32 0, i32 0
  %arrayidx165 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole164, i32 0, i64 2
  %arrayidx166 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx165, i32 0, i64 3
  %39 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole167 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %39, i32 0, i32 0
  %arrayidx168 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole167, i32 0, i64 1
  %arrayidx169 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx168, i32 0, i64 2
  %call170 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx163, %struct.gs_fixed_point_s* %arrayidx166, %struct.gs_fixed_point_s* %arrayidx169) #5
  %sub171 = sub nsw i32 0, %call170
  %call172 = call i32 @neqs(i32* %sign, i32 %sub171) #5
  %tobool173 = icmp ne i32 %call172, 0
  br i1 %tobool173, label %if.then.174, label %if.end.175

if.then.174:                                      ; preds = %if.end.160
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.175:                                       ; preds = %if.end.160
  %40 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole176 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %40, i32 0, i32 0
  %arrayidx177 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole176, i32 0, i64 1
  %arrayidx178 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx177, i32 0, i64 3
  %41 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole179 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %41, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole179, i32 0, i64 2
  %arrayidx181 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx180, i32 0, i64 3
  %42 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole182 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %42, i32 0, i32 0
  %arrayidx183 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole182, i32 0, i64 1
  %arrayidx184 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx183, i32 0, i64 2
  %call185 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx178, %struct.gs_fixed_point_s* %arrayidx181, %struct.gs_fixed_point_s* %arrayidx184) #5
  %sub186 = sub nsw i32 0, %call185
  %call187 = call i32 @neqs(i32* %sign, i32 %sub186) #5
  %tobool188 = icmp ne i32 %call187, 0
  br i1 %tobool188, label %if.then.189, label %if.end.190

if.then.189:                                      ; preds = %if.end.175
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.190:                                       ; preds = %if.end.175
  %43 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole191 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %43, i32 0, i32 0
  %arrayidx192 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole191, i32 0, i64 2
  %arrayidx193 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx192, i32 0, i64 3
  %44 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole194 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %44, i32 0, i32 0
  %arrayidx195 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole194, i32 0, i64 3
  %arrayidx196 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx195, i32 0, i64 3
  %45 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole197 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %45, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole197, i32 0, i64 2
  %arrayidx199 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx198, i32 0, i64 2
  %call200 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx193, %struct.gs_fixed_point_s* %arrayidx196, %struct.gs_fixed_point_s* %arrayidx199) #5
  %sub201 = sub nsw i32 0, %call200
  %call202 = call i32 @neqs(i32* %sign, i32 %sub201) #5
  %tobool203 = icmp ne i32 %call202, 0
  br i1 %tobool203, label %if.then.204, label %if.end.205

if.then.204:                                      ; preds = %if.end.190
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.205:                                       ; preds = %if.end.190
  %46 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole206 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %46, i32 0, i32 0
  %arrayidx207 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole206, i32 0, i64 3
  %arrayidx208 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx207, i32 0, i64 3
  %47 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole209 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %47, i32 0, i32 0
  %arrayidx210 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole209, i32 0, i64 2
  %arrayidx211 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx210, i32 0, i64 3
  %48 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole212 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %48, i32 0, i32 0
  %arrayidx213 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole212, i32 0, i64 3
  %arrayidx214 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx213, i32 0, i64 2
  %call215 = call i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %arrayidx208, %struct.gs_fixed_point_s* %arrayidx211, %struct.gs_fixed_point_s* %arrayidx214) #5
  %call216 = call i32 @neqs(i32* %sign, i32 %call215) #5
  %tobool217 = icmp ne i32 %call216, 0
  br i1 %tobool217, label %if.then.218, label %if.end.219

if.then.218:                                      ; preds = %if.end.205
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.219:                                       ; preds = %if.end.205
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.219, %if.then.218, %if.then.204, %if.then.189, %if.then.174, %if.then.159, %if.then.144, %if.then.130, %if.then.116, %if.then.102, %if.then.87, %if.then.73, %if.then.59, %if.then.45, %if.then.31, %if.then
  %49 = bitcast i32* %sign to i8*
  call void @llvm.lifetime.end(i64 4, i8* %49) #2
  %50 = load i32, i32* %retval
  ret i32 %50
}

declare i32 @gx_path_add_curve_notes(%struct.gx_path_s*, i32, i32, i32, i32, i32, i32, i32) #3

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @curve_samples(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %pole, i32 %pole_step, i32 %fixed_flat) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pole_step.addr = alloca i32, align 4
  %fixed_flat.addr = alloca i32, align 4
  %s = alloca %struct.curve_segment, align 8
  %k = alloca i32, align 4
  %k1 = alloca i32, align 4
  %L = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store i32 %pole_step, i32* %pole_step.addr, align 4, !tbaa !5
  store i32 %fixed_flat, i32* %fixed_flat.addr, align 4, !tbaa !5
  %0 = bitcast %struct.curve_segment* %s to i8*
  call void @llvm.lifetime.start(i64 48, i8* %0) #2
  %1 = bitcast i32* %k to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %3, i64 %idxprom
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx, i32 0, i32 0
  %4 = load i32, i32* %x, align 4, !tbaa !109
  %p1 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %s, i32 0, i32 5
  %x1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1, i32 0, i32 0
  store i32 %4, i32* %x1, align 4, !tbaa !158
  %5 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %6, i64 %idxprom2
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx3, i32 0, i32 1
  %7 = load i32, i32* %y, align 4, !tbaa !110
  %p14 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %s, i32 0, i32 5
  %y5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p14, i32 0, i32 1
  store i32 %7, i32* %y5, align 4, !tbaa !160
  %8 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul = mul nsw i32 %8, 2
  %idxprom6 = sext i32 %mul to i64
  %9 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %9, i64 %idxprom6
  %x8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx7, i32 0, i32 0
  %10 = load i32, i32* %x8, align 4, !tbaa !109
  %p2 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %s, i32 0, i32 6
  %x9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2, i32 0, i32 0
  store i32 %10, i32* %x9, align 4, !tbaa !161
  %11 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul10 = mul nsw i32 %11, 2
  %idxprom11 = sext i32 %mul10 to i64
  %12 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %12, i64 %idxprom11
  %y13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx12, i32 0, i32 1
  %13 = load i32, i32* %y13, align 4, !tbaa !110
  %p214 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %s, i32 0, i32 6
  %y15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p214, i32 0, i32 1
  store i32 %13, i32* %y15, align 4, !tbaa !162
  %14 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul16 = mul nsw i32 %14, 3
  %idxprom17 = sext i32 %mul16 to i64
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 %idxprom17
  %x19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx18, i32 0, i32 0
  %16 = load i32, i32* %x19, align 4, !tbaa !109
  %pt = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %s, i32 0, i32 4
  %x20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt, i32 0, i32 0
  store i32 %16, i32* %x20, align 4, !tbaa !163
  %17 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul21 = mul nsw i32 %17, 3
  %idxprom22 = sext i32 %mul21 to i64
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i64 %idxprom22
  %y24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx23, i32 0, i32 1
  %19 = load i32, i32* %y24, align 4, !tbaa !110
  %pt25 = getelementptr inbounds %struct.curve_segment, %struct.curve_segment* %s, i32 0, i32 4
  %y26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %pt25, i32 0, i32 1
  store i32 %19, i32* %y26, align 4, !tbaa !164
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %20, i64 0
  %x28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx27, i32 0, i32 0
  %21 = load i32, i32* %x28, align 4, !tbaa !109
  %22 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %22, i64 0
  %y30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx29, i32 0, i32 1
  %23 = load i32, i32* %y30, align 4, !tbaa !110
  %24 = load i32, i32* %fixed_flat.addr, align 4, !tbaa !5
  %call = call i32 @gx_curve_log2_samples(i32 %21, i32 %23, %struct.curve_segment* %s, i32 %24) #5
  store i32 %call, i32* %k, align 4, !tbaa !5
  %25 = bitcast i32* %k1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #2
  %26 = bitcast i32* %L to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #2
  %27 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul31 = mul nsw i32 %27, 1
  %idxprom32 = sext i32 %mul31 to i64
  %28 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %28, i64 %idxprom32
  %x34 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx33, i32 0, i32 0
  %29 = load i32, i32* %x34, align 4, !tbaa !109
  %30 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul35 = mul nsw i32 %30, 0
  %idxprom36 = sext i32 %mul35 to i64
  %31 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %31, i64 %idxprom36
  %x38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx37, i32 0, i32 0
  %32 = load i32, i32* %x38, align 4, !tbaa !109
  %sub = sub nsw i32 %29, %32
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %33 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul39 = mul nsw i32 %33, 1
  %idxprom40 = sext i32 %mul39 to i64
  %34 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %34, i64 %idxprom40
  %x42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx41, i32 0, i32 0
  %35 = load i32, i32* %x42, align 4, !tbaa !109
  %36 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul43 = mul nsw i32 %36, 0
  %idxprom44 = sext i32 %mul43 to i64
  %37 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %37, i64 %idxprom44
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx45, i32 0, i32 0
  %38 = load i32, i32* %x46, align 4, !tbaa !109
  %sub47 = sub nsw i32 %35, %38
  %sub48 = sub nsw i32 0, %sub47
  br label %cond.end

cond.false:                                       ; preds = %entry
  %39 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul49 = mul nsw i32 %39, 1
  %idxprom50 = sext i32 %mul49 to i64
  %40 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %40, i64 %idxprom50
  %x52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx51, i32 0, i32 0
  %41 = load i32, i32* %x52, align 4, !tbaa !109
  %42 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul53 = mul nsw i32 %42, 0
  %idxprom54 = sext i32 %mul53 to i64
  %43 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx55 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %43, i64 %idxprom54
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx55, i32 0, i32 0
  %44 = load i32, i32* %x56, align 4, !tbaa !109
  %sub57 = sub nsw i32 %41, %44
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub48, %cond.true ], [ %sub57, %cond.false ]
  %45 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul58 = mul nsw i32 %45, 1
  %idxprom59 = sext i32 %mul58 to i64
  %46 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %46, i64 %idxprom59
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx60, i32 0, i32 1
  %47 = load i32, i32* %y61, align 4, !tbaa !110
  %48 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul62 = mul nsw i32 %48, 0
  %idxprom63 = sext i32 %mul62 to i64
  %49 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %49, i64 %idxprom63
  %y65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx64, i32 0, i32 1
  %50 = load i32, i32* %y65, align 4, !tbaa !110
  %sub66 = sub nsw i32 %47, %50
  %cmp67 = icmp slt i32 %sub66, 0
  br i1 %cmp67, label %cond.true.68, label %cond.false.79

cond.true.68:                                     ; preds = %cond.end
  %51 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul69 = mul nsw i32 %51, 1
  %idxprom70 = sext i32 %mul69 to i64
  %52 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %52, i64 %idxprom70
  %y72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx71, i32 0, i32 1
  %53 = load i32, i32* %y72, align 4, !tbaa !110
  %54 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul73 = mul nsw i32 %54, 0
  %idxprom74 = sext i32 %mul73 to i64
  %55 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %55, i64 %idxprom74
  %y76 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx75, i32 0, i32 1
  %56 = load i32, i32* %y76, align 4, !tbaa !110
  %sub77 = sub nsw i32 %53, %56
  %sub78 = sub nsw i32 0, %sub77
  br label %cond.end.89

cond.false.79:                                    ; preds = %cond.end
  %57 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul80 = mul nsw i32 %57, 1
  %idxprom81 = sext i32 %mul80 to i64
  %58 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %58, i64 %idxprom81
  %y83 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx82, i32 0, i32 1
  %59 = load i32, i32* %y83, align 4, !tbaa !110
  %60 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul84 = mul nsw i32 %60, 0
  %idxprom85 = sext i32 %mul84 to i64
  %61 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %61, i64 %idxprom85
  %y87 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx86, i32 0, i32 1
  %62 = load i32, i32* %y87, align 4, !tbaa !110
  %sub88 = sub nsw i32 %59, %62
  br label %cond.end.89

cond.end.89:                                      ; preds = %cond.false.79, %cond.true.68
  %cond90 = phi i32 [ %sub78, %cond.true.68 ], [ %sub88, %cond.false.79 ]
  %add = add nsw i32 %cond, %cond90
  %63 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul91 = mul nsw i32 %63, 2
  %idxprom92 = sext i32 %mul91 to i64
  %64 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx93 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %64, i64 %idxprom92
  %x94 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx93, i32 0, i32 0
  %65 = load i32, i32* %x94, align 4, !tbaa !109
  %66 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul95 = mul nsw i32 %66, 1
  %idxprom96 = sext i32 %mul95 to i64
  %67 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx97 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %67, i64 %idxprom96
  %x98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx97, i32 0, i32 0
  %68 = load i32, i32* %x98, align 4, !tbaa !109
  %sub99 = sub nsw i32 %65, %68
  %cmp100 = icmp slt i32 %sub99, 0
  br i1 %cmp100, label %cond.true.101, label %cond.false.112

cond.true.101:                                    ; preds = %cond.end.89
  %69 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul102 = mul nsw i32 %69, 2
  %idxprom103 = sext i32 %mul102 to i64
  %70 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %70, i64 %idxprom103
  %x105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx104, i32 0, i32 0
  %71 = load i32, i32* %x105, align 4, !tbaa !109
  %72 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul106 = mul nsw i32 %72, 1
  %idxprom107 = sext i32 %mul106 to i64
  %73 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx108 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %73, i64 %idxprom107
  %x109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx108, i32 0, i32 0
  %74 = load i32, i32* %x109, align 4, !tbaa !109
  %sub110 = sub nsw i32 %71, %74
  %sub111 = sub nsw i32 0, %sub110
  br label %cond.end.122

cond.false.112:                                   ; preds = %cond.end.89
  %75 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul113 = mul nsw i32 %75, 2
  %idxprom114 = sext i32 %mul113 to i64
  %76 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx115 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %76, i64 %idxprom114
  %x116 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx115, i32 0, i32 0
  %77 = load i32, i32* %x116, align 4, !tbaa !109
  %78 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul117 = mul nsw i32 %78, 1
  %idxprom118 = sext i32 %mul117 to i64
  %79 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %79, i64 %idxprom118
  %x120 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx119, i32 0, i32 0
  %80 = load i32, i32* %x120, align 4, !tbaa !109
  %sub121 = sub nsw i32 %77, %80
  br label %cond.end.122

cond.end.122:                                     ; preds = %cond.false.112, %cond.true.101
  %cond123 = phi i32 [ %sub111, %cond.true.101 ], [ %sub121, %cond.false.112 ]
  %add124 = add nsw i32 %add, %cond123
  %81 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul125 = mul nsw i32 %81, 2
  %idxprom126 = sext i32 %mul125 to i64
  %82 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx127 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %82, i64 %idxprom126
  %y128 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx127, i32 0, i32 1
  %83 = load i32, i32* %y128, align 4, !tbaa !110
  %84 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul129 = mul nsw i32 %84, 1
  %idxprom130 = sext i32 %mul129 to i64
  %85 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %85, i64 %idxprom130
  %y132 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx131, i32 0, i32 1
  %86 = load i32, i32* %y132, align 4, !tbaa !110
  %sub133 = sub nsw i32 %83, %86
  %cmp134 = icmp slt i32 %sub133, 0
  br i1 %cmp134, label %cond.true.135, label %cond.false.146

cond.true.135:                                    ; preds = %cond.end.122
  %87 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul136 = mul nsw i32 %87, 2
  %idxprom137 = sext i32 %mul136 to i64
  %88 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx138 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %88, i64 %idxprom137
  %y139 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx138, i32 0, i32 1
  %89 = load i32, i32* %y139, align 4, !tbaa !110
  %90 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul140 = mul nsw i32 %90, 1
  %idxprom141 = sext i32 %mul140 to i64
  %91 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %91, i64 %idxprom141
  %y143 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx142, i32 0, i32 1
  %92 = load i32, i32* %y143, align 4, !tbaa !110
  %sub144 = sub nsw i32 %89, %92
  %sub145 = sub nsw i32 0, %sub144
  br label %cond.end.156

cond.false.146:                                   ; preds = %cond.end.122
  %93 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul147 = mul nsw i32 %93, 2
  %idxprom148 = sext i32 %mul147 to i64
  %94 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx149 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %94, i64 %idxprom148
  %y150 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx149, i32 0, i32 1
  %95 = load i32, i32* %y150, align 4, !tbaa !110
  %96 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul151 = mul nsw i32 %96, 1
  %idxprom152 = sext i32 %mul151 to i64
  %97 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx153 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %97, i64 %idxprom152
  %y154 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx153, i32 0, i32 1
  %98 = load i32, i32* %y154, align 4, !tbaa !110
  %sub155 = sub nsw i32 %95, %98
  br label %cond.end.156

cond.end.156:                                     ; preds = %cond.false.146, %cond.true.135
  %cond157 = phi i32 [ %sub145, %cond.true.135 ], [ %sub155, %cond.false.146 ]
  %add158 = add nsw i32 %add124, %cond157
  %99 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul159 = mul nsw i32 %99, 3
  %idxprom160 = sext i32 %mul159 to i64
  %100 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx161 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %100, i64 %idxprom160
  %x162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx161, i32 0, i32 0
  %101 = load i32, i32* %x162, align 4, !tbaa !109
  %102 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul163 = mul nsw i32 %102, 2
  %idxprom164 = sext i32 %mul163 to i64
  %103 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx165 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %103, i64 %idxprom164
  %x166 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx165, i32 0, i32 0
  %104 = load i32, i32* %x166, align 4, !tbaa !109
  %sub167 = sub nsw i32 %101, %104
  %cmp168 = icmp slt i32 %sub167, 0
  br i1 %cmp168, label %cond.true.169, label %cond.false.180

cond.true.169:                                    ; preds = %cond.end.156
  %105 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul170 = mul nsw i32 %105, 3
  %idxprom171 = sext i32 %mul170 to i64
  %106 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx172 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %106, i64 %idxprom171
  %x173 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx172, i32 0, i32 0
  %107 = load i32, i32* %x173, align 4, !tbaa !109
  %108 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul174 = mul nsw i32 %108, 2
  %idxprom175 = sext i32 %mul174 to i64
  %109 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %109, i64 %idxprom175
  %x177 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx176, i32 0, i32 0
  %110 = load i32, i32* %x177, align 4, !tbaa !109
  %sub178 = sub nsw i32 %107, %110
  %sub179 = sub nsw i32 0, %sub178
  br label %cond.end.190

cond.false.180:                                   ; preds = %cond.end.156
  %111 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul181 = mul nsw i32 %111, 3
  %idxprom182 = sext i32 %mul181 to i64
  %112 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx183 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %112, i64 %idxprom182
  %x184 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx183, i32 0, i32 0
  %113 = load i32, i32* %x184, align 4, !tbaa !109
  %114 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul185 = mul nsw i32 %114, 2
  %idxprom186 = sext i32 %mul185 to i64
  %115 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx187 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %115, i64 %idxprom186
  %x188 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx187, i32 0, i32 0
  %116 = load i32, i32* %x188, align 4, !tbaa !109
  %sub189 = sub nsw i32 %113, %116
  br label %cond.end.190

cond.end.190:                                     ; preds = %cond.false.180, %cond.true.169
  %cond191 = phi i32 [ %sub179, %cond.true.169 ], [ %sub189, %cond.false.180 ]
  %add192 = add nsw i32 %add158, %cond191
  %117 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul193 = mul nsw i32 %117, 3
  %idxprom194 = sext i32 %mul193 to i64
  %118 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx195 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %118, i64 %idxprom194
  %y196 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx195, i32 0, i32 1
  %119 = load i32, i32* %y196, align 4, !tbaa !110
  %120 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul197 = mul nsw i32 %120, 2
  %idxprom198 = sext i32 %mul197 to i64
  %121 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx199 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %121, i64 %idxprom198
  %y200 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx199, i32 0, i32 1
  %122 = load i32, i32* %y200, align 4, !tbaa !110
  %sub201 = sub nsw i32 %119, %122
  %cmp202 = icmp slt i32 %sub201, 0
  br i1 %cmp202, label %cond.true.203, label %cond.false.214

cond.true.203:                                    ; preds = %cond.end.190
  %123 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul204 = mul nsw i32 %123, 3
  %idxprom205 = sext i32 %mul204 to i64
  %124 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx206 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %124, i64 %idxprom205
  %y207 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx206, i32 0, i32 1
  %125 = load i32, i32* %y207, align 4, !tbaa !110
  %126 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul208 = mul nsw i32 %126, 2
  %idxprom209 = sext i32 %mul208 to i64
  %127 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx210 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %127, i64 %idxprom209
  %y211 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx210, i32 0, i32 1
  %128 = load i32, i32* %y211, align 4, !tbaa !110
  %sub212 = sub nsw i32 %125, %128
  %sub213 = sub nsw i32 0, %sub212
  br label %cond.end.224

cond.false.214:                                   ; preds = %cond.end.190
  %129 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul215 = mul nsw i32 %129, 3
  %idxprom216 = sext i32 %mul215 to i64
  %130 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx217 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %130, i64 %idxprom216
  %y218 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx217, i32 0, i32 1
  %131 = load i32, i32* %y218, align 4, !tbaa !110
  %132 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul219 = mul nsw i32 %132, 2
  %idxprom220 = sext i32 %mul219 to i64
  %133 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx221 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %133, i64 %idxprom220
  %y222 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx221, i32 0, i32 1
  %134 = load i32, i32* %y222, align 4, !tbaa !110
  %sub223 = sub nsw i32 %131, %134
  br label %cond.end.224

cond.end.224:                                     ; preds = %cond.false.214, %cond.true.203
  %cond225 = phi i32 [ %sub213, %cond.true.203 ], [ %sub223, %cond.false.214 ]
  %add226 = add nsw i32 %add192, %cond225
  store i32 %add226, i32* %L, align 4, !tbaa !5
  %135 = load i32, i32* %L, align 4, !tbaa !5
  %conv = sext i32 %135 to i64
  %div = sdiv i64 %conv, 256
  %div227 = sdiv i64 %div, 256
  %conv228 = trunc i64 %div227 to i32
  %call229 = call i32 @ilog2(i32 %conv228) #5
  store i32 %call229, i32* %k1, align 4, !tbaa !5
  %136 = load i32, i32* %k, align 4, !tbaa !5
  %137 = load i32, i32* %k1, align 4, !tbaa !5
  %cmp230 = icmp sgt i32 %136, %137
  br i1 %cmp230, label %cond.true.232, label %cond.false.233

cond.true.232:                                    ; preds = %cond.end.224
  %138 = load i32, i32* %k, align 4, !tbaa !5
  br label %cond.end.234

cond.false.233:                                   ; preds = %cond.end.224
  %139 = load i32, i32* %k1, align 4, !tbaa !5
  br label %cond.end.234

cond.end.234:                                     ; preds = %cond.false.233, %cond.true.232
  %cond235 = phi i32 [ %138, %cond.true.232 ], [ %139, %cond.false.233 ]
  store i32 %cond235, i32* %k, align 4, !tbaa !5
  %140 = bitcast i32* %L to i8*
  call void @llvm.lifetime.end(i64 4, i8* %140) #2
  %141 = bitcast i32* %k1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %141) #2
  %142 = load i32, i32* %k, align 4, !tbaa !5
  %shl = shl i32 1, %142
  %143 = bitcast i32* %k to i8*
  call void @llvm.lifetime.end(i64 4, i8* %143) #2
  %144 = bitcast %struct.curve_segment* %s to i8*
  call void @llvm.lifetime.end(i64 48, i8* %144) #2
  ret i32 %shl
}

; Function Attrs: nounwind uwtable
define internal i32 @fill_wedges(%struct.patch_fill_state_s* %pfs, i32 %k0, i32 %k1, %struct.gs_fixed_point_s* %pole, i32 %pole_step, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1, i32 %wedge_type) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %k0.addr = alloca i32, align 4
  %k1.addr = alloca i32, align 4
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pole_step.addr = alloca i32, align 4
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %wedge_type.addr = alloca i32, align 4
  %p = alloca [4 x %struct.gs_fixed_point_s], align 16
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store i32 %k0, i32* %k0.addr, align 4, !tbaa !5
  store i32 %k1, i32* %k1.addr, align 4, !tbaa !5
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store i32 %pole_step, i32* %pole_step.addr, align 4, !tbaa !5
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store i32 %wedge_type, i32* %wedge_type.addr, align 4, !tbaa !5
  %0 = bitcast [4 x %struct.gs_fixed_point_s]* %p to i8*
  call void @llvm.lifetime.start(i64 32, i8* %0) #2
  %1 = load i32, i32* %wedge_type.addr, align 4, !tbaa !5
  %and = and i32 %1, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %k0.addr, align 4, !tbaa !5
  %3 = load i32, i32* %k1.addr, align 4, !tbaa !5
  %cmp = icmp eq i32 %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %k0.addr, align 4, !tbaa !5
  %5 = load i32, i32* %k1.addr, align 4, !tbaa !5
  %cmp1 = icmp sgt i32 %4, %5
  br i1 %cmp1, label %if.then.2, label %if.end.5

if.then.2:                                        ; preds = %if.end
  %6 = load i32, i32* %k1.addr, align 4, !tbaa !5
  %7 = load i32, i32* %k0.addr, align 4, !tbaa !5
  %xor = xor i32 %7, %6
  store i32 %xor, i32* %k0.addr, align 4, !tbaa !5
  %8 = load i32, i32* %k0.addr, align 4, !tbaa !5
  %9 = load i32, i32* %k1.addr, align 4, !tbaa !5
  %xor3 = xor i32 %9, %8
  store i32 %xor3, i32* %k1.addr, align 4, !tbaa !5
  %10 = load i32, i32* %k1.addr, align 4, !tbaa !5
  %11 = load i32, i32* %k0.addr, align 4, !tbaa !5
  %xor4 = xor i32 %11, %10
  store i32 %xor4, i32* %k0.addr, align 4, !tbaa !5
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.2, %if.end
  %arrayidx = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 0
  %12 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %12, i64 0
  %13 = bitcast %struct.gs_fixed_point_s* %arrayidx to i8*
  %14 = bitcast %struct.gs_fixed_point_s* %arrayidx6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx7 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 1
  %15 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %idxprom = sext i32 %15 to i64
  %16 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %16, i64 %idxprom
  %17 = bitcast %struct.gs_fixed_point_s* %arrayidx7 to i8*
  %18 = bitcast %struct.gs_fixed_point_s* %arrayidx8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx9 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 2
  %19 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul = mul nsw i32 %19, 2
  %idxprom10 = sext i32 %mul to i64
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %20, i64 %idxprom10
  %21 = bitcast %struct.gs_fixed_point_s* %arrayidx9 to i8*
  %22 = bitcast %struct.gs_fixed_point_s* %arrayidx11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx12 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 3
  %23 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul13 = mul nsw i32 %23, 3
  %idxprom14 = sext i32 %mul13 to i64
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %24, i64 %idxprom14
  %25 = bitcast %struct.gs_fixed_point_s* %arrayidx12 to i8*
  %26 = bitcast %struct.gs_fixed_point_s* %arrayidx15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 4, i1 false), !tbaa.struct !117
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %28 = load i32, i32* %k0.addr, align 4, !tbaa !5
  %29 = load i32, i32* %k1.addr, align 4, !tbaa !5
  %30 = load i32, i32* %k0.addr, align 4, !tbaa !5
  %div = sdiv i32 %29, %30
  %arraydecay = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i32 0
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %32 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %33 = load i32, i32* %wedge_type.addr, align 4, !tbaa !5
  %call = call i32 @fill_wedges_aux(%struct.patch_fill_state_s* %27, i32 %28, i32 %div, %struct.gs_fixed_point_s* %arraydecay, %struct.patch_color_s* %31, %struct.patch_color_s* %32, i32 %33) #5
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.5, %if.then
  %34 = bitcast [4 x %struct.gs_fixed_point_s]* %p to i8*
  call void @llvm.lifetime.end(i64 32, i8* %34) #2
  %35 = load i32, i32* %retval
  ret i32 %35
}

; Function Attrs: nounwind uwtable
define internal i32 @fill_patch(%struct.patch_fill_state_s* %pfs, %struct.tensor_patch* %p, i32 %kv, i32 %kv0, i32 %kv1) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  %kv.addr = alloca i32, align 4
  %kv0.addr = alloca i32, align 4
  %kv1.addr = alloca i32, align 4
  %s0 = alloca %struct.tensor_patch, align 8
  %s1 = alloca %struct.tensor_patch, align 8
  %c = alloca [2 x %struct.patch_color_s*], align 16
  %q0 = alloca %struct.shading_vertex_s, align 8
  %q1 = alloca %struct.shading_vertex_s, align 8
  %q2 = alloca %struct.shading_vertex_s, align 8
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %save_inside = alloca i32, align 4
  %r = alloca %struct.gs_fixed_rect_s, align 4
  %r1 = alloca %struct.gs_fixed_rect_s, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  store i32 %kv, i32* %kv.addr, align 4, !tbaa !5
  store i32 %kv0, i32* %kv0.addr, align 4, !tbaa !5
  store i32 %kv1, i32* %kv1.addr, align 4, !tbaa !5
  %0 = load i32, i32* %kv.addr, align 4, !tbaa !5
  %cmp = icmp sle i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end.8

if.then:                                          ; preds = %entry
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %2 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %call = call i32 @is_patch_narrow(%struct.patch_fill_state_s* %1, %struct.tensor_patch* %2) #5
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.1, label %if.end

if.then.1:                                        ; preds = %if.then
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %4 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %call2 = call i32 @fill_stripe(%struct.patch_fill_state_s* %3, %struct.tensor_patch* %4) #5
  store i32 %call2, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %5 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %call3 = call i32 @is_x_bended(%struct.tensor_patch* %5) #5
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end.7, label %if.then.5

if.then.5:                                        ; preds = %if.end
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %7 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %call6 = call i32 @fill_stripe(%struct.patch_fill_state_s* %6, %struct.tensor_patch* %7) #5
  store i32 %call6, i32* %retval
  br label %return

if.end.7:                                         ; preds = %if.end
  br label %if.end.8

if.end.8:                                         ; preds = %if.end.7, %entry
  %8 = bitcast %struct.tensor_patch* %s0 to i8*
  call void @llvm.lifetime.start(i64 160, i8* %8) #2
  %9 = bitcast %struct.tensor_patch* %s1 to i8*
  call void @llvm.lifetime.start(i64 160, i8* %9) #2
  %10 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #2
  %11 = bitcast %struct.shading_vertex_s* %q0 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %11) #2
  %12 = bitcast %struct.shading_vertex_s* %q1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %12) #2
  %13 = bitcast %struct.shading_vertex_s* %q2 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %13) #2
  %14 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #2
  store i32 0, i32* %code, align 4, !tbaa !5
  %15 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #2
  %16 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #2
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 26
  %18 = load i32, i32* %inside, align 4, !tbaa !32
  store i32 %18, i32* %save_inside, align 4, !tbaa !5
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside9 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 26
  %20 = load i32, i32* %inside9, align 4, !tbaa !32
  %tobool10 = icmp ne i32 %20, 0
  br i1 %tobool10, label %if.end.125, label %if.then.11

if.then.11:                                       ; preds = %if.end.8
  %21 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.start(i64 16, i8* %21) #2
  %22 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %22) #2
  %23 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  call void @tensor_patch_bbox(%struct.gs_fixed_rect_s* %r, %struct.tensor_patch* %23) #5
  %p12 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p12, i32 0, i32 0
  %24 = load i32, i32* %x, align 4, !tbaa !134
  %conv = sext i32 %24 to i64
  %sub = sub nsw i64 %conv, 128
  %conv13 = trunc i64 %sub to i32
  store i32 %conv13, i32* %x, align 4, !tbaa !134
  %p14 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p14, i32 0, i32 1
  %25 = load i32, i32* %y, align 4, !tbaa !133
  %conv15 = sext i32 %25 to i64
  %sub16 = sub nsw i64 %conv15, 128
  %conv17 = trunc i64 %sub16 to i32
  store i32 %conv17, i32* %y, align 4, !tbaa !133
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 0
  %26 = load i32, i32* %x18, align 4, !tbaa !136
  %conv19 = sext i32 %26 to i64
  %add = add nsw i64 %conv19, 128
  %conv20 = trunc i64 %add to i32
  store i32 %conv20, i32* %x18, align 4, !tbaa !136
  %q21 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q21, i32 0, i32 1
  %27 = load i32, i32* %y22, align 4, !tbaa !135
  %conv23 = sext i32 %27 to i64
  %add24 = add nsw i64 %conv23, 128
  %conv25 = trunc i64 %add24 to i32
  store i32 %conv25, i32* %y22, align 4, !tbaa !135
  %28 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  %29 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 4, i1 false), !tbaa.struct !137
  br label %do.body

do.body:                                          ; preds = %if.then.11
  %30 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %30, i32 0, i32 8
  %p26 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect, i32 0, i32 0
  %x27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p26, i32 0, i32 0
  %31 = load i32, i32* %x27, align 4, !tbaa !138
  %p28 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p28, i32 0, i32 0
  %32 = load i32, i32* %x29, align 4, !tbaa !134
  %cmp30 = icmp sgt i32 %31, %32
  br i1 %cmp30, label %if.then.32, label %if.end.38

if.then.32:                                       ; preds = %do.body
  %33 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect33 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %33, i32 0, i32 8
  %p34 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect33, i32 0, i32 0
  %x35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p34, i32 0, i32 0
  %34 = load i32, i32* %x35, align 4, !tbaa !138
  %p36 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p36, i32 0, i32 0
  store i32 %34, i32* %x37, align 4, !tbaa !134
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.32, %do.body
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect39 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %35, i32 0, i32 8
  %q40 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect39, i32 0, i32 1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q40, i32 0, i32 0
  %36 = load i32, i32* %x41, align 4, !tbaa !139
  %q42 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q42, i32 0, i32 0
  %37 = load i32, i32* %x43, align 4, !tbaa !136
  %cmp44 = icmp slt i32 %36, %37
  br i1 %cmp44, label %if.then.46, label %if.end.52

if.then.46:                                       ; preds = %if.end.38
  %38 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect47 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %38, i32 0, i32 8
  %q48 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect47, i32 0, i32 1
  %x49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q48, i32 0, i32 0
  %39 = load i32, i32* %x49, align 4, !tbaa !139
  %q50 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q50, i32 0, i32 0
  store i32 %39, i32* %x51, align 4, !tbaa !136
  br label %if.end.52

if.end.52:                                        ; preds = %if.then.46, %if.end.38
  %40 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect53 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %40, i32 0, i32 8
  %p54 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect53, i32 0, i32 0
  %y55 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p54, i32 0, i32 1
  %41 = load i32, i32* %y55, align 4, !tbaa !140
  %p56 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p56, i32 0, i32 1
  %42 = load i32, i32* %y57, align 4, !tbaa !133
  %cmp58 = icmp sgt i32 %41, %42
  br i1 %cmp58, label %if.then.60, label %if.end.66

if.then.60:                                       ; preds = %if.end.52
  %43 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect61 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %43, i32 0, i32 8
  %p62 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect61, i32 0, i32 0
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p62, i32 0, i32 1
  %44 = load i32, i32* %y63, align 4, !tbaa !140
  %p64 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p64, i32 0, i32 1
  store i32 %44, i32* %y65, align 4, !tbaa !133
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.60, %if.end.52
  %45 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect67 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %45, i32 0, i32 8
  %q68 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect67, i32 0, i32 1
  %y69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q68, i32 0, i32 1
  %46 = load i32, i32* %y69, align 4, !tbaa !141
  %q70 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q70, i32 0, i32 1
  %47 = load i32, i32* %y71, align 4, !tbaa !135
  %cmp72 = icmp slt i32 %46, %47
  br i1 %cmp72, label %if.then.74, label %if.end.80

if.then.74:                                       ; preds = %if.end.66
  %48 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect75 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %48, i32 0, i32 8
  %q76 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect75, i32 0, i32 1
  %y77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q76, i32 0, i32 1
  %49 = load i32, i32* %y77, align 4, !tbaa !141
  %q78 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y79 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q78, i32 0, i32 1
  store i32 %49, i32* %y79, align 4, !tbaa !135
  br label %if.end.80

if.end.80:                                        ; preds = %if.then.74, %if.end.66
  br label %do.cond

do.cond:                                          ; preds = %if.end.80
  br label %do.end

do.end:                                           ; preds = %do.cond
  %q81 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q81, i32 0, i32 0
  %50 = load i32, i32* %x82, align 4, !tbaa !136
  %p83 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p83, i32 0, i32 0
  %51 = load i32, i32* %x84, align 4, !tbaa !134
  %cmp85 = icmp sle i32 %50, %51
  br i1 %cmp85, label %if.then.93, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %q87 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y88 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q87, i32 0, i32 1
  %52 = load i32, i32* %y88, align 4, !tbaa !135
  %p89 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y90 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p89, i32 0, i32 1
  %53 = load i32, i32* %y90, align 4, !tbaa !133
  %cmp91 = icmp sle i32 %52, %53
  br i1 %cmp91, label %if.then.93, label %if.end.94

if.then.93:                                       ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.94:                                        ; preds = %lor.lhs.false
  %p95 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %x96 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p95, i32 0, i32 0
  %54 = load i32, i32* %x96, align 4, !tbaa !134
  %p97 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p97, i32 0, i32 0
  %55 = load i32, i32* %x98, align 4, !tbaa !134
  %cmp99 = icmp eq i32 %54, %55
  br i1 %cmp99, label %land.lhs.true, label %if.end.123

land.lhs.true:                                    ; preds = %if.end.94
  %p101 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %y102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p101, i32 0, i32 1
  %56 = load i32, i32* %y102, align 4, !tbaa !133
  %p103 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p103, i32 0, i32 1
  %57 = load i32, i32* %y104, align 4, !tbaa !133
  %cmp105 = icmp eq i32 %56, %57
  br i1 %cmp105, label %land.lhs.true.107, label %if.end.123

land.lhs.true.107:                                ; preds = %land.lhs.true
  %q108 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %x109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q108, i32 0, i32 0
  %58 = load i32, i32* %x109, align 4, !tbaa !136
  %q110 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x111 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q110, i32 0, i32 0
  %59 = load i32, i32* %x111, align 4, !tbaa !136
  %cmp112 = icmp eq i32 %58, %59
  br i1 %cmp112, label %land.lhs.true.114, label %if.end.123

land.lhs.true.114:                                ; preds = %land.lhs.true.107
  %q115 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %y116 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q115, i32 0, i32 1
  %60 = load i32, i32* %y116, align 4, !tbaa !135
  %q117 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y118 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q117, i32 0, i32 1
  %61 = load i32, i32* %y118, align 4, !tbaa !135
  %cmp119 = icmp eq i32 %60, %61
  br i1 %cmp119, label %if.then.121, label %if.end.123

if.then.121:                                      ; preds = %land.lhs.true.114
  %62 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside122 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %62, i32 0, i32 26
  store i32 1, i32* %inside122, align 4, !tbaa !32
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.121, %land.lhs.true.114, %land.lhs.true.107, %land.lhs.true, %if.end.94
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.123, %if.then.93
  %63 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %63) #2
  %64 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.end(i64 16, i8* %64) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.207 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.125

if.end.125:                                       ; preds = %cleanup.cont, %if.end.8
  %65 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call126 = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %65, %struct.patch_color_s** %arraydecay, i32 2) #5
  store i8* %call126, i8** %color_stack_ptr, align 8, !tbaa !1
  %66 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp127 = icmp eq i8* %66, null
  br i1 %cmp127, label %if.then.129, label %if.end.130

if.then.129:                                      ; preds = %if.end.125
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.207

if.end.130:                                       ; preds = %if.end.125
  %67 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %68 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %arraydecay131 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i32 0
  call void @split_patch(%struct.patch_fill_state_s* %67, %struct.tensor_patch* %s0, %struct.tensor_patch* %s1, %struct.tensor_patch* %68, %struct.patch_color_s** %arraydecay131) #5
  %69 = load i32, i32* %kv0.addr, align 4, !tbaa !5
  %cmp132 = icmp sle i32 %69, 1
  br i1 %cmp132, label %if.then.134, label %if.end.158

if.then.134:                                      ; preds = %if.end.130
  %p135 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q0, i32 0, i32 0
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx136 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx, i32 0, i64 0
  %70 = bitcast %struct.gs_fixed_point_s* %p135 to i8*
  %71 = bitcast %struct.gs_fixed_point_s* %arrayidx136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 4, i1 false), !tbaa.struct !117
  %c137 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 1
  %arrayidx138 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c137, i32 0, i64 0
  %arrayidx139 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx138, i32 0, i64 0
  %72 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx139, align 8, !tbaa !1
  %c140 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q0, i32 0, i32 1
  store %struct.patch_color_s* %72, %struct.patch_color_s** %c140, align 8, !tbaa !150
  %p141 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q1, i32 0, i32 0
  %pole142 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s1, i32 0, i32 0
  %arrayidx143 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole142, i32 0, i64 3
  %arrayidx144 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx143, i32 0, i64 0
  %73 = bitcast %struct.gs_fixed_point_s* %p141 to i8*
  %74 = bitcast %struct.gs_fixed_point_s* %arrayidx144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 4, i1 false), !tbaa.struct !117
  %c145 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s1, i32 0, i32 1
  %arrayidx146 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c145, i32 0, i64 1
  %arrayidx147 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx146, i32 0, i64 0
  %75 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx147, align 8, !tbaa !1
  %c148 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q1, i32 0, i32 1
  store %struct.patch_color_s* %75, %struct.patch_color_s** %c148, align 8, !tbaa !150
  %p149 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q2, i32 0, i32 0
  %pole150 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 0
  %arrayidx151 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole150, i32 0, i64 3
  %arrayidx152 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx151, i32 0, i64 0
  %76 = bitcast %struct.gs_fixed_point_s* %p149 to i8*
  %77 = bitcast %struct.gs_fixed_point_s* %arrayidx152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 4, i1 false), !tbaa.struct !117
  %c153 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 1
  %arrayidx154 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c153, i32 0, i64 1
  %arrayidx155 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx154, i32 0, i64 0
  %78 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx155, align 8, !tbaa !1
  %c156 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q2, i32 0, i32 1
  store %struct.patch_color_s* %78, %struct.patch_color_s** %c156, align 8, !tbaa !150
  %79 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call157 = call i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %79, %struct.shading_vertex_s* %q0, %struct.shading_vertex_s* %q1, %struct.shading_vertex_s* %q2) #5
  store i32 %call157, i32* %code, align 4, !tbaa !5
  br label %if.end.158

if.end.158:                                       ; preds = %if.then.134, %if.end.130
  %80 = load i32, i32* %kv1.addr, align 4, !tbaa !5
  %cmp159 = icmp sle i32 %80, 1
  br i1 %cmp159, label %land.lhs.true.161, label %if.end.190

land.lhs.true.161:                                ; preds = %if.end.158
  %81 = load i32, i32* %code, align 4, !tbaa !5
  %cmp162 = icmp sge i32 %81, 0
  br i1 %cmp162, label %if.then.164, label %if.end.190

if.then.164:                                      ; preds = %land.lhs.true.161
  %p165 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q0, i32 0, i32 0
  %pole166 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 0
  %arrayidx167 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole166, i32 0, i64 0
  %arrayidx168 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx167, i32 0, i64 3
  %82 = bitcast %struct.gs_fixed_point_s* %p165 to i8*
  %83 = bitcast %struct.gs_fixed_point_s* %arrayidx168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 8, i32 4, i1 false), !tbaa.struct !117
  %c169 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 1
  %arrayidx170 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c169, i32 0, i64 0
  %arrayidx171 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx170, i32 0, i64 1
  %84 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx171, align 8, !tbaa !1
  %c172 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q0, i32 0, i32 1
  store %struct.patch_color_s* %84, %struct.patch_color_s** %c172, align 8, !tbaa !150
  %p173 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q1, i32 0, i32 0
  %pole174 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s1, i32 0, i32 0
  %arrayidx175 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole174, i32 0, i64 3
  %arrayidx176 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx175, i32 0, i64 3
  %85 = bitcast %struct.gs_fixed_point_s* %p173 to i8*
  %86 = bitcast %struct.gs_fixed_point_s* %arrayidx176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 4, i1 false), !tbaa.struct !117
  %c177 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s1, i32 0, i32 1
  %arrayidx178 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c177, i32 0, i64 1
  %arrayidx179 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx178, i32 0, i64 1
  %87 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx179, align 8, !tbaa !1
  %c180 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q1, i32 0, i32 1
  store %struct.patch_color_s* %87, %struct.patch_color_s** %c180, align 8, !tbaa !150
  %p181 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q2, i32 0, i32 0
  %pole182 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 0
  %arrayidx183 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole182, i32 0, i64 3
  %arrayidx184 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx183, i32 0, i64 3
  %88 = bitcast %struct.gs_fixed_point_s* %p181 to i8*
  %89 = bitcast %struct.gs_fixed_point_s* %arrayidx184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 4, i1 false), !tbaa.struct !117
  %c185 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %s0, i32 0, i32 1
  %arrayidx186 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c185, i32 0, i64 1
  %arrayidx187 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx186, i32 0, i64 1
  %90 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx187, align 8, !tbaa !1
  %c188 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q2, i32 0, i32 1
  store %struct.patch_color_s* %90, %struct.patch_color_s** %c188, align 8, !tbaa !150
  %91 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call189 = call i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %91, %struct.shading_vertex_s* %q0, %struct.shading_vertex_s* %q1, %struct.shading_vertex_s* %q2) #5
  store i32 %call189, i32* %code, align 4, !tbaa !5
  br label %if.end.190

if.end.190:                                       ; preds = %if.then.164, %land.lhs.true.161, %if.end.158
  %92 = load i32, i32* %code, align 4, !tbaa !5
  %cmp191 = icmp sge i32 %92, 0
  br i1 %cmp191, label %if.then.193, label %if.end.197

if.then.193:                                      ; preds = %if.end.190
  %93 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %94 = load i32, i32* %kv.addr, align 4, !tbaa !5
  %div = sdiv i32 %94, 2
  %95 = load i32, i32* %kv0.addr, align 4, !tbaa !5
  %div194 = sdiv i32 %95, 2
  %96 = load i32, i32* %kv1.addr, align 4, !tbaa !5
  %div195 = sdiv i32 %96, 2
  %call196 = call i32 @fill_patch(%struct.patch_fill_state_s* %93, %struct.tensor_patch* %s0, i32 %div, i32 %div194, i32 %div195) #5
  store i32 %call196, i32* %code, align 4, !tbaa !5
  br label %if.end.197

if.end.197:                                       ; preds = %if.then.193, %if.end.190
  %97 = load i32, i32* %code, align 4, !tbaa !5
  %cmp198 = icmp sge i32 %97, 0
  br i1 %cmp198, label %if.then.200, label %if.end.205

if.then.200:                                      ; preds = %if.end.197
  %98 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %99 = load i32, i32* %kv.addr, align 4, !tbaa !5
  %div201 = sdiv i32 %99, 2
  %100 = load i32, i32* %kv0.addr, align 4, !tbaa !5
  %div202 = sdiv i32 %100, 2
  %101 = load i32, i32* %kv1.addr, align 4, !tbaa !5
  %div203 = sdiv i32 %101, 2
  %call204 = call i32 @fill_patch(%struct.patch_fill_state_s* %98, %struct.tensor_patch* %s1, i32 %div201, i32 %div202, i32 %div203) #5
  store i32 %call204, i32* %code, align 4, !tbaa !5
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.200, %if.end.197
  %102 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %103 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %102, i8* %103, i32 2) #5
  %104 = load i32, i32* %save_inside, align 4, !tbaa !5
  %105 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside206 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %105, i32 0, i32 26
  store i32 %104, i32* %inside206, align 4, !tbaa !32
  %106 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %106, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.207

cleanup.207:                                      ; preds = %if.end.205, %if.then.129, %cleanup
  %107 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %107) #2
  %108 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %108) #2
  %109 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #2
  %110 = bitcast %struct.shading_vertex_s* %q2 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %110) #2
  %111 = bitcast %struct.shading_vertex_s* %q1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %111) #2
  %112 = bitcast %struct.shading_vertex_s* %q0 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %112) #2
  %113 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 16, i8* %113) #2
  %114 = bitcast %struct.tensor_patch* %s1 to i8*
  call void @llvm.lifetime.end(i64 160, i8* %114) #2
  %115 = bitcast %struct.tensor_patch* %s0 to i8*
  call void @llvm.lifetime.end(i64 160, i8* %115) #2
  br label %return

return:                                           ; preds = %cleanup.207, %if.then.5, %if.then.1
  %116 = load i32, i32* %retval
  ret i32 %116
}

declare %struct.gx_color_map_procs_s* @gx_get_cmap_procs(%struct.gs_imager_state_s*, %struct.gx_device_s*) #3

; Function Attrs: nounwind uwtable
define internal i32 @allocate_color_stack(%struct.patch_fill_state_s* %pfs, %struct.gs_memory_s* %memory) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %memory.addr = alloca %struct.gs_memory_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_memory_s* %memory, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 30
  %1 = load i8*, i8** %color_stack, align 8, !tbaa !52
  %cmp = icmp ne i8* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 3
  %3 = load i32, i32* %num_components, align 4, !tbaa !17
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* getelementptr inbounds (%struct.patch_color_s, %struct.patch_color_s* null, i32 0, i32 1, i32 1, i32 0), i32 0, i64 %idxprom
  %4 = bitcast float* %arrayidx to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, 0
  %conv = trunc i64 %sub.ptr.sub to i32
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_step = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 28
  store i32 %conv, i32* %color_stack_step, align 4, !tbaa !14
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_step1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 28
  %7 = load i32, i32* %color_stack_step1, align 4, !tbaa !14
  %conv2 = sext i32 %7 to i64
  %add = add i64 %conv2, 8
  %sub = sub i64 %add, 1
  %div = udiv i64 %sub, 8
  %mul = mul i64 %div, 8
  %conv3 = trunc i64 %mul to i32
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_step4 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 28
  store i32 %conv3, i32* %color_stack_step4, align 4, !tbaa !14
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_step5 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 28
  %10 = load i32, i32* %color_stack_step5, align 4, !tbaa !14
  %mul6 = mul nsw i32 %10, 200
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_size = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 27
  store i32 %mul6, i32* %color_stack_size, align 4, !tbaa !51
  %12 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gs_memory_s, %struct.gs_memory_s* %12, i32 0, i32 1
  %alloc_bytes = getelementptr inbounds %struct.gs_memory_procs_s, %struct.gs_memory_procs_s* %procs, i32 0, i32 7
  %13 = load i8* (%struct.gs_memory_s*, i32, i8*)*, i8* (%struct.gs_memory_s*, i32, i8*)** %alloc_bytes, align 8, !tbaa !119
  %14 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_size7 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %15, i32 0, i32 27
  %16 = load i32, i32* %color_stack_size7, align 4, !tbaa !51
  %call = call i8* %13(%struct.gs_memory_s* %14, i32 %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i32 0, i32 0)) #5
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack8 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 30
  store i8* %call, i8** %color_stack8, align 8, !tbaa !52
  %18 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack9 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %18, i32 0, i32 30
  %19 = load i8*, i8** %color_stack9, align 8, !tbaa !52
  %cmp10 = icmp eq i8* %19, null
  br i1 %cmp10, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.end
  store i32 -25, i32* %retval
  br label %return

if.end.13:                                        ; preds = %if.end
  %20 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack14 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %20, i32 0, i32 30
  %21 = load i8*, i8** %color_stack14, align 8, !tbaa !52
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_size15 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %22, i32 0, i32 27
  %23 = load i32, i32* %color_stack_size15, align 4, !tbaa !51
  %idx.ext = sext i32 %23 to i64
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %24, i32 0, i32 31
  store i8* %add.ptr, i8** %color_stack_limit, align 8, !tbaa !15
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack16 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %25, i32 0, i32 30
  %26 = load i8*, i8** %color_stack16, align 8, !tbaa !52
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_stack_ptr = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %27, i32 0, i32 29
  store i8* %26, i8** %color_stack_ptr, align 8, !tbaa !7
  %28 = load %struct.gs_memory_s*, %struct.gs_memory_s** %memory.addr, align 8, !tbaa !1
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %memory17 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %29, i32 0, i32 32
  store %struct.gs_memory_s* %28, %struct.gs_memory_s** %memory17, align 8, !tbaa !68
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.13, %if.then.12, %if.then
  %30 = load i32, i32* %retval
  ret i32 %30
}

declare %struct.gs_color_index_cache_s* @gs_color_index_cache_create(%struct.gs_memory_s*, %struct.gs_color_space_s*, %struct.gx_device_s*, %struct.gs_imager_state_s*, i32, %struct.gx_device_s*) #3

declare i32 @shade_next_flag(%struct.shade_coord_stream_s*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @shade_next_curve(%struct.shade_coord_stream_s* %cs, %struct.patch_curve_s* %curve) #0 {
entry:
  %cs.addr = alloca %struct.shade_coord_stream_s*, align 8
  %curve.addr = alloca %struct.patch_curve_s*, align 8
  %code = alloca i32, align 4
  store %struct.shade_coord_stream_s* %cs, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  store %struct.patch_curve_s* %curve, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %2 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %vertex = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %2, i32 0, i32 0
  %p = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex, i32 0, i32 0
  %call = call i32 @shade_next_coords(%struct.shade_coord_stream_s* %1, %struct.gs_fixed_point_s* %p, i32 1) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %3 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp sge i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %5 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curve.addr, align 8, !tbaa !1
  %control = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %5, i32 0, i32 1
  %arraydecay = getelementptr inbounds [2 x %struct.gs_fixed_point_s], [2 x %struct.gs_fixed_point_s]* %control, i32 0, i32 0
  %call1 = call i32 @shade_next_coords(%struct.shade_coord_stream_s* %4, %struct.gs_fixed_point_s* %arraydecay, i32 2) #5
  store i32 %call1, i32* %code, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %code, align 4, !tbaa !5
  %7 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %7) #2
  ret i32 %6
}

declare i32 @shade_next_coords(%struct.shade_coord_stream_s*, %struct.gs_fixed_point_s*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @shade_next_colors(%struct.shade_coord_stream_s* %cs, %struct.patch_curve_s* %curves, i32 %num_vertices) #0 {
entry:
  %cs.addr = alloca %struct.shade_coord_stream_s*, align 8
  %curves.addr = alloca %struct.patch_curve_s*, align 8
  %num_vertices.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  store %struct.shade_coord_stream_s* %cs, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  store %struct.patch_curve_s* %curves, %struct.patch_curve_s** %curves.addr, align 8, !tbaa !1
  store i32 %num_vertices, i32* %num_vertices.addr, align 4, !tbaa !5
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  store i32 0, i32* %code, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !5
  %3 = load i32, i32* %num_vertices.addr, align 4, !tbaa !5
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %4 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1 = icmp sge i32 %4, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ]
  br i1 %5, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %6 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %6 to i64
  %7 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curves.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %7, i64 %idxprom
  %vertex = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx, i32 0, i32 0
  %cc = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [64 x float], [64 x float]* %cc, i32 0, i64 1
  store float 0.000000e+00, float* %arrayidx2, align 4, !tbaa !18
  %8 = load %struct.shade_coord_stream_s*, %struct.shade_coord_stream_s** %cs.addr, align 8, !tbaa !1
  %9 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom3 = sext i32 %9 to i64
  %10 = load %struct.patch_curve_s*, %struct.patch_curve_s** %curves.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %10, i64 %idxprom3
  %vertex5 = getelementptr inbounds %struct.patch_curve_s, %struct.patch_curve_s* %arrayidx4, i32 0, i32 0
  %cc6 = getelementptr inbounds %struct.mesh_vertex_s, %struct.mesh_vertex_s* %vertex5, i32 0, i32 1
  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %cc6, i32 0, i32 0
  %call = call i32 @shade_next_color(%struct.shade_coord_stream_s* %8, float* %arraydecay) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %land.end
  %12 = load i32, i32* %code, align 4, !tbaa !5
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %13) #2
  %14 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #2
  ret i32 %12
}

declare i32 @shade_next_color(%struct.shade_coord_stream_s*, float*) #3

; Function Attrs: nounwind uwtable
define internal void @curve_eval(%struct.gs_fixed_point_s* %pt, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %p2, %struct.gs_fixed_point_s* %p3, double %t) #0 {
entry:
  %pt.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p2.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p3.addr = alloca %struct.gs_fixed_point_s*, align 8
  %t.addr = alloca double, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %t01 = alloca i32, align 4
  %t12 = alloca i32, align 4
  store %struct.gs_fixed_point_s* %pt, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p2, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p3, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  store double %t, double* %t.addr, align 8, !tbaa !112
  %0 = bitcast i32* %a to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %b to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %d to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %t01 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %t12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %6, i32 0, i32 0
  %7 = load i32, i32* %x, align 4, !tbaa !109
  store i32 %7, i32* %d, align 4, !tbaa !5
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %8, i32 0, i32 0
  %9 = load i32, i32* %x1, align 4, !tbaa !109
  %10 = load i32, i32* %d, align 4, !tbaa !5
  %sub = sub nsw i32 %9, %10
  store i32 %sub, i32* %t01, align 4, !tbaa !5
  %11 = load i32, i32* %t01, align 4, !tbaa !5
  %shl = shl i32 %11, 1
  %12 = load i32, i32* %t01, align 4, !tbaa !5
  %add = add nsw i32 %shl, %12
  store i32 %add, i32* %c, align 4, !tbaa !5
  %13 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %x2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %13, i32 0, i32 0
  %14 = load i32, i32* %x2, align 4, !tbaa !109
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i32 0, i32 0
  %16 = load i32, i32* %x3, align 4, !tbaa !109
  %sub4 = sub nsw i32 %14, %16
  store i32 %sub4, i32* %t12, align 4, !tbaa !5
  %17 = load i32, i32* %t12, align 4, !tbaa !5
  %shl5 = shl i32 %17, 1
  %18 = load i32, i32* %t12, align 4, !tbaa !5
  %add6 = add nsw i32 %shl5, %18
  %19 = load i32, i32* %c, align 4, !tbaa !5
  %sub7 = sub nsw i32 %add6, %19
  store i32 %sub7, i32* %b, align 4, !tbaa !5
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %x8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %20, i32 0, i32 0
  %21 = load i32, i32* %x8, align 4, !tbaa !109
  %22 = load i32, i32* %b, align 4, !tbaa !5
  %sub9 = sub nsw i32 %21, %22
  %23 = load i32, i32* %c, align 4, !tbaa !5
  %sub10 = sub nsw i32 %sub9, %23
  %24 = load i32, i32* %d, align 4, !tbaa !5
  %sub11 = sub nsw i32 %sub10, %24
  store i32 %sub11, i32* %a, align 4, !tbaa !5
  %25 = load i32, i32* %a, align 4, !tbaa !5
  %conv = sitofp i32 %25 to double
  %26 = load double, double* %t.addr, align 8, !tbaa !112
  %mul = fmul double %conv, %26
  %27 = load i32, i32* %b, align 4, !tbaa !5
  %conv12 = sitofp i32 %27 to double
  %add13 = fadd double %mul, %conv12
  %28 = load double, double* %t.addr, align 8, !tbaa !112
  %mul14 = fmul double %add13, %28
  %29 = load i32, i32* %c, align 4, !tbaa !5
  %conv15 = sitofp i32 %29 to double
  %add16 = fadd double %mul14, %conv15
  %30 = load double, double* %t.addr, align 8, !tbaa !112
  %mul17 = fmul double %add16, %30
  %31 = load i32, i32* %d, align 4, !tbaa !5
  %conv18 = sitofp i32 %31 to double
  %add19 = fadd double %mul17, %conv18
  %conv20 = fptosi double %add19 to i32
  %32 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  %x21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %32, i32 0, i32 0
  store i32 %conv20, i32* %x21, align 4, !tbaa !109
  %33 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %33, i32 0, i32 1
  %34 = load i32, i32* %y, align 4, !tbaa !110
  store i32 %34, i32* %d, align 4, !tbaa !5
  %35 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %35, i32 0, i32 1
  %36 = load i32, i32* %y22, align 4, !tbaa !110
  %37 = load i32, i32* %d, align 4, !tbaa !5
  %sub23 = sub nsw i32 %36, %37
  store i32 %sub23, i32* %t01, align 4, !tbaa !5
  %38 = load i32, i32* %t01, align 4, !tbaa !5
  %shl24 = shl i32 %38, 1
  %39 = load i32, i32* %t01, align 4, !tbaa !5
  %add25 = add nsw i32 %shl24, %39
  store i32 %add25, i32* %c, align 4, !tbaa !5
  %40 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %y26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %40, i32 0, i32 1
  %41 = load i32, i32* %y26, align 4, !tbaa !110
  %42 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %42, i32 0, i32 1
  %43 = load i32, i32* %y27, align 4, !tbaa !110
  %sub28 = sub nsw i32 %41, %43
  store i32 %sub28, i32* %t12, align 4, !tbaa !5
  %44 = load i32, i32* %t12, align 4, !tbaa !5
  %shl29 = shl i32 %44, 1
  %45 = load i32, i32* %t12, align 4, !tbaa !5
  %add30 = add nsw i32 %shl29, %45
  %46 = load i32, i32* %c, align 4, !tbaa !5
  %sub31 = sub nsw i32 %add30, %46
  store i32 %sub31, i32* %b, align 4, !tbaa !5
  %47 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %47, i32 0, i32 1
  %48 = load i32, i32* %y32, align 4, !tbaa !110
  %49 = load i32, i32* %b, align 4, !tbaa !5
  %sub33 = sub nsw i32 %48, %49
  %50 = load i32, i32* %c, align 4, !tbaa !5
  %sub34 = sub nsw i32 %sub33, %50
  %51 = load i32, i32* %d, align 4, !tbaa !5
  %sub35 = sub nsw i32 %sub34, %51
  store i32 %sub35, i32* %a, align 4, !tbaa !5
  %52 = load i32, i32* %a, align 4, !tbaa !5
  %conv36 = sitofp i32 %52 to double
  %53 = load double, double* %t.addr, align 8, !tbaa !112
  %mul37 = fmul double %conv36, %53
  %54 = load i32, i32* %b, align 4, !tbaa !5
  %conv38 = sitofp i32 %54 to double
  %add39 = fadd double %mul37, %conv38
  %55 = load double, double* %t.addr, align 8, !tbaa !112
  %mul40 = fmul double %add39, %55
  %56 = load i32, i32* %c, align 4, !tbaa !5
  %conv41 = sitofp i32 %56 to double
  %add42 = fadd double %mul40, %conv41
  %57 = load double, double* %t.addr, align 8, !tbaa !112
  %mul43 = fmul double %add42, %57
  %58 = load i32, i32* %d, align 4, !tbaa !5
  %conv44 = sitofp i32 %58 to double
  %add45 = fadd double %mul43, %conv44
  %conv46 = fptosi double %add45 to i32
  %59 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pt.addr, align 8, !tbaa !1
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %59, i32 0, i32 1
  store i32 %conv46, i32* %y47, align 4, !tbaa !110
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %60 = bitcast i32* %t12 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %60) #2
  %61 = bitcast i32* %t01 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #2
  %62 = bitcast i32* %d to i8*
  call void @llvm.lifetime.end(i64 4, i8* %62) #2
  %63 = bitcast i32* %c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %63) #2
  %64 = bitcast i32* %b to i8*
  call void @llvm.lifetime.end(i64 4, i8* %64) #2
  %65 = bitcast i32* %a to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  ret void
}

declare i32 @gs_cached_color_index(%struct.gs_color_index_cache_s*, float*, %struct.gx_device_color_s*, i32*) #3

; Function Attrs: nounwind
declare i8* @memcpy(i8*, i8*, i64) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @dc2fc(%struct.patch_fill_state_s* %pfs, %struct.gx_device_color_s* %pdevc, i32* %fc) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  %fc.addr = alloca i32*, align 8
  %j = alloca i32, align 4
  %cinfo = alloca %struct.gx_device_color_info_s*, align 8
  %shift = alloca i32, align 4
  %bits = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  store i32* %fc, i32** %fc.addr, align 8, !tbaa !1
  %0 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct.gx_device_color_info_s** %cinfo to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %trans_device = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 5
  %3 = load %struct.gx_device_s*, %struct.gx_device_s** %trans_device, align 8, !tbaa !71
  %color_info = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %3, i32 0, i32 11
  store %struct.gx_device_color_info_s* %color_info, %struct.gx_device_color_info_s** %cinfo, align 8, !tbaa !1
  %4 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %4, i32 0, i32 0
  %5 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type, align 8, !tbaa !122
  %cmp = icmp eq %struct.gx_device_color_type_s* %5, @gx_dc_type_data_pure
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %j, align 4, !tbaa !5
  %7 = load %struct.gx_device_color_info_s*, %struct.gx_device_color_info_s** %cinfo, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %7, i32 0, i32 1
  %8 = load i32, i32* %num_components, align 4, !tbaa !127
  %cmp1 = icmp slt i32 %6, %8
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.gx_device_color_info_s*, %struct.gx_device_color_info_s** %cinfo, align 8, !tbaa !1
  %comp_shift = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %11, i32 0, i32 11
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %comp_shift, i32 0, i64 %idxprom
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !101
  %conv = zext i8 %12 to i32
  store i32 %conv, i32* %shift, align 4, !tbaa !5
  %13 = bitcast i32* %bits to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  %14 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom2 = sext i32 %14 to i64
  %15 = load %struct.gx_device_color_info_s*, %struct.gx_device_color_info_s** %cinfo, align 8, !tbaa !1
  %comp_bits = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %15, i32 0, i32 12
  %arrayidx3 = getelementptr inbounds [64 x i8], [64 x i8]* %comp_bits, i32 0, i64 %idxprom2
  %16 = load i8, i8* %arrayidx3, align 1, !tbaa !101
  %conv4 = zext i8 %16 to i32
  store i32 %conv4, i32* %bits, align 4, !tbaa !5
  %17 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %colors = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %17, i32 0, i32 1
  %pure = bitcast %union._c* %colors to i64*
  %18 = load i64, i64* %pure, align 8, !tbaa !107
  %19 = load i32, i32* %shift, align 4, !tbaa !5
  %sh_prom = zext i32 %19 to i64
  %shr = lshr i64 %18, %sh_prom
  %20 = load i32, i32* %bits, align 4, !tbaa !5
  %shl = shl i32 1, %20
  %sub = sub nsw i32 %shl, 1
  %conv5 = sext i32 %sub to i64
  %and = and i64 %shr, %conv5
  %21 = load i32, i32* %bits, align 4, !tbaa !5
  %conv6 = sext i32 %21 to i64
  %sub7 = sub i64 31, %conv6
  %shl8 = shl i64 %and, %sub7
  %conv9 = trunc i64 %shl8 to i32
  %22 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom10 = sext i32 %22 to i64
  %23 = load i32*, i32** %fc.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds i32, i32* %23, i64 %idxprom10
  store i32 %conv9, i32* %arrayidx11, align 4, !tbaa !5
  %24 = bitcast i32* %bits to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #2
  %25 = bitcast i32* %shift to i8*
  call void @llvm.lifetime.end(i64 4, i8* %25) #2
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.12

for.cond.12:                                      ; preds = %for.inc.34, %if.else
  %27 = load i32, i32* %j, align 4, !tbaa !5
  %28 = load %struct.gx_device_color_info_s*, %struct.gx_device_color_info_s** %cinfo, align 8, !tbaa !1
  %num_components13 = getelementptr inbounds %struct.gx_device_color_info_s, %struct.gx_device_color_info_s* %28, i32 0, i32 1
  %29 = load i32, i32* %num_components13, align 4, !tbaa !127
  %cmp14 = icmp slt i32 %27, %29
  br i1 %cmp14, label %for.body.16, label %for.end.36

for.body.16:                                      ; preds = %for.cond.12
  %30 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom17 = sext i32 %30 to i64
  %31 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %colors18 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %31, i32 0, i32 1
  %devn = bitcast %union._c* %colors18 to %struct._devn*
  %values = getelementptr inbounds %struct._devn, %struct._devn* %devn, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [64 x i16], [64 x i16]* %values, i32 0, i64 %idxprom17
  %32 = load i16, i16* %arrayidx19, align 2, !tbaa !165
  %conv20 = zext i16 %32 to i32
  %shr21 = ashr i32 %conv20, 1
  %33 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom22 = sext i32 %33 to i64
  %34 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %colors23 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %34, i32 0, i32 1
  %devn24 = bitcast %union._c* %colors23 to %struct._devn*
  %values25 = getelementptr inbounds %struct._devn, %struct._devn* %devn24, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [64 x i16], [64 x i16]* %values25, i32 0, i64 %idxprom22
  %35 = load i16, i16* %arrayidx26, align 2, !tbaa !165
  %conv27 = zext i16 %35 to i32
  %shr28 = ashr i32 %conv27, 13
  %sub29 = sub nsw i32 %shr21, %shr28
  %conv30 = trunc i32 %sub29 to i16
  %conv31 = sext i16 %conv30 to i32
  %36 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom32 = sext i32 %36 to i64
  %37 = load i32*, i32** %fc.addr, align 8, !tbaa !1
  %arrayidx33 = getelementptr inbounds i32, i32* %37, i64 %idxprom32
  store i32 %conv31, i32* %arrayidx33, align 4, !tbaa !5
  br label %for.inc.34

for.inc.34:                                       ; preds = %for.body.16
  %38 = load i32, i32* %j, align 4, !tbaa !5
  %inc35 = add nsw i32 %38, 1
  store i32 %inc35, i32* %j, align 4, !tbaa !5
  br label %for.cond.12

for.end.36:                                       ; preds = %for.cond.12
  br label %if.end

if.end:                                           ; preds = %for.end.36, %for.end
  %39 = bitcast %struct.gx_device_color_info_s** %cinfo to i8*
  call void @llvm.lifetime.end(i64 8, i8* %39) #2
  %40 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @patch_interpolate_color(%struct.patch_color_s* %ppcr, %struct.patch_color_s* %ppc0, %struct.patch_color_s* %ppc1, %struct.patch_fill_state_s* %pfs, double %t) #0 {
entry:
  %ppcr.addr = alloca %struct.patch_color_s*, align 8
  %ppc0.addr = alloca %struct.patch_color_s*, align 8
  %ppc1.addr = alloca %struct.patch_color_s*, align 8
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %t.addr = alloca double, align 8
  %ci = alloca i32, align 4
  store %struct.patch_color_s* %ppcr, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %ppc0, %struct.patch_color_s** %ppc0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %ppc1, %struct.patch_color_s** %ppc1.addr, align 8, !tbaa !1
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store double %t, double* %t.addr, align 8, !tbaa !112
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 9
  %1 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %tobool = icmp ne %struct.gs_function_s* %1, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct.patch_color_s*, %struct.patch_color_s** %ppc0.addr, align 8, !tbaa !1
  %t1 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %t1, i32 0, i64 0
  %3 = load float, float* %arrayidx, align 4, !tbaa !18
  %conv = fpext float %3 to double
  %4 = load double, double* %t.addr, align 8, !tbaa !112
  %sub = fsub double 1.000000e+00, %4
  %mul = fmul double %conv, %sub
  %5 = load double, double* %t.addr, align 8, !tbaa !112
  %6 = load %struct.patch_color_s*, %struct.patch_color_s** %ppc1.addr, align 8, !tbaa !1
  %t2 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %6, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %t2, i32 0, i64 0
  %7 = load float, float* %arrayidx3, align 4, !tbaa !18
  %conv4 = fpext float %7 to double
  %mul5 = fmul double %5, %conv4
  %add = fadd double %mul, %mul5
  %conv6 = fptrunc double %add to float
  %8 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %t7 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %8, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %t7, i32 0, i64 0
  store float %conv6, float* %arrayidx8, align 4, !tbaa !18
  %9 = load %struct.patch_color_s*, %struct.patch_color_s** %ppc0.addr, align 8, !tbaa !1
  %t9 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %9, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %t9, i32 0, i64 1
  %10 = load float, float* %arrayidx10, align 4, !tbaa !18
  %conv11 = fpext float %10 to double
  %11 = load double, double* %t.addr, align 8, !tbaa !112
  %sub12 = fsub double 1.000000e+00, %11
  %mul13 = fmul double %conv11, %sub12
  %12 = load double, double* %t.addr, align 8, !tbaa !112
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %ppc1.addr, align 8, !tbaa !1
  %t14 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %13, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [2 x float], [2 x float]* %t14, i32 0, i64 1
  %14 = load float, float* %arrayidx15, align 4, !tbaa !18
  %conv16 = fpext float %14 to double
  %mul17 = fmul double %12, %conv16
  %add18 = fadd double %mul13, %mul17
  %conv19 = fptrunc double %add18 to float
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %t20 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %15, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %t20, i32 0, i64 1
  store float %conv19, float* %arrayidx21, align 4, !tbaa !18
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_resolve_color_inline(%struct.patch_color_s* %16, %struct.patch_fill_state_s* %17) #5
  br label %if.end

if.else:                                          ; preds = %entry
  %18 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #2
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 3
  %20 = load i32, i32* %num_components, align 4, !tbaa !17
  %sub22 = sub nsw i32 %20, 1
  store i32 %sub22, i32* %ci, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %21 = load i32, i32* %ci, align 4, !tbaa !5
  %cmp = icmp sge i32 %21, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32, i32* %ci, align 4, !tbaa !5
  %idxprom = sext i32 %22 to i64
  %23 = load %struct.patch_color_s*, %struct.patch_color_s** %ppc0.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %23, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  %24 = load float, float* %arrayidx24, align 4, !tbaa !18
  %conv25 = fpext float %24 to double
  %25 = load double, double* %t.addr, align 8, !tbaa !112
  %sub26 = fsub double 1.000000e+00, %25
  %mul27 = fmul double %conv25, %sub26
  %26 = load double, double* %t.addr, align 8, !tbaa !112
  %27 = load i32, i32* %ci, align 4, !tbaa !5
  %idxprom28 = sext i32 %27 to i64
  %28 = load %struct.patch_color_s*, %struct.patch_color_s** %ppc1.addr, align 8, !tbaa !1
  %cc29 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %28, i32 0, i32 1
  %paint30 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc29, i32 0, i32 1
  %values31 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint30, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [64 x float], [64 x float]* %values31, i32 0, i64 %idxprom28
  %29 = load float, float* %arrayidx32, align 4, !tbaa !18
  %conv33 = fpext float %29 to double
  %mul34 = fmul double %26, %conv33
  %add35 = fadd double %mul27, %mul34
  %conv36 = fptrunc double %add35 to float
  %30 = load i32, i32* %ci, align 4, !tbaa !5
  %idxprom37 = sext i32 %30 to i64
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %ppcr.addr, align 8, !tbaa !1
  %cc38 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %31, i32 0, i32 1
  %paint39 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc38, i32 0, i32 1
  %values40 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint39, i32 0, i32 0
  %arrayidx41 = getelementptr inbounds [64 x float], [64 x float]* %values40, i32 0, i64 %idxprom37
  store float %conv36, float* %arrayidx41, align 4, !tbaa !18
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %ci, align 4, !tbaa !5
  %dec = add nsw i32 %32, -1
  store i32 %dec, i32* %ci, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %33 = bitcast i32* %ci to i8*
  call void @llvm.lifetime.end(i64 4, i8* %33) #2
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @constant_color_trapezoid(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %ybot, i32 %ytop, i32 %swap_axes, %struct.patch_color_s* %c) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %le.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %re.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %ybot.addr = alloca i32, align 4
  %ytop.addr = alloca i32, align 4
  %swap_axes.addr = alloca i32, align 4
  %c.addr = alloca %struct.patch_color_s*, align 8
  %c1 = alloca %struct.patch_color_s, align 8
  %dc = alloca %struct.gx_device_color_s, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %re, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  store i32 %ybot, i32* %ybot.addr, align 4, !tbaa !5
  store i32 %ytop, i32* %ytop.addr, align 4, !tbaa !5
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  store %struct.patch_color_s* %c, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %0 = bitcast %struct.patch_color_s* %c1 to i8*
  call void @llvm.lifetime.start(i64 272, i8* %0) #2
  %1 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %2 = bitcast %struct.patch_color_s* %c1 to i8*
  %3 = bitcast %struct.patch_color_s* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 272, i32 8, i1 false), !tbaa.struct !166
  %4 = bitcast %struct.gx_device_color_s* %dc to i8*
  call void @llvm.lifetime.start(i64 656, i8* %4) #2
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %6, %struct.patch_color_s* %c1, %struct.gx_device_color_s* %dc, i32* null) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %7 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.end
  %8 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %do.end
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 0
  %10 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %10, i32 0, i32 42
  %fill_trapezoid = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 27
  %11 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid, align 8, !tbaa !157
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 0
  %13 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1, align 8, !tbaa !55
  %14 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %15 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %16 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %17 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %18 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 1
  %20 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %log_op = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %20, i32 0, i32 10
  %21 = load i32, i32* %log_op, align 4, !tbaa !167
  %call2 = call i32 %11(%struct.gx_device_s* %13, %struct.gs_fixed_edge_s* %14, %struct.gs_fixed_edge_s* %15, i32 %16, i32 %17, i32 %18, %struct.gx_device_color_s* %dc, i32 %21) #5
  store i32 %call2, i32* %code, align 4, !tbaa !5
  br label %do.body.3

do.body.3:                                        ; preds = %if.end
  br label %do.cond.4

do.cond.4:                                        ; preds = %do.body.3
  br label %do.end.5

do.end.5:                                         ; preds = %do.cond.4
  %22 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %22, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end.5, %if.then
  %23 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %23) #2
  %24 = bitcast %struct.gx_device_color_s* %dc to i8*
  call void @llvm.lifetime.end(i64 656, i8* %24) #2
  %25 = bitcast %struct.patch_color_s* %c1 to i8*
  call void @llvm.lifetime.end(i64 272, i8* %25) #2
  %26 = load i32, i32* %retval
  ret i32 %26
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @isnt_color_monotonic(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %mask = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast i32* %mask to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 9
  %3 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %head = getelementptr inbounds %struct.gs_function_s, %struct.gs_function_s* %3, i32 0, i32 0
  %procs = getelementptr inbounds %struct.gs_function_head_s, %struct.gs_function_head_s* %head, i32 0, i32 1
  %is_monotonic = getelementptr inbounds %struct.gs_function_procs_s, %struct.gs_function_procs_s* %procs, i32 0, i32 1
  %4 = load i32 (%struct.gs_function_s*, float*, float*, i32*)*, i32 (%struct.gs_function_s*, float*, float*, i32*)** %is_monotonic, align 8, !tbaa !168
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 9
  %6 = load %struct.gs_function_s*, %struct.gs_function_s** %Function1, align 8, !tbaa !28
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %t = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %7, i32 0, i32 0
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %t, i32 0, i32 0
  %8 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %t2 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %8, i32 0, i32 0
  %arraydecay3 = getelementptr inbounds [2 x float], [2 x float]* %t2, i32 0, i32 0
  %call = call i32 %4(%struct.gs_function_s* %6, float* %arraydecay, float* %arraydecay3, i32* %mask) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %9 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp sge i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %mask, align 4, !tbaa !5
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %12 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %12) #2
  %13 = bitcast i32* %mask to i8*
  call void @llvm.lifetime.end(i64 4, i8* %13) #2
  %14 = load i32, i32* %retval
  ret i32 %14
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_color_linear(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %cs = alloca %struct.gs_color_space_s*, align 8
  %code = alloca i32, align 4
  %s = alloca float, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 25
  %1 = load i32, i32* %unlinear, align 4, !tbaa !53
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = bitcast %struct.gs_color_space_s** %cs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %direct_space = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %3, i32 0, i32 2
  %4 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %direct_space, align 8, !tbaa !16
  store %struct.gs_color_space_s* %4, %struct.gs_color_space_s** %cs, align 8, !tbaa !1
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast float* %s to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %8 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %9 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call = call float @function_linearity(%struct.patch_fill_state_s* %7, %struct.patch_color_s* %8, %struct.patch_color_s* %9) #5
  store float %call, float* %s, align 4, !tbaa !18
  %10 = load float, float* %s, align 4, !tbaa !18
  %conv = fpext float %10 to double
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 21
  %12 = load double, double* %smoothness, align 8, !tbaa !50
  %cmp = fcmp ogt double %conv, %12
  br i1 %cmp, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.else
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.else
  %13 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %cs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %13, i32 0, i32 0
  %14 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !20
  %is_linear = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %14, i32 0, i32 16
  %15 = load i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)** %is_linear, align 8, !tbaa !169
  %16 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %cs, align 8, !tbaa !1
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 1
  %18 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %trans_device = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 5
  %20 = load %struct.gx_device_s*, %struct.gx_device_s** %trans_device, align 8, !tbaa !71
  %21 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %21, i32 0, i32 1
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc3 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %22, i32 0, i32 1
  %23 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness4 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %23, i32 0, i32 21
  %24 = load double, double* %smoothness4, align 8, !tbaa !50
  %25 = load float, float* %s, align 4, !tbaa !18
  %conv5 = fpext float %25 to double
  %sub = fsub double %24, %conv5
  %conv6 = fptrunc double %sub to float
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %icclink = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %26, i32 0, i32 6
  %27 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink, align 8, !tbaa !82
  %call7 = call i32 %15(%struct.gs_color_space_s* %16, %struct.gs_imager_state_s* %18, %struct.gx_device_s* %20, %struct.gs_client_color_s* %cc, %struct.gs_client_color_s* %cc3, %struct.gs_client_color_s* null, %struct.gs_client_color_s* null, float %conv6, %struct.gsicc_link_s* %27) #5
  store i32 %call7, i32* %code, align 4, !tbaa !5
  %28 = load i32, i32* %code, align 4, !tbaa !5
  %cmp8 = icmp sle i32 %28, 0
  br i1 %cmp8, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end
  %29 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %29, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.11:                                        ; preds = %if.end
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.11, %if.then.10, %if.then.2
  %30 = bitcast float* %s to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #2
  %31 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #2
  %32 = bitcast %struct.gs_color_space_s** %cs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %32) #2
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %33 = load i32, i32* %retval
  ret i32 %33
}

; Function Attrs: inlinehint nounwind uwtable
define internal double @color_span(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca double, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 3
  %2 = load i32, i32* %num_components, align 4, !tbaa !17
  store i32 %2, i32* %n, align 4, !tbaa !5
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast double* %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %5, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  %6 = load float, float* %arrayidx, align 4, !tbaa !18
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc1 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %7, i32 0, i32 1
  %paint2 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc1, i32 0, i32 1
  %values3 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint2, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [64 x float], [64 x float]* %values3, i32 0, i64 0
  %8 = load float, float* %arrayidx4, align 4, !tbaa !18
  %sub = fsub float %6, %8
  %cmp = fcmp olt float %sub, 0.000000e+00
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %9 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc5 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %9, i32 0, i32 1
  %paint6 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc5, i32 0, i32 1
  %values7 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [64 x float], [64 x float]* %values7, i32 0, i64 0
  %10 = load float, float* %arrayidx8, align 4, !tbaa !18
  %11 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc9 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %11, i32 0, i32 1
  %paint10 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc9, i32 0, i32 1
  %values11 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint10, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [64 x float], [64 x float]* %values11, i32 0, i64 0
  %12 = load float, float* %arrayidx12, align 4, !tbaa !18
  %sub13 = fsub float %10, %12
  %sub14 = fsub float -0.000000e+00, %sub13
  br label %cond.end

cond.false:                                       ; preds = %entry
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc15 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %13, i32 0, i32 1
  %paint16 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc15, i32 0, i32 1
  %values17 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint16, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [64 x float], [64 x float]* %values17, i32 0, i64 0
  %14 = load float, float* %arrayidx18, align 4, !tbaa !18
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc19 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %15, i32 0, i32 1
  %paint20 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc19, i32 0, i32 1
  %values21 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint20, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [64 x float], [64 x float]* %values21, i32 0, i64 0
  %16 = load float, float* %arrayidx22, align 4, !tbaa !18
  %sub23 = fsub float %14, %16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %sub14, %cond.true ], [ %sub23, %cond.false ]
  %17 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %17, i32 0, i32 18
  %paint24 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain, i32 0, i32 1
  %values25 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint24, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [64 x float], [64 x float]* %values25, i32 0, i64 0
  %18 = load float, float* %arrayidx26, align 4, !tbaa !18
  %div = fdiv float %cond, %18
  %conv = fpext float %div to double
  store double %conv, double* %m, align 8, !tbaa !112
  store i32 1, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %19 = load i32, i32* %i, align 4, !tbaa !5
  %20 = load i32, i32* %n, align 4, !tbaa !5
  %cmp27 = icmp slt i32 %19, %20
  br i1 %cmp27, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load double, double* %m, align 8, !tbaa !112
  %22 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %22 to i64
  %23 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc29 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %23, i32 0, i32 1
  %paint30 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc29, i32 0, i32 1
  %values31 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint30, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [64 x float], [64 x float]* %values31, i32 0, i64 %idxprom
  %24 = load float, float* %arrayidx32, align 4, !tbaa !18
  %25 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom33 = sext i32 %25 to i64
  %26 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc34 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %26, i32 0, i32 1
  %paint35 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc34, i32 0, i32 1
  %values36 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint35, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [64 x float], [64 x float]* %values36, i32 0, i64 %idxprom33
  %27 = load float, float* %arrayidx37, align 4, !tbaa !18
  %sub38 = fsub float %24, %27
  %cmp39 = fcmp olt float %sub38, 0.000000e+00
  br i1 %cmp39, label %cond.true.41, label %cond.false.54

cond.true.41:                                     ; preds = %for.body
  %28 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom42 = sext i32 %28 to i64
  %29 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc43 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %29, i32 0, i32 1
  %paint44 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc43, i32 0, i32 1
  %values45 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint44, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [64 x float], [64 x float]* %values45, i32 0, i64 %idxprom42
  %30 = load float, float* %arrayidx46, align 4, !tbaa !18
  %31 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom47 = sext i32 %31 to i64
  %32 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc48 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %32, i32 0, i32 1
  %paint49 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc48, i32 0, i32 1
  %values50 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint49, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [64 x float], [64 x float]* %values50, i32 0, i64 %idxprom47
  %33 = load float, float* %arrayidx51, align 4, !tbaa !18
  %sub52 = fsub float %30, %33
  %sub53 = fsub float -0.000000e+00, %sub52
  br label %cond.end.66

cond.false.54:                                    ; preds = %for.body
  %34 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom55 = sext i32 %34 to i64
  %35 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc56 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %35, i32 0, i32 1
  %paint57 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc56, i32 0, i32 1
  %values58 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint57, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [64 x float], [64 x float]* %values58, i32 0, i64 %idxprom55
  %36 = load float, float* %arrayidx59, align 4, !tbaa !18
  %37 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom60 = sext i32 %37 to i64
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc61 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %38, i32 0, i32 1
  %paint62 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc61, i32 0, i32 1
  %values63 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint62, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [64 x float], [64 x float]* %values63, i32 0, i64 %idxprom60
  %39 = load float, float* %arrayidx64, align 4, !tbaa !18
  %sub65 = fsub float %36, %39
  br label %cond.end.66

cond.end.66:                                      ; preds = %cond.false.54, %cond.true.41
  %cond67 = phi float [ %sub53, %cond.true.41 ], [ %sub65, %cond.false.54 ]
  %40 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom68 = sext i32 %40 to i64
  %41 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain69 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %41, i32 0, i32 18
  %paint70 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain69, i32 0, i32 1
  %values71 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint70, i32 0, i32 0
  %arrayidx72 = getelementptr inbounds [64 x float], [64 x float]* %values71, i32 0, i64 %idxprom68
  %42 = load float, float* %arrayidx72, align 4, !tbaa !18
  %div73 = fdiv float %cond67, %42
  %conv74 = fpext float %div73 to double
  %cmp75 = fcmp ogt double %21, %conv74
  br i1 %cmp75, label %cond.true.77, label %cond.false.78

cond.true.77:                                     ; preds = %cond.end.66
  %43 = load double, double* %m, align 8, !tbaa !112
  br label %cond.end.126

cond.false.78:                                    ; preds = %cond.end.66
  %44 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom79 = sext i32 %44 to i64
  %45 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc80 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %45, i32 0, i32 1
  %paint81 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc80, i32 0, i32 1
  %values82 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint81, i32 0, i32 0
  %arrayidx83 = getelementptr inbounds [64 x float], [64 x float]* %values82, i32 0, i64 %idxprom79
  %46 = load float, float* %arrayidx83, align 4, !tbaa !18
  %47 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom84 = sext i32 %47 to i64
  %48 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc85 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %48, i32 0, i32 1
  %paint86 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc85, i32 0, i32 1
  %values87 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint86, i32 0, i32 0
  %arrayidx88 = getelementptr inbounds [64 x float], [64 x float]* %values87, i32 0, i64 %idxprom84
  %49 = load float, float* %arrayidx88, align 4, !tbaa !18
  %sub89 = fsub float %46, %49
  %cmp90 = fcmp olt float %sub89, 0.000000e+00
  br i1 %cmp90, label %cond.true.92, label %cond.false.105

cond.true.92:                                     ; preds = %cond.false.78
  %50 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom93 = sext i32 %50 to i64
  %51 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc94 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %51, i32 0, i32 1
  %paint95 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc94, i32 0, i32 1
  %values96 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint95, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [64 x float], [64 x float]* %values96, i32 0, i64 %idxprom93
  %52 = load float, float* %arrayidx97, align 4, !tbaa !18
  %53 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom98 = sext i32 %53 to i64
  %54 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc99 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %54, i32 0, i32 1
  %paint100 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc99, i32 0, i32 1
  %values101 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint100, i32 0, i32 0
  %arrayidx102 = getelementptr inbounds [64 x float], [64 x float]* %values101, i32 0, i64 %idxprom98
  %55 = load float, float* %arrayidx102, align 4, !tbaa !18
  %sub103 = fsub float %52, %55
  %sub104 = fsub float -0.000000e+00, %sub103
  br label %cond.end.117

cond.false.105:                                   ; preds = %cond.false.78
  %56 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom106 = sext i32 %56 to i64
  %57 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc107 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %57, i32 0, i32 1
  %paint108 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc107, i32 0, i32 1
  %values109 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint108, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [64 x float], [64 x float]* %values109, i32 0, i64 %idxprom106
  %58 = load float, float* %arrayidx110, align 4, !tbaa !18
  %59 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom111 = sext i32 %59 to i64
  %60 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc112 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %60, i32 0, i32 1
  %paint113 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc112, i32 0, i32 1
  %values114 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint113, i32 0, i32 0
  %arrayidx115 = getelementptr inbounds [64 x float], [64 x float]* %values114, i32 0, i64 %idxprom111
  %61 = load float, float* %arrayidx115, align 4, !tbaa !18
  %sub116 = fsub float %58, %61
  br label %cond.end.117

cond.end.117:                                     ; preds = %cond.false.105, %cond.true.92
  %cond118 = phi float [ %sub104, %cond.true.92 ], [ %sub116, %cond.false.105 ]
  %62 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom119 = sext i32 %62 to i64
  %63 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain120 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %63, i32 0, i32 18
  %paint121 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain120, i32 0, i32 1
  %values122 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint121, i32 0, i32 0
  %arrayidx123 = getelementptr inbounds [64 x float], [64 x float]* %values122, i32 0, i64 %idxprom119
  %64 = load float, float* %arrayidx123, align 4, !tbaa !18
  %div124 = fdiv float %cond118, %64
  %conv125 = fpext float %div124 to double
  br label %cond.end.126

cond.end.126:                                     ; preds = %cond.end.117, %cond.true.77
  %cond127 = phi double [ %43, %cond.true.77 ], [ %conv125, %cond.end.117 ]
  store double %cond127, double* %m, align 8, !tbaa !112
  br label %for.inc

for.inc:                                          ; preds = %cond.end.126
  %65 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %65, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %66 = load double, double* %m, align 8, !tbaa !112
  %67 = bitcast double* %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %67) #2
  %68 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #2
  ret double %66
}

; Function Attrs: inlinehint nounwind uwtable
define internal float @function_linearity(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #1 {
entry:
  %retval = alloca float, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %s = alloca float, align 4
  %c = alloca %struct.patch_color_s, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %v = alloca float, align 4
  %d = alloca float, align 4
  %s1 = alloca float, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast float* %s to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store float 0.000000e+00, float* %s, align 4, !tbaa !18
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 9
  %2 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %cmp = icmp ne %struct.gs_function_s* %2, null
  br i1 %cmp, label %if.then, label %if.end.71

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.patch_color_s* %c to i8*
  call void @llvm.lifetime.start(i64 272, i8* %3) #2
  %4 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.63, %if.then
  %6 = load i32, i32* %j, align 4, !tbaa !5
  %cmp1 = icmp slt i32 %6, 2
  br i1 %cmp1, label %for.body, label %for.end.65

for.body:                                         ; preds = %for.cond
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %t = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %7, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %t, i32 0, i64 0
  %8 = load float, float* %arrayidx, align 4, !tbaa !18
  %9 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom = sext i32 %9 to i64
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* @function_linearity.q, i32 0, i64 %idxprom
  %10 = load float, float* %arrayidx2, align 4, !tbaa !18
  %sub = fsub float 1.000000e+00, %10
  %mul = fmul float %8, %sub
  %11 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %t3 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %11, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %t3, i32 0, i64 0
  %12 = load float, float* %arrayidx4, align 4, !tbaa !18
  %13 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom5 = sext i32 %13 to i64
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* @function_linearity.q, i32 0, i64 %idxprom5
  %14 = load float, float* %arrayidx6, align 4, !tbaa !18
  %mul7 = fmul float %12, %14
  %add = fadd float %mul, %mul7
  %t8 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %c, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [2 x float], [2 x float]* %t8, i32 0, i64 0
  store float %add, float* %arrayidx9, align 4, !tbaa !18
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %t10 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %15, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %t10, i32 0, i64 1
  %16 = load float, float* %arrayidx11, align 4, !tbaa !18
  %17 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom12 = sext i32 %17 to i64
  %arrayidx13 = getelementptr inbounds [2 x float], [2 x float]* @function_linearity.q, i32 0, i64 %idxprom12
  %18 = load float, float* %arrayidx13, align 4, !tbaa !18
  %sub14 = fsub float 1.000000e+00, %18
  %mul15 = fmul float %16, %sub14
  %19 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %t16 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %19, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %t16, i32 0, i64 1
  %20 = load float, float* %arrayidx17, align 4, !tbaa !18
  %21 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* @function_linearity.q, i32 0, i64 %idxprom18
  %22 = load float, float* %arrayidx19, align 4, !tbaa !18
  %mul20 = fmul float %20, %22
  %add21 = fadd float %mul15, %mul20
  %t22 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %c, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [2 x float], [2 x float]* %t22, i32 0, i64 1
  store float %add21, float* %arrayidx23, align 4, !tbaa !18
  %23 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_resolve_color_inline(%struct.patch_color_s* %c, %struct.patch_fill_state_s* %23) #5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.24

for.cond.24:                                      ; preds = %for.inc, %for.body
  %24 = load i32, i32* %i, align 4, !tbaa !5
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %25, i32 0, i32 3
  %26 = load i32, i32* %num_components, align 4, !tbaa !17
  %cmp25 = icmp slt i32 %24, %26
  br i1 %cmp25, label %for.body.26, label %for.end

for.body.26:                                      ; preds = %for.cond.24
  %27 = bitcast float* %v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #2
  %28 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom27 = sext i32 %28 to i64
  %29 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %29, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom27
  %30 = load float, float* %arrayidx28, align 4, !tbaa !18
  %31 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom29 = sext i32 %31 to i64
  %arrayidx30 = getelementptr inbounds [2 x float], [2 x float]* @function_linearity.q, i32 0, i64 %idxprom29
  %32 = load float, float* %arrayidx30, align 4, !tbaa !18
  %sub31 = fsub float 1.000000e+00, %32
  %mul32 = fmul float %30, %sub31
  %33 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom33 = sext i32 %33 to i64
  %34 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc34 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %34, i32 0, i32 1
  %paint35 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc34, i32 0, i32 1
  %values36 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint35, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [64 x float], [64 x float]* %values36, i32 0, i64 %idxprom33
  %35 = load float, float* %arrayidx37, align 4, !tbaa !18
  %36 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom38 = sext i32 %36 to i64
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* @function_linearity.q, i32 0, i64 %idxprom38
  %37 = load float, float* %arrayidx39, align 4, !tbaa !18
  %mul40 = fmul float %35, %37
  %add41 = fadd float %mul32, %mul40
  store float %add41, float* %v, align 4, !tbaa !18
  %38 = bitcast float* %d to i8*
  call void @llvm.lifetime.start(i64 4, i8* %38) #2
  %39 = load float, float* %v, align 4, !tbaa !18
  %40 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom42 = sext i32 %40 to i64
  %cc43 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %c, i32 0, i32 1
  %paint44 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc43, i32 0, i32 1
  %values45 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint44, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [64 x float], [64 x float]* %values45, i32 0, i64 %idxprom42
  %41 = load float, float* %arrayidx46, align 4, !tbaa !18
  %sub47 = fsub float %39, %41
  store float %sub47, float* %d, align 4, !tbaa !18
  %42 = bitcast float* %s1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %42) #2
  %43 = load float, float* %d, align 4, !tbaa !18
  %cmp48 = fcmp olt float %43, 0.000000e+00
  br i1 %cmp48, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body.26
  %44 = load float, float* %d, align 4, !tbaa !18
  %sub49 = fsub float -0.000000e+00, %44
  br label %cond.end

cond.false:                                       ; preds = %for.body.26
  %45 = load float, float* %d, align 4, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %sub49, %cond.true ], [ %45, %cond.false ]
  %46 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom50 = sext i32 %46 to i64
  %47 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %47, i32 0, i32 18
  %paint51 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain, i32 0, i32 1
  %values52 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint51, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [64 x float], [64 x float]* %values52, i32 0, i64 %idxprom50
  %48 = load float, float* %arrayidx53, align 4, !tbaa !18
  %div = fdiv float %cond, %48
  store float %div, float* %s1, align 4, !tbaa !18
  %49 = load float, float* %s1, align 4, !tbaa !18
  %conv = fpext float %49 to double
  %50 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %50, i32 0, i32 21
  %51 = load double, double* %smoothness, align 8, !tbaa !50
  %cmp54 = fcmp ogt double %conv, %51
  br i1 %cmp54, label %if.then.56, label %if.end

if.then.56:                                       ; preds = %cond.end
  %52 = load float, float* %s1, align 4, !tbaa !18
  store float %52, float* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %53 = load float, float* %s, align 4, !tbaa !18
  %54 = load float, float* %s1, align 4, !tbaa !18
  %cmp57 = fcmp olt float %53, %54
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end
  %55 = load float, float* %s1, align 4, !tbaa !18
  store float %55, float* %s, align 4, !tbaa !18
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.59, %if.end
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.60, %if.then.56
  %56 = bitcast float* %s1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #2
  %57 = bitcast float* %d to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #2
  %58 = bitcast float* %v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %58) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.66 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %59 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %59, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond.24

for.end:                                          ; preds = %for.cond.24
  br label %for.inc.63

for.inc.63:                                       ; preds = %for.end
  %60 = load i32, i32* %j, align 4, !tbaa !5
  %inc64 = add nsw i32 %60, 1
  store i32 %inc64, i32* %j, align 4, !tbaa !5
  br label %for.cond

for.end.65:                                       ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.66

cleanup.66:                                       ; preds = %for.end.65, %cleanup
  %61 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %61) #2
  %62 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %62) #2
  %63 = bitcast %struct.patch_color_s* %c to i8*
  call void @llvm.lifetime.end(i64 272, i8* %63) #2
  %cleanup.dest.69 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.69, label %cleanup.72 [
    i32 0, label %cleanup.cont.70
  ]

cleanup.cont.70:                                  ; preds = %cleanup.66
  br label %if.end.71

if.end.71:                                        ; preds = %cleanup.cont.70, %entry
  %64 = load float, float* %s, align 4, !tbaa !18
  store float %64, float* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.72

cleanup.72:                                       ; preds = %if.end.71, %cleanup.66
  %65 = bitcast float* %s to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  %66 = load float, float* %retval
  ret float %66
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @draw_quadrangle(%struct.quadrangle_patch* %p, i64 %rgbcolor) #1 {
entry:
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %rgbcolor.addr = alloca i64, align 8
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i64 %rgbcolor, i64* %rgbcolor.addr, align 8, !tbaa !107
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @make_vertices(%struct.gs_fixed_point_s* %q, %struct.quadrangle_patch* %p) #1 {
entry:
  %q.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  store %struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %0 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %0, i64 0
  %1 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx3 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2, i32 0, i64 0
  %2 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx3, align 8, !tbaa !1
  %p4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %2, i32 0, i32 0
  %3 = bitcast %struct.gs_fixed_point_s* %arrayidx to i8*
  %4 = bitcast %struct.gs_fixed_point_s* %p4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 8, i32 4, i1 false), !tbaa.struct !117
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i64 1
  %6 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p6 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p6, i32 0, i64 0
  %arrayidx8 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx7, i32 0, i64 1
  %7 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx8, align 8, !tbaa !1
  %p9 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %7, i32 0, i32 0
  %8 = bitcast %struct.gs_fixed_point_s* %arrayidx5 to i8*
  %9 = bitcast %struct.gs_fixed_point_s* %p9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false), !tbaa.struct !117
  %10 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %10, i64 2
  %11 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %11, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p11, i32 0, i64 1
  %arrayidx13 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx12, i32 0, i64 1
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx13, align 8, !tbaa !1
  %p14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i32 0, i32 0
  %13 = bitcast %struct.gs_fixed_point_s* %arrayidx10 to i8*
  %14 = bitcast %struct.gs_fixed_point_s* %p14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false), !tbaa.struct !117
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 3
  %16 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p16 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %16, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p16, i32 0, i64 1
  %arrayidx18 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx17, i32 0, i64 0
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx18, align 8, !tbaa !1
  %p19 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 0
  %18 = bitcast %struct.gs_fixed_point_s* %arrayidx15 to i8*
  %19 = bitcast %struct.gs_fixed_point_s* %p19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 4, i1 false), !tbaa.struct !117
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @wrap_vertices_by_y(%struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s* %s) #1 {
entry:
  %q.addr = alloca %struct.gs_fixed_point_s*, align 8
  %s.addr = alloca %struct.gs_fixed_point_s*, align 8
  %y = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %s, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %0 = bitcast i32* %y to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %1, i64 0
  %y1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx, i32 0, i32 1
  %2 = load i32, i32* %y1, align 4, !tbaa !110
  store i32 %2, i32* %y, align 4, !tbaa !5
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  store i32 0, i32* %i, align 4, !tbaa !5
  %4 = load i32, i32* %y, align 4, !tbaa !5
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i64 1
  %y3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx2, i32 0, i32 1
  %6 = load i32, i32* %y3, align 4, !tbaa !110
  %cmp = icmp sgt i32 %4, %6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %i, align 4, !tbaa !5
  %7 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %7, i64 1
  %y5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx4, i32 0, i32 1
  %8 = load i32, i32* %y5, align 4, !tbaa !110
  store i32 %8, i32* %y, align 4, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %y, align 4, !tbaa !5
  %10 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %10, i64 2
  %y7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx6, i32 0, i32 1
  %11 = load i32, i32* %y7, align 4, !tbaa !110
  %cmp8 = icmp sgt i32 %9, %11
  br i1 %cmp8, label %if.then.9, label %if.end.12

if.then.9:                                        ; preds = %if.end
  store i32 2, i32* %i, align 4, !tbaa !5
  %12 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %12, i64 2
  %y11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx10, i32 0, i32 1
  %13 = load i32, i32* %y11, align 4, !tbaa !110
  store i32 %13, i32* %y, align 4, !tbaa !5
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.9, %if.end
  %14 = load i32, i32* %y, align 4, !tbaa !5
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 3
  %y14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx13, i32 0, i32 1
  %16 = load i32, i32* %y14, align 4, !tbaa !110
  %cmp15 = icmp sgt i32 %14, %16
  br i1 %cmp15, label %if.then.16, label %if.end.19

if.then.16:                                       ; preds = %if.end.12
  store i32 3, i32* %i, align 4, !tbaa !5
  %17 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %17, i64 3
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx17, i32 0, i32 1
  %18 = load i32, i32* %y18, align 4, !tbaa !110
  store i32 %18, i32* %y, align 4, !tbaa !5
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.16, %if.end.12
  %19 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %19, i64 0
  %20 = load i32, i32* %i, align 4, !tbaa !5
  %add = add nsw i32 %20, 0
  %rem = srem i32 %add, 4
  %idxprom = sext i32 %rem to i64
  %21 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %21, i64 %idxprom
  %22 = bitcast %struct.gs_fixed_point_s* %arrayidx20 to i8*
  %23 = bitcast %struct.gs_fixed_point_s* %arrayidx21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false), !tbaa.struct !117
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %24, i64 1
  %25 = load i32, i32* %i, align 4, !tbaa !5
  %add23 = add nsw i32 %25, 1
  %rem24 = srem i32 %add23, 4
  %idxprom25 = sext i32 %rem24 to i64
  %26 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %26, i64 %idxprom25
  %27 = bitcast %struct.gs_fixed_point_s* %arrayidx22 to i8*
  %28 = bitcast %struct.gs_fixed_point_s* %arrayidx26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false), !tbaa.struct !117
  %29 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %29, i64 2
  %30 = load i32, i32* %i, align 4, !tbaa !5
  %add28 = add nsw i32 %30, 2
  %rem29 = srem i32 %add28, 4
  %idxprom30 = sext i32 %rem29 to i64
  %31 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %31, i64 %idxprom30
  %32 = bitcast %struct.gs_fixed_point_s* %arrayidx27 to i8*
  %33 = bitcast %struct.gs_fixed_point_s* %arrayidx31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false), !tbaa.struct !117
  %34 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %34, i64 3
  %35 = load i32, i32* %i, align 4, !tbaa !5
  %add33 = add nsw i32 %35, 3
  %rem34 = srem i32 %add33, 4
  %idxprom35 = sext i32 %rem34 to i64
  %36 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %s.addr, align 8, !tbaa !1
  %arrayidx36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %36, i64 %idxprom35
  %37 = bitcast %struct.gs_fixed_point_s* %arrayidx32 to i8*
  %38 = bitcast %struct.gs_fixed_point_s* %arrayidx36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false), !tbaa.struct !117
  %39 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #2
  %40 = bitcast i32* %y to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #2
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @gx_shade_trapezoid(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %q, i32 %vi0, i32 %vi1, i32 %vi2, i32 %vi3, i32 %ybot0, i32 %ytop0, i32 %swap_axes, %struct.gx_device_color_s* %pdevc, i32 %orient) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %q.addr = alloca %struct.gs_fixed_point_s*, align 8
  %vi0.addr = alloca i32, align 4
  %vi1.addr = alloca i32, align 4
  %vi2.addr = alloca i32, align 4
  %vi3.addr = alloca i32, align 4
  %ybot0.addr = alloca i32, align 4
  %ytop0.addr = alloca i32, align 4
  %swap_axes.addr = alloca i32, align 4
  %pdevc.addr = alloca %struct.gx_device_color_s*, align 8
  %orient.addr = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %code = alloca i32, align 4
  %ybot = alloca i32, align 4
  %ytop = alloca i32, align 4
  %xleft = alloca i32, align 4
  %xright = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %clip = alloca i32, align 4
  %lenew = alloca %struct.gs_fixed_edge_s, align 4
  %renew = alloca %struct.gs_fixed_edge_s, align 4
  %ybl = alloca i32, align 4
  %ybr = alloca i32, align 4
  %ytl = alloca i32, align 4
  %ytr = alloca i32, align 4
  %ymid = alloca i32, align 4
  %round = alloca i32, align 4
  %round398 = alloca i32, align 4
  %round465 = alloca i32, align 4
  %round514 = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  store i32 %vi0, i32* %vi0.addr, align 4, !tbaa !5
  store i32 %vi1, i32* %vi1.addr, align 4, !tbaa !5
  store i32 %vi2, i32* %vi2.addr, align 4, !tbaa !5
  store i32 %vi3, i32* %vi3.addr, align 4, !tbaa !5
  store i32 %ybot0, i32* %ybot0.addr, align 4, !tbaa !5
  store i32 %ytop0, i32* %ytop0.addr, align 4, !tbaa !5
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  store %struct.gx_device_color_s* %pdevc, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  store i32 %orient, i32* %orient.addr, align 4, !tbaa !5
  %0 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = load i32, i32* %ybot0.addr, align 4, !tbaa !5
  %5 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 8
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %7 = load i32, i32* %x, align 4, !tbaa !138
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 8
  %p2 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect1, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2, i32 0, i32 1
  %9 = load i32, i32* %y, align 4, !tbaa !140
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %9, %cond.false ]
  %cmp = icmp sgt i32 %4, %cond
  br i1 %cmp, label %cond.true.3, label %cond.false.4

cond.true.3:                                      ; preds = %cond.end
  %10 = load i32, i32* %ybot0.addr, align 4, !tbaa !5
  br label %cond.end.16

cond.false.4:                                     ; preds = %cond.end
  %11 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool5 = icmp ne i32 %11, 0
  br i1 %tobool5, label %cond.true.6, label %cond.false.10

cond.true.6:                                      ; preds = %cond.false.4
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect7 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 8
  %p8 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect7, i32 0, i32 0
  %x9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p8, i32 0, i32 0
  %13 = load i32, i32* %x9, align 4, !tbaa !138
  br label %cond.end.14

cond.false.10:                                    ; preds = %cond.false.4
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect11 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %14, i32 0, i32 8
  %p12 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect11, i32 0, i32 0
  %y13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p12, i32 0, i32 1
  %15 = load i32, i32* %y13, align 4, !tbaa !140
  br label %cond.end.14

cond.end.14:                                      ; preds = %cond.false.10, %cond.true.6
  %cond15 = phi i32 [ %13, %cond.true.6 ], [ %15, %cond.false.10 ]
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.end.14, %cond.true.3
  %cond17 = phi i32 [ %10, %cond.true.3 ], [ %cond15, %cond.end.14 ]
  store i32 %cond17, i32* %ybot, align 4, !tbaa !5
  %16 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #2
  %17 = load i32, i32* %ytop0.addr, align 4, !tbaa !5
  %18 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool18 = icmp ne i32 %18, 0
  br i1 %tobool18, label %cond.true.19, label %cond.false.23

cond.true.19:                                     ; preds = %cond.end.16
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect20 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 8
  %q21 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect20, i32 0, i32 1
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q21, i32 0, i32 0
  %20 = load i32, i32* %x22, align 4, !tbaa !139
  br label %cond.end.27

cond.false.23:                                    ; preds = %cond.end.16
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect24 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %21, i32 0, i32 8
  %q25 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect24, i32 0, i32 1
  %y26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q25, i32 0, i32 1
  %22 = load i32, i32* %y26, align 4, !tbaa !141
  br label %cond.end.27

cond.end.27:                                      ; preds = %cond.false.23, %cond.true.19
  %cond28 = phi i32 [ %20, %cond.true.19 ], [ %22, %cond.false.23 ]
  %cmp29 = icmp slt i32 %17, %cond28
  br i1 %cmp29, label %cond.true.30, label %cond.false.31

cond.true.30:                                     ; preds = %cond.end.27
  %23 = load i32, i32* %ytop0.addr, align 4, !tbaa !5
  br label %cond.end.43

cond.false.31:                                    ; preds = %cond.end.27
  %24 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool32 = icmp ne i32 %24, 0
  br i1 %tobool32, label %cond.true.33, label %cond.false.37

cond.true.33:                                     ; preds = %cond.false.31
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect34 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %25, i32 0, i32 8
  %q35 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect34, i32 0, i32 1
  %x36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q35, i32 0, i32 0
  %26 = load i32, i32* %x36, align 4, !tbaa !139
  br label %cond.end.41

cond.false.37:                                    ; preds = %cond.false.31
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect38 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %27, i32 0, i32 8
  %q39 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect38, i32 0, i32 1
  %y40 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q39, i32 0, i32 1
  %28 = load i32, i32* %y40, align 4, !tbaa !141
  br label %cond.end.41

cond.end.41:                                      ; preds = %cond.false.37, %cond.true.33
  %cond42 = phi i32 [ %26, %cond.true.33 ], [ %28, %cond.false.37 ]
  br label %cond.end.43

cond.end.43:                                      ; preds = %cond.end.41, %cond.true.30
  %cond44 = phi i32 [ %23, %cond.true.30 ], [ %cond42, %cond.end.41 ]
  store i32 %cond44, i32* %ytop, align 4, !tbaa !5
  %29 = bitcast i32* %xleft to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #2
  %30 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool45 = icmp ne i32 %30, 0
  br i1 %tobool45, label %cond.true.46, label %cond.false.50

cond.true.46:                                     ; preds = %cond.end.43
  %31 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect47 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %31, i32 0, i32 8
  %p48 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect47, i32 0, i32 0
  %y49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p48, i32 0, i32 1
  %32 = load i32, i32* %y49, align 4, !tbaa !140
  br label %cond.end.54

cond.false.50:                                    ; preds = %cond.end.43
  %33 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect51 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %33, i32 0, i32 8
  %p52 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect51, i32 0, i32 0
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p52, i32 0, i32 0
  %34 = load i32, i32* %x53, align 4, !tbaa !138
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.false.50, %cond.true.46
  %cond55 = phi i32 [ %32, %cond.true.46 ], [ %34, %cond.false.50 ]
  store i32 %cond55, i32* %xleft, align 4, !tbaa !5
  %35 = bitcast i32* %xright to i8*
  call void @llvm.lifetime.start(i64 4, i8* %35) #2
  %36 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool56 = icmp ne i32 %36, 0
  br i1 %tobool56, label %cond.true.57, label %cond.false.61

cond.true.57:                                     ; preds = %cond.end.54
  %37 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect58 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %37, i32 0, i32 8
  %q59 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect58, i32 0, i32 1
  %y60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q59, i32 0, i32 1
  %38 = load i32, i32* %y60, align 4, !tbaa !141
  br label %cond.end.65

cond.false.61:                                    ; preds = %cond.end.54
  %39 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect62 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %39, i32 0, i32 8
  %q63 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect62, i32 0, i32 1
  %x64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q63, i32 0, i32 0
  %40 = load i32, i32* %x64, align 4, !tbaa !139
  br label %cond.end.65

cond.end.65:                                      ; preds = %cond.false.61, %cond.true.57
  %cond66 = phi i32 [ %38, %cond.true.57 ], [ %40, %cond.false.61 ]
  store i32 %cond66, i32* %xright, align 4, !tbaa !5
  br label %do.body

do.body:                                          ; preds = %cond.end.65
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %41 = load i32, i32* %ybot, align 4, !tbaa !5
  %42 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp67 = icmp sge i32 %41, %42
  br i1 %cmp67, label %if.then, label %if.end

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1066

if.end:                                           ; preds = %do.end
  %43 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %44 = load i32, i32* %vi0.addr, align 4, !tbaa !5
  %45 = load i32, i32* %vi1.addr, align 4, !tbaa !5
  %46 = load i32, i32* %vi2.addr, align 4, !tbaa !5
  %47 = load i32, i32* %vi3.addr, align 4, !tbaa !5
  %48 = load i32, i32* %ybot, align 4, !tbaa !5
  %49 = load i32, i32* %ytop, align 4, !tbaa !5
  %50 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %51 = load i32, i32* %orient.addr, align 4, !tbaa !5
  call void @make_trapezoid(%struct.gs_fixed_point_s* %43, i32 %44, i32 %45, i32 %46, i32 %47, i32 %48, i32 %49, i32 %50, i32 %51, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re) #5
  %52 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %52, i32 0, i32 26
  %53 = load i32, i32* %inside, align 4, !tbaa !32
  %tobool68 = icmp ne i32 %53, 0
  br i1 %tobool68, label %if.end.1055, label %if.then.69

if.then.69:                                       ; preds = %if.end
  %54 = bitcast i32* %clip to i8*
  call void @llvm.lifetime.start(i64 4, i8* %54) #2
  store i32 0, i32* %clip, align 4, !tbaa !5
  %start = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 0
  %55 = load i32, i32* %x70, align 4, !tbaa !128
  %56 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp71 = icmp sgt i32 %55, %56
  br i1 %cmp71, label %if.then.72, label %if.else

if.then.72:                                       ; preds = %if.then.69
  %end = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x73 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 0
  %57 = load i32, i32* %x73, align 4, !tbaa !131
  %58 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp74 = icmp sgt i32 %57, %58
  br i1 %cmp74, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %if.then.72
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1054

if.end.76:                                        ; preds = %if.then.72
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.82

if.else:                                          ; preds = %if.then.69
  %end77 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end77, i32 0, i32 0
  %59 = load i32, i32* %x78, align 4, !tbaa !131
  %60 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp79 = icmp sgt i32 %59, %60
  br i1 %cmp79, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %if.else
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.80, %if.else
  br label %if.end.82

if.end.82:                                        ; preds = %if.end.81, %if.end.76
  %start83 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start83, i32 0, i32 0
  %61 = load i32, i32* %x84, align 4, !tbaa !128
  %62 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp85 = icmp slt i32 %61, %62
  br i1 %cmp85, label %if.then.86, label %if.else.101

if.then.86:                                       ; preds = %if.end.82
  %end87 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x88 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end87, i32 0, i32 0
  %63 = load i32, i32* %x88, align 4, !tbaa !131
  %64 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp89 = icmp slt i32 %63, %64
  br i1 %cmp89, label %if.then.90, label %if.else.99

if.then.90:                                       ; preds = %if.then.86
  %65 = load i32, i32* %xleft, align 4, !tbaa !5
  %start91 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x92 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start91, i32 0, i32 0
  store i32 %65, i32* %x92, align 4, !tbaa !128
  %66 = load i32, i32* %xleft, align 4, !tbaa !5
  %end93 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x94 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end93, i32 0, i32 0
  store i32 %66, i32* %x94, align 4, !tbaa !131
  %67 = load i32, i32* %ybot, align 4, !tbaa !5
  %start95 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y96 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start95, i32 0, i32 1
  store i32 %67, i32* %y96, align 4, !tbaa !130
  %68 = load i32, i32* %ytop, align 4, !tbaa !5
  %end97 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end97, i32 0, i32 1
  store i32 %68, i32* %y98, align 4, !tbaa !132
  br label %if.end.100

if.else.99:                                       ; preds = %if.then.86
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.99, %if.then.90
  br label %if.end.107

if.else.101:                                      ; preds = %if.end.82
  %end102 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x103 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end102, i32 0, i32 0
  %69 = load i32, i32* %x103, align 4, !tbaa !131
  %70 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp104 = icmp slt i32 %69, %70
  br i1 %cmp104, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %if.else.101
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.106

if.end.106:                                       ; preds = %if.then.105, %if.else.101
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %if.end.100
  %start108 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start108, i32 0, i32 0
  %71 = load i32, i32* %x109, align 4, !tbaa !128
  %72 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp110 = icmp slt i32 %71, %72
  br i1 %cmp110, label %if.then.111, label %if.else.117

if.then.111:                                      ; preds = %if.end.107
  %end112 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x113 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end112, i32 0, i32 0
  %73 = load i32, i32* %x113, align 4, !tbaa !131
  %74 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp114 = icmp slt i32 %73, %74
  br i1 %cmp114, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %if.then.111
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1054

if.end.116:                                       ; preds = %if.then.111
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.123

if.else.117:                                      ; preds = %if.end.107
  %end118 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end118, i32 0, i32 0
  %75 = load i32, i32* %x119, align 4, !tbaa !131
  %76 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp120 = icmp slt i32 %75, %76
  br i1 %cmp120, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.else.117
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.122

if.end.122:                                       ; preds = %if.then.121, %if.else.117
  br label %if.end.123

if.end.123:                                       ; preds = %if.end.122, %if.end.116
  %start124 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x125 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start124, i32 0, i32 0
  %77 = load i32, i32* %x125, align 4, !tbaa !128
  %78 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp126 = icmp sgt i32 %77, %78
  br i1 %cmp126, label %if.then.127, label %if.else.142

if.then.127:                                      ; preds = %if.end.123
  %end128 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x129 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end128, i32 0, i32 0
  %79 = load i32, i32* %x129, align 4, !tbaa !131
  %80 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp130 = icmp sgt i32 %79, %80
  br i1 %cmp130, label %if.then.131, label %if.else.140

if.then.131:                                      ; preds = %if.then.127
  %81 = load i32, i32* %xright, align 4, !tbaa !5
  %start132 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x133 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start132, i32 0, i32 0
  store i32 %81, i32* %x133, align 4, !tbaa !128
  %82 = load i32, i32* %xright, align 4, !tbaa !5
  %end134 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x135 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end134, i32 0, i32 0
  store i32 %82, i32* %x135, align 4, !tbaa !131
  %83 = load i32, i32* %ybot, align 4, !tbaa !5
  %start136 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y137 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start136, i32 0, i32 1
  store i32 %83, i32* %y137, align 4, !tbaa !130
  %84 = load i32, i32* %ytop, align 4, !tbaa !5
  %end138 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y139 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end138, i32 0, i32 1
  store i32 %84, i32* %y139, align 4, !tbaa !132
  br label %if.end.141

if.else.140:                                      ; preds = %if.then.127
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.141

if.end.141:                                       ; preds = %if.else.140, %if.then.131
  br label %if.end.148

if.else.142:                                      ; preds = %if.end.123
  %end143 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x144 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end143, i32 0, i32 0
  %85 = load i32, i32* %x144, align 4, !tbaa !131
  %86 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp145 = icmp sgt i32 %85, %86
  br i1 %cmp145, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %if.else.142
  store i32 1, i32* %clip, align 4, !tbaa !5
  br label %if.end.147

if.end.147:                                       ; preds = %if.then.146, %if.else.142
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.end.141
  %87 = load i32, i32* %clip, align 4, !tbaa !5
  %tobool149 = icmp ne i32 %87, 0
  br i1 %tobool149, label %if.then.150, label %if.end.1053

if.then.150:                                      ; preds = %if.end.148
  %88 = bitcast %struct.gs_fixed_edge_s* %lenew to i8*
  call void @llvm.lifetime.start(i64 16, i8* %88) #2
  %89 = bitcast %struct.gs_fixed_edge_s* %renew to i8*
  call void @llvm.lifetime.start(i64 16, i8* %89) #2
  %90 = bitcast i32* %ybl to i8*
  call void @llvm.lifetime.start(i64 4, i8* %90) #2
  %91 = bitcast i32* %ybr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #2
  %92 = bitcast i32* %ytl to i8*
  call void @llvm.lifetime.start(i64 4, i8* %92) #2
  %93 = bitcast i32* %ytr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %93) #2
  %94 = bitcast i32* %ymid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %94) #2
  %start151 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x152 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start151, i32 0, i32 0
  %95 = load i32, i32* %x152, align 4, !tbaa !128
  %end153 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x154 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end153, i32 0, i32 0
  %96 = load i32, i32* %x154, align 4, !tbaa !131
  %cmp155 = icmp sgt i32 %95, %96
  br i1 %cmp155, label %if.then.156, label %if.else.164

if.then.156:                                      ; preds = %if.then.150
  %start157 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x158 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start157, i32 0, i32 0
  %97 = load i32, i32* %x158, align 4, !tbaa !128
  %98 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp159 = icmp slt i32 %97, %98
  br i1 %cmp159, label %if.then.160, label %if.end.163

if.then.160:                                      ; preds = %if.then.156
  %start161 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x162 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start161, i32 0, i32 0
  %99 = load i32, i32* %x162, align 4, !tbaa !128
  store i32 %99, i32* %xright, align 4, !tbaa !5
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.160, %if.then.156
  br label %if.end.172

if.else.164:                                      ; preds = %if.then.150
  %end165 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x166 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end165, i32 0, i32 0
  %100 = load i32, i32* %x166, align 4, !tbaa !131
  %101 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp167 = icmp slt i32 %100, %101
  br i1 %cmp167, label %if.then.168, label %if.end.171

if.then.168:                                      ; preds = %if.else.164
  %end169 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x170 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end169, i32 0, i32 0
  %102 = load i32, i32* %x170, align 4, !tbaa !131
  store i32 %102, i32* %xright, align 4, !tbaa !5
  br label %if.end.171

if.end.171:                                       ; preds = %if.then.168, %if.else.164
  br label %if.end.172

if.end.172:                                       ; preds = %if.end.171, %if.end.163
  %start173 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x174 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start173, i32 0, i32 0
  %103 = load i32, i32* %x174, align 4, !tbaa !128
  %end175 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x176 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end175, i32 0, i32 0
  %104 = load i32, i32* %x176, align 4, !tbaa !131
  %cmp177 = icmp sgt i32 %103, %104
  br i1 %cmp177, label %if.then.178, label %if.else.186

if.then.178:                                      ; preds = %if.end.172
  %end179 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x180 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end179, i32 0, i32 0
  %105 = load i32, i32* %x180, align 4, !tbaa !131
  %106 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp181 = icmp sgt i32 %105, %106
  br i1 %cmp181, label %if.then.182, label %if.end.185

if.then.182:                                      ; preds = %if.then.178
  %end183 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x184 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end183, i32 0, i32 0
  %107 = load i32, i32* %x184, align 4, !tbaa !131
  store i32 %107, i32* %xleft, align 4, !tbaa !5
  br label %if.end.185

if.end.185:                                       ; preds = %if.then.182, %if.then.178
  br label %if.end.194

if.else.186:                                      ; preds = %if.end.172
  %start187 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x188 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start187, i32 0, i32 0
  %108 = load i32, i32* %x188, align 4, !tbaa !128
  %109 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp189 = icmp sgt i32 %108, %109
  br i1 %cmp189, label %if.then.190, label %if.end.193

if.then.190:                                      ; preds = %if.else.186
  %start191 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x192 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start191, i32 0, i32 0
  %110 = load i32, i32* %x192, align 4, !tbaa !128
  store i32 %110, i32* %xleft, align 4, !tbaa !5
  br label %if.end.193

if.end.193:                                       ; preds = %if.then.190, %if.else.186
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.193, %if.end.185
  %start195 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x196 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start195, i32 0, i32 0
  %111 = load i32, i32* %x196, align 4, !tbaa !128
  %112 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp197 = icmp sgt i32 %111, %112
  br i1 %cmp197, label %if.then.198, label %if.end.226

if.then.198:                                      ; preds = %if.end.194
  %end199 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y200 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end199, i32 0, i32 1
  %113 = load i32, i32* %y200, align 4, !tbaa !132
  %start201 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y202 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start201, i32 0, i32 1
  %114 = load i32, i32* %y202, align 4, !tbaa !130
  %sub = sub nsw i32 %113, %114
  %conv = sext i32 %sub to i64
  %start203 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x204 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start203, i32 0, i32 0
  %115 = load i32, i32* %x204, align 4, !tbaa !128
  %116 = load i32, i32* %xright, align 4, !tbaa !5
  %sub205 = sub nsw i32 %115, %116
  %conv206 = sext i32 %sub205 to i64
  %mul = mul nsw i64 %conv, %conv206
  %start207 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x208 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start207, i32 0, i32 0
  %117 = load i32, i32* %x208, align 4, !tbaa !128
  %end209 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x210 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end209, i32 0, i32 0
  %118 = load i32, i32* %x210, align 4, !tbaa !131
  %sub211 = sub nsw i32 %117, %118
  %conv212 = sext i32 %sub211 to i64
  %div = sdiv i64 %mul, %conv212
  %conv213 = trunc i64 %div to i32
  %start214 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y215 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start214, i32 0, i32 1
  %119 = load i32, i32* %y215, align 4, !tbaa !130
  %add = add nsw i32 %119, %conv213
  store i32 %add, i32* %y215, align 4, !tbaa !130
  %start216 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y217 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start216, i32 0, i32 1
  %120 = load i32, i32* %y217, align 4, !tbaa !130
  %121 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp218 = icmp sgt i32 %120, %121
  br i1 %cmp218, label %if.then.220, label %if.end.223

if.then.220:                                      ; preds = %if.then.198
  %start221 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y222 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start221, i32 0, i32 1
  %122 = load i32, i32* %y222, align 4, !tbaa !130
  store i32 %122, i32* %ybot, align 4, !tbaa !5
  br label %if.end.223

if.end.223:                                       ; preds = %if.then.220, %if.then.198
  %123 = load i32, i32* %xright, align 4, !tbaa !5
  %start224 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x225 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start224, i32 0, i32 0
  store i32 %123, i32* %x225, align 4, !tbaa !128
  br label %if.end.226

if.end.226:                                       ; preds = %if.end.223, %if.end.194
  %start227 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x228 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start227, i32 0, i32 0
  %124 = load i32, i32* %x228, align 4, !tbaa !128
  %125 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp229 = icmp slt i32 %124, %125
  br i1 %cmp229, label %if.then.231, label %if.end.264

if.then.231:                                      ; preds = %if.end.226
  %end232 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y233 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end232, i32 0, i32 1
  %126 = load i32, i32* %y233, align 4, !tbaa !132
  %start234 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y235 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start234, i32 0, i32 1
  %127 = load i32, i32* %y235, align 4, !tbaa !130
  %sub236 = sub nsw i32 %126, %127
  %conv237 = sext i32 %sub236 to i64
  %128 = load i32, i32* %xleft, align 4, !tbaa !5
  %start238 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x239 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start238, i32 0, i32 0
  %129 = load i32, i32* %x239, align 4, !tbaa !128
  %sub240 = sub nsw i32 %128, %129
  %conv241 = sext i32 %sub240 to i64
  %mul242 = mul nsw i64 %conv237, %conv241
  %end243 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x244 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end243, i32 0, i32 0
  %130 = load i32, i32* %x244, align 4, !tbaa !131
  %start245 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x246 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start245, i32 0, i32 0
  %131 = load i32, i32* %x246, align 4, !tbaa !128
  %sub247 = sub nsw i32 %130, %131
  %conv248 = sext i32 %sub247 to i64
  %div249 = sdiv i64 %mul242, %conv248
  %conv250 = trunc i64 %div249 to i32
  %start251 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y252 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start251, i32 0, i32 1
  %132 = load i32, i32* %y252, align 4, !tbaa !130
  %add253 = add nsw i32 %132, %conv250
  store i32 %add253, i32* %y252, align 4, !tbaa !130
  %start254 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y255 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start254, i32 0, i32 1
  %133 = load i32, i32* %y255, align 4, !tbaa !130
  %134 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp256 = icmp sgt i32 %133, %134
  br i1 %cmp256, label %if.then.258, label %if.end.261

if.then.258:                                      ; preds = %if.then.231
  %start259 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y260 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start259, i32 0, i32 1
  %135 = load i32, i32* %y260, align 4, !tbaa !130
  store i32 %135, i32* %ybot, align 4, !tbaa !5
  br label %if.end.261

if.end.261:                                       ; preds = %if.then.258, %if.then.231
  %136 = load i32, i32* %xleft, align 4, !tbaa !5
  %start262 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x263 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start262, i32 0, i32 0
  store i32 %136, i32* %x263, align 4, !tbaa !128
  br label %if.end.264

if.end.264:                                       ; preds = %if.end.261, %if.end.226
  %end265 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x266 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end265, i32 0, i32 0
  %137 = load i32, i32* %x266, align 4, !tbaa !131
  %138 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp267 = icmp sgt i32 %137, %138
  br i1 %cmp267, label %if.then.269, label %if.end.302

if.then.269:                                      ; preds = %if.end.264
  %end270 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y271 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end270, i32 0, i32 1
  %139 = load i32, i32* %y271, align 4, !tbaa !132
  %start272 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y273 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start272, i32 0, i32 1
  %140 = load i32, i32* %y273, align 4, !tbaa !130
  %sub274 = sub nsw i32 %139, %140
  %conv275 = sext i32 %sub274 to i64
  %end276 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x277 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end276, i32 0, i32 0
  %141 = load i32, i32* %x277, align 4, !tbaa !131
  %142 = load i32, i32* %xright, align 4, !tbaa !5
  %sub278 = sub nsw i32 %141, %142
  %conv279 = sext i32 %sub278 to i64
  %mul280 = mul nsw i64 %conv275, %conv279
  %end281 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x282 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end281, i32 0, i32 0
  %143 = load i32, i32* %x282, align 4, !tbaa !131
  %start283 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x284 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start283, i32 0, i32 0
  %144 = load i32, i32* %x284, align 4, !tbaa !128
  %sub285 = sub nsw i32 %143, %144
  %conv286 = sext i32 %sub285 to i64
  %div287 = sdiv i64 %mul280, %conv286
  %conv288 = trunc i64 %div287 to i32
  %end289 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y290 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end289, i32 0, i32 1
  %145 = load i32, i32* %y290, align 4, !tbaa !132
  %sub291 = sub nsw i32 %145, %conv288
  store i32 %sub291, i32* %y290, align 4, !tbaa !132
  %end292 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y293 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end292, i32 0, i32 1
  %146 = load i32, i32* %y293, align 4, !tbaa !132
  %147 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp294 = icmp slt i32 %146, %147
  br i1 %cmp294, label %if.then.296, label %if.end.299

if.then.296:                                      ; preds = %if.then.269
  %end297 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y298 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end297, i32 0, i32 1
  %148 = load i32, i32* %y298, align 4, !tbaa !132
  store i32 %148, i32* %ytop, align 4, !tbaa !5
  br label %if.end.299

if.end.299:                                       ; preds = %if.then.296, %if.then.269
  %149 = load i32, i32* %xright, align 4, !tbaa !5
  %end300 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x301 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end300, i32 0, i32 0
  store i32 %149, i32* %x301, align 4, !tbaa !131
  br label %if.end.302

if.end.302:                                       ; preds = %if.end.299, %if.end.264
  %end303 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x304 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end303, i32 0, i32 0
  %150 = load i32, i32* %x304, align 4, !tbaa !131
  %151 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp305 = icmp slt i32 %150, %151
  br i1 %cmp305, label %if.then.307, label %if.end.340

if.then.307:                                      ; preds = %if.end.302
  %end308 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y309 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end308, i32 0, i32 1
  %152 = load i32, i32* %y309, align 4, !tbaa !132
  %start310 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y311 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start310, i32 0, i32 1
  %153 = load i32, i32* %y311, align 4, !tbaa !130
  %sub312 = sub nsw i32 %152, %153
  %conv313 = sext i32 %sub312 to i64
  %154 = load i32, i32* %xleft, align 4, !tbaa !5
  %end314 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x315 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end314, i32 0, i32 0
  %155 = load i32, i32* %x315, align 4, !tbaa !131
  %sub316 = sub nsw i32 %154, %155
  %conv317 = sext i32 %sub316 to i64
  %mul318 = mul nsw i64 %conv313, %conv317
  %start319 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x320 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start319, i32 0, i32 0
  %156 = load i32, i32* %x320, align 4, !tbaa !128
  %end321 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x322 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end321, i32 0, i32 0
  %157 = load i32, i32* %x322, align 4, !tbaa !131
  %sub323 = sub nsw i32 %156, %157
  %conv324 = sext i32 %sub323 to i64
  %div325 = sdiv i64 %mul318, %conv324
  %conv326 = trunc i64 %div325 to i32
  %end327 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y328 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end327, i32 0, i32 1
  %158 = load i32, i32* %y328, align 4, !tbaa !132
  %sub329 = sub nsw i32 %158, %conv326
  store i32 %sub329, i32* %y328, align 4, !tbaa !132
  %end330 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y331 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end330, i32 0, i32 1
  %159 = load i32, i32* %y331, align 4, !tbaa !132
  %160 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp332 = icmp slt i32 %159, %160
  br i1 %cmp332, label %if.then.334, label %if.end.337

if.then.334:                                      ; preds = %if.then.307
  %end335 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y336 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end335, i32 0, i32 1
  %161 = load i32, i32* %y336, align 4, !tbaa !132
  store i32 %161, i32* %ytop, align 4, !tbaa !5
  br label %if.end.337

if.end.337:                                       ; preds = %if.then.334, %if.then.307
  %162 = load i32, i32* %xleft, align 4, !tbaa !5
  %end338 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x339 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end338, i32 0, i32 0
  store i32 %162, i32* %x339, align 4, !tbaa !131
  br label %if.end.340

if.end.340:                                       ; preds = %if.end.337, %if.end.302
  %163 = load i32, i32* %ybot, align 4, !tbaa !5
  %164 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp341 = icmp sgt i32 %163, %164
  br i1 %cmp341, label %if.then.343, label %if.end.344

if.then.343:                                      ; preds = %if.end.340
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.344:                                       ; preds = %if.end.340
  %start345 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y346 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start345, i32 0, i32 1
  %165 = load i32, i32* %y346, align 4, !tbaa !130
  %166 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp347 = icmp slt i32 %165, %166
  br i1 %cmp347, label %if.then.349, label %if.end.392

if.then.349:                                      ; preds = %if.end.344
  %167 = bitcast i32* %round to i8*
  call void @llvm.lifetime.start(i64 4, i8* %167) #2
  %end350 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x351 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end350, i32 0, i32 0
  %168 = load i32, i32* %x351, align 4, !tbaa !131
  %start352 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x353 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start352, i32 0, i32 0
  %169 = load i32, i32* %x353, align 4, !tbaa !128
  %cmp354 = icmp slt i32 %168, %169
  br i1 %cmp354, label %cond.true.356, label %cond.false.363

cond.true.356:                                    ; preds = %if.then.349
  %end357 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y358 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end357, i32 0, i32 1
  %170 = load i32, i32* %y358, align 4, !tbaa !132
  %start359 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y360 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start359, i32 0, i32 1
  %171 = load i32, i32* %y360, align 4, !tbaa !130
  %sub361 = sub nsw i32 %170, %171
  %sub362 = sub nsw i32 %sub361, 1
  br label %cond.end.364

cond.false.363:                                   ; preds = %if.then.349
  br label %cond.end.364

cond.end.364:                                     ; preds = %cond.false.363, %cond.true.356
  %cond365 = phi i32 [ %sub362, %cond.true.356 ], [ 0, %cond.false.363 ]
  store i32 %cond365, i32* %round, align 4, !tbaa !5
  %172 = load i32, i32* %ybot, align 4, !tbaa !5
  %start366 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y367 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start366, i32 0, i32 1
  %173 = load i32, i32* %y367, align 4, !tbaa !130
  %sub368 = sub nsw i32 %172, %173
  %conv369 = sext i32 %sub368 to i64
  %end370 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x371 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end370, i32 0, i32 0
  %174 = load i32, i32* %x371, align 4, !tbaa !131
  %start372 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x373 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start372, i32 0, i32 0
  %175 = load i32, i32* %x373, align 4, !tbaa !128
  %sub374 = sub nsw i32 %174, %175
  %conv375 = sext i32 %sub374 to i64
  %mul376 = mul nsw i64 %conv369, %conv375
  %176 = load i32, i32* %round, align 4, !tbaa !5
  %conv377 = sext i32 %176 to i64
  %sub378 = sub nsw i64 %mul376, %conv377
  %end379 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y380 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end379, i32 0, i32 1
  %177 = load i32, i32* %y380, align 4, !tbaa !132
  %start381 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y382 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start381, i32 0, i32 1
  %178 = load i32, i32* %y382, align 4, !tbaa !130
  %sub383 = sub nsw i32 %177, %178
  %conv384 = sext i32 %sub383 to i64
  %div385 = sdiv i64 %sub378, %conv384
  %conv386 = trunc i64 %div385 to i32
  %start387 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x388 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start387, i32 0, i32 0
  %179 = load i32, i32* %x388, align 4, !tbaa !128
  %add389 = add nsw i32 %179, %conv386
  store i32 %add389, i32* %x388, align 4, !tbaa !128
  %180 = load i32, i32* %ybot, align 4, !tbaa !5
  %start390 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y391 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start390, i32 0, i32 1
  store i32 %180, i32* %y391, align 4, !tbaa !130
  %181 = bitcast i32* %round to i8*
  call void @llvm.lifetime.end(i64 4, i8* %181) #2
  br label %if.end.392

if.end.392:                                       ; preds = %cond.end.364, %if.end.344
  %end393 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y394 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end393, i32 0, i32 1
  %182 = load i32, i32* %y394, align 4, !tbaa !132
  %183 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp395 = icmp sgt i32 %182, %183
  br i1 %cmp395, label %if.then.397, label %if.end.441

if.then.397:                                      ; preds = %if.end.392
  %184 = bitcast i32* %round398 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %184) #2
  %end399 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x400 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end399, i32 0, i32 0
  %185 = load i32, i32* %x400, align 4, !tbaa !131
  %start401 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x402 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start401, i32 0, i32 0
  %186 = load i32, i32* %x402, align 4, !tbaa !128
  %cmp403 = icmp sgt i32 %185, %186
  br i1 %cmp403, label %cond.true.405, label %cond.false.412

cond.true.405:                                    ; preds = %if.then.397
  %end406 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y407 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end406, i32 0, i32 1
  %187 = load i32, i32* %y407, align 4, !tbaa !132
  %start408 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y409 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start408, i32 0, i32 1
  %188 = load i32, i32* %y409, align 4, !tbaa !130
  %sub410 = sub nsw i32 %187, %188
  %sub411 = sub nsw i32 %sub410, 1
  br label %cond.end.413

cond.false.412:                                   ; preds = %if.then.397
  br label %cond.end.413

cond.end.413:                                     ; preds = %cond.false.412, %cond.true.405
  %cond414 = phi i32 [ %sub411, %cond.true.405 ], [ 0, %cond.false.412 ]
  store i32 %cond414, i32* %round398, align 4, !tbaa !5
  %end415 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y416 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end415, i32 0, i32 1
  %189 = load i32, i32* %y416, align 4, !tbaa !132
  %190 = load i32, i32* %ytop, align 4, !tbaa !5
  %sub417 = sub nsw i32 %189, %190
  %conv418 = sext i32 %sub417 to i64
  %start419 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x420 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start419, i32 0, i32 0
  %191 = load i32, i32* %x420, align 4, !tbaa !128
  %end421 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x422 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end421, i32 0, i32 0
  %192 = load i32, i32* %x422, align 4, !tbaa !131
  %sub423 = sub nsw i32 %191, %192
  %conv424 = sext i32 %sub423 to i64
  %mul425 = mul nsw i64 %conv418, %conv424
  %193 = load i32, i32* %round398, align 4, !tbaa !5
  %conv426 = sext i32 %193 to i64
  %sub427 = sub nsw i64 %mul425, %conv426
  %end428 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y429 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end428, i32 0, i32 1
  %194 = load i32, i32* %y429, align 4, !tbaa !132
  %start430 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y431 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start430, i32 0, i32 1
  %195 = load i32, i32* %y431, align 4, !tbaa !130
  %sub432 = sub nsw i32 %194, %195
  %conv433 = sext i32 %sub432 to i64
  %div434 = sdiv i64 %sub427, %conv433
  %conv435 = trunc i64 %div434 to i32
  %end436 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x437 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end436, i32 0, i32 0
  %196 = load i32, i32* %x437, align 4, !tbaa !131
  %add438 = add nsw i32 %196, %conv435
  store i32 %add438, i32* %x437, align 4, !tbaa !131
  %197 = load i32, i32* %ytop, align 4, !tbaa !5
  %end439 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y440 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end439, i32 0, i32 1
  store i32 %197, i32* %y440, align 4, !tbaa !132
  %198 = bitcast i32* %round398 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %198) #2
  br label %if.end.441

if.end.441:                                       ; preds = %cond.end.413, %if.end.392
  %start442 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x443 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start442, i32 0, i32 0
  %199 = load i32, i32* %x443, align 4, !tbaa !128
  %200 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp444 = icmp slt i32 %199, %200
  br i1 %cmp444, label %land.lhs.true, label %if.end.459

land.lhs.true:                                    ; preds = %if.end.441
  %end446 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x447 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end446, i32 0, i32 0
  %201 = load i32, i32* %x447, align 4, !tbaa !131
  %202 = load i32, i32* %xleft, align 4, !tbaa !5
  %cmp448 = icmp slt i32 %201, %202
  br i1 %cmp448, label %if.then.450, label %if.end.459

if.then.450:                                      ; preds = %land.lhs.true
  %203 = load i32, i32* %xleft, align 4, !tbaa !5
  %start451 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x452 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start451, i32 0, i32 0
  store i32 %203, i32* %x452, align 4, !tbaa !128
  %204 = load i32, i32* %xleft, align 4, !tbaa !5
  %end453 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x454 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end453, i32 0, i32 0
  store i32 %204, i32* %x454, align 4, !tbaa !131
  %205 = load i32, i32* %ybot, align 4, !tbaa !5
  %start455 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y456 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start455, i32 0, i32 1
  store i32 %205, i32* %y456, align 4, !tbaa !130
  %206 = load i32, i32* %ytop, align 4, !tbaa !5
  %end457 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y458 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end457, i32 0, i32 1
  store i32 %206, i32* %y458, align 4, !tbaa !132
  br label %if.end.459

if.end.459:                                       ; preds = %if.then.450, %land.lhs.true, %if.end.441
  %start460 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y461 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start460, i32 0, i32 1
  %207 = load i32, i32* %y461, align 4, !tbaa !130
  %208 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp462 = icmp slt i32 %207, %208
  br i1 %cmp462, label %if.then.464, label %if.end.508

if.then.464:                                      ; preds = %if.end.459
  %209 = bitcast i32* %round465 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %209) #2
  %end466 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x467 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end466, i32 0, i32 0
  %210 = load i32, i32* %x467, align 4, !tbaa !131
  %start468 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x469 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start468, i32 0, i32 0
  %211 = load i32, i32* %x469, align 4, !tbaa !128
  %cmp470 = icmp sgt i32 %210, %211
  br i1 %cmp470, label %cond.true.472, label %cond.false.479

cond.true.472:                                    ; preds = %if.then.464
  %end473 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y474 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end473, i32 0, i32 1
  %212 = load i32, i32* %y474, align 4, !tbaa !132
  %start475 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y476 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start475, i32 0, i32 1
  %213 = load i32, i32* %y476, align 4, !tbaa !130
  %sub477 = sub nsw i32 %212, %213
  %sub478 = sub nsw i32 %sub477, 1
  br label %cond.end.480

cond.false.479:                                   ; preds = %if.then.464
  br label %cond.end.480

cond.end.480:                                     ; preds = %cond.false.479, %cond.true.472
  %cond481 = phi i32 [ %sub478, %cond.true.472 ], [ 0, %cond.false.479 ]
  store i32 %cond481, i32* %round465, align 4, !tbaa !5
  %214 = load i32, i32* %ybot, align 4, !tbaa !5
  %start482 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y483 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start482, i32 0, i32 1
  %215 = load i32, i32* %y483, align 4, !tbaa !130
  %sub484 = sub nsw i32 %214, %215
  %conv485 = sext i32 %sub484 to i64
  %end486 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x487 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end486, i32 0, i32 0
  %216 = load i32, i32* %x487, align 4, !tbaa !131
  %start488 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x489 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start488, i32 0, i32 0
  %217 = load i32, i32* %x489, align 4, !tbaa !128
  %sub490 = sub nsw i32 %216, %217
  %conv491 = sext i32 %sub490 to i64
  %mul492 = mul nsw i64 %conv485, %conv491
  %218 = load i32, i32* %round465, align 4, !tbaa !5
  %conv493 = sext i32 %218 to i64
  %add494 = add nsw i64 %mul492, %conv493
  %end495 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y496 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end495, i32 0, i32 1
  %219 = load i32, i32* %y496, align 4, !tbaa !132
  %start497 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y498 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start497, i32 0, i32 1
  %220 = load i32, i32* %y498, align 4, !tbaa !130
  %sub499 = sub nsw i32 %219, %220
  %conv500 = sext i32 %sub499 to i64
  %div501 = sdiv i64 %add494, %conv500
  %conv502 = trunc i64 %div501 to i32
  %start503 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x504 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start503, i32 0, i32 0
  %221 = load i32, i32* %x504, align 4, !tbaa !128
  %add505 = add nsw i32 %221, %conv502
  store i32 %add505, i32* %x504, align 4, !tbaa !128
  %222 = load i32, i32* %ybot, align 4, !tbaa !5
  %start506 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y507 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start506, i32 0, i32 1
  store i32 %222, i32* %y507, align 4, !tbaa !130
  %223 = bitcast i32* %round465 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %223) #2
  br label %if.end.508

if.end.508:                                       ; preds = %cond.end.480, %if.end.459
  %end509 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y510 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end509, i32 0, i32 1
  %224 = load i32, i32* %y510, align 4, !tbaa !132
  %225 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp511 = icmp sgt i32 %224, %225
  br i1 %cmp511, label %if.then.513, label %if.end.557

if.then.513:                                      ; preds = %if.end.508
  %226 = bitcast i32* %round514 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %226) #2
  %end515 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x516 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end515, i32 0, i32 0
  %227 = load i32, i32* %x516, align 4, !tbaa !131
  %start517 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x518 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start517, i32 0, i32 0
  %228 = load i32, i32* %x518, align 4, !tbaa !128
  %cmp519 = icmp slt i32 %227, %228
  br i1 %cmp519, label %cond.true.521, label %cond.false.528

cond.true.521:                                    ; preds = %if.then.513
  %end522 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y523 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end522, i32 0, i32 1
  %229 = load i32, i32* %y523, align 4, !tbaa !132
  %start524 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y525 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start524, i32 0, i32 1
  %230 = load i32, i32* %y525, align 4, !tbaa !130
  %sub526 = sub nsw i32 %229, %230
  %sub527 = sub nsw i32 %sub526, 1
  br label %cond.end.529

cond.false.528:                                   ; preds = %if.then.513
  br label %cond.end.529

cond.end.529:                                     ; preds = %cond.false.528, %cond.true.521
  %cond530 = phi i32 [ %sub527, %cond.true.521 ], [ 0, %cond.false.528 ]
  store i32 %cond530, i32* %round514, align 4, !tbaa !5
  %end531 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y532 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end531, i32 0, i32 1
  %231 = load i32, i32* %y532, align 4, !tbaa !132
  %232 = load i32, i32* %ytop, align 4, !tbaa !5
  %sub533 = sub nsw i32 %231, %232
  %conv534 = sext i32 %sub533 to i64
  %start535 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x536 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start535, i32 0, i32 0
  %233 = load i32, i32* %x536, align 4, !tbaa !128
  %end537 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x538 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end537, i32 0, i32 0
  %234 = load i32, i32* %x538, align 4, !tbaa !131
  %sub539 = sub nsw i32 %233, %234
  %conv540 = sext i32 %sub539 to i64
  %mul541 = mul nsw i64 %conv534, %conv540
  %235 = load i32, i32* %round514, align 4, !tbaa !5
  %conv542 = sext i32 %235 to i64
  %add543 = add nsw i64 %mul541, %conv542
  %end544 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y545 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end544, i32 0, i32 1
  %236 = load i32, i32* %y545, align 4, !tbaa !132
  %start546 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y547 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start546, i32 0, i32 1
  %237 = load i32, i32* %y547, align 4, !tbaa !130
  %sub548 = sub nsw i32 %236, %237
  %conv549 = sext i32 %sub548 to i64
  %div550 = sdiv i64 %add543, %conv549
  %conv551 = trunc i64 %div550 to i32
  %end552 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x553 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end552, i32 0, i32 0
  %238 = load i32, i32* %x553, align 4, !tbaa !131
  %add554 = add nsw i32 %238, %conv551
  store i32 %add554, i32* %x553, align 4, !tbaa !131
  %239 = load i32, i32* %ytop, align 4, !tbaa !5
  %end555 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y556 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end555, i32 0, i32 1
  store i32 %239, i32* %y556, align 4, !tbaa !132
  %240 = bitcast i32* %round514 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %240) #2
  br label %if.end.557

if.end.557:                                       ; preds = %cond.end.529, %if.end.508
  %start558 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x559 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start558, i32 0, i32 0
  %241 = load i32, i32* %x559, align 4, !tbaa !128
  %242 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp560 = icmp sgt i32 %241, %242
  br i1 %cmp560, label %land.lhs.true.562, label %if.end.576

land.lhs.true.562:                                ; preds = %if.end.557
  %end563 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x564 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end563, i32 0, i32 0
  %243 = load i32, i32* %x564, align 4, !tbaa !131
  %244 = load i32, i32* %xright, align 4, !tbaa !5
  %cmp565 = icmp sgt i32 %243, %244
  br i1 %cmp565, label %if.then.567, label %if.end.576

if.then.567:                                      ; preds = %land.lhs.true.562
  %245 = load i32, i32* %xright, align 4, !tbaa !5
  %start568 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x569 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start568, i32 0, i32 0
  store i32 %245, i32* %x569, align 4, !tbaa !128
  %246 = load i32, i32* %xright, align 4, !tbaa !5
  %end570 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x571 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end570, i32 0, i32 0
  store i32 %246, i32* %x571, align 4, !tbaa !131
  %247 = load i32, i32* %ybot, align 4, !tbaa !5
  %start572 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y573 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start572, i32 0, i32 1
  store i32 %247, i32* %y573, align 4, !tbaa !130
  %248 = load i32, i32* %ytop, align 4, !tbaa !5
  %end574 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y575 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end574, i32 0, i32 1
  store i32 %248, i32* %y575, align 4, !tbaa !132
  br label %if.end.576

if.end.576:                                       ; preds = %if.then.567, %land.lhs.true.562, %if.end.557
  %start577 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x578 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start577, i32 0, i32 0
  %249 = load i32, i32* %x578, align 4, !tbaa !128
  %start579 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x580 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start579, i32 0, i32 0
  %250 = load i32, i32* %x580, align 4, !tbaa !128
  %cmp581 = icmp sgt i32 %249, %250
  br i1 %cmp581, label %if.then.583, label %if.end.653

if.then.583:                                      ; preds = %if.end.576
  %start584 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x585 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start584, i32 0, i32 0
  %251 = load i32, i32* %x585, align 4, !tbaa !128
  %end586 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x587 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end586, i32 0, i32 0
  %252 = load i32, i32* %x587, align 4, !tbaa !131
  %cmp588 = icmp eq i32 %251, %252
  br i1 %cmp588, label %if.then.590, label %if.else.617

if.then.590:                                      ; preds = %if.then.583
  %end591 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y592 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end591, i32 0, i32 1
  %253 = load i32, i32* %y592, align 4, !tbaa !132
  %start593 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y594 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start593, i32 0, i32 1
  %254 = load i32, i32* %y594, align 4, !tbaa !130
  %sub595 = sub nsw i32 %253, %254
  %conv596 = sext i32 %sub595 to i64
  %start597 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x598 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start597, i32 0, i32 0
  %255 = load i32, i32* %x598, align 4, !tbaa !128
  %start599 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x600 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start599, i32 0, i32 0
  %256 = load i32, i32* %x600, align 4, !tbaa !128
  %sub601 = sub nsw i32 %255, %256
  %conv602 = sext i32 %sub601 to i64
  %mul603 = mul nsw i64 %conv596, %conv602
  %end604 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x605 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end604, i32 0, i32 0
  %257 = load i32, i32* %x605, align 4, !tbaa !131
  %start606 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x607 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start606, i32 0, i32 0
  %258 = load i32, i32* %x607, align 4, !tbaa !128
  %sub608 = sub nsw i32 %257, %258
  %conv609 = sext i32 %sub608 to i64
  %div610 = sdiv i64 %mul603, %conv609
  %conv611 = trunc i64 %div610 to i32
  %259 = load i32, i32* %ybot, align 4, !tbaa !5
  %add612 = add nsw i32 %259, %conv611
  store i32 %add612, i32* %ybot, align 4, !tbaa !5
  %start613 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x614 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start613, i32 0, i32 0
  %260 = load i32, i32* %x614, align 4, !tbaa !128
  %start615 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x616 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start615, i32 0, i32 0
  store i32 %260, i32* %x616, align 4, !tbaa !128
  br label %if.end.644

if.else.617:                                      ; preds = %if.then.583
  %end618 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y619 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end618, i32 0, i32 1
  %261 = load i32, i32* %y619, align 4, !tbaa !132
  %start620 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y621 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start620, i32 0, i32 1
  %262 = load i32, i32* %y621, align 4, !tbaa !130
  %sub622 = sub nsw i32 %261, %262
  %conv623 = sext i32 %sub622 to i64
  %start624 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x625 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start624, i32 0, i32 0
  %263 = load i32, i32* %x625, align 4, !tbaa !128
  %start626 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x627 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start626, i32 0, i32 0
  %264 = load i32, i32* %x627, align 4, !tbaa !128
  %sub628 = sub nsw i32 %263, %264
  %conv629 = sext i32 %sub628 to i64
  %mul630 = mul nsw i64 %conv623, %conv629
  %start631 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x632 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start631, i32 0, i32 0
  %265 = load i32, i32* %x632, align 4, !tbaa !128
  %end633 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x634 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end633, i32 0, i32 0
  %266 = load i32, i32* %x634, align 4, !tbaa !131
  %sub635 = sub nsw i32 %265, %266
  %conv636 = sext i32 %sub635 to i64
  %div637 = sdiv i64 %mul630, %conv636
  %conv638 = trunc i64 %div637 to i32
  %267 = load i32, i32* %ybot, align 4, !tbaa !5
  %add639 = add nsw i32 %267, %conv638
  store i32 %add639, i32* %ybot, align 4, !tbaa !5
  %start640 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x641 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start640, i32 0, i32 0
  %268 = load i32, i32* %x641, align 4, !tbaa !128
  %start642 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x643 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start642, i32 0, i32 0
  store i32 %268, i32* %x643, align 4, !tbaa !128
  br label %if.end.644

if.end.644:                                       ; preds = %if.else.617, %if.then.590
  %269 = load i32, i32* %ybot, align 4, !tbaa !5
  %270 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp645 = icmp sgt i32 %269, %270
  br i1 %cmp645, label %if.then.647, label %if.end.648

if.then.647:                                      ; preds = %if.end.644
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.648:                                       ; preds = %if.end.644
  %271 = load i32, i32* %ybot, align 4, !tbaa !5
  %start649 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y650 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start649, i32 0, i32 1
  store i32 %271, i32* %y650, align 4, !tbaa !130
  %272 = load i32, i32* %ybot, align 4, !tbaa !5
  %start651 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y652 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start651, i32 0, i32 1
  store i32 %272, i32* %y652, align 4, !tbaa !130
  br label %if.end.653

if.end.653:                                       ; preds = %if.end.648, %if.end.576
  %end654 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x655 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end654, i32 0, i32 0
  %273 = load i32, i32* %x655, align 4, !tbaa !131
  %end656 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x657 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end656, i32 0, i32 0
  %274 = load i32, i32* %x657, align 4, !tbaa !131
  %cmp658 = icmp sgt i32 %273, %274
  br i1 %cmp658, label %if.then.660, label %if.end.730

if.then.660:                                      ; preds = %if.end.653
  %start661 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x662 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start661, i32 0, i32 0
  %275 = load i32, i32* %x662, align 4, !tbaa !128
  %end663 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x664 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end663, i32 0, i32 0
  %276 = load i32, i32* %x664, align 4, !tbaa !131
  %cmp665 = icmp eq i32 %275, %276
  br i1 %cmp665, label %if.then.667, label %if.else.694

if.then.667:                                      ; preds = %if.then.660
  %end668 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y669 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end668, i32 0, i32 1
  %277 = load i32, i32* %y669, align 4, !tbaa !132
  %start670 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y671 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start670, i32 0, i32 1
  %278 = load i32, i32* %y671, align 4, !tbaa !130
  %sub672 = sub nsw i32 %277, %278
  %conv673 = sext i32 %sub672 to i64
  %end674 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x675 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end674, i32 0, i32 0
  %279 = load i32, i32* %x675, align 4, !tbaa !131
  %end676 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x677 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end676, i32 0, i32 0
  %280 = load i32, i32* %x677, align 4, !tbaa !131
  %sub678 = sub nsw i32 %279, %280
  %conv679 = sext i32 %sub678 to i64
  %mul680 = mul nsw i64 %conv673, %conv679
  %start681 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x682 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start681, i32 0, i32 0
  %281 = load i32, i32* %x682, align 4, !tbaa !128
  %end683 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x684 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end683, i32 0, i32 0
  %282 = load i32, i32* %x684, align 4, !tbaa !131
  %sub685 = sub nsw i32 %281, %282
  %conv686 = sext i32 %sub685 to i64
  %div687 = sdiv i64 %mul680, %conv686
  %conv688 = trunc i64 %div687 to i32
  %283 = load i32, i32* %ytop, align 4, !tbaa !5
  %sub689 = sub nsw i32 %283, %conv688
  store i32 %sub689, i32* %ytop, align 4, !tbaa !5
  %end690 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x691 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end690, i32 0, i32 0
  %284 = load i32, i32* %x691, align 4, !tbaa !131
  %end692 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x693 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end692, i32 0, i32 0
  store i32 %284, i32* %x693, align 4, !tbaa !131
  br label %if.end.721

if.else.694:                                      ; preds = %if.then.660
  %end695 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y696 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end695, i32 0, i32 1
  %285 = load i32, i32* %y696, align 4, !tbaa !132
  %start697 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y698 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start697, i32 0, i32 1
  %286 = load i32, i32* %y698, align 4, !tbaa !130
  %sub699 = sub nsw i32 %285, %286
  %conv700 = sext i32 %sub699 to i64
  %end701 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x702 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end701, i32 0, i32 0
  %287 = load i32, i32* %x702, align 4, !tbaa !131
  %end703 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x704 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end703, i32 0, i32 0
  %288 = load i32, i32* %x704, align 4, !tbaa !131
  %sub705 = sub nsw i32 %287, %288
  %conv706 = sext i32 %sub705 to i64
  %mul707 = mul nsw i64 %conv700, %conv706
  %end708 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x709 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end708, i32 0, i32 0
  %289 = load i32, i32* %x709, align 4, !tbaa !131
  %start710 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x711 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start710, i32 0, i32 0
  %290 = load i32, i32* %x711, align 4, !tbaa !128
  %sub712 = sub nsw i32 %289, %290
  %conv713 = sext i32 %sub712 to i64
  %div714 = sdiv i64 %mul707, %conv713
  %conv715 = trunc i64 %div714 to i32
  %291 = load i32, i32* %ytop, align 4, !tbaa !5
  %sub716 = sub nsw i32 %291, %conv715
  store i32 %sub716, i32* %ytop, align 4, !tbaa !5
  %end717 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x718 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end717, i32 0, i32 0
  %292 = load i32, i32* %x718, align 4, !tbaa !131
  %end719 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x720 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end719, i32 0, i32 0
  store i32 %292, i32* %x720, align 4, !tbaa !131
  br label %if.end.721

if.end.721:                                       ; preds = %if.else.694, %if.then.667
  %293 = load i32, i32* %ybot, align 4, !tbaa !5
  %294 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp722 = icmp sgt i32 %293, %294
  br i1 %cmp722, label %if.then.724, label %if.end.725

if.then.724:                                      ; preds = %if.end.721
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.725:                                       ; preds = %if.end.721
  %295 = load i32, i32* %ytop, align 4, !tbaa !5
  %end726 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y727 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end726, i32 0, i32 1
  store i32 %295, i32* %y727, align 4, !tbaa !132
  %296 = load i32, i32* %ytop, align 4, !tbaa !5
  %end728 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y729 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end728, i32 0, i32 1
  store i32 %296, i32* %y729, align 4, !tbaa !132
  br label %if.end.730

if.end.730:                                       ; preds = %if.end.725, %if.end.653
  %297 = load i32, i32* %xleft, align 4, !tbaa !5
  %start731 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %lenew, i32 0, i32 0
  %x732 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start731, i32 0, i32 0
  store i32 %297, i32* %x732, align 4, !tbaa !128
  %298 = load i32, i32* %ybot, align 4, !tbaa !5
  %start733 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %lenew, i32 0, i32 0
  %y734 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start733, i32 0, i32 1
  store i32 %298, i32* %y734, align 4, !tbaa !130
  %299 = load i32, i32* %xleft, align 4, !tbaa !5
  %end735 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %lenew, i32 0, i32 1
  %x736 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end735, i32 0, i32 0
  store i32 %299, i32* %x736, align 4, !tbaa !131
  %300 = load i32, i32* %ytop, align 4, !tbaa !5
  %end737 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %lenew, i32 0, i32 1
  %y738 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end737, i32 0, i32 1
  store i32 %300, i32* %y738, align 4, !tbaa !132
  %301 = load i32, i32* %xright, align 4, !tbaa !5
  %start739 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %renew, i32 0, i32 0
  %x740 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start739, i32 0, i32 0
  store i32 %301, i32* %x740, align 4, !tbaa !128
  %302 = load i32, i32* %ybot, align 4, !tbaa !5
  %start741 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %renew, i32 0, i32 0
  %y742 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start741, i32 0, i32 1
  store i32 %302, i32* %y742, align 4, !tbaa !130
  %303 = load i32, i32* %xright, align 4, !tbaa !5
  %end743 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %renew, i32 0, i32 1
  %x744 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end743, i32 0, i32 0
  store i32 %303, i32* %x744, align 4, !tbaa !131
  %304 = load i32, i32* %ytop, align 4, !tbaa !5
  %end745 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %renew, i32 0, i32 1
  %y746 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end745, i32 0, i32 1
  store i32 %304, i32* %y746, align 4, !tbaa !132
  %305 = load i32, i32* %ybot, align 4, !tbaa !5
  store i32 %305, i32* %ybl, align 4, !tbaa !5
  %start747 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x748 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start747, i32 0, i32 0
  %306 = load i32, i32* %x748, align 4, !tbaa !128
  %end749 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x750 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end749, i32 0, i32 0
  %307 = load i32, i32* %x750, align 4, !tbaa !131
  %cmp751 = icmp sgt i32 %306, %307
  br i1 %cmp751, label %if.then.753, label %if.end.778

if.then.753:                                      ; preds = %if.end.730
  %start754 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x755 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start754, i32 0, i32 0
  %308 = load i32, i32* %x755, align 4, !tbaa !128
  %309 = load i32, i32* %xleft, align 4, !tbaa !5
  %sub756 = sub nsw i32 %308, %309
  %conv757 = sext i32 %sub756 to i64
  %end758 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y759 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end758, i32 0, i32 1
  %310 = load i32, i32* %y759, align 4, !tbaa !132
  %start760 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y761 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start760, i32 0, i32 1
  %311 = load i32, i32* %y761, align 4, !tbaa !130
  %sub762 = sub nsw i32 %310, %311
  %conv763 = sext i32 %sub762 to i64
  %mul764 = mul nsw i64 %conv757, %conv763
  %start765 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x766 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start765, i32 0, i32 0
  %312 = load i32, i32* %x766, align 4, !tbaa !128
  %end767 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x768 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end767, i32 0, i32 0
  %313 = load i32, i32* %x768, align 4, !tbaa !131
  %sub769 = sub nsw i32 %312, %313
  %conv770 = sext i32 %sub769 to i64
  %div771 = sdiv i64 %mul764, %conv770
  %conv772 = trunc i64 %div771 to i32
  %314 = load i32, i32* %ybl, align 4, !tbaa !5
  %add773 = add nsw i32 %314, %conv772
  store i32 %add773, i32* %ybl, align 4, !tbaa !5
  %315 = load i32, i32* %ybl, align 4, !tbaa !5
  %316 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp774 = icmp sgt i32 %315, %316
  br i1 %cmp774, label %if.then.776, label %if.end.777

if.then.776:                                      ; preds = %if.then.753
  %317 = load i32, i32* %ytop, align 4, !tbaa !5
  store i32 %317, i32* %ybl, align 4, !tbaa !5
  br label %if.end.777

if.end.777:                                       ; preds = %if.then.776, %if.then.753
  br label %if.end.778

if.end.778:                                       ; preds = %if.end.777, %if.end.730
  %318 = load i32, i32* %ybot, align 4, !tbaa !5
  store i32 %318, i32* %ybr, align 4, !tbaa !5
  %start779 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x780 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start779, i32 0, i32 0
  %319 = load i32, i32* %x780, align 4, !tbaa !128
  %end781 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x782 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end781, i32 0, i32 0
  %320 = load i32, i32* %x782, align 4, !tbaa !131
  %cmp783 = icmp slt i32 %319, %320
  br i1 %cmp783, label %if.then.785, label %if.end.810

if.then.785:                                      ; preds = %if.end.778
  %321 = load i32, i32* %xright, align 4, !tbaa !5
  %start786 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x787 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start786, i32 0, i32 0
  %322 = load i32, i32* %x787, align 4, !tbaa !128
  %sub788 = sub nsw i32 %321, %322
  %conv789 = sext i32 %sub788 to i64
  %end790 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y791 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end790, i32 0, i32 1
  %323 = load i32, i32* %y791, align 4, !tbaa !132
  %start792 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y793 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start792, i32 0, i32 1
  %324 = load i32, i32* %y793, align 4, !tbaa !130
  %sub794 = sub nsw i32 %323, %324
  %conv795 = sext i32 %sub794 to i64
  %mul796 = mul nsw i64 %conv789, %conv795
  %end797 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x798 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end797, i32 0, i32 0
  %325 = load i32, i32* %x798, align 4, !tbaa !131
  %start799 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x800 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start799, i32 0, i32 0
  %326 = load i32, i32* %x800, align 4, !tbaa !128
  %sub801 = sub nsw i32 %325, %326
  %conv802 = sext i32 %sub801 to i64
  %div803 = sdiv i64 %mul796, %conv802
  %conv804 = trunc i64 %div803 to i32
  %327 = load i32, i32* %ybr, align 4, !tbaa !5
  %add805 = add nsw i32 %327, %conv804
  store i32 %add805, i32* %ybr, align 4, !tbaa !5
  %328 = load i32, i32* %ybr, align 4, !tbaa !5
  %329 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp806 = icmp sgt i32 %328, %329
  br i1 %cmp806, label %if.then.808, label %if.end.809

if.then.808:                                      ; preds = %if.then.785
  %330 = load i32, i32* %ytop, align 4, !tbaa !5
  store i32 %330, i32* %ybr, align 4, !tbaa !5
  br label %if.end.809

if.end.809:                                       ; preds = %if.then.808, %if.then.785
  br label %if.end.810

if.end.810:                                       ; preds = %if.end.809, %if.end.778
  %331 = load i32, i32* %ytop, align 4, !tbaa !5
  store i32 %331, i32* %ytl, align 4, !tbaa !5
  %end811 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x812 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end811, i32 0, i32 0
  %332 = load i32, i32* %x812, align 4, !tbaa !131
  %start813 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x814 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start813, i32 0, i32 0
  %333 = load i32, i32* %x814, align 4, !tbaa !128
  %cmp815 = icmp sgt i32 %332, %333
  br i1 %cmp815, label %if.then.817, label %if.end.842

if.then.817:                                      ; preds = %if.end.810
  %end818 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x819 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end818, i32 0, i32 0
  %334 = load i32, i32* %x819, align 4, !tbaa !131
  %335 = load i32, i32* %xleft, align 4, !tbaa !5
  %sub820 = sub nsw i32 %334, %335
  %conv821 = sext i32 %sub820 to i64
  %end822 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y823 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end822, i32 0, i32 1
  %336 = load i32, i32* %y823, align 4, !tbaa !132
  %start824 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y825 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start824, i32 0, i32 1
  %337 = load i32, i32* %y825, align 4, !tbaa !130
  %sub826 = sub nsw i32 %336, %337
  %conv827 = sext i32 %sub826 to i64
  %mul828 = mul nsw i64 %conv821, %conv827
  %end829 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x830 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end829, i32 0, i32 0
  %338 = load i32, i32* %x830, align 4, !tbaa !131
  %start831 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x832 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start831, i32 0, i32 0
  %339 = load i32, i32* %x832, align 4, !tbaa !128
  %sub833 = sub nsw i32 %338, %339
  %conv834 = sext i32 %sub833 to i64
  %div835 = sdiv i64 %mul828, %conv834
  %conv836 = trunc i64 %div835 to i32
  %340 = load i32, i32* %ytl, align 4, !tbaa !5
  %sub837 = sub nsw i32 %340, %conv836
  store i32 %sub837, i32* %ytl, align 4, !tbaa !5
  %341 = load i32, i32* %ytl, align 4, !tbaa !5
  %342 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp838 = icmp slt i32 %341, %342
  br i1 %cmp838, label %if.then.840, label %if.end.841

if.then.840:                                      ; preds = %if.then.817
  %343 = load i32, i32* %ybot, align 4, !tbaa !5
  store i32 %343, i32* %ytl, align 4, !tbaa !5
  br label %if.end.841

if.end.841:                                       ; preds = %if.then.840, %if.then.817
  br label %if.end.842

if.end.842:                                       ; preds = %if.end.841, %if.end.810
  %344 = load i32, i32* %ytop, align 4, !tbaa !5
  store i32 %344, i32* %ytr, align 4, !tbaa !5
  %end843 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x844 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end843, i32 0, i32 0
  %345 = load i32, i32* %x844, align 4, !tbaa !131
  %start845 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x846 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start845, i32 0, i32 0
  %346 = load i32, i32* %x846, align 4, !tbaa !128
  %cmp847 = icmp slt i32 %345, %346
  br i1 %cmp847, label %if.then.849, label %if.end.874

if.then.849:                                      ; preds = %if.end.842
  %347 = load i32, i32* %xright, align 4, !tbaa !5
  %end850 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x851 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end850, i32 0, i32 0
  %348 = load i32, i32* %x851, align 4, !tbaa !131
  %sub852 = sub nsw i32 %347, %348
  %conv853 = sext i32 %sub852 to i64
  %end854 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y855 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end854, i32 0, i32 1
  %349 = load i32, i32* %y855, align 4, !tbaa !132
  %start856 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y857 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start856, i32 0, i32 1
  %350 = load i32, i32* %y857, align 4, !tbaa !130
  %sub858 = sub nsw i32 %349, %350
  %conv859 = sext i32 %sub858 to i64
  %mul860 = mul nsw i64 %conv853, %conv859
  %start861 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x862 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start861, i32 0, i32 0
  %351 = load i32, i32* %x862, align 4, !tbaa !128
  %end863 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x864 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end863, i32 0, i32 0
  %352 = load i32, i32* %x864, align 4, !tbaa !131
  %sub865 = sub nsw i32 %351, %352
  %conv866 = sext i32 %sub865 to i64
  %div867 = sdiv i64 %mul860, %conv866
  %conv868 = trunc i64 %div867 to i32
  %353 = load i32, i32* %ytr, align 4, !tbaa !5
  %sub869 = sub nsw i32 %353, %conv868
  store i32 %sub869, i32* %ytr, align 4, !tbaa !5
  %354 = load i32, i32* %ytr, align 4, !tbaa !5
  %355 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp870 = icmp slt i32 %354, %355
  br i1 %cmp870, label %if.then.872, label %if.end.873

if.then.872:                                      ; preds = %if.then.849
  %356 = load i32, i32* %ybot, align 4, !tbaa !5
  store i32 %356, i32* %ytr, align 4, !tbaa !5
  br label %if.end.873

if.end.873:                                       ; preds = %if.then.872, %if.then.849
  br label %if.end.874

if.end.874:                                       ; preds = %if.end.873, %if.end.842
  %357 = load i32, i32* %ytl, align 4, !tbaa !5
  %358 = load i32, i32* %ybr, align 4, !tbaa !5
  %cmp875 = icmp slt i32 %357, %358
  br i1 %cmp875, label %if.then.877, label %if.else.901

if.then.877:                                      ; preds = %if.end.874
  %359 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %359, i32 0, i32 0
  %360 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %360, i32 0, i32 42
  %fill_trapezoid = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 27
  %361 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid, align 8, !tbaa !157
  %362 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev878 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %362, i32 0, i32 0
  %363 = load %struct.gx_device_s*, %struct.gx_device_s** %dev878, align 8, !tbaa !55
  %364 = load i32, i32* %ybot, align 4, !tbaa !5
  %365 = load i32, i32* %ytl, align 4, !tbaa !5
  %366 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %367 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %368 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %368, i32 0, i32 1
  %369 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %log_op = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %369, i32 0, i32 10
  %370 = load i32, i32* %log_op, align 4, !tbaa !167
  %call = call i32 %361(%struct.gx_device_s* %363, %struct.gs_fixed_edge_s* %lenew, %struct.gs_fixed_edge_s* %re, i32 %364, i32 %365, i32 %366, %struct.gx_device_color_s* %367, i32 %370) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %371 = load i32, i32* %code, align 4, !tbaa !5
  %cmp879 = icmp slt i32 %371, 0
  br i1 %cmp879, label %if.then.881, label %if.end.882

if.then.881:                                      ; preds = %if.then.877
  %372 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %372, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.882:                                       ; preds = %if.then.877
  %373 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev883 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %373, i32 0, i32 0
  %374 = load %struct.gx_device_s*, %struct.gx_device_s** %dev883, align 8, !tbaa !55
  %procs884 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %374, i32 0, i32 42
  %fill_trapezoid885 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs884, i32 0, i32 27
  %375 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid885, align 8, !tbaa !157
  %376 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev886 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %376, i32 0, i32 0
  %377 = load %struct.gx_device_s*, %struct.gx_device_s** %dev886, align 8, !tbaa !55
  %378 = load i32, i32* %ytl, align 4, !tbaa !5
  %379 = load i32, i32* %ybr, align 4, !tbaa !5
  %380 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %381 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %382 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis887 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %382, i32 0, i32 1
  %383 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis887, align 8, !tbaa !35
  %log_op888 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %383, i32 0, i32 10
  %384 = load i32, i32* %log_op888, align 4, !tbaa !167
  %call889 = call i32 %375(%struct.gx_device_s* %377, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %378, i32 %379, i32 %380, %struct.gx_device_color_s* %381, i32 %384) #5
  store i32 %call889, i32* %code, align 4, !tbaa !5
  %385 = load i32, i32* %code, align 4, !tbaa !5
  %cmp890 = icmp slt i32 %385, 0
  br i1 %cmp890, label %if.then.892, label %if.end.893

if.then.892:                                      ; preds = %if.end.882
  %386 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %386, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.893:                                       ; preds = %if.end.882
  %387 = load i32, i32* %ybr, align 4, !tbaa !5
  store i32 %387, i32* %ybot, align 4, !tbaa !5
  %388 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev894 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %388, i32 0, i32 0
  %389 = load %struct.gx_device_s*, %struct.gx_device_s** %dev894, align 8, !tbaa !55
  %procs895 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %389, i32 0, i32 42
  %fill_trapezoid896 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs895, i32 0, i32 27
  %390 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid896, align 8, !tbaa !157
  %391 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev897 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %391, i32 0, i32 0
  %392 = load %struct.gx_device_s*, %struct.gx_device_s** %dev897, align 8, !tbaa !55
  %393 = load i32, i32* %ybr, align 4, !tbaa !5
  %394 = load i32, i32* %ytop, align 4, !tbaa !5
  %395 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %396 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %397 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis898 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %397, i32 0, i32 1
  %398 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis898, align 8, !tbaa !35
  %log_op899 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %398, i32 0, i32 10
  %399 = load i32, i32* %log_op899, align 4, !tbaa !167
  %call900 = call i32 %390(%struct.gx_device_s* %392, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %renew, i32 %393, i32 %394, i32 %395, %struct.gx_device_color_s* %396, i32 %399) #5
  store i32 %call900, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.901:                                      ; preds = %if.end.874
  %400 = load i32, i32* %ytr, align 4, !tbaa !5
  %401 = load i32, i32* %ybl, align 4, !tbaa !5
  %cmp902 = icmp slt i32 %400, %401
  br i1 %cmp902, label %if.then.904, label %if.end.934

if.then.904:                                      ; preds = %if.else.901
  %402 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev905 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %402, i32 0, i32 0
  %403 = load %struct.gx_device_s*, %struct.gx_device_s** %dev905, align 8, !tbaa !55
  %procs906 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %403, i32 0, i32 42
  %fill_trapezoid907 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs906, i32 0, i32 27
  %404 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid907, align 8, !tbaa !157
  %405 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev908 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %405, i32 0, i32 0
  %406 = load %struct.gx_device_s*, %struct.gx_device_s** %dev908, align 8, !tbaa !55
  %407 = load i32, i32* %ybot, align 4, !tbaa !5
  %408 = load i32, i32* %ytr, align 4, !tbaa !5
  %409 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %410 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %411 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis909 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %411, i32 0, i32 1
  %412 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis909, align 8, !tbaa !35
  %log_op910 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %412, i32 0, i32 10
  %413 = load i32, i32* %log_op910, align 4, !tbaa !167
  %call911 = call i32 %404(%struct.gx_device_s* %406, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %renew, i32 %407, i32 %408, i32 %409, %struct.gx_device_color_s* %410, i32 %413) #5
  store i32 %call911, i32* %code, align 4, !tbaa !5
  %414 = load i32, i32* %code, align 4, !tbaa !5
  %cmp912 = icmp slt i32 %414, 0
  br i1 %cmp912, label %if.then.914, label %if.end.915

if.then.914:                                      ; preds = %if.then.904
  %415 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %415, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.915:                                       ; preds = %if.then.904
  %416 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev916 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %416, i32 0, i32 0
  %417 = load %struct.gx_device_s*, %struct.gx_device_s** %dev916, align 8, !tbaa !55
  %procs917 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %417, i32 0, i32 42
  %fill_trapezoid918 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs917, i32 0, i32 27
  %418 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid918, align 8, !tbaa !157
  %419 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev919 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %419, i32 0, i32 0
  %420 = load %struct.gx_device_s*, %struct.gx_device_s** %dev919, align 8, !tbaa !55
  %421 = load i32, i32* %ytr, align 4, !tbaa !5
  %422 = load i32, i32* %ybl, align 4, !tbaa !5
  %423 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %424 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %425 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis920 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %425, i32 0, i32 1
  %426 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis920, align 8, !tbaa !35
  %log_op921 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %426, i32 0, i32 10
  %427 = load i32, i32* %log_op921, align 4, !tbaa !167
  %call922 = call i32 %418(%struct.gx_device_s* %420, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %421, i32 %422, i32 %423, %struct.gx_device_color_s* %424, i32 %427) #5
  store i32 %call922, i32* %code, align 4, !tbaa !5
  %428 = load i32, i32* %code, align 4, !tbaa !5
  %cmp923 = icmp slt i32 %428, 0
  br i1 %cmp923, label %if.then.925, label %if.end.926

if.then.925:                                      ; preds = %if.end.915
  %429 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %429, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.926:                                       ; preds = %if.end.915
  %430 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev927 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %430, i32 0, i32 0
  %431 = load %struct.gx_device_s*, %struct.gx_device_s** %dev927, align 8, !tbaa !55
  %procs928 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %431, i32 0, i32 42
  %fill_trapezoid929 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs928, i32 0, i32 27
  %432 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid929, align 8, !tbaa !157
  %433 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev930 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %433, i32 0, i32 0
  %434 = load %struct.gx_device_s*, %struct.gx_device_s** %dev930, align 8, !tbaa !55
  %435 = load i32, i32* %ybl, align 4, !tbaa !5
  %436 = load i32, i32* %ytop, align 4, !tbaa !5
  %437 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %438 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %439 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis931 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %439, i32 0, i32 1
  %440 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis931, align 8, !tbaa !35
  %log_op932 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %440, i32 0, i32 10
  %441 = load i32, i32* %log_op932, align 4, !tbaa !167
  %call933 = call i32 %432(%struct.gx_device_s* %434, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %435, i32 %436, i32 %437, %struct.gx_device_color_s* %438, i32 %441) #5
  store i32 %call933, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.934:                                       ; preds = %if.else.901
  br label %if.end.935

if.end.935:                                       ; preds = %if.end.934
  %442 = load i32, i32* %ybl, align 4, !tbaa !5
  store i32 %442, i32* %ymid, align 4, !tbaa !5
  %443 = load i32, i32* %ymid, align 4, !tbaa !5
  %444 = load i32, i32* %ybr, align 4, !tbaa !5
  %cmp936 = icmp sgt i32 %443, %444
  br i1 %cmp936, label %if.then.938, label %if.end.939

if.then.938:                                      ; preds = %if.end.935
  %445 = load i32, i32* %ybr, align 4, !tbaa !5
  store i32 %445, i32* %ymid, align 4, !tbaa !5
  br label %if.end.939

if.end.939:                                       ; preds = %if.then.938, %if.end.935
  %446 = load i32, i32* %ymid, align 4, !tbaa !5
  %447 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp940 = icmp sgt i32 %446, %447
  br i1 %cmp940, label %if.then.942, label %if.end.954

if.then.942:                                      ; preds = %if.end.939
  %448 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev943 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %448, i32 0, i32 0
  %449 = load %struct.gx_device_s*, %struct.gx_device_s** %dev943, align 8, !tbaa !55
  %procs944 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %449, i32 0, i32 42
  %fill_trapezoid945 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs944, i32 0, i32 27
  %450 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid945, align 8, !tbaa !157
  %451 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev946 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %451, i32 0, i32 0
  %452 = load %struct.gx_device_s*, %struct.gx_device_s** %dev946, align 8, !tbaa !55
  %453 = load i32, i32* %ybot, align 4, !tbaa !5
  %454 = load i32, i32* %ymid, align 4, !tbaa !5
  %455 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %456 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %457 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis947 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %457, i32 0, i32 1
  %458 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis947, align 8, !tbaa !35
  %log_op948 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %458, i32 0, i32 10
  %459 = load i32, i32* %log_op948, align 4, !tbaa !167
  %call949 = call i32 %450(%struct.gx_device_s* %452, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %453, i32 %454, i32 %455, %struct.gx_device_color_s* %456, i32 %459) #5
  store i32 %call949, i32* %code, align 4, !tbaa !5
  %460 = load i32, i32* %code, align 4, !tbaa !5
  %cmp950 = icmp slt i32 %460, 0
  br i1 %cmp950, label %if.then.952, label %if.end.953

if.then.952:                                      ; preds = %if.then.942
  %461 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %461, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.953:                                       ; preds = %if.then.942
  %462 = load i32, i32* %ymid, align 4, !tbaa !5
  store i32 %462, i32* %ybot, align 4, !tbaa !5
  br label %if.end.954

if.end.954:                                       ; preds = %if.end.953, %if.end.939
  %463 = load i32, i32* %ytl, align 4, !tbaa !5
  store i32 %463, i32* %ymid, align 4, !tbaa !5
  %464 = load i32, i32* %ymid, align 4, !tbaa !5
  %465 = load i32, i32* %ytr, align 4, !tbaa !5
  %cmp955 = icmp slt i32 %464, %465
  br i1 %cmp955, label %if.then.957, label %if.end.958

if.then.957:                                      ; preds = %if.end.954
  %466 = load i32, i32* %ytr, align 4, !tbaa !5
  store i32 %466, i32* %ymid, align 4, !tbaa !5
  br label %if.end.958

if.end.958:                                       ; preds = %if.then.957, %if.end.954
  %467 = load i32, i32* %ymid, align 4, !tbaa !5
  %468 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp959 = icmp slt i32 %467, %468
  br i1 %cmp959, label %if.then.961, label %if.end.973

if.then.961:                                      ; preds = %if.end.958
  %469 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev962 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %469, i32 0, i32 0
  %470 = load %struct.gx_device_s*, %struct.gx_device_s** %dev962, align 8, !tbaa !55
  %procs963 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %470, i32 0, i32 42
  %fill_trapezoid964 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs963, i32 0, i32 27
  %471 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid964, align 8, !tbaa !157
  %472 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev965 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %472, i32 0, i32 0
  %473 = load %struct.gx_device_s*, %struct.gx_device_s** %dev965, align 8, !tbaa !55
  %474 = load i32, i32* %ymid, align 4, !tbaa !5
  %475 = load i32, i32* %ytop, align 4, !tbaa !5
  %476 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %477 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %478 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis966 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %478, i32 0, i32 1
  %479 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis966, align 8, !tbaa !35
  %log_op967 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %479, i32 0, i32 10
  %480 = load i32, i32* %log_op967, align 4, !tbaa !167
  %call968 = call i32 %471(%struct.gx_device_s* %473, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %474, i32 %475, i32 %476, %struct.gx_device_color_s* %477, i32 %480) #5
  store i32 %call968, i32* %code, align 4, !tbaa !5
  %481 = load i32, i32* %code, align 4, !tbaa !5
  %cmp969 = icmp slt i32 %481, 0
  br i1 %cmp969, label %if.then.971, label %if.end.972

if.then.971:                                      ; preds = %if.then.961
  %482 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %482, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.972:                                       ; preds = %if.then.961
  %483 = load i32, i32* %ymid, align 4, !tbaa !5
  store i32 %483, i32* %ytop, align 4, !tbaa !5
  br label %if.end.973

if.end.973:                                       ; preds = %if.end.972, %if.end.958
  %484 = load i32, i32* %ybl, align 4, !tbaa !5
  %485 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp974 = icmp sgt i32 %484, %485
  br i1 %cmp974, label %if.then.976, label %if.else.988

if.then.976:                                      ; preds = %if.end.973
  %486 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev977 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %486, i32 0, i32 0
  %487 = load %struct.gx_device_s*, %struct.gx_device_s** %dev977, align 8, !tbaa !55
  %procs978 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %487, i32 0, i32 42
  %fill_trapezoid979 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs978, i32 0, i32 27
  %488 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid979, align 8, !tbaa !157
  %489 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev980 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %489, i32 0, i32 0
  %490 = load %struct.gx_device_s*, %struct.gx_device_s** %dev980, align 8, !tbaa !55
  %491 = load i32, i32* %ybot, align 4, !tbaa !5
  %492 = load i32, i32* %ybl, align 4, !tbaa !5
  %493 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %494 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %495 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis981 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %495, i32 0, i32 1
  %496 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis981, align 8, !tbaa !35
  %log_op982 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %496, i32 0, i32 10
  %497 = load i32, i32* %log_op982, align 4, !tbaa !167
  %call983 = call i32 %488(%struct.gx_device_s* %490, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %renew, i32 %491, i32 %492, i32 %493, %struct.gx_device_color_s* %494, i32 %497) #5
  store i32 %call983, i32* %code, align 4, !tbaa !5
  %498 = load i32, i32* %code, align 4, !tbaa !5
  %cmp984 = icmp slt i32 %498, 0
  br i1 %cmp984, label %if.then.986, label %if.end.987

if.then.986:                                      ; preds = %if.then.976
  %499 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %499, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.987:                                       ; preds = %if.then.976
  %500 = load i32, i32* %ybl, align 4, !tbaa !5
  store i32 %500, i32* %ybot, align 4, !tbaa !5
  br label %if.end.1004

if.else.988:                                      ; preds = %if.end.973
  %501 = load i32, i32* %ybr, align 4, !tbaa !5
  %502 = load i32, i32* %ybot, align 4, !tbaa !5
  %cmp989 = icmp sgt i32 %501, %502
  br i1 %cmp989, label %if.then.991, label %if.end.1003

if.then.991:                                      ; preds = %if.else.988
  %503 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev992 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %503, i32 0, i32 0
  %504 = load %struct.gx_device_s*, %struct.gx_device_s** %dev992, align 8, !tbaa !55
  %procs993 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %504, i32 0, i32 42
  %fill_trapezoid994 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs993, i32 0, i32 27
  %505 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid994, align 8, !tbaa !157
  %506 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev995 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %506, i32 0, i32 0
  %507 = load %struct.gx_device_s*, %struct.gx_device_s** %dev995, align 8, !tbaa !55
  %508 = load i32, i32* %ybot, align 4, !tbaa !5
  %509 = load i32, i32* %ybr, align 4, !tbaa !5
  %510 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %511 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %512 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis996 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %512, i32 0, i32 1
  %513 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis996, align 8, !tbaa !35
  %log_op997 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %513, i32 0, i32 10
  %514 = load i32, i32* %log_op997, align 4, !tbaa !167
  %call998 = call i32 %505(%struct.gx_device_s* %507, %struct.gs_fixed_edge_s* %lenew, %struct.gs_fixed_edge_s* %re, i32 %508, i32 %509, i32 %510, %struct.gx_device_color_s* %511, i32 %514) #5
  store i32 %call998, i32* %code, align 4, !tbaa !5
  %515 = load i32, i32* %code, align 4, !tbaa !5
  %cmp999 = icmp slt i32 %515, 0
  br i1 %cmp999, label %if.then.1001, label %if.end.1002

if.then.1001:                                     ; preds = %if.then.991
  %516 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %516, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1002:                                      ; preds = %if.then.991
  %517 = load i32, i32* %ybr, align 4, !tbaa !5
  store i32 %517, i32* %ybot, align 4, !tbaa !5
  br label %if.end.1003

if.end.1003:                                      ; preds = %if.end.1002, %if.else.988
  br label %if.end.1004

if.end.1004:                                      ; preds = %if.end.1003, %if.end.987
  %518 = load i32, i32* %ytl, align 4, !tbaa !5
  %519 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp1005 = icmp slt i32 %518, %519
  br i1 %cmp1005, label %if.then.1007, label %if.else.1019

if.then.1007:                                     ; preds = %if.end.1004
  %520 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1008 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %520, i32 0, i32 0
  %521 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1008, align 8, !tbaa !55
  %procs1009 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %521, i32 0, i32 42
  %fill_trapezoid1010 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs1009, i32 0, i32 27
  %522 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid1010, align 8, !tbaa !157
  %523 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1011 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %523, i32 0, i32 0
  %524 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1011, align 8, !tbaa !55
  %525 = load i32, i32* %ytl, align 4, !tbaa !5
  %526 = load i32, i32* %ytop, align 4, !tbaa !5
  %527 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %528 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %529 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis1012 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %529, i32 0, i32 1
  %530 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis1012, align 8, !tbaa !35
  %log_op1013 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %530, i32 0, i32 10
  %531 = load i32, i32* %log_op1013, align 4, !tbaa !167
  %call1014 = call i32 %522(%struct.gx_device_s* %524, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %renew, i32 %525, i32 %526, i32 %527, %struct.gx_device_color_s* %528, i32 %531) #5
  store i32 %call1014, i32* %code, align 4, !tbaa !5
  %532 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1015 = icmp slt i32 %532, 0
  br i1 %cmp1015, label %if.then.1017, label %if.end.1018

if.then.1017:                                     ; preds = %if.then.1007
  %533 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %533, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1018:                                      ; preds = %if.then.1007
  %534 = load i32, i32* %ytl, align 4, !tbaa !5
  store i32 %534, i32* %ytop, align 4, !tbaa !5
  br label %if.end.1035

if.else.1019:                                     ; preds = %if.end.1004
  %535 = load i32, i32* %ytr, align 4, !tbaa !5
  %536 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp1020 = icmp slt i32 %535, %536
  br i1 %cmp1020, label %if.then.1022, label %if.end.1034

if.then.1022:                                     ; preds = %if.else.1019
  %537 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1023 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %537, i32 0, i32 0
  %538 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1023, align 8, !tbaa !55
  %procs1024 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %538, i32 0, i32 42
  %fill_trapezoid1025 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs1024, i32 0, i32 27
  %539 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid1025, align 8, !tbaa !157
  %540 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1026 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %540, i32 0, i32 0
  %541 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1026, align 8, !tbaa !55
  %542 = load i32, i32* %ytr, align 4, !tbaa !5
  %543 = load i32, i32* %ytop, align 4, !tbaa !5
  %544 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %545 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %546 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis1027 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %546, i32 0, i32 1
  %547 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis1027, align 8, !tbaa !35
  %log_op1028 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %547, i32 0, i32 10
  %548 = load i32, i32* %log_op1028, align 4, !tbaa !167
  %call1029 = call i32 %539(%struct.gx_device_s* %541, %struct.gs_fixed_edge_s* %lenew, %struct.gs_fixed_edge_s* %re, i32 %542, i32 %543, i32 %544, %struct.gx_device_color_s* %545, i32 %548) #5
  store i32 %call1029, i32* %code, align 4, !tbaa !5
  %549 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1030 = icmp slt i32 %549, 0
  br i1 %cmp1030, label %if.then.1032, label %if.end.1033

if.then.1032:                                     ; preds = %if.then.1022
  %550 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %550, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1033:                                      ; preds = %if.then.1022
  %551 = load i32, i32* %ytr, align 4, !tbaa !5
  store i32 %551, i32* %ytop, align 4, !tbaa !5
  br label %if.end.1034

if.end.1034:                                      ; preds = %if.end.1033, %if.else.1019
  br label %if.end.1035

if.end.1035:                                      ; preds = %if.end.1034, %if.end.1018
  %552 = load i32, i32* %ybot, align 4, !tbaa !5
  %553 = load i32, i32* %ytop, align 4, !tbaa !5
  %cmp1036 = icmp sgt i32 %552, %553
  br i1 %cmp1036, label %if.then.1038, label %if.end.1039

if.then.1038:                                     ; preds = %if.end.1035
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1039:                                      ; preds = %if.end.1035
  %554 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1040 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %554, i32 0, i32 0
  %555 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1040, align 8, !tbaa !55
  %procs1041 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %555, i32 0, i32 42
  %fill_trapezoid1042 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs1041, i32 0, i32 27
  %556 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid1042, align 8, !tbaa !157
  %557 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1043 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %557, i32 0, i32 0
  %558 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1043, align 8, !tbaa !55
  %559 = load i32, i32* %ybot, align 4, !tbaa !5
  %560 = load i32, i32* %ytop, align 4, !tbaa !5
  %561 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %562 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %563 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis1044 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %563, i32 0, i32 1
  %564 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis1044, align 8, !tbaa !35
  %log_op1045 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %564, i32 0, i32 10
  %565 = load i32, i32* %log_op1045, align 4, !tbaa !167
  %call1046 = call i32 %556(%struct.gx_device_s* %558, %struct.gs_fixed_edge_s* %lenew, %struct.gs_fixed_edge_s* %renew, i32 %559, i32 %560, i32 %561, %struct.gx_device_color_s* %562, i32 %565) #5
  store i32 %call1046, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.1039, %if.then.1038, %if.then.1032, %if.then.1017, %if.then.1001, %if.then.986, %if.then.971, %if.then.952, %if.end.926, %if.then.925, %if.then.914, %if.end.893, %if.then.892, %if.then.881, %if.then.724, %if.then.647, %if.then.343
  %566 = bitcast i32* %ymid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %566) #2
  %567 = bitcast i32* %ytr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %567) #2
  %568 = bitcast i32* %ytl to i8*
  call void @llvm.lifetime.end(i64 4, i8* %568) #2
  %569 = bitcast i32* %ybr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %569) #2
  %570 = bitcast i32* %ybl to i8*
  call void @llvm.lifetime.end(i64 4, i8* %570) #2
  %571 = bitcast %struct.gs_fixed_edge_s* %renew to i8*
  call void @llvm.lifetime.end(i64 16, i8* %571) #2
  %572 = bitcast %struct.gs_fixed_edge_s* %lenew to i8*
  call void @llvm.lifetime.end(i64 16, i8* %572) #2
  br label %cleanup.1054

if.end.1053:                                      ; preds = %if.end.148
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.1054

cleanup.1054:                                     ; preds = %if.end.1053, %cleanup, %if.then.115, %if.then.75
  %573 = bitcast i32* %clip to i8*
  call void @llvm.lifetime.end(i64 4, i8* %573) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.1066 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup.1054
  br label %if.end.1055

if.end.1055:                                      ; preds = %cleanup.cont, %if.end
  %574 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1056 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %574, i32 0, i32 0
  %575 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1056, align 8, !tbaa !55
  %procs1057 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %575, i32 0, i32 42
  %fill_trapezoid1058 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs1057, i32 0, i32 27
  %576 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid1058, align 8, !tbaa !157
  %577 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev1059 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %577, i32 0, i32 0
  %578 = load %struct.gx_device_s*, %struct.gx_device_s** %dev1059, align 8, !tbaa !55
  %579 = load i32, i32* %ybot, align 4, !tbaa !5
  %580 = load i32, i32* %ytop, align 4, !tbaa !5
  %581 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %582 = load %struct.gx_device_color_s*, %struct.gx_device_color_s** %pdevc.addr, align 8, !tbaa !1
  %583 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis1060 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %583, i32 0, i32 1
  %584 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis1060, align 8, !tbaa !35
  %log_op1061 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %584, i32 0, i32 10
  %585 = load i32, i32* %log_op1061, align 4, !tbaa !167
  %call1062 = call i32 %576(%struct.gx_device_s* %578, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %579, i32 %580, i32 %581, %struct.gx_device_color_s* %582, i32 %585) #5
  store i32 %call1062, i32* %code, align 4, !tbaa !5
  br label %do.body.1063

do.body.1063:                                     ; preds = %if.end.1055
  br label %do.cond.1064

do.cond.1064:                                     ; preds = %do.body.1063
  br label %do.end.1065

do.end.1065:                                      ; preds = %do.cond.1064
  %586 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %586, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1066

cleanup.1066:                                     ; preds = %do.end.1065, %cleanup.1054, %if.then
  %587 = bitcast i32* %xright to i8*
  call void @llvm.lifetime.end(i64 4, i8* %587) #2
  %588 = bitcast i32* %xleft to i8*
  call void @llvm.lifetime.end(i64 4, i8* %588) #2
  %589 = bitcast i32* %ytop to i8*
  call void @llvm.lifetime.end(i64 4, i8* %589) #2
  %590 = bitcast i32* %ybot to i8*
  call void @llvm.lifetime.end(i64 4, i8* %590) #2
  %591 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %591) #2
  %592 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %592) #2
  %593 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %593) #2
  %594 = load i32, i32* %retval
  ret i32 %594
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @intersection_of_small_bars(%struct.gs_fixed_point_s* %q, i32 %i0, i32 %i1, i32 %i2, i32 %i3, i32* %ry, i32* %ey) #1 {
entry:
  %q.addr = alloca %struct.gs_fixed_point_s*, align 8
  %i0.addr = alloca i32, align 4
  %i1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %i3.addr = alloca i32, align 4
  %ry.addr = alloca i32*, align 8
  %ey.addr = alloca i32*, align 8
  store %struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  store i32 %i0, i32* %i0.addr, align 4, !tbaa !5
  store i32 %i1, i32* %i1.addr, align 4, !tbaa !5
  store i32 %i2, i32* %i2.addr, align 4, !tbaa !5
  store i32 %i3, i32* %i3.addr, align 4, !tbaa !5
  store i32* %ry, i32** %ry.addr, align 8, !tbaa !1
  store i32* %ey, i32** %ey.addr, align 8, !tbaa !1
  %0 = load i32, i32* %i0.addr, align 4, !tbaa !5
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %1, i64 %idxprom
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx, i32 0, i32 0
  %2 = load i32, i32* %x, align 4, !tbaa !109
  %3 = load i32, i32* %i0.addr, align 4, !tbaa !5
  %idxprom1 = sext i32 %3 to i64
  %4 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %4, i64 %idxprom1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx2, i32 0, i32 1
  %5 = load i32, i32* %y, align 4, !tbaa !110
  %6 = load i32, i32* %i1.addr, align 4, !tbaa !5
  %idxprom3 = sext i32 %6 to i64
  %7 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %7, i64 %idxprom3
  %x5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx4, i32 0, i32 0
  %8 = load i32, i32* %x5, align 4, !tbaa !109
  %9 = load i32, i32* %i1.addr, align 4, !tbaa !5
  %idxprom6 = sext i32 %9 to i64
  %10 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %10, i64 %idxprom6
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx7, i32 0, i32 1
  %11 = load i32, i32* %y8, align 4, !tbaa !110
  %12 = load i32, i32* %i2.addr, align 4, !tbaa !5
  %idxprom9 = sext i32 %12 to i64
  %13 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %13, i64 %idxprom9
  %x11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx10, i32 0, i32 0
  %14 = load i32, i32* %x11, align 4, !tbaa !109
  %15 = load i32, i32* %i2.addr, align 4, !tbaa !5
  %idxprom12 = sext i32 %15 to i64
  %16 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %16, i64 %idxprom12
  %y14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx13, i32 0, i32 1
  %17 = load i32, i32* %y14, align 4, !tbaa !110
  %18 = load i32, i32* %i3.addr, align 4, !tbaa !5
  %idxprom15 = sext i32 %18 to i64
  %19 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %19, i64 %idxprom15
  %x17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx16, i32 0, i32 0
  %20 = load i32, i32* %x17, align 4, !tbaa !109
  %21 = load i32, i32* %i3.addr, align 4, !tbaa !5
  %idxprom18 = sext i32 %21 to i64
  %22 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %22, i64 %idxprom18
  %y20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx19, i32 0, i32 1
  %23 = load i32, i32* %y20, align 4, !tbaa !110
  %24 = load i32*, i32** %ry.addr, align 8, !tbaa !1
  %25 = load i32*, i32** %ey.addr, align 8, !tbaa !1
  %call = call i32 @gx_intersect_small_bars(i32 %2, i32 %5, i32 %8, i32 %11, i32 %14, i32 %17, i32 %20, i32 %23, i32* %24, i32* %25) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @make_trapezoid(%struct.gs_fixed_point_s* %q, i32 %vi0, i32 %vi1, i32 %vi2, i32 %vi3, i32 %ybot, i32 %ytop, i32 %swap_axes, i32 %orient, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re) #1 {
entry:
  %q.addr = alloca %struct.gs_fixed_point_s*, align 8
  %vi0.addr = alloca i32, align 4
  %vi1.addr = alloca i32, align 4
  %vi2.addr = alloca i32, align 4
  %vi3.addr = alloca i32, align 4
  %ybot.addr = alloca i32, align 4
  %ytop.addr = alloca i32, align 4
  %swap_axes.addr = alloca i32, align 4
  %orient.addr = alloca i32, align 4
  %le.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %re.addr = alloca %struct.gs_fixed_edge_s*, align 8
  store %struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  store i32 %vi0, i32* %vi0.addr, align 4, !tbaa !5
  store i32 %vi1, i32* %vi1.addr, align 4, !tbaa !5
  store i32 %vi2, i32* %vi2.addr, align 4, !tbaa !5
  store i32 %vi3, i32* %vi3.addr, align 4, !tbaa !5
  store i32 %ybot, i32* %ybot.addr, align 4, !tbaa !5
  store i32 %ytop, i32* %ytop.addr, align 4, !tbaa !5
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  store i32 %orient, i32* %orient.addr, align 4, !tbaa !5
  store %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %re, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %0 = load i32, i32* %orient.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %1, i32 0, i32 0
  %2 = load i32, i32* %vi0.addr, align 4, !tbaa !5
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %3, i64 %idxprom
  %4 = bitcast %struct.gs_fixed_point_s* %start to i8*
  %5 = bitcast %struct.gs_fixed_point_s* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 4, i1 false), !tbaa.struct !117
  %6 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %6, i32 0, i32 1
  %7 = load i32, i32* %vi1.addr, align 4, !tbaa !5
  %idxprom1 = sext i32 %7 to i64
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %8, i64 %idxprom1
  %9 = bitcast %struct.gs_fixed_point_s* %end to i8*
  %10 = bitcast %struct.gs_fixed_point_s* %arrayidx2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 4, i1 false), !tbaa.struct !117
  %11 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start3 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %11, i32 0, i32 0
  %12 = load i32, i32* %vi2.addr, align 4, !tbaa !5
  %idxprom4 = sext i32 %12 to i64
  %13 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %13, i64 %idxprom4
  %14 = bitcast %struct.gs_fixed_point_s* %start3 to i8*
  %15 = bitcast %struct.gs_fixed_point_s* %arrayidx5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false), !tbaa.struct !117
  %16 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end6 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %16, i32 0, i32 1
  %17 = load i32, i32* %vi3.addr, align 4, !tbaa !5
  %idxprom7 = sext i32 %17 to i64
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i64 %idxprom7
  %19 = bitcast %struct.gs_fixed_point_s* %end6 to i8*
  %20 = bitcast %struct.gs_fixed_point_s* %arrayidx8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false), !tbaa.struct !117
  br label %if.end

if.else:                                          ; preds = %entry
  %21 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start9 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %21, i32 0, i32 0
  %22 = load i32, i32* %vi2.addr, align 4, !tbaa !5
  %idxprom10 = sext i32 %22 to i64
  %23 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %23, i64 %idxprom10
  %24 = bitcast %struct.gs_fixed_point_s* %start9 to i8*
  %25 = bitcast %struct.gs_fixed_point_s* %arrayidx11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 4, i1 false), !tbaa.struct !117
  %26 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end12 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %26, i32 0, i32 1
  %27 = load i32, i32* %vi3.addr, align 4, !tbaa !5
  %idxprom13 = sext i32 %27 to i64
  %28 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %28, i64 %idxprom13
  %29 = bitcast %struct.gs_fixed_point_s* %end12 to i8*
  %30 = bitcast %struct.gs_fixed_point_s* %arrayidx14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 4, i1 false), !tbaa.struct !117
  %31 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start15 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %31, i32 0, i32 0
  %32 = load i32, i32* %vi0.addr, align 4, !tbaa !5
  %idxprom16 = sext i32 %32 to i64
  %33 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %33, i64 %idxprom16
  %34 = bitcast %struct.gs_fixed_point_s* %start15 to i8*
  %35 = bitcast %struct.gs_fixed_point_s* %arrayidx17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 8, i32 4, i1 false), !tbaa.struct !117
  %36 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end18 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %36, i32 0, i32 1
  %37 = load i32, i32* %vi1.addr, align 4, !tbaa !5
  %idxprom19 = sext i32 %37 to i64
  %38 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %38, i64 %idxprom19
  %39 = bitcast %struct.gs_fixed_point_s* %end18 to i8*
  %40 = bitcast %struct.gs_fixed_point_s* %arrayidx20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false), !tbaa.struct !117
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %41 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %start21 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %41, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start21, i32 0, i32 0
  %42 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  call void @adjust_swapped_boundary(i32* %x, i32 %42) #5
  %43 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end22 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %43, i32 0, i32 1
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end22, i32 0, i32 0
  %44 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  call void @adjust_swapped_boundary(i32* %x23, i32 %44) #5
  ret void
}

declare i32 @gx_intersect_small_bars(i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*) #3

; Function Attrs: inlinehint nounwind uwtable
define internal void @init_wedge_vertex_list(%struct.wedge_vertex_list_t* %l, i32 %n) #1 {
entry:
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %n.addr = alloca i32, align 4
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !5
  %0 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %1 = bitcast %struct.wedge_vertex_list_t* %0 to i8*
  %2 = load i32, i32* %n.addr, align 4, !tbaa !5
  %conv = sext i32 %2 to i64
  %mul = mul i64 24, %conv
  %call = call i8* @memset(i8* %1, i32 0, i64 %mul) #6
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fill_triangle(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, %struct.shading_vertex_s* %p2, %struct.wedge_vertex_list_t* %l01, %struct.wedge_vertex_list_t* %l12, %struct.wedge_vertex_list_t* %l20) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %p2.addr = alloca %struct.shading_vertex_s*, align 8
  %l01.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %l12.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %l20.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %sd01 = alloca i32, align 4
  %sd12 = alloca i32, align 4
  %sd20 = alloca i32, align 4
  %sd1 = alloca i32, align 4
  %sd = alloca i32, align 4
  %cd = alloca double, align 8
  %d01 = alloca double, align 8
  %d12 = alloca double, align 8
  %d20 = alloca double, align 8
  %cd1 = alloca double, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p2, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l01, %struct.wedge_vertex_list_t** %l01.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l12, %struct.wedge_vertex_list_t** %l12.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l20, %struct.wedge_vertex_list_t** %l20.addr, align 8, !tbaa !1
  %0 = bitcast i32* %sd01 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %2 = load i32, i32* %x, align 4, !tbaa !155
  %3 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %3, i32 0, i32 0
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p3, i32 0, i32 0
  %4 = load i32, i32* %x4, align 4, !tbaa !155
  %sub = sub nsw i32 %2, %4
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %5, i32 0, i32 0
  %x6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p5, i32 0, i32 0
  %6 = load i32, i32* %x6, align 4, !tbaa !155
  %7 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %7, i32 0, i32 0
  %x8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p7, i32 0, i32 0
  %8 = load i32, i32* %x8, align 4, !tbaa !155
  %sub9 = sub nsw i32 %6, %8
  %sub10 = sub nsw i32 0, %sub9
  br label %cond.end

cond.false:                                       ; preds = %entry
  %9 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %9, i32 0, i32 0
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p11, i32 0, i32 0
  %10 = load i32, i32* %x12, align 4, !tbaa !155
  %11 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %11, i32 0, i32 0
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p13, i32 0, i32 0
  %12 = load i32, i32* %x14, align 4, !tbaa !155
  %sub15 = sub nsw i32 %10, %12
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub10, %cond.true ], [ %sub15, %cond.false ]
  %13 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p16 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %13, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p16, i32 0, i32 1
  %14 = load i32, i32* %y, align 4, !tbaa !156
  %15 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p17 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %15, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p17, i32 0, i32 1
  %16 = load i32, i32* %y18, align 4, !tbaa !156
  %sub19 = sub nsw i32 %14, %16
  %cmp20 = icmp slt i32 %sub19, 0
  br i1 %cmp20, label %cond.true.21, label %cond.false.28

cond.true.21:                                     ; preds = %cond.end
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 0
  %y23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p22, i32 0, i32 1
  %18 = load i32, i32* %y23, align 4, !tbaa !156
  %19 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p24 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %19, i32 0, i32 0
  %y25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p24, i32 0, i32 1
  %20 = load i32, i32* %y25, align 4, !tbaa !156
  %sub26 = sub nsw i32 %18, %20
  %sub27 = sub nsw i32 0, %sub26
  br label %cond.end.34

cond.false.28:                                    ; preds = %cond.end
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p29 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %21, i32 0, i32 0
  %y30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p29, i32 0, i32 1
  %22 = load i32, i32* %y30, align 4, !tbaa !156
  %23 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p31 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %23, i32 0, i32 0
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p31, i32 0, i32 1
  %24 = load i32, i32* %y32, align 4, !tbaa !156
  %sub33 = sub nsw i32 %22, %24
  br label %cond.end.34

cond.end.34:                                      ; preds = %cond.false.28, %cond.true.21
  %cond35 = phi i32 [ %sub27, %cond.true.21 ], [ %sub33, %cond.false.28 ]
  %cmp36 = icmp sgt i32 %cond, %cond35
  br i1 %cmp36, label %cond.true.37, label %cond.false.59

cond.true.37:                                     ; preds = %cond.end.34
  %25 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p38 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %25, i32 0, i32 0
  %x39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p38, i32 0, i32 0
  %26 = load i32, i32* %x39, align 4, !tbaa !155
  %27 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p40 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %27, i32 0, i32 0
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p40, i32 0, i32 0
  %28 = load i32, i32* %x41, align 4, !tbaa !155
  %sub42 = sub nsw i32 %26, %28
  %cmp43 = icmp slt i32 %sub42, 0
  br i1 %cmp43, label %cond.true.44, label %cond.false.51

cond.true.44:                                     ; preds = %cond.true.37
  %29 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p45 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %29, i32 0, i32 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p45, i32 0, i32 0
  %30 = load i32, i32* %x46, align 4, !tbaa !155
  %31 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p47 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %31, i32 0, i32 0
  %x48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p47, i32 0, i32 0
  %32 = load i32, i32* %x48, align 4, !tbaa !155
  %sub49 = sub nsw i32 %30, %32
  %sub50 = sub nsw i32 0, %sub49
  br label %cond.end.57

cond.false.51:                                    ; preds = %cond.true.37
  %33 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p52 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %33, i32 0, i32 0
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p52, i32 0, i32 0
  %34 = load i32, i32* %x53, align 4, !tbaa !155
  %35 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p54 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %35, i32 0, i32 0
  %x55 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p54, i32 0, i32 0
  %36 = load i32, i32* %x55, align 4, !tbaa !155
  %sub56 = sub nsw i32 %34, %36
  br label %cond.end.57

cond.end.57:                                      ; preds = %cond.false.51, %cond.true.44
  %cond58 = phi i32 [ %sub50, %cond.true.44 ], [ %sub56, %cond.false.51 ]
  br label %cond.end.81

cond.false.59:                                    ; preds = %cond.end.34
  %37 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p60 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %37, i32 0, i32 0
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p60, i32 0, i32 1
  %38 = load i32, i32* %y61, align 4, !tbaa !156
  %39 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p62 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %39, i32 0, i32 0
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p62, i32 0, i32 1
  %40 = load i32, i32* %y63, align 4, !tbaa !156
  %sub64 = sub nsw i32 %38, %40
  %cmp65 = icmp slt i32 %sub64, 0
  br i1 %cmp65, label %cond.true.66, label %cond.false.73

cond.true.66:                                     ; preds = %cond.false.59
  %41 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p67 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %41, i32 0, i32 0
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p67, i32 0, i32 1
  %42 = load i32, i32* %y68, align 4, !tbaa !156
  %43 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p69 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %43, i32 0, i32 0
  %y70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p69, i32 0, i32 1
  %44 = load i32, i32* %y70, align 4, !tbaa !156
  %sub71 = sub nsw i32 %42, %44
  %sub72 = sub nsw i32 0, %sub71
  br label %cond.end.79

cond.false.73:                                    ; preds = %cond.false.59
  %45 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p74 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %45, i32 0, i32 0
  %y75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p74, i32 0, i32 1
  %46 = load i32, i32* %y75, align 4, !tbaa !156
  %47 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p76 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %47, i32 0, i32 0
  %y77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p76, i32 0, i32 1
  %48 = load i32, i32* %y77, align 4, !tbaa !156
  %sub78 = sub nsw i32 %46, %48
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.false.73, %cond.true.66
  %cond80 = phi i32 [ %sub72, %cond.true.66 ], [ %sub78, %cond.false.73 ]
  br label %cond.end.81

cond.end.81:                                      ; preds = %cond.end.79, %cond.end.57
  %cond82 = phi i32 [ %cond58, %cond.end.57 ], [ %cond80, %cond.end.79 ]
  store i32 %cond82, i32* %sd01, align 4, !tbaa !5
  %49 = bitcast i32* %sd12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %49) #2
  %50 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p83 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %50, i32 0, i32 0
  %x84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p83, i32 0, i32 0
  %51 = load i32, i32* %x84, align 4, !tbaa !155
  %52 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p85 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %52, i32 0, i32 0
  %x86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p85, i32 0, i32 0
  %53 = load i32, i32* %x86, align 4, !tbaa !155
  %sub87 = sub nsw i32 %51, %53
  %cmp88 = icmp slt i32 %sub87, 0
  br i1 %cmp88, label %cond.true.89, label %cond.false.96

cond.true.89:                                     ; preds = %cond.end.81
  %54 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p90 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %54, i32 0, i32 0
  %x91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p90, i32 0, i32 0
  %55 = load i32, i32* %x91, align 4, !tbaa !155
  %56 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p92 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %56, i32 0, i32 0
  %x93 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p92, i32 0, i32 0
  %57 = load i32, i32* %x93, align 4, !tbaa !155
  %sub94 = sub nsw i32 %55, %57
  %sub95 = sub nsw i32 0, %sub94
  br label %cond.end.102

cond.false.96:                                    ; preds = %cond.end.81
  %58 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p97 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %58, i32 0, i32 0
  %x98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p97, i32 0, i32 0
  %59 = load i32, i32* %x98, align 4, !tbaa !155
  %60 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p99 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %60, i32 0, i32 0
  %x100 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p99, i32 0, i32 0
  %61 = load i32, i32* %x100, align 4, !tbaa !155
  %sub101 = sub nsw i32 %59, %61
  br label %cond.end.102

cond.end.102:                                     ; preds = %cond.false.96, %cond.true.89
  %cond103 = phi i32 [ %sub95, %cond.true.89 ], [ %sub101, %cond.false.96 ]
  %62 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p104 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %62, i32 0, i32 0
  %y105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p104, i32 0, i32 1
  %63 = load i32, i32* %y105, align 4, !tbaa !156
  %64 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p106 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %64, i32 0, i32 0
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p106, i32 0, i32 1
  %65 = load i32, i32* %y107, align 4, !tbaa !156
  %sub108 = sub nsw i32 %63, %65
  %cmp109 = icmp slt i32 %sub108, 0
  br i1 %cmp109, label %cond.true.110, label %cond.false.117

cond.true.110:                                    ; preds = %cond.end.102
  %66 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p111 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %66, i32 0, i32 0
  %y112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p111, i32 0, i32 1
  %67 = load i32, i32* %y112, align 4, !tbaa !156
  %68 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p113 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %68, i32 0, i32 0
  %y114 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p113, i32 0, i32 1
  %69 = load i32, i32* %y114, align 4, !tbaa !156
  %sub115 = sub nsw i32 %67, %69
  %sub116 = sub nsw i32 0, %sub115
  br label %cond.end.123

cond.false.117:                                   ; preds = %cond.end.102
  %70 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p118 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %70, i32 0, i32 0
  %y119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p118, i32 0, i32 1
  %71 = load i32, i32* %y119, align 4, !tbaa !156
  %72 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p120 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %72, i32 0, i32 0
  %y121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p120, i32 0, i32 1
  %73 = load i32, i32* %y121, align 4, !tbaa !156
  %sub122 = sub nsw i32 %71, %73
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.false.117, %cond.true.110
  %cond124 = phi i32 [ %sub116, %cond.true.110 ], [ %sub122, %cond.false.117 ]
  %cmp125 = icmp sgt i32 %cond103, %cond124
  br i1 %cmp125, label %cond.true.126, label %cond.false.148

cond.true.126:                                    ; preds = %cond.end.123
  %74 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p127 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %74, i32 0, i32 0
  %x128 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p127, i32 0, i32 0
  %75 = load i32, i32* %x128, align 4, !tbaa !155
  %76 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p129 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %76, i32 0, i32 0
  %x130 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p129, i32 0, i32 0
  %77 = load i32, i32* %x130, align 4, !tbaa !155
  %sub131 = sub nsw i32 %75, %77
  %cmp132 = icmp slt i32 %sub131, 0
  br i1 %cmp132, label %cond.true.133, label %cond.false.140

cond.true.133:                                    ; preds = %cond.true.126
  %78 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p134 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %78, i32 0, i32 0
  %x135 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p134, i32 0, i32 0
  %79 = load i32, i32* %x135, align 4, !tbaa !155
  %80 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p136 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %80, i32 0, i32 0
  %x137 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p136, i32 0, i32 0
  %81 = load i32, i32* %x137, align 4, !tbaa !155
  %sub138 = sub nsw i32 %79, %81
  %sub139 = sub nsw i32 0, %sub138
  br label %cond.end.146

cond.false.140:                                   ; preds = %cond.true.126
  %82 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p141 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %82, i32 0, i32 0
  %x142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p141, i32 0, i32 0
  %83 = load i32, i32* %x142, align 4, !tbaa !155
  %84 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p143 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %84, i32 0, i32 0
  %x144 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p143, i32 0, i32 0
  %85 = load i32, i32* %x144, align 4, !tbaa !155
  %sub145 = sub nsw i32 %83, %85
  br label %cond.end.146

cond.end.146:                                     ; preds = %cond.false.140, %cond.true.133
  %cond147 = phi i32 [ %sub139, %cond.true.133 ], [ %sub145, %cond.false.140 ]
  br label %cond.end.170

cond.false.148:                                   ; preds = %cond.end.123
  %86 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p149 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %86, i32 0, i32 0
  %y150 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p149, i32 0, i32 1
  %87 = load i32, i32* %y150, align 4, !tbaa !156
  %88 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p151 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %88, i32 0, i32 0
  %y152 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p151, i32 0, i32 1
  %89 = load i32, i32* %y152, align 4, !tbaa !156
  %sub153 = sub nsw i32 %87, %89
  %cmp154 = icmp slt i32 %sub153, 0
  br i1 %cmp154, label %cond.true.155, label %cond.false.162

cond.true.155:                                    ; preds = %cond.false.148
  %90 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p156 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %90, i32 0, i32 0
  %y157 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p156, i32 0, i32 1
  %91 = load i32, i32* %y157, align 4, !tbaa !156
  %92 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p158 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %92, i32 0, i32 0
  %y159 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p158, i32 0, i32 1
  %93 = load i32, i32* %y159, align 4, !tbaa !156
  %sub160 = sub nsw i32 %91, %93
  %sub161 = sub nsw i32 0, %sub160
  br label %cond.end.168

cond.false.162:                                   ; preds = %cond.false.148
  %94 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p163 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %94, i32 0, i32 0
  %y164 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p163, i32 0, i32 1
  %95 = load i32, i32* %y164, align 4, !tbaa !156
  %96 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p165 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %96, i32 0, i32 0
  %y166 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p165, i32 0, i32 1
  %97 = load i32, i32* %y166, align 4, !tbaa !156
  %sub167 = sub nsw i32 %95, %97
  br label %cond.end.168

cond.end.168:                                     ; preds = %cond.false.162, %cond.true.155
  %cond169 = phi i32 [ %sub161, %cond.true.155 ], [ %sub167, %cond.false.162 ]
  br label %cond.end.170

cond.end.170:                                     ; preds = %cond.end.168, %cond.end.146
  %cond171 = phi i32 [ %cond147, %cond.end.146 ], [ %cond169, %cond.end.168 ]
  store i32 %cond171, i32* %sd12, align 4, !tbaa !5
  %98 = bitcast i32* %sd20 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %98) #2
  %99 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p172 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %99, i32 0, i32 0
  %x173 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p172, i32 0, i32 0
  %100 = load i32, i32* %x173, align 4, !tbaa !155
  %101 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p174 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %101, i32 0, i32 0
  %x175 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p174, i32 0, i32 0
  %102 = load i32, i32* %x175, align 4, !tbaa !155
  %sub176 = sub nsw i32 %100, %102
  %cmp177 = icmp slt i32 %sub176, 0
  br i1 %cmp177, label %cond.true.178, label %cond.false.185

cond.true.178:                                    ; preds = %cond.end.170
  %103 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p179 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %103, i32 0, i32 0
  %x180 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p179, i32 0, i32 0
  %104 = load i32, i32* %x180, align 4, !tbaa !155
  %105 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p181 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %105, i32 0, i32 0
  %x182 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p181, i32 0, i32 0
  %106 = load i32, i32* %x182, align 4, !tbaa !155
  %sub183 = sub nsw i32 %104, %106
  %sub184 = sub nsw i32 0, %sub183
  br label %cond.end.191

cond.false.185:                                   ; preds = %cond.end.170
  %107 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p186 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %107, i32 0, i32 0
  %x187 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p186, i32 0, i32 0
  %108 = load i32, i32* %x187, align 4, !tbaa !155
  %109 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p188 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %109, i32 0, i32 0
  %x189 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p188, i32 0, i32 0
  %110 = load i32, i32* %x189, align 4, !tbaa !155
  %sub190 = sub nsw i32 %108, %110
  br label %cond.end.191

cond.end.191:                                     ; preds = %cond.false.185, %cond.true.178
  %cond192 = phi i32 [ %sub184, %cond.true.178 ], [ %sub190, %cond.false.185 ]
  %111 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p193 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %111, i32 0, i32 0
  %y194 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p193, i32 0, i32 1
  %112 = load i32, i32* %y194, align 4, !tbaa !156
  %113 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p195 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %113, i32 0, i32 0
  %y196 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p195, i32 0, i32 1
  %114 = load i32, i32* %y196, align 4, !tbaa !156
  %sub197 = sub nsw i32 %112, %114
  %cmp198 = icmp slt i32 %sub197, 0
  br i1 %cmp198, label %cond.true.199, label %cond.false.206

cond.true.199:                                    ; preds = %cond.end.191
  %115 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p200 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %115, i32 0, i32 0
  %y201 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p200, i32 0, i32 1
  %116 = load i32, i32* %y201, align 4, !tbaa !156
  %117 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p202 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %117, i32 0, i32 0
  %y203 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p202, i32 0, i32 1
  %118 = load i32, i32* %y203, align 4, !tbaa !156
  %sub204 = sub nsw i32 %116, %118
  %sub205 = sub nsw i32 0, %sub204
  br label %cond.end.212

cond.false.206:                                   ; preds = %cond.end.191
  %119 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p207 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %119, i32 0, i32 0
  %y208 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p207, i32 0, i32 1
  %120 = load i32, i32* %y208, align 4, !tbaa !156
  %121 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p209 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %121, i32 0, i32 0
  %y210 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p209, i32 0, i32 1
  %122 = load i32, i32* %y210, align 4, !tbaa !156
  %sub211 = sub nsw i32 %120, %122
  br label %cond.end.212

cond.end.212:                                     ; preds = %cond.false.206, %cond.true.199
  %cond213 = phi i32 [ %sub205, %cond.true.199 ], [ %sub211, %cond.false.206 ]
  %cmp214 = icmp sgt i32 %cond192, %cond213
  br i1 %cmp214, label %cond.true.215, label %cond.false.237

cond.true.215:                                    ; preds = %cond.end.212
  %123 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p216 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %123, i32 0, i32 0
  %x217 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p216, i32 0, i32 0
  %124 = load i32, i32* %x217, align 4, !tbaa !155
  %125 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p218 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %125, i32 0, i32 0
  %x219 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p218, i32 0, i32 0
  %126 = load i32, i32* %x219, align 4, !tbaa !155
  %sub220 = sub nsw i32 %124, %126
  %cmp221 = icmp slt i32 %sub220, 0
  br i1 %cmp221, label %cond.true.222, label %cond.false.229

cond.true.222:                                    ; preds = %cond.true.215
  %127 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p223 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %127, i32 0, i32 0
  %x224 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p223, i32 0, i32 0
  %128 = load i32, i32* %x224, align 4, !tbaa !155
  %129 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p225 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %129, i32 0, i32 0
  %x226 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p225, i32 0, i32 0
  %130 = load i32, i32* %x226, align 4, !tbaa !155
  %sub227 = sub nsw i32 %128, %130
  %sub228 = sub nsw i32 0, %sub227
  br label %cond.end.235

cond.false.229:                                   ; preds = %cond.true.215
  %131 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p230 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %131, i32 0, i32 0
  %x231 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p230, i32 0, i32 0
  %132 = load i32, i32* %x231, align 4, !tbaa !155
  %133 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p232 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %133, i32 0, i32 0
  %x233 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p232, i32 0, i32 0
  %134 = load i32, i32* %x233, align 4, !tbaa !155
  %sub234 = sub nsw i32 %132, %134
  br label %cond.end.235

cond.end.235:                                     ; preds = %cond.false.229, %cond.true.222
  %cond236 = phi i32 [ %sub228, %cond.true.222 ], [ %sub234, %cond.false.229 ]
  br label %cond.end.259

cond.false.237:                                   ; preds = %cond.end.212
  %135 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p238 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %135, i32 0, i32 0
  %y239 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p238, i32 0, i32 1
  %136 = load i32, i32* %y239, align 4, !tbaa !156
  %137 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p240 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %137, i32 0, i32 0
  %y241 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p240, i32 0, i32 1
  %138 = load i32, i32* %y241, align 4, !tbaa !156
  %sub242 = sub nsw i32 %136, %138
  %cmp243 = icmp slt i32 %sub242, 0
  br i1 %cmp243, label %cond.true.244, label %cond.false.251

cond.true.244:                                    ; preds = %cond.false.237
  %139 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p245 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %139, i32 0, i32 0
  %y246 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p245, i32 0, i32 1
  %140 = load i32, i32* %y246, align 4, !tbaa !156
  %141 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p247 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %141, i32 0, i32 0
  %y248 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p247, i32 0, i32 1
  %142 = load i32, i32* %y248, align 4, !tbaa !156
  %sub249 = sub nsw i32 %140, %142
  %sub250 = sub nsw i32 0, %sub249
  br label %cond.end.257

cond.false.251:                                   ; preds = %cond.false.237
  %143 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p252 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %143, i32 0, i32 0
  %y253 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p252, i32 0, i32 1
  %144 = load i32, i32* %y253, align 4, !tbaa !156
  %145 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p254 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %145, i32 0, i32 0
  %y255 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p254, i32 0, i32 1
  %146 = load i32, i32* %y255, align 4, !tbaa !156
  %sub256 = sub nsw i32 %144, %146
  br label %cond.end.257

cond.end.257:                                     ; preds = %cond.false.251, %cond.true.244
  %cond258 = phi i32 [ %sub250, %cond.true.244 ], [ %sub256, %cond.false.251 ]
  br label %cond.end.259

cond.end.259:                                     ; preds = %cond.end.257, %cond.end.235
  %cond260 = phi i32 [ %cond236, %cond.end.235 ], [ %cond258, %cond.end.257 ]
  store i32 %cond260, i32* %sd20, align 4, !tbaa !5
  %147 = bitcast i32* %sd1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %147) #2
  %148 = load i32, i32* %sd01, align 4, !tbaa !5
  %149 = load i32, i32* %sd12, align 4, !tbaa !5
  %cmp261 = icmp sgt i32 %148, %149
  br i1 %cmp261, label %cond.true.262, label %cond.false.263

cond.true.262:                                    ; preds = %cond.end.259
  %150 = load i32, i32* %sd01, align 4, !tbaa !5
  br label %cond.end.264

cond.false.263:                                   ; preds = %cond.end.259
  %151 = load i32, i32* %sd12, align 4, !tbaa !5
  br label %cond.end.264

cond.end.264:                                     ; preds = %cond.false.263, %cond.true.262
  %cond265 = phi i32 [ %150, %cond.true.262 ], [ %151, %cond.false.263 ]
  store i32 %cond265, i32* %sd1, align 4, !tbaa !5
  %152 = bitcast i32* %sd to i8*
  call void @llvm.lifetime.start(i64 4, i8* %152) #2
  %153 = load i32, i32* %sd1, align 4, !tbaa !5
  %154 = load i32, i32* %sd20, align 4, !tbaa !5
  %cmp266 = icmp sgt i32 %153, %154
  br i1 %cmp266, label %cond.true.267, label %cond.false.268

cond.true.267:                                    ; preds = %cond.end.264
  %155 = load i32, i32* %sd1, align 4, !tbaa !5
  br label %cond.end.269

cond.false.268:                                   ; preds = %cond.end.264
  %156 = load i32, i32* %sd20, align 4, !tbaa !5
  br label %cond.end.269

cond.end.269:                                     ; preds = %cond.false.268, %cond.true.267
  %cond270 = phi i32 [ %155, %cond.true.267 ], [ %156, %cond.false.268 ]
  store i32 %cond270, i32* %sd, align 4, !tbaa !5
  %157 = bitcast double* %cd to i8*
  call void @llvm.lifetime.start(i64 8, i8* %157) #2
  store double 0.000000e+00, double* %cd, align 8, !tbaa !112
  %158 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %158, i32 0, i32 9
  %159 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %cmp271 = icmp eq %struct.gs_function_s* %159, null
  br i1 %cmp271, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.269
  %160 = bitcast double* %d01 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %160) #2
  %161 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %162 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %162, i32 0, i32 1
  %163 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %164 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c272 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %164, i32 0, i32 1
  %165 = load %struct.patch_color_s*, %struct.patch_color_s** %c272, align 8, !tbaa !150
  %call = call double @color_span(%struct.patch_fill_state_s* %161, %struct.patch_color_s* %163, %struct.patch_color_s* %165) #5
  store double %call, double* %d01, align 8, !tbaa !112
  %166 = bitcast double* %d12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %166) #2
  %167 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %168 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c273 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %168, i32 0, i32 1
  %169 = load %struct.patch_color_s*, %struct.patch_color_s** %c273, align 8, !tbaa !150
  %170 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c274 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %170, i32 0, i32 1
  %171 = load %struct.patch_color_s*, %struct.patch_color_s** %c274, align 8, !tbaa !150
  %call275 = call double @color_span(%struct.patch_fill_state_s* %167, %struct.patch_color_s* %169, %struct.patch_color_s* %171) #5
  store double %call275, double* %d12, align 8, !tbaa !112
  %172 = bitcast double* %d20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %172) #2
  %173 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %174 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c276 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %174, i32 0, i32 1
  %175 = load %struct.patch_color_s*, %struct.patch_color_s** %c276, align 8, !tbaa !150
  %176 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c277 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %176, i32 0, i32 1
  %177 = load %struct.patch_color_s*, %struct.patch_color_s** %c277, align 8, !tbaa !150
  %call278 = call double @color_span(%struct.patch_fill_state_s* %173, %struct.patch_color_s* %175, %struct.patch_color_s* %177) #5
  store double %call278, double* %d20, align 8, !tbaa !112
  %178 = bitcast double* %cd1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %178) #2
  %179 = load double, double* %d01, align 8, !tbaa !112
  %180 = load double, double* %d12, align 8, !tbaa !112
  %cmp279 = fcmp ogt double %179, %180
  br i1 %cmp279, label %cond.true.280, label %cond.false.281

cond.true.280:                                    ; preds = %if.then
  %181 = load double, double* %d01, align 8, !tbaa !112
  br label %cond.end.282

cond.false.281:                                   ; preds = %if.then
  %182 = load double, double* %d12, align 8, !tbaa !112
  br label %cond.end.282

cond.end.282:                                     ; preds = %cond.false.281, %cond.true.280
  %cond283 = phi double [ %181, %cond.true.280 ], [ %182, %cond.false.281 ]
  store double %cond283, double* %cd1, align 8, !tbaa !112
  %183 = load double, double* %cd1, align 8, !tbaa !112
  %184 = load double, double* %d20, align 8, !tbaa !112
  %cmp284 = fcmp ogt double %183, %184
  br i1 %cmp284, label %cond.true.285, label %cond.false.286

cond.true.285:                                    ; preds = %cond.end.282
  %185 = load double, double* %cd1, align 8, !tbaa !112
  br label %cond.end.287

cond.false.286:                                   ; preds = %cond.end.282
  %186 = load double, double* %d20, align 8, !tbaa !112
  br label %cond.end.287

cond.end.287:                                     ; preds = %cond.false.286, %cond.true.285
  %cond288 = phi double [ %185, %cond.true.285 ], [ %186, %cond.false.286 ]
  store double %cond288, double* %cd, align 8, !tbaa !112
  %187 = bitcast double* %cd1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %187) #2
  %188 = bitcast double* %d20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %188) #2
  %189 = bitcast double* %d12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %189) #2
  %190 = bitcast double* %d01 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %190) #2
  br label %if.end

if.end:                                           ; preds = %cond.end.287, %cond.end.269
  %191 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %192 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %193 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %194 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %195 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l01.addr, align 8, !tbaa !1
  %196 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l12.addr, align 8, !tbaa !1
  %197 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l20.addr, align 8, !tbaa !1
  %198 = load double, double* %cd, align 8, !tbaa !112
  %199 = load i32, i32* %sd, align 4, !tbaa !5
  %call289 = call i32 @triangle_by_4(%struct.patch_fill_state_s* %191, %struct.shading_vertex_s* %192, %struct.shading_vertex_s* %193, %struct.shading_vertex_s* %194, %struct.wedge_vertex_list_t* %195, %struct.wedge_vertex_list_t* %196, %struct.wedge_vertex_list_t* %197, double %198, i32 %199) #5
  %200 = bitcast double* %cd to i8*
  call void @llvm.lifetime.end(i64 8, i8* %200) #2
  %201 = bitcast i32* %sd to i8*
  call void @llvm.lifetime.end(i64 4, i8* %201) #2
  %202 = bitcast i32* %sd1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %202) #2
  %203 = bitcast i32* %sd20 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %203) #2
  %204 = bitcast i32* %sd12 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %204) #2
  %205 = bitcast i32* %sd01 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %205) #2
  ret i32 %call289
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %l, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %0, i32 0, i32 1
  %1 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %cmp = icmp ne %struct.wedge_vertex_list_elem_s* %1, null
  br i1 %cmp, label %if.then, label %if.end.4

if.then:                                          ; preds = %entry
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %4 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %5 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %6 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call = call i32 @fill_wedge_from_list(%struct.patch_fill_state_s* %3, %struct.wedge_vertex_list_t* %4, %struct.patch_color_s* %5, %struct.patch_color_s* %6) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %7 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1 = icmp slt i32 %7, 0
  br i1 %cmp1, label %if.then.2, label %if.end

if.then.2:                                        ; preds = %if.then
  %8 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %10 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %call3 = call i32 @release_wedge_vertex_list(%struct.patch_fill_state_s* %9, %struct.wedge_vertex_list_t* %10, i32 1) #5
  store i32 %call3, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.2
  %11 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %11) #2
  br label %return

if.end.4:                                         ; preds = %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.4, %cleanup
  %12 = load i32, i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind
declare i8* @memset(i8*, i32, i64) #4

; Function Attrs: nounwind uwtable
define internal i32 @triangle_by_4(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, %struct.shading_vertex_s* %p2, %struct.wedge_vertex_list_t* %l01, %struct.wedge_vertex_list_t* %l12, %struct.wedge_vertex_list_t* %l20, double %cd, i32 %sd) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %p2.addr = alloca %struct.shading_vertex_s*, align 8
  %l01.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %l12.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %l20.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %cd.addr = alloca double, align 8
  %sd.addr = alloca i32, align 4
  %p01 = alloca %struct.shading_vertex_s, align 8
  %p12 = alloca %struct.shading_vertex_s, align 8
  %p20 = alloca %struct.shading_vertex_s, align 8
  %c = alloca [3 x %struct.patch_color_s*], align 16
  %L01 = alloca %struct.wedge_vertex_list_t, align 8
  %L12 = alloca %struct.wedge_vertex_list_t, align 8
  %L20 = alloca %struct.wedge_vertex_list_t, align 8
  %L = alloca [3 x %struct.wedge_vertex_list_t], align 16
  %inside_save = alloca i32, align 4
  %r = alloca %struct.gs_fixed_rect_s, align 4
  %r1 = alloca %struct.gs_fixed_rect_s, align 4
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %inside1 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %d01 = alloca double, align 8
  %d12 = alloca double, align 8
  %d20 = alloca double, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p2, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l01, %struct.wedge_vertex_list_t** %l01.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l12, %struct.wedge_vertex_list_t** %l12.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l20, %struct.wedge_vertex_list_t** %l20.addr, align 8, !tbaa !1
  store double %cd, double* %cd.addr, align 8, !tbaa !112
  store i32 %sd, i32* %sd.addr, align 4, !tbaa !5
  %0 = bitcast %struct.shading_vertex_s* %p01 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast %struct.shading_vertex_s* %p12 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = bitcast %struct.shading_vertex_s* %p20 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #2
  %3 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 24, i8* %3) #2
  %4 = bitcast %struct.wedge_vertex_list_t* %L01 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %4) #2
  %5 = bitcast %struct.wedge_vertex_list_t* %L12 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %5) #2
  %6 = bitcast %struct.wedge_vertex_list_t* %L20 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %6) #2
  %7 = bitcast [3 x %struct.wedge_vertex_list_t]* %L to i8*
  call void @llvm.lifetime.start(i64 72, i8* %7) #2
  %8 = bitcast i32* %inside_save to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 26
  %10 = load i32, i32* %inside, align 4, !tbaa !32
  store i32 %10, i32* %inside_save, align 4, !tbaa !5
  %11 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.start(i64 16, i8* %11) #2
  %12 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %12) #2
  %13 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  store i32 0, i32* %code, align 4, !tbaa !5
  %14 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %14) #2
  %15 = bitcast i32* %inside1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #2
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %16, i32 0, i32 26
  %17 = load i32, i32* %inside2, align 4, !tbaa !32
  store i32 %17, i32* %inside1, align 4, !tbaa !5
  %18 = load i32, i32* %inside1, align 4, !tbaa !5
  %tobool = icmp ne i32 %18, 0
  br i1 %tobool, label %if.end.64, label %if.then

if.then:                                          ; preds = %entry
  %19 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %19, i32 0, i32 0
  %20 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %20, i32 0, i32 0
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %21, i32 0, i32 0
  call void @bbox_of_points(%struct.gs_fixed_rect_s* %r, %struct.gs_fixed_point_s* %p, %struct.gs_fixed_point_s* %p3, %struct.gs_fixed_point_s* %p4, %struct.gs_fixed_point_s* null) #5
  %22 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  %23 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 4, i1 false), !tbaa.struct !137
  br label %do.body

do.body:                                          ; preds = %if.then
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %24, i32 0, i32 8
  %p5 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p5, i32 0, i32 0
  %25 = load i32, i32* %x, align 4, !tbaa !138
  %p6 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p6, i32 0, i32 0
  %26 = load i32, i32* %x7, align 4, !tbaa !134
  %cmp = icmp sgt i32 %25, %26
  br i1 %cmp, label %if.then.8, label %if.end

if.then.8:                                        ; preds = %do.body
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect9 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %27, i32 0, i32 8
  %p10 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect9, i32 0, i32 0
  %x11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p10, i32 0, i32 0
  %28 = load i32, i32* %x11, align 4, !tbaa !138
  %p13 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p13, i32 0, i32 0
  store i32 %28, i32* %x14, align 4, !tbaa !134
  br label %if.end

if.end:                                           ; preds = %if.then.8, %do.body
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect15 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %29, i32 0, i32 8
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect15, i32 0, i32 1
  %x16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 0
  %30 = load i32, i32* %x16, align 4, !tbaa !139
  %q17 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q17, i32 0, i32 0
  %31 = load i32, i32* %x18, align 4, !tbaa !136
  %cmp19 = icmp slt i32 %30, %31
  br i1 %cmp19, label %if.then.20, label %if.end.26

if.then.20:                                       ; preds = %if.end
  %32 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect21 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %32, i32 0, i32 8
  %q22 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect21, i32 0, i32 1
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q22, i32 0, i32 0
  %33 = load i32, i32* %x23, align 4, !tbaa !139
  %q24 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q24, i32 0, i32 0
  store i32 %33, i32* %x25, align 4, !tbaa !136
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.20, %if.end
  %34 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect27 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %34, i32 0, i32 8
  %p28 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect27, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p28, i32 0, i32 1
  %35 = load i32, i32* %y, align 4, !tbaa !140
  %p29 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p29, i32 0, i32 1
  %36 = load i32, i32* %y30, align 4, !tbaa !133
  %cmp31 = icmp sgt i32 %35, %36
  br i1 %cmp31, label %if.then.32, label %if.end.38

if.then.32:                                       ; preds = %if.end.26
  %37 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect33 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %37, i32 0, i32 8
  %p34 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect33, i32 0, i32 0
  %y35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p34, i32 0, i32 1
  %38 = load i32, i32* %y35, align 4, !tbaa !140
  %p36 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p36, i32 0, i32 1
  store i32 %38, i32* %y37, align 4, !tbaa !133
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.32, %if.end.26
  %39 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect39 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %39, i32 0, i32 8
  %q40 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect39, i32 0, i32 1
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q40, i32 0, i32 1
  %40 = load i32, i32* %y41, align 4, !tbaa !141
  %q42 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q42, i32 0, i32 1
  %41 = load i32, i32* %y43, align 4, !tbaa !135
  %cmp44 = icmp slt i32 %40, %41
  br i1 %cmp44, label %if.then.45, label %if.end.51

if.then.45:                                       ; preds = %if.end.38
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect46 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %42, i32 0, i32 8
  %q47 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect46, i32 0, i32 1
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q47, i32 0, i32 1
  %43 = load i32, i32* %y48, align 4, !tbaa !141
  %q49 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q49, i32 0, i32 1
  store i32 %43, i32* %y50, align 4, !tbaa !135
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.45, %if.end.38
  br label %do.cond

do.cond:                                          ; preds = %if.end.51
  br label %do.end

do.end:                                           ; preds = %do.cond
  %q52 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q52, i32 0, i32 0
  %44 = load i32, i32* %x53, align 4, !tbaa !136
  %p54 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x55 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p54, i32 0, i32 0
  %45 = load i32, i32* %x55, align 4, !tbaa !134
  %cmp56 = icmp sle i32 %44, %45
  br i1 %cmp56, label %if.then.62, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %q57 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q57, i32 0, i32 1
  %46 = load i32, i32* %y58, align 4, !tbaa !135
  %p59 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p59, i32 0, i32 1
  %47 = load i32, i32* %y60, align 4, !tbaa !133
  %cmp61 = icmp sle i32 %46, %47
  br i1 %cmp61, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

if.end.63:                                        ; preds = %lor.lhs.false
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %entry
  %48 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %48, %struct.patch_color_s** %arraydecay, i32 3) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %49 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp65 = icmp eq i8* %49, null
  br i1 %cmp65, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %if.end.64
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

if.end.67:                                        ; preds = %if.end.64
  %arrayidx = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %50 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %c68 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p01, i32 0, i32 1
  store %struct.patch_color_s* %50, %struct.patch_color_s** %c68, align 8, !tbaa !150
  %arrayidx69 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %51 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx69, align 8, !tbaa !1
  %c70 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p12, i32 0, i32 1
  store %struct.patch_color_s* %51, %struct.patch_color_s** %c70, align 8, !tbaa !150
  %arrayidx71 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 2
  %52 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx71, align 8, !tbaa !1
  %c72 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p20, i32 0, i32 1
  store %struct.patch_color_s* %52, %struct.patch_color_s** %c72, align 8, !tbaa !150
  %53 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %54 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %55 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %56 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %call73 = call i32 @try_device_linear_color(%struct.patch_fill_state_s* %53, i32 0, %struct.shading_vertex_s* %54, %struct.shading_vertex_s* %55, %struct.shading_vertex_s* %56) #5
  store i32 %call73, i32* %code, align 4, !tbaa !5
  %57 = load i32, i32* %code, align 4, !tbaa !5
  switch i32 %57, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb.74
    i32 1, label %sw.bb.110
  ]

sw.bb:                                            ; preds = %if.end.67
  br label %out

sw.bb.74:                                         ; preds = %if.end.67
  %58 = load i32, i32* %sd.addr, align 4, !tbaa !5
  %59 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %59, i32 0, i32 19
  %60 = load i32, i32* %decomposition_limit, align 4, !tbaa !34
  %mul = mul nsw i32 %60, 4
  %cmp75 = icmp slt i32 %58, %mul
  br i1 %cmp75, label %if.then.76, label %if.end.78

if.then.76:                                       ; preds = %sw.bb.74
  %61 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %62 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %63 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %64 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %call77 = call i32 @constant_color_triangle(%struct.patch_fill_state_s* %61, %struct.shading_vertex_s* %62, %struct.shading_vertex_s* %63, %struct.shading_vertex_s* %64) #5
  store i32 %call77, i32* %code, align 4, !tbaa !5
  br label %out

if.end.78:                                        ; preds = %sw.bb.74
  %65 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %65, i32 0, i32 9
  %66 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %cmp79 = icmp ne %struct.gs_function_s* %66, null
  br i1 %cmp79, label %if.then.80, label %if.else

if.then.80:                                       ; preds = %if.end.78
  %67 = bitcast double* %d01 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %67) #2
  %68 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %69 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c81 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %69, i32 0, i32 1
  %70 = load %struct.patch_color_s*, %struct.patch_color_s** %c81, align 8, !tbaa !150
  %71 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c82 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %71, i32 0, i32 1
  %72 = load %struct.patch_color_s*, %struct.patch_color_s** %c82, align 8, !tbaa !150
  %call83 = call double @color_span(%struct.patch_fill_state_s* %68, %struct.patch_color_s* %70, %struct.patch_color_s* %72) #5
  store double %call83, double* %d01, align 8, !tbaa !112
  %73 = bitcast double* %d12 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %73) #2
  %74 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %75 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c84 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %75, i32 0, i32 1
  %76 = load %struct.patch_color_s*, %struct.patch_color_s** %c84, align 8, !tbaa !150
  %77 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c85 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %77, i32 0, i32 1
  %78 = load %struct.patch_color_s*, %struct.patch_color_s** %c85, align 8, !tbaa !150
  %call86 = call double @color_span(%struct.patch_fill_state_s* %74, %struct.patch_color_s* %76, %struct.patch_color_s* %78) #5
  store double %call86, double* %d12, align 8, !tbaa !112
  %79 = bitcast double* %d20 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %79) #2
  %80 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %81 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c87 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %81, i32 0, i32 1
  %82 = load %struct.patch_color_s*, %struct.patch_color_s** %c87, align 8, !tbaa !150
  %83 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c88 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %83, i32 0, i32 1
  %84 = load %struct.patch_color_s*, %struct.patch_color_s** %c88, align 8, !tbaa !150
  %call89 = call double @color_span(%struct.patch_fill_state_s* %80, %struct.patch_color_s* %82, %struct.patch_color_s* %84) #5
  store double %call89, double* %d20, align 8, !tbaa !112
  %85 = load double, double* %d01, align 8, !tbaa !112
  %86 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %86, i32 0, i32 21
  %87 = load double, double* %smoothness, align 8, !tbaa !50
  %div = fdiv double %87, 1.000000e+00
  %cmp90 = fcmp ole double %85, %div
  br i1 %cmp90, label %land.lhs.true, label %if.end.100

land.lhs.true:                                    ; preds = %if.then.80
  %88 = load double, double* %d12, align 8, !tbaa !112
  %89 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness91 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %89, i32 0, i32 21
  %90 = load double, double* %smoothness91, align 8, !tbaa !50
  %div92 = fdiv double %90, 1.000000e+00
  %cmp93 = fcmp ole double %88, %div92
  br i1 %cmp93, label %land.lhs.true.94, label %if.end.100

land.lhs.true.94:                                 ; preds = %land.lhs.true
  %91 = load double, double* %d20, align 8, !tbaa !112
  %92 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness95 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %92, i32 0, i32 21
  %93 = load double, double* %smoothness95, align 8, !tbaa !50
  %div96 = fdiv double %93, 1.000000e+00
  %cmp97 = fcmp ole double %91, %div96
  br i1 %cmp97, label %if.then.98, label %if.end.100

if.then.98:                                       ; preds = %land.lhs.true.94
  %94 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %95 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %96 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %97 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %call99 = call i32 @constant_color_triangle(%struct.patch_fill_state_s* %94, %struct.shading_vertex_s* %95, %struct.shading_vertex_s* %96, %struct.shading_vertex_s* %97) #5
  store i32 %call99, i32* %code, align 4, !tbaa !5
  store i32 5, i32* %cleanup.dest.slot
  br label %cleanup

if.end.100:                                       ; preds = %land.lhs.true.94, %land.lhs.true, %if.then.80
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.98, %if.end.100
  %98 = bitcast double* %d20 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %98) #2
  %99 = bitcast double* %d12 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %99) #2
  %100 = bitcast double* %d01 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %100) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.242 [
    i32 0, label %cleanup.cont
    i32 5, label %out
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.109

if.else:                                          ; preds = %if.end.78
  %101 = load double, double* %cd.addr, align 8, !tbaa !112
  %102 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness103 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %102, i32 0, i32 21
  %103 = load double, double* %smoothness103, align 8, !tbaa !50
  %div104 = fdiv double %103, 1.000000e+00
  %cmp105 = fcmp ole double %101, %div104
  br i1 %cmp105, label %if.then.106, label %if.end.108

if.then.106:                                      ; preds = %if.else
  %104 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %105 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %106 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %107 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %call107 = call i32 @constant_color_triangle(%struct.patch_fill_state_s* %104, %struct.shading_vertex_s* %105, %struct.shading_vertex_s* %106, %struct.shading_vertex_s* %107) #5
  store i32 %call107, i32* %code, align 4, !tbaa !5
  br label %out

if.end.108:                                       ; preds = %if.else
  br label %if.end.109

if.end.109:                                       ; preds = %if.end.108, %cleanup.cont
  br label %sw.epilog

sw.bb.110:                                        ; preds = %if.end.67
  %108 = load i32, i32* %sd.addr, align 4, !tbaa !5
  %109 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit111 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %109, i32 0, i32 19
  %110 = load i32, i32* %decomposition_limit111, align 4, !tbaa !34
  %cmp112 = icmp slt i32 %108, %110
  br i1 %cmp112, label %if.then.113, label %if.end.115

if.then.113:                                      ; preds = %sw.bb.110
  %111 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %112 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %113 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %114 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %call114 = call i32 @constant_color_triangle(%struct.patch_fill_state_s* %111, %struct.shading_vertex_s* %112, %struct.shading_vertex_s* %113, %struct.shading_vertex_s* %114) #5
  store i32 %call114, i32* %code, align 4, !tbaa !5
  br label %out

if.end.115:                                       ; preds = %sw.bb.110
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.67
  br label %out

sw.epilog:                                        ; preds = %if.end.115, %if.end.109
  %115 = load i32, i32* %inside1, align 4, !tbaa !5
  %tobool116 = icmp ne i32 %115, 0
  br i1 %tobool116, label %if.end.144, label %if.then.117

if.then.117:                                      ; preds = %sw.epilog
  %p118 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x119 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p118, i32 0, i32 0
  %116 = load i32, i32* %x119, align 4, !tbaa !134
  %p120 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %x121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p120, i32 0, i32 0
  %117 = load i32, i32* %x121, align 4, !tbaa !134
  %cmp122 = icmp eq i32 %116, %117
  br i1 %cmp122, label %land.lhs.true.123, label %if.end.143

land.lhs.true.123:                                ; preds = %if.then.117
  %p124 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y125 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p124, i32 0, i32 1
  %118 = load i32, i32* %y125, align 4, !tbaa !133
  %p126 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %y127 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p126, i32 0, i32 1
  %119 = load i32, i32* %y127, align 4, !tbaa !133
  %cmp128 = icmp eq i32 %118, %119
  br i1 %cmp128, label %land.lhs.true.129, label %if.end.143

land.lhs.true.129:                                ; preds = %land.lhs.true.123
  %q130 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x131 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q130, i32 0, i32 0
  %120 = load i32, i32* %x131, align 4, !tbaa !136
  %q132 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %x133 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q132, i32 0, i32 0
  %121 = load i32, i32* %x133, align 4, !tbaa !136
  %cmp134 = icmp eq i32 %120, %121
  br i1 %cmp134, label %land.lhs.true.135, label %if.end.143

land.lhs.true.135:                                ; preds = %land.lhs.true.129
  %q136 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y137 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q136, i32 0, i32 1
  %122 = load i32, i32* %y137, align 4, !tbaa !135
  %q138 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %y139 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q138, i32 0, i32 1
  %123 = load i32, i32* %y139, align 4, !tbaa !135
  %cmp140 = icmp eq i32 %122, %123
  br i1 %cmp140, label %if.then.141, label %if.end.143

if.then.141:                                      ; preds = %land.lhs.true.135
  %124 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside142 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %124, i32 0, i32 26
  store i32 1, i32* %inside142, align 4, !tbaa !32
  br label %if.end.143

if.end.143:                                       ; preds = %if.then.141, %land.lhs.true.135, %land.lhs.true.129, %land.lhs.true.123, %if.then.117
  br label %if.end.144

if.end.144:                                       ; preds = %if.end.143, %sw.epilog
  %125 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %126 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %127 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %arrayidx145 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %128 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx145, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %125, %struct.shading_vertex_s* %126, %struct.shading_vertex_s* %127, i32 2, %struct.shading_vertex_s* %p01, %struct.patch_color_s* %128) #5
  %129 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %130 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %131 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %arrayidx146 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %132 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx146, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %129, %struct.shading_vertex_s* %130, %struct.shading_vertex_s* %131, i32 2, %struct.shading_vertex_s* %p12, %struct.patch_color_s* %132) #5
  %133 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %134 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %135 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %arrayidx147 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 2
  %136 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx147, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %133, %struct.shading_vertex_s* %134, %struct.shading_vertex_s* %135, i32 2, %struct.shading_vertex_s* %p20, %struct.patch_color_s* %136) #5
  %arraydecay148 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i32 0
  call void @init_wedge_vertex_list(%struct.wedge_vertex_list_t* %arraydecay148, i32 3) #5
  %137 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %138 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l01.addr, align 8, !tbaa !1
  %139 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p149 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %139, i32 0, i32 0
  %140 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p150 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %140, i32 0, i32 0
  %p151 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p01, i32 0, i32 0
  %call152 = call i32 @make_wedge_median(%struct.patch_fill_state_s* %137, %struct.wedge_vertex_list_t* %L01, %struct.wedge_vertex_list_t* %138, i32 1, %struct.gs_fixed_point_s* %p149, %struct.gs_fixed_point_s* %p150, %struct.gs_fixed_point_s* %p151) #5
  store i32 %call152, i32* %code, align 4, !tbaa !5
  %141 = load i32, i32* %code, align 4, !tbaa !5
  %cmp153 = icmp sge i32 %141, 0
  br i1 %cmp153, label %if.then.154, label %if.end.159

if.then.154:                                      ; preds = %if.end.144
  %142 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %143 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l12.addr, align 8, !tbaa !1
  %144 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p155 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %144, i32 0, i32 0
  %145 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p156 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %145, i32 0, i32 0
  %p157 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p12, i32 0, i32 0
  %call158 = call i32 @make_wedge_median(%struct.patch_fill_state_s* %142, %struct.wedge_vertex_list_t* %L12, %struct.wedge_vertex_list_t* %143, i32 1, %struct.gs_fixed_point_s* %p155, %struct.gs_fixed_point_s* %p156, %struct.gs_fixed_point_s* %p157) #5
  store i32 %call158, i32* %code, align 4, !tbaa !5
  br label %if.end.159

if.end.159:                                       ; preds = %if.then.154, %if.end.144
  %146 = load i32, i32* %code, align 4, !tbaa !5
  %cmp160 = icmp sge i32 %146, 0
  br i1 %cmp160, label %if.then.161, label %if.end.166

if.then.161:                                      ; preds = %if.end.159
  %147 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %148 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l20.addr, align 8, !tbaa !1
  %149 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p162 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %149, i32 0, i32 0
  %150 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p163 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %150, i32 0, i32 0
  %p164 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p20, i32 0, i32 0
  %call165 = call i32 @make_wedge_median(%struct.patch_fill_state_s* %147, %struct.wedge_vertex_list_t* %L20, %struct.wedge_vertex_list_t* %148, i32 0, %struct.gs_fixed_point_s* %p162, %struct.gs_fixed_point_s* %p163, %struct.gs_fixed_point_s* %p164) #5
  store i32 %call165, i32* %code, align 4, !tbaa !5
  br label %if.end.166

if.end.166:                                       ; preds = %if.then.161, %if.end.159
  %151 = load i32, i32* %code, align 4, !tbaa !5
  %cmp167 = icmp sge i32 %151, 0
  br i1 %cmp167, label %if.then.168, label %if.end.173

if.then.168:                                      ; preds = %if.end.166
  %152 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %153 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %arrayidx169 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 0
  %154 = load double, double* %cd.addr, align 8, !tbaa !112
  %div170 = fdiv double %154, 2.000000e+00
  %155 = load i32, i32* %sd.addr, align 4, !tbaa !5
  %div171 = sdiv i32 %155, 2
  %call172 = call i32 @triangle_by_4(%struct.patch_fill_state_s* %152, %struct.shading_vertex_s* %153, %struct.shading_vertex_s* %p01, %struct.shading_vertex_s* %p20, %struct.wedge_vertex_list_t* %L01, %struct.wedge_vertex_list_t* %arrayidx169, %struct.wedge_vertex_list_t* %L20, double %div170, i32 %div171) #5
  store i32 %call172, i32* %code, align 4, !tbaa !5
  br label %if.end.173

if.end.173:                                       ; preds = %if.then.168, %if.end.166
  %156 = load i32, i32* %code, align 4, !tbaa !5
  %cmp174 = icmp sge i32 %156, 0
  br i1 %cmp174, label %if.then.175, label %if.end.180

if.then.175:                                      ; preds = %if.end.173
  %157 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l01.addr, align 8, !tbaa !1
  call void @move_wedge(%struct.wedge_vertex_list_t* %L01, %struct.wedge_vertex_list_t* %157, i32 1) #5
  %158 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l20.addr, align 8, !tbaa !1
  call void @move_wedge(%struct.wedge_vertex_list_t* %L20, %struct.wedge_vertex_list_t* %158, i32 0) #5
  %159 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %160 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %arrayidx176 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 1
  %161 = load double, double* %cd.addr, align 8, !tbaa !112
  %div177 = fdiv double %161, 2.000000e+00
  %162 = load i32, i32* %sd.addr, align 4, !tbaa !5
  %div178 = sdiv i32 %162, 2
  %call179 = call i32 @triangle_by_4(%struct.patch_fill_state_s* %159, %struct.shading_vertex_s* %160, %struct.shading_vertex_s* %p12, %struct.shading_vertex_s* %p01, %struct.wedge_vertex_list_t* %L12, %struct.wedge_vertex_list_t* %arrayidx176, %struct.wedge_vertex_list_t* %L01, double %div177, i32 %div178) #5
  store i32 %call179, i32* %code, align 4, !tbaa !5
  br label %if.end.180

if.end.180:                                       ; preds = %if.then.175, %if.end.173
  %163 = load i32, i32* %code, align 4, !tbaa !5
  %cmp181 = icmp sge i32 %163, 0
  br i1 %cmp181, label %if.then.182, label %if.end.187

if.then.182:                                      ; preds = %if.end.180
  %164 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l12.addr, align 8, !tbaa !1
  call void @move_wedge(%struct.wedge_vertex_list_t* %L12, %struct.wedge_vertex_list_t* %164, i32 1) #5
  %165 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %166 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %arrayidx183 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 2
  %167 = load double, double* %cd.addr, align 8, !tbaa !112
  %div184 = fdiv double %167, 2.000000e+00
  %168 = load i32, i32* %sd.addr, align 4, !tbaa !5
  %div185 = sdiv i32 %168, 2
  %call186 = call i32 @triangle_by_4(%struct.patch_fill_state_s* %165, %struct.shading_vertex_s* %166, %struct.shading_vertex_s* %p20, %struct.shading_vertex_s* %p12, %struct.wedge_vertex_list_t* %L20, %struct.wedge_vertex_list_t* %arrayidx183, %struct.wedge_vertex_list_t* %L12, double %div184, i32 %div185) #5
  store i32 %call186, i32* %code, align 4, !tbaa !5
  br label %if.end.187

if.end.187:                                       ; preds = %if.then.182, %if.end.180
  %169 = load i32, i32* %code, align 4, !tbaa !5
  %cmp188 = icmp sge i32 %169, 0
  br i1 %cmp188, label %if.then.189, label %if.end.201

if.then.189:                                      ; preds = %if.end.187
  %arrayidx190 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 2
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %arrayidx190, i32 0, i32 0
  store i32 1, i32* %last_side, align 4, !tbaa !172
  %arrayidx191 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 1
  %last_side192 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %arrayidx191, i32 0, i32 0
  store i32 1, i32* %last_side192, align 4, !tbaa !172
  %arrayidx193 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 0
  %last_side194 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %arrayidx193, i32 0, i32 0
  store i32 1, i32* %last_side194, align 4, !tbaa !172
  %170 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx195 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 1
  %arrayidx196 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 2
  %arrayidx197 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 0
  %171 = load double, double* %cd.addr, align 8, !tbaa !112
  %div198 = fdiv double %171, 2.000000e+00
  %172 = load i32, i32* %sd.addr, align 4, !tbaa !5
  %div199 = sdiv i32 %172, 2
  %call200 = call i32 @triangle_by_4(%struct.patch_fill_state_s* %170, %struct.shading_vertex_s* %p01, %struct.shading_vertex_s* %p12, %struct.shading_vertex_s* %p20, %struct.wedge_vertex_list_t* %arrayidx195, %struct.wedge_vertex_list_t* %arrayidx196, %struct.wedge_vertex_list_t* %arrayidx197, double %div198, i32 %div199) #5
  store i32 %call200, i32* %code, align 4, !tbaa !5
  br label %if.end.201

if.end.201:                                       ; preds = %if.then.189, %if.end.187
  %173 = load i32, i32* %code, align 4, !tbaa !5
  %cmp202 = icmp sge i32 %173, 0
  br i1 %cmp202, label %if.then.203, label %if.end.207

if.then.203:                                      ; preds = %if.end.201
  %174 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %175 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l01.addr, align 8, !tbaa !1
  %176 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c204 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %176, i32 0, i32 1
  %177 = load %struct.patch_color_s*, %struct.patch_color_s** %c204, align 8, !tbaa !150
  %178 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c205 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %178, i32 0, i32 1
  %179 = load %struct.patch_color_s*, %struct.patch_color_s** %c205, align 8, !tbaa !150
  %call206 = call i32 @close_wedge_median(%struct.patch_fill_state_s* %174, %struct.wedge_vertex_list_t* %175, %struct.patch_color_s* %177, %struct.patch_color_s* %179) #5
  store i32 %call206, i32* %code, align 4, !tbaa !5
  br label %if.end.207

if.end.207:                                       ; preds = %if.then.203, %if.end.201
  %180 = load i32, i32* %code, align 4, !tbaa !5
  %cmp208 = icmp sge i32 %180, 0
  br i1 %cmp208, label %if.then.209, label %if.end.213

if.then.209:                                      ; preds = %if.end.207
  %181 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %182 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l12.addr, align 8, !tbaa !1
  %183 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c210 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %183, i32 0, i32 1
  %184 = load %struct.patch_color_s*, %struct.patch_color_s** %c210, align 8, !tbaa !150
  %185 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c211 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %185, i32 0, i32 1
  %186 = load %struct.patch_color_s*, %struct.patch_color_s** %c211, align 8, !tbaa !150
  %call212 = call i32 @close_wedge_median(%struct.patch_fill_state_s* %181, %struct.wedge_vertex_list_t* %182, %struct.patch_color_s* %184, %struct.patch_color_s* %186) #5
  store i32 %call212, i32* %code, align 4, !tbaa !5
  br label %if.end.213

if.end.213:                                       ; preds = %if.then.209, %if.end.207
  %187 = load i32, i32* %code, align 4, !tbaa !5
  %cmp214 = icmp sge i32 %187, 0
  br i1 %cmp214, label %if.then.215, label %if.end.219

if.then.215:                                      ; preds = %if.end.213
  %188 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %189 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l20.addr, align 8, !tbaa !1
  %190 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c216 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %190, i32 0, i32 1
  %191 = load %struct.patch_color_s*, %struct.patch_color_s** %c216, align 8, !tbaa !150
  %192 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c217 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %192, i32 0, i32 1
  %193 = load %struct.patch_color_s*, %struct.patch_color_s** %c217, align 8, !tbaa !150
  %call218 = call i32 @close_wedge_median(%struct.patch_fill_state_s* %188, %struct.wedge_vertex_list_t* %189, %struct.patch_color_s* %191, %struct.patch_color_s* %193) #5
  store i32 %call218, i32* %code, align 4, !tbaa !5
  br label %if.end.219

if.end.219:                                       ; preds = %if.then.215, %if.end.213
  %194 = load i32, i32* %code, align 4, !tbaa !5
  %cmp220 = icmp sge i32 %194, 0
  br i1 %cmp220, label %if.then.221, label %if.end.226

if.then.221:                                      ; preds = %if.end.219
  %195 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx222 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 0
  %c223 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p01, i32 0, i32 1
  %196 = load %struct.patch_color_s*, %struct.patch_color_s** %c223, align 8, !tbaa !150
  %c224 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p20, i32 0, i32 1
  %197 = load %struct.patch_color_s*, %struct.patch_color_s** %c224, align 8, !tbaa !150
  %call225 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %195, %struct.wedge_vertex_list_t* %arrayidx222, %struct.patch_color_s* %196, %struct.patch_color_s* %197) #5
  store i32 %call225, i32* %code, align 4, !tbaa !5
  br label %if.end.226

if.end.226:                                       ; preds = %if.then.221, %if.end.219
  %198 = load i32, i32* %code, align 4, !tbaa !5
  %cmp227 = icmp sge i32 %198, 0
  br i1 %cmp227, label %if.then.228, label %if.end.233

if.then.228:                                      ; preds = %if.end.226
  %199 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx229 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 1
  %c230 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p12, i32 0, i32 1
  %200 = load %struct.patch_color_s*, %struct.patch_color_s** %c230, align 8, !tbaa !150
  %c231 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p01, i32 0, i32 1
  %201 = load %struct.patch_color_s*, %struct.patch_color_s** %c231, align 8, !tbaa !150
  %call232 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %199, %struct.wedge_vertex_list_t* %arrayidx229, %struct.patch_color_s* %200, %struct.patch_color_s* %201) #5
  store i32 %call232, i32* %code, align 4, !tbaa !5
  br label %if.end.233

if.end.233:                                       ; preds = %if.then.228, %if.end.226
  %202 = load i32, i32* %code, align 4, !tbaa !5
  %cmp234 = icmp sge i32 %202, 0
  br i1 %cmp234, label %if.then.235, label %if.end.240

if.then.235:                                      ; preds = %if.end.233
  %203 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx236 = getelementptr inbounds [3 x %struct.wedge_vertex_list_t], [3 x %struct.wedge_vertex_list_t]* %L, i32 0, i64 2
  %c237 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p20, i32 0, i32 1
  %204 = load %struct.patch_color_s*, %struct.patch_color_s** %c237, align 8, !tbaa !150
  %c238 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p12, i32 0, i32 1
  %205 = load %struct.patch_color_s*, %struct.patch_color_s** %c238, align 8, !tbaa !150
  %call239 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %203, %struct.wedge_vertex_list_t* %arrayidx236, %struct.patch_color_s* %204, %struct.patch_color_s* %205) #5
  store i32 %call239, i32* %code, align 4, !tbaa !5
  br label %if.end.240

if.end.240:                                       ; preds = %if.then.235, %if.end.233
  %206 = load i32, i32* %inside_save, align 4, !tbaa !5
  %207 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside241 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %207, i32 0, i32 26
  store i32 %206, i32* %inside241, align 4, !tbaa !32
  br label %out

out:                                              ; preds = %if.end.240, %cleanup, %sw.default, %if.then.113, %if.then.106, %if.then.76, %sw.bb
  %208 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %209 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %208, i8* %209, i32 3) #5
  %210 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %210, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.242

cleanup.242:                                      ; preds = %out, %cleanup, %if.then.66, %if.then.62
  %211 = bitcast i32* %inside1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %211) #2
  %212 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %212) #2
  %213 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %213) #2
  %214 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %214) #2
  %215 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.end(i64 16, i8* %215) #2
  %216 = bitcast i32* %inside_save to i8*
  call void @llvm.lifetime.end(i64 4, i8* %216) #2
  %217 = bitcast [3 x %struct.wedge_vertex_list_t]* %L to i8*
  call void @llvm.lifetime.end(i64 72, i8* %217) #2
  %218 = bitcast %struct.wedge_vertex_list_t* %L20 to i8*
  call void @llvm.lifetime.end(i64 24, i8* %218) #2
  %219 = bitcast %struct.wedge_vertex_list_t* %L12 to i8*
  call void @llvm.lifetime.end(i64 24, i8* %219) #2
  %220 = bitcast %struct.wedge_vertex_list_t* %L01 to i8*
  call void @llvm.lifetime.end(i64 24, i8* %220) #2
  %221 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 24, i8* %221) #2
  %222 = bitcast %struct.shading_vertex_s* %p20 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %222) #2
  %223 = bitcast %struct.shading_vertex_s* %p12 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %223) #2
  %224 = bitcast %struct.shading_vertex_s* %p01 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %224) #2
  %225 = load i32, i32* %retval
  ret i32 %225
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @bbox_of_points(%struct.gs_fixed_rect_s* %r, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %p2, %struct.gs_fixed_point_s* %p3) #1 {
entry:
  %r.addr = alloca %struct.gs_fixed_rect_s*, align 8
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p2.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p3.addr = alloca %struct.gs_fixed_point_s*, align 8
  store %struct.gs_fixed_rect_s* %r, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p2, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p3, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %0 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %0, i32 0, i32 0
  %1 = load i32, i32* %x, align 4, !tbaa !109
  %2 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %2, i32 0, i32 1
  %x1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 0
  store i32 %1, i32* %x1, align 4, !tbaa !136
  %3 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %3, i32 0, i32 0
  %x2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  store i32 %1, i32* %x2, align 4, !tbaa !134
  %4 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %4, i32 0, i32 1
  %5 = load i32, i32* %y, align 4, !tbaa !110
  %6 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q3 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %6, i32 0, i32 1
  %y4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q3, i32 0, i32 1
  store i32 %5, i32* %y4, align 4, !tbaa !135
  %7 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %7, i32 0, i32 0
  %y6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p5, i32 0, i32 1
  store i32 %5, i32* %y6, align 4, !tbaa !133
  %8 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %8, i32 0, i32 0
  %x8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p7, i32 0, i32 0
  %9 = load i32, i32* %x8, align 4, !tbaa !134
  %10 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %10, i32 0, i32 0
  %11 = load i32, i32* %x9, align 4, !tbaa !109
  %cmp = icmp sgt i32 %9, %11
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %12 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %12, i32 0, i32 0
  %13 = load i32, i32* %x10, align 4, !tbaa !109
  %14 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %14, i32 0, i32 0
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p11, i32 0, i32 0
  store i32 %13, i32* %x12, align 4, !tbaa !134
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q13 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %15, i32 0, i32 1
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q13, i32 0, i32 0
  %16 = load i32, i32* %x14, align 4, !tbaa !136
  %17 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %17, i32 0, i32 0
  %18 = load i32, i32* %x15, align 4, !tbaa !109
  %cmp16 = icmp slt i32 %16, %18
  br i1 %cmp16, label %if.then.17, label %if.end.21

if.then.17:                                       ; preds = %if.end
  %19 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %19, i32 0, i32 0
  %20 = load i32, i32* %x18, align 4, !tbaa !109
  %21 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q19 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %21, i32 0, i32 1
  %x20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q19, i32 0, i32 0
  store i32 %20, i32* %x20, align 4, !tbaa !136
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.17, %if.end
  %22 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %22, i32 0, i32 0
  %y23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p22, i32 0, i32 1
  %23 = load i32, i32* %y23, align 4, !tbaa !133
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %24, i32 0, i32 1
  %25 = load i32, i32* %y24, align 4, !tbaa !110
  %cmp25 = icmp sgt i32 %23, %25
  br i1 %cmp25, label %if.then.26, label %if.end.30

if.then.26:                                       ; preds = %if.end.21
  %26 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %26, i32 0, i32 1
  %27 = load i32, i32* %y27, align 4, !tbaa !110
  %28 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p28 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %28, i32 0, i32 0
  %y29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p28, i32 0, i32 1
  store i32 %27, i32* %y29, align 4, !tbaa !133
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.26, %if.end.21
  %29 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q31 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %29, i32 0, i32 1
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q31, i32 0, i32 1
  %30 = load i32, i32* %y32, align 4, !tbaa !135
  %31 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y33 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %31, i32 0, i32 1
  %32 = load i32, i32* %y33, align 4, !tbaa !110
  %cmp34 = icmp slt i32 %30, %32
  br i1 %cmp34, label %if.then.35, label %if.end.39

if.then.35:                                       ; preds = %if.end.30
  %33 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %33, i32 0, i32 1
  %34 = load i32, i32* %y36, align 4, !tbaa !110
  %35 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q37 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %35, i32 0, i32 1
  %y38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q37, i32 0, i32 1
  store i32 %34, i32* %y38, align 4, !tbaa !135
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.35, %if.end.30
  %36 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p40 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %36, i32 0, i32 0
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p40, i32 0, i32 0
  %37 = load i32, i32* %x41, align 4, !tbaa !134
  %38 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %x42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %38, i32 0, i32 0
  %39 = load i32, i32* %x42, align 4, !tbaa !109
  %cmp43 = icmp sgt i32 %37, %39
  br i1 %cmp43, label %if.then.44, label %if.end.48

if.then.44:                                       ; preds = %if.end.39
  %40 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %x45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %40, i32 0, i32 0
  %41 = load i32, i32* %x45, align 4, !tbaa !109
  %42 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p46 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %42, i32 0, i32 0
  %x47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p46, i32 0, i32 0
  store i32 %41, i32* %x47, align 4, !tbaa !134
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.44, %if.end.39
  %43 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q49 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %43, i32 0, i32 1
  %x50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q49, i32 0, i32 0
  %44 = load i32, i32* %x50, align 4, !tbaa !136
  %45 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %x51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %45, i32 0, i32 0
  %46 = load i32, i32* %x51, align 4, !tbaa !109
  %cmp52 = icmp slt i32 %44, %46
  br i1 %cmp52, label %if.then.53, label %if.end.57

if.then.53:                                       ; preds = %if.end.48
  %47 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %x54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %47, i32 0, i32 0
  %48 = load i32, i32* %x54, align 4, !tbaa !109
  %49 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q55 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %49, i32 0, i32 1
  %x56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q55, i32 0, i32 0
  store i32 %48, i32* %x56, align 4, !tbaa !136
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.53, %if.end.48
  %50 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p58 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %50, i32 0, i32 0
  %y59 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p58, i32 0, i32 1
  %51 = load i32, i32* %y59, align 4, !tbaa !133
  %52 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %y60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %52, i32 0, i32 1
  %53 = load i32, i32* %y60, align 4, !tbaa !110
  %cmp61 = icmp sgt i32 %51, %53
  br i1 %cmp61, label %if.then.62, label %if.end.66

if.then.62:                                       ; preds = %if.end.57
  %54 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %54, i32 0, i32 1
  %55 = load i32, i32* %y63, align 4, !tbaa !110
  %56 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p64 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %56, i32 0, i32 0
  %y65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p64, i32 0, i32 1
  store i32 %55, i32* %y65, align 4, !tbaa !133
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.62, %if.end.57
  %57 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q67 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %57, i32 0, i32 1
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q67, i32 0, i32 1
  %58 = load i32, i32* %y68, align 4, !tbaa !135
  %59 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %y69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %59, i32 0, i32 1
  %60 = load i32, i32* %y69, align 4, !tbaa !110
  %cmp70 = icmp slt i32 %58, %60
  br i1 %cmp70, label %if.then.71, label %if.end.75

if.then.71:                                       ; preds = %if.end.66
  %61 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %y72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %61, i32 0, i32 1
  %62 = load i32, i32* %y72, align 4, !tbaa !110
  %63 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q73 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %63, i32 0, i32 1
  %y74 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q73, i32 0, i32 1
  store i32 %62, i32* %y74, align 4, !tbaa !135
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.71, %if.end.66
  %64 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %cmp76 = icmp eq %struct.gs_fixed_point_s* %64, null
  br i1 %cmp76, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.end.75
  br label %if.end.114

if.end.78:                                        ; preds = %if.end.75
  %65 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p79 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %65, i32 0, i32 0
  %x80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p79, i32 0, i32 0
  %66 = load i32, i32* %x80, align 4, !tbaa !134
  %67 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %x81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %67, i32 0, i32 0
  %68 = load i32, i32* %x81, align 4, !tbaa !109
  %cmp82 = icmp sgt i32 %66, %68
  br i1 %cmp82, label %if.then.83, label %if.end.87

if.then.83:                                       ; preds = %if.end.78
  %69 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %x84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %69, i32 0, i32 0
  %70 = load i32, i32* %x84, align 4, !tbaa !109
  %71 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p85 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %71, i32 0, i32 0
  %x86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p85, i32 0, i32 0
  store i32 %70, i32* %x86, align 4, !tbaa !134
  br label %if.end.87

if.end.87:                                        ; preds = %if.then.83, %if.end.78
  %72 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q88 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %72, i32 0, i32 1
  %x89 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q88, i32 0, i32 0
  %73 = load i32, i32* %x89, align 4, !tbaa !136
  %74 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %x90 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %74, i32 0, i32 0
  %75 = load i32, i32* %x90, align 4, !tbaa !109
  %cmp91 = icmp slt i32 %73, %75
  br i1 %cmp91, label %if.then.92, label %if.end.96

if.then.92:                                       ; preds = %if.end.87
  %76 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %x93 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %76, i32 0, i32 0
  %77 = load i32, i32* %x93, align 4, !tbaa !109
  %78 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q94 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %78, i32 0, i32 1
  %x95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q94, i32 0, i32 0
  store i32 %77, i32* %x95, align 4, !tbaa !136
  br label %if.end.96

if.end.96:                                        ; preds = %if.then.92, %if.end.87
  %79 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p97 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %79, i32 0, i32 0
  %y98 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p97, i32 0, i32 1
  %80 = load i32, i32* %y98, align 4, !tbaa !133
  %81 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %y99 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %81, i32 0, i32 1
  %82 = load i32, i32* %y99, align 4, !tbaa !110
  %cmp100 = icmp sgt i32 %80, %82
  br i1 %cmp100, label %if.then.101, label %if.end.105

if.then.101:                                      ; preds = %if.end.96
  %83 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %y102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %83, i32 0, i32 1
  %84 = load i32, i32* %y102, align 4, !tbaa !110
  %85 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p103 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %85, i32 0, i32 0
  %y104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p103, i32 0, i32 1
  store i32 %84, i32* %y104, align 4, !tbaa !133
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.101, %if.end.96
  %86 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q106 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %86, i32 0, i32 1
  %y107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q106, i32 0, i32 1
  %87 = load i32, i32* %y107, align 4, !tbaa !135
  %88 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %y108 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %88, i32 0, i32 1
  %89 = load i32, i32* %y108, align 4, !tbaa !110
  %cmp109 = icmp slt i32 %87, %89
  br i1 %cmp109, label %if.then.110, label %if.end.114

if.then.110:                                      ; preds = %if.end.105
  %90 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p3.addr, align 8, !tbaa !1
  %y111 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %90, i32 0, i32 1
  %91 = load i32, i32* %y111, align 4, !tbaa !110
  %92 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q112 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %92, i32 0, i32 1
  %y113 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q112, i32 0, i32 1
  store i32 %91, i32* %y113, align 4, !tbaa !135
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.77, %if.then.110, %if.end.105
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @try_device_linear_color(%struct.patch_fill_state_s* %pfs, i32 %wedge, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, %struct.shading_vertex_s* %p2) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %wedge.addr = alloca i32, align 4
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %p2.addr = alloca %struct.shading_vertex_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %cs = alloca %struct.gs_color_space_s*, align 8
  %s0 = alloca float, align 4
  %s1 = alloca float, align 4
  %s2 = alloca float, align 4
  %s01 = alloca float, align 4
  %s012 = alloca float, align 4
  %pdev = alloca %struct.gx_device_s*, align 8
  %fc = alloca [3 x [64 x i32]], align 16
  %fa = alloca %struct.gs_fill_attributes_s, align 8
  %dc = alloca [3 x %struct.gx_device_color_s], align 16
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store i32 %wedge, i32* %wedge.addr, align 4, !tbaa !5
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p2, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 25
  %2 = load i32, i32* %unlinear, align 4, !tbaa !53
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.130

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %wedge.addr, align 4, !tbaa !5
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.end.60, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = bitcast %struct.gs_color_space_s** %cs to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %direct_space = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 2
  %6 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %direct_space, align 8, !tbaa !16
  store %struct.gs_color_space_s* %6, %struct.gs_color_space_s** %cs, align 8, !tbaa !1
  %7 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %cs, align 8, !tbaa !1
  %cmp = icmp ne %struct.gs_color_space_s* %7, null
  br i1 %cmp, label %if.then.3, label %if.end.56

if.then.3:                                        ; preds = %if.then.2
  %8 = bitcast float* %s0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  %9 = bitcast float* %s1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  %10 = bitcast float* %s2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = bitcast float* %s01 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #2
  %12 = bitcast float* %s012 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #2
  %13 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 1
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %16 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %16, i32 0, i32 1
  %17 = load %struct.patch_color_s*, %struct.patch_color_s** %c4, align 8, !tbaa !150
  %call = call float @function_linearity(%struct.patch_fill_state_s* %13, %struct.patch_color_s* %15, %struct.patch_color_s* %17) #5
  store float %call, float* %s0, align 4, !tbaa !18
  %18 = load float, float* %s0, align 4, !tbaa !18
  %conv = fpext float %18 to double
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 21
  %20 = load double, double* %smoothness, align 8, !tbaa !50
  %cmp5 = fcmp ogt double %conv, %20
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.then.3
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.8:                                         ; preds = %if.then.3
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %22 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c9 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %22, i32 0, i32 1
  %23 = load %struct.patch_color_s*, %struct.patch_color_s** %c9, align 8, !tbaa !150
  %24 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %24, i32 0, i32 1
  %25 = load %struct.patch_color_s*, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %call11 = call float @function_linearity(%struct.patch_fill_state_s* %21, %struct.patch_color_s* %23, %struct.patch_color_s* %25) #5
  store float %call11, float* %s1, align 4, !tbaa !18
  %26 = load float, float* %s1, align 4, !tbaa !18
  %conv12 = fpext float %26 to double
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness13 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %27, i32 0, i32 21
  %28 = load double, double* %smoothness13, align 8, !tbaa !50
  %cmp14 = fcmp ogt double %conv12, %28
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.8
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.17:                                        ; preds = %if.end.8
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %30 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c18 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %30, i32 0, i32 1
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %c18, align 8, !tbaa !150
  %32 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c19 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %32, i32 0, i32 1
  %33 = load %struct.patch_color_s*, %struct.patch_color_s** %c19, align 8, !tbaa !150
  %call20 = call float @function_linearity(%struct.patch_fill_state_s* %29, %struct.patch_color_s* %31, %struct.patch_color_s* %33) #5
  store float %call20, float* %s2, align 4, !tbaa !18
  %34 = load float, float* %s2, align 4, !tbaa !18
  %conv21 = fpext float %34 to double
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness22 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %35, i32 0, i32 21
  %36 = load double, double* %smoothness22, align 8, !tbaa !50
  %cmp23 = fcmp ogt double %conv21, %36
  br i1 %cmp23, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.17
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.26:                                        ; preds = %if.end.17
  %37 = load float, float* %s0, align 4, !tbaa !18
  %38 = load float, float* %s1, align 4, !tbaa !18
  %cmp27 = fcmp ogt float %37, %38
  br i1 %cmp27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.26
  %39 = load float, float* %s0, align 4, !tbaa !18
  br label %cond.end

cond.false:                                       ; preds = %if.end.26
  %40 = load float, float* %s1, align 4, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %39, %cond.true ], [ %40, %cond.false ]
  store float %cond, float* %s01, align 4, !tbaa !18
  %41 = load float, float* %s01, align 4, !tbaa !18
  %42 = load float, float* %s2, align 4, !tbaa !18
  %cmp29 = fcmp ogt float %41, %42
  br i1 %cmp29, label %cond.true.31, label %cond.false.32

cond.true.31:                                     ; preds = %cond.end
  %43 = load float, float* %s01, align 4, !tbaa !18
  br label %cond.end.33

cond.false.32:                                    ; preds = %cond.end
  %44 = load float, float* %s2, align 4, !tbaa !18
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.false.32, %cond.true.31
  %cond34 = phi float [ %43, %cond.true.31 ], [ %44, %cond.false.32 ]
  store float %cond34, float* %s012, align 4, !tbaa !18
  %45 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %cs, align 8, !tbaa !1
  %type = getelementptr inbounds %struct.gs_color_space_s, %struct.gs_color_space_s* %45, i32 0, i32 0
  %46 = load %struct.gs_color_space_type_s*, %struct.gs_color_space_type_s** %type, align 8, !tbaa !20
  %is_linear = getelementptr inbounds %struct.gs_color_space_type_s, %struct.gs_color_space_type_s* %46, i32 0, i32 16
  %47 = load i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)*, i32 (%struct.gs_color_space_s*, %struct.gs_imager_state_s*, %struct.gx_device_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, %struct.gs_client_color_s*, float, %struct.gsicc_link_s*)** %is_linear, align 8, !tbaa !169
  %48 = load %struct.gs_color_space_s*, %struct.gs_color_space_s** %cs, align 8, !tbaa !1
  %49 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %49, i32 0, i32 1
  %50 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %51 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %trans_device = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %51, i32 0, i32 5
  %52 = load %struct.gx_device_s*, %struct.gx_device_s** %trans_device, align 8, !tbaa !71
  %53 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c35 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %53, i32 0, i32 1
  %54 = load %struct.patch_color_s*, %struct.patch_color_s** %c35, align 8, !tbaa !150
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %54, i32 0, i32 1
  %55 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c36 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %55, i32 0, i32 1
  %56 = load %struct.patch_color_s*, %struct.patch_color_s** %c36, align 8, !tbaa !150
  %cc37 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %56, i32 0, i32 1
  %57 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c38 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %57, i32 0, i32 1
  %58 = load %struct.patch_color_s*, %struct.patch_color_s** %c38, align 8, !tbaa !150
  %cc39 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %58, i32 0, i32 1
  %59 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness40 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %59, i32 0, i32 21
  %60 = load double, double* %smoothness40, align 8, !tbaa !50
  %61 = load float, float* %s012, align 4, !tbaa !18
  %conv41 = fpext float %61 to double
  %sub = fsub double %60, %conv41
  %conv42 = fptrunc double %sub to float
  %62 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %icclink = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %62, i32 0, i32 6
  %63 = load %struct.gsicc_link_s*, %struct.gsicc_link_s** %icclink, align 8, !tbaa !82
  %call43 = call i32 %47(%struct.gs_color_space_s* %48, %struct.gs_imager_state_s* %50, %struct.gx_device_s* %52, %struct.gs_client_color_s* %cc, %struct.gs_client_color_s* %cc37, %struct.gs_client_color_s* %cc39, %struct.gs_client_color_s* null, float %conv42, %struct.gsicc_link_s* %63) #5
  store i32 %call43, i32* %code, align 4, !tbaa !5
  %64 = load i32, i32* %code, align 4, !tbaa !5
  %cmp44 = icmp slt i32 %64, 0
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %cond.end.33
  %65 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %65, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %cond.end.33
  %66 = load i32, i32* %code, align 4, !tbaa !5
  %cmp48 = icmp eq i32 %66, 0
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.end.47
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.51:                                        ; preds = %if.end.47
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.51, %if.then.50, %if.then.46, %if.then.25, %if.then.16, %if.then.7
  %67 = bitcast float* %s012 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast float* %s01 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast float* %s2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #2
  %70 = bitcast float* %s1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = bitcast float* %s0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.57 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.56

if.end.56:                                        ; preds = %cleanup.cont, %if.then.2
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.57

cleanup.57:                                       ; preds = %if.end.56, %cleanup
  %72 = bitcast %struct.gs_color_space_s** %cs to i8*
  call void @llvm.lifetime.end(i64 8, i8* %72) #2
  %cleanup.dest.58 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.58, label %cleanup.130 [
    i32 0, label %cleanup.cont.59
  ]

cleanup.cont.59:                                  ; preds = %cleanup.57
  br label %if.end.60

if.end.60:                                        ; preds = %cleanup.cont.59, %if.end
  %73 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %73) #2
  %74 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %74, i32 0, i32 0
  %75 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  store %struct.gx_device_s* %75, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %76 = bitcast [3 x [64 x i32]]* %fc to i8*
  call void @llvm.lifetime.start(i64 768, i8* %76) #2
  %77 = bitcast %struct.gs_fill_attributes_s* %fa to i8*
  call void @llvm.lifetime.start(i64 48, i8* %77) #2
  %78 = bitcast [3 x %struct.gx_device_color_s]* %dc to i8*
  call void @llvm.lifetime.start(i64 1968, i8* %78) #2
  br label %do.body

do.body:                                          ; preds = %if.end.60
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %79 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %79, i32 0, i32 8
  %clip = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 0
  store %struct.gs_fixed_rect_s* %rect, %struct.gs_fixed_rect_s** %clip, align 8, !tbaa !142
  %ht = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 2
  store %struct.gx_device_halftone_s* null, %struct.gx_device_halftone_s** %ht, align 8, !tbaa !144
  %swap_axes = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 1
  store i32 0, i32* %swap_axes, align 4, !tbaa !145
  %lop = getelementptr inbounds %struct.gs_fill_attributes_s, %struct.gs_fill_attributes_s* %fa, i32 0, i32 3
  store i32 0, i32* %lop, align 4, !tbaa !146
  %80 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %81 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c61 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %81, i32 0, i32 1
  %82 = load %struct.patch_color_s*, %struct.patch_color_s** %c61, align 8, !tbaa !150
  %arrayidx = getelementptr inbounds [3 x %struct.gx_device_color_s], [3 x %struct.gx_device_color_s]* %dc, i32 0, i64 0
  %arrayidx62 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %fc, i32 0, i64 0
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx62, i32 0, i32 0
  %call63 = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %80, %struct.patch_color_s* %82, %struct.gx_device_color_s* %arrayidx, i32* %arraydecay) #5
  store i32 %call63, i32* %code, align 4, !tbaa !5
  %83 = load i32, i32* %code, align 4, !tbaa !5
  %cmp64 = icmp ne i32 %83, 0
  br i1 %cmp64, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %do.end
  %84 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %84, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126

if.end.67:                                        ; preds = %do.end
  %arrayidx68 = getelementptr inbounds [3 x %struct.gx_device_color_s], [3 x %struct.gx_device_color_s]* %dc, i32 0, i64 0
  %type69 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %arrayidx68, i32 0, i32 0
  %85 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type69, align 8, !tbaa !122
  %cmp70 = icmp eq %struct.gx_device_color_type_s* %85, @gx_dc_type_data_pure
  br i1 %cmp70, label %if.end.77, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.67
  %arrayidx72 = getelementptr inbounds [3 x %struct.gx_device_color_s], [3 x %struct.gx_device_color_s]* %dc, i32 0, i64 0
  %type73 = getelementptr inbounds %struct.gx_device_color_s, %struct.gx_device_color_s* %arrayidx72, i32 0, i32 0
  %86 = load %struct.gx_device_color_type_s*, %struct.gx_device_color_type_s** %type73, align 8, !tbaa !122
  %cmp74 = icmp eq %struct.gx_device_color_type_s* %86, @gx_dc_type_data_devn
  br i1 %cmp74, label %if.end.77, label %if.then.76

if.then.76:                                       ; preds = %lor.lhs.false
  store i32 2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126

if.end.77:                                        ; preds = %lor.lhs.false, %if.end.67
  %87 = load i32, i32* %wedge.addr, align 4, !tbaa !5
  %tobool78 = icmp ne i32 %87, 0
  br i1 %tobool78, label %if.end.89, label %if.then.79

if.then.79:                                       ; preds = %if.end.77
  %88 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %89 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c80 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %89, i32 0, i32 1
  %90 = load %struct.patch_color_s*, %struct.patch_color_s** %c80, align 8, !tbaa !150
  %arrayidx81 = getelementptr inbounds [3 x %struct.gx_device_color_s], [3 x %struct.gx_device_color_s]* %dc, i32 0, i64 1
  %arrayidx82 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %fc, i32 0, i64 1
  %arraydecay83 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx82, i32 0, i32 0
  %call84 = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %88, %struct.patch_color_s* %90, %struct.gx_device_color_s* %arrayidx81, i32* %arraydecay83) #5
  store i32 %call84, i32* %code, align 4, !tbaa !5
  %91 = load i32, i32* %code, align 4, !tbaa !5
  %cmp85 = icmp ne i32 %91, 0
  br i1 %cmp85, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %if.then.79
  %92 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %92, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126

if.end.88:                                        ; preds = %if.then.79
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88, %if.end.77
  %93 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %94 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c90 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %94, i32 0, i32 1
  %95 = load %struct.patch_color_s*, %struct.patch_color_s** %c90, align 8, !tbaa !150
  %arrayidx91 = getelementptr inbounds [3 x %struct.gx_device_color_s], [3 x %struct.gx_device_color_s]* %dc, i32 0, i64 2
  %arrayidx92 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %fc, i32 0, i64 2
  %arraydecay93 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx92, i32 0, i32 0
  %call94 = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %93, %struct.patch_color_s* %95, %struct.gx_device_color_s* %arrayidx91, i32* %arraydecay93) #5
  store i32 %call94, i32* %code, align 4, !tbaa !5
  %96 = load i32, i32* %code, align 4, !tbaa !5
  %cmp95 = icmp ne i32 %96, 0
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.end.89
  %97 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %97, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126

if.end.98:                                        ; preds = %if.end.89
  %98 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %98, i32 0, i32 0
  %99 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p99 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %99, i32 0, i32 0
  %100 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p100 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %100, i32 0, i32 0
  call void @draw_triangle(%struct.gs_fixed_point_s* %p, %struct.gs_fixed_point_s* %p99, %struct.gs_fixed_point_s* %p100, i64 16711680) #5
  %101 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %101, i32 0, i32 42
  %fill_linear_color_triangle = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 58
  %102 = load i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)*, i32 (%struct.gx_device_s*, %struct.gs_fill_attributes_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s*, i32*, i32*, i32*)** %fill_linear_color_triangle, align 8, !tbaa !173
  %103 = load %struct.gx_device_s*, %struct.gx_device_s** %pdev, align 8, !tbaa !1
  %104 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p101 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %104, i32 0, i32 0
  %105 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p102 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %105, i32 0, i32 0
  %106 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p103 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %106, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %fc, i32 0, i64 0
  %arraydecay105 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx104, i32 0, i32 0
  %107 = load i32, i32* %wedge.addr, align 4, !tbaa !5
  %tobool106 = icmp ne i32 %107, 0
  br i1 %tobool106, label %cond.true.107, label %cond.false.108

cond.true.107:                                    ; preds = %if.end.98
  br label %cond.end.111

cond.false.108:                                   ; preds = %if.end.98
  %arrayidx109 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %fc, i32 0, i64 1
  %arraydecay110 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx109, i32 0, i32 0
  br label %cond.end.111

cond.end.111:                                     ; preds = %cond.false.108, %cond.true.107
  %cond112 = phi i32* [ null, %cond.true.107 ], [ %arraydecay110, %cond.false.108 ]
  %arrayidx113 = getelementptr inbounds [3 x [64 x i32]], [3 x [64 x i32]]* %fc, i32 0, i64 2
  %arraydecay114 = getelementptr inbounds [64 x i32], [64 x i32]* %arrayidx113, i32 0, i32 0
  %call115 = call i32 %102(%struct.gx_device_s* %103, %struct.gs_fill_attributes_s* %fa, %struct.gs_fixed_point_s* %p101, %struct.gs_fixed_point_s* %p102, %struct.gs_fixed_point_s* %p103, i32* %arraydecay105, i32* %cond112, i32* %arraydecay114) #5
  store i32 %call115, i32* %code, align 4, !tbaa !5
  br label %do.body.116

do.body.116:                                      ; preds = %cond.end.111
  br label %do.cond.117

do.cond.117:                                      ; preds = %do.body.116
  br label %do.end.118

do.end.118:                                       ; preds = %do.cond.117
  %108 = load i32, i32* %code, align 4, !tbaa !5
  %cmp119 = icmp eq i32 %108, 1
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %do.end.118
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126

if.end.122:                                       ; preds = %do.end.118
  %109 = load i32, i32* %code, align 4, !tbaa !5
  %cmp123 = icmp slt i32 %109, 0
  br i1 %cmp123, label %if.then.125, label %if.else

if.then.125:                                      ; preds = %if.end.122
  %110 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %110, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126

if.else:                                          ; preds = %if.end.122
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.126

cleanup.126:                                      ; preds = %if.else, %if.then.125, %if.then.121, %if.then.97, %if.then.87, %if.then.76, %if.then.66
  %111 = bitcast [3 x %struct.gx_device_color_s]* %dc to i8*
  call void @llvm.lifetime.end(i64 1968, i8* %111) #2
  %112 = bitcast %struct.gs_fill_attributes_s* %fa to i8*
  call void @llvm.lifetime.end(i64 48, i8* %112) #2
  %113 = bitcast [3 x [64 x i32]]* %fc to i8*
  call void @llvm.lifetime.end(i64 768, i8* %113) #2
  %114 = bitcast %struct.gx_device_s** %pdev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %114) #2
  br label %cleanup.130

cleanup.130:                                      ; preds = %cleanup.126, %cleanup.57, %if.then
  %115 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #2
  %116 = load i32, i32* %retval
  ret i32 %116
}

; Function Attrs: nounwind uwtable
define internal i32 @constant_color_triangle(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, %struct.shading_vertex_s* %p2) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %p2.addr = alloca %struct.shading_vertex_s*, align 8
  %c = alloca [2 x %struct.patch_color_s*], align 16
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  %dx0 = alloca i32, align 4
  %dy0 = alloca i32, align 4
  %dx1 = alloca i32, align 4
  %dy1 = alloca i32, align 4
  %pp = alloca %struct.shading_vertex_s*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p2, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %0 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #2
  %3 = bitcast i32* %dx0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %dy0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = bitcast %struct.shading_vertex_s** %pp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  %9 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #2
  store i32 0, i32* %code, align 4, !tbaa !5
  %10 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #2
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %11, %struct.patch_color_s** %arraydecay, i32 2) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %12 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp = icmp eq i8* %12, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %13 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %13, i32 0, i32 0
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 0
  %15 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %15, i32 0, i32 0
  call void @draw_triangle(%struct.gs_fixed_point_s* %p, %struct.gs_fixed_point_s* %p3, %struct.gs_fixed_point_s* %p4, i64 16711680) #5
  %arrayidx = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 1
  %18 = load %struct.patch_color_s*, %struct.patch_color_s** %c5, align 8, !tbaa !150
  %19 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %19, i32 0, i32 1
  %20 = load %struct.patch_color_s*, %struct.patch_color_s** %c6, align 8, !tbaa !150
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %16, %struct.patch_color_s* %18, %struct.patch_color_s* %20, %struct.patch_fill_state_s* %21, double 5.000000e-01) #5
  %arrayidx7 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx7, align 8, !tbaa !1
  %23 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %c8 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %23, i32 0, i32 1
  %24 = load %struct.patch_color_s*, %struct.patch_color_s** %c8, align 8, !tbaa !150
  %arrayidx9 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %25 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx9, align 8, !tbaa !1
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %22, %struct.patch_color_s* %24, %struct.patch_color_s* %25, %struct.patch_fill_state_s* %26, double 5.000000e-01) #5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %27 = load i32, i32* %i, align 4, !tbaa !5
  %cmp10 = icmp slt i32 %27, 3
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %28 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %28, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p11, i32 0, i32 1
  %29 = load i32, i32* %y, align 4, !tbaa !156
  %30 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p12 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %30, i32 0, i32 0
  %y13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p12, i32 0, i32 1
  %31 = load i32, i32* %y13, align 4, !tbaa !156
  %cmp14 = icmp sle i32 %29, %31
  br i1 %cmp14, label %land.lhs.true, label %if.end.60

land.lhs.true:                                    ; preds = %for.body
  %32 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p15 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %32, i32 0, i32 0
  %y16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p15, i32 0, i32 1
  %33 = load i32, i32* %y16, align 4, !tbaa !156
  %34 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p17 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %34, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p17, i32 0, i32 1
  %35 = load i32, i32* %y18, align 4, !tbaa !156
  %cmp19 = icmp sle i32 %33, %35
  br i1 %cmp19, label %if.then.20, label %if.end.60

if.then.20:                                       ; preds = %land.lhs.true
  %start = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %start21 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %36 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %36, i32 0, i32 0
  %37 = bitcast %struct.gs_fixed_point_s* %start21 to i8*
  %38 = bitcast %struct.gs_fixed_point_s* %p22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 4, i1 false), !tbaa.struct !117
  %39 = bitcast %struct.gs_fixed_point_s* %start to i8*
  %40 = bitcast %struct.gs_fixed_point_s* %start21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 4, i1 false), !tbaa.struct !117
  %end = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %41 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p23 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %41, i32 0, i32 0
  %42 = bitcast %struct.gs_fixed_point_s* %end to i8*
  %43 = bitcast %struct.gs_fixed_point_s* %p23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 4, i1 false), !tbaa.struct !117
  %end24 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %44 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  %p25 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %44, i32 0, i32 0
  %45 = bitcast %struct.gs_fixed_point_s* %end24 to i8*
  %46 = bitcast %struct.gs_fixed_point_s* %p25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 4, i1 false), !tbaa.struct !117
  %end26 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end26, i32 0, i32 0
  %47 = load i32, i32* %x, align 4, !tbaa !131
  %start27 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %x28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start27, i32 0, i32 0
  %48 = load i32, i32* %x28, align 4, !tbaa !128
  %sub = sub nsw i32 %47, %48
  store i32 %sub, i32* %dx0, align 4, !tbaa !5
  %end29 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 1
  %y30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end29, i32 0, i32 1
  %49 = load i32, i32* %y30, align 4, !tbaa !132
  %start31 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %le, i32 0, i32 0
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start31, i32 0, i32 1
  %50 = load i32, i32* %y32, align 4, !tbaa !130
  %sub33 = sub nsw i32 %49, %50
  store i32 %sub33, i32* %dy0, align 4, !tbaa !5
  %end34 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %x35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end34, i32 0, i32 0
  %51 = load i32, i32* %x35, align 4, !tbaa !131
  %start36 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %x37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start36, i32 0, i32 0
  %52 = load i32, i32* %x37, align 4, !tbaa !128
  %sub38 = sub nsw i32 %51, %52
  store i32 %sub38, i32* %dx1, align 4, !tbaa !5
  %end39 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 1
  %y40 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end39, i32 0, i32 1
  %53 = load i32, i32* %y40, align 4, !tbaa !132
  %start41 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %re, i32 0, i32 0
  %y42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start41, i32 0, i32 1
  %54 = load i32, i32* %y42, align 4, !tbaa !130
  %sub43 = sub nsw i32 %53, %54
  store i32 %sub43, i32* %dy1, align 4, !tbaa !5
  %55 = load i32, i32* %dx0, align 4, !tbaa !5
  %conv = sext i32 %55 to i64
  %56 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv44 = sext i32 %56 to i64
  %mul = mul nsw i64 %conv, %conv44
  %57 = load i32, i32* %dy0, align 4, !tbaa !5
  %conv45 = sext i32 %57 to i64
  %58 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv46 = sext i32 %58 to i64
  %mul47 = mul nsw i64 %conv45, %conv46
  %cmp48 = icmp slt i64 %mul, %mul47
  br i1 %cmp48, label %if.then.50, label %if.else

if.then.50:                                       ; preds = %if.then.20
  %59 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %60 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx51, align 8, !tbaa !1
  %call52 = call i32 @ordered_triangle(%struct.patch_fill_state_s* %59, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, %struct.patch_color_s* %60) #5
  store i32 %call52, i32* %code, align 4, !tbaa !5
  br label %if.end.55

if.else:                                          ; preds = %if.then.20
  %61 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %62 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx53, align 8, !tbaa !1
  %call54 = call i32 @ordered_triangle(%struct.patch_fill_state_s* %61, %struct.gs_fixed_edge_s* %re, %struct.gs_fixed_edge_s* %le, %struct.patch_color_s* %62) #5
  store i32 %call54, i32* %code, align 4, !tbaa !5
  br label %if.end.55

if.end.55:                                        ; preds = %if.else, %if.then.50
  %63 = load i32, i32* %code, align 4, !tbaa !5
  %cmp56 = icmp slt i32 %63, 0
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %if.end.55
  br label %for.end

if.end.59:                                        ; preds = %if.end.55
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %land.lhs.true, %for.body
  %64 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %64, %struct.shading_vertex_s** %pp, align 8, !tbaa !1
  %65 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %65, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %66 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %66, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %67 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %pp, align 8, !tbaa !1
  store %struct.shading_vertex_s* %67, %struct.shading_vertex_s** %p2.addr, align 8, !tbaa !1
  br label %for.inc

for.inc:                                          ; preds = %if.end.60
  %68 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %68, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %if.then.58, %for.cond
  %69 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %70 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %69, i8* %70, i32 2) #5
  %71 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %71, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %72 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %72) #2
  %73 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %73) #2
  %74 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #2
  %75 = bitcast %struct.shading_vertex_s** %pp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %75) #2
  %76 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %76) #2
  %77 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %77) #2
  %78 = bitcast i32* %dy0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %78) #2
  %79 = bitcast i32* %dx0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %79) #2
  %80 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %80) #2
  %81 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %81) #2
  %82 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 16, i8* %82) #2
  %83 = load i32, i32* %retval
  ret i32 %83
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @divide_bar(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %p0, %struct.shading_vertex_s* %p1, i32 %radix, %struct.shading_vertex_s* %p, %struct.patch_color_s* %c) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.shading_vertex_s*, align 8
  %p1.addr = alloca %struct.shading_vertex_s*, align 8
  %radix.addr = alloca i32, align 4
  %p.addr = alloca %struct.shading_vertex_s*, align 8
  %c.addr = alloca %struct.patch_color_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p0, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %p1, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  store i32 %radix, i32* %radix.addr, align 4, !tbaa !5
  store %struct.shading_vertex_s* %p, %struct.shading_vertex_s** %p.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %0 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p2 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %0, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p2, i32 0, i32 0
  %1 = load i32, i32* %x, align 4, !tbaa !155
  %conv = sext i32 %1 to i64
  %2 = load i32, i32* %radix.addr, align 4, !tbaa !5
  %sub = sub nsw i32 %2, 1
  %conv3 = sext i32 %sub to i64
  %mul = mul nsw i64 %conv, %conv3
  %3 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %3, i32 0, i32 0
  %x5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p4, i32 0, i32 0
  %4 = load i32, i32* %x5, align 4, !tbaa !155
  %conv6 = sext i32 %4 to i64
  %add = add nsw i64 %mul, %conv6
  %conv7 = trunc i64 %add to i32
  %5 = load i32, i32* %radix.addr, align 4, !tbaa !5
  %div = sdiv i32 %conv7, %5
  %6 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p.addr, align 8, !tbaa !1
  %p8 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %6, i32 0, i32 0
  %x9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p8, i32 0, i32 0
  store i32 %div, i32* %x9, align 4, !tbaa !155
  %7 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %7, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p10, i32 0, i32 1
  %8 = load i32, i32* %y, align 4, !tbaa !156
  %conv11 = sext i32 %8 to i64
  %9 = load i32, i32* %radix.addr, align 4, !tbaa !5
  %sub12 = sub nsw i32 %9, 1
  %conv13 = sext i32 %sub12 to i64
  %mul14 = mul nsw i64 %conv11, %conv13
  %10 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %p15 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %10, i32 0, i32 0
  %y16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p15, i32 0, i32 1
  %11 = load i32, i32* %y16, align 4, !tbaa !156
  %conv17 = sext i32 %11 to i64
  %add18 = add nsw i64 %mul14, %conv17
  %conv19 = trunc i64 %add18 to i32
  %12 = load i32, i32* %radix.addr, align 4, !tbaa !5
  %div20 = sdiv i32 %conv19, %12
  %13 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p.addr, align 8, !tbaa !1
  %p21 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %13, i32 0, i32 0
  %y22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p21, i32 0, i32 1
  store i32 %div20, i32* %y22, align 4, !tbaa !156
  %14 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %15 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p0.addr, align 8, !tbaa !1
  %c23 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %15, i32 0, i32 1
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %c23, align 8, !tbaa !150
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %p1.addr, align 8, !tbaa !1
  %c24 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 1
  %18 = load %struct.patch_color_s*, %struct.patch_color_s** %c24, align 8, !tbaa !150
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %20 = load i32, i32* %radix.addr, align 4, !tbaa !5
  %sub25 = sub nsw i32 %20, 1
  %conv26 = sitofp i32 %sub25 to double
  %21 = load i32, i32* %radix.addr, align 4, !tbaa !5
  %conv27 = sitofp i32 %21 to double
  %div28 = fdiv double %conv26, %conv27
  call void @patch_interpolate_color(%struct.patch_color_s* %14, %struct.patch_color_s* %16, %struct.patch_color_s* %18, %struct.patch_fill_state_s* %19, double %div28) #5
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @make_wedge_median(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t* %l0, i32 %forth, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %pm) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %l0.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %forth.addr = alloca i32, align 4
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pm.addr = alloca %struct.gs_fixed_point_s*, align 8
  %code = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l0, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  store i32 %forth, i32* %forth.addr, align 4, !tbaa !5
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %pm, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %1, i32 0, i32 0
  %2 = load i32, i32* %last_side, align 4, !tbaa !172
  %3 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %last_side1 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %3, i32 0, i32 0
  store i32 %2, i32* %last_side1, align 4, !tbaa !172
  %4 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %last_side2 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %4, i32 0, i32 0
  %5 = load i32, i32* %last_side2, align 4, !tbaa !172
  %tobool = icmp ne i32 %5, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %6 = load i32, i32* %forth.addr, align 4, !tbaa !5
  %tobool3 = icmp ne i32 %6, 0
  %lnot4 = xor i1 %tobool3, true
  %lnot.ext5 = zext i1 %lnot4 to i32
  %xor = xor i32 %lnot.ext, %lnot.ext5
  %tobool6 = icmp ne i32 %xor, 0
  br i1 %tobool6, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %8 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  %9 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %10 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %11 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %12 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %12, i32 0, i32 2
  %call = call i32 @open_wedge_median(%struct.patch_fill_state_s* %7, %struct.wedge_vertex_list_t* %8, %struct.gs_fixed_point_s* %9, %struct.gs_fixed_point_s* %10, %struct.gs_fixed_point_s* %11, %struct.wedge_vertex_list_elem_s** %end) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %13 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %13, i32 0, i32 1
  %14 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %15 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg7 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %15, i32 0, i32 1
  store %struct.wedge_vertex_list_elem_s* %14, %struct.wedge_vertex_list_elem_s** %beg7, align 8, !tbaa !170
  br label %if.end

if.else:                                          ; preds = %entry
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %17 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %19 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %21 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg8 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %21, i32 0, i32 1
  %call9 = call i32 @open_wedge_median(%struct.patch_fill_state_s* %16, %struct.wedge_vertex_list_t* %17, %struct.gs_fixed_point_s* %18, %struct.gs_fixed_point_s* %19, %struct.gs_fixed_point_s* %20, %struct.wedge_vertex_list_elem_s** %beg8) #5
  store i32 %call9, i32* %code, align 4, !tbaa !5
  %22 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  %end10 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %22, i32 0, i32 2
  %23 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end10, align 8, !tbaa !174
  %24 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end11 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %24, i32 0, i32 2
  store %struct.wedge_vertex_list_elem_s* %23, %struct.wedge_vertex_list_elem_s** %end11, align 8, !tbaa !174
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load i32, i32* %code, align 4, !tbaa !5
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  ret i32 %25
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @move_wedge(%struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t* %l0, i32 %forth) #1 {
entry:
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %l0.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %forth.addr = alloca i32, align 4
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l0, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  store i32 %forth, i32* %forth.addr, align 4, !tbaa !5
  %0 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %0, i32 0, i32 0
  %1 = load i32, i32* %last_side, align 4, !tbaa !172
  %tobool = icmp ne i32 %1, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %2 = load i32, i32* %forth.addr, align 4, !tbaa !5
  %tobool1 = icmp ne i32 %2, 0
  %lnot2 = xor i1 %tobool1, true
  %lnot.ext3 = zext i1 %lnot2 to i32
  %xor = xor i32 %lnot.ext, %lnot.ext3
  %tobool4 = icmp ne i32 %xor, 0
  br i1 %tobool4, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %3, i32 0, i32 2
  %4 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end, align 8, !tbaa !174
  %5 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %5, i32 0, i32 1
  store %struct.wedge_vertex_list_elem_s* %4, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %6 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  %end5 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %6, i32 0, i32 2
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end5, align 8, !tbaa !174
  %8 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end6 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %8, i32 0, i32 2
  store %struct.wedge_vertex_list_elem_s* %7, %struct.wedge_vertex_list_elem_s** %end6, align 8, !tbaa !174
  br label %if.end

if.else:                                          ; preds = %entry
  %9 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg7 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %9, i32 0, i32 1
  %10 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg7, align 8, !tbaa !170
  %11 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end8 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %11, i32 0, i32 2
  store %struct.wedge_vertex_list_elem_s* %10, %struct.wedge_vertex_list_elem_s** %end8, align 8, !tbaa !174
  %12 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0.addr, align 8, !tbaa !1
  %beg9 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %12, i32 0, i32 1
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg9, align 8, !tbaa !170
  %14 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg10 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %14, i32 0, i32 1
  store %struct.wedge_vertex_list_elem_s* %13, %struct.wedge_vertex_list_elem_s** %beg10, align 8, !tbaa !170
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @close_wedge_median(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %l, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %1, i32 0, i32 0
  %2 = load i32, i32* %last_side, align 4, !tbaa !172
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %4 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %5 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %6 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %call = call i32 @fill_wedge_from_list(%struct.patch_fill_state_s* %3, %struct.wedge_vertex_list_t* %4, %struct.patch_color_s* %5, %struct.patch_color_s* %6) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %7 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %7, 0
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  %8 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %8, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.2:                                         ; preds = %if.end
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %10 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %10, i32 0, i32 1
  %11 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %12 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %12, i32 0, i32 2
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end, align 8, !tbaa !174
  call void @release_wedge_vertex_list_interval(%struct.patch_fill_state_s* %9, %struct.wedge_vertex_list_elem_s* %11, %struct.wedge_vertex_list_elem_s* %13) #5
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.2, %if.then.1, %if.then
  %14 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %14) #2
  %15 = load i32, i32* %retval
  ret i32 %15
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @draw_triangle(%struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %p2, i64 %rgbcolor) #1 {
entry:
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p2.addr = alloca %struct.gs_fixed_point_s*, align 8
  %rgbcolor.addr = alloca i64, align 8
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p2, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  store i64 %rgbcolor, i64* %rgbcolor.addr, align 8, !tbaa !107
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ordered_triangle(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, %struct.patch_color_s* %c) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %le.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %re.addr = alloca %struct.gs_fixed_edge_s*, align 8
  %c.addr = alloca %struct.patch_color_s*, align 8
  %ue = alloca %struct.gs_fixed_edge_s, align 4
  %code = alloca i32, align 4
  %dc = alloca %struct.gx_device_color_s, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  store %struct.gs_fixed_edge_s* %re, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %0 = bitcast %struct.gs_fixed_edge_s* %ue to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast %struct.gx_device_color_s* %dc to i8*
  call void @llvm.lifetime.start(i64 656, i8* %2) #2
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %call = call i32 @patch_color_to_device_color_inline(%struct.patch_fill_state_s* %3, %struct.patch_color_s* %4, %struct.gx_device_color_s* %dc, i32* null) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %5 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.end
  %6 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %6, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %do.end
  %7 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %7, i32 0, i32 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end, i32 0, i32 1
  %8 = load i32, i32* %y, align 4, !tbaa !132
  %9 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end1 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %9, i32 0, i32 1
  %y2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end1, i32 0, i32 1
  %10 = load i32, i32* %y2, align 4, !tbaa !132
  %cmp3 = icmp slt i32 %8, %10
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.end
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 0
  %12 = load %struct.gx_device_s*, %struct.gx_device_s** %dev, align 8, !tbaa !55
  %procs = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %12, i32 0, i32 42
  %fill_trapezoid = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs, i32 0, i32 27
  %13 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid, align 8, !tbaa !157
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev5 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %14, i32 0, i32 0
  %15 = load %struct.gx_device_s*, %struct.gx_device_s** %dev5, align 8, !tbaa !55
  %16 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %17 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %18 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %18, i32 0, i32 0
  %y6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start, i32 0, i32 1
  %19 = load i32, i32* %y6, align 4, !tbaa !130
  %20 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end7 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %20, i32 0, i32 1
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end7, i32 0, i32 1
  %21 = load i32, i32* %y8, align 4, !tbaa !132
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %22, i32 0, i32 1
  %23 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis, align 8, !tbaa !35
  %log_op = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %23, i32 0, i32 10
  %24 = load i32, i32* %log_op, align 4, !tbaa !167
  %call9 = call i32 %13(%struct.gx_device_s* %15, %struct.gs_fixed_edge_s* %16, %struct.gs_fixed_edge_s* %17, i32 %19, i32 %21, i32 0, %struct.gx_device_color_s* %dc, i32 %24) #5
  store i32 %call9, i32* %code, align 4, !tbaa !5
  %25 = load i32, i32* %code, align 4, !tbaa !5
  %cmp10 = icmp sge i32 %25, 0
  br i1 %cmp10, label %if.then.11, label %if.end.27

if.then.11:                                       ; preds = %if.then.4
  %start12 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %ue, i32 0, i32 0
  %26 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end13 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %26, i32 0, i32 1
  %27 = bitcast %struct.gs_fixed_point_s* %start12 to i8*
  %28 = bitcast %struct.gs_fixed_point_s* %end13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false), !tbaa.struct !117
  %end14 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %ue, i32 0, i32 1
  %29 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end15 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %29, i32 0, i32 1
  %30 = bitcast %struct.gs_fixed_point_s* %end14 to i8*
  %31 = bitcast %struct.gs_fixed_point_s* %end15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false), !tbaa.struct !117
  %32 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev16 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %32, i32 0, i32 0
  %33 = load %struct.gx_device_s*, %struct.gx_device_s** %dev16, align 8, !tbaa !55
  %procs17 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %33, i32 0, i32 42
  %fill_trapezoid18 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs17, i32 0, i32 27
  %34 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid18, align 8, !tbaa !157
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev19 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %35, i32 0, i32 0
  %36 = load %struct.gx_device_s*, %struct.gx_device_s** %dev19, align 8, !tbaa !55
  %37 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %38 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end20 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %38, i32 0, i32 1
  %y21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end20, i32 0, i32 1
  %39 = load i32, i32* %y21, align 4, !tbaa !132
  %40 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end22 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %40, i32 0, i32 1
  %y23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end22, i32 0, i32 1
  %41 = load i32, i32* %y23, align 4, !tbaa !132
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis24 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %42, i32 0, i32 1
  %43 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis24, align 8, !tbaa !35
  %log_op25 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %43, i32 0, i32 10
  %44 = load i32, i32* %log_op25, align 4, !tbaa !167
  %call26 = call i32 %34(%struct.gx_device_s* %36, %struct.gs_fixed_edge_s* %ue, %struct.gs_fixed_edge_s* %37, i32 %39, i32 %41, i32 0, %struct.gx_device_color_s* %dc, i32 %44) #5
  store i32 %call26, i32* %code, align 4, !tbaa !5
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.11, %if.then.4
  br label %if.end.76

if.else:                                          ; preds = %if.end
  %45 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end28 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %45, i32 0, i32 1
  %y29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end28, i32 0, i32 1
  %46 = load i32, i32* %y29, align 4, !tbaa !132
  %47 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end30 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %47, i32 0, i32 1
  %y31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end30, i32 0, i32 1
  %48 = load i32, i32* %y31, align 4, !tbaa !132
  %cmp32 = icmp sgt i32 %46, %48
  br i1 %cmp32, label %if.then.33, label %if.else.63

if.then.33:                                       ; preds = %if.else
  %49 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev34 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %49, i32 0, i32 0
  %50 = load %struct.gx_device_s*, %struct.gx_device_s** %dev34, align 8, !tbaa !55
  %procs35 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %50, i32 0, i32 42
  %fill_trapezoid36 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs35, i32 0, i32 27
  %51 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid36, align 8, !tbaa !157
  %52 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev37 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %52, i32 0, i32 0
  %53 = load %struct.gx_device_s*, %struct.gx_device_s** %dev37, align 8, !tbaa !55
  %54 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %55 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %56 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start38 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %56, i32 0, i32 0
  %y39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start38, i32 0, i32 1
  %57 = load i32, i32* %y39, align 4, !tbaa !130
  %58 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end40 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %58, i32 0, i32 1
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end40, i32 0, i32 1
  %59 = load i32, i32* %y41, align 4, !tbaa !132
  %60 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis42 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %60, i32 0, i32 1
  %61 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis42, align 8, !tbaa !35
  %log_op43 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %61, i32 0, i32 10
  %62 = load i32, i32* %log_op43, align 4, !tbaa !167
  %call44 = call i32 %51(%struct.gx_device_s* %53, %struct.gs_fixed_edge_s* %54, %struct.gs_fixed_edge_s* %55, i32 %57, i32 %59, i32 0, %struct.gx_device_color_s* %dc, i32 %62) #5
  store i32 %call44, i32* %code, align 4, !tbaa !5
  %63 = load i32, i32* %code, align 4, !tbaa !5
  %cmp45 = icmp sge i32 %63, 0
  br i1 %cmp45, label %if.then.46, label %if.end.62

if.then.46:                                       ; preds = %if.then.33
  %start47 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %ue, i32 0, i32 0
  %64 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end48 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %64, i32 0, i32 1
  %65 = bitcast %struct.gs_fixed_point_s* %start47 to i8*
  %66 = bitcast %struct.gs_fixed_point_s* %end48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 4, i1 false), !tbaa.struct !117
  %end49 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %ue, i32 0, i32 1
  %67 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end50 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %67, i32 0, i32 1
  %68 = bitcast %struct.gs_fixed_point_s* %end49 to i8*
  %69 = bitcast %struct.gs_fixed_point_s* %end50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 4, i1 false), !tbaa.struct !117
  %70 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev51 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %70, i32 0, i32 0
  %71 = load %struct.gx_device_s*, %struct.gx_device_s** %dev51, align 8, !tbaa !55
  %procs52 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %71, i32 0, i32 42
  %fill_trapezoid53 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs52, i32 0, i32 27
  %72 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid53, align 8, !tbaa !157
  %73 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev54 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %73, i32 0, i32 0
  %74 = load %struct.gx_device_s*, %struct.gx_device_s** %dev54, align 8, !tbaa !55
  %75 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %76 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %end55 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %76, i32 0, i32 1
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end55, i32 0, i32 1
  %77 = load i32, i32* %y56, align 4, !tbaa !132
  %78 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end57 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %78, i32 0, i32 1
  %y58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end57, i32 0, i32 1
  %79 = load i32, i32* %y58, align 4, !tbaa !132
  %80 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis59 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %80, i32 0, i32 1
  %81 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis59, align 8, !tbaa !35
  %log_op60 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %81, i32 0, i32 10
  %82 = load i32, i32* %log_op60, align 4, !tbaa !167
  %call61 = call i32 %72(%struct.gx_device_s* %74, %struct.gs_fixed_edge_s* %75, %struct.gs_fixed_edge_s* %ue, i32 %77, i32 %79, i32 0, %struct.gx_device_color_s* %dc, i32 %82) #5
  store i32 %call61, i32* %code, align 4, !tbaa !5
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.46, %if.then.33
  br label %if.end.75

if.else.63:                                       ; preds = %if.else
  %83 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev64 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %83, i32 0, i32 0
  %84 = load %struct.gx_device_s*, %struct.gx_device_s** %dev64, align 8, !tbaa !55
  %procs65 = getelementptr inbounds %struct.gx_device_s, %struct.gx_device_s* %84, i32 0, i32 42
  %fill_trapezoid66 = getelementptr inbounds %struct.gx_device_procs_s, %struct.gx_device_procs_s* %procs65, i32 0, i32 27
  %85 = load i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)*, i32 (%struct.gx_device_s*, %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s*, i32, i32, i32, %struct.gx_device_color_s*, i32)** %fill_trapezoid66, align 8, !tbaa !157
  %86 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %dev67 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %86, i32 0, i32 0
  %87 = load %struct.gx_device_s*, %struct.gx_device_s** %dev67, align 8, !tbaa !55
  %88 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %89 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %re.addr, align 8, !tbaa !1
  %90 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %start68 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %90, i32 0, i32 0
  %y69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %start68, i32 0, i32 1
  %91 = load i32, i32* %y69, align 4, !tbaa !130
  %92 = load %struct.gs_fixed_edge_s*, %struct.gs_fixed_edge_s** %le.addr, align 8, !tbaa !1
  %end70 = getelementptr inbounds %struct.gs_fixed_edge_s, %struct.gs_fixed_edge_s* %92, i32 0, i32 1
  %y71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %end70, i32 0, i32 1
  %93 = load i32, i32* %y71, align 4, !tbaa !132
  %94 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %pis72 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %94, i32 0, i32 1
  %95 = load %struct.gs_imager_state_s*, %struct.gs_imager_state_s** %pis72, align 8, !tbaa !35
  %log_op73 = getelementptr inbounds %struct.gs_imager_state_s, %struct.gs_imager_state_s* %95, i32 0, i32 10
  %96 = load i32, i32* %log_op73, align 4, !tbaa !167
  %call74 = call i32 %85(%struct.gx_device_s* %87, %struct.gs_fixed_edge_s* %88, %struct.gs_fixed_edge_s* %89, i32 %91, i32 %93, i32 0, %struct.gx_device_color_s* %dc, i32 %96) #5
  store i32 %call74, i32* %code, align 4, !tbaa !5
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.63, %if.end.62
  br label %if.end.76

if.end.76:                                        ; preds = %if.end.75, %if.end.27
  br label %do.body.77

do.body.77:                                       ; preds = %if.end.76
  br label %do.cond.78

do.cond.78:                                       ; preds = %do.body.77
  br label %do.end.79

do.end.79:                                        ; preds = %do.cond.78
  %97 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %97, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end.79, %if.then
  %98 = bitcast %struct.gx_device_color_s* %dc to i8*
  call void @llvm.lifetime.end(i64 656, i8* %98) #2
  %99 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %99) #2
  %100 = bitcast %struct.gs_fixed_edge_s* %ue to i8*
  call void @llvm.lifetime.end(i64 16, i8* %100) #2
  %101 = load i32, i32* %retval
  ret i32 %101
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @open_wedge_median(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %l, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %pm, %struct.wedge_vertex_list_elem_s** %r) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pm.addr = alloca %struct.gs_fixed_point_s*, align 8
  %r.addr = alloca %struct.wedge_vertex_list_elem_s**, align 8
  %e = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %pm, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s** %r, %struct.wedge_vertex_list_elem_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %2, i32 0, i32 0
  %3 = load i32, i32* %last_side, align 4, !tbaa !172
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %4, i32 0, i32 1
  %5 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %cmp = icmp eq %struct.wedge_vertex_list_elem_s* %5, null
  br i1 %cmp, label %if.then.1, label %if.end.4

if.then.1:                                        ; preds = %if.then
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %7 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %9 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %call = call i32 @create_wedge_vertex_list(%struct.patch_fill_state_s* %6, %struct.wedge_vertex_list_t* %7, %struct.gs_fixed_point_s* %8, %struct.gs_fixed_point_s* %9) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %10 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2 = icmp slt i32 %10, 0
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then.1
  %11 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %11, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then.1
  br label %if.end.4

if.end.4:                                         ; preds = %if.end, %if.then
  %12 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg5 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %12, i32 0, i32 1
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg5, align 8, !tbaa !170
  %p = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %13, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %14 = load i32, i32* %x, align 4, !tbaa !175
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i32 0, i32 0
  %16 = load i32, i32* %x6, align 4, !tbaa !109
  %cmp7 = icmp ne i32 %14, %16
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.4
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.9:                                         ; preds = %if.end.4
  %17 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg10 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %17, i32 0, i32 1
  %18 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg10, align 8, !tbaa !170
  %p11 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %18, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p11, i32 0, i32 1
  %19 = load i32, i32* %y, align 4, !tbaa !177
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %20, i32 0, i32 1
  %21 = load i32, i32* %y12, align 4, !tbaa !110
  %cmp13 = icmp ne i32 %19, %21
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end.9
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.15:                                        ; preds = %if.end.9
  %22 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %22, i32 0, i32 2
  %23 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end, align 8, !tbaa !174
  %p16 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %23, i32 0, i32 0
  %x17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p16, i32 0, i32 0
  %24 = load i32, i32* %x17, align 4, !tbaa !175
  %25 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %25, i32 0, i32 0
  %26 = load i32, i32* %x18, align 4, !tbaa !109
  %cmp19 = icmp ne i32 %24, %26
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end.15
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end.15
  %27 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end22 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %27, i32 0, i32 2
  %28 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end22, align 8, !tbaa !174
  %p23 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %28, i32 0, i32 0
  %y24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p23, i32 0, i32 1
  %29 = load i32, i32* %y24, align 4, !tbaa !177
  %30 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %30, i32 0, i32 1
  %31 = load i32, i32* %y25, align 4, !tbaa !110
  %cmp26 = icmp ne i32 %29, %31
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.end.21
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.28:                                        ; preds = %if.end.21
  %32 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %33 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %34 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %call29 = call i32 @insert_wedge_vertex_list_elem(%struct.patch_fill_state_s* %32, %struct.wedge_vertex_list_t* %33, %struct.gs_fixed_point_s* %34, %struct.wedge_vertex_list_elem_s** %e) #5
  store i32 %call29, i32* %code, align 4, !tbaa !5
  %35 = load i32, i32* %code, align 4, !tbaa !5
  %cmp30 = icmp slt i32 %35, 0
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %36 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end.28
  %37 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %37, i32 0, i32 2
  %38 = load i32, i32* %divide_count, align 4, !tbaa !178
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %divide_count, align 4, !tbaa !178
  br label %if.end.114

if.else:                                          ; preds = %entry
  %39 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg33 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %39, i32 0, i32 1
  %40 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg33, align 8, !tbaa !170
  %cmp34 = icmp eq %struct.wedge_vertex_list_elem_s* %40, null
  br i1 %cmp34, label %if.then.35, label %if.else.46

if.then.35:                                       ; preds = %if.else
  %41 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %42 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %43 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %44 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %call36 = call i32 @create_wedge_vertex_list(%struct.patch_fill_state_s* %41, %struct.wedge_vertex_list_t* %42, %struct.gs_fixed_point_s* %43, %struct.gs_fixed_point_s* %44) #5
  store i32 %call36, i32* %code, align 4, !tbaa !5
  %45 = load i32, i32* %code, align 4, !tbaa !5
  %cmp37 = icmp slt i32 %45, 0
  br i1 %cmp37, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %if.then.35
  %46 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %46, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.39:                                        ; preds = %if.then.35
  %47 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %48 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %49 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %call40 = call i32 @insert_wedge_vertex_list_elem(%struct.patch_fill_state_s* %47, %struct.wedge_vertex_list_t* %48, %struct.gs_fixed_point_s* %49, %struct.wedge_vertex_list_elem_s** %e) #5
  store i32 %call40, i32* %code, align 4, !tbaa !5
  %50 = load i32, i32* %code, align 4, !tbaa !5
  %cmp41 = icmp slt i32 %50, 0
  br i1 %cmp41, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.end.39
  %51 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %51, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.43:                                        ; preds = %if.end.39
  %52 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count44 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %52, i32 0, i32 2
  %53 = load i32, i32* %divide_count44, align 4, !tbaa !178
  %inc45 = add nsw i32 %53, 1
  store i32 %inc45, i32* %divide_count44, align 4, !tbaa !178
  br label %if.end.113

if.else.46:                                       ; preds = %if.else
  %54 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg47 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %54, i32 0, i32 1
  %55 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg47, align 8, !tbaa !170
  %p48 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %55, i32 0, i32 0
  %x49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p48, i32 0, i32 0
  %56 = load i32, i32* %x49, align 4, !tbaa !175
  %57 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %57, i32 0, i32 0
  %58 = load i32, i32* %x50, align 4, !tbaa !109
  %cmp51 = icmp ne i32 %56, %58
  br i1 %cmp51, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.else.46
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.53:                                        ; preds = %if.else.46
  %59 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg54 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %59, i32 0, i32 1
  %60 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg54, align 8, !tbaa !170
  %p55 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %60, i32 0, i32 0
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p55, i32 0, i32 1
  %61 = load i32, i32* %y56, align 4, !tbaa !177
  %62 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %62, i32 0, i32 1
  %63 = load i32, i32* %y57, align 4, !tbaa !110
  %cmp58 = icmp ne i32 %61, %63
  br i1 %cmp58, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %if.end.53
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.60:                                        ; preds = %if.end.53
  %64 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end61 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %64, i32 0, i32 2
  %65 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end61, align 8, !tbaa !174
  %p62 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %65, i32 0, i32 0
  %x63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p62, i32 0, i32 0
  %66 = load i32, i32* %x63, align 4, !tbaa !175
  %67 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %67, i32 0, i32 0
  %68 = load i32, i32* %x64, align 4, !tbaa !109
  %cmp65 = icmp ne i32 %66, %68
  br i1 %cmp65, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %if.end.60
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.67:                                        ; preds = %if.end.60
  %69 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end68 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %69, i32 0, i32 2
  %70 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end68, align 8, !tbaa !174
  %p69 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %70, i32 0, i32 0
  %y70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p69, i32 0, i32 1
  %71 = load i32, i32* %y70, align 4, !tbaa !177
  %72 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %72, i32 0, i32 1
  %73 = load i32, i32* %y71, align 4, !tbaa !110
  %cmp72 = icmp ne i32 %71, %73
  br i1 %cmp72, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.end.67
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.74:                                        ; preds = %if.end.67
  %74 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg75 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %74, i32 0, i32 1
  %75 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg75, align 8, !tbaa !170
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %75, i32 0, i32 3
  %76 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  %77 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end76 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %77, i32 0, i32 2
  %78 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end76, align 8, !tbaa !174
  %cmp77 = icmp eq %struct.wedge_vertex_list_elem_s* %76, %78
  br i1 %cmp77, label %if.then.78, label %if.else.85

if.then.78:                                       ; preds = %if.end.74
  %79 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %80 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %81 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %call79 = call i32 @insert_wedge_vertex_list_elem(%struct.patch_fill_state_s* %79, %struct.wedge_vertex_list_t* %80, %struct.gs_fixed_point_s* %81, %struct.wedge_vertex_list_elem_s** %e) #5
  store i32 %call79, i32* %code, align 4, !tbaa !5
  %82 = load i32, i32* %code, align 4, !tbaa !5
  %cmp80 = icmp slt i32 %82, 0
  br i1 %cmp80, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.then.78
  %83 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %83, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.82:                                        ; preds = %if.then.78
  %84 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count83 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %84, i32 0, i32 2
  %85 = load i32, i32* %divide_count83, align 4, !tbaa !178
  %inc84 = add nsw i32 %85, 1
  store i32 %inc84, i32* %divide_count83, align 4, !tbaa !178
  br label %if.end.112

if.else.85:                                       ; preds = %if.end.74
  %86 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg86 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %86, i32 0, i32 1
  %87 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg86, align 8, !tbaa !170
  %88 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end87 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %88, i32 0, i32 2
  %89 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end87, align 8, !tbaa !174
  %90 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg88 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %90, i32 0, i32 1
  %91 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg88, align 8, !tbaa !170
  %level = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %91, i32 0, i32 1
  %92 = load i32, i32* %level, align 4, !tbaa !180
  %93 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end89 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %93, i32 0, i32 2
  %94 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end89, align 8, !tbaa !174
  %level90 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %94, i32 0, i32 1
  %95 = load i32, i32* %level90, align 4, !tbaa !180
  %cmp91 = icmp sgt i32 %92, %95
  br i1 %cmp91, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else.85
  %96 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg92 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %96, i32 0, i32 1
  %97 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg92, align 8, !tbaa !170
  %level93 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %97, i32 0, i32 1
  %98 = load i32, i32* %level93, align 4, !tbaa !180
  br label %cond.end

cond.false:                                       ; preds = %if.else.85
  %99 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end94 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %99, i32 0, i32 2
  %100 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end94, align 8, !tbaa !174
  %level95 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %100, i32 0, i32 1
  %101 = load i32, i32* %level95, align 4, !tbaa !180
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %98, %cond.true ], [ %101, %cond.false ]
  %add = add nsw i32 %cond, 1
  %call96 = call %struct.wedge_vertex_list_elem_s* @wedge_vertex_list_find(%struct.wedge_vertex_list_elem_s* %87, %struct.wedge_vertex_list_elem_s* %89, i32 %add) #5
  store %struct.wedge_vertex_list_elem_s* %call96, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %102 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %cmp97 = icmp eq %struct.wedge_vertex_list_elem_s* %102, null
  br i1 %cmp97, label %if.then.98, label %if.end.99

if.then.98:                                       ; preds = %cond.end
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.99:                                        ; preds = %cond.end
  %103 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %p100 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %103, i32 0, i32 0
  %x101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p100, i32 0, i32 0
  %104 = load i32, i32* %x101, align 4, !tbaa !175
  %105 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %x102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %105, i32 0, i32 0
  %106 = load i32, i32* %x102, align 4, !tbaa !109
  %cmp103 = icmp ne i32 %104, %106
  br i1 %cmp103, label %if.then.108, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.99
  %107 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %p104 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %107, i32 0, i32 0
  %y105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p104, i32 0, i32 1
  %108 = load i32, i32* %y105, align 4, !tbaa !177
  %109 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pm.addr, align 8, !tbaa !1
  %y106 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %109, i32 0, i32 1
  %110 = load i32, i32* %y106, align 4, !tbaa !110
  %cmp107 = icmp ne i32 %108, %110
  br i1 %cmp107, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %lor.lhs.false, %if.end.99
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.109:                                       ; preds = %lor.lhs.false
  %111 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count110 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %111, i32 0, i32 2
  %112 = load i32, i32* %divide_count110, align 4, !tbaa !178
  %inc111 = add nsw i32 %112, 1
  store i32 %inc111, i32* %divide_count110, align 4, !tbaa !178
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.109, %if.end.82
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %if.end.43
  br label %if.end.114

if.end.114:                                       ; preds = %if.end.113, %if.end.32
  %113 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %114 = load %struct.wedge_vertex_list_elem_s**, %struct.wedge_vertex_list_elem_s*** %r.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %113, %struct.wedge_vertex_list_elem_s** %114, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.114, %if.then.108, %if.then.98, %if.then.81, %if.then.73, %if.then.66, %if.then.59, %if.then.52, %if.then.42, %if.then.38, %if.then.31, %if.then.27, %if.then.20, %if.then.14, %if.then.8, %if.then.3
  %115 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #2
  %116 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.end(i64 8, i8* %116) #2
  %117 = load i32, i32* %retval
  ret i32 %117
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @create_wedge_vertex_list(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %l, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %0 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %0, i32 0, i32 2
  %1 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end, align 8, !tbaa !174
  %cmp = icmp ne %struct.wedge_vertex_list_elem_s* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call %struct.wedge_vertex_list_elem_s* @wedge_vertex_list_elem_reserve(%struct.patch_fill_state_s* %2) #5
  %3 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %3, i32 0, i32 1
  store %struct.wedge_vertex_list_elem_s* %call, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %4 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call1 = call %struct.wedge_vertex_list_elem_s* @wedge_vertex_list_elem_reserve(%struct.patch_fill_state_s* %4) #5
  %5 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end2 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %5, i32 0, i32 2
  store %struct.wedge_vertex_list_elem_s* %call1, %struct.wedge_vertex_list_elem_s** %end2, align 8, !tbaa !174
  %6 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg3 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %6, i32 0, i32 1
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg3, align 8, !tbaa !170
  %cmp4 = icmp eq %struct.wedge_vertex_list_elem_s* %7, null
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  store i32 -28, i32* %retval
  br label %return

if.end.6:                                         ; preds = %if.end
  %8 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end7 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %8, i32 0, i32 2
  %9 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end7, align 8, !tbaa !174
  %cmp8 = icmp eq %struct.wedge_vertex_list_elem_s* %9, null
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  store i32 -28, i32* %retval
  br label %return

if.end.10:                                        ; preds = %if.end.6
  %10 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end11 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %10, i32 0, i32 2
  %11 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end11, align 8, !tbaa !174
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %11, i32 0, i32 3
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  %12 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg12 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %12, i32 0, i32 1
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg12, align 8, !tbaa !170
  %prev = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %13, i32 0, i32 4
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %prev, align 8, !tbaa !181
  %14 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end13 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %14, i32 0, i32 2
  %15 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end13, align 8, !tbaa !174
  %16 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg14 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %16, i32 0, i32 1
  %17 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg14, align 8, !tbaa !170
  %next15 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %17, i32 0, i32 3
  store %struct.wedge_vertex_list_elem_s* %15, %struct.wedge_vertex_list_elem_s** %next15, align 8, !tbaa !179
  %18 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg16 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %18, i32 0, i32 1
  %19 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg16, align 8, !tbaa !170
  %20 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end17 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %20, i32 0, i32 2
  %21 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end17, align 8, !tbaa !174
  %prev18 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %21, i32 0, i32 4
  store %struct.wedge_vertex_list_elem_s* %19, %struct.wedge_vertex_list_elem_s** %prev18, align 8, !tbaa !181
  %22 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg19 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %22, i32 0, i32 1
  %23 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg19, align 8, !tbaa !170
  %p = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %23, i32 0, i32 0
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %25 = bitcast %struct.gs_fixed_point_s* %p to i8*
  %26 = bitcast %struct.gs_fixed_point_s* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 4, i1 false), !tbaa.struct !117
  %27 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end20 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %27, i32 0, i32 2
  %28 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end20, align 8, !tbaa !174
  %p21 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %28, i32 0, i32 0
  %29 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %30 = bitcast %struct.gs_fixed_point_s* %p21 to i8*
  %31 = bitcast %struct.gs_fixed_point_s* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 4, i1 false), !tbaa.struct !117
  %32 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end22 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %32, i32 0, i32 2
  %33 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end22, align 8, !tbaa !174
  %level = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %33, i32 0, i32 1
  store i32 0, i32* %level, align 4, !tbaa !180
  %34 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg23 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %34, i32 0, i32 1
  %35 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg23, align 8, !tbaa !170
  %level24 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %35, i32 0, i32 1
  store i32 0, i32* %level24, align 4, !tbaa !180
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.10, %if.then.9, %if.then.5, %if.then
  %36 = load i32, i32* %retval
  ret i32 %36
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @insert_wedge_vertex_list_elem(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %l, %struct.gs_fixed_point_s* %p, %struct.wedge_vertex_list_elem_s** %r) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %p.addr = alloca %struct.gs_fixed_point_s*, align 8
  %r.addr = alloca %struct.wedge_vertex_list_elem_s**, align 8
  %e = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %cleanup.dest.slot = alloca i32
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p, %struct.gs_fixed_point_s** %p.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s** %r, %struct.wedge_vertex_list_elem_s*** %r.addr, align 8, !tbaa !1
  %0 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call %struct.wedge_vertex_list_elem_s* @wedge_vertex_list_elem_reserve(%struct.patch_fill_state_s* %1) #5
  store %struct.wedge_vertex_list_elem_s* %call, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %2 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %cmp = icmp eq %struct.wedge_vertex_list_elem_s* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end:                                           ; preds = %entry
  %3 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %3, i32 0, i32 1
  %4 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %4, i32 0, i32 3
  %5 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  %6 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %6, i32 0, i32 2
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end, align 8, !tbaa !174
  %cmp1 = icmp ne %struct.wedge_vertex_list_elem_s* %5, %7
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.3:                                         ; preds = %if.end
  %8 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end4 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %8, i32 0, i32 2
  %9 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end4, align 8, !tbaa !174
  %prev = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %9, i32 0, i32 4
  %10 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %prev, align 8, !tbaa !181
  %11 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg5 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %11, i32 0, i32 1
  %12 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg5, align 8, !tbaa !170
  %cmp6 = icmp ne %struct.wedge_vertex_list_elem_s* %10, %12
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end.3
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

if.end.8:                                         ; preds = %if.end.3
  %13 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end9 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %13, i32 0, i32 2
  %14 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end9, align 8, !tbaa !174
  %15 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %next10 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %15, i32 0, i32 3
  store %struct.wedge_vertex_list_elem_s* %14, %struct.wedge_vertex_list_elem_s** %next10, align 8, !tbaa !179
  %16 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg11 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %16, i32 0, i32 1
  %17 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg11, align 8, !tbaa !170
  %18 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %prev12 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %18, i32 0, i32 4
  store %struct.wedge_vertex_list_elem_s* %17, %struct.wedge_vertex_list_elem_s** %prev12, align 8, !tbaa !181
  %19 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %p13 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %19, i32 0, i32 0
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p.addr, align 8, !tbaa !1
  %21 = bitcast %struct.gs_fixed_point_s* %p13 to i8*
  %22 = bitcast %struct.gs_fixed_point_s* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !tbaa.struct !117
  %23 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg14 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %23, i32 0, i32 1
  %24 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg14, align 8, !tbaa !170
  %level = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %24, i32 0, i32 1
  %25 = load i32, i32* %level, align 4, !tbaa !180
  %26 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end15 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %26, i32 0, i32 2
  %27 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end15, align 8, !tbaa !174
  %level16 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %27, i32 0, i32 1
  %28 = load i32, i32* %level16, align 4, !tbaa !180
  %cmp17 = icmp sgt i32 %25, %28
  br i1 %cmp17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.8
  %29 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg18 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %29, i32 0, i32 1
  %30 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg18, align 8, !tbaa !170
  %level19 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %30, i32 0, i32 1
  %31 = load i32, i32* %level19, align 4, !tbaa !180
  br label %cond.end

cond.false:                                       ; preds = %if.end.8
  %32 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end20 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %32, i32 0, i32 2
  %33 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end20, align 8, !tbaa !174
  %level21 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %33, i32 0, i32 1
  %34 = load i32, i32* %level21, align 4, !tbaa !180
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %31, %cond.true ], [ %34, %cond.false ]
  %add = add nsw i32 %cond, 1
  %35 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %level22 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %35, i32 0, i32 1
  store i32 %add, i32* %level22, align 4, !tbaa !180
  %36 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %36, i32 0, i32 2
  store i32 0, i32* %divide_count, align 4, !tbaa !178
  %37 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %38 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end23 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %38, i32 0, i32 2
  %39 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end23, align 8, !tbaa !174
  %prev24 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %39, i32 0, i32 4
  store %struct.wedge_vertex_list_elem_s* %37, %struct.wedge_vertex_list_elem_s** %prev24, align 8, !tbaa !181
  %40 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg25 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %40, i32 0, i32 1
  %41 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg25, align 8, !tbaa !170
  %next26 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %41, i32 0, i32 3
  store %struct.wedge_vertex_list_elem_s* %37, %struct.wedge_vertex_list_elem_s** %next26, align 8, !tbaa !179
  %42 = bitcast i32* %sx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %42) #2
  %43 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg27 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %43, i32 0, i32 1
  %44 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg27, align 8, !tbaa !170
  %p28 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %44, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p28, i32 0, i32 0
  %45 = load i32, i32* %x, align 4, !tbaa !175
  %46 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end29 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %46, i32 0, i32 2
  %47 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end29, align 8, !tbaa !174
  %p30 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %47, i32 0, i32 0
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p30, i32 0, i32 0
  %48 = load i32, i32* %x31, align 4, !tbaa !175
  %cmp32 = icmp slt i32 %45, %48
  %cond33 = select i1 %cmp32, i32 1, i32 -1
  store i32 %cond33, i32* %sx, align 4, !tbaa !5
  %49 = bitcast i32* %sy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %49) #2
  %50 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg34 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %50, i32 0, i32 1
  %51 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg34, align 8, !tbaa !170
  %p35 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %51, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p35, i32 0, i32 1
  %52 = load i32, i32* %y, align 4, !tbaa !177
  %53 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end36 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %53, i32 0, i32 2
  %54 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end36, align 8, !tbaa !174
  %p37 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %54, i32 0, i32 0
  %y38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p37, i32 0, i32 1
  %55 = load i32, i32* %y38, align 4, !tbaa !177
  %cmp39 = icmp slt i32 %52, %55
  %cond40 = select i1 %cmp39, i32 1, i32 -1
  store i32 %cond40, i32* %sy, align 4, !tbaa !5
  %56 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p.addr, align 8, !tbaa !1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %56, i32 0, i32 0
  %57 = load i32, i32* %x41, align 4, !tbaa !109
  %58 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg42 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %58, i32 0, i32 1
  %59 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg42, align 8, !tbaa !170
  %p43 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %59, i32 0, i32 0
  %x44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p43, i32 0, i32 0
  %60 = load i32, i32* %x44, align 4, !tbaa !175
  %sub = sub nsw i32 %57, %60
  %61 = load i32, i32* %sx, align 4, !tbaa !5
  %mul = mul nsw i32 %sub, %61
  %cmp45 = icmp slt i32 %mul, 0
  br i1 %cmp45, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %cond.end
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %cond.end
  %62 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p.addr, align 8, !tbaa !1
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %62, i32 0, i32 1
  %63 = load i32, i32* %y48, align 4, !tbaa !110
  %64 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg49 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %64, i32 0, i32 1
  %65 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg49, align 8, !tbaa !170
  %p50 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %65, i32 0, i32 0
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p50, i32 0, i32 1
  %66 = load i32, i32* %y51, align 4, !tbaa !177
  %sub52 = sub nsw i32 %63, %66
  %67 = load i32, i32* %sy, align 4, !tbaa !5
  %mul53 = mul nsw i32 %sub52, %67
  %cmp54 = icmp slt i32 %mul53, 0
  br i1 %cmp54, label %if.then.55, label %if.end.56

if.then.55:                                       ; preds = %if.end.47
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.56:                                        ; preds = %if.end.47
  %68 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end57 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %68, i32 0, i32 2
  %69 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end57, align 8, !tbaa !174
  %p58 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %69, i32 0, i32 0
  %x59 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p58, i32 0, i32 0
  %70 = load i32, i32* %x59, align 4, !tbaa !175
  %71 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p.addr, align 8, !tbaa !1
  %x60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %71, i32 0, i32 0
  %72 = load i32, i32* %x60, align 4, !tbaa !109
  %sub61 = sub nsw i32 %70, %72
  %73 = load i32, i32* %sx, align 4, !tbaa !5
  %mul62 = mul nsw i32 %sub61, %73
  %cmp63 = icmp slt i32 %mul62, 0
  br i1 %cmp63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.end.56
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.end.56
  %74 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end66 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %74, i32 0, i32 2
  %75 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end66, align 8, !tbaa !174
  %p67 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %75, i32 0, i32 0
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p67, i32 0, i32 1
  %76 = load i32, i32* %y68, align 4, !tbaa !177
  %77 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p.addr, align 8, !tbaa !1
  %y69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %77, i32 0, i32 1
  %78 = load i32, i32* %y69, align 4, !tbaa !110
  %sub70 = sub nsw i32 %76, %78
  %79 = load i32, i32* %sy, align 4, !tbaa !5
  %mul71 = mul nsw i32 %sub70, %79
  %cmp72 = icmp slt i32 %mul71, 0
  br i1 %cmp72, label %if.then.73, label %if.end.74

if.then.73:                                       ; preds = %if.end.65
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.74:                                        ; preds = %if.end.65
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.74, %if.then.73, %if.then.64, %if.then.55, %if.then.46
  %80 = bitcast i32* %sy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %80) #2
  %81 = bitcast i32* %sx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %81) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.76 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  %82 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %83 = load %struct.wedge_vertex_list_elem_s**, %struct.wedge_vertex_list_elem_s*** %r.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %82, %struct.wedge_vertex_list_elem_s** %83, align 8, !tbaa !1
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.76

cleanup.76:                                       ; preds = %cleanup.cont, %cleanup, %if.then.7, %if.then.2, %if.then
  %84 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #2
  %85 = load i32, i32* %retval
  ret i32 %85
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.wedge_vertex_list_elem_s* @wedge_vertex_list_find(%struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s* %end, i32 %level) #1 {
entry:
  %retval = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %beg.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %end.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %level.addr = alloca i32, align 4
  %e = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %end, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  store i32 %level, i32* %level.addr, align 4, !tbaa !5
  %0 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %1, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %2 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct.wedge_vertex_list_elem_s* %2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %cmp1 = icmp eq %struct.wedge_vertex_list_elem_s* %3, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %5 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %cmp2 = icmp ne %struct.wedge_vertex_list_elem_s* %4, %5
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %level3 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %6, i32 0, i32 1
  %7 = load i32, i32* %level3, align 4, !tbaa !180
  %8 = load i32, i32* %level.addr, align 4, !tbaa !5
  %cmp4 = icmp eq i32 %7, %8
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %for.body
  %9 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %9, %struct.wedge_vertex_list_elem_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.6:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.6
  %10 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %10, i32 0, i32 3
  %11 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  store %struct.wedge_vertex_list_elem_s* %11, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then.5, %if.then
  %12 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.end(i64 8, i8* %12) #2
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %retval
  ret %struct.wedge_vertex_list_elem_s* %13
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.wedge_vertex_list_elem_s* @wedge_vertex_list_elem_reserve(%struct.patch_fill_state_s* %pfs) #1 {
entry:
  %retval = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %e = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %0 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %free_wedge_vertex = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 15
  %2 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %free_wedge_vertex, align 8, !tbaa !76
  store %struct.wedge_vertex_list_elem_s* %2, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %3 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %cmp = icmp ne %struct.wedge_vertex_list_elem_s* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %4, i32 0, i32 3
  %5 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %free_wedge_vertex1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 15
  store %struct.wedge_vertex_list_elem_s* %5, %struct.wedge_vertex_list_elem_s** %free_wedge_vertex1, align 8, !tbaa !76
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %7, %struct.wedge_vertex_list_elem_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 16
  %9 = load i32, i32* %wedge_vertex_list_elem_count, align 4, !tbaa !120
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count_max = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %10, i32 0, i32 17
  %11 = load i32, i32* %wedge_vertex_list_elem_count_max, align 4, !tbaa !118
  %cmp2 = icmp slt i32 %9, %11
  br i1 %cmp2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_buffer = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 14
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %wedge_vertex_list_elem_buffer, align 8, !tbaa !75
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %wedge_vertex_list_elem_count4 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %14, i32 0, i32 16
  %15 = load i32, i32* %wedge_vertex_list_elem_count4, align 4, !tbaa !120
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %wedge_vertex_list_elem_count4, align 4, !tbaa !120
  %idx.ext = sext i32 %15 to i64
  %add.ptr = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %13, i64 %idx.ext
  store %struct.wedge_vertex_list_elem_s* %add.ptr, %struct.wedge_vertex_list_elem_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.end
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.5, %if.then.3, %if.then
  %16 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #2
  %17 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %retval
  ret %struct.wedge_vertex_list_elem_s* %17
}

; Function Attrs: nounwind uwtable
define internal i32 @fill_wedge_from_list(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %l, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %1, i32 0, i32 1
  %2 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %3 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %3, i32 0, i32 2
  %4 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end, align 8, !tbaa !174
  %5 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg1 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %5, i32 0, i32 1
  %6 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg1, align 8, !tbaa !170
  %level = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %6, i32 0, i32 1
  %7 = load i32, i32* %level, align 4, !tbaa !180
  %8 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end2 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %8, i32 0, i32 2
  %9 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end2, align 8, !tbaa !174
  %level3 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %9, i32 0, i32 1
  %10 = load i32, i32* %level3, align 4, !tbaa !180
  %cmp = icmp sgt i32 %7, %10
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %11 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %beg4 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %11, i32 0, i32 1
  %12 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg4, align 8, !tbaa !170
  %level5 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %12, i32 0, i32 1
  %13 = load i32, i32* %level5, align 4, !tbaa !180
  br label %cond.end

cond.false:                                       ; preds = %entry
  %14 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %end6 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %14, i32 0, i32 2
  %15 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end6, align 8, !tbaa !174
  %level7 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %15, i32 0, i32 1
  %16 = load i32, i32* %level7, align 4, !tbaa !180
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %16, %cond.false ]
  %17 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %18 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call = call i32 @fill_wedge_from_list_rec(%struct.patch_fill_state_s* %0, %struct.wedge_vertex_list_elem_s* %2, %struct.wedge_vertex_list_elem_s* %4, i32 %cond, %struct.patch_color_s* %17, %struct.patch_color_s* %18) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @release_wedge_vertex_list_interval(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s* %end) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %beg.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %end.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %e = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %ee = alloca %struct.wedge_vertex_list_elem_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %end, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %0 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #2
  %1 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %1, i32 0, i32 3
  %2 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  store %struct.wedge_vertex_list_elem_s* %2, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %3 = bitcast %struct.wedge_vertex_list_elem_s** %ee to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %5 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next1 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %5, i32 0, i32 3
  store %struct.wedge_vertex_list_elem_s* %4, %struct.wedge_vertex_list_elem_s** %next1, align 8, !tbaa !179
  %6 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %prev = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %7, i32 0, i32 4
  store %struct.wedge_vertex_list_elem_s* %6, %struct.wedge_vertex_list_elem_s** %prev, align 8, !tbaa !181
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %9 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.wedge_vertex_list_elem_s* %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %next2 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %10, i32 0, i32 3
  %11 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next2, align 8, !tbaa !179
  store %struct.wedge_vertex_list_elem_s* %11, %struct.wedge_vertex_list_elem_s** %ee, align 8, !tbaa !1
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  call void @wedge_vertex_list_elem_release(%struct.patch_fill_state_s* %12, %struct.wedge_vertex_list_elem_s* %13) #5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %ee, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %14, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = bitcast %struct.wedge_vertex_list_elem_s** %ee to i8*
  call void @llvm.lifetime.end(i64 8, i8* %15) #2
  %16 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.end(i64 8, i8* %16) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @fill_wedge_from_list_rec(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s* %end, i32 %level, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %beg.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %end.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %level.addr = alloca i32, align 4
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %p = alloca %struct.gs_fixed_point_s, align 4
  %e = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %c = alloca %struct.patch_color_s*, align 8
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %end, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  store i32 %level, i32* %level.addr, align 4, !tbaa !5
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %0, i32 0, i32 3
  %1 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  %2 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct.wedge_vertex_list_elem_s* %1, %2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %3 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next1 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %3, i32 0, i32 3
  %4 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next1, align 8, !tbaa !179
  %next2 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %4, i32 0, i32 3
  %5 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next2, align 8, !tbaa !179
  %6 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %cmp3 = icmp eq %struct.wedge_vertex_list_elem_s* %5, %6
  br i1 %cmp3, label %if.then.4, label %if.else.17

if.then.4:                                        ; preds = %if.else
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next5 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %7, i32 0, i32 3
  %8 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next5, align 8, !tbaa !179
  %divide_count = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %8, i32 0, i32 2
  %9 = load i32, i32* %divide_count, align 4, !tbaa !178
  %cmp6 = icmp ne i32 %9, 1
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then.4
  %10 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next7 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %10, i32 0, i32 3
  %11 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next7, align 8, !tbaa !179
  %divide_count8 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %11, i32 0, i32 2
  %12 = load i32, i32* %divide_count8, align 4, !tbaa !178
  %cmp9 = icmp ne i32 %12, 2
  br i1 %cmp9, label %if.then.10, label %if.end

if.then.10:                                       ; preds = %land.lhs.true
  store i32 -28, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %if.then.4
  %13 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next11 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %13, i32 0, i32 3
  %14 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next11, align 8, !tbaa !179
  %divide_count12 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %14, i32 0, i32 2
  %15 = load i32, i32* %divide_count12, align 4, !tbaa !178
  %cmp13 = icmp ne i32 %15, 1
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.15:                                        ; preds = %if.end
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %17 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %18 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %19 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %next16 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %19, i32 0, i32 3
  %20 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %next16, align 8, !tbaa !179
  %21 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call = call i32 @fill_triangle_wedge_from_list(%struct.patch_fill_state_s* %16, %struct.wedge_vertex_list_elem_s* %17, %struct.wedge_vertex_list_elem_s* %18, %struct.wedge_vertex_list_elem_s* %20, %struct.patch_color_s* %21, %struct.patch_color_s* %22) #5
  store i32 %call, i32* %retval
  br label %return

if.else.17:                                       ; preds = %if.else
  %23 = bitcast %struct.gs_fixed_point_s* %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #2
  %24 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #2
  %25 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.start(i64 8, i8* %25) #2
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #2
  %27 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %27) #2
  %28 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call18 = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %28, %struct.patch_color_s** %c, i32 1) #5
  store i8* %call18, i8** %color_stack_ptr, align 8, !tbaa !1
  %29 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp19 = icmp eq i8* %29, null
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.else.17
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.else.17
  %30 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %30, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p22, i32 0, i32 0
  %31 = load i32, i32* %x, align 4, !tbaa !175
  %32 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %p23 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %32, i32 0, i32 0
  %x24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p23, i32 0, i32 0
  %33 = load i32, i32* %x24, align 4, !tbaa !175
  %add = add nsw i32 %31, %33
  %div = sdiv i32 %add, 2
  %x25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  store i32 %div, i32* %x25, align 4, !tbaa !109
  %34 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %p26 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %34, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p26, i32 0, i32 1
  %35 = load i32, i32* %y, align 4, !tbaa !177
  %36 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %p27 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %36, i32 0, i32 0
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p27, i32 0, i32 1
  %37 = load i32, i32* %y28, align 4, !tbaa !177
  %add29 = add nsw i32 %35, %37
  %div30 = sdiv i32 %add29, 2
  %y31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  store i32 %div30, i32* %y31, align 4, !tbaa !110
  %38 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %39 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %40 = load i32, i32* %level.addr, align 4, !tbaa !5
  %add32 = add nsw i32 %40, 1
  %call33 = call %struct.wedge_vertex_list_elem_s* @wedge_vertex_list_find(%struct.wedge_vertex_list_elem_s* %38, %struct.wedge_vertex_list_elem_s* %39, i32 %add32) #5
  store %struct.wedge_vertex_list_elem_s* %call33, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %41 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %cmp34 = icmp eq %struct.wedge_vertex_list_elem_s* %41, null
  br i1 %cmp34, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.21
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.36:                                        ; preds = %if.end.21
  %42 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %p37 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %42, i32 0, i32 0
  %x38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p37, i32 0, i32 0
  %43 = load i32, i32* %x38, align 4, !tbaa !175
  %x39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %44 = load i32, i32* %x39, align 4, !tbaa !109
  %cmp40 = icmp ne i32 %43, %44
  br i1 %cmp40, label %if.then.45, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.36
  %45 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %p41 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %45, i32 0, i32 0
  %y42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p41, i32 0, i32 1
  %46 = load i32, i32* %y42, align 4, !tbaa !177
  %y43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 1
  %47 = load i32, i32* %y43, align 4, !tbaa !110
  %cmp44 = icmp ne i32 %46, %47
  br i1 %cmp44, label %if.then.45, label %if.end.46

if.then.45:                                       ; preds = %lor.lhs.false, %if.end.36
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.46:                                        ; preds = %lor.lhs.false
  %48 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %49 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %50 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %51 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %48, %struct.patch_color_s* %49, %struct.patch_color_s* %50, %struct.patch_fill_state_s* %51, double 5.000000e-01) #5
  %52 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %53 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %54 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %55 = load i32, i32* %level.addr, align 4, !tbaa !5
  %add47 = add nsw i32 %55, 1
  %56 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %57 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %call48 = call i32 @fill_wedge_from_list_rec(%struct.patch_fill_state_s* %52, %struct.wedge_vertex_list_elem_s* %53, %struct.wedge_vertex_list_elem_s* %54, i32 %add47, %struct.patch_color_s* %56, %struct.patch_color_s* %57) #5
  store i32 %call48, i32* %code, align 4, !tbaa !5
  %58 = load i32, i32* %code, align 4, !tbaa !5
  %cmp49 = icmp sge i32 %58, 0
  br i1 %cmp49, label %if.then.50, label %if.end.53

if.then.50:                                       ; preds = %if.end.46
  %59 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %60 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %61 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %62 = load i32, i32* %level.addr, align 4, !tbaa !5
  %add51 = add nsw i32 %62, 1
  %63 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %64 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call52 = call i32 @fill_wedge_from_list_rec(%struct.patch_fill_state_s* %59, %struct.wedge_vertex_list_elem_s* %60, %struct.wedge_vertex_list_elem_s* %61, i32 %add51, %struct.patch_color_s* %63, %struct.patch_color_s* %64) #5
  store i32 %call52, i32* %code, align 4, !tbaa !5
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.50, %if.end.46
  %65 = load i32, i32* %code, align 4, !tbaa !5
  %cmp54 = icmp sge i32 %65, 0
  br i1 %cmp54, label %if.then.55, label %if.end.68

if.then.55:                                       ; preds = %if.end.53
  %66 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count56 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %66, i32 0, i32 2
  %67 = load i32, i32* %divide_count56, align 4, !tbaa !178
  %cmp57 = icmp ne i32 %67, 1
  br i1 %cmp57, label %land.lhs.true.58, label %if.end.62

land.lhs.true.58:                                 ; preds = %if.then.55
  %68 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count59 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %68, i32 0, i32 2
  %69 = load i32, i32* %divide_count59, align 4, !tbaa !178
  %cmp60 = icmp ne i32 %69, 2
  br i1 %cmp60, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %land.lhs.true.58
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.62:                                        ; preds = %land.lhs.true.58, %if.then.55
  %70 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %divide_count63 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %70, i32 0, i32 2
  %71 = load i32, i32* %divide_count63, align 4, !tbaa !178
  %cmp64 = icmp eq i32 %71, 1
  br i1 %cmp64, label %if.then.65, label %if.end.67

if.then.65:                                       ; preds = %if.end.62
  %72 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %73 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %74 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %75 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e, align 8, !tbaa !1
  %76 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %77 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call66 = call i32 @fill_triangle_wedge_from_list(%struct.patch_fill_state_s* %72, %struct.wedge_vertex_list_elem_s* %73, %struct.wedge_vertex_list_elem_s* %74, %struct.wedge_vertex_list_elem_s* %75, %struct.patch_color_s* %76, %struct.patch_color_s* %77) #5
  store i32 %call66, i32* %code, align 4, !tbaa !5
  br label %if.end.67

if.end.67:                                        ; preds = %if.then.65, %if.end.62
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.end.53
  %78 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %79 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %78, i8* %79, i32 1) #5
  %80 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %80, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.68, %if.then.61, %if.then.45, %if.then.35, %if.then.20
  %81 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %81) #2
  %82 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #2
  %83 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #2
  %84 = bitcast %struct.wedge_vertex_list_elem_s** %e to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #2
  %85 = bitcast %struct.gs_fixed_point_s* %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %85) #2
  br label %return

return:                                           ; preds = %cleanup, %if.end.15, %if.then.14, %if.then.10, %if.then
  %86 = load i32, i32* %retval
  ret i32 %86
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fill_triangle_wedge_from_list(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s* %end, %struct.wedge_vertex_list_elem_s* %mid, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %beg.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %end.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %mid.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %p = alloca [3 x %struct.shading_vertex_s], align 16
  %c = alloca %struct.patch_color_s*, align 8
  %color_stack_ptr = alloca i8*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %beg, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %end, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %mid, %struct.wedge_vertex_list_elem_s** %mid.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast [3 x %struct.shading_vertex_s]* %p to i8*
  call void @llvm.lifetime.start(i64 48, i8* %0) #2
  %1 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %3, %struct.patch_color_s** %c, i32 1) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp = icmp eq i8* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %c2 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx, i32 0, i32 1
  store %struct.patch_color_s* %6, %struct.patch_color_s** %c2, align 8, !tbaa !150
  %arrayidx3 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %p4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx3, i32 0, i32 0
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg.addr, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %7, i32 0, i32 0
  %8 = bitcast %struct.gs_fixed_point_s* %p4 to i8*
  %9 = bitcast %struct.gs_fixed_point_s* %p5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false), !tbaa.struct !117
  %10 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %c7 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx6, i32 0, i32 1
  store %struct.patch_color_s* %10, %struct.patch_color_s** %c7, align 8, !tbaa !150
  %arrayidx8 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %p9 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx8, i32 0, i32 0
  %11 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %11, i32 0, i32 0
  %12 = bitcast %struct.gs_fixed_point_s* %p9 to i8*
  %13 = bitcast %struct.gs_fixed_point_s* %p10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 4, i1 false), !tbaa.struct !117
  %14 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %c12 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx11, i32 0, i32 1
  store %struct.patch_color_s* %14, %struct.patch_color_s** %c12, align 8, !tbaa !150
  %arrayidx13 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %p14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx13, i32 0, i32 0
  %15 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %mid.addr, align 8, !tbaa !1
  %p15 = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %15, i32 0, i32 0
  %16 = bitcast %struct.gs_fixed_point_s* %p14 to i8*
  %17 = bitcast %struct.gs_fixed_point_s* %p15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false), !tbaa.struct !117
  %18 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %19 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %20 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %18, %struct.patch_color_s* %19, %struct.patch_color_s* %20, %struct.patch_fill_state_s* %21, double 5.000000e-01) #5
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx16 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %arrayidx17 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %arrayidx18 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %call19 = call i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %22, %struct.shading_vertex_s* %arrayidx16, %struct.shading_vertex_s* %arrayidx17, %struct.shading_vertex_s* %arrayidx18) #5
  store i32 %call19, i32* %code, align 4, !tbaa !5
  %23 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %24 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %23, i8* %24, i32 1) #5
  %25 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %25, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %26 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %26) #2
  %27 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #2
  %28 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.end(i64 8, i8* %28) #2
  %29 = bitcast [3 x %struct.shading_vertex_s]* %p to i8*
  call void @llvm.lifetime.end(i64 48, i8* %29) #2
  %30 = load i32, i32* %retval
  ret i32 %30
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %q0, %struct.shading_vertex_s* %q1, %struct.shading_vertex_s* %q2) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %q0.addr = alloca %struct.shading_vertex_s*, align 8
  %q1.addr = alloca %struct.shading_vertex_s*, align 8
  %q2.addr = alloca %struct.shading_vertex_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q0, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q1, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q2, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %0 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %0, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %1 = load i32, i32* %x, align 4, !tbaa !155
  %2 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %2, i32 0, i32 0
  %x2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1, i32 0, i32 0
  %3 = load i32, i32* %x2, align 4, !tbaa !155
  %sub = sub nsw i32 %1, %3
  %conv = sext i32 %sub to i64
  %4 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %4, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p3, i32 0, i32 1
  %5 = load i32, i32* %y, align 4, !tbaa !156
  %6 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %6, i32 0, i32 0
  %y5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p4, i32 0, i32 1
  %7 = load i32, i32* %y5, align 4, !tbaa !156
  %sub6 = sub nsw i32 %5, %7
  %conv7 = sext i32 %sub6 to i64
  %mul = mul nsw i64 %conv, %conv7
  %8 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p8 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %8, i32 0, i32 0
  %y9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p8, i32 0, i32 1
  %9 = load i32, i32* %y9, align 4, !tbaa !156
  %10 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %10, i32 0, i32 0
  %y11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p10, i32 0, i32 1
  %11 = load i32, i32* %y11, align 4, !tbaa !156
  %sub12 = sub nsw i32 %9, %11
  %conv13 = sext i32 %sub12 to i64
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %p14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i32 0, i32 0
  %x15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p14, i32 0, i32 0
  %13 = load i32, i32* %x15, align 4, !tbaa !155
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p16 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 0
  %x17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p16, i32 0, i32 0
  %15 = load i32, i32* %x17, align 4, !tbaa !155
  %sub18 = sub nsw i32 %13, %15
  %conv19 = sext i32 %sub18 to i64
  %mul20 = mul nsw i64 %conv13, %conv19
  %cmp = icmp eq i64 %mul, %mul20
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %16 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %16, i32 0, i32 0
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p23 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 0
  %18 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %p24 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %18, i32 0, i32 0
  call void @draw_triangle(%struct.gs_fixed_point_s* %p22, %struct.gs_fixed_point_s* %p23, %struct.gs_fixed_point_s* %p24, i64 16776960) #5
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %20 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %22 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %call = call i32 @fill_triangle_wedge_aux(%struct.patch_fill_state_s* %19, %struct.shading_vertex_s* %20, %struct.shading_vertex_s* %21, %struct.shading_vertex_s* %22) #5
  store i32 %call, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %23 = load i32, i32* %retval
  ret i32 %23
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fill_triangle_wedge_aux(%struct.patch_fill_state_s* %pfs, %struct.shading_vertex_s* %q0, %struct.shading_vertex_s* %q1, %struct.shading_vertex_s* %q2) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %q0.addr = alloca %struct.shading_vertex_s*, align 8
  %q1.addr = alloca %struct.shading_vertex_s*, align 8
  %q2.addr = alloca %struct.shading_vertex_s*, align 8
  %code = alloca i32, align 4
  %p0 = alloca %struct.gs_fixed_point_s*, align 8
  %p1 = alloca %struct.gs_fixed_point_s*, align 8
  %p2 = alloca %struct.gs_fixed_point_s*, align 8
  %qq0 = alloca %struct.gs_fixed_point_s, align 4
  %qq1 = alloca %struct.gs_fixed_point_s, align 4
  %qq2 = alloca %struct.gs_fixed_point_s, align 4
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  %swap_axes = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q0, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q1, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q2, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast %struct.gs_fixed_point_s** %p0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast %struct.gs_fixed_point_s** %p1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = bitcast %struct.gs_fixed_point_s** %p2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast %struct.gs_fixed_point_s* %qq0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = bitcast %struct.gs_fixed_point_s* %qq1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast %struct.gs_fixed_point_s* %qq2 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast i32* %dx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  %8 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %8, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %9 = load i32, i32* %x, align 4, !tbaa !155
  %10 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %10, i32 0, i32 0
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p3, i32 0, i32 0
  %11 = load i32, i32* %x4, align 4, !tbaa !155
  %sub = sub nsw i32 %9, %11
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i32 0, i32 0
  %x6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p5, i32 0, i32 0
  %13 = load i32, i32* %x6, align 4, !tbaa !155
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 0
  %x8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p7, i32 0, i32 0
  %15 = load i32, i32* %x8, align 4, !tbaa !155
  %sub9 = sub nsw i32 %13, %15
  %sub10 = sub nsw i32 0, %sub9
  br label %cond.end

cond.false:                                       ; preds = %entry
  %16 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %16, i32 0, i32 0
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p11, i32 0, i32 0
  %17 = load i32, i32* %x12, align 4, !tbaa !155
  %18 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %18, i32 0, i32 0
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p13, i32 0, i32 0
  %19 = load i32, i32* %x14, align 4, !tbaa !155
  %sub15 = sub nsw i32 %17, %19
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub10, %cond.true ], [ %sub15, %cond.false ]
  store i32 %cond, i32* %dx, align 4, !tbaa !5
  %20 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #2
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p16 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %21, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p16, i32 0, i32 1
  %22 = load i32, i32* %y, align 4, !tbaa !156
  %23 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p17 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %23, i32 0, i32 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p17, i32 0, i32 1
  %24 = load i32, i32* %y18, align 4, !tbaa !156
  %sub19 = sub nsw i32 %22, %24
  %cmp20 = icmp slt i32 %sub19, 0
  br i1 %cmp20, label %cond.true.21, label %cond.false.28

cond.true.21:                                     ; preds = %cond.end
  %25 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %25, i32 0, i32 0
  %y23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p22, i32 0, i32 1
  %26 = load i32, i32* %y23, align 4, !tbaa !156
  %27 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p24 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %27, i32 0, i32 0
  %y25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p24, i32 0, i32 1
  %28 = load i32, i32* %y25, align 4, !tbaa !156
  %sub26 = sub nsw i32 %26, %28
  %sub27 = sub nsw i32 0, %sub26
  br label %cond.end.34

cond.false.28:                                    ; preds = %cond.end
  %29 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p29 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %29, i32 0, i32 0
  %y30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p29, i32 0, i32 1
  %30 = load i32, i32* %y30, align 4, !tbaa !156
  %31 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p31 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %31, i32 0, i32 0
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p31, i32 0, i32 1
  %32 = load i32, i32* %y32, align 4, !tbaa !156
  %sub33 = sub nsw i32 %30, %32
  br label %cond.end.34

cond.end.34:                                      ; preds = %cond.false.28, %cond.true.21
  %cond35 = phi i32 [ %sub27, %cond.true.21 ], [ %sub33, %cond.false.28 ]
  store i32 %cond35, i32* %dy, align 4, !tbaa !5
  %33 = bitcast i32* %swap_axes to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #2
  %34 = load i32, i32* %dx, align 4, !tbaa !5
  %35 = load i32, i32* %dy, align 4, !tbaa !5
  %cmp36 = icmp sgt i32 %34, %35
  br i1 %cmp36, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.34
  store i32 1, i32* %swap_axes, align 4, !tbaa !5
  %36 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p37 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %36, i32 0, i32 0
  %y38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p37, i32 0, i32 1
  %37 = load i32, i32* %y38, align 4, !tbaa !156
  %x39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %qq0, i32 0, i32 0
  store i32 %37, i32* %x39, align 4, !tbaa !109
  %38 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p40 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %38, i32 0, i32 0
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p40, i32 0, i32 0
  %39 = load i32, i32* %x41, align 4, !tbaa !155
  %y42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %qq0, i32 0, i32 1
  store i32 %39, i32* %y42, align 4, !tbaa !110
  %40 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p43 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %40, i32 0, i32 0
  %y44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p43, i32 0, i32 1
  %41 = load i32, i32* %y44, align 4, !tbaa !156
  %x45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %qq1, i32 0, i32 0
  store i32 %41, i32* %x45, align 4, !tbaa !109
  %42 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p46 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %42, i32 0, i32 0
  %x47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p46, i32 0, i32 0
  %43 = load i32, i32* %x47, align 4, !tbaa !155
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %qq1, i32 0, i32 1
  store i32 %43, i32* %y48, align 4, !tbaa !110
  %44 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %p49 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %44, i32 0, i32 0
  %y50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p49, i32 0, i32 1
  %45 = load i32, i32* %y50, align 4, !tbaa !156
  %x51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %qq2, i32 0, i32 0
  store i32 %45, i32* %x51, align 4, !tbaa !109
  %46 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %p52 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %46, i32 0, i32 0
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p52, i32 0, i32 0
  %47 = load i32, i32* %x53, align 4, !tbaa !155
  %y54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %qq2, i32 0, i32 1
  store i32 %47, i32* %y54, align 4, !tbaa !110
  store %struct.gs_fixed_point_s* %qq0, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %qq1, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %qq2, %struct.gs_fixed_point_s** %p2, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %cond.end.34
  store i32 0, i32* %swap_axes, align 4, !tbaa !5
  %48 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %p55 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %48, i32 0, i32 0
  store %struct.gs_fixed_point_s* %p55, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %49 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %p56 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %49, i32 0, i32 0
  store %struct.gs_fixed_point_s* %p56, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %50 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %p57 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %50, i32 0, i32 0
  store %struct.gs_fixed_point_s* %p57, %struct.gs_fixed_point_s** %p2, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %51 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %y58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %51, i32 0, i32 1
  %52 = load i32, i32* %y58, align 4, !tbaa !110
  %53 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %y59 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %53, i32 0, i32 1
  %54 = load i32, i32* %y59, align 4, !tbaa !110
  %cmp60 = icmp slt i32 %52, %54
  br i1 %cmp60, label %if.then.61, label %if.else.69

if.then.61:                                       ; preds = %if.end
  %55 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %56 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %57 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2, align 8, !tbaa !1
  %58 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %59 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %60 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %60, i32 0, i32 1
  %61 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %62 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %c62 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %62, i32 0, i32 1
  %63 = load %struct.patch_color_s*, %struct.patch_color_s** %c62, align 8, !tbaa !150
  %64 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %call = call i32 @fill_wedge_trap(%struct.patch_fill_state_s* %55, %struct.gs_fixed_point_s* %56, %struct.gs_fixed_point_s* %57, %struct.gs_fixed_point_s* %58, %struct.gs_fixed_point_s* %59, %struct.patch_color_s* %61, %struct.patch_color_s* %63, i32 %64, i32 0) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %65 = load i32, i32* %code, align 4, !tbaa !5
  %cmp63 = icmp slt i32 %65, 0
  br i1 %cmp63, label %if.then.64, label %if.end.65

if.then.64:                                       ; preds = %if.then.61
  %66 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %66, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.65:                                        ; preds = %if.then.61
  %67 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %68 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2, align 8, !tbaa !1
  %69 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %70 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %71 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %72 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %c66 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %72, i32 0, i32 1
  %73 = load %struct.patch_color_s*, %struct.patch_color_s** %c66, align 8, !tbaa !150
  %74 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %c67 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %74, i32 0, i32 1
  %75 = load %struct.patch_color_s*, %struct.patch_color_s** %c67, align 8, !tbaa !150
  %76 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %call68 = call i32 @fill_wedge_trap(%struct.patch_fill_state_s* %67, %struct.gs_fixed_point_s* %68, %struct.gs_fixed_point_s* %69, %struct.gs_fixed_point_s* %70, %struct.gs_fixed_point_s* %71, %struct.patch_color_s* %73, %struct.patch_color_s* %75, i32 %76, i32 0) #5
  store i32 %call68, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.69:                                       ; preds = %if.end
  %77 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %78 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %79 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2, align 8, !tbaa !1
  %80 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %81 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %82 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q0.addr, align 8, !tbaa !1
  %c70 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %82, i32 0, i32 1
  %83 = load %struct.patch_color_s*, %struct.patch_color_s** %c70, align 8, !tbaa !150
  %84 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %c71 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %84, i32 0, i32 1
  %85 = load %struct.patch_color_s*, %struct.patch_color_s** %c71, align 8, !tbaa !150
  %86 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %call72 = call i32 @fill_wedge_trap(%struct.patch_fill_state_s* %77, %struct.gs_fixed_point_s* %78, %struct.gs_fixed_point_s* %79, %struct.gs_fixed_point_s* %80, %struct.gs_fixed_point_s* %81, %struct.patch_color_s* %83, %struct.patch_color_s* %85, i32 %86, i32 0) #5
  store i32 %call72, i32* %code, align 4, !tbaa !5
  %87 = load i32, i32* %code, align 4, !tbaa !5
  %cmp73 = icmp slt i32 %87, 0
  br i1 %cmp73, label %if.then.74, label %if.end.75

if.then.74:                                       ; preds = %if.else.69
  %88 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %88, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.75:                                        ; preds = %if.else.69
  %89 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %90 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2, align 8, !tbaa !1
  %91 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %92 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1, align 8, !tbaa !1
  %93 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0, align 8, !tbaa !1
  %94 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q2.addr, align 8, !tbaa !1
  %c76 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %94, i32 0, i32 1
  %95 = load %struct.patch_color_s*, %struct.patch_color_s** %c76, align 8, !tbaa !150
  %96 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q1.addr, align 8, !tbaa !1
  %c77 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %96, i32 0, i32 1
  %97 = load %struct.patch_color_s*, %struct.patch_color_s** %c77, align 8, !tbaa !150
  %98 = load i32, i32* %swap_axes, align 4, !tbaa !5
  %call78 = call i32 @fill_wedge_trap(%struct.patch_fill_state_s* %89, %struct.gs_fixed_point_s* %90, %struct.gs_fixed_point_s* %91, %struct.gs_fixed_point_s* %92, %struct.gs_fixed_point_s* %93, %struct.patch_color_s* %95, %struct.patch_color_s* %97, i32 %98, i32 0) #5
  store i32 %call78, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.75, %if.then.74, %if.end.65, %if.then.64
  %99 = bitcast i32* %swap_axes to i8*
  call void @llvm.lifetime.end(i64 4, i8* %99) #2
  %100 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %100) #2
  %101 = bitcast i32* %dx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %101) #2
  %102 = bitcast %struct.gs_fixed_point_s* %qq2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %102) #2
  %103 = bitcast %struct.gs_fixed_point_s* %qq1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %103) #2
  %104 = bitcast %struct.gs_fixed_point_s* %qq0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %104) #2
  %105 = bitcast %struct.gs_fixed_point_s** %p2 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %105) #2
  %106 = bitcast %struct.gs_fixed_point_s** %p1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %106) #2
  %107 = bitcast %struct.gs_fixed_point_s** %p0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %107) #2
  %108 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #2
  %109 = load i32, i32* %retval
  ret i32 %109
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fill_wedge_trap(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %q0, %struct.gs_fixed_point_s* %q1, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1, i32 %swap_axes, i32 %self_intersecting) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %q0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %q1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %swap_axes.addr = alloca i32, align 4
  %self_intersecting.addr = alloca i32, align 4
  %p = alloca [4 x %struct.gs_fixed_point_s], align 16
  %cc0 = alloca %struct.patch_color_s*, align 8
  %cc1 = alloca %struct.patch_color_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q0, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q1, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  store i32 %self_intersecting, i32* %self_intersecting.addr, align 4, !tbaa !5
  %0 = bitcast [4 x %struct.gs_fixed_point_s]* %p to i8*
  call void @llvm.lifetime.start(i64 32, i8* %0) #2
  %1 = bitcast %struct.patch_color_s** %cc0 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast %struct.patch_color_s** %cc1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #2
  %3 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %3, i32 0, i32 1
  %4 = load i32, i32* %y, align 4, !tbaa !110
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i32 0, i32 1
  %6 = load i32, i32* %y1, align 4, !tbaa !110
  %cmp = icmp slt i32 %4, %6
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 2
  %7 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %8 = bitcast %struct.gs_fixed_point_s* %arrayidx to i8*
  %9 = bitcast %struct.gs_fixed_point_s* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx2 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 3
  %10 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %11 = bitcast %struct.gs_fixed_point_s* %arrayidx2 to i8*
  %12 = bitcast %struct.gs_fixed_point_s* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 4, i1 false), !tbaa.struct !117
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %13, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %14 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %14, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %entry
  %arrayidx3 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 2
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %16 = bitcast %struct.gs_fixed_point_s* %arrayidx3 to i8*
  %17 = bitcast %struct.gs_fixed_point_s* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx4 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 3
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %19 = bitcast %struct.gs_fixed_point_s* %arrayidx4 to i8*
  %20 = bitcast %struct.gs_fixed_point_s* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 4, i1 false), !tbaa.struct !117
  %21 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %21, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %22, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx5 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 0
  %23 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %24 = bitcast %struct.gs_fixed_point_s* %arrayidx5 to i8*
  %25 = bitcast %struct.gs_fixed_point_s* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 4, i1 false), !tbaa.struct !117
  %arrayidx6 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 1
  %26 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %27 = bitcast %struct.gs_fixed_point_s* %arrayidx6 to i8*
  %28 = bitcast %struct.gs_fixed_point_s* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 4, i1 false), !tbaa.struct !117
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 2
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx7, i32 0, i32 1
  %30 = load i32, i32* %y8, align 4, !tbaa !110
  %arrayidx9 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %p, i32 0, i64 3
  %y10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx9, i32 0, i32 1
  %31 = load i32, i32* %y10, align 4, !tbaa !110
  %32 = load %struct.patch_color_s*, %struct.patch_color_s** %cc0, align 8, !tbaa !1
  %33 = load %struct.patch_color_s*, %struct.patch_color_s** %cc1, align 8, !tbaa !1
  %34 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %35 = load i32, i32* %self_intersecting.addr, align 4, !tbaa !5
  %call = call i32 @wedge_trap_decompose(%struct.patch_fill_state_s* %29, %struct.gs_fixed_point_s* %arraydecay, i32 %30, i32 %31, %struct.patch_color_s* %32, %struct.patch_color_s* %33, i32 %34, i32 %35) #5
  %36 = bitcast %struct.patch_color_s** %cc1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #2
  %37 = bitcast %struct.patch_color_s** %cc0 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %37) #2
  %38 = bitcast [4 x %struct.gs_fixed_point_s]* %p to i8*
  call void @llvm.lifetime.end(i64 32, i8* %38) #2
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @wedge_trap_decompose(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %q, i32 %ybot, i32 %ytop, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1, i32 %swap_axes, i32 %self_intersecting) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %q.addr = alloca %struct.gs_fixed_point_s*, align 8
  %ybot.addr = alloca i32, align 4
  %ytop.addr = alloca i32, align 4
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %swap_axes.addr = alloca i32, align 4
  %self_intersecting.addr = alloca i32, align 4
  %dx1 = alloca i32, align 4
  %dy1 = alloca i32, align 4
  %dx2 = alloca i32, align 4
  %dy2 = alloca i32, align 4
  %orient = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %dx3 = alloca i32, align 4
  %dy3 = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  store i32 %ybot, i32* %ybot.addr, align 4, !tbaa !5
  store i32 %ytop, i32* %ytop.addr, align 4, !tbaa !5
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  store i32 %self_intersecting, i32* %self_intersecting.addr, align 4, !tbaa !5
  %0 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i32* %orient to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %vectorization = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 11
  %6 = load i32, i32* %vectorization, align 4, !tbaa !26
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %8 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %call = call i32 @covers_pixel_centers(i32 %7, i32 %8) #5
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  %9 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %10 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %cmp = icmp eq i32 %9, %10
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.3:                                         ; preds = %if.end
  %11 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %11, i64 1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx, i32 0, i32 0
  %12 = load i32, i32* %x, align 4, !tbaa !109
  %13 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %13, i64 0
  %x5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx4, i32 0, i32 0
  %14 = load i32, i32* %x5, align 4, !tbaa !109
  %sub = sub nsw i32 %12, %14
  store i32 %sub, i32* %dx1, align 4, !tbaa !5
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx6, i32 0, i32 1
  %16 = load i32, i32* %y, align 4, !tbaa !110
  %17 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %17, i64 0
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx7, i32 0, i32 1
  %18 = load i32, i32* %y8, align 4, !tbaa !110
  %sub9 = sub nsw i32 %16, %18
  store i32 %sub9, i32* %dy1, align 4, !tbaa !5
  %19 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %19, i64 2
  %x11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx10, i32 0, i32 0
  %20 = load i32, i32* %x11, align 4, !tbaa !109
  %21 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %21, i64 0
  %x13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx12, i32 0, i32 0
  %22 = load i32, i32* %x13, align 4, !tbaa !109
  %sub14 = sub nsw i32 %20, %22
  store i32 %sub14, i32* %dx2, align 4, !tbaa !5
  %23 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %23, i64 2
  %y16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx15, i32 0, i32 1
  %24 = load i32, i32* %y16, align 4, !tbaa !110
  %25 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %25, i64 0
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx17, i32 0, i32 1
  %26 = load i32, i32* %y18, align 4, !tbaa !110
  %sub19 = sub nsw i32 %24, %26
  store i32 %sub19, i32* %dy2, align 4, !tbaa !5
  %27 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %tobool20 = icmp ne i32 %27, 0
  br i1 %tobool20, label %if.else, label %if.then.21

if.then.21:                                       ; preds = %if.end.3
  br label %do.body

do.body:                                          ; preds = %if.then.21
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.25

if.else:                                          ; preds = %if.end.3
  br label %do.body.22

do.body.22:                                       ; preds = %if.else
  br label %do.cond.23

do.cond.23:                                       ; preds = %do.body.22
  br label %do.end.24

do.end.24:                                        ; preds = %do.cond.23
  br label %if.end.25

if.end.25:                                        ; preds = %do.end.24, %do.end
  %28 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv = sext i32 %28 to i64
  %29 = load i32, i32* %dy2, align 4, !tbaa !5
  %conv26 = sext i32 %29 to i64
  %mul = mul nsw i64 %conv, %conv26
  %30 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv27 = sext i32 %30 to i64
  %31 = load i32, i32* %dx2, align 4, !tbaa !5
  %conv28 = sext i32 %31 to i64
  %mul29 = mul nsw i64 %conv27, %conv28
  %cmp30 = icmp ne i64 %mul, %mul29
  br i1 %cmp30, label %if.then.32, label %if.else.42

if.then.32:                                       ; preds = %if.end.25
  %32 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv33 = sext i32 %32 to i64
  %33 = load i32, i32* %dy2, align 4, !tbaa !5
  %conv34 = sext i32 %33 to i64
  %mul35 = mul nsw i64 %conv33, %conv34
  %34 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv36 = sext i32 %34 to i64
  %35 = load i32, i32* %dx2, align 4, !tbaa !5
  %conv37 = sext i32 %35 to i64
  %mul38 = mul nsw i64 %conv36, %conv37
  %cmp39 = icmp sgt i64 %mul35, %mul38
  %conv40 = zext i1 %cmp39 to i32
  store i32 %conv40, i32* %orient, align 4, !tbaa !5
  %36 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %37 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %38 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %39 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %40 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %41 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %42 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %43 = load i32, i32* %orient, align 4, !tbaa !5
  %call41 = call i32 @linear_color_trapezoid(%struct.patch_fill_state_s* %36, %struct.gs_fixed_point_s* %37, i32 0, i32 1, i32 2, i32 3, i32 %38, i32 %39, i32 %40, %struct.patch_color_s* %41, %struct.patch_color_s* %42, i32 %43) #5
  store i32 %call41, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.42:                                       ; preds = %if.end.25
  %44 = bitcast i32* %dx3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #2
  %45 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %45, i64 3
  %x44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx43, i32 0, i32 0
  %46 = load i32, i32* %x44, align 4, !tbaa !109
  %47 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %47, i64 0
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx45, i32 0, i32 0
  %48 = load i32, i32* %x46, align 4, !tbaa !109
  %sub47 = sub nsw i32 %46, %48
  store i32 %sub47, i32* %dx3, align 4, !tbaa !5
  %49 = bitcast i32* %dy3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %49) #2
  %50 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %50, i64 3
  %y49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx48, i32 0, i32 1
  %51 = load i32, i32* %y49, align 4, !tbaa !110
  %52 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %arrayidx50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %52, i64 0
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx50, i32 0, i32 1
  %53 = load i32, i32* %y51, align 4, !tbaa !110
  %sub52 = sub nsw i32 %51, %53
  store i32 %sub52, i32* %dy3, align 4, !tbaa !5
  %54 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv53 = sext i32 %54 to i64
  %55 = load i32, i32* %dy3, align 4, !tbaa !5
  %conv54 = sext i32 %55 to i64
  %mul55 = mul nsw i64 %conv53, %conv54
  %56 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv56 = sext i32 %56 to i64
  %57 = load i32, i32* %dx3, align 4, !tbaa !5
  %conv57 = sext i32 %57 to i64
  %mul58 = mul nsw i64 %conv56, %conv57
  %cmp59 = icmp sgt i64 %mul55, %mul58
  %conv60 = zext i1 %cmp59 to i32
  store i32 %conv60, i32* %orient, align 4, !tbaa !5
  %58 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %59 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %60 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %61 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %62 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %63 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %64 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %65 = load i32, i32* %orient, align 4, !tbaa !5
  %call61 = call i32 @linear_color_trapezoid(%struct.patch_fill_state_s* %58, %struct.gs_fixed_point_s* %59, i32 0, i32 1, i32 2, i32 3, i32 %60, i32 %61, i32 %62, %struct.patch_color_s* %63, %struct.patch_color_s* %64, i32 %65) #5
  store i32 %call61, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  %66 = bitcast i32* %dy3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #2
  %67 = bitcast i32* %dx3 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  br label %cleanup

cleanup:                                          ; preds = %if.else.42, %if.then.32, %if.then.2, %if.then
  %68 = bitcast i32* %orient to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #2
  %70 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %72) #2
  %73 = load i32, i32* %retval
  ret i32 %73
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @covers_pixel_centers(i32 %ybot, i32 %ytop) #1 {
entry:
  %ybot.addr = alloca i32, align 4
  %ytop.addr = alloca i32, align 4
  store i32 %ybot, i32* %ybot.addr, align 4, !tbaa !5
  store i32 %ytop, i32* %ytop.addr, align 4, !tbaa !5
  %0 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %conv = sext i32 %0 to i64
  %add = add nsw i64 %conv, 127
  %and = and i64 %add, -256
  %1 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %conv1 = sext i32 %1 to i64
  %add2 = add nsw i64 %conv1, 127
  %and3 = and i64 %add2, -256
  %cmp = icmp slt i64 %and, %and3
  %conv4 = zext i1 %cmp to i32
  ret i32 %conv4
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @linear_color_trapezoid(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %q, i32 %i0, i32 %i1, i32 %i2, i32 %i3, i32 %ybot, i32 %ytop, i32 %swap_axes, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1, i32 %orient) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %q.addr = alloca %struct.gs_fixed_point_s*, align 8
  %i0.addr = alloca i32, align 4
  %i1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %i3.addr = alloca i32, align 4
  %ybot.addr = alloca i32, align 4
  %ytop.addr = alloca i32, align 4
  %swap_axes.addr = alloca i32, align 4
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %orient.addr = alloca i32, align 4
  %le = alloca %struct.gs_fixed_edge_s, align 4
  %re = alloca %struct.gs_fixed_edge_s, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  store i32 %i0, i32* %i0.addr, align 4, !tbaa !5
  store i32 %i1, i32* %i1.addr, align 4, !tbaa !5
  store i32 %i2, i32* %i2.addr, align 4, !tbaa !5
  store i32 %i3, i32* %i3.addr, align 4, !tbaa !5
  store i32 %ybot, i32* %ybot.addr, align 4, !tbaa !5
  store i32 %ytop, i32* %ytop.addr, align 4, !tbaa !5
  store i32 %swap_axes, i32* %swap_axes.addr, align 4, !tbaa !5
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store i32 %orient, i32* %orient.addr, align 4, !tbaa !5
  %0 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q.addr, align 8, !tbaa !1
  %3 = load i32, i32* %i0.addr, align 4, !tbaa !5
  %4 = load i32, i32* %i1.addr, align 4, !tbaa !5
  %5 = load i32, i32* %i2.addr, align 4, !tbaa !5
  %6 = load i32, i32* %i3.addr, align 4, !tbaa !5
  %7 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %8 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %9 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %10 = load i32, i32* %orient.addr, align 4, !tbaa !5
  call void @make_trapezoid(%struct.gs_fixed_point_s* %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re) #5
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %12 = load i32, i32* %ybot.addr, align 4, !tbaa !5
  %13 = load i32, i32* %ytop.addr, align 4, !tbaa !5
  %14 = load i32, i32* %swap_axes.addr, align 4, !tbaa !5
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call = call i32 @decompose_linear_color(%struct.patch_fill_state_s* %11, %struct.gs_fixed_edge_s* %le, %struct.gs_fixed_edge_s* %re, i32 %12, i32 %13, i32 %14, %struct.patch_color_s* %15, %struct.patch_color_s* %16) #5
  %17 = bitcast %struct.gs_fixed_edge_s* %re to i8*
  call void @llvm.lifetime.end(i64 16, i8* %17) #2
  %18 = bitcast %struct.gs_fixed_edge_s* %le to i8*
  call void @llvm.lifetime.end(i64 16, i8* %18) #2
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @wedge_vertex_list_elem_release(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_elem_s* %e) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %e.addr = alloca %struct.wedge_vertex_list_elem_s*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_elem_s* %e, %struct.wedge_vertex_list_elem_s** %e.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %free_wedge_vertex = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 15
  %1 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %free_wedge_vertex, align 8, !tbaa !76
  %2 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e.addr, align 8, !tbaa !1
  %next = getelementptr inbounds %struct.wedge_vertex_list_elem_s, %struct.wedge_vertex_list_elem_s* %2, i32 0, i32 3
  store %struct.wedge_vertex_list_elem_s* %1, %struct.wedge_vertex_list_elem_s** %next, align 8, !tbaa !179
  %3 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %e.addr, align 8, !tbaa !1
  %4 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %free_wedge_vertex1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %4, i32 0, i32 15
  store %struct.wedge_vertex_list_elem_s* %3, %struct.wedge_vertex_list_elem_s** %free_wedge_vertex1, align 8, !tbaa !76
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @release_wedge_vertex_list(%struct.patch_fill_state_s* %pfs, %struct.wedge_vertex_list_t* %ll, i32 %n) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %ll.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %n.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %l = alloca %struct.wedge_vertex_list_t*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %ll, %struct.wedge_vertex_list_t** %ll.addr, align 8, !tbaa !1
  store i32 %n, i32* %n.addr, align 4, !tbaa !5
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !5
  %2 = load i32, i32* %n.addr, align 4, !tbaa !5
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = bitcast %struct.wedge_vertex_list_t** %l to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %ll.addr, align 8, !tbaa !1
  %5 = load i32, i32* %i, align 4, !tbaa !5
  %idx.ext = sext i32 %5 to i64
  %add.ptr = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %4, i64 %idx.ext
  store %struct.wedge_vertex_list_t* %add.ptr, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %6 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %beg = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %6, i32 0, i32 1
  %7 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg, align 8, !tbaa !170
  %cmp1 = icmp ne %struct.wedge_vertex_list_elem_s* %7, null
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %8 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %end = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %8, i32 0, i32 2
  %9 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end, align 8, !tbaa !174
  %cmp2 = icmp eq %struct.wedge_vertex_list_elem_s* %9, null
  br i1 %cmp2, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.then
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %11 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %beg4 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %11, i32 0, i32 1
  %12 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg4, align 8, !tbaa !170
  %13 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %end5 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %13, i32 0, i32 2
  %14 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end5, align 8, !tbaa !174
  call void @release_wedge_vertex_list_interval(%struct.patch_fill_state_s* %10, %struct.wedge_vertex_list_elem_s* %12, %struct.wedge_vertex_list_elem_s* %14) #5
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %16 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %beg6 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %16, i32 0, i32 1
  %17 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %beg6, align 8, !tbaa !170
  call void @wedge_vertex_list_elem_release(%struct.patch_fill_state_s* %15, %struct.wedge_vertex_list_elem_s* %17) #5
  %18 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %19 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %end7 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %19, i32 0, i32 2
  %20 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end7, align 8, !tbaa !174
  call void @wedge_vertex_list_elem_release(%struct.patch_fill_state_s* %18, %struct.wedge_vertex_list_elem_s* %20) #5
  %21 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %end8 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %21, i32 0, i32 2
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %end8, align 8, !tbaa !174
  %22 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %beg9 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %22, i32 0, i32 1
  store %struct.wedge_vertex_list_elem_s* null, %struct.wedge_vertex_list_elem_s** %beg9, align 8, !tbaa !170
  br label %if.end.14

if.else:                                          ; preds = %for.body
  %23 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l, align 8, !tbaa !1
  %end10 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %23, i32 0, i32 2
  %24 = load %struct.wedge_vertex_list_elem_s*, %struct.wedge_vertex_list_elem_s** %end10, align 8, !tbaa !174
  %cmp11 = icmp ne %struct.wedge_vertex_list_elem_s* %24, null
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %if.else
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.13:                                        ; preds = %if.else
  br label %if.end.14

if.end.14:                                        ; preds = %if.end.13, %if.end
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.14, %if.then.12, %if.then.3
  %25 = bitcast %struct.wedge_vertex_list_t** %l to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.15 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %26 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.15

cleanup.15:                                       ; preds = %for.end, %cleanup
  %27 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %27) #2
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @manhattan_dist(%struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1) #1 {
entry:
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %0 = bitcast i32* %dx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %1, i32 0, i32 0
  %2 = load i32, i32* %x, align 4, !tbaa !109
  %3 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %3, i32 0, i32 0
  %4 = load i32, i32* %x1, align 4, !tbaa !109
  %sub = sub nsw i32 %2, %4
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i32 0, i32 0
  %6 = load i32, i32* %x2, align 4, !tbaa !109
  %7 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %7, i32 0, i32 0
  %8 = load i32, i32* %x3, align 4, !tbaa !109
  %sub4 = sub nsw i32 %6, %8
  %sub5 = sub nsw i32 0, %sub4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %9 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x6 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %9, i32 0, i32 0
  %10 = load i32, i32* %x6, align 4, !tbaa !109
  %11 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %11, i32 0, i32 0
  %12 = load i32, i32* %x7, align 4, !tbaa !109
  %sub8 = sub nsw i32 %10, %12
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub5, %cond.true ], [ %sub8, %cond.false ]
  store i32 %cond, i32* %dx, align 4, !tbaa !5
  %13 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  %14 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %14, i32 0, i32 1
  %15 = load i32, i32* %y, align 4, !tbaa !110
  %16 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %16, i32 0, i32 1
  %17 = load i32, i32* %y9, align 4, !tbaa !110
  %sub10 = sub nsw i32 %15, %17
  %cmp11 = icmp slt i32 %sub10, 0
  br i1 %cmp11, label %cond.true.12, label %cond.false.17

cond.true.12:                                     ; preds = %cond.end
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i32 0, i32 1
  %19 = load i32, i32* %y13, align 4, !tbaa !110
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %20, i32 0, i32 1
  %21 = load i32, i32* %y14, align 4, !tbaa !110
  %sub15 = sub nsw i32 %19, %21
  %sub16 = sub nsw i32 0, %sub15
  br label %cond.end.21

cond.false.17:                                    ; preds = %cond.end
  %22 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y18 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %22, i32 0, i32 1
  %23 = load i32, i32* %y18, align 4, !tbaa !110
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %24, i32 0, i32 1
  %25 = load i32, i32* %y19, align 4, !tbaa !110
  %sub20 = sub nsw i32 %23, %25
  br label %cond.end.21

cond.end.21:                                      ; preds = %cond.false.17, %cond.true.12
  %cond22 = phi i32 [ %sub16, %cond.true.12 ], [ %sub20, %cond.false.17 ]
  store i32 %cond22, i32* %dy, align 4, !tbaa !5
  %26 = load i32, i32* %dx, align 4, !tbaa !5
  %27 = load i32, i32* %dy, align 4, !tbaa !5
  %cmp23 = icmp sgt i32 %26, %27
  br i1 %cmp23, label %cond.true.24, label %cond.false.25

cond.true.24:                                     ; preds = %cond.end.21
  %28 = load i32, i32* %dx, align 4, !tbaa !5
  br label %cond.end.26

cond.false.25:                                    ; preds = %cond.end.21
  %29 = load i32, i32* %dy, align 4, !tbaa !5
  br label %cond.end.26

cond.end.26:                                      ; preds = %cond.false.25, %cond.true.24
  %cond27 = phi i32 [ %28, %cond.true.24 ], [ %29, %cond.false.25 ]
  %30 = bitcast i32* %dy to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #2
  %31 = bitcast i32* %dx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #2
  ret i32 %cond27
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lcp1(i32 %p0, i32 %p3) #1 {
entry:
  %p0.addr = alloca i32, align 4
  %p3.addr = alloca i32, align 4
  store i32 %p0, i32* %p0.addr, align 4, !tbaa !5
  store i32 %p3, i32* %p3.addr, align 4, !tbaa !5
  %0 = load i32, i32* %p0.addr, align 4, !tbaa !5
  %1 = load i32, i32* %p0.addr, align 4, !tbaa !5
  %add = add nsw i32 %0, %1
  %2 = load i32, i32* %p3.addr, align 4, !tbaa !5
  %add1 = add nsw i32 %add, %2
  %div = sdiv i32 %add1, 3
  ret i32 %div
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @lcp2(i32 %p0, i32 %p3) #1 {
entry:
  %p0.addr = alloca i32, align 4
  %p3.addr = alloca i32, align 4
  store i32 %p0, i32* %p0.addr, align 4, !tbaa !5
  store i32 %p3, i32* %p3.addr, align 4, !tbaa !5
  %0 = load i32, i32* %p0.addr, align 4, !tbaa !5
  %1 = load i32, i32* %p3.addr, align 4, !tbaa !5
  %add = add nsw i32 %0, %1
  %2 = load i32, i32* %p3.addr, align 4, !tbaa !5
  %add1 = add nsw i32 %add, %2
  %div = sdiv i32 %add1, 3
  ret i32 %div
}

; Function Attrs: nounwind uwtable
define internal void @patch_set_color(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c, float* %cc) #0 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c.addr = alloca %struct.patch_color_s*, align 8
  %cc.addr = alloca float*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  store float* %cc, float** %cc.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %Function = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %0, i32 0, i32 9
  %1 = load %struct.gs_function_s*, %struct.gs_function_s** %Function, align 8, !tbaa !28
  %tobool = icmp ne %struct.gs_function_s* %1, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load float*, float** %cc.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds float, float* %2, i64 0
  %3 = load float, float* %arrayidx, align 4, !tbaa !18
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %t = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %4, i32 0, i32 0
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %t, i32 0, i64 0
  store float %3, float* %arrayidx1, align 4, !tbaa !18
  %5 = load float*, float** %cc.addr, align 8, !tbaa !1
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1
  %6 = load float, float* %arrayidx2, align 4, !tbaa !18
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %t3 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %7, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %t3, i32 0, i64 1
  store float %6, float* %arrayidx4, align 4, !tbaa !18
  br label %if.end

if.else:                                          ; preds = %entry
  %8 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc5 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %8, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc5, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arraydecay = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i32 0
  %9 = bitcast float* %arraydecay to i8*
  %10 = load float*, float** %cc.addr, align 8, !tbaa !1
  %11 = bitcast float* %10 to i8*
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 3
  %13 = load i32, i32* %num_components, align 4, !tbaa !17
  %conv = sext i32 %13 to i64
  %mul = mul i64 4, %conv
  %call = call i8* @memcpy(i8* %9, i8* %11, i64 %mul) #6
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @vector_pair_orientation(%struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s* %p2) #1 {
entry:
  %p0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %p2.addr = alloca %struct.gs_fixed_point_s*, align 8
  %dx1 = alloca i32, align 4
  %dy1 = alloca i32, align 4
  %dx2 = alloca i32, align 4
  %dy2 = alloca i32, align 4
  %vp = alloca i64, align 8
  store %struct.gs_fixed_point_s* %p0, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p1, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %p2, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %0 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %1, i32 0, i32 0
  %2 = load i32, i32* %x, align 4, !tbaa !109
  %3 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x1 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %3, i32 0, i32 0
  %4 = load i32, i32* %x1, align 4, !tbaa !109
  %sub = sub nsw i32 %2, %4
  store i32 %sub, i32* %dx1, align 4, !tbaa !5
  %5 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p1.addr, align 8, !tbaa !1
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %6, i32 0, i32 1
  %7 = load i32, i32* %y, align 4, !tbaa !110
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %8, i32 0, i32 1
  %9 = load i32, i32* %y2, align 4, !tbaa !110
  %sub3 = sub nsw i32 %7, %9
  store i32 %sub3, i32* %dy1, align 4, !tbaa !5
  %10 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #2
  %11 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %11, i32 0, i32 0
  %12 = load i32, i32* %x4, align 4, !tbaa !109
  %13 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %x5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %13, i32 0, i32 0
  %14 = load i32, i32* %x5, align 4, !tbaa !109
  %sub6 = sub nsw i32 %12, %14
  store i32 %sub6, i32* %dx2, align 4, !tbaa !5
  %15 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #2
  %16 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p2.addr, align 8, !tbaa !1
  %y7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %16, i32 0, i32 1
  %17 = load i32, i32* %y7, align 4, !tbaa !110
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %p0.addr, align 8, !tbaa !1
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i32 0, i32 1
  %19 = load i32, i32* %y8, align 4, !tbaa !110
  %sub9 = sub nsw i32 %17, %19
  store i32 %sub9, i32* %dy2, align 4, !tbaa !5
  %20 = bitcast i64* %vp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #2
  %21 = load i32, i32* %dx1, align 4, !tbaa !5
  %conv = sext i32 %21 to i64
  %22 = load i32, i32* %dy2, align 4, !tbaa !5
  %conv10 = sext i32 %22 to i64
  %mul = mul nsw i64 %conv, %conv10
  %23 = load i32, i32* %dy1, align 4, !tbaa !5
  %conv11 = sext i32 %23 to i64
  %24 = load i32, i32* %dx2, align 4, !tbaa !5
  %conv12 = sext i32 %24 to i64
  %mul13 = mul nsw i64 %conv11, %conv12
  %sub14 = sub nsw i64 %mul, %mul13
  store i64 %sub14, i64* %vp, align 8, !tbaa !107
  %25 = load i64, i64* %vp, align 8, !tbaa !107
  %cmp = icmp sgt i64 %25, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %26 = load i64, i64* %vp, align 8, !tbaa !107
  %cmp16 = icmp slt i64 %26, 0
  %cond = select i1 %cmp16, i32 -1, i32 0
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond18 = phi i32 [ 1, %cond.true ], [ %cond, %cond.false ]
  %27 = bitcast i64* %vp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %27) #2
  %28 = bitcast i32* %dy2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %28) #2
  %29 = bitcast i32* %dx2 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %29) #2
  %30 = bitcast i32* %dy1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %30) #2
  %31 = bitcast i32* %dx1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %31) #2
  ret i32 %cond18
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @neqs(i32* %a, i32 %b) #1 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i32*, align 8
  %b.addr = alloca i32, align 4
  store i32* %a, i32** %a.addr, align 8, !tbaa !1
  store i32 %b, i32* %b.addr, align 4, !tbaa !5
  %0 = load i32*, i32** %a.addr, align 8, !tbaa !1
  %1 = load i32, i32* %0, align 4, !tbaa !5
  %2 = load i32, i32* %b.addr, align 4, !tbaa !5
  %mul = mul nsw i32 %1, %2
  %cmp = icmp slt i32 %mul, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %a.addr, align 8, !tbaa !1
  %4 = load i32, i32* %3, align 4, !tbaa !5
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end.2, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %5 = load i32, i32* %b.addr, align 4, !tbaa !5
  %6 = load i32*, i32** %a.addr, align 8, !tbaa !1
  store i32 %5, i32* %6, align 4, !tbaa !5
  br label %if.end.2

if.end.2:                                         ; preds = %if.then.1, %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.2, %if.then
  %7 = load i32, i32* %retval
  ret i32 %7
}

declare i32 @gx_curve_log2_samples(i32, i32, %struct.curve_segment*, i32) #3

declare i32 @ilog2(i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @fill_wedges_aux(%struct.patch_fill_state_s* %pfs, i32 %k, i32 %ka, %struct.gs_fixed_point_s* %pole, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1, i32 %wedge_type) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %k.addr = alloca i32, align 4
  %ka.addr = alloca i32, align 4
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %wedge_type.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %q = alloca [2 x [4 x %struct.gs_fixed_point_s]], align 16
  %c = alloca %struct.patch_color_s*, align 8
  %save_inside = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %r = alloca %struct.gs_fixed_rect_s, align 4
  %r1 = alloca %struct.gs_fixed_rect_s, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store i32 %k, i32* %k.addr, align 4, !tbaa !5
  store i32 %ka, i32* %ka.addr, align 4, !tbaa !5
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store i32 %wedge_type, i32* %wedge_type.addr, align 4, !tbaa !5
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %k.addr, align 4, !tbaa !5
  %cmp = icmp sgt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = bitcast [2 x [4 x %struct.gs_fixed_point_s]]* %q to i8*
  call void @llvm.lifetime.start(i64 64, i8* %2) #2
  %3 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 26
  %6 = load i32, i32* %inside, align 4, !tbaa !32
  store i32 %6, i32* %save_inside, align 4, !tbaa !5
  %7 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %8, i32 0, i32 26
  %9 = load i32, i32* %inside1, align 4, !tbaa !32
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.end.118, label %if.then.2

if.then.2:                                        ; preds = %if.then
  %10 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.start(i64 16, i8* %10) #2
  %11 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %11) #2
  %12 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %12, i64 0
  %13 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %13, i64 1
  %14 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %14, i64 2
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 3
  call void @bbox_of_points(%struct.gs_fixed_rect_s* %r, %struct.gs_fixed_point_s* %arrayidx, %struct.gs_fixed_point_s* %arrayidx3, %struct.gs_fixed_point_s* %arrayidx4, %struct.gs_fixed_point_s* %arrayidx5) #5
  %p = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p, i32 0, i32 0
  %16 = load i32, i32* %x, align 4, !tbaa !134
  %conv = sext i32 %16 to i64
  %sub = sub nsw i64 %conv, 128
  %conv6 = trunc i64 %sub to i32
  store i32 %conv6, i32* %x, align 4, !tbaa !134
  %p7 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p7, i32 0, i32 1
  %17 = load i32, i32* %y, align 4, !tbaa !133
  %conv8 = sext i32 %17 to i64
  %sub9 = sub nsw i64 %conv8, 128
  %conv10 = trunc i64 %sub9 to i32
  store i32 %conv10, i32* %y, align 4, !tbaa !133
  %q11 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q11, i32 0, i32 0
  %18 = load i32, i32* %x12, align 4, !tbaa !136
  %conv13 = sext i32 %18 to i64
  %add = add nsw i64 %conv13, 128
  %conv14 = trunc i64 %add to i32
  store i32 %conv14, i32* %x12, align 4, !tbaa !136
  %q15 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q15, i32 0, i32 1
  %19 = load i32, i32* %y16, align 4, !tbaa !135
  %conv17 = sext i32 %19 to i64
  %add18 = add nsw i64 %conv17, 128
  %conv19 = trunc i64 %add18 to i32
  store i32 %conv19, i32* %y16, align 4, !tbaa !135
  %20 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  %21 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 16, i32 4, i1 false), !tbaa.struct !137
  br label %do.body

do.body:                                          ; preds = %if.then.2
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %22, i32 0, i32 8
  %p20 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect, i32 0, i32 0
  %x21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p20, i32 0, i32 0
  %23 = load i32, i32* %x21, align 4, !tbaa !138
  %p22 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p22, i32 0, i32 0
  %24 = load i32, i32* %x23, align 4, !tbaa !134
  %cmp24 = icmp sgt i32 %23, %24
  br i1 %cmp24, label %if.then.26, label %if.end

if.then.26:                                       ; preds = %do.body
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect27 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %25, i32 0, i32 8
  %p28 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect27, i32 0, i32 0
  %x29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p28, i32 0, i32 0
  %26 = load i32, i32* %x29, align 4, !tbaa !138
  %p30 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p30, i32 0, i32 0
  store i32 %26, i32* %x31, align 4, !tbaa !134
  br label %if.end

if.end:                                           ; preds = %if.then.26, %do.body
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect32 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %27, i32 0, i32 8
  %q33 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect32, i32 0, i32 1
  %x34 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q33, i32 0, i32 0
  %28 = load i32, i32* %x34, align 4, !tbaa !139
  %q35 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q35, i32 0, i32 0
  %29 = load i32, i32* %x36, align 4, !tbaa !136
  %cmp37 = icmp slt i32 %28, %29
  br i1 %cmp37, label %if.then.39, label %if.end.45

if.then.39:                                       ; preds = %if.end
  %30 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect40 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %30, i32 0, i32 8
  %q41 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect40, i32 0, i32 1
  %x42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q41, i32 0, i32 0
  %31 = load i32, i32* %x42, align 4, !tbaa !139
  %q43 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q43, i32 0, i32 0
  store i32 %31, i32* %x44, align 4, !tbaa !136
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.39, %if.end
  %32 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect46 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %32, i32 0, i32 8
  %p47 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect46, i32 0, i32 0
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p47, i32 0, i32 1
  %33 = load i32, i32* %y48, align 4, !tbaa !140
  %p49 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p49, i32 0, i32 1
  %34 = load i32, i32* %y50, align 4, !tbaa !133
  %cmp51 = icmp sgt i32 %33, %34
  br i1 %cmp51, label %if.then.53, label %if.end.59

if.then.53:                                       ; preds = %if.end.45
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect54 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %35, i32 0, i32 8
  %p55 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect54, i32 0, i32 0
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p55, i32 0, i32 1
  %36 = load i32, i32* %y56, align 4, !tbaa !140
  %p57 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p57, i32 0, i32 1
  store i32 %36, i32* %y58, align 4, !tbaa !133
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.53, %if.end.45
  %37 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect60 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %37, i32 0, i32 8
  %q61 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect60, i32 0, i32 1
  %y62 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q61, i32 0, i32 1
  %38 = load i32, i32* %y62, align 4, !tbaa !141
  %q63 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q63, i32 0, i32 1
  %39 = load i32, i32* %y64, align 4, !tbaa !135
  %cmp65 = icmp slt i32 %38, %39
  br i1 %cmp65, label %if.then.67, label %if.end.73

if.then.67:                                       ; preds = %if.end.59
  %40 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect68 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %40, i32 0, i32 8
  %q69 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect68, i32 0, i32 1
  %y70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q69, i32 0, i32 1
  %41 = load i32, i32* %y70, align 4, !tbaa !141
  %q71 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q71, i32 0, i32 1
  store i32 %41, i32* %y72, align 4, !tbaa !135
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.67, %if.end.59
  br label %do.cond

do.cond:                                          ; preds = %if.end.73
  br label %do.end

do.end:                                           ; preds = %do.cond
  %q74 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q74, i32 0, i32 0
  %42 = load i32, i32* %x75, align 4, !tbaa !136
  %p76 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p76, i32 0, i32 0
  %43 = load i32, i32* %x77, align 4, !tbaa !134
  %cmp78 = icmp sle i32 %42, %43
  br i1 %cmp78, label %if.then.86, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %q80 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y81 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q80, i32 0, i32 1
  %44 = load i32, i32* %y81, align 4, !tbaa !135
  %p82 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y83 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p82, i32 0, i32 1
  %45 = load i32, i32* %y83, align 4, !tbaa !133
  %cmp84 = icmp sle i32 %44, %45
  br i1 %cmp84, label %if.then.86, label %if.end.87

if.then.86:                                       ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.87:                                        ; preds = %lor.lhs.false
  %p88 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %x89 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p88, i32 0, i32 0
  %46 = load i32, i32* %x89, align 4, !tbaa !134
  %p90 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p90, i32 0, i32 0
  %47 = load i32, i32* %x91, align 4, !tbaa !134
  %cmp92 = icmp eq i32 %46, %47
  br i1 %cmp92, label %land.lhs.true, label %if.end.116

land.lhs.true:                                    ; preds = %if.end.87
  %p94 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %y95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p94, i32 0, i32 1
  %48 = load i32, i32* %y95, align 4, !tbaa !133
  %p96 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y97 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p96, i32 0, i32 1
  %49 = load i32, i32* %y97, align 4, !tbaa !133
  %cmp98 = icmp eq i32 %48, %49
  br i1 %cmp98, label %land.lhs.true.100, label %if.end.116

land.lhs.true.100:                                ; preds = %land.lhs.true
  %q101 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %x102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q101, i32 0, i32 0
  %50 = load i32, i32* %x102, align 4, !tbaa !136
  %q103 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q103, i32 0, i32 0
  %51 = load i32, i32* %x104, align 4, !tbaa !136
  %cmp105 = icmp eq i32 %50, %51
  br i1 %cmp105, label %land.lhs.true.107, label %if.end.116

land.lhs.true.107:                                ; preds = %land.lhs.true.100
  %q108 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %y109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q108, i32 0, i32 1
  %52 = load i32, i32* %y109, align 4, !tbaa !135
  %q110 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y111 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q110, i32 0, i32 1
  %53 = load i32, i32* %y111, align 4, !tbaa !135
  %cmp112 = icmp eq i32 %52, %53
  br i1 %cmp112, label %if.then.114, label %if.end.116

if.then.114:                                      ; preds = %land.lhs.true.107
  %54 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside115 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %54, i32 0, i32 26
  store i32 1, i32* %inside115, align 4, !tbaa !32
  br label %if.end.116

if.end.116:                                       ; preds = %if.then.114, %land.lhs.true.107, %land.lhs.true.100, %land.lhs.true, %if.end.87
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.116, %if.then.86
  %55 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %55) #2
  %56 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.end(i64 16, i8* %56) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.138 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.118

if.end.118:                                       ; preds = %cleanup.cont, %if.then
  %57 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %57, %struct.patch_color_s** %c, i32 1) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %58 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp119 = icmp eq i8* %58, null
  br i1 %cmp119, label %if.then.121, label %if.end.122

if.then.121:                                      ; preds = %if.end.118
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138

if.end.122:                                       ; preds = %if.end.118
  %59 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %60 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %61 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %62 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %59, %struct.patch_color_s* %60, %struct.patch_color_s* %61, %struct.patch_fill_state_s* %62, double 5.000000e-01) #5
  %63 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 0
  %arraydecay = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx123, i32 0, i32 0
  %arrayidx124 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 1
  %arraydecay125 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx124, i32 0, i32 0
  call void @split_curve(%struct.gs_fixed_point_s* %63, %struct.gs_fixed_point_s* %arraydecay, %struct.gs_fixed_point_s* %arraydecay125) #5
  %64 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %65 = load i32, i32* %k.addr, align 4, !tbaa !5
  %div = sdiv i32 %65, 2
  %66 = load i32, i32* %ka.addr, align 4, !tbaa !5
  %arrayidx126 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 0
  %arraydecay127 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx126, i32 0, i32 0
  %67 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %68 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %69 = load i32, i32* %wedge_type.addr, align 4, !tbaa !5
  %call128 = call i32 @fill_wedges_aux(%struct.patch_fill_state_s* %64, i32 %div, i32 %66, %struct.gs_fixed_point_s* %arraydecay127, %struct.patch_color_s* %67, %struct.patch_color_s* %68, i32 %69) #5
  store i32 %call128, i32* %code, align 4, !tbaa !5
  %70 = load i32, i32* %code, align 4, !tbaa !5
  %cmp129 = icmp sge i32 %70, 0
  br i1 %cmp129, label %if.then.131, label %if.end.136

if.then.131:                                      ; preds = %if.end.122
  %71 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %72 = load i32, i32* %k.addr, align 4, !tbaa !5
  %div132 = sdiv i32 %72, 2
  %73 = load i32, i32* %ka.addr, align 4, !tbaa !5
  %arrayidx133 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 1
  %arraydecay134 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx133, i32 0, i32 0
  %74 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %75 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %76 = load i32, i32* %wedge_type.addr, align 4, !tbaa !5
  %call135 = call i32 @fill_wedges_aux(%struct.patch_fill_state_s* %71, i32 %div132, i32 %73, %struct.gs_fixed_point_s* %arraydecay134, %struct.patch_color_s* %74, %struct.patch_color_s* %75, i32 %76) #5
  store i32 %call135, i32* %code, align 4, !tbaa !5
  br label %if.end.136

if.end.136:                                       ; preds = %if.then.131, %if.end.122
  %77 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %78 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %77, i8* %78, i32 1) #5
  %79 = load i32, i32* %save_inside, align 4, !tbaa !5
  %80 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside137 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %80, i32 0, i32 26
  store i32 %79, i32* %inside137, align 4, !tbaa !32
  %81 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %81, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.138

cleanup.138:                                      ; preds = %if.end.136, %if.then.121, %cleanup
  %82 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #2
  %83 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #2
  %84 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #2
  %85 = bitcast [2 x [4 x %struct.gs_fixed_point_s]]* %q to i8*
  call void @llvm.lifetime.end(i64 64, i8* %85) #2
  br label %cleanup.163

if.else:                                          ; preds = %entry
  %86 = load i32, i32* %wedge_type.addr, align 4, !tbaa !5
  %and = and i32 %86, 1
  %tobool142 = icmp ne i32 %and, 0
  br i1 %tobool142, label %if.then.143, label %if.end.154

if.then.143:                                      ; preds = %if.else
  br label %do.body.144

do.body.144:                                      ; preds = %if.then.143
  br label %do.cond.145

do.cond.145:                                      ; preds = %do.body.144
  br label %do.end.146

do.end.146:                                       ; preds = %do.cond.145
  %87 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %88 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx147 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %88, i64 0
  %89 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx148 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %89, i64 3
  %90 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %91 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call149 = call i32 @mesh_padding(%struct.patch_fill_state_s* %87, %struct.gs_fixed_point_s* %arrayidx147, %struct.gs_fixed_point_s* %arrayidx148, %struct.patch_color_s* %90, %struct.patch_color_s* %91) #5
  store i32 %call149, i32* %code, align 4, !tbaa !5
  %92 = load i32, i32* %code, align 4, !tbaa !5
  %cmp150 = icmp slt i32 %92, 0
  br i1 %cmp150, label %if.then.152, label %if.end.153

if.then.152:                                      ; preds = %do.end.146
  %93 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %93, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.163

if.end.153:                                       ; preds = %do.end.146
  br label %if.end.154

if.end.154:                                       ; preds = %if.end.153, %if.else
  %94 = load i32, i32* %ka.addr, align 4, !tbaa !5
  %cmp155 = icmp sge i32 %94, 2
  br i1 %cmp155, label %land.lhs.true.157, label %if.end.162

land.lhs.true.157:                                ; preds = %if.end.154
  %95 = load i32, i32* %wedge_type.addr, align 4, !tbaa !5
  %and158 = and i32 %95, 2
  %tobool159 = icmp ne i32 %and158, 0
  br i1 %tobool159, label %if.then.160, label %if.end.162

if.then.160:                                      ; preds = %land.lhs.true.157
  %96 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %97 = load i32, i32* %ka.addr, align 4, !tbaa !5
  %98 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %99 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %100 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call161 = call i32 @wedge_by_triangles(%struct.patch_fill_state_s* %96, i32 %97, %struct.gs_fixed_point_s* %98, %struct.patch_color_s* %99, %struct.patch_color_s* %100) #5
  store i32 %call161, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.163

if.end.162:                                       ; preds = %land.lhs.true.157, %if.end.154
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.163

cleanup.163:                                      ; preds = %if.end.162, %if.then.160, %if.then.152, %cleanup.138
  %101 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %101) #2
  %102 = load i32, i32* %retval
  ret i32 %102
}

; Function Attrs: nounwind uwtable
define internal void @split_curve(%struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s* %q0, %struct.gs_fixed_point_s* %q1) #0 {
entry:
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %q0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %q1.addr = alloca %struct.gs_fixed_point_s*, align 8
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q0, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q1, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %0 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %1 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %2 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  call void @split_curve_s(%struct.gs_fixed_point_s* %0, %struct.gs_fixed_point_s* %1, %struct.gs_fixed_point_s* %2, i32 1) #5
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @wedge_by_triangles(%struct.patch_fill_state_s* %pfs, i32 %ka, %struct.gs_fixed_point_s* %pole, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %ka.addr = alloca i32, align 4
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %q = alloca [2 x [4 x %struct.gs_fixed_point_s]], align 16
  %c = alloca %struct.patch_color_s*, align 8
  %p = alloca [3 x %struct.shading_vertex_s], align 16
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store i32 %ka, i32* %ka.addr, align 4, !tbaa !5
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %0 = bitcast [2 x [4 x %struct.gs_fixed_point_s]]* %q to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #2
  %1 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #2
  %2 = bitcast [3 x %struct.shading_vertex_s]* %p to i8*
  call void @llvm.lifetime.start(i64 48, i8* %2) #2
  %3 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %5, %struct.patch_color_s** %c, i32 1) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %6 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp = icmp eq i8* %6, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %c2 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx, i32 0, i32 1
  store %struct.patch_color_s* %7, %struct.patch_color_s** %c2, align 8, !tbaa !150
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 0
  %arraydecay = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx3, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 1
  %arraydecay5 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx4, i32 0, i32 0
  call void @split_curve(%struct.gs_fixed_point_s* %8, %struct.gs_fixed_point_s* %arraydecay, %struct.gs_fixed_point_s* %arraydecay5) #5
  %arrayidx6 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %p7 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx6, i32 0, i32 0
  %9 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %9, i64 0
  %10 = bitcast %struct.gs_fixed_point_s* %p7 to i8*
  %11 = bitcast %struct.gs_fixed_point_s* %arrayidx8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false), !tbaa.struct !117
  %12 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %arrayidx9 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx9, i32 0, i32 1
  store %struct.patch_color_s* %12, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %arrayidx11 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %p12 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx11, i32 0, i32 0
  %13 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %13, i64 3
  %14 = bitcast %struct.gs_fixed_point_s* %p12 to i8*
  %15 = bitcast %struct.gs_fixed_point_s* %arrayidx13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false), !tbaa.struct !117
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %arrayidx14 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %c15 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx14, i32 0, i32 1
  store %struct.patch_color_s* %16, %struct.patch_color_s** %c15, align 8, !tbaa !150
  %arrayidx16 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %p17 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx16, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 0
  %arrayidx19 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx18, i32 0, i64 3
  %17 = bitcast %struct.gs_fixed_point_s* %p17 to i8*
  %18 = bitcast %struct.gs_fixed_point_s* %arrayidx19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 4, i1 false), !tbaa.struct !117
  %19 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !1
  %20 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %21 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %19, %struct.patch_color_s* %20, %struct.patch_color_s* %21, %struct.patch_fill_state_s* %22, double 5.000000e-01) #5
  %23 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 0
  %arrayidx21 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 1
  %arrayidx22 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %call23 = call i32 @fill_triangle_wedge(%struct.patch_fill_state_s* %23, %struct.shading_vertex_s* %arrayidx20, %struct.shading_vertex_s* %arrayidx21, %struct.shading_vertex_s* %arrayidx22) #5
  store i32 %call23, i32* %code, align 4, !tbaa !5
  %24 = load i32, i32* %code, align 4, !tbaa !5
  %cmp24 = icmp sge i32 %24, 0
  br i1 %cmp24, label %if.then.25, label %if.end.34

if.then.25:                                       ; preds = %if.end
  %25 = load i32, i32* %ka.addr, align 4, !tbaa !5
  %cmp26 = icmp eq i32 %25, 2
  br i1 %cmp26, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %if.then.25
  br label %out

if.end.28:                                        ; preds = %if.then.25
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %27 = load i32, i32* %ka.addr, align 4, !tbaa !5
  %div = sdiv i32 %27, 2
  %arrayidx29 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 0
  %arraydecay30 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx29, i32 0, i32 0
  %28 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %c32 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx31, i32 0, i32 1
  %29 = load %struct.patch_color_s*, %struct.patch_color_s** %c32, align 8, !tbaa !150
  %call33 = call i32 @wedge_by_triangles(%struct.patch_fill_state_s* %26, i32 %div, %struct.gs_fixed_point_s* %arraydecay30, %struct.patch_color_s* %28, %struct.patch_color_s* %29) #5
  store i32 %call33, i32* %code, align 4, !tbaa !5
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.28, %if.end
  %30 = load i32, i32* %code, align 4, !tbaa !5
  %cmp35 = icmp sge i32 %30, 0
  br i1 %cmp35, label %if.then.36, label %if.end.43

if.then.36:                                       ; preds = %if.end.34
  %31 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %32 = load i32, i32* %ka.addr, align 4, !tbaa !5
  %div37 = sdiv i32 %32, 2
  %arrayidx38 = getelementptr inbounds [2 x [4 x %struct.gs_fixed_point_s]], [2 x [4 x %struct.gs_fixed_point_s]]* %q, i32 0, i64 1
  %arraydecay39 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx38, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [3 x %struct.shading_vertex_s], [3 x %struct.shading_vertex_s]* %p, i32 0, i64 2
  %c41 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx40, i32 0, i32 1
  %33 = load %struct.patch_color_s*, %struct.patch_color_s** %c41, align 8, !tbaa !150
  %34 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %call42 = call i32 @wedge_by_triangles(%struct.patch_fill_state_s* %31, i32 %div37, %struct.gs_fixed_point_s* %arraydecay39, %struct.patch_color_s* %33, %struct.patch_color_s* %34) #5
  store i32 %call42, i32* %code, align 4, !tbaa !5
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.36, %if.end.34
  br label %out

out:                                              ; preds = %if.end.43, %if.then.27
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %36 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %35, i8* %36, i32 1) #5
  %37 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %37, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then
  %38 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %38) #2
  %39 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #2
  %40 = bitcast [3 x %struct.shading_vertex_s]* %p to i8*
  call void @llvm.lifetime.end(i64 48, i8* %40) #2
  %41 = bitcast %struct.patch_color_s** %c to i8*
  call void @llvm.lifetime.end(i64 8, i8* %41) #2
  %42 = bitcast [2 x [4 x %struct.gs_fixed_point_s]]* %q to i8*
  call void @llvm.lifetime.end(i64 64, i8* %42) #2
  %43 = load i32, i32* %retval
  ret i32 %43
}

; Function Attrs: nounwind uwtable
define internal void @split_curve_s(%struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s* %q0, %struct.gs_fixed_point_s* %q1, i32 %pole_step) #0 {
entry:
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %q0.addr = alloca %struct.gs_fixed_point_s*, align 8
  %q1.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pole_step.addr = alloca i32, align 4
  %x12 = alloca i32, align 4
  %y12 = alloca i32, align 4
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q0, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %q1, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  store i32 %pole_step, i32* %pole_step.addr, align 4, !tbaa !5
  %0 = bitcast i32* %x12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul = mul nsw i32 1, %1
  %idxprom = sext i32 %mul to i64
  %2 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %2, i64 %idxprom
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %x, align 4, !tbaa !109
  %shr = ashr i32 %3, 1
  %4 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul1 = mul nsw i32 2, %4
  %idxprom2 = sext i32 %mul1 to i64
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i64 %idxprom2
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx3, i32 0, i32 0
  %6 = load i32, i32* %x4, align 4, !tbaa !109
  %shr5 = ashr i32 %6, 1
  %add = add nsw i32 %shr, %shr5
  %7 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul6 = mul nsw i32 1, %7
  %idxprom7 = sext i32 %mul6 to i64
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %8, i64 %idxprom7
  %x9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx8, i32 0, i32 0
  %9 = load i32, i32* %x9, align 4, !tbaa !109
  %10 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul10 = mul nsw i32 2, %10
  %idxprom11 = sext i32 %mul10 to i64
  %11 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %11, i64 %idxprom11
  %x13 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx12, i32 0, i32 0
  %12 = load i32, i32* %x13, align 4, !tbaa !109
  %or = or i32 %9, %12
  %and = and i32 %or, 1
  %add14 = add nsw i32 %add, %and
  store i32 %add14, i32* %x12, align 4, !tbaa !5
  %13 = bitcast i32* %y12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  %14 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul15 = mul nsw i32 1, %14
  %idxprom16 = sext i32 %mul15 to i64
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 %idxprom16
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx17, i32 0, i32 1
  %16 = load i32, i32* %y, align 4, !tbaa !110
  %shr18 = ashr i32 %16, 1
  %17 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul19 = mul nsw i32 2, %17
  %idxprom20 = sext i32 %mul19 to i64
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i64 %idxprom20
  %y22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx21, i32 0, i32 1
  %19 = load i32, i32* %y22, align 4, !tbaa !110
  %shr23 = ashr i32 %19, 1
  %add24 = add nsw i32 %shr18, %shr23
  %20 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul25 = mul nsw i32 1, %20
  %idxprom26 = sext i32 %mul25 to i64
  %21 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %21, i64 %idxprom26
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx27, i32 0, i32 1
  %22 = load i32, i32* %y28, align 4, !tbaa !110
  %23 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul29 = mul nsw i32 2, %23
  %idxprom30 = sext i32 %mul29 to i64
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %24, i64 %idxprom30
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx31, i32 0, i32 1
  %25 = load i32, i32* %y32, align 4, !tbaa !110
  %or33 = or i32 %22, %25
  %and34 = and i32 %or33, 1
  %add35 = add nsw i32 %add24, %and34
  store i32 %add35, i32* %y12, align 4, !tbaa !5
  %26 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul36 = mul nsw i32 0, %26
  %idxprom37 = sext i32 %mul36 to i64
  %27 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %27, i64 %idxprom37
  %x39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx38, i32 0, i32 0
  %28 = load i32, i32* %x39, align 4, !tbaa !109
  %shr40 = ashr i32 %28, 1
  %29 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul41 = mul nsw i32 1, %29
  %idxprom42 = sext i32 %mul41 to i64
  %30 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %30, i64 %idxprom42
  %x44 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx43, i32 0, i32 0
  %31 = load i32, i32* %x44, align 4, !tbaa !109
  %shr45 = ashr i32 %31, 1
  %add46 = add nsw i32 %shr40, %shr45
  %32 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul47 = mul nsw i32 0, %32
  %idxprom48 = sext i32 %mul47 to i64
  %33 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx49 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %33, i64 %idxprom48
  %x50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx49, i32 0, i32 0
  %34 = load i32, i32* %x50, align 4, !tbaa !109
  %35 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul51 = mul nsw i32 1, %35
  %idxprom52 = sext i32 %mul51 to i64
  %36 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %36, i64 %idxprom52
  %x54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx53, i32 0, i32 0
  %37 = load i32, i32* %x54, align 4, !tbaa !109
  %or55 = or i32 %34, %37
  %and56 = and i32 %or55, 1
  %add57 = add nsw i32 %add46, %and56
  %38 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul58 = mul nsw i32 1, %38
  %idxprom59 = sext i32 %mul58 to i64
  %39 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx60 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %39, i64 %idxprom59
  %x61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx60, i32 0, i32 0
  store i32 %add57, i32* %x61, align 4, !tbaa !109
  %40 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul62 = mul nsw i32 0, %40
  %idxprom63 = sext i32 %mul62 to i64
  %41 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx64 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %41, i64 %idxprom63
  %y65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx64, i32 0, i32 1
  %42 = load i32, i32* %y65, align 4, !tbaa !110
  %shr66 = ashr i32 %42, 1
  %43 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul67 = mul nsw i32 1, %43
  %idxprom68 = sext i32 %mul67 to i64
  %44 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx69 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %44, i64 %idxprom68
  %y70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx69, i32 0, i32 1
  %45 = load i32, i32* %y70, align 4, !tbaa !110
  %shr71 = ashr i32 %45, 1
  %add72 = add nsw i32 %shr66, %shr71
  %46 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul73 = mul nsw i32 0, %46
  %idxprom74 = sext i32 %mul73 to i64
  %47 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx75 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %47, i64 %idxprom74
  %y76 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx75, i32 0, i32 1
  %48 = load i32, i32* %y76, align 4, !tbaa !110
  %49 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul77 = mul nsw i32 1, %49
  %idxprom78 = sext i32 %mul77 to i64
  %50 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx79 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %50, i64 %idxprom78
  %y80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx79, i32 0, i32 1
  %51 = load i32, i32* %y80, align 4, !tbaa !110
  %or81 = or i32 %48, %51
  %and82 = and i32 %or81, 1
  %add83 = add nsw i32 %add72, %and82
  %52 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul84 = mul nsw i32 1, %52
  %idxprom85 = sext i32 %mul84 to i64
  %53 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx86 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %53, i64 %idxprom85
  %y87 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx86, i32 0, i32 1
  store i32 %add83, i32* %y87, align 4, !tbaa !110
  %54 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul88 = mul nsw i32 2, %54
  %idxprom89 = sext i32 %mul88 to i64
  %55 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx90 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %55, i64 %idxprom89
  %x91 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx90, i32 0, i32 0
  %56 = load i32, i32* %x91, align 4, !tbaa !109
  %shr92 = ashr i32 %56, 1
  %57 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul93 = mul nsw i32 3, %57
  %idxprom94 = sext i32 %mul93 to i64
  %58 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %58, i64 %idxprom94
  %x96 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx95, i32 0, i32 0
  %59 = load i32, i32* %x96, align 4, !tbaa !109
  %shr97 = ashr i32 %59, 1
  %add98 = add nsw i32 %shr92, %shr97
  %60 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul99 = mul nsw i32 2, %60
  %idxprom100 = sext i32 %mul99 to i64
  %61 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx101 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %61, i64 %idxprom100
  %x102 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx101, i32 0, i32 0
  %62 = load i32, i32* %x102, align 4, !tbaa !109
  %63 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul103 = mul nsw i32 3, %63
  %idxprom104 = sext i32 %mul103 to i64
  %64 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx105 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %64, i64 %idxprom104
  %x106 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx105, i32 0, i32 0
  %65 = load i32, i32* %x106, align 4, !tbaa !109
  %or107 = or i32 %62, %65
  %and108 = and i32 %or107, 1
  %add109 = add nsw i32 %add98, %and108
  %66 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul110 = mul nsw i32 2, %66
  %idxprom111 = sext i32 %mul110 to i64
  %67 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %67, i64 %idxprom111
  %x113 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx112, i32 0, i32 0
  store i32 %add109, i32* %x113, align 4, !tbaa !109
  %68 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul114 = mul nsw i32 2, %68
  %idxprom115 = sext i32 %mul114 to i64
  %69 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx116 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %69, i64 %idxprom115
  %y117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx116, i32 0, i32 1
  %70 = load i32, i32* %y117, align 4, !tbaa !110
  %shr118 = ashr i32 %70, 1
  %71 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul119 = mul nsw i32 3, %71
  %idxprom120 = sext i32 %mul119 to i64
  %72 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx121 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %72, i64 %idxprom120
  %y122 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx121, i32 0, i32 1
  %73 = load i32, i32* %y122, align 4, !tbaa !110
  %shr123 = ashr i32 %73, 1
  %add124 = add nsw i32 %shr118, %shr123
  %74 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul125 = mul nsw i32 2, %74
  %idxprom126 = sext i32 %mul125 to i64
  %75 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx127 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %75, i64 %idxprom126
  %y128 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx127, i32 0, i32 1
  %76 = load i32, i32* %y128, align 4, !tbaa !110
  %77 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul129 = mul nsw i32 3, %77
  %idxprom130 = sext i32 %mul129 to i64
  %78 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx131 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %78, i64 %idxprom130
  %y132 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx131, i32 0, i32 1
  %79 = load i32, i32* %y132, align 4, !tbaa !110
  %or133 = or i32 %76, %79
  %and134 = and i32 %or133, 1
  %add135 = add nsw i32 %add124, %and134
  %80 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul136 = mul nsw i32 2, %80
  %idxprom137 = sext i32 %mul136 to i64
  %81 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx138 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %81, i64 %idxprom137
  %y139 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx138, i32 0, i32 1
  store i32 %add135, i32* %y139, align 4, !tbaa !110
  %82 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul140 = mul nsw i32 1, %82
  %idxprom141 = sext i32 %mul140 to i64
  %83 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx142 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %83, i64 %idxprom141
  %x143 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx142, i32 0, i32 0
  %84 = load i32, i32* %x143, align 4, !tbaa !109
  %shr144 = ashr i32 %84, 1
  %85 = load i32, i32* %x12, align 4, !tbaa !5
  %shr145 = ashr i32 %85, 1
  %add146 = add nsw i32 %shr144, %shr145
  %86 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul147 = mul nsw i32 1, %86
  %idxprom148 = sext i32 %mul147 to i64
  %87 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx149 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %87, i64 %idxprom148
  %x150 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx149, i32 0, i32 0
  %88 = load i32, i32* %x150, align 4, !tbaa !109
  %89 = load i32, i32* %x12, align 4, !tbaa !5
  %or151 = or i32 %88, %89
  %and152 = and i32 %or151, 1
  %add153 = add nsw i32 %add146, %and152
  %90 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul154 = mul nsw i32 2, %90
  %idxprom155 = sext i32 %mul154 to i64
  %91 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx156 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %91, i64 %idxprom155
  %x157 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx156, i32 0, i32 0
  store i32 %add153, i32* %x157, align 4, !tbaa !109
  %92 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul158 = mul nsw i32 1, %92
  %idxprom159 = sext i32 %mul158 to i64
  %93 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx160 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %93, i64 %idxprom159
  %y161 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx160, i32 0, i32 1
  %94 = load i32, i32* %y161, align 4, !tbaa !110
  %shr162 = ashr i32 %94, 1
  %95 = load i32, i32* %y12, align 4, !tbaa !5
  %shr163 = ashr i32 %95, 1
  %add164 = add nsw i32 %shr162, %shr163
  %96 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul165 = mul nsw i32 1, %96
  %idxprom166 = sext i32 %mul165 to i64
  %97 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx167 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %97, i64 %idxprom166
  %y168 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx167, i32 0, i32 1
  %98 = load i32, i32* %y168, align 4, !tbaa !110
  %99 = load i32, i32* %y12, align 4, !tbaa !5
  %or169 = or i32 %98, %99
  %and170 = and i32 %or169, 1
  %add171 = add nsw i32 %add164, %and170
  %100 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul172 = mul nsw i32 2, %100
  %idxprom173 = sext i32 %mul172 to i64
  %101 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx174 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %101, i64 %idxprom173
  %y175 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx174, i32 0, i32 1
  store i32 %add171, i32* %y175, align 4, !tbaa !110
  %102 = load i32, i32* %x12, align 4, !tbaa !5
  %shr176 = ashr i32 %102, 1
  %103 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul177 = mul nsw i32 2, %103
  %idxprom178 = sext i32 %mul177 to i64
  %104 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx179 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %104, i64 %idxprom178
  %x180 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx179, i32 0, i32 0
  %105 = load i32, i32* %x180, align 4, !tbaa !109
  %shr181 = ashr i32 %105, 1
  %add182 = add nsw i32 %shr176, %shr181
  %106 = load i32, i32* %x12, align 4, !tbaa !5
  %107 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul183 = mul nsw i32 2, %107
  %idxprom184 = sext i32 %mul183 to i64
  %108 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx185 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %108, i64 %idxprom184
  %x186 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx185, i32 0, i32 0
  %109 = load i32, i32* %x186, align 4, !tbaa !109
  %or187 = or i32 %106, %109
  %and188 = and i32 %or187, 1
  %add189 = add nsw i32 %add182, %and188
  %110 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul190 = mul nsw i32 1, %110
  %idxprom191 = sext i32 %mul190 to i64
  %111 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx192 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %111, i64 %idxprom191
  %x193 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx192, i32 0, i32 0
  store i32 %add189, i32* %x193, align 4, !tbaa !109
  %112 = load i32, i32* %y12, align 4, !tbaa !5
  %shr194 = ashr i32 %112, 1
  %113 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul195 = mul nsw i32 2, %113
  %idxprom196 = sext i32 %mul195 to i64
  %114 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx197 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %114, i64 %idxprom196
  %y198 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx197, i32 0, i32 1
  %115 = load i32, i32* %y198, align 4, !tbaa !110
  %shr199 = ashr i32 %115, 1
  %add200 = add nsw i32 %shr194, %shr199
  %116 = load i32, i32* %y12, align 4, !tbaa !5
  %117 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul201 = mul nsw i32 2, %117
  %idxprom202 = sext i32 %mul201 to i64
  %118 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx203 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %118, i64 %idxprom202
  %y204 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx203, i32 0, i32 1
  %119 = load i32, i32* %y204, align 4, !tbaa !110
  %or205 = or i32 %116, %119
  %and206 = and i32 %or205, 1
  %add207 = add nsw i32 %add200, %and206
  %120 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul208 = mul nsw i32 1, %120
  %idxprom209 = sext i32 %mul208 to i64
  %121 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx210 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %121, i64 %idxprom209
  %y211 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx210, i32 0, i32 1
  store i32 %add207, i32* %y211, align 4, !tbaa !110
  %122 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul212 = mul nsw i32 0, %122
  %idxprom213 = sext i32 %mul212 to i64
  %123 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx214 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %123, i64 %idxprom213
  %x215 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx214, i32 0, i32 0
  %124 = load i32, i32* %x215, align 4, !tbaa !109
  %125 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul216 = mul nsw i32 0, %125
  %idxprom217 = sext i32 %mul216 to i64
  %126 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx218 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %126, i64 %idxprom217
  %x219 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx218, i32 0, i32 0
  store i32 %124, i32* %x219, align 4, !tbaa !109
  %127 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul220 = mul nsw i32 0, %127
  %idxprom221 = sext i32 %mul220 to i64
  %128 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx222 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %128, i64 %idxprom221
  %y223 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx222, i32 0, i32 1
  %129 = load i32, i32* %y223, align 4, !tbaa !110
  %130 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul224 = mul nsw i32 0, %130
  %idxprom225 = sext i32 %mul224 to i64
  %131 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx226 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %131, i64 %idxprom225
  %y227 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx226, i32 0, i32 1
  store i32 %129, i32* %y227, align 4, !tbaa !110
  %132 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul228 = mul nsw i32 2, %132
  %idxprom229 = sext i32 %mul228 to i64
  %133 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx230 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %133, i64 %idxprom229
  %x231 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx230, i32 0, i32 0
  %134 = load i32, i32* %x231, align 4, !tbaa !109
  %shr232 = ashr i32 %134, 1
  %135 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul233 = mul nsw i32 1, %135
  %idxprom234 = sext i32 %mul233 to i64
  %136 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx235 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %136, i64 %idxprom234
  %x236 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx235, i32 0, i32 0
  %137 = load i32, i32* %x236, align 4, !tbaa !109
  %shr237 = ashr i32 %137, 1
  %add238 = add nsw i32 %shr232, %shr237
  %138 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul239 = mul nsw i32 2, %138
  %idxprom240 = sext i32 %mul239 to i64
  %139 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx241 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %139, i64 %idxprom240
  %x242 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx241, i32 0, i32 0
  %140 = load i32, i32* %x242, align 4, !tbaa !109
  %141 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul243 = mul nsw i32 1, %141
  %idxprom244 = sext i32 %mul243 to i64
  %142 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx245 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %142, i64 %idxprom244
  %x246 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx245, i32 0, i32 0
  %143 = load i32, i32* %x246, align 4, !tbaa !109
  %or247 = or i32 %140, %143
  %and248 = and i32 %or247, 1
  %add249 = add nsw i32 %add238, %and248
  %144 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul250 = mul nsw i32 0, %144
  %idxprom251 = sext i32 %mul250 to i64
  %145 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx252 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %145, i64 %idxprom251
  %x253 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx252, i32 0, i32 0
  store i32 %add249, i32* %x253, align 4, !tbaa !109
  %146 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul254 = mul nsw i32 3, %146
  %idxprom255 = sext i32 %mul254 to i64
  %147 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx256 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %147, i64 %idxprom255
  %x257 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx256, i32 0, i32 0
  store i32 %add249, i32* %x257, align 4, !tbaa !109
  %148 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul258 = mul nsw i32 2, %148
  %idxprom259 = sext i32 %mul258 to i64
  %149 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx260 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %149, i64 %idxprom259
  %y261 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx260, i32 0, i32 1
  %150 = load i32, i32* %y261, align 4, !tbaa !110
  %shr262 = ashr i32 %150, 1
  %151 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul263 = mul nsw i32 1, %151
  %idxprom264 = sext i32 %mul263 to i64
  %152 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx265 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %152, i64 %idxprom264
  %y266 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx265, i32 0, i32 1
  %153 = load i32, i32* %y266, align 4, !tbaa !110
  %shr267 = ashr i32 %153, 1
  %add268 = add nsw i32 %shr262, %shr267
  %154 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul269 = mul nsw i32 2, %154
  %idxprom270 = sext i32 %mul269 to i64
  %155 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx271 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %155, i64 %idxprom270
  %y272 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx271, i32 0, i32 1
  %156 = load i32, i32* %y272, align 4, !tbaa !110
  %157 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul273 = mul nsw i32 1, %157
  %idxprom274 = sext i32 %mul273 to i64
  %158 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx275 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %158, i64 %idxprom274
  %y276 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx275, i32 0, i32 1
  %159 = load i32, i32* %y276, align 4, !tbaa !110
  %or277 = or i32 %156, %159
  %and278 = and i32 %or277, 1
  %add279 = add nsw i32 %add268, %and278
  %160 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul280 = mul nsw i32 0, %160
  %idxprom281 = sext i32 %mul280 to i64
  %161 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx282 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %161, i64 %idxprom281
  %y283 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx282, i32 0, i32 1
  store i32 %add279, i32* %y283, align 4, !tbaa !110
  %162 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul284 = mul nsw i32 3, %162
  %idxprom285 = sext i32 %mul284 to i64
  %163 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q0.addr, align 8, !tbaa !1
  %arrayidx286 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %163, i64 %idxprom285
  %y287 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx286, i32 0, i32 1
  store i32 %add279, i32* %y287, align 4, !tbaa !110
  %164 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul288 = mul nsw i32 3, %164
  %idxprom289 = sext i32 %mul288 to i64
  %165 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx290 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %165, i64 %idxprom289
  %x291 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx290, i32 0, i32 0
  %166 = load i32, i32* %x291, align 4, !tbaa !109
  %167 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul292 = mul nsw i32 3, %167
  %idxprom293 = sext i32 %mul292 to i64
  %168 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx294 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %168, i64 %idxprom293
  %x295 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx294, i32 0, i32 0
  store i32 %166, i32* %x295, align 4, !tbaa !109
  %169 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul296 = mul nsw i32 3, %169
  %idxprom297 = sext i32 %mul296 to i64
  %170 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx298 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %170, i64 %idxprom297
  %y299 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx298, i32 0, i32 1
  %171 = load i32, i32* %y299, align 4, !tbaa !110
  %172 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul300 = mul nsw i32 3, %172
  %idxprom301 = sext i32 %mul300 to i64
  %173 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q1.addr, align 8, !tbaa !1
  %arrayidx302 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %173, i64 %idxprom301
  %y303 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx302, i32 0, i32 1
  store i32 %171, i32* %y303, align 4, !tbaa !110
  %174 = bitcast i32* %y12 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %174) #2
  %175 = bitcast i32* %x12 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %175) #2
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_patch_narrow(%struct.patch_fill_state_s* %pfs, %struct.tensor_patch* %p) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %0 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx, i32 0, i64 0
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %2, i32 0, i32 20
  %3 = load i32, i32* %fixed_flat, align 4, !tbaa !48
  %call = call i32 @is_curve_x_small(%struct.patch_fill_state_s* %0, %struct.gs_fixed_point_s* %arrayidx1, i32 4, i32 %3) #5
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %5 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole2 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %5, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx3, i32 0, i64 1
  %6 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat5 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %6, i32 0, i32 20
  %7 = load i32, i32* %fixed_flat5, align 4, !tbaa !48
  %call6 = call i32 @is_curve_x_small(%struct.patch_fill_state_s* %4, %struct.gs_fixed_point_s* %arrayidx4, i32 4, i32 %7) #5
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end
  %8 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %9 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole10 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx11, i32 0, i64 2
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat13 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %10, i32 0, i32 20
  %11 = load i32, i32* %fixed_flat13, align 4, !tbaa !48
  %call14 = call i32 @is_curve_x_small(%struct.patch_fill_state_s* %8, %struct.gs_fixed_point_s* %arrayidx12, i32 4, i32 %11) #5
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end.17, label %if.then.16

if.then.16:                                       ; preds = %if.end.9
  store i32 0, i32* %retval
  br label %return

if.end.17:                                        ; preds = %if.end.9
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %13 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole18 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %13, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole18, i32 0, i64 0
  %arrayidx20 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx19, i32 0, i64 3
  %14 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat21 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %14, i32 0, i32 20
  %15 = load i32, i32* %fixed_flat21, align 4, !tbaa !48
  %call22 = call i32 @is_curve_x_small(%struct.patch_fill_state_s* %12, %struct.gs_fixed_point_s* %arrayidx20, i32 4, i32 %15) #5
  %tobool23 = icmp ne i32 %call22, 0
  br i1 %tobool23, label %if.end.25, label %if.then.24

if.then.24:                                       ; preds = %if.end.17
  store i32 0, i32* %retval
  br label %return

if.end.25:                                        ; preds = %if.end.17
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %17 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole26 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %17, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole26, i32 0, i64 0
  %arrayidx28 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx27, i32 0, i64 0
  %18 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat29 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %18, i32 0, i32 20
  %19 = load i32, i32* %fixed_flat29, align 4, !tbaa !48
  %call30 = call i32 @is_curve_y_small(%struct.patch_fill_state_s* %16, %struct.gs_fixed_point_s* %arrayidx28, i32 4, i32 %19) #5
  %tobool31 = icmp ne i32 %call30, 0
  br i1 %tobool31, label %if.end.33, label %if.then.32

if.then.32:                                       ; preds = %if.end.25
  store i32 0, i32* %retval
  br label %return

if.end.33:                                        ; preds = %if.end.25
  %20 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %21 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole34 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %21, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole34, i32 0, i64 0
  %arrayidx36 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx35, i32 0, i64 1
  %22 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat37 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %22, i32 0, i32 20
  %23 = load i32, i32* %fixed_flat37, align 4, !tbaa !48
  %call38 = call i32 @is_curve_y_small(%struct.patch_fill_state_s* %20, %struct.gs_fixed_point_s* %arrayidx36, i32 4, i32 %23) #5
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %if.end.33
  store i32 0, i32* %retval
  br label %return

if.end.41:                                        ; preds = %if.end.33
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %25 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole42 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %25, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole42, i32 0, i64 0
  %arrayidx44 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx43, i32 0, i64 2
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat45 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %26, i32 0, i32 20
  %27 = load i32, i32* %fixed_flat45, align 4, !tbaa !48
  %call46 = call i32 @is_curve_y_small(%struct.patch_fill_state_s* %24, %struct.gs_fixed_point_s* %arrayidx44, i32 4, i32 %27) #5
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.end.49, label %if.then.48

if.then.48:                                       ; preds = %if.end.41
  store i32 0, i32* %retval
  br label %return

if.end.49:                                        ; preds = %if.end.41
  %28 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %29 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole50 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %29, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole50, i32 0, i64 0
  %arrayidx52 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx51, i32 0, i64 3
  %30 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat53 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %30, i32 0, i32 20
  %31 = load i32, i32* %fixed_flat53, align 4, !tbaa !48
  %call54 = call i32 @is_curve_y_small(%struct.patch_fill_state_s* %28, %struct.gs_fixed_point_s* %arrayidx52, i32 4, i32 %31) #5
  %tobool55 = icmp ne i32 %call54, 0
  br i1 %tobool55, label %if.end.57, label %if.then.56

if.then.56:                                       ; preds = %if.end.49
  store i32 0, i32* %retval
  br label %return

if.end.57:                                        ; preds = %if.end.49
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.57, %if.then.56, %if.then.48, %if.then.40, %if.then.32, %if.then.24, %if.then.16, %if.then.8, %if.then
  %32 = load i32, i32* %retval
  ret i32 %32
}

; Function Attrs: nounwind uwtable
define internal i32 @fill_stripe(%struct.patch_fill_state_s* %pfs, %struct.tensor_patch* %p) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  %ku = alloca [4 x i32], align 16
  %kum = alloca i32, align 4
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %0 = bitcast [4 x i32]* %ku to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast i32* %kum to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #2
  %3 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %4 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arraydecay = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx, i32 0, i32 0
  %5 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %5, i32 0, i32 20
  %6 = load i32, i32* %fixed_flat, align 4, !tbaa !48
  %call = call i32 @curve_samples(%struct.patch_fill_state_s* %3, %struct.gs_fixed_point_s* %arraydecay, i32 1, i32 %6) #5
  %arrayidx1 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  store i32 %call, i32* %arrayidx1, align 4, !tbaa !5
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %8 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole2 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %8, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole2, i32 0, i64 3
  %arraydecay4 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx3, i32 0, i32 0
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %fixed_flat5 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 20
  %10 = load i32, i32* %fixed_flat5, align 4, !tbaa !48
  %call6 = call i32 @curve_samples(%struct.patch_fill_state_s* %7, %struct.gs_fixed_point_s* %arraydecay4, i32 1, i32 %10) #5
  %arrayidx7 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  store i32 %call6, i32* %arrayidx7, align 4, !tbaa !5
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %11 = load i32, i32* %arrayidx8, align 4, !tbaa !5
  %arrayidx9 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %12 = load i32, i32* %arrayidx9, align 4, !tbaa !5
  %cmp = icmp sgt i32 %11, %12
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %arrayidx10 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %13 = load i32, i32* %arrayidx10, align 4, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %arrayidx11 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %14 = load i32, i32* %arrayidx11, align 4, !tbaa !5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %14, %cond.false ]
  store i32 %cond, i32* %kum, align 4, !tbaa !5
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx12 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 0
  %16 = load i32, i32* %arrayidx12, align 4, !tbaa !5
  %17 = load i32, i32* %kum, align 4, !tbaa !5
  %18 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole13 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %18, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole13, i32 0, i64 0
  %arraydecay15 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx14, i32 0, i32 0
  %19 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %19, i32 0, i32 1
  %arrayidx16 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c, i32 0, i64 0
  %arrayidx17 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx16, i32 0, i64 0
  %20 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx17, align 8, !tbaa !1
  %21 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c18 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %21, i32 0, i32 1
  %arrayidx19 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c18, i32 0, i64 0
  %arrayidx20 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx19, i32 0, i64 1
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx20, align 8, !tbaa !1
  %call21 = call i32 @fill_wedges(%struct.patch_fill_state_s* %15, i32 %16, i32 %17, %struct.gs_fixed_point_s* %arraydecay15, i32 1, %struct.patch_color_s* %20, %struct.patch_color_s* %22, i32 2) #5
  store i32 %call21, i32* %code, align 4, !tbaa !5
  %23 = load i32, i32* %code, align 4, !tbaa !5
  %cmp22 = icmp slt i32 %23, 0
  br i1 %cmp22, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %24 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %24, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.cond

do.cond:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %do.cond
  %25 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %26 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole23 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %26, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole23, i32 0, i64 0
  %arrayidx25 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx24, i32 0, i64 0
  %27 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole26 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %27, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole26, i32 0, i64 3
  %arrayidx28 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx27, i32 0, i64 0
  %28 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c29 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %28, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c29, i32 0, i64 0
  %arrayidx31 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx30, i32 0, i64 0
  %29 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx31, align 8, !tbaa !1
  %30 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c32 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %30, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c32, i32 0, i64 1
  %arrayidx34 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx33, i32 0, i64 0
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx34, align 8, !tbaa !1
  %call35 = call i32 @mesh_padding(%struct.patch_fill_state_s* %25, %struct.gs_fixed_point_s* %arrayidx25, %struct.gs_fixed_point_s* %arrayidx28, %struct.patch_color_s* %29, %struct.patch_color_s* %31) #5
  store i32 %call35, i32* %code, align 4, !tbaa !5
  %32 = load i32, i32* %code, align 4, !tbaa !5
  %cmp36 = icmp slt i32 %32, 0
  br i1 %cmp36, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %do.end
  %33 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %33, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.38:                                        ; preds = %do.end
  br label %do.body.39

do.body.39:                                       ; preds = %if.end.38
  br label %do.cond.40

do.cond.40:                                       ; preds = %do.body.39
  br label %do.end.41

do.end.41:                                        ; preds = %do.cond.40
  %34 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %35 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole42 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %35, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole42, i32 0, i64 0
  %arrayidx44 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx43, i32 0, i64 3
  %36 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole45 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %36, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole45, i32 0, i64 3
  %arrayidx47 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx46, i32 0, i64 3
  %37 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c48 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %37, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c48, i32 0, i64 0
  %arrayidx50 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx49, i32 0, i64 1
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx50, align 8, !tbaa !1
  %39 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c51 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %39, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c51, i32 0, i64 1
  %arrayidx53 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx52, i32 0, i64 1
  %40 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx53, align 8, !tbaa !1
  %call54 = call i32 @mesh_padding(%struct.patch_fill_state_s* %34, %struct.gs_fixed_point_s* %arrayidx44, %struct.gs_fixed_point_s* %arrayidx47, %struct.patch_color_s* %38, %struct.patch_color_s* %40) #5
  store i32 %call54, i32* %code, align 4, !tbaa !5
  %41 = load i32, i32* %code, align 4, !tbaa !5
  %cmp55 = icmp slt i32 %41, 0
  br i1 %cmp55, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %do.end.41
  %42 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %42, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.57:                                        ; preds = %do.end.41
  %43 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %44 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %45 = load i32, i32* %kum, align 4, !tbaa !5
  %call58 = call i32 @decompose_stripe(%struct.patch_fill_state_s* %43, %struct.tensor_patch* %44, i32 %45) #5
  store i32 %call58, i32* %code, align 4, !tbaa !5
  %46 = load i32, i32* %code, align 4, !tbaa !5
  %cmp59 = icmp slt i32 %46, 0
  br i1 %cmp59, label %if.then.60, label %if.end.61

if.then.60:                                       ; preds = %if.end.57
  %47 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %47, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.61:                                        ; preds = %if.end.57
  %48 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds [4 x i32], [4 x i32]* %ku, i32 0, i64 3
  %49 = load i32, i32* %arrayidx62, align 4, !tbaa !5
  %50 = load i32, i32* %kum, align 4, !tbaa !5
  %51 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole63 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %51, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole63, i32 0, i64 3
  %arraydecay65 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx64, i32 0, i32 0
  %52 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c66 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %52, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c66, i32 0, i64 1
  %arrayidx68 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx67, i32 0, i64 0
  %53 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx68, align 8, !tbaa !1
  %54 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c69 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %54, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c69, i32 0, i64 1
  %arrayidx71 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx70, i32 0, i64 1
  %55 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx71, align 8, !tbaa !1
  %call72 = call i32 @fill_wedges(%struct.patch_fill_state_s* %48, i32 %49, i32 %50, %struct.gs_fixed_point_s* %arraydecay65, i32 1, %struct.patch_color_s* %53, %struct.patch_color_s* %55, i32 2) #5
  store i32 %call72, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.61, %if.then.60, %if.then.56, %if.then.37, %if.then
  %56 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %56) #2
  %57 = bitcast i32* %kum to i8*
  call void @llvm.lifetime.end(i64 4, i8* %57) #2
  %58 = bitcast [4 x i32]* %ku to i8*
  call void @llvm.lifetime.end(i64 16, i8* %58) #2
  %59 = load i32, i32* %retval
  ret i32 %59
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @tensor_patch_bbox(%struct.gs_fixed_rect_s* %r, %struct.tensor_patch* %p) #1 {
entry:
  %r.addr = alloca %struct.gs_fixed_rect_s*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %q15 = alloca %struct.gs_fixed_point_s*, align 8
  store %struct.gs_fixed_rect_s* %r, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx, i32 0, i64 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx1, i32 0, i32 0
  %3 = load i32, i32* %x, align 4, !tbaa !109
  %4 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %4, i32 0, i32 1
  %x2 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 0
  store i32 %3, i32* %x2, align 4, !tbaa !136
  %5 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %5, i32 0, i32 0
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p3, i32 0, i32 0
  store i32 %3, i32* %x4, align 4, !tbaa !134
  %6 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole5 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %6, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole5, i32 0, i64 0
  %arrayidx7 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx6, i32 0, i64 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx7, i32 0, i32 1
  %7 = load i32, i32* %y, align 4, !tbaa !110
  %8 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q8 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %8, i32 0, i32 1
  %y9 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q8, i32 0, i32 1
  store i32 %7, i32* %y9, align 4, !tbaa !135
  %9 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %9, i32 0, i32 0
  %y11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p10, i32 0, i32 1
  store i32 %7, i32* %y11, align 4, !tbaa !133
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc.54, %entry
  %10 = load i32, i32* %i, align 4, !tbaa !5
  %cmp = icmp slt i32 %10, 4
  br i1 %cmp, label %for.body, label %for.end.56

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !tbaa !5
  br label %for.cond.12

for.cond.12:                                      ; preds = %for.inc, %for.body
  %11 = load i32, i32* %j, align 4, !tbaa !5
  %cmp13 = icmp slt i32 %11, 4
  br i1 %cmp13, label %for.body.14, label %for.end

for.body.14:                                      ; preds = %for.cond.12
  %12 = bitcast %struct.gs_fixed_point_s** %q15 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #2
  %13 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom = sext i32 %13 to i64
  %14 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom16 = sext i32 %14 to i64
  %15 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole17 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %15, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole17, i32 0, i64 %idxprom16
  %arrayidx19 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx18, i32 0, i64 %idxprom
  store %struct.gs_fixed_point_s* %arrayidx19, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %16 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p20 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %16, i32 0, i32 0
  %x21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p20, i32 0, i32 0
  %17 = load i32, i32* %x21, align 4, !tbaa !134
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i32 0, i32 0
  %19 = load i32, i32* %x22, align 4, !tbaa !109
  %cmp23 = icmp sgt i32 %17, %19
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.14
  %20 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %x24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %20, i32 0, i32 0
  %21 = load i32, i32* %x24, align 4, !tbaa !109
  %22 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p25 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %22, i32 0, i32 0
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p25, i32 0, i32 0
  store i32 %21, i32* %x26, align 4, !tbaa !134
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.14
  %23 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p27 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %23, i32 0, i32 0
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p27, i32 0, i32 1
  %24 = load i32, i32* %y28, align 4, !tbaa !133
  %25 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %y29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %25, i32 0, i32 1
  %26 = load i32, i32* %y29, align 4, !tbaa !110
  %cmp30 = icmp sgt i32 %24, %26
  br i1 %cmp30, label %if.then.31, label %if.end.35

if.then.31:                                       ; preds = %if.end
  %27 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %y32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %27, i32 0, i32 1
  %28 = load i32, i32* %y32, align 4, !tbaa !110
  %29 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %p33 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %29, i32 0, i32 0
  %y34 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p33, i32 0, i32 1
  store i32 %28, i32* %y34, align 4, !tbaa !133
  br label %if.end.35

if.end.35:                                        ; preds = %if.then.31, %if.end
  %30 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q36 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %30, i32 0, i32 1
  %x37 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q36, i32 0, i32 0
  %31 = load i32, i32* %x37, align 4, !tbaa !136
  %32 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %x38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %32, i32 0, i32 0
  %33 = load i32, i32* %x38, align 4, !tbaa !109
  %cmp39 = icmp slt i32 %31, %33
  br i1 %cmp39, label %if.then.40, label %if.end.44

if.then.40:                                       ; preds = %if.end.35
  %34 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %x41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %34, i32 0, i32 0
  %35 = load i32, i32* %x41, align 4, !tbaa !109
  %36 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q42 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %36, i32 0, i32 1
  %x43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q42, i32 0, i32 0
  store i32 %35, i32* %x43, align 4, !tbaa !136
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.40, %if.end.35
  %37 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q45 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %37, i32 0, i32 1
  %y46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q45, i32 0, i32 1
  %38 = load i32, i32* %y46, align 4, !tbaa !135
  %39 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %y47 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %39, i32 0, i32 1
  %40 = load i32, i32* %y47, align 4, !tbaa !110
  %cmp48 = icmp slt i32 %38, %40
  br i1 %cmp48, label %if.then.49, label %if.end.53

if.then.49:                                       ; preds = %if.end.44
  %41 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %q15, align 8, !tbaa !1
  %y50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %41, i32 0, i32 1
  %42 = load i32, i32* %y50, align 4, !tbaa !110
  %43 = load %struct.gs_fixed_rect_s*, %struct.gs_fixed_rect_s** %r.addr, align 8, !tbaa !1
  %q51 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %43, i32 0, i32 1
  %y52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q51, i32 0, i32 1
  store i32 %42, i32* %y52, align 4, !tbaa !135
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.49, %if.end.44
  %44 = bitcast %struct.gs_fixed_point_s** %q15 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %44) #2
  br label %for.inc

for.inc:                                          ; preds = %if.end.53
  %45 = load i32, i32* %j, align 4, !tbaa !5
  %inc = add nsw i32 %45, 1
  store i32 %inc, i32* %j, align 4, !tbaa !5
  br label %for.cond.12

for.end:                                          ; preds = %for.cond.12
  br label %for.inc.54

for.inc.54:                                       ; preds = %for.end
  %46 = load i32, i32* %i, align 4, !tbaa !5
  %inc55 = add nsw i32 %46, 1
  store i32 %inc55, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end.56:                                       ; preds = %for.cond
  %47 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %47) #2
  %48 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %48) #2
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @split_patch(%struct.patch_fill_state_s* %pfs, %struct.tensor_patch* %s0, %struct.tensor_patch* %s1, %struct.tensor_patch* %p, %struct.patch_color_s** %c) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %s0.addr = alloca %struct.tensor_patch*, align 8
  %s1.addr = alloca %struct.tensor_patch*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  %c.addr = alloca %struct.patch_color_s**, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %s0, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %s1, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  store %struct.patch_color_s** %c, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %0 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %0, i64 0
  %1 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c1 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %2, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c1, i32 0, i64 1
  %arrayidx3 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx2, i32 0, i64 0
  store %struct.patch_color_s* %1, %struct.patch_color_s** %arrayidx3, align 8, !tbaa !1
  %3 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %3, i64 1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx4, align 8, !tbaa !1
  %5 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c5 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %5, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c5, i32 0, i64 1
  %arrayidx7 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx6, i32 0, i64 1
  store %struct.patch_color_s* %4, %struct.patch_color_s** %arrayidx7, align 8, !tbaa !1
  %6 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx9 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx8, i32 0, i64 0
  %7 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole10 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %7, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx11, i32 0, i64 0
  %8 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole13 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %8, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole13, i32 0, i64 0
  %arrayidx15 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx14, i32 0, i64 0
  call void @split_curve_s(%struct.gs_fixed_point_s* %arrayidx9, %struct.gs_fixed_point_s* %arrayidx12, %struct.gs_fixed_point_s* %arrayidx15, i32 4) #5
  %9 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole16 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %9, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole16, i32 0, i64 0
  %arrayidx18 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx17, i32 0, i64 1
  %10 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole19 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %10, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole19, i32 0, i64 0
  %arrayidx21 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx20, i32 0, i64 1
  %11 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole22 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %11, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole22, i32 0, i64 0
  %arrayidx24 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx23, i32 0, i64 1
  call void @split_curve_s(%struct.gs_fixed_point_s* %arrayidx18, %struct.gs_fixed_point_s* %arrayidx21, %struct.gs_fixed_point_s* %arrayidx24, i32 4) #5
  %12 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole25 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %12, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole25, i32 0, i64 0
  %arrayidx27 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx26, i32 0, i64 2
  %13 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole28 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %13, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole28, i32 0, i64 0
  %arrayidx30 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx29, i32 0, i64 2
  %14 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole31 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %14, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole31, i32 0, i64 0
  %arrayidx33 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx32, i32 0, i64 2
  call void @split_curve_s(%struct.gs_fixed_point_s* %arrayidx27, %struct.gs_fixed_point_s* %arrayidx30, %struct.gs_fixed_point_s* %arrayidx33, i32 4) #5
  %15 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole34 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %15, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole34, i32 0, i64 0
  %arrayidx36 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx35, i32 0, i64 3
  %16 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole37 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %16, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole37, i32 0, i64 0
  %arrayidx39 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx38, i32 0, i64 3
  %17 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole40 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %17, i32 0, i32 0
  %arrayidx41 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole40, i32 0, i64 0
  %arrayidx42 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx41, i32 0, i64 3
  call void @split_curve_s(%struct.gs_fixed_point_s* %arrayidx36, %struct.gs_fixed_point_s* %arrayidx39, %struct.gs_fixed_point_s* %arrayidx42, i32 4) #5
  %18 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c43 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %18, i32 0, i32 1
  %arrayidx44 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c43, i32 0, i64 0
  %arrayidx45 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx44, i32 0, i64 0
  %19 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx45, align 8, !tbaa !1
  %20 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c46 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %20, i32 0, i32 1
  %arrayidx47 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c46, i32 0, i64 0
  %arrayidx48 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx47, i32 0, i64 0
  store %struct.patch_color_s* %19, %struct.patch_color_s** %arrayidx48, align 8, !tbaa !1
  %21 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c49 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %21, i32 0, i32 1
  %arrayidx50 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c49, i32 0, i64 0
  %arrayidx51 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx50, i32 0, i64 1
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx51, align 8, !tbaa !1
  %23 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c52 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %23, i32 0, i32 1
  %arrayidx53 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c52, i32 0, i64 0
  %arrayidx54 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx53, i32 0, i64 1
  store %struct.patch_color_s* %22, %struct.patch_color_s** %arrayidx54, align 8, !tbaa !1
  %24 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c55 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %24, i32 0, i32 1
  %arrayidx56 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c55, i32 0, i64 1
  %arrayidx57 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx56, i32 0, i64 0
  %25 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx57, align 8, !tbaa !1
  %26 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c58 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %26, i32 0, i32 1
  %arrayidx59 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c58, i32 0, i64 0
  %arrayidx60 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx59, i32 0, i64 0
  store %struct.patch_color_s* %25, %struct.patch_color_s** %arrayidx60, align 8, !tbaa !1
  %27 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c61 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %27, i32 0, i32 1
  %arrayidx62 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c61, i32 0, i64 1
  %arrayidx63 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx62, i32 0, i64 1
  %28 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx63, align 8, !tbaa !1
  %29 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c64 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %29, i32 0, i32 1
  %arrayidx65 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c64, i32 0, i64 0
  %arrayidx66 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx65, i32 0, i64 1
  store %struct.patch_color_s* %28, %struct.patch_color_s** %arrayidx66, align 8, !tbaa !1
  %30 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c67 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %30, i32 0, i32 1
  %arrayidx68 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c67, i32 0, i64 1
  %arrayidx69 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx68, i32 0, i64 0
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx69, align 8, !tbaa !1
  %32 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c70 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %32, i32 0, i32 1
  %arrayidx71 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c70, i32 0, i64 0
  %arrayidx72 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx71, i32 0, i64 0
  %33 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx72, align 8, !tbaa !1
  %34 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c73 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %34, i32 0, i32 1
  %arrayidx74 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c73, i32 0, i64 1
  %arrayidx75 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx74, i32 0, i64 0
  %35 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx75, align 8, !tbaa !1
  %36 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %31, %struct.patch_color_s* %33, %struct.patch_color_s* %35, %struct.patch_fill_state_s* %36, double 5.000000e-01) #5
  %37 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c76 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %37, i32 0, i32 1
  %arrayidx77 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c76, i32 0, i64 1
  %arrayidx78 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx77, i32 0, i64 1
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx78, align 8, !tbaa !1
  %39 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c79 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %39, i32 0, i32 1
  %arrayidx80 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c79, i32 0, i64 0
  %arrayidx81 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx80, i32 0, i64 1
  %40 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx81, align 8, !tbaa !1
  %41 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c82 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %41, i32 0, i32 1
  %arrayidx83 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c82, i32 0, i64 1
  %arrayidx84 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx83, i32 0, i64 1
  %42 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx84, align 8, !tbaa !1
  %43 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %38, %struct.patch_color_s* %40, %struct.patch_color_s* %42, %struct.patch_fill_state_s* %43, double 5.000000e-01) #5
  %44 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c85 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %44, i32 0, i32 1
  %arrayidx86 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c85, i32 0, i64 1
  %arrayidx87 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx86, i32 0, i64 0
  %45 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx87, align 8, !tbaa !1
  %46 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c88 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %46, i32 0, i32 1
  %arrayidx89 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c88, i32 0, i64 1
  %arrayidx90 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx89, i32 0, i64 0
  store %struct.patch_color_s* %45, %struct.patch_color_s** %arrayidx90, align 8, !tbaa !1
  %47 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c91 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %47, i32 0, i32 1
  %arrayidx92 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c91, i32 0, i64 1
  %arrayidx93 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx92, i32 0, i64 1
  %48 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx93, align 8, !tbaa !1
  %49 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c94 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %49, i32 0, i32 1
  %arrayidx95 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c94, i32 0, i64 1
  %arrayidx96 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx95, i32 0, i64 1
  store %struct.patch_color_s* %48, %struct.patch_color_s** %arrayidx96, align 8, !tbaa !1
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_curve_x_small(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %pole, i32 %pole_step, i32 %fixed_flat) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pole_step.addr = alloca i32, align 4
  %fixed_flat.addr = alloca i32, align 4
  %xmin0 = alloca i32, align 4
  %xmin1 = alloca i32, align 4
  %xmin = alloca i32, align 4
  %xmax0 = alloca i32, align 4
  %xmax1 = alloca i32, align 4
  %xmax = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store i32 %pole_step, i32* %pole_step.addr, align 4, !tbaa !5
  store i32 %fixed_flat, i32* %fixed_flat.addr, align 4, !tbaa !5
  %0 = bitcast i32* %xmin0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul = mul nsw i32 0, %1
  %idxprom = sext i32 %mul to i64
  %2 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %2, i64 %idxprom
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %x, align 4, !tbaa !109
  %4 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul1 = mul nsw i32 1, %4
  %idxprom2 = sext i32 %mul1 to i64
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i64 %idxprom2
  %x4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx3, i32 0, i32 0
  %6 = load i32, i32* %x4, align 4, !tbaa !109
  %cmp = icmp slt i32 %3, %6
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul5 = mul nsw i32 0, %7
  %idxprom6 = sext i32 %mul5 to i64
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %8, i64 %idxprom6
  %x8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx7, i32 0, i32 0
  %9 = load i32, i32* %x8, align 4, !tbaa !109
  br label %cond.end

cond.false:                                       ; preds = %entry
  %10 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul9 = mul nsw i32 1, %10
  %idxprom10 = sext i32 %mul9 to i64
  %11 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %11, i64 %idxprom10
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx11, i32 0, i32 0
  %12 = load i32, i32* %x12, align 4, !tbaa !109
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %12, %cond.false ]
  store i32 %cond, i32* %xmin0, align 4, !tbaa !5
  %13 = bitcast i32* %xmin1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  %14 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul13 = mul nsw i32 2, %14
  %idxprom14 = sext i32 %mul13 to i64
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 %idxprom14
  %x16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx15, i32 0, i32 0
  %16 = load i32, i32* %x16, align 4, !tbaa !109
  %17 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul17 = mul nsw i32 3, %17
  %idxprom18 = sext i32 %mul17 to i64
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i64 %idxprom18
  %x20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx19, i32 0, i32 0
  %19 = load i32, i32* %x20, align 4, !tbaa !109
  %cmp21 = icmp slt i32 %16, %19
  br i1 %cmp21, label %cond.true.22, label %cond.false.27

cond.true.22:                                     ; preds = %cond.end
  %20 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul23 = mul nsw i32 2, %20
  %idxprom24 = sext i32 %mul23 to i64
  %21 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %21, i64 %idxprom24
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx25, i32 0, i32 0
  %22 = load i32, i32* %x26, align 4, !tbaa !109
  br label %cond.end.32

cond.false.27:                                    ; preds = %cond.end
  %23 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul28 = mul nsw i32 3, %23
  %idxprom29 = sext i32 %mul28 to i64
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %24, i64 %idxprom29
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx30, i32 0, i32 0
  %25 = load i32, i32* %x31, align 4, !tbaa !109
  br label %cond.end.32

cond.end.32:                                      ; preds = %cond.false.27, %cond.true.22
  %cond33 = phi i32 [ %22, %cond.true.22 ], [ %25, %cond.false.27 ]
  store i32 %cond33, i32* %xmin1, align 4, !tbaa !5
  %26 = bitcast i32* %xmin to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #2
  %27 = load i32, i32* %xmin0, align 4, !tbaa !5
  %28 = load i32, i32* %xmin1, align 4, !tbaa !5
  %cmp34 = icmp slt i32 %27, %28
  br i1 %cmp34, label %cond.true.35, label %cond.false.36

cond.true.35:                                     ; preds = %cond.end.32
  %29 = load i32, i32* %xmin0, align 4, !tbaa !5
  br label %cond.end.37

cond.false.36:                                    ; preds = %cond.end.32
  %30 = load i32, i32* %xmin1, align 4, !tbaa !5
  br label %cond.end.37

cond.end.37:                                      ; preds = %cond.false.36, %cond.true.35
  %cond38 = phi i32 [ %29, %cond.true.35 ], [ %30, %cond.false.36 ]
  store i32 %cond38, i32* %xmin, align 4, !tbaa !5
  %31 = bitcast i32* %xmax0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %31) #2
  %32 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul39 = mul nsw i32 0, %32
  %idxprom40 = sext i32 %mul39 to i64
  %33 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %33, i64 %idxprom40
  %x42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx41, i32 0, i32 0
  %34 = load i32, i32* %x42, align 4, !tbaa !109
  %35 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul43 = mul nsw i32 1, %35
  %idxprom44 = sext i32 %mul43 to i64
  %36 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %36, i64 %idxprom44
  %x46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx45, i32 0, i32 0
  %37 = load i32, i32* %x46, align 4, !tbaa !109
  %cmp47 = icmp sgt i32 %34, %37
  br i1 %cmp47, label %cond.true.48, label %cond.false.53

cond.true.48:                                     ; preds = %cond.end.37
  %38 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul49 = mul nsw i32 0, %38
  %idxprom50 = sext i32 %mul49 to i64
  %39 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %39, i64 %idxprom50
  %x52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx51, i32 0, i32 0
  %40 = load i32, i32* %x52, align 4, !tbaa !109
  br label %cond.end.58

cond.false.53:                                    ; preds = %cond.end.37
  %41 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul54 = mul nsw i32 1, %41
  %idxprom55 = sext i32 %mul54 to i64
  %42 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %42, i64 %idxprom55
  %x57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx56, i32 0, i32 0
  %43 = load i32, i32* %x57, align 4, !tbaa !109
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.53, %cond.true.48
  %cond59 = phi i32 [ %40, %cond.true.48 ], [ %43, %cond.false.53 ]
  store i32 %cond59, i32* %xmax0, align 4, !tbaa !5
  %44 = bitcast i32* %xmax1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #2
  %45 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul60 = mul nsw i32 2, %45
  %idxprom61 = sext i32 %mul60 to i64
  %46 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %46, i64 %idxprom61
  %x63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx62, i32 0, i32 0
  %47 = load i32, i32* %x63, align 4, !tbaa !109
  %48 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul64 = mul nsw i32 3, %48
  %idxprom65 = sext i32 %mul64 to i64
  %49 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %49, i64 %idxprom65
  %x67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx66, i32 0, i32 0
  %50 = load i32, i32* %x67, align 4, !tbaa !109
  %cmp68 = icmp sgt i32 %47, %50
  br i1 %cmp68, label %cond.true.69, label %cond.false.74

cond.true.69:                                     ; preds = %cond.end.58
  %51 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul70 = mul nsw i32 2, %51
  %idxprom71 = sext i32 %mul70 to i64
  %52 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %52, i64 %idxprom71
  %x73 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx72, i32 0, i32 0
  %53 = load i32, i32* %x73, align 4, !tbaa !109
  br label %cond.end.79

cond.false.74:                                    ; preds = %cond.end.58
  %54 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul75 = mul nsw i32 3, %54
  %idxprom76 = sext i32 %mul75 to i64
  %55 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %55, i64 %idxprom76
  %x78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx77, i32 0, i32 0
  %56 = load i32, i32* %x78, align 4, !tbaa !109
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.false.74, %cond.true.69
  %cond80 = phi i32 [ %53, %cond.true.69 ], [ %56, %cond.false.74 ]
  store i32 %cond80, i32* %xmax1, align 4, !tbaa !5
  %57 = bitcast i32* %xmax to i8*
  call void @llvm.lifetime.start(i64 4, i8* %57) #2
  %58 = load i32, i32* %xmax0, align 4, !tbaa !5
  %59 = load i32, i32* %xmax1, align 4, !tbaa !5
  %cmp81 = icmp sgt i32 %58, %59
  br i1 %cmp81, label %cond.true.82, label %cond.false.83

cond.true.82:                                     ; preds = %cond.end.79
  %60 = load i32, i32* %xmax0, align 4, !tbaa !5
  br label %cond.end.84

cond.false.83:                                    ; preds = %cond.end.79
  %61 = load i32, i32* %xmax1, align 4, !tbaa !5
  br label %cond.end.84

cond.end.84:                                      ; preds = %cond.false.83, %cond.true.82
  %cond85 = phi i32 [ %60, %cond.true.82 ], [ %61, %cond.false.83 ]
  store i32 %cond85, i32* %xmax, align 4, !tbaa !5
  %62 = load i32, i32* %xmax, align 4, !tbaa !5
  %63 = load i32, i32* %xmin, align 4, !tbaa !5
  %sub = sub nsw i32 %62, %63
  %64 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %64, i32 0, i32 19
  %65 = load i32, i32* %decomposition_limit, align 4, !tbaa !34
  %cmp86 = icmp sle i32 %sub, %65
  br i1 %cmp86, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.84
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.84
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %66 = bitcast i32* %xmax to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #2
  %67 = bitcast i32* %xmax1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast i32* %xmax0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast i32* %xmin to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #2
  %70 = bitcast i32* %xmin1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = bitcast i32* %xmin0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = load i32, i32* %retval
  ret i32 %72
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_curve_y_small(%struct.patch_fill_state_s* %pfs, %struct.gs_fixed_point_s* %pole, i32 %pole_step, i32 %fixed_flat) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %pole.addr = alloca %struct.gs_fixed_point_s*, align 8
  %pole_step.addr = alloca i32, align 4
  %fixed_flat.addr = alloca i32, align 4
  %ymin0 = alloca i32, align 4
  %ymin1 = alloca i32, align 4
  %ymin = alloca i32, align 4
  %ymax0 = alloca i32, align 4
  %ymax1 = alloca i32, align 4
  %ymax = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.gs_fixed_point_s* %pole, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  store i32 %pole_step, i32* %pole_step.addr, align 4, !tbaa !5
  store i32 %fixed_flat, i32* %fixed_flat.addr, align 4, !tbaa !5
  %0 = bitcast i32* %ymin0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul = mul nsw i32 0, %1
  %idxprom = sext i32 %mul to i64
  %2 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %2, i64 %idxprom
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx, i32 0, i32 1
  %3 = load i32, i32* %y, align 4, !tbaa !110
  %4 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul1 = mul nsw i32 1, %4
  %idxprom2 = sext i32 %mul1 to i64
  %5 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %5, i64 %idxprom2
  %y4 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx3, i32 0, i32 1
  %6 = load i32, i32* %y4, align 4, !tbaa !110
  %cmp = icmp slt i32 %3, %6
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul5 = mul nsw i32 0, %7
  %idxprom6 = sext i32 %mul5 to i64
  %8 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx7 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %8, i64 %idxprom6
  %y8 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx7, i32 0, i32 1
  %9 = load i32, i32* %y8, align 4, !tbaa !110
  br label %cond.end

cond.false:                                       ; preds = %entry
  %10 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul9 = mul nsw i32 1, %10
  %idxprom10 = sext i32 %mul9 to i64
  %11 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %11, i64 %idxprom10
  %y12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx11, i32 0, i32 1
  %12 = load i32, i32* %y12, align 4, !tbaa !110
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %12, %cond.false ]
  store i32 %cond, i32* %ymin0, align 4, !tbaa !5
  %13 = bitcast i32* %ymin1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #2
  %14 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul13 = mul nsw i32 2, %14
  %idxprom14 = sext i32 %mul13 to i64
  %15 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %15, i64 %idxprom14
  %y16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx15, i32 0, i32 1
  %16 = load i32, i32* %y16, align 4, !tbaa !110
  %17 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul17 = mul nsw i32 3, %17
  %idxprom18 = sext i32 %mul17 to i64
  %18 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %18, i64 %idxprom18
  %y20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx19, i32 0, i32 1
  %19 = load i32, i32* %y20, align 4, !tbaa !110
  %cmp21 = icmp slt i32 %16, %19
  br i1 %cmp21, label %cond.true.22, label %cond.false.27

cond.true.22:                                     ; preds = %cond.end
  %20 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul23 = mul nsw i32 2, %20
  %idxprom24 = sext i32 %mul23 to i64
  %21 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %21, i64 %idxprom24
  %y26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx25, i32 0, i32 1
  %22 = load i32, i32* %y26, align 4, !tbaa !110
  br label %cond.end.32

cond.false.27:                                    ; preds = %cond.end
  %23 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul28 = mul nsw i32 3, %23
  %idxprom29 = sext i32 %mul28 to i64
  %24 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %24, i64 %idxprom29
  %y31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx30, i32 0, i32 1
  %25 = load i32, i32* %y31, align 4, !tbaa !110
  br label %cond.end.32

cond.end.32:                                      ; preds = %cond.false.27, %cond.true.22
  %cond33 = phi i32 [ %22, %cond.true.22 ], [ %25, %cond.false.27 ]
  store i32 %cond33, i32* %ymin1, align 4, !tbaa !5
  %26 = bitcast i32* %ymin to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #2
  %27 = load i32, i32* %ymin0, align 4, !tbaa !5
  %28 = load i32, i32* %ymin1, align 4, !tbaa !5
  %cmp34 = icmp slt i32 %27, %28
  br i1 %cmp34, label %cond.true.35, label %cond.false.36

cond.true.35:                                     ; preds = %cond.end.32
  %29 = load i32, i32* %ymin0, align 4, !tbaa !5
  br label %cond.end.37

cond.false.36:                                    ; preds = %cond.end.32
  %30 = load i32, i32* %ymin1, align 4, !tbaa !5
  br label %cond.end.37

cond.end.37:                                      ; preds = %cond.false.36, %cond.true.35
  %cond38 = phi i32 [ %29, %cond.true.35 ], [ %30, %cond.false.36 ]
  store i32 %cond38, i32* %ymin, align 4, !tbaa !5
  %31 = bitcast i32* %ymax0 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %31) #2
  %32 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul39 = mul nsw i32 0, %32
  %idxprom40 = sext i32 %mul39 to i64
  %33 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %33, i64 %idxprom40
  %y42 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx41, i32 0, i32 1
  %34 = load i32, i32* %y42, align 4, !tbaa !110
  %35 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul43 = mul nsw i32 1, %35
  %idxprom44 = sext i32 %mul43 to i64
  %36 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx45 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %36, i64 %idxprom44
  %y46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx45, i32 0, i32 1
  %37 = load i32, i32* %y46, align 4, !tbaa !110
  %cmp47 = icmp sgt i32 %34, %37
  br i1 %cmp47, label %cond.true.48, label %cond.false.53

cond.true.48:                                     ; preds = %cond.end.37
  %38 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul49 = mul nsw i32 0, %38
  %idxprom50 = sext i32 %mul49 to i64
  %39 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %39, i64 %idxprom50
  %y52 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx51, i32 0, i32 1
  %40 = load i32, i32* %y52, align 4, !tbaa !110
  br label %cond.end.58

cond.false.53:                                    ; preds = %cond.end.37
  %41 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul54 = mul nsw i32 1, %41
  %idxprom55 = sext i32 %mul54 to i64
  %42 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %42, i64 %idxprom55
  %y57 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx56, i32 0, i32 1
  %43 = load i32, i32* %y57, align 4, !tbaa !110
  br label %cond.end.58

cond.end.58:                                      ; preds = %cond.false.53, %cond.true.48
  %cond59 = phi i32 [ %40, %cond.true.48 ], [ %43, %cond.false.53 ]
  store i32 %cond59, i32* %ymax0, align 4, !tbaa !5
  %44 = bitcast i32* %ymax1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #2
  %45 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul60 = mul nsw i32 2, %45
  %idxprom61 = sext i32 %mul60 to i64
  %46 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %46, i64 %idxprom61
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx62, i32 0, i32 1
  %47 = load i32, i32* %y63, align 4, !tbaa !110
  %48 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul64 = mul nsw i32 3, %48
  %idxprom65 = sext i32 %mul64 to i64
  %49 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %49, i64 %idxprom65
  %y67 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx66, i32 0, i32 1
  %50 = load i32, i32* %y67, align 4, !tbaa !110
  %cmp68 = icmp sgt i32 %47, %50
  br i1 %cmp68, label %cond.true.69, label %cond.false.74

cond.true.69:                                     ; preds = %cond.end.58
  %51 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul70 = mul nsw i32 2, %51
  %idxprom71 = sext i32 %mul70 to i64
  %52 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx72 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %52, i64 %idxprom71
  %y73 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx72, i32 0, i32 1
  %53 = load i32, i32* %y73, align 4, !tbaa !110
  br label %cond.end.79

cond.false.74:                                    ; preds = %cond.end.58
  %54 = load i32, i32* %pole_step.addr, align 4, !tbaa !5
  %mul75 = mul nsw i32 3, %54
  %idxprom76 = sext i32 %mul75 to i64
  %55 = load %struct.gs_fixed_point_s*, %struct.gs_fixed_point_s** %pole.addr, align 8, !tbaa !1
  %arrayidx77 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %55, i64 %idxprom76
  %y78 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %arrayidx77, i32 0, i32 1
  %56 = load i32, i32* %y78, align 4, !tbaa !110
  br label %cond.end.79

cond.end.79:                                      ; preds = %cond.false.74, %cond.true.69
  %cond80 = phi i32 [ %53, %cond.true.69 ], [ %56, %cond.false.74 ]
  store i32 %cond80, i32* %ymax1, align 4, !tbaa !5
  %57 = bitcast i32* %ymax to i8*
  call void @llvm.lifetime.start(i64 4, i8* %57) #2
  %58 = load i32, i32* %ymax0, align 4, !tbaa !5
  %59 = load i32, i32* %ymax1, align 4, !tbaa !5
  %cmp81 = icmp sgt i32 %58, %59
  br i1 %cmp81, label %cond.true.82, label %cond.false.83

cond.true.82:                                     ; preds = %cond.end.79
  %60 = load i32, i32* %ymax0, align 4, !tbaa !5
  br label %cond.end.84

cond.false.83:                                    ; preds = %cond.end.79
  %61 = load i32, i32* %ymax1, align 4, !tbaa !5
  br label %cond.end.84

cond.end.84:                                      ; preds = %cond.false.83, %cond.true.82
  %cond85 = phi i32 [ %60, %cond.true.82 ], [ %61, %cond.false.83 ]
  store i32 %cond85, i32* %ymax, align 4, !tbaa !5
  %62 = load i32, i32* %ymax, align 4, !tbaa !5
  %63 = load i32, i32* %ymin, align 4, !tbaa !5
  %sub = sub nsw i32 %62, %63
  %64 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %64, i32 0, i32 19
  %65 = load i32, i32* %decomposition_limit, align 4, !tbaa !34
  %cmp86 = icmp sle i32 %sub, %65
  br i1 %cmp86, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.84
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %cond.end.84
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %66 = bitcast i32* %ymax to i8*
  call void @llvm.lifetime.end(i64 4, i8* %66) #2
  %67 = bitcast i32* %ymax1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast i32* %ymax0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %68) #2
  %69 = bitcast i32* %ymin to i8*
  call void @llvm.lifetime.end(i64 4, i8* %69) #2
  %70 = bitcast i32* %ymin1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %70) #2
  %71 = bitcast i32* %ymin0 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %71) #2
  %72 = load i32, i32* %retval
  ret i32 %72
}

; Function Attrs: nounwind uwtable
define internal i32 @decompose_stripe(%struct.patch_fill_state_s* %pfs, %struct.tensor_patch* %p, i32 %ku) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  %ku.addr = alloca i32, align 4
  %s0 = alloca %struct.tensor_patch, align 8
  %s1 = alloca %struct.tensor_patch, align 8
  %c = alloca [2 x %struct.patch_color_s*], align 16
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %save_inside = alloca i32, align 4
  %r = alloca %struct.gs_fixed_rect_s, align 4
  %r1 = alloca %struct.gs_fixed_rect_s, align 4
  %cleanup.dest.slot = alloca i32
  %q106 = alloca %struct.quadrangle_patch, align 8
  %qq = alloca [2 x [2 x %struct.shading_vertex_s]], align 16
  %l = alloca [4 x %struct.wedge_vertex_list_t], align 16
  %code107 = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  store i32 %ku, i32* %ku.addr, align 4, !tbaa !5
  %0 = load i32, i32* %ku.addr, align 4, !tbaa !5
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.tensor_patch* %s0 to i8*
  call void @llvm.lifetime.start(i64 160, i8* %1) #2
  %2 = bitcast %struct.tensor_patch* %s1 to i8*
  call void @llvm.lifetime.start(i64 160, i8* %2) #2
  %3 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 16, i8* %3) #2
  %4 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #2
  %5 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %7, i32 0, i32 26
  %8 = load i32, i32* %inside, align 4, !tbaa !32
  store i32 %8, i32* %save_inside, align 4, !tbaa !5
  %9 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside1 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %9, i32 0, i32 26
  %10 = load i32, i32* %inside1, align 4, !tbaa !32
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.end.88, label %if.then.2

if.then.2:                                        ; preds = %if.then
  %11 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.start(i64 16, i8* %11) #2
  %12 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %12) #2
  %13 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  call void @tensor_patch_bbox(%struct.gs_fixed_rect_s* %r, %struct.tensor_patch* %13) #5
  %14 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  %15 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 4, i1 false), !tbaa.struct !137
  br label %do.body

do.body:                                          ; preds = %if.then.2
  %16 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %16, i32 0, i32 8
  %p3 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p3, i32 0, i32 0
  %17 = load i32, i32* %x, align 4, !tbaa !138
  %p4 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x5 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p4, i32 0, i32 0
  %18 = load i32, i32* %x5, align 4, !tbaa !134
  %cmp6 = icmp sgt i32 %17, %18
  br i1 %cmp6, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %do.body
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect8 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %19, i32 0, i32 8
  %p9 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect8, i32 0, i32 0
  %x10 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p9, i32 0, i32 0
  %20 = load i32, i32* %x10, align 4, !tbaa !138
  %p11 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x12 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p11, i32 0, i32 0
  store i32 %20, i32* %x12, align 4, !tbaa !134
  br label %if.end

if.end:                                           ; preds = %if.then.7, %do.body
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect13 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %21, i32 0, i32 8
  %q = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect13, i32 0, i32 1
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q, i32 0, i32 0
  %22 = load i32, i32* %x14, align 4, !tbaa !139
  %q15 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x16 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q15, i32 0, i32 0
  %23 = load i32, i32* %x16, align 4, !tbaa !136
  %cmp17 = icmp slt i32 %22, %23
  br i1 %cmp17, label %if.then.18, label %if.end.24

if.then.18:                                       ; preds = %if.end
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect19 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %24, i32 0, i32 8
  %q20 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect19, i32 0, i32 1
  %x21 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q20, i32 0, i32 0
  %25 = load i32, i32* %x21, align 4, !tbaa !139
  %q22 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x23 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q22, i32 0, i32 0
  store i32 %25, i32* %x23, align 4, !tbaa !136
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.18, %if.end
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect25 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %26, i32 0, i32 8
  %p26 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect25, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p26, i32 0, i32 1
  %27 = load i32, i32* %y, align 4, !tbaa !140
  %p27 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y28 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p27, i32 0, i32 1
  %28 = load i32, i32* %y28, align 4, !tbaa !133
  %cmp29 = icmp sgt i32 %27, %28
  br i1 %cmp29, label %if.then.30, label %if.end.36

if.then.30:                                       ; preds = %if.end.24
  %29 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect31 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %29, i32 0, i32 8
  %p32 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect31, i32 0, i32 0
  %y33 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p32, i32 0, i32 1
  %30 = load i32, i32* %y33, align 4, !tbaa !140
  %p34 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y35 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p34, i32 0, i32 1
  store i32 %30, i32* %y35, align 4, !tbaa !133
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.30, %if.end.24
  %31 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect37 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %31, i32 0, i32 8
  %q38 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect37, i32 0, i32 1
  %y39 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q38, i32 0, i32 1
  %32 = load i32, i32* %y39, align 4, !tbaa !141
  %q40 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q40, i32 0, i32 1
  %33 = load i32, i32* %y41, align 4, !tbaa !135
  %cmp42 = icmp slt i32 %32, %33
  br i1 %cmp42, label %if.then.43, label %if.end.49

if.then.43:                                       ; preds = %if.end.36
  %34 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect44 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %34, i32 0, i32 8
  %q45 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect44, i32 0, i32 1
  %y46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q45, i32 0, i32 1
  %35 = load i32, i32* %y46, align 4, !tbaa !141
  %q47 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q47, i32 0, i32 1
  store i32 %35, i32* %y48, align 4, !tbaa !135
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.43, %if.end.36
  br label %do.cond

do.cond:                                          ; preds = %if.end.49
  br label %do.end

do.end:                                           ; preds = %do.cond
  %q50 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q50, i32 0, i32 0
  %36 = load i32, i32* %x51, align 4, !tbaa !136
  %p52 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x53 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p52, i32 0, i32 0
  %37 = load i32, i32* %x53, align 4, !tbaa !134
  %cmp54 = icmp sle i32 %36, %37
  br i1 %cmp54, label %if.then.60, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %q55 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q55, i32 0, i32 1
  %38 = load i32, i32* %y56, align 4, !tbaa !135
  %p57 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y58 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p57, i32 0, i32 1
  %39 = load i32, i32* %y58, align 4, !tbaa !133
  %cmp59 = icmp sle i32 %38, %39
  br i1 %cmp59, label %if.then.60, label %if.end.61

if.then.60:                                       ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.61:                                        ; preds = %lor.lhs.false
  %p62 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %x63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p62, i32 0, i32 0
  %40 = load i32, i32* %x63, align 4, !tbaa !134
  %p64 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x65 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p64, i32 0, i32 0
  %41 = load i32, i32* %x65, align 4, !tbaa !134
  %cmp66 = icmp eq i32 %40, %41
  br i1 %cmp66, label %land.lhs.true, label %if.end.86

land.lhs.true:                                    ; preds = %if.end.61
  %p67 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %y68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p67, i32 0, i32 1
  %42 = load i32, i32* %y68, align 4, !tbaa !133
  %p69 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y70 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p69, i32 0, i32 1
  %43 = load i32, i32* %y70, align 4, !tbaa !133
  %cmp71 = icmp eq i32 %42, %43
  br i1 %cmp71, label %land.lhs.true.72, label %if.end.86

land.lhs.true.72:                                 ; preds = %land.lhs.true
  %q73 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %x74 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q73, i32 0, i32 0
  %44 = load i32, i32* %x74, align 4, !tbaa !136
  %q75 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x76 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q75, i32 0, i32 0
  %45 = load i32, i32* %x76, align 4, !tbaa !136
  %cmp77 = icmp eq i32 %44, %45
  br i1 %cmp77, label %land.lhs.true.78, label %if.end.86

land.lhs.true.78:                                 ; preds = %land.lhs.true.72
  %q79 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %y80 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q79, i32 0, i32 1
  %46 = load i32, i32* %y80, align 4, !tbaa !135
  %q81 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y82 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q81, i32 0, i32 1
  %47 = load i32, i32* %y82, align 4, !tbaa !135
  %cmp83 = icmp eq i32 %46, %47
  br i1 %cmp83, label %if.then.84, label %if.end.86

if.then.84:                                       ; preds = %land.lhs.true.78
  %48 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside85 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %48, i32 0, i32 26
  store i32 1, i32* %inside85, align 4, !tbaa !32
  br label %if.end.86

if.end.86:                                        ; preds = %if.then.84, %land.lhs.true.78, %land.lhs.true.72, %land.lhs.true, %if.end.61
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.86, %if.then.60
  %49 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %49) #2
  %50 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.end(i64 16, i8* %50) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.100 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.88

if.end.88:                                        ; preds = %cleanup.cont, %if.then
  %51 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %51, %struct.patch_color_s** %arraydecay, i32 2) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %52 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp89 = icmp eq i8* %52, null
  br i1 %cmp89, label %if.then.90, label %if.end.91

if.then.90:                                       ; preds = %if.end.88
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.100

if.end.91:                                        ; preds = %if.end.88
  %53 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %54 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %arraydecay92 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i32 0
  call void @split_stripe(%struct.patch_fill_state_s* %53, %struct.tensor_patch* %s0, %struct.tensor_patch* %s1, %struct.tensor_patch* %54, %struct.patch_color_s** %arraydecay92) #5
  %55 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %56 = load i32, i32* %ku.addr, align 4, !tbaa !5
  %div = sdiv i32 %56, 2
  %call93 = call i32 @decompose_stripe(%struct.patch_fill_state_s* %55, %struct.tensor_patch* %s0, i32 %div) #5
  store i32 %call93, i32* %code, align 4, !tbaa !5
  %57 = load i32, i32* %code, align 4, !tbaa !5
  %cmp94 = icmp sge i32 %57, 0
  br i1 %cmp94, label %if.then.95, label %if.end.98

if.then.95:                                       ; preds = %if.end.91
  %58 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %59 = load i32, i32* %ku.addr, align 4, !tbaa !5
  %div96 = sdiv i32 %59, 2
  %call97 = call i32 @decompose_stripe(%struct.patch_fill_state_s* %58, %struct.tensor_patch* %s1, i32 %div96) #5
  store i32 %call97, i32* %code, align 4, !tbaa !5
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.95, %if.end.91
  %60 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %61 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %60, i8* %61, i32 2) #5
  %62 = load i32, i32* %save_inside, align 4, !tbaa !5
  %63 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside99 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %63, i32 0, i32 26
  store i32 %62, i32* %inside99, align 4, !tbaa !32
  %64 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %64, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.100

cleanup.100:                                      ; preds = %if.end.98, %if.then.90, %cleanup
  %65 = bitcast i32* %save_inside to i8*
  call void @llvm.lifetime.end(i64 4, i8* %65) #2
  %66 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %66) #2
  %67 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %67) #2
  %68 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 16, i8* %68) #2
  %69 = bitcast %struct.tensor_patch* %s1 to i8*
  call void @llvm.lifetime.end(i64 160, i8* %69) #2
  %70 = bitcast %struct.tensor_patch* %s0 to i8*
  call void @llvm.lifetime.end(i64 160, i8* %70) #2
  br label %return

if.else:                                          ; preds = %entry
  %71 = bitcast %struct.quadrangle_patch* %q106 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %71) #2
  %72 = bitcast [2 x [2 x %struct.shading_vertex_s]]* %qq to i8*
  call void @llvm.lifetime.start(i64 64, i8* %72) #2
  %73 = bitcast [4 x %struct.wedge_vertex_list_t]* %l to i8*
  call void @llvm.lifetime.start(i64 96, i8* %73) #2
  %74 = bitcast i32* %code107 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %74) #2
  %arraydecay108 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i32 0
  call void @init_wedge_vertex_list(%struct.wedge_vertex_list_t* %arraydecay108, i32 4) #5
  %75 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %arraydecay109 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s]], [2 x [2 x %struct.shading_vertex_s]]* %qq, i32 0, i32 0
  %arraydecay110 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i32 0
  call void @make_quadrangle(%struct.tensor_patch* %75, [2 x %struct.shading_vertex_s]* %arraydecay109, %struct.wedge_vertex_list_t* %arraydecay110, %struct.quadrangle_patch* %q106) #5
  %76 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call111 = call i32 @fill_quadrangle(%struct.patch_fill_state_s* %76, %struct.quadrangle_patch* %q106, i32 1) #5
  store i32 %call111, i32* %code107, align 4, !tbaa !5
  %77 = load i32, i32* %code107, align 4, !tbaa !5
  %cmp112 = icmp slt i32 %77, 0
  br i1 %cmp112, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %if.else
  %78 = load i32, i32* %code107, align 4, !tbaa !5
  store i32 %78, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166

if.end.114:                                       ; preds = %if.else
  %79 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 0
  %p115 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx116 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p115, i32 0, i64 0
  %arrayidx117 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx116, i32 0, i64 0
  %80 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx117, align 8, !tbaa !1
  %c118 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %80, i32 0, i32 1
  %81 = load %struct.patch_color_s*, %struct.patch_color_s** %c118, align 8, !tbaa !150
  %p119 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx120 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p119, i32 0, i64 0
  %arrayidx121 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx120, i32 0, i64 1
  %82 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx121, align 8, !tbaa !1
  %c122 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %82, i32 0, i32 1
  %83 = load %struct.patch_color_s*, %struct.patch_color_s** %c122, align 8, !tbaa !150
  %call123 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %79, %struct.wedge_vertex_list_t* %arrayidx, %struct.patch_color_s* %81, %struct.patch_color_s* %83) #5
  store i32 %call123, i32* %code107, align 4, !tbaa !5
  %84 = load i32, i32* %code107, align 4, !tbaa !5
  %cmp124 = icmp slt i32 %84, 0
  br i1 %cmp124, label %if.then.125, label %if.end.126

if.then.125:                                      ; preds = %if.end.114
  %85 = load i32, i32* %code107, align 4, !tbaa !5
  store i32 %85, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166

if.end.126:                                       ; preds = %if.end.114
  %86 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx127 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 1
  %p128 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx129 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p128, i32 0, i64 0
  %arrayidx130 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx129, i32 0, i64 1
  %87 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx130, align 8, !tbaa !1
  %c131 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %87, i32 0, i32 1
  %88 = load %struct.patch_color_s*, %struct.patch_color_s** %c131, align 8, !tbaa !150
  %p132 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx133 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p132, i32 0, i64 1
  %arrayidx134 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx133, i32 0, i64 1
  %89 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx134, align 8, !tbaa !1
  %c135 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %89, i32 0, i32 1
  %90 = load %struct.patch_color_s*, %struct.patch_color_s** %c135, align 8, !tbaa !150
  %call136 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %86, %struct.wedge_vertex_list_t* %arrayidx127, %struct.patch_color_s* %88, %struct.patch_color_s* %90) #5
  store i32 %call136, i32* %code107, align 4, !tbaa !5
  %91 = load i32, i32* %code107, align 4, !tbaa !5
  %cmp137 = icmp slt i32 %91, 0
  br i1 %cmp137, label %if.then.138, label %if.end.139

if.then.138:                                      ; preds = %if.end.126
  %92 = load i32, i32* %code107, align 4, !tbaa !5
  store i32 %92, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166

if.end.139:                                       ; preds = %if.end.126
  %93 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx140 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 2
  %p141 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx142 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p141, i32 0, i64 1
  %arrayidx143 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx142, i32 0, i64 1
  %94 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx143, align 8, !tbaa !1
  %c144 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %94, i32 0, i32 1
  %95 = load %struct.patch_color_s*, %struct.patch_color_s** %c144, align 8, !tbaa !150
  %p145 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx146 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p145, i32 0, i64 1
  %arrayidx147 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx146, i32 0, i64 0
  %96 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx147, align 8, !tbaa !1
  %c148 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %96, i32 0, i32 1
  %97 = load %struct.patch_color_s*, %struct.patch_color_s** %c148, align 8, !tbaa !150
  %call149 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %93, %struct.wedge_vertex_list_t* %arrayidx140, %struct.patch_color_s* %95, %struct.patch_color_s* %97) #5
  store i32 %call149, i32* %code107, align 4, !tbaa !5
  %98 = load i32, i32* %code107, align 4, !tbaa !5
  %cmp150 = icmp slt i32 %98, 0
  br i1 %cmp150, label %if.then.151, label %if.end.152

if.then.151:                                      ; preds = %if.end.139
  %99 = load i32, i32* %code107, align 4, !tbaa !5
  store i32 %99, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166

if.end.152:                                       ; preds = %if.end.139
  %100 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx153 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 3
  %p154 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx155 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p154, i32 0, i64 1
  %arrayidx156 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx155, i32 0, i64 0
  %101 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx156, align 8, !tbaa !1
  %c157 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %101, i32 0, i32 1
  %102 = load %struct.patch_color_s*, %struct.patch_color_s** %c157, align 8, !tbaa !150
  %p158 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %q106, i32 0, i32 0
  %arrayidx159 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p158, i32 0, i64 0
  %arrayidx160 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx159, i32 0, i64 1
  %103 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx160, align 8, !tbaa !1
  %c161 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %103, i32 0, i32 1
  %104 = load %struct.patch_color_s*, %struct.patch_color_s** %c161, align 8, !tbaa !150
  %call162 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %100, %struct.wedge_vertex_list_t* %arrayidx153, %struct.patch_color_s* %102, %struct.patch_color_s* %104) #5
  store i32 %call162, i32* %code107, align 4, !tbaa !5
  %105 = load i32, i32* %code107, align 4, !tbaa !5
  %cmp163 = icmp slt i32 %105, 0
  br i1 %cmp163, label %if.then.164, label %if.end.165

if.then.164:                                      ; preds = %if.end.152
  %106 = load i32, i32* %code107, align 4, !tbaa !5
  store i32 %106, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166

if.end.165:                                       ; preds = %if.end.152
  %107 = load i32, i32* %code107, align 4, !tbaa !5
  store i32 %107, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.166

cleanup.166:                                      ; preds = %if.end.165, %if.then.164, %if.then.151, %if.then.138, %if.then.125, %if.then.113
  %108 = bitcast i32* %code107 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %108) #2
  %109 = bitcast [4 x %struct.wedge_vertex_list_t]* %l to i8*
  call void @llvm.lifetime.end(i64 96, i8* %109) #2
  %110 = bitcast [2 x [2 x %struct.shading_vertex_s]]* %qq to i8*
  call void @llvm.lifetime.end(i64 64, i8* %110) #2
  %111 = bitcast %struct.quadrangle_patch* %q106 to i8*
  call void @llvm.lifetime.end(i64 64, i8* %111) #2
  br label %return

return:                                           ; preds = %cleanup.166, %cleanup.100
  %112 = load i32, i32* %retval
  ret i32 %112
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @split_stripe(%struct.patch_fill_state_s* %pfs, %struct.tensor_patch* %s0, %struct.tensor_patch* %s1, %struct.tensor_patch* %p, %struct.patch_color_s** %c) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %s0.addr = alloca %struct.tensor_patch*, align 8
  %s1.addr = alloca %struct.tensor_patch*, align 8
  %p.addr = alloca %struct.tensor_patch*, align 8
  %c.addr = alloca %struct.patch_color_s**, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %s0, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %s1, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  store %struct.patch_color_s** %c, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %0 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %0, i64 0
  %1 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c1 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %2, i32 0, i32 1
  %arrayidx2 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c1, i32 0, i64 0
  %arrayidx3 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx2, i32 0, i64 1
  store %struct.patch_color_s* %1, %struct.patch_color_s** %arrayidx3, align 8, !tbaa !1
  %3 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %3, i64 1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx4, align 8, !tbaa !1
  %5 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c5 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %5, i32 0, i32 1
  %arrayidx6 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c5, i32 0, i64 1
  %arrayidx7 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx6, i32 0, i64 1
  store %struct.patch_color_s* %4, %struct.patch_color_s** %arrayidx7, align 8, !tbaa !1
  %6 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arraydecay = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx8, i32 0, i32 0
  %7 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole9 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %7, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole9, i32 0, i64 0
  %arraydecay11 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx10, i32 0, i32 0
  %8 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole12 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %8, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole12, i32 0, i64 0
  %arraydecay14 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx13, i32 0, i32 0
  call void @split_curve_s(%struct.gs_fixed_point_s* %arraydecay, %struct.gs_fixed_point_s* %arraydecay11, %struct.gs_fixed_point_s* %arraydecay14, i32 1) #5
  %9 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole15 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %9, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole15, i32 0, i64 1
  %arraydecay17 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx16, i32 0, i32 0
  %10 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole18 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %10, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole18, i32 0, i64 1
  %arraydecay20 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx19, i32 0, i32 0
  %11 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole21 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %11, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole21, i32 0, i64 1
  %arraydecay23 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx22, i32 0, i32 0
  call void @split_curve_s(%struct.gs_fixed_point_s* %arraydecay17, %struct.gs_fixed_point_s* %arraydecay20, %struct.gs_fixed_point_s* %arraydecay23, i32 1) #5
  %12 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole24 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %12, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole24, i32 0, i64 2
  %arraydecay26 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx25, i32 0, i32 0
  %13 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole27 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %13, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole27, i32 0, i64 2
  %arraydecay29 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx28, i32 0, i32 0
  %14 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole30 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %14, i32 0, i32 0
  %arrayidx31 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole30, i32 0, i64 2
  %arraydecay32 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx31, i32 0, i32 0
  call void @split_curve_s(%struct.gs_fixed_point_s* %arraydecay26, %struct.gs_fixed_point_s* %arraydecay29, %struct.gs_fixed_point_s* %arraydecay32, i32 1) #5
  %15 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole33 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %15, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole33, i32 0, i64 3
  %arraydecay35 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx34, i32 0, i32 0
  %16 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %pole36 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %16, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole36, i32 0, i64 3
  %arraydecay38 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx37, i32 0, i32 0
  %17 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %pole39 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %17, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole39, i32 0, i64 3
  %arraydecay41 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx40, i32 0, i32 0
  call void @split_curve_s(%struct.gs_fixed_point_s* %arraydecay35, %struct.gs_fixed_point_s* %arraydecay38, %struct.gs_fixed_point_s* %arraydecay41, i32 1) #5
  %18 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c42 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %18, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c42, i32 0, i64 0
  %arrayidx44 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx43, i32 0, i64 0
  %19 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx44, align 8, !tbaa !1
  %20 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c45 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %20, i32 0, i32 1
  %arrayidx46 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c45, i32 0, i64 0
  %arrayidx47 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx46, i32 0, i64 0
  store %struct.patch_color_s* %19, %struct.patch_color_s** %arrayidx47, align 8, !tbaa !1
  %21 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c48 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %21, i32 0, i32 1
  %arrayidx49 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c48, i32 0, i64 1
  %arrayidx50 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx49, i32 0, i64 0
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx50, align 8, !tbaa !1
  %23 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c51 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %23, i32 0, i32 1
  %arrayidx52 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c51, i32 0, i64 1
  %arrayidx53 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx52, i32 0, i64 0
  store %struct.patch_color_s* %22, %struct.patch_color_s** %arrayidx53, align 8, !tbaa !1
  %24 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c54 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %24, i32 0, i32 1
  %arrayidx55 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c54, i32 0, i64 0
  %arrayidx56 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx55, i32 0, i64 1
  %25 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx56, align 8, !tbaa !1
  %26 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c57 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %26, i32 0, i32 1
  %arrayidx58 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c57, i32 0, i64 0
  %arrayidx59 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx58, i32 0, i64 0
  store %struct.patch_color_s* %25, %struct.patch_color_s** %arrayidx59, align 8, !tbaa !1
  %27 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c60 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %27, i32 0, i32 1
  %arrayidx61 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c60, i32 0, i64 1
  %arrayidx62 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx61, i32 0, i64 1
  %28 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx62, align 8, !tbaa !1
  %29 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c63 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %29, i32 0, i32 1
  %arrayidx64 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c63, i32 0, i64 1
  %arrayidx65 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx64, i32 0, i64 0
  store %struct.patch_color_s* %28, %struct.patch_color_s** %arrayidx65, align 8, !tbaa !1
  %30 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c66 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %30, i32 0, i32 1
  %arrayidx67 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c66, i32 0, i64 0
  %arrayidx68 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx67, i32 0, i64 1
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx68, align 8, !tbaa !1
  %32 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c69 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %32, i32 0, i32 1
  %arrayidx70 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c69, i32 0, i64 0
  %arrayidx71 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx70, i32 0, i64 0
  %33 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx71, align 8, !tbaa !1
  %34 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c72 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %34, i32 0, i32 1
  %arrayidx73 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c72, i32 0, i64 0
  %arrayidx74 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx73, i32 0, i64 1
  %35 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx74, align 8, !tbaa !1
  %36 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %31, %struct.patch_color_s* %33, %struct.patch_color_s* %35, %struct.patch_fill_state_s* %36, double 5.000000e-01) #5
  %37 = load %struct.tensor_patch*, %struct.tensor_patch** %s0.addr, align 8, !tbaa !1
  %c75 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %37, i32 0, i32 1
  %arrayidx76 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c75, i32 0, i64 1
  %arrayidx77 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx76, i32 0, i64 1
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx77, align 8, !tbaa !1
  %39 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c78 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %39, i32 0, i32 1
  %arrayidx79 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c78, i32 0, i64 1
  %arrayidx80 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx79, i32 0, i64 0
  %40 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx80, align 8, !tbaa !1
  %41 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c81 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %41, i32 0, i32 1
  %arrayidx82 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c81, i32 0, i64 1
  %arrayidx83 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx82, i32 0, i64 1
  %42 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx83, align 8, !tbaa !1
  %43 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %38, %struct.patch_color_s* %40, %struct.patch_color_s* %42, %struct.patch_fill_state_s* %43, double 5.000000e-01) #5
  %44 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c84 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %44, i32 0, i32 1
  %arrayidx85 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c84, i32 0, i64 0
  %arrayidx86 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx85, i32 0, i64 1
  %45 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx86, align 8, !tbaa !1
  %46 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c87 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %46, i32 0, i32 1
  %arrayidx88 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c87, i32 0, i64 0
  %arrayidx89 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx88, i32 0, i64 1
  store %struct.patch_color_s* %45, %struct.patch_color_s** %arrayidx89, align 8, !tbaa !1
  %47 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c90 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %47, i32 0, i32 1
  %arrayidx91 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c90, i32 0, i64 1
  %arrayidx92 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx91, i32 0, i64 1
  %48 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx92, align 8, !tbaa !1
  %49 = load %struct.tensor_patch*, %struct.tensor_patch** %s1.addr, align 8, !tbaa !1
  %c93 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %49, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c93, i32 0, i64 1
  %arrayidx95 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx94, i32 0, i64 1
  store %struct.patch_color_s* %48, %struct.patch_color_s** %arrayidx95, align 8, !tbaa !1
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @make_quadrangle(%struct.tensor_patch* %p, [2 x %struct.shading_vertex_s]* %qq, %struct.wedge_vertex_list_t* %l, %struct.quadrangle_patch* %q) #1 {
entry:
  %p.addr = alloca %struct.tensor_patch*, align 8
  %qq.addr = alloca [2 x %struct.shading_vertex_s]*, align 8
  %l.addr = alloca %struct.wedge_vertex_list_t*, align 8
  %q.addr = alloca %struct.quadrangle_patch*, align 8
  store %struct.tensor_patch* %p, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  store [2 x %struct.shading_vertex_s]* %qq, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  store %struct.wedge_vertex_list_t* %l, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %q, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %0 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %0, i64 0
  %arrayidx1 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx, i32 0, i64 0
  %p2 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx1, i32 0, i32 0
  %1 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %1, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx3, i32 0, i64 0
  %2 = bitcast %struct.gs_fixed_point_s* %p2 to i8*
  %3 = bitcast %struct.gs_fixed_point_s* %arrayidx4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 8, i32 4, i1 false), !tbaa.struct !117
  %4 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx5 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %4, i64 0
  %arrayidx6 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx5, i32 0, i64 1
  %p7 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx6, i32 0, i32 0
  %5 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole8 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %5, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole8, i32 0, i64 0
  %arrayidx10 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx9, i32 0, i64 3
  %6 = bitcast %struct.gs_fixed_point_s* %p7 to i8*
  %7 = bitcast %struct.gs_fixed_point_s* %arrayidx10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 4, i1 false), !tbaa.struct !117
  %8 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx11 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %8, i64 1
  %arrayidx12 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx11, i32 0, i64 0
  %p13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx12, i32 0, i32 0
  %9 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole14 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %9, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole14, i32 0, i64 3
  %arrayidx16 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx15, i32 0, i64 0
  %10 = bitcast %struct.gs_fixed_point_s* %p13 to i8*
  %11 = bitcast %struct.gs_fixed_point_s* %arrayidx16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false), !tbaa.struct !117
  %12 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx17 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %12, i64 1
  %arrayidx18 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx17, i32 0, i64 1
  %p19 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx18, i32 0, i32 0
  %13 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %pole20 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %13, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [4 x [4 x %struct.gs_fixed_point_s]], [4 x [4 x %struct.gs_fixed_point_s]]* %pole20, i32 0, i64 3
  %arrayidx22 = getelementptr inbounds [4 x %struct.gs_fixed_point_s], [4 x %struct.gs_fixed_point_s]* %arrayidx21, i32 0, i64 3
  %14 = bitcast %struct.gs_fixed_point_s* %p19 to i8*
  %15 = bitcast %struct.gs_fixed_point_s* %arrayidx22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 4, i1 false), !tbaa.struct !117
  %16 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %16, i32 0, i32 1
  %arrayidx23 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c, i32 0, i64 0
  %arrayidx24 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx23, i32 0, i64 0
  %17 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx24, align 8, !tbaa !1
  %18 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx25 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %18, i64 0
  %arrayidx26 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx25, i32 0, i64 0
  %c27 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx26, i32 0, i32 1
  store %struct.patch_color_s* %17, %struct.patch_color_s** %c27, align 8, !tbaa !150
  %19 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c28 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %19, i32 0, i32 1
  %arrayidx29 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c28, i32 0, i64 0
  %arrayidx30 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx29, i32 0, i64 1
  %20 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx30, align 8, !tbaa !1
  %21 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx31 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %21, i64 0
  %arrayidx32 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx31, i32 0, i64 1
  %c33 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx32, i32 0, i32 1
  store %struct.patch_color_s* %20, %struct.patch_color_s** %c33, align 8, !tbaa !150
  %22 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c34 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %22, i32 0, i32 1
  %arrayidx35 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c34, i32 0, i64 1
  %arrayidx36 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx35, i32 0, i64 0
  %23 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx36, align 8, !tbaa !1
  %24 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx37 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %24, i64 1
  %arrayidx38 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx37, i32 0, i64 0
  %c39 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx38, i32 0, i32 1
  store %struct.patch_color_s* %23, %struct.patch_color_s** %c39, align 8, !tbaa !150
  %25 = load %struct.tensor_patch*, %struct.tensor_patch** %p.addr, align 8, !tbaa !1
  %c40 = getelementptr inbounds %struct.tensor_patch, %struct.tensor_patch* %25, i32 0, i32 1
  %arrayidx41 = getelementptr inbounds [2 x [2 x %struct.patch_color_s*]], [2 x [2 x %struct.patch_color_s*]]* %c40, i32 0, i64 1
  %arrayidx42 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %arrayidx41, i32 0, i64 1
  %26 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx42, align 8, !tbaa !1
  %27 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx43 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %27, i64 1
  %arrayidx44 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx43, i32 0, i64 1
  %c45 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx44, i32 0, i32 1
  store %struct.patch_color_s* %26, %struct.patch_color_s** %c45, align 8, !tbaa !150
  %28 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx46 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %28, i64 0
  %arrayidx47 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx46, i32 0, i64 0
  %29 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %p48 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %29, i32 0, i32 0
  %arrayidx49 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p48, i32 0, i64 0
  %arrayidx50 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx49, i32 0, i64 0
  store %struct.shading_vertex_s* %arrayidx47, %struct.shading_vertex_s** %arrayidx50, align 8, !tbaa !1
  %30 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx51 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %30, i64 0
  %arrayidx52 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx51, i32 0, i64 1
  %31 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %p53 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %31, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p53, i32 0, i64 0
  %arrayidx55 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx54, i32 0, i64 1
  store %struct.shading_vertex_s* %arrayidx52, %struct.shading_vertex_s** %arrayidx55, align 8, !tbaa !1
  %32 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx56 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %32, i64 1
  %arrayidx57 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx56, i32 0, i64 0
  %33 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %p58 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %33, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p58, i32 0, i64 1
  %arrayidx60 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx59, i32 0, i64 0
  store %struct.shading_vertex_s* %arrayidx57, %struct.shading_vertex_s** %arrayidx60, align 8, !tbaa !1
  %34 = load [2 x %struct.shading_vertex_s]*, [2 x %struct.shading_vertex_s]** %qq.addr, align 8, !tbaa !1
  %arrayidx61 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %34, i64 1
  %arrayidx62 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %arrayidx61, i32 0, i64 1
  %35 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %p63 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %35, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p63, i32 0, i64 1
  %arrayidx65 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx64, i32 0, i64 1
  store %struct.shading_vertex_s* %arrayidx62, %struct.shading_vertex_s** %arrayidx65, align 8, !tbaa !1
  %36 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %arrayidx66 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %36, i64 0
  %37 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %l0001 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %37, i32 0, i32 1
  store %struct.wedge_vertex_list_t* %arrayidx66, %struct.wedge_vertex_list_t** %l0001, align 8, !tbaa !182
  %38 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %arrayidx67 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %38, i64 1
  %39 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %l0111 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %39, i32 0, i32 2
  store %struct.wedge_vertex_list_t* %arrayidx67, %struct.wedge_vertex_list_t** %l0111, align 8, !tbaa !184
  %40 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %arrayidx68 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %40, i64 2
  %41 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %l1110 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %41, i32 0, i32 3
  store %struct.wedge_vertex_list_t* %arrayidx68, %struct.wedge_vertex_list_t** %l1110, align 8, !tbaa !185
  %42 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l.addr, align 8, !tbaa !1
  %arrayidx69 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %42, i64 3
  %43 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %q.addr, align 8, !tbaa !1
  %l1000 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %43, i32 0, i32 4
  store %struct.wedge_vertex_list_t* %arrayidx69, %struct.wedge_vertex_list_t** %l1000, align 8, !tbaa !186
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @fill_quadrangle(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p, i32 %big) #0 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %big.addr = alloca i32, align 4
  %s0 = alloca %struct.quadrangle_patch, align 8
  %s1 = alloca %struct.quadrangle_patch, align 8
  %l0 = alloca %struct.wedge_vertex_list_t, align 8
  %l1 = alloca %struct.wedge_vertex_list_t, align 8
  %l2 = alloca %struct.wedge_vertex_list_t, align 8
  %code = alloca i32, align 4
  %divide_u = alloca i32, align 4
  %divide_v = alloca i32, align 4
  %big1 = alloca i32, align 4
  %q = alloca [2 x %struct.shading_vertex_s], align 16
  %monotonic_color_save = alloca i32, align 4
  %linear_color_save = alloca i32, align 4
  %inside_save = alloca i32, align 4
  %inside1 = alloca i32, align 4
  %r = alloca %struct.gs_fixed_rect_s, align 4
  %r1 = alloca %struct.gs_fixed_rect_s, align 4
  %cleanup.dest.slot = alloca i32
  %size_u = alloca i32, align 4
  %size_v = alloca i32, align 4
  %is_big_u = alloca i32, align 4
  %is_big_v = alloca i32, align 4
  %d0001x = alloca double, align 8
  %d1011x = alloca double, align 8
  %d0001y = alloca double, align 8
  %d1011y = alloca double, align 8
  %d0010x = alloca double, align 8
  %d0111x = alloca double, align 8
  %d0010y = alloca double, align 8
  %d0111y = alloca double, align 8
  %size_u1702 = alloca double, align 8
  %size_v1733 = alloca double, align 8
  %not_monotonic_by_u = alloca i32, align 4
  %not_monotonic_by_v = alloca i32, align 4
  %c = alloca [2 x %struct.patch_color_s*], align 16
  %color_stack_ptr = alloca i8*, align 8
  %c2073 = alloca [2 x %struct.patch_color_s*], align 16
  %color_stack_ptr2074 = alloca i8*, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i32 %big, i32* %big.addr, align 4, !tbaa !5
  %0 = bitcast %struct.quadrangle_patch* %s0 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %0) #2
  %1 = bitcast %struct.quadrangle_patch* %s1 to i8*
  call void @llvm.lifetime.start(i64 64, i8* %1) #2
  %2 = bitcast %struct.wedge_vertex_list_t* %l0 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %2) #2
  %3 = bitcast %struct.wedge_vertex_list_t* %l1 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %3) #2
  %4 = bitcast %struct.wedge_vertex_list_t* %l2 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %4) #2
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i32* %divide_u to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #2
  store i32 0, i32* %divide_u, align 4, !tbaa !5
  %7 = bitcast i32* %divide_v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #2
  store i32 0, i32* %divide_v, align 4, !tbaa !5
  %8 = bitcast i32* %big1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #2
  %9 = load i32, i32* %big.addr, align 4, !tbaa !5
  store i32 %9, i32* %big1, align 4, !tbaa !5
  %10 = bitcast [2 x %struct.shading_vertex_s]* %q to i8*
  call void @llvm.lifetime.start(i64 32, i8* %10) #2
  %11 = bitcast i32* %monotonic_color_save to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #2
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 23
  %13 = load i32, i32* %monotonic_color, align 4, !tbaa !29
  store i32 %13, i32* %monotonic_color_save, align 4, !tbaa !5
  %14 = bitcast i32* %linear_color_save to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #2
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %15, i32 0, i32 24
  %16 = load i32, i32* %linear_color, align 4, !tbaa !31
  store i32 %16, i32* %linear_color_save, align 4, !tbaa !5
  %17 = bitcast i32* %inside_save to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #2
  %18 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %18, i32 0, i32 26
  %19 = load i32, i32* %inside, align 4, !tbaa !32
  store i32 %19, i32* %inside_save, align 4, !tbaa !5
  %20 = bitcast i32* %inside1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #2
  %21 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside2 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %21, i32 0, i32 26
  %22 = load i32, i32* %inside2, align 4, !tbaa !32
  store i32 %22, i32* %inside1, align 4, !tbaa !5
  %23 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.start(i64 16, i8* %23) #2
  %24 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %24) #2
  %25 = load i32, i32* %inside1, align 4, !tbaa !5
  %tobool = icmp ne i32 %25, 0
  br i1 %tobool, label %if.end.77, label %if.then

if.then:                                          ; preds = %entry
  %26 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %26, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p3, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx, i32 0, i64 0
  %27 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx4, align 8, !tbaa !1
  %p5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %27, i32 0, i32 0
  %28 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p6 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %28, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p6, i32 0, i64 0
  %arrayidx8 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx7, i32 0, i64 1
  %29 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx8, align 8, !tbaa !1
  %p9 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %29, i32 0, i32 0
  %30 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %30, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p10, i32 0, i64 1
  %arrayidx12 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx11, i32 0, i64 0
  %31 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx12, align 8, !tbaa !1
  %p13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %31, i32 0, i32 0
  %32 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p14 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %32, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p14, i32 0, i64 1
  %arrayidx16 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx15, i32 0, i64 1
  %33 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx16, align 8, !tbaa !1
  %p17 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %33, i32 0, i32 0
  call void @bbox_of_points(%struct.gs_fixed_rect_s* %r, %struct.gs_fixed_point_s* %p5, %struct.gs_fixed_point_s* %p9, %struct.gs_fixed_point_s* %p13, %struct.gs_fixed_point_s* %p17) #5
  %34 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  %35 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 4, i1 false), !tbaa.struct !137
  br label %do.body

do.body:                                          ; preds = %if.then
  %36 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %36, i32 0, i32 8
  %p18 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p18, i32 0, i32 0
  %37 = load i32, i32* %x, align 4, !tbaa !138
  %p19 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x20 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p19, i32 0, i32 0
  %38 = load i32, i32* %x20, align 4, !tbaa !134
  %cmp = icmp sgt i32 %37, %38
  br i1 %cmp, label %if.then.21, label %if.end

if.then.21:                                       ; preds = %do.body
  %39 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect22 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %39, i32 0, i32 8
  %p23 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect22, i32 0, i32 0
  %x24 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p23, i32 0, i32 0
  %40 = load i32, i32* %x24, align 4, !tbaa !138
  %p25 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x26 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p25, i32 0, i32 0
  store i32 %40, i32* %x26, align 4, !tbaa !134
  br label %if.end

if.end:                                           ; preds = %if.then.21, %do.body
  %41 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect27 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %41, i32 0, i32 8
  %q28 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect27, i32 0, i32 1
  %x29 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q28, i32 0, i32 0
  %42 = load i32, i32* %x29, align 4, !tbaa !139
  %q30 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x31 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q30, i32 0, i32 0
  %43 = load i32, i32* %x31, align 4, !tbaa !136
  %cmp32 = icmp slt i32 %42, %43
  br i1 %cmp32, label %if.then.33, label %if.end.39

if.then.33:                                       ; preds = %if.end
  %44 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect34 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %44, i32 0, i32 8
  %q35 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect34, i32 0, i32 1
  %x36 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q35, i32 0, i32 0
  %45 = load i32, i32* %x36, align 4, !tbaa !139
  %q37 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x38 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q37, i32 0, i32 0
  store i32 %45, i32* %x38, align 4, !tbaa !136
  br label %if.end.39

if.end.39:                                        ; preds = %if.then.33, %if.end
  %46 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect40 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %46, i32 0, i32 8
  %p41 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect40, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p41, i32 0, i32 1
  %47 = load i32, i32* %y, align 4, !tbaa !140
  %p42 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y43 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p42, i32 0, i32 1
  %48 = load i32, i32* %y43, align 4, !tbaa !133
  %cmp44 = icmp sgt i32 %47, %48
  br i1 %cmp44, label %if.then.45, label %if.end.51

if.then.45:                                       ; preds = %if.end.39
  %49 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect46 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %49, i32 0, i32 8
  %p47 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect46, i32 0, i32 0
  %y48 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p47, i32 0, i32 1
  %50 = load i32, i32* %y48, align 4, !tbaa !140
  %p49 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y50 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p49, i32 0, i32 1
  store i32 %50, i32* %y50, align 4, !tbaa !133
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.45, %if.end.39
  %51 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect52 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %51, i32 0, i32 8
  %q53 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect52, i32 0, i32 1
  %y54 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q53, i32 0, i32 1
  %52 = load i32, i32* %y54, align 4, !tbaa !141
  %q55 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q55, i32 0, i32 1
  %53 = load i32, i32* %y56, align 4, !tbaa !135
  %cmp57 = icmp slt i32 %52, %53
  br i1 %cmp57, label %if.then.58, label %if.end.64

if.then.58:                                       ; preds = %if.end.51
  %54 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %rect59 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %54, i32 0, i32 8
  %q60 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %rect59, i32 0, i32 1
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q60, i32 0, i32 1
  %55 = load i32, i32* %y61, align 4, !tbaa !141
  %q62 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y63 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q62, i32 0, i32 1
  store i32 %55, i32* %y63, align 4, !tbaa !135
  br label %if.end.64

if.end.64:                                        ; preds = %if.then.58, %if.end.51
  br label %do.cond

do.cond:                                          ; preds = %if.end.64
  br label %do.end

do.end:                                           ; preds = %do.cond
  %q65 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x66 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q65, i32 0, i32 0
  %56 = load i32, i32* %x66, align 4, !tbaa !136
  %p67 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x68 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p67, i32 0, i32 0
  %57 = load i32, i32* %x68, align 4, !tbaa !134
  %cmp69 = icmp sle i32 %56, %57
  br i1 %cmp69, label %if.then.75, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %q70 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y71 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q70, i32 0, i32 1
  %58 = load i32, i32* %y71, align 4, !tbaa !135
  %p72 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y73 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p72, i32 0, i32 1
  %59 = load i32, i32* %y73, align 4, !tbaa !133
  %cmp74 = icmp sle i32 %58, %59
  br i1 %cmp74, label %if.then.75, label %if.end.76

if.then.75:                                       ; preds = %lor.lhs.false, %do.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.2206

if.end.76:                                        ; preds = %lor.lhs.false
  br label %if.end.77

if.end.77:                                        ; preds = %if.end.76, %entry
  %60 = load i32, i32* %big.addr, align 4, !tbaa !5
  %tobool78 = icmp ne i32 %60, 0
  br i1 %tobool78, label %if.then.79, label %if.end.1373

if.then.79:                                       ; preds = %if.end.77
  %61 = bitcast i32* %size_u to i8*
  call void @llvm.lifetime.start(i64 4, i8* %61) #2
  %62 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p80 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %62, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p80, i32 0, i64 0
  %arrayidx82 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx81, i32 0, i64 0
  %63 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx82, align 8, !tbaa !1
  %p83 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %63, i32 0, i32 0
  %x84 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p83, i32 0, i32 0
  %64 = load i32, i32* %x84, align 4, !tbaa !155
  %65 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p85 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %65, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p85, i32 0, i64 0
  %arrayidx87 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx86, i32 0, i64 1
  %66 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx87, align 8, !tbaa !1
  %p88 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %66, i32 0, i32 0
  %x89 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p88, i32 0, i32 0
  %67 = load i32, i32* %x89, align 4, !tbaa !155
  %sub = sub nsw i32 %64, %67
  %cmp90 = icmp slt i32 %sub, 0
  br i1 %cmp90, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.79
  %68 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p91 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %68, i32 0, i32 0
  %arrayidx92 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p91, i32 0, i64 0
  %arrayidx93 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx92, i32 0, i64 0
  %69 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx93, align 8, !tbaa !1
  %p94 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %69, i32 0, i32 0
  %x95 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p94, i32 0, i32 0
  %70 = load i32, i32* %x95, align 4, !tbaa !155
  %71 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p96 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %71, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p96, i32 0, i64 0
  %arrayidx98 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx97, i32 0, i64 1
  %72 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx98, align 8, !tbaa !1
  %p99 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %72, i32 0, i32 0
  %x100 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p99, i32 0, i32 0
  %73 = load i32, i32* %x100, align 4, !tbaa !155
  %sub101 = sub nsw i32 %70, %73
  %sub102 = sub nsw i32 0, %sub101
  br label %cond.end

cond.false:                                       ; preds = %if.then.79
  %74 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p103 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %74, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p103, i32 0, i64 0
  %arrayidx105 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx104, i32 0, i64 0
  %75 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx105, align 8, !tbaa !1
  %p106 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %75, i32 0, i32 0
  %x107 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p106, i32 0, i32 0
  %76 = load i32, i32* %x107, align 4, !tbaa !155
  %77 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p108 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %77, i32 0, i32 0
  %arrayidx109 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p108, i32 0, i64 0
  %arrayidx110 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx109, i32 0, i64 1
  %78 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx110, align 8, !tbaa !1
  %p111 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %78, i32 0, i32 0
  %x112 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p111, i32 0, i32 0
  %79 = load i32, i32* %x112, align 4, !tbaa !155
  %sub113 = sub nsw i32 %76, %79
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub102, %cond.true ], [ %sub113, %cond.false ]
  %80 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p114 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %80, i32 0, i32 0
  %arrayidx115 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p114, i32 0, i64 1
  %arrayidx116 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx115, i32 0, i64 0
  %81 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx116, align 8, !tbaa !1
  %p117 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %81, i32 0, i32 0
  %x118 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p117, i32 0, i32 0
  %82 = load i32, i32* %x118, align 4, !tbaa !155
  %83 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p119 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %83, i32 0, i32 0
  %arrayidx120 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p119, i32 0, i64 1
  %arrayidx121 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx120, i32 0, i64 1
  %84 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx121, align 8, !tbaa !1
  %p122 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %84, i32 0, i32 0
  %x123 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p122, i32 0, i32 0
  %85 = load i32, i32* %x123, align 4, !tbaa !155
  %sub124 = sub nsw i32 %82, %85
  %cmp125 = icmp slt i32 %sub124, 0
  br i1 %cmp125, label %cond.true.126, label %cond.false.139

cond.true.126:                                    ; preds = %cond.end
  %86 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p127 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %86, i32 0, i32 0
  %arrayidx128 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p127, i32 0, i64 1
  %arrayidx129 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx128, i32 0, i64 0
  %87 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx129, align 8, !tbaa !1
  %p130 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %87, i32 0, i32 0
  %x131 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p130, i32 0, i32 0
  %88 = load i32, i32* %x131, align 4, !tbaa !155
  %89 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p132 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %89, i32 0, i32 0
  %arrayidx133 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p132, i32 0, i64 1
  %arrayidx134 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx133, i32 0, i64 1
  %90 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx134, align 8, !tbaa !1
  %p135 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %90, i32 0, i32 0
  %x136 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p135, i32 0, i32 0
  %91 = load i32, i32* %x136, align 4, !tbaa !155
  %sub137 = sub nsw i32 %88, %91
  %sub138 = sub nsw i32 0, %sub137
  br label %cond.end.151

cond.false.139:                                   ; preds = %cond.end
  %92 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p140 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %92, i32 0, i32 0
  %arrayidx141 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p140, i32 0, i64 1
  %arrayidx142 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx141, i32 0, i64 0
  %93 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx142, align 8, !tbaa !1
  %p143 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %93, i32 0, i32 0
  %x144 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p143, i32 0, i32 0
  %94 = load i32, i32* %x144, align 4, !tbaa !155
  %95 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p145 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %95, i32 0, i32 0
  %arrayidx146 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p145, i32 0, i64 1
  %arrayidx147 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx146, i32 0, i64 1
  %96 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx147, align 8, !tbaa !1
  %p148 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %96, i32 0, i32 0
  %x149 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p148, i32 0, i32 0
  %97 = load i32, i32* %x149, align 4, !tbaa !155
  %sub150 = sub nsw i32 %94, %97
  br label %cond.end.151

cond.end.151:                                     ; preds = %cond.false.139, %cond.true.126
  %cond152 = phi i32 [ %sub138, %cond.true.126 ], [ %sub150, %cond.false.139 ]
  %cmp153 = icmp sgt i32 %cond, %cond152
  br i1 %cmp153, label %cond.true.154, label %cond.false.194

cond.true.154:                                    ; preds = %cond.end.151
  %98 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p155 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %98, i32 0, i32 0
  %arrayidx156 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p155, i32 0, i64 0
  %arrayidx157 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx156, i32 0, i64 0
  %99 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx157, align 8, !tbaa !1
  %p158 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %99, i32 0, i32 0
  %x159 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p158, i32 0, i32 0
  %100 = load i32, i32* %x159, align 4, !tbaa !155
  %101 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p160 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %101, i32 0, i32 0
  %arrayidx161 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p160, i32 0, i64 0
  %arrayidx162 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx161, i32 0, i64 1
  %102 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx162, align 8, !tbaa !1
  %p163 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %102, i32 0, i32 0
  %x164 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p163, i32 0, i32 0
  %103 = load i32, i32* %x164, align 4, !tbaa !155
  %sub165 = sub nsw i32 %100, %103
  %cmp166 = icmp slt i32 %sub165, 0
  br i1 %cmp166, label %cond.true.167, label %cond.false.180

cond.true.167:                                    ; preds = %cond.true.154
  %104 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p168 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %104, i32 0, i32 0
  %arrayidx169 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p168, i32 0, i64 0
  %arrayidx170 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx169, i32 0, i64 0
  %105 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx170, align 8, !tbaa !1
  %p171 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %105, i32 0, i32 0
  %x172 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p171, i32 0, i32 0
  %106 = load i32, i32* %x172, align 4, !tbaa !155
  %107 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p173 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %107, i32 0, i32 0
  %arrayidx174 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p173, i32 0, i64 0
  %arrayidx175 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx174, i32 0, i64 1
  %108 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx175, align 8, !tbaa !1
  %p176 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %108, i32 0, i32 0
  %x177 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p176, i32 0, i32 0
  %109 = load i32, i32* %x177, align 4, !tbaa !155
  %sub178 = sub nsw i32 %106, %109
  %sub179 = sub nsw i32 0, %sub178
  br label %cond.end.192

cond.false.180:                                   ; preds = %cond.true.154
  %110 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p181 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %110, i32 0, i32 0
  %arrayidx182 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p181, i32 0, i64 0
  %arrayidx183 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx182, i32 0, i64 0
  %111 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx183, align 8, !tbaa !1
  %p184 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %111, i32 0, i32 0
  %x185 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p184, i32 0, i32 0
  %112 = load i32, i32* %x185, align 4, !tbaa !155
  %113 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p186 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %113, i32 0, i32 0
  %arrayidx187 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p186, i32 0, i64 0
  %arrayidx188 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx187, i32 0, i64 1
  %114 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx188, align 8, !tbaa !1
  %p189 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %114, i32 0, i32 0
  %x190 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p189, i32 0, i32 0
  %115 = load i32, i32* %x190, align 4, !tbaa !155
  %sub191 = sub nsw i32 %112, %115
  br label %cond.end.192

cond.end.192:                                     ; preds = %cond.false.180, %cond.true.167
  %cond193 = phi i32 [ %sub179, %cond.true.167 ], [ %sub191, %cond.false.180 ]
  br label %cond.end.234

cond.false.194:                                   ; preds = %cond.end.151
  %116 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p195 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %116, i32 0, i32 0
  %arrayidx196 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p195, i32 0, i64 1
  %arrayidx197 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx196, i32 0, i64 0
  %117 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx197, align 8, !tbaa !1
  %p198 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %117, i32 0, i32 0
  %x199 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p198, i32 0, i32 0
  %118 = load i32, i32* %x199, align 4, !tbaa !155
  %119 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p200 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %119, i32 0, i32 0
  %arrayidx201 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p200, i32 0, i64 1
  %arrayidx202 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx201, i32 0, i64 1
  %120 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx202, align 8, !tbaa !1
  %p203 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %120, i32 0, i32 0
  %x204 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p203, i32 0, i32 0
  %121 = load i32, i32* %x204, align 4, !tbaa !155
  %sub205 = sub nsw i32 %118, %121
  %cmp206 = icmp slt i32 %sub205, 0
  br i1 %cmp206, label %cond.true.207, label %cond.false.220

cond.true.207:                                    ; preds = %cond.false.194
  %122 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p208 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %122, i32 0, i32 0
  %arrayidx209 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p208, i32 0, i64 1
  %arrayidx210 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx209, i32 0, i64 0
  %123 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx210, align 8, !tbaa !1
  %p211 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %123, i32 0, i32 0
  %x212 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p211, i32 0, i32 0
  %124 = load i32, i32* %x212, align 4, !tbaa !155
  %125 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p213 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %125, i32 0, i32 0
  %arrayidx214 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p213, i32 0, i64 1
  %arrayidx215 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx214, i32 0, i64 1
  %126 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx215, align 8, !tbaa !1
  %p216 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %126, i32 0, i32 0
  %x217 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p216, i32 0, i32 0
  %127 = load i32, i32* %x217, align 4, !tbaa !155
  %sub218 = sub nsw i32 %124, %127
  %sub219 = sub nsw i32 0, %sub218
  br label %cond.end.232

cond.false.220:                                   ; preds = %cond.false.194
  %128 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p221 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %128, i32 0, i32 0
  %arrayidx222 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p221, i32 0, i64 1
  %arrayidx223 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx222, i32 0, i64 0
  %129 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx223, align 8, !tbaa !1
  %p224 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %129, i32 0, i32 0
  %x225 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p224, i32 0, i32 0
  %130 = load i32, i32* %x225, align 4, !tbaa !155
  %131 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p226 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %131, i32 0, i32 0
  %arrayidx227 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p226, i32 0, i64 1
  %arrayidx228 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx227, i32 0, i64 1
  %132 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx228, align 8, !tbaa !1
  %p229 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %132, i32 0, i32 0
  %x230 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p229, i32 0, i32 0
  %133 = load i32, i32* %x230, align 4, !tbaa !155
  %sub231 = sub nsw i32 %130, %133
  br label %cond.end.232

cond.end.232:                                     ; preds = %cond.false.220, %cond.true.207
  %cond233 = phi i32 [ %sub219, %cond.true.207 ], [ %sub231, %cond.false.220 ]
  br label %cond.end.234

cond.end.234:                                     ; preds = %cond.end.232, %cond.end.192
  %cond235 = phi i32 [ %cond193, %cond.end.192 ], [ %cond233, %cond.end.232 ]
  %134 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p236 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %134, i32 0, i32 0
  %arrayidx237 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p236, i32 0, i64 0
  %arrayidx238 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx237, i32 0, i64 0
  %135 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx238, align 8, !tbaa !1
  %p239 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %135, i32 0, i32 0
  %y240 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p239, i32 0, i32 1
  %136 = load i32, i32* %y240, align 4, !tbaa !156
  %137 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p241 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %137, i32 0, i32 0
  %arrayidx242 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p241, i32 0, i64 0
  %arrayidx243 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx242, i32 0, i64 1
  %138 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx243, align 8, !tbaa !1
  %p244 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %138, i32 0, i32 0
  %y245 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p244, i32 0, i32 1
  %139 = load i32, i32* %y245, align 4, !tbaa !156
  %sub246 = sub nsw i32 %136, %139
  %cmp247 = icmp slt i32 %sub246, 0
  br i1 %cmp247, label %cond.true.248, label %cond.false.261

cond.true.248:                                    ; preds = %cond.end.234
  %140 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p249 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %140, i32 0, i32 0
  %arrayidx250 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p249, i32 0, i64 0
  %arrayidx251 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx250, i32 0, i64 0
  %141 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx251, align 8, !tbaa !1
  %p252 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %141, i32 0, i32 0
  %y253 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p252, i32 0, i32 1
  %142 = load i32, i32* %y253, align 4, !tbaa !156
  %143 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p254 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %143, i32 0, i32 0
  %arrayidx255 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p254, i32 0, i64 0
  %arrayidx256 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx255, i32 0, i64 1
  %144 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx256, align 8, !tbaa !1
  %p257 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %144, i32 0, i32 0
  %y258 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p257, i32 0, i32 1
  %145 = load i32, i32* %y258, align 4, !tbaa !156
  %sub259 = sub nsw i32 %142, %145
  %sub260 = sub nsw i32 0, %sub259
  br label %cond.end.273

cond.false.261:                                   ; preds = %cond.end.234
  %146 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p262 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %146, i32 0, i32 0
  %arrayidx263 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p262, i32 0, i64 0
  %arrayidx264 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx263, i32 0, i64 0
  %147 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx264, align 8, !tbaa !1
  %p265 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %147, i32 0, i32 0
  %y266 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p265, i32 0, i32 1
  %148 = load i32, i32* %y266, align 4, !tbaa !156
  %149 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p267 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %149, i32 0, i32 0
  %arrayidx268 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p267, i32 0, i64 0
  %arrayidx269 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx268, i32 0, i64 1
  %150 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx269, align 8, !tbaa !1
  %p270 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %150, i32 0, i32 0
  %y271 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p270, i32 0, i32 1
  %151 = load i32, i32* %y271, align 4, !tbaa !156
  %sub272 = sub nsw i32 %148, %151
  br label %cond.end.273

cond.end.273:                                     ; preds = %cond.false.261, %cond.true.248
  %cond274 = phi i32 [ %sub260, %cond.true.248 ], [ %sub272, %cond.false.261 ]
  %152 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p275 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %152, i32 0, i32 0
  %arrayidx276 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p275, i32 0, i64 1
  %arrayidx277 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx276, i32 0, i64 0
  %153 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx277, align 8, !tbaa !1
  %p278 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %153, i32 0, i32 0
  %y279 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p278, i32 0, i32 1
  %154 = load i32, i32* %y279, align 4, !tbaa !156
  %155 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p280 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %155, i32 0, i32 0
  %arrayidx281 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p280, i32 0, i64 1
  %arrayidx282 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx281, i32 0, i64 1
  %156 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx282, align 8, !tbaa !1
  %p283 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %156, i32 0, i32 0
  %y284 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p283, i32 0, i32 1
  %157 = load i32, i32* %y284, align 4, !tbaa !156
  %sub285 = sub nsw i32 %154, %157
  %cmp286 = icmp slt i32 %sub285, 0
  br i1 %cmp286, label %cond.true.287, label %cond.false.300

cond.true.287:                                    ; preds = %cond.end.273
  %158 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p288 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %158, i32 0, i32 0
  %arrayidx289 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p288, i32 0, i64 1
  %arrayidx290 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx289, i32 0, i64 0
  %159 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx290, align 8, !tbaa !1
  %p291 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %159, i32 0, i32 0
  %y292 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p291, i32 0, i32 1
  %160 = load i32, i32* %y292, align 4, !tbaa !156
  %161 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p293 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %161, i32 0, i32 0
  %arrayidx294 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p293, i32 0, i64 1
  %arrayidx295 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx294, i32 0, i64 1
  %162 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx295, align 8, !tbaa !1
  %p296 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %162, i32 0, i32 0
  %y297 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p296, i32 0, i32 1
  %163 = load i32, i32* %y297, align 4, !tbaa !156
  %sub298 = sub nsw i32 %160, %163
  %sub299 = sub nsw i32 0, %sub298
  br label %cond.end.312

cond.false.300:                                   ; preds = %cond.end.273
  %164 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p301 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %164, i32 0, i32 0
  %arrayidx302 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p301, i32 0, i64 1
  %arrayidx303 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx302, i32 0, i64 0
  %165 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx303, align 8, !tbaa !1
  %p304 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %165, i32 0, i32 0
  %y305 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p304, i32 0, i32 1
  %166 = load i32, i32* %y305, align 4, !tbaa !156
  %167 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p306 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %167, i32 0, i32 0
  %arrayidx307 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p306, i32 0, i64 1
  %arrayidx308 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx307, i32 0, i64 1
  %168 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx308, align 8, !tbaa !1
  %p309 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %168, i32 0, i32 0
  %y310 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p309, i32 0, i32 1
  %169 = load i32, i32* %y310, align 4, !tbaa !156
  %sub311 = sub nsw i32 %166, %169
  br label %cond.end.312

cond.end.312:                                     ; preds = %cond.false.300, %cond.true.287
  %cond313 = phi i32 [ %sub299, %cond.true.287 ], [ %sub311, %cond.false.300 ]
  %cmp314 = icmp sgt i32 %cond274, %cond313
  br i1 %cmp314, label %cond.true.315, label %cond.false.355

cond.true.315:                                    ; preds = %cond.end.312
  %170 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p316 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %170, i32 0, i32 0
  %arrayidx317 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p316, i32 0, i64 0
  %arrayidx318 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx317, i32 0, i64 0
  %171 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx318, align 8, !tbaa !1
  %p319 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %171, i32 0, i32 0
  %y320 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p319, i32 0, i32 1
  %172 = load i32, i32* %y320, align 4, !tbaa !156
  %173 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p321 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %173, i32 0, i32 0
  %arrayidx322 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p321, i32 0, i64 0
  %arrayidx323 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx322, i32 0, i64 1
  %174 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx323, align 8, !tbaa !1
  %p324 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %174, i32 0, i32 0
  %y325 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p324, i32 0, i32 1
  %175 = load i32, i32* %y325, align 4, !tbaa !156
  %sub326 = sub nsw i32 %172, %175
  %cmp327 = icmp slt i32 %sub326, 0
  br i1 %cmp327, label %cond.true.328, label %cond.false.341

cond.true.328:                                    ; preds = %cond.true.315
  %176 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p329 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %176, i32 0, i32 0
  %arrayidx330 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p329, i32 0, i64 0
  %arrayidx331 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx330, i32 0, i64 0
  %177 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx331, align 8, !tbaa !1
  %p332 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %177, i32 0, i32 0
  %y333 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p332, i32 0, i32 1
  %178 = load i32, i32* %y333, align 4, !tbaa !156
  %179 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p334 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %179, i32 0, i32 0
  %arrayidx335 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p334, i32 0, i64 0
  %arrayidx336 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx335, i32 0, i64 1
  %180 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx336, align 8, !tbaa !1
  %p337 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %180, i32 0, i32 0
  %y338 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p337, i32 0, i32 1
  %181 = load i32, i32* %y338, align 4, !tbaa !156
  %sub339 = sub nsw i32 %178, %181
  %sub340 = sub nsw i32 0, %sub339
  br label %cond.end.353

cond.false.341:                                   ; preds = %cond.true.315
  %182 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p342 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %182, i32 0, i32 0
  %arrayidx343 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p342, i32 0, i64 0
  %arrayidx344 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx343, i32 0, i64 0
  %183 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx344, align 8, !tbaa !1
  %p345 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %183, i32 0, i32 0
  %y346 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p345, i32 0, i32 1
  %184 = load i32, i32* %y346, align 4, !tbaa !156
  %185 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p347 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %185, i32 0, i32 0
  %arrayidx348 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p347, i32 0, i64 0
  %arrayidx349 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx348, i32 0, i64 1
  %186 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx349, align 8, !tbaa !1
  %p350 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %186, i32 0, i32 0
  %y351 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p350, i32 0, i32 1
  %187 = load i32, i32* %y351, align 4, !tbaa !156
  %sub352 = sub nsw i32 %184, %187
  br label %cond.end.353

cond.end.353:                                     ; preds = %cond.false.341, %cond.true.328
  %cond354 = phi i32 [ %sub340, %cond.true.328 ], [ %sub352, %cond.false.341 ]
  br label %cond.end.395

cond.false.355:                                   ; preds = %cond.end.312
  %188 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p356 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %188, i32 0, i32 0
  %arrayidx357 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p356, i32 0, i64 1
  %arrayidx358 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx357, i32 0, i64 0
  %189 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx358, align 8, !tbaa !1
  %p359 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %189, i32 0, i32 0
  %y360 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p359, i32 0, i32 1
  %190 = load i32, i32* %y360, align 4, !tbaa !156
  %191 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p361 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %191, i32 0, i32 0
  %arrayidx362 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p361, i32 0, i64 1
  %arrayidx363 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx362, i32 0, i64 1
  %192 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx363, align 8, !tbaa !1
  %p364 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %192, i32 0, i32 0
  %y365 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p364, i32 0, i32 1
  %193 = load i32, i32* %y365, align 4, !tbaa !156
  %sub366 = sub nsw i32 %190, %193
  %cmp367 = icmp slt i32 %sub366, 0
  br i1 %cmp367, label %cond.true.368, label %cond.false.381

cond.true.368:                                    ; preds = %cond.false.355
  %194 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p369 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %194, i32 0, i32 0
  %arrayidx370 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p369, i32 0, i64 1
  %arrayidx371 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx370, i32 0, i64 0
  %195 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx371, align 8, !tbaa !1
  %p372 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %195, i32 0, i32 0
  %y373 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p372, i32 0, i32 1
  %196 = load i32, i32* %y373, align 4, !tbaa !156
  %197 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p374 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %197, i32 0, i32 0
  %arrayidx375 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p374, i32 0, i64 1
  %arrayidx376 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx375, i32 0, i64 1
  %198 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx376, align 8, !tbaa !1
  %p377 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %198, i32 0, i32 0
  %y378 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p377, i32 0, i32 1
  %199 = load i32, i32* %y378, align 4, !tbaa !156
  %sub379 = sub nsw i32 %196, %199
  %sub380 = sub nsw i32 0, %sub379
  br label %cond.end.393

cond.false.381:                                   ; preds = %cond.false.355
  %200 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p382 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %200, i32 0, i32 0
  %arrayidx383 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p382, i32 0, i64 1
  %arrayidx384 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx383, i32 0, i64 0
  %201 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx384, align 8, !tbaa !1
  %p385 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %201, i32 0, i32 0
  %y386 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p385, i32 0, i32 1
  %202 = load i32, i32* %y386, align 4, !tbaa !156
  %203 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p387 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %203, i32 0, i32 0
  %arrayidx388 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p387, i32 0, i64 1
  %arrayidx389 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx388, i32 0, i64 1
  %204 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx389, align 8, !tbaa !1
  %p390 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %204, i32 0, i32 0
  %y391 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p390, i32 0, i32 1
  %205 = load i32, i32* %y391, align 4, !tbaa !156
  %sub392 = sub nsw i32 %202, %205
  br label %cond.end.393

cond.end.393:                                     ; preds = %cond.false.381, %cond.true.368
  %cond394 = phi i32 [ %sub380, %cond.true.368 ], [ %sub392, %cond.false.381 ]
  br label %cond.end.395

cond.end.395:                                     ; preds = %cond.end.393, %cond.end.353
  %cond396 = phi i32 [ %cond354, %cond.end.353 ], [ %cond394, %cond.end.393 ]
  %cmp397 = icmp sgt i32 %cond235, %cond396
  br i1 %cmp397, label %cond.true.398, label %cond.false.560

cond.true.398:                                    ; preds = %cond.end.395
  %206 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p399 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %206, i32 0, i32 0
  %arrayidx400 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p399, i32 0, i64 0
  %arrayidx401 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx400, i32 0, i64 0
  %207 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx401, align 8, !tbaa !1
  %p402 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %207, i32 0, i32 0
  %x403 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p402, i32 0, i32 0
  %208 = load i32, i32* %x403, align 4, !tbaa !155
  %209 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p404 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %209, i32 0, i32 0
  %arrayidx405 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p404, i32 0, i64 0
  %arrayidx406 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx405, i32 0, i64 1
  %210 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx406, align 8, !tbaa !1
  %p407 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %210, i32 0, i32 0
  %x408 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p407, i32 0, i32 0
  %211 = load i32, i32* %x408, align 4, !tbaa !155
  %sub409 = sub nsw i32 %208, %211
  %cmp410 = icmp slt i32 %sub409, 0
  br i1 %cmp410, label %cond.true.411, label %cond.false.424

cond.true.411:                                    ; preds = %cond.true.398
  %212 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p412 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %212, i32 0, i32 0
  %arrayidx413 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p412, i32 0, i64 0
  %arrayidx414 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx413, i32 0, i64 0
  %213 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx414, align 8, !tbaa !1
  %p415 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %213, i32 0, i32 0
  %x416 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p415, i32 0, i32 0
  %214 = load i32, i32* %x416, align 4, !tbaa !155
  %215 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p417 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %215, i32 0, i32 0
  %arrayidx418 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p417, i32 0, i64 0
  %arrayidx419 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx418, i32 0, i64 1
  %216 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx419, align 8, !tbaa !1
  %p420 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %216, i32 0, i32 0
  %x421 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p420, i32 0, i32 0
  %217 = load i32, i32* %x421, align 4, !tbaa !155
  %sub422 = sub nsw i32 %214, %217
  %sub423 = sub nsw i32 0, %sub422
  br label %cond.end.436

cond.false.424:                                   ; preds = %cond.true.398
  %218 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p425 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %218, i32 0, i32 0
  %arrayidx426 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p425, i32 0, i64 0
  %arrayidx427 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx426, i32 0, i64 0
  %219 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx427, align 8, !tbaa !1
  %p428 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %219, i32 0, i32 0
  %x429 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p428, i32 0, i32 0
  %220 = load i32, i32* %x429, align 4, !tbaa !155
  %221 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p430 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %221, i32 0, i32 0
  %arrayidx431 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p430, i32 0, i64 0
  %arrayidx432 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx431, i32 0, i64 1
  %222 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx432, align 8, !tbaa !1
  %p433 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %222, i32 0, i32 0
  %x434 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p433, i32 0, i32 0
  %223 = load i32, i32* %x434, align 4, !tbaa !155
  %sub435 = sub nsw i32 %220, %223
  br label %cond.end.436

cond.end.436:                                     ; preds = %cond.false.424, %cond.true.411
  %cond437 = phi i32 [ %sub423, %cond.true.411 ], [ %sub435, %cond.false.424 ]
  %224 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p438 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %224, i32 0, i32 0
  %arrayidx439 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p438, i32 0, i64 1
  %arrayidx440 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx439, i32 0, i64 0
  %225 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx440, align 8, !tbaa !1
  %p441 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %225, i32 0, i32 0
  %x442 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p441, i32 0, i32 0
  %226 = load i32, i32* %x442, align 4, !tbaa !155
  %227 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p443 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %227, i32 0, i32 0
  %arrayidx444 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p443, i32 0, i64 1
  %arrayidx445 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx444, i32 0, i64 1
  %228 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx445, align 8, !tbaa !1
  %p446 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %228, i32 0, i32 0
  %x447 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p446, i32 0, i32 0
  %229 = load i32, i32* %x447, align 4, !tbaa !155
  %sub448 = sub nsw i32 %226, %229
  %cmp449 = icmp slt i32 %sub448, 0
  br i1 %cmp449, label %cond.true.450, label %cond.false.463

cond.true.450:                                    ; preds = %cond.end.436
  %230 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p451 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %230, i32 0, i32 0
  %arrayidx452 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p451, i32 0, i64 1
  %arrayidx453 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx452, i32 0, i64 0
  %231 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx453, align 8, !tbaa !1
  %p454 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %231, i32 0, i32 0
  %x455 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p454, i32 0, i32 0
  %232 = load i32, i32* %x455, align 4, !tbaa !155
  %233 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p456 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %233, i32 0, i32 0
  %arrayidx457 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p456, i32 0, i64 1
  %arrayidx458 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx457, i32 0, i64 1
  %234 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx458, align 8, !tbaa !1
  %p459 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %234, i32 0, i32 0
  %x460 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p459, i32 0, i32 0
  %235 = load i32, i32* %x460, align 4, !tbaa !155
  %sub461 = sub nsw i32 %232, %235
  %sub462 = sub nsw i32 0, %sub461
  br label %cond.end.475

cond.false.463:                                   ; preds = %cond.end.436
  %236 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p464 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %236, i32 0, i32 0
  %arrayidx465 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p464, i32 0, i64 1
  %arrayidx466 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx465, i32 0, i64 0
  %237 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx466, align 8, !tbaa !1
  %p467 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %237, i32 0, i32 0
  %x468 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p467, i32 0, i32 0
  %238 = load i32, i32* %x468, align 4, !tbaa !155
  %239 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p469 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %239, i32 0, i32 0
  %arrayidx470 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p469, i32 0, i64 1
  %arrayidx471 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx470, i32 0, i64 1
  %240 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx471, align 8, !tbaa !1
  %p472 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %240, i32 0, i32 0
  %x473 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p472, i32 0, i32 0
  %241 = load i32, i32* %x473, align 4, !tbaa !155
  %sub474 = sub nsw i32 %238, %241
  br label %cond.end.475

cond.end.475:                                     ; preds = %cond.false.463, %cond.true.450
  %cond476 = phi i32 [ %sub462, %cond.true.450 ], [ %sub474, %cond.false.463 ]
  %cmp477 = icmp sgt i32 %cond437, %cond476
  br i1 %cmp477, label %cond.true.478, label %cond.false.518

cond.true.478:                                    ; preds = %cond.end.475
  %242 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p479 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %242, i32 0, i32 0
  %arrayidx480 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p479, i32 0, i64 0
  %arrayidx481 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx480, i32 0, i64 0
  %243 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx481, align 8, !tbaa !1
  %p482 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %243, i32 0, i32 0
  %x483 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p482, i32 0, i32 0
  %244 = load i32, i32* %x483, align 4, !tbaa !155
  %245 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p484 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %245, i32 0, i32 0
  %arrayidx485 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p484, i32 0, i64 0
  %arrayidx486 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx485, i32 0, i64 1
  %246 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx486, align 8, !tbaa !1
  %p487 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %246, i32 0, i32 0
  %x488 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p487, i32 0, i32 0
  %247 = load i32, i32* %x488, align 4, !tbaa !155
  %sub489 = sub nsw i32 %244, %247
  %cmp490 = icmp slt i32 %sub489, 0
  br i1 %cmp490, label %cond.true.491, label %cond.false.504

cond.true.491:                                    ; preds = %cond.true.478
  %248 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p492 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %248, i32 0, i32 0
  %arrayidx493 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p492, i32 0, i64 0
  %arrayidx494 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx493, i32 0, i64 0
  %249 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx494, align 8, !tbaa !1
  %p495 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %249, i32 0, i32 0
  %x496 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p495, i32 0, i32 0
  %250 = load i32, i32* %x496, align 4, !tbaa !155
  %251 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p497 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %251, i32 0, i32 0
  %arrayidx498 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p497, i32 0, i64 0
  %arrayidx499 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx498, i32 0, i64 1
  %252 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx499, align 8, !tbaa !1
  %p500 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %252, i32 0, i32 0
  %x501 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p500, i32 0, i32 0
  %253 = load i32, i32* %x501, align 4, !tbaa !155
  %sub502 = sub nsw i32 %250, %253
  %sub503 = sub nsw i32 0, %sub502
  br label %cond.end.516

cond.false.504:                                   ; preds = %cond.true.478
  %254 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p505 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %254, i32 0, i32 0
  %arrayidx506 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p505, i32 0, i64 0
  %arrayidx507 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx506, i32 0, i64 0
  %255 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx507, align 8, !tbaa !1
  %p508 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %255, i32 0, i32 0
  %x509 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p508, i32 0, i32 0
  %256 = load i32, i32* %x509, align 4, !tbaa !155
  %257 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p510 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %257, i32 0, i32 0
  %arrayidx511 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p510, i32 0, i64 0
  %arrayidx512 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx511, i32 0, i64 1
  %258 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx512, align 8, !tbaa !1
  %p513 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %258, i32 0, i32 0
  %x514 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p513, i32 0, i32 0
  %259 = load i32, i32* %x514, align 4, !tbaa !155
  %sub515 = sub nsw i32 %256, %259
  br label %cond.end.516

cond.end.516:                                     ; preds = %cond.false.504, %cond.true.491
  %cond517 = phi i32 [ %sub503, %cond.true.491 ], [ %sub515, %cond.false.504 ]
  br label %cond.end.558

cond.false.518:                                   ; preds = %cond.end.475
  %260 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p519 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %260, i32 0, i32 0
  %arrayidx520 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p519, i32 0, i64 1
  %arrayidx521 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx520, i32 0, i64 0
  %261 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx521, align 8, !tbaa !1
  %p522 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %261, i32 0, i32 0
  %x523 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p522, i32 0, i32 0
  %262 = load i32, i32* %x523, align 4, !tbaa !155
  %263 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p524 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %263, i32 0, i32 0
  %arrayidx525 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p524, i32 0, i64 1
  %arrayidx526 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx525, i32 0, i64 1
  %264 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx526, align 8, !tbaa !1
  %p527 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %264, i32 0, i32 0
  %x528 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p527, i32 0, i32 0
  %265 = load i32, i32* %x528, align 4, !tbaa !155
  %sub529 = sub nsw i32 %262, %265
  %cmp530 = icmp slt i32 %sub529, 0
  br i1 %cmp530, label %cond.true.531, label %cond.false.544

cond.true.531:                                    ; preds = %cond.false.518
  %266 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p532 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %266, i32 0, i32 0
  %arrayidx533 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p532, i32 0, i64 1
  %arrayidx534 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx533, i32 0, i64 0
  %267 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx534, align 8, !tbaa !1
  %p535 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %267, i32 0, i32 0
  %x536 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p535, i32 0, i32 0
  %268 = load i32, i32* %x536, align 4, !tbaa !155
  %269 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p537 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %269, i32 0, i32 0
  %arrayidx538 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p537, i32 0, i64 1
  %arrayidx539 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx538, i32 0, i64 1
  %270 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx539, align 8, !tbaa !1
  %p540 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %270, i32 0, i32 0
  %x541 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p540, i32 0, i32 0
  %271 = load i32, i32* %x541, align 4, !tbaa !155
  %sub542 = sub nsw i32 %268, %271
  %sub543 = sub nsw i32 0, %sub542
  br label %cond.end.556

cond.false.544:                                   ; preds = %cond.false.518
  %272 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p545 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %272, i32 0, i32 0
  %arrayidx546 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p545, i32 0, i64 1
  %arrayidx547 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx546, i32 0, i64 0
  %273 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx547, align 8, !tbaa !1
  %p548 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %273, i32 0, i32 0
  %x549 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p548, i32 0, i32 0
  %274 = load i32, i32* %x549, align 4, !tbaa !155
  %275 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p550 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %275, i32 0, i32 0
  %arrayidx551 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p550, i32 0, i64 1
  %arrayidx552 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx551, i32 0, i64 1
  %276 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx552, align 8, !tbaa !1
  %p553 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %276, i32 0, i32 0
  %x554 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p553, i32 0, i32 0
  %277 = load i32, i32* %x554, align 4, !tbaa !155
  %sub555 = sub nsw i32 %274, %277
  br label %cond.end.556

cond.end.556:                                     ; preds = %cond.false.544, %cond.true.531
  %cond557 = phi i32 [ %sub543, %cond.true.531 ], [ %sub555, %cond.false.544 ]
  br label %cond.end.558

cond.end.558:                                     ; preds = %cond.end.556, %cond.end.516
  %cond559 = phi i32 [ %cond517, %cond.end.516 ], [ %cond557, %cond.end.556 ]
  br label %cond.end.722

cond.false.560:                                   ; preds = %cond.end.395
  %278 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p561 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %278, i32 0, i32 0
  %arrayidx562 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p561, i32 0, i64 0
  %arrayidx563 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx562, i32 0, i64 0
  %279 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx563, align 8, !tbaa !1
  %p564 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %279, i32 0, i32 0
  %y565 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p564, i32 0, i32 1
  %280 = load i32, i32* %y565, align 4, !tbaa !156
  %281 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p566 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %281, i32 0, i32 0
  %arrayidx567 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p566, i32 0, i64 0
  %arrayidx568 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx567, i32 0, i64 1
  %282 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx568, align 8, !tbaa !1
  %p569 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %282, i32 0, i32 0
  %y570 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p569, i32 0, i32 1
  %283 = load i32, i32* %y570, align 4, !tbaa !156
  %sub571 = sub nsw i32 %280, %283
  %cmp572 = icmp slt i32 %sub571, 0
  br i1 %cmp572, label %cond.true.573, label %cond.false.586

cond.true.573:                                    ; preds = %cond.false.560
  %284 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p574 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %284, i32 0, i32 0
  %arrayidx575 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p574, i32 0, i64 0
  %arrayidx576 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx575, i32 0, i64 0
  %285 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx576, align 8, !tbaa !1
  %p577 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %285, i32 0, i32 0
  %y578 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p577, i32 0, i32 1
  %286 = load i32, i32* %y578, align 4, !tbaa !156
  %287 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p579 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %287, i32 0, i32 0
  %arrayidx580 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p579, i32 0, i64 0
  %arrayidx581 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx580, i32 0, i64 1
  %288 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx581, align 8, !tbaa !1
  %p582 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %288, i32 0, i32 0
  %y583 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p582, i32 0, i32 1
  %289 = load i32, i32* %y583, align 4, !tbaa !156
  %sub584 = sub nsw i32 %286, %289
  %sub585 = sub nsw i32 0, %sub584
  br label %cond.end.598

cond.false.586:                                   ; preds = %cond.false.560
  %290 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p587 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %290, i32 0, i32 0
  %arrayidx588 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p587, i32 0, i64 0
  %arrayidx589 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx588, i32 0, i64 0
  %291 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx589, align 8, !tbaa !1
  %p590 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %291, i32 0, i32 0
  %y591 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p590, i32 0, i32 1
  %292 = load i32, i32* %y591, align 4, !tbaa !156
  %293 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p592 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %293, i32 0, i32 0
  %arrayidx593 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p592, i32 0, i64 0
  %arrayidx594 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx593, i32 0, i64 1
  %294 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx594, align 8, !tbaa !1
  %p595 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %294, i32 0, i32 0
  %y596 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p595, i32 0, i32 1
  %295 = load i32, i32* %y596, align 4, !tbaa !156
  %sub597 = sub nsw i32 %292, %295
  br label %cond.end.598

cond.end.598:                                     ; preds = %cond.false.586, %cond.true.573
  %cond599 = phi i32 [ %sub585, %cond.true.573 ], [ %sub597, %cond.false.586 ]
  %296 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p600 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %296, i32 0, i32 0
  %arrayidx601 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p600, i32 0, i64 1
  %arrayidx602 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx601, i32 0, i64 0
  %297 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx602, align 8, !tbaa !1
  %p603 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %297, i32 0, i32 0
  %y604 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p603, i32 0, i32 1
  %298 = load i32, i32* %y604, align 4, !tbaa !156
  %299 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p605 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %299, i32 0, i32 0
  %arrayidx606 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p605, i32 0, i64 1
  %arrayidx607 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx606, i32 0, i64 1
  %300 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx607, align 8, !tbaa !1
  %p608 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %300, i32 0, i32 0
  %y609 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p608, i32 0, i32 1
  %301 = load i32, i32* %y609, align 4, !tbaa !156
  %sub610 = sub nsw i32 %298, %301
  %cmp611 = icmp slt i32 %sub610, 0
  br i1 %cmp611, label %cond.true.612, label %cond.false.625

cond.true.612:                                    ; preds = %cond.end.598
  %302 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p613 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %302, i32 0, i32 0
  %arrayidx614 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p613, i32 0, i64 1
  %arrayidx615 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx614, i32 0, i64 0
  %303 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx615, align 8, !tbaa !1
  %p616 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %303, i32 0, i32 0
  %y617 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p616, i32 0, i32 1
  %304 = load i32, i32* %y617, align 4, !tbaa !156
  %305 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p618 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %305, i32 0, i32 0
  %arrayidx619 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p618, i32 0, i64 1
  %arrayidx620 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx619, i32 0, i64 1
  %306 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx620, align 8, !tbaa !1
  %p621 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %306, i32 0, i32 0
  %y622 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p621, i32 0, i32 1
  %307 = load i32, i32* %y622, align 4, !tbaa !156
  %sub623 = sub nsw i32 %304, %307
  %sub624 = sub nsw i32 0, %sub623
  br label %cond.end.637

cond.false.625:                                   ; preds = %cond.end.598
  %308 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p626 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %308, i32 0, i32 0
  %arrayidx627 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p626, i32 0, i64 1
  %arrayidx628 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx627, i32 0, i64 0
  %309 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx628, align 8, !tbaa !1
  %p629 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %309, i32 0, i32 0
  %y630 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p629, i32 0, i32 1
  %310 = load i32, i32* %y630, align 4, !tbaa !156
  %311 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p631 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %311, i32 0, i32 0
  %arrayidx632 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p631, i32 0, i64 1
  %arrayidx633 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx632, i32 0, i64 1
  %312 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx633, align 8, !tbaa !1
  %p634 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %312, i32 0, i32 0
  %y635 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p634, i32 0, i32 1
  %313 = load i32, i32* %y635, align 4, !tbaa !156
  %sub636 = sub nsw i32 %310, %313
  br label %cond.end.637

cond.end.637:                                     ; preds = %cond.false.625, %cond.true.612
  %cond638 = phi i32 [ %sub624, %cond.true.612 ], [ %sub636, %cond.false.625 ]
  %cmp639 = icmp sgt i32 %cond599, %cond638
  br i1 %cmp639, label %cond.true.640, label %cond.false.680

cond.true.640:                                    ; preds = %cond.end.637
  %314 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p641 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %314, i32 0, i32 0
  %arrayidx642 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p641, i32 0, i64 0
  %arrayidx643 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx642, i32 0, i64 0
  %315 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx643, align 8, !tbaa !1
  %p644 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %315, i32 0, i32 0
  %y645 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p644, i32 0, i32 1
  %316 = load i32, i32* %y645, align 4, !tbaa !156
  %317 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p646 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %317, i32 0, i32 0
  %arrayidx647 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p646, i32 0, i64 0
  %arrayidx648 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx647, i32 0, i64 1
  %318 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx648, align 8, !tbaa !1
  %p649 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %318, i32 0, i32 0
  %y650 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p649, i32 0, i32 1
  %319 = load i32, i32* %y650, align 4, !tbaa !156
  %sub651 = sub nsw i32 %316, %319
  %cmp652 = icmp slt i32 %sub651, 0
  br i1 %cmp652, label %cond.true.653, label %cond.false.666

cond.true.653:                                    ; preds = %cond.true.640
  %320 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p654 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %320, i32 0, i32 0
  %arrayidx655 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p654, i32 0, i64 0
  %arrayidx656 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx655, i32 0, i64 0
  %321 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx656, align 8, !tbaa !1
  %p657 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %321, i32 0, i32 0
  %y658 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p657, i32 0, i32 1
  %322 = load i32, i32* %y658, align 4, !tbaa !156
  %323 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p659 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %323, i32 0, i32 0
  %arrayidx660 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p659, i32 0, i64 0
  %arrayidx661 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx660, i32 0, i64 1
  %324 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx661, align 8, !tbaa !1
  %p662 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %324, i32 0, i32 0
  %y663 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p662, i32 0, i32 1
  %325 = load i32, i32* %y663, align 4, !tbaa !156
  %sub664 = sub nsw i32 %322, %325
  %sub665 = sub nsw i32 0, %sub664
  br label %cond.end.678

cond.false.666:                                   ; preds = %cond.true.640
  %326 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p667 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %326, i32 0, i32 0
  %arrayidx668 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p667, i32 0, i64 0
  %arrayidx669 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx668, i32 0, i64 0
  %327 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx669, align 8, !tbaa !1
  %p670 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %327, i32 0, i32 0
  %y671 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p670, i32 0, i32 1
  %328 = load i32, i32* %y671, align 4, !tbaa !156
  %329 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p672 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %329, i32 0, i32 0
  %arrayidx673 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p672, i32 0, i64 0
  %arrayidx674 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx673, i32 0, i64 1
  %330 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx674, align 8, !tbaa !1
  %p675 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %330, i32 0, i32 0
  %y676 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p675, i32 0, i32 1
  %331 = load i32, i32* %y676, align 4, !tbaa !156
  %sub677 = sub nsw i32 %328, %331
  br label %cond.end.678

cond.end.678:                                     ; preds = %cond.false.666, %cond.true.653
  %cond679 = phi i32 [ %sub665, %cond.true.653 ], [ %sub677, %cond.false.666 ]
  br label %cond.end.720

cond.false.680:                                   ; preds = %cond.end.637
  %332 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p681 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %332, i32 0, i32 0
  %arrayidx682 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p681, i32 0, i64 1
  %arrayidx683 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx682, i32 0, i64 0
  %333 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx683, align 8, !tbaa !1
  %p684 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %333, i32 0, i32 0
  %y685 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p684, i32 0, i32 1
  %334 = load i32, i32* %y685, align 4, !tbaa !156
  %335 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p686 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %335, i32 0, i32 0
  %arrayidx687 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p686, i32 0, i64 1
  %arrayidx688 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx687, i32 0, i64 1
  %336 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx688, align 8, !tbaa !1
  %p689 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %336, i32 0, i32 0
  %y690 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p689, i32 0, i32 1
  %337 = load i32, i32* %y690, align 4, !tbaa !156
  %sub691 = sub nsw i32 %334, %337
  %cmp692 = icmp slt i32 %sub691, 0
  br i1 %cmp692, label %cond.true.693, label %cond.false.706

cond.true.693:                                    ; preds = %cond.false.680
  %338 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p694 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %338, i32 0, i32 0
  %arrayidx695 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p694, i32 0, i64 1
  %arrayidx696 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx695, i32 0, i64 0
  %339 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx696, align 8, !tbaa !1
  %p697 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %339, i32 0, i32 0
  %y698 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p697, i32 0, i32 1
  %340 = load i32, i32* %y698, align 4, !tbaa !156
  %341 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p699 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %341, i32 0, i32 0
  %arrayidx700 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p699, i32 0, i64 1
  %arrayidx701 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx700, i32 0, i64 1
  %342 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx701, align 8, !tbaa !1
  %p702 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %342, i32 0, i32 0
  %y703 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p702, i32 0, i32 1
  %343 = load i32, i32* %y703, align 4, !tbaa !156
  %sub704 = sub nsw i32 %340, %343
  %sub705 = sub nsw i32 0, %sub704
  br label %cond.end.718

cond.false.706:                                   ; preds = %cond.false.680
  %344 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p707 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %344, i32 0, i32 0
  %arrayidx708 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p707, i32 0, i64 1
  %arrayidx709 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx708, i32 0, i64 0
  %345 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx709, align 8, !tbaa !1
  %p710 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %345, i32 0, i32 0
  %y711 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p710, i32 0, i32 1
  %346 = load i32, i32* %y711, align 4, !tbaa !156
  %347 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p712 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %347, i32 0, i32 0
  %arrayidx713 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p712, i32 0, i64 1
  %arrayidx714 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx713, i32 0, i64 1
  %348 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx714, align 8, !tbaa !1
  %p715 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %348, i32 0, i32 0
  %y716 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p715, i32 0, i32 1
  %349 = load i32, i32* %y716, align 4, !tbaa !156
  %sub717 = sub nsw i32 %346, %349
  br label %cond.end.718

cond.end.718:                                     ; preds = %cond.false.706, %cond.true.693
  %cond719 = phi i32 [ %sub705, %cond.true.693 ], [ %sub717, %cond.false.706 ]
  br label %cond.end.720

cond.end.720:                                     ; preds = %cond.end.718, %cond.end.678
  %cond721 = phi i32 [ %cond679, %cond.end.678 ], [ %cond719, %cond.end.718 ]
  br label %cond.end.722

cond.end.722:                                     ; preds = %cond.end.720, %cond.end.558
  %cond723 = phi i32 [ %cond559, %cond.end.558 ], [ %cond721, %cond.end.720 ]
  store i32 %cond723, i32* %size_u, align 4, !tbaa !5
  %350 = bitcast i32* %size_v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %350) #2
  %351 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p724 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %351, i32 0, i32 0
  %arrayidx725 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p724, i32 0, i64 0
  %arrayidx726 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx725, i32 0, i64 0
  %352 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx726, align 8, !tbaa !1
  %p727 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %352, i32 0, i32 0
  %x728 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p727, i32 0, i32 0
  %353 = load i32, i32* %x728, align 4, !tbaa !155
  %354 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p729 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %354, i32 0, i32 0
  %arrayidx730 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p729, i32 0, i64 1
  %arrayidx731 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx730, i32 0, i64 0
  %355 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx731, align 8, !tbaa !1
  %p732 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %355, i32 0, i32 0
  %x733 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p732, i32 0, i32 0
  %356 = load i32, i32* %x733, align 4, !tbaa !155
  %sub734 = sub nsw i32 %353, %356
  %cmp735 = icmp slt i32 %sub734, 0
  br i1 %cmp735, label %cond.true.736, label %cond.false.749

cond.true.736:                                    ; preds = %cond.end.722
  %357 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p737 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %357, i32 0, i32 0
  %arrayidx738 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p737, i32 0, i64 0
  %arrayidx739 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx738, i32 0, i64 0
  %358 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx739, align 8, !tbaa !1
  %p740 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %358, i32 0, i32 0
  %x741 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p740, i32 0, i32 0
  %359 = load i32, i32* %x741, align 4, !tbaa !155
  %360 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p742 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %360, i32 0, i32 0
  %arrayidx743 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p742, i32 0, i64 1
  %arrayidx744 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx743, i32 0, i64 0
  %361 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx744, align 8, !tbaa !1
  %p745 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %361, i32 0, i32 0
  %x746 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p745, i32 0, i32 0
  %362 = load i32, i32* %x746, align 4, !tbaa !155
  %sub747 = sub nsw i32 %359, %362
  %sub748 = sub nsw i32 0, %sub747
  br label %cond.end.761

cond.false.749:                                   ; preds = %cond.end.722
  %363 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p750 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %363, i32 0, i32 0
  %arrayidx751 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p750, i32 0, i64 0
  %arrayidx752 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx751, i32 0, i64 0
  %364 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx752, align 8, !tbaa !1
  %p753 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %364, i32 0, i32 0
  %x754 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p753, i32 0, i32 0
  %365 = load i32, i32* %x754, align 4, !tbaa !155
  %366 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p755 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %366, i32 0, i32 0
  %arrayidx756 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p755, i32 0, i64 1
  %arrayidx757 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx756, i32 0, i64 0
  %367 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx757, align 8, !tbaa !1
  %p758 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %367, i32 0, i32 0
  %x759 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p758, i32 0, i32 0
  %368 = load i32, i32* %x759, align 4, !tbaa !155
  %sub760 = sub nsw i32 %365, %368
  br label %cond.end.761

cond.end.761:                                     ; preds = %cond.false.749, %cond.true.736
  %cond762 = phi i32 [ %sub748, %cond.true.736 ], [ %sub760, %cond.false.749 ]
  %369 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p763 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %369, i32 0, i32 0
  %arrayidx764 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p763, i32 0, i64 0
  %arrayidx765 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx764, i32 0, i64 1
  %370 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx765, align 8, !tbaa !1
  %p766 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %370, i32 0, i32 0
  %x767 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p766, i32 0, i32 0
  %371 = load i32, i32* %x767, align 4, !tbaa !155
  %372 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p768 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %372, i32 0, i32 0
  %arrayidx769 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p768, i32 0, i64 1
  %arrayidx770 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx769, i32 0, i64 1
  %373 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx770, align 8, !tbaa !1
  %p771 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %373, i32 0, i32 0
  %x772 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p771, i32 0, i32 0
  %374 = load i32, i32* %x772, align 4, !tbaa !155
  %sub773 = sub nsw i32 %371, %374
  %cmp774 = icmp slt i32 %sub773, 0
  br i1 %cmp774, label %cond.true.775, label %cond.false.788

cond.true.775:                                    ; preds = %cond.end.761
  %375 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p776 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %375, i32 0, i32 0
  %arrayidx777 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p776, i32 0, i64 0
  %arrayidx778 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx777, i32 0, i64 1
  %376 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx778, align 8, !tbaa !1
  %p779 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %376, i32 0, i32 0
  %x780 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p779, i32 0, i32 0
  %377 = load i32, i32* %x780, align 4, !tbaa !155
  %378 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p781 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %378, i32 0, i32 0
  %arrayidx782 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p781, i32 0, i64 1
  %arrayidx783 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx782, i32 0, i64 1
  %379 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx783, align 8, !tbaa !1
  %p784 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %379, i32 0, i32 0
  %x785 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p784, i32 0, i32 0
  %380 = load i32, i32* %x785, align 4, !tbaa !155
  %sub786 = sub nsw i32 %377, %380
  %sub787 = sub nsw i32 0, %sub786
  br label %cond.end.800

cond.false.788:                                   ; preds = %cond.end.761
  %381 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p789 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %381, i32 0, i32 0
  %arrayidx790 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p789, i32 0, i64 0
  %arrayidx791 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx790, i32 0, i64 1
  %382 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx791, align 8, !tbaa !1
  %p792 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %382, i32 0, i32 0
  %x793 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p792, i32 0, i32 0
  %383 = load i32, i32* %x793, align 4, !tbaa !155
  %384 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p794 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %384, i32 0, i32 0
  %arrayidx795 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p794, i32 0, i64 1
  %arrayidx796 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx795, i32 0, i64 1
  %385 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx796, align 8, !tbaa !1
  %p797 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %385, i32 0, i32 0
  %x798 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p797, i32 0, i32 0
  %386 = load i32, i32* %x798, align 4, !tbaa !155
  %sub799 = sub nsw i32 %383, %386
  br label %cond.end.800

cond.end.800:                                     ; preds = %cond.false.788, %cond.true.775
  %cond801 = phi i32 [ %sub787, %cond.true.775 ], [ %sub799, %cond.false.788 ]
  %cmp802 = icmp sgt i32 %cond762, %cond801
  br i1 %cmp802, label %cond.true.803, label %cond.false.843

cond.true.803:                                    ; preds = %cond.end.800
  %387 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p804 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %387, i32 0, i32 0
  %arrayidx805 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p804, i32 0, i64 0
  %arrayidx806 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx805, i32 0, i64 0
  %388 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx806, align 8, !tbaa !1
  %p807 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %388, i32 0, i32 0
  %x808 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p807, i32 0, i32 0
  %389 = load i32, i32* %x808, align 4, !tbaa !155
  %390 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p809 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %390, i32 0, i32 0
  %arrayidx810 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p809, i32 0, i64 1
  %arrayidx811 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx810, i32 0, i64 0
  %391 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx811, align 8, !tbaa !1
  %p812 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %391, i32 0, i32 0
  %x813 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p812, i32 0, i32 0
  %392 = load i32, i32* %x813, align 4, !tbaa !155
  %sub814 = sub nsw i32 %389, %392
  %cmp815 = icmp slt i32 %sub814, 0
  br i1 %cmp815, label %cond.true.816, label %cond.false.829

cond.true.816:                                    ; preds = %cond.true.803
  %393 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p817 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %393, i32 0, i32 0
  %arrayidx818 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p817, i32 0, i64 0
  %arrayidx819 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx818, i32 0, i64 0
  %394 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx819, align 8, !tbaa !1
  %p820 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %394, i32 0, i32 0
  %x821 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p820, i32 0, i32 0
  %395 = load i32, i32* %x821, align 4, !tbaa !155
  %396 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p822 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %396, i32 0, i32 0
  %arrayidx823 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p822, i32 0, i64 1
  %arrayidx824 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx823, i32 0, i64 0
  %397 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx824, align 8, !tbaa !1
  %p825 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %397, i32 0, i32 0
  %x826 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p825, i32 0, i32 0
  %398 = load i32, i32* %x826, align 4, !tbaa !155
  %sub827 = sub nsw i32 %395, %398
  %sub828 = sub nsw i32 0, %sub827
  br label %cond.end.841

cond.false.829:                                   ; preds = %cond.true.803
  %399 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p830 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %399, i32 0, i32 0
  %arrayidx831 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p830, i32 0, i64 0
  %arrayidx832 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx831, i32 0, i64 0
  %400 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx832, align 8, !tbaa !1
  %p833 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %400, i32 0, i32 0
  %x834 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p833, i32 0, i32 0
  %401 = load i32, i32* %x834, align 4, !tbaa !155
  %402 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p835 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %402, i32 0, i32 0
  %arrayidx836 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p835, i32 0, i64 1
  %arrayidx837 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx836, i32 0, i64 0
  %403 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx837, align 8, !tbaa !1
  %p838 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %403, i32 0, i32 0
  %x839 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p838, i32 0, i32 0
  %404 = load i32, i32* %x839, align 4, !tbaa !155
  %sub840 = sub nsw i32 %401, %404
  br label %cond.end.841

cond.end.841:                                     ; preds = %cond.false.829, %cond.true.816
  %cond842 = phi i32 [ %sub828, %cond.true.816 ], [ %sub840, %cond.false.829 ]
  br label %cond.end.883

cond.false.843:                                   ; preds = %cond.end.800
  %405 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p844 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %405, i32 0, i32 0
  %arrayidx845 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p844, i32 0, i64 0
  %arrayidx846 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx845, i32 0, i64 1
  %406 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx846, align 8, !tbaa !1
  %p847 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %406, i32 0, i32 0
  %x848 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p847, i32 0, i32 0
  %407 = load i32, i32* %x848, align 4, !tbaa !155
  %408 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p849 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %408, i32 0, i32 0
  %arrayidx850 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p849, i32 0, i64 1
  %arrayidx851 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx850, i32 0, i64 1
  %409 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx851, align 8, !tbaa !1
  %p852 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %409, i32 0, i32 0
  %x853 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p852, i32 0, i32 0
  %410 = load i32, i32* %x853, align 4, !tbaa !155
  %sub854 = sub nsw i32 %407, %410
  %cmp855 = icmp slt i32 %sub854, 0
  br i1 %cmp855, label %cond.true.856, label %cond.false.869

cond.true.856:                                    ; preds = %cond.false.843
  %411 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p857 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %411, i32 0, i32 0
  %arrayidx858 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p857, i32 0, i64 0
  %arrayidx859 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx858, i32 0, i64 1
  %412 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx859, align 8, !tbaa !1
  %p860 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %412, i32 0, i32 0
  %x861 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p860, i32 0, i32 0
  %413 = load i32, i32* %x861, align 4, !tbaa !155
  %414 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p862 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %414, i32 0, i32 0
  %arrayidx863 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p862, i32 0, i64 1
  %arrayidx864 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx863, i32 0, i64 1
  %415 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx864, align 8, !tbaa !1
  %p865 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %415, i32 0, i32 0
  %x866 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p865, i32 0, i32 0
  %416 = load i32, i32* %x866, align 4, !tbaa !155
  %sub867 = sub nsw i32 %413, %416
  %sub868 = sub nsw i32 0, %sub867
  br label %cond.end.881

cond.false.869:                                   ; preds = %cond.false.843
  %417 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p870 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %417, i32 0, i32 0
  %arrayidx871 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p870, i32 0, i64 0
  %arrayidx872 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx871, i32 0, i64 1
  %418 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx872, align 8, !tbaa !1
  %p873 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %418, i32 0, i32 0
  %x874 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p873, i32 0, i32 0
  %419 = load i32, i32* %x874, align 4, !tbaa !155
  %420 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p875 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %420, i32 0, i32 0
  %arrayidx876 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p875, i32 0, i64 1
  %arrayidx877 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx876, i32 0, i64 1
  %421 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx877, align 8, !tbaa !1
  %p878 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %421, i32 0, i32 0
  %x879 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p878, i32 0, i32 0
  %422 = load i32, i32* %x879, align 4, !tbaa !155
  %sub880 = sub nsw i32 %419, %422
  br label %cond.end.881

cond.end.881:                                     ; preds = %cond.false.869, %cond.true.856
  %cond882 = phi i32 [ %sub868, %cond.true.856 ], [ %sub880, %cond.false.869 ]
  br label %cond.end.883

cond.end.883:                                     ; preds = %cond.end.881, %cond.end.841
  %cond884 = phi i32 [ %cond842, %cond.end.841 ], [ %cond882, %cond.end.881 ]
  %423 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p885 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %423, i32 0, i32 0
  %arrayidx886 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p885, i32 0, i64 0
  %arrayidx887 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx886, i32 0, i64 0
  %424 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx887, align 8, !tbaa !1
  %p888 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %424, i32 0, i32 0
  %y889 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p888, i32 0, i32 1
  %425 = load i32, i32* %y889, align 4, !tbaa !156
  %426 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p890 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %426, i32 0, i32 0
  %arrayidx891 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p890, i32 0, i64 1
  %arrayidx892 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx891, i32 0, i64 0
  %427 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx892, align 8, !tbaa !1
  %p893 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %427, i32 0, i32 0
  %y894 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p893, i32 0, i32 1
  %428 = load i32, i32* %y894, align 4, !tbaa !156
  %sub895 = sub nsw i32 %425, %428
  %cmp896 = icmp slt i32 %sub895, 0
  br i1 %cmp896, label %cond.true.897, label %cond.false.910

cond.true.897:                                    ; preds = %cond.end.883
  %429 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p898 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %429, i32 0, i32 0
  %arrayidx899 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p898, i32 0, i64 0
  %arrayidx900 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx899, i32 0, i64 0
  %430 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx900, align 8, !tbaa !1
  %p901 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %430, i32 0, i32 0
  %y902 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p901, i32 0, i32 1
  %431 = load i32, i32* %y902, align 4, !tbaa !156
  %432 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p903 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %432, i32 0, i32 0
  %arrayidx904 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p903, i32 0, i64 1
  %arrayidx905 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx904, i32 0, i64 0
  %433 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx905, align 8, !tbaa !1
  %p906 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %433, i32 0, i32 0
  %y907 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p906, i32 0, i32 1
  %434 = load i32, i32* %y907, align 4, !tbaa !156
  %sub908 = sub nsw i32 %431, %434
  %sub909 = sub nsw i32 0, %sub908
  br label %cond.end.922

cond.false.910:                                   ; preds = %cond.end.883
  %435 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p911 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %435, i32 0, i32 0
  %arrayidx912 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p911, i32 0, i64 0
  %arrayidx913 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx912, i32 0, i64 0
  %436 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx913, align 8, !tbaa !1
  %p914 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %436, i32 0, i32 0
  %y915 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p914, i32 0, i32 1
  %437 = load i32, i32* %y915, align 4, !tbaa !156
  %438 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p916 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %438, i32 0, i32 0
  %arrayidx917 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p916, i32 0, i64 1
  %arrayidx918 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx917, i32 0, i64 0
  %439 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx918, align 8, !tbaa !1
  %p919 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %439, i32 0, i32 0
  %y920 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p919, i32 0, i32 1
  %440 = load i32, i32* %y920, align 4, !tbaa !156
  %sub921 = sub nsw i32 %437, %440
  br label %cond.end.922

cond.end.922:                                     ; preds = %cond.false.910, %cond.true.897
  %cond923 = phi i32 [ %sub909, %cond.true.897 ], [ %sub921, %cond.false.910 ]
  %441 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p924 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %441, i32 0, i32 0
  %arrayidx925 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p924, i32 0, i64 0
  %arrayidx926 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx925, i32 0, i64 1
  %442 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx926, align 8, !tbaa !1
  %p927 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %442, i32 0, i32 0
  %y928 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p927, i32 0, i32 1
  %443 = load i32, i32* %y928, align 4, !tbaa !156
  %444 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p929 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %444, i32 0, i32 0
  %arrayidx930 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p929, i32 0, i64 1
  %arrayidx931 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx930, i32 0, i64 1
  %445 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx931, align 8, !tbaa !1
  %p932 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %445, i32 0, i32 0
  %y933 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p932, i32 0, i32 1
  %446 = load i32, i32* %y933, align 4, !tbaa !156
  %sub934 = sub nsw i32 %443, %446
  %cmp935 = icmp slt i32 %sub934, 0
  br i1 %cmp935, label %cond.true.936, label %cond.false.949

cond.true.936:                                    ; preds = %cond.end.922
  %447 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p937 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %447, i32 0, i32 0
  %arrayidx938 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p937, i32 0, i64 0
  %arrayidx939 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx938, i32 0, i64 1
  %448 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx939, align 8, !tbaa !1
  %p940 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %448, i32 0, i32 0
  %y941 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p940, i32 0, i32 1
  %449 = load i32, i32* %y941, align 4, !tbaa !156
  %450 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p942 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %450, i32 0, i32 0
  %arrayidx943 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p942, i32 0, i64 1
  %arrayidx944 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx943, i32 0, i64 1
  %451 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx944, align 8, !tbaa !1
  %p945 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %451, i32 0, i32 0
  %y946 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p945, i32 0, i32 1
  %452 = load i32, i32* %y946, align 4, !tbaa !156
  %sub947 = sub nsw i32 %449, %452
  %sub948 = sub nsw i32 0, %sub947
  br label %cond.end.961

cond.false.949:                                   ; preds = %cond.end.922
  %453 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p950 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %453, i32 0, i32 0
  %arrayidx951 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p950, i32 0, i64 0
  %arrayidx952 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx951, i32 0, i64 1
  %454 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx952, align 8, !tbaa !1
  %p953 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %454, i32 0, i32 0
  %y954 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p953, i32 0, i32 1
  %455 = load i32, i32* %y954, align 4, !tbaa !156
  %456 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p955 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %456, i32 0, i32 0
  %arrayidx956 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p955, i32 0, i64 1
  %arrayidx957 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx956, i32 0, i64 1
  %457 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx957, align 8, !tbaa !1
  %p958 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %457, i32 0, i32 0
  %y959 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p958, i32 0, i32 1
  %458 = load i32, i32* %y959, align 4, !tbaa !156
  %sub960 = sub nsw i32 %455, %458
  br label %cond.end.961

cond.end.961:                                     ; preds = %cond.false.949, %cond.true.936
  %cond962 = phi i32 [ %sub948, %cond.true.936 ], [ %sub960, %cond.false.949 ]
  %cmp963 = icmp sgt i32 %cond923, %cond962
  br i1 %cmp963, label %cond.true.964, label %cond.false.1004

cond.true.964:                                    ; preds = %cond.end.961
  %459 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p965 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %459, i32 0, i32 0
  %arrayidx966 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p965, i32 0, i64 0
  %arrayidx967 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx966, i32 0, i64 0
  %460 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx967, align 8, !tbaa !1
  %p968 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %460, i32 0, i32 0
  %y969 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p968, i32 0, i32 1
  %461 = load i32, i32* %y969, align 4, !tbaa !156
  %462 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p970 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %462, i32 0, i32 0
  %arrayidx971 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p970, i32 0, i64 1
  %arrayidx972 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx971, i32 0, i64 0
  %463 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx972, align 8, !tbaa !1
  %p973 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %463, i32 0, i32 0
  %y974 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p973, i32 0, i32 1
  %464 = load i32, i32* %y974, align 4, !tbaa !156
  %sub975 = sub nsw i32 %461, %464
  %cmp976 = icmp slt i32 %sub975, 0
  br i1 %cmp976, label %cond.true.977, label %cond.false.990

cond.true.977:                                    ; preds = %cond.true.964
  %465 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p978 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %465, i32 0, i32 0
  %arrayidx979 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p978, i32 0, i64 0
  %arrayidx980 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx979, i32 0, i64 0
  %466 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx980, align 8, !tbaa !1
  %p981 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %466, i32 0, i32 0
  %y982 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p981, i32 0, i32 1
  %467 = load i32, i32* %y982, align 4, !tbaa !156
  %468 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p983 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %468, i32 0, i32 0
  %arrayidx984 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p983, i32 0, i64 1
  %arrayidx985 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx984, i32 0, i64 0
  %469 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx985, align 8, !tbaa !1
  %p986 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %469, i32 0, i32 0
  %y987 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p986, i32 0, i32 1
  %470 = load i32, i32* %y987, align 4, !tbaa !156
  %sub988 = sub nsw i32 %467, %470
  %sub989 = sub nsw i32 0, %sub988
  br label %cond.end.1002

cond.false.990:                                   ; preds = %cond.true.964
  %471 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p991 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %471, i32 0, i32 0
  %arrayidx992 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p991, i32 0, i64 0
  %arrayidx993 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx992, i32 0, i64 0
  %472 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx993, align 8, !tbaa !1
  %p994 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %472, i32 0, i32 0
  %y995 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p994, i32 0, i32 1
  %473 = load i32, i32* %y995, align 4, !tbaa !156
  %474 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p996 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %474, i32 0, i32 0
  %arrayidx997 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p996, i32 0, i64 1
  %arrayidx998 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx997, i32 0, i64 0
  %475 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx998, align 8, !tbaa !1
  %p999 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %475, i32 0, i32 0
  %y1000 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p999, i32 0, i32 1
  %476 = load i32, i32* %y1000, align 4, !tbaa !156
  %sub1001 = sub nsw i32 %473, %476
  br label %cond.end.1002

cond.end.1002:                                    ; preds = %cond.false.990, %cond.true.977
  %cond1003 = phi i32 [ %sub989, %cond.true.977 ], [ %sub1001, %cond.false.990 ]
  br label %cond.end.1044

cond.false.1004:                                  ; preds = %cond.end.961
  %477 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1005 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %477, i32 0, i32 0
  %arrayidx1006 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1005, i32 0, i64 0
  %arrayidx1007 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1006, i32 0, i64 1
  %478 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1007, align 8, !tbaa !1
  %p1008 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %478, i32 0, i32 0
  %y1009 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1008, i32 0, i32 1
  %479 = load i32, i32* %y1009, align 4, !tbaa !156
  %480 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1010 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %480, i32 0, i32 0
  %arrayidx1011 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1010, i32 0, i64 1
  %arrayidx1012 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1011, i32 0, i64 1
  %481 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1012, align 8, !tbaa !1
  %p1013 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %481, i32 0, i32 0
  %y1014 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1013, i32 0, i32 1
  %482 = load i32, i32* %y1014, align 4, !tbaa !156
  %sub1015 = sub nsw i32 %479, %482
  %cmp1016 = icmp slt i32 %sub1015, 0
  br i1 %cmp1016, label %cond.true.1017, label %cond.false.1030

cond.true.1017:                                   ; preds = %cond.false.1004
  %483 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1018 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %483, i32 0, i32 0
  %arrayidx1019 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1018, i32 0, i64 0
  %arrayidx1020 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1019, i32 0, i64 1
  %484 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1020, align 8, !tbaa !1
  %p1021 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %484, i32 0, i32 0
  %y1022 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1021, i32 0, i32 1
  %485 = load i32, i32* %y1022, align 4, !tbaa !156
  %486 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1023 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %486, i32 0, i32 0
  %arrayidx1024 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1023, i32 0, i64 1
  %arrayidx1025 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1024, i32 0, i64 1
  %487 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1025, align 8, !tbaa !1
  %p1026 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %487, i32 0, i32 0
  %y1027 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1026, i32 0, i32 1
  %488 = load i32, i32* %y1027, align 4, !tbaa !156
  %sub1028 = sub nsw i32 %485, %488
  %sub1029 = sub nsw i32 0, %sub1028
  br label %cond.end.1042

cond.false.1030:                                  ; preds = %cond.false.1004
  %489 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1031 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %489, i32 0, i32 0
  %arrayidx1032 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1031, i32 0, i64 0
  %arrayidx1033 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1032, i32 0, i64 1
  %490 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1033, align 8, !tbaa !1
  %p1034 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %490, i32 0, i32 0
  %y1035 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1034, i32 0, i32 1
  %491 = load i32, i32* %y1035, align 4, !tbaa !156
  %492 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1036 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %492, i32 0, i32 0
  %arrayidx1037 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1036, i32 0, i64 1
  %arrayidx1038 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1037, i32 0, i64 1
  %493 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1038, align 8, !tbaa !1
  %p1039 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %493, i32 0, i32 0
  %y1040 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1039, i32 0, i32 1
  %494 = load i32, i32* %y1040, align 4, !tbaa !156
  %sub1041 = sub nsw i32 %491, %494
  br label %cond.end.1042

cond.end.1042:                                    ; preds = %cond.false.1030, %cond.true.1017
  %cond1043 = phi i32 [ %sub1029, %cond.true.1017 ], [ %sub1041, %cond.false.1030 ]
  br label %cond.end.1044

cond.end.1044:                                    ; preds = %cond.end.1042, %cond.end.1002
  %cond1045 = phi i32 [ %cond1003, %cond.end.1002 ], [ %cond1043, %cond.end.1042 ]
  %cmp1046 = icmp sgt i32 %cond884, %cond1045
  br i1 %cmp1046, label %cond.true.1047, label %cond.false.1209

cond.true.1047:                                   ; preds = %cond.end.1044
  %495 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1048 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %495, i32 0, i32 0
  %arrayidx1049 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1048, i32 0, i64 0
  %arrayidx1050 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1049, i32 0, i64 0
  %496 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1050, align 8, !tbaa !1
  %p1051 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %496, i32 0, i32 0
  %x1052 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1051, i32 0, i32 0
  %497 = load i32, i32* %x1052, align 4, !tbaa !155
  %498 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1053 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %498, i32 0, i32 0
  %arrayidx1054 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1053, i32 0, i64 1
  %arrayidx1055 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1054, i32 0, i64 0
  %499 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1055, align 8, !tbaa !1
  %p1056 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %499, i32 0, i32 0
  %x1057 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1056, i32 0, i32 0
  %500 = load i32, i32* %x1057, align 4, !tbaa !155
  %sub1058 = sub nsw i32 %497, %500
  %cmp1059 = icmp slt i32 %sub1058, 0
  br i1 %cmp1059, label %cond.true.1060, label %cond.false.1073

cond.true.1060:                                   ; preds = %cond.true.1047
  %501 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1061 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %501, i32 0, i32 0
  %arrayidx1062 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1061, i32 0, i64 0
  %arrayidx1063 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1062, i32 0, i64 0
  %502 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1063, align 8, !tbaa !1
  %p1064 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %502, i32 0, i32 0
  %x1065 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1064, i32 0, i32 0
  %503 = load i32, i32* %x1065, align 4, !tbaa !155
  %504 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1066 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %504, i32 0, i32 0
  %arrayidx1067 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1066, i32 0, i64 1
  %arrayidx1068 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1067, i32 0, i64 0
  %505 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1068, align 8, !tbaa !1
  %p1069 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %505, i32 0, i32 0
  %x1070 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1069, i32 0, i32 0
  %506 = load i32, i32* %x1070, align 4, !tbaa !155
  %sub1071 = sub nsw i32 %503, %506
  %sub1072 = sub nsw i32 0, %sub1071
  br label %cond.end.1085

cond.false.1073:                                  ; preds = %cond.true.1047
  %507 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1074 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %507, i32 0, i32 0
  %arrayidx1075 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1074, i32 0, i64 0
  %arrayidx1076 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1075, i32 0, i64 0
  %508 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1076, align 8, !tbaa !1
  %p1077 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %508, i32 0, i32 0
  %x1078 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1077, i32 0, i32 0
  %509 = load i32, i32* %x1078, align 4, !tbaa !155
  %510 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1079 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %510, i32 0, i32 0
  %arrayidx1080 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1079, i32 0, i64 1
  %arrayidx1081 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1080, i32 0, i64 0
  %511 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1081, align 8, !tbaa !1
  %p1082 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %511, i32 0, i32 0
  %x1083 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1082, i32 0, i32 0
  %512 = load i32, i32* %x1083, align 4, !tbaa !155
  %sub1084 = sub nsw i32 %509, %512
  br label %cond.end.1085

cond.end.1085:                                    ; preds = %cond.false.1073, %cond.true.1060
  %cond1086 = phi i32 [ %sub1072, %cond.true.1060 ], [ %sub1084, %cond.false.1073 ]
  %513 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1087 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %513, i32 0, i32 0
  %arrayidx1088 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1087, i32 0, i64 0
  %arrayidx1089 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1088, i32 0, i64 1
  %514 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1089, align 8, !tbaa !1
  %p1090 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %514, i32 0, i32 0
  %x1091 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1090, i32 0, i32 0
  %515 = load i32, i32* %x1091, align 4, !tbaa !155
  %516 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1092 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %516, i32 0, i32 0
  %arrayidx1093 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1092, i32 0, i64 1
  %arrayidx1094 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1093, i32 0, i64 1
  %517 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1094, align 8, !tbaa !1
  %p1095 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %517, i32 0, i32 0
  %x1096 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1095, i32 0, i32 0
  %518 = load i32, i32* %x1096, align 4, !tbaa !155
  %sub1097 = sub nsw i32 %515, %518
  %cmp1098 = icmp slt i32 %sub1097, 0
  br i1 %cmp1098, label %cond.true.1099, label %cond.false.1112

cond.true.1099:                                   ; preds = %cond.end.1085
  %519 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1100 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %519, i32 0, i32 0
  %arrayidx1101 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1100, i32 0, i64 0
  %arrayidx1102 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1101, i32 0, i64 1
  %520 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1102, align 8, !tbaa !1
  %p1103 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %520, i32 0, i32 0
  %x1104 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1103, i32 0, i32 0
  %521 = load i32, i32* %x1104, align 4, !tbaa !155
  %522 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1105 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %522, i32 0, i32 0
  %arrayidx1106 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1105, i32 0, i64 1
  %arrayidx1107 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1106, i32 0, i64 1
  %523 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1107, align 8, !tbaa !1
  %p1108 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %523, i32 0, i32 0
  %x1109 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1108, i32 0, i32 0
  %524 = load i32, i32* %x1109, align 4, !tbaa !155
  %sub1110 = sub nsw i32 %521, %524
  %sub1111 = sub nsw i32 0, %sub1110
  br label %cond.end.1124

cond.false.1112:                                  ; preds = %cond.end.1085
  %525 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1113 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %525, i32 0, i32 0
  %arrayidx1114 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1113, i32 0, i64 0
  %arrayidx1115 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1114, i32 0, i64 1
  %526 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1115, align 8, !tbaa !1
  %p1116 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %526, i32 0, i32 0
  %x1117 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1116, i32 0, i32 0
  %527 = load i32, i32* %x1117, align 4, !tbaa !155
  %528 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1118 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %528, i32 0, i32 0
  %arrayidx1119 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1118, i32 0, i64 1
  %arrayidx1120 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1119, i32 0, i64 1
  %529 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1120, align 8, !tbaa !1
  %p1121 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %529, i32 0, i32 0
  %x1122 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1121, i32 0, i32 0
  %530 = load i32, i32* %x1122, align 4, !tbaa !155
  %sub1123 = sub nsw i32 %527, %530
  br label %cond.end.1124

cond.end.1124:                                    ; preds = %cond.false.1112, %cond.true.1099
  %cond1125 = phi i32 [ %sub1111, %cond.true.1099 ], [ %sub1123, %cond.false.1112 ]
  %cmp1126 = icmp sgt i32 %cond1086, %cond1125
  br i1 %cmp1126, label %cond.true.1127, label %cond.false.1167

cond.true.1127:                                   ; preds = %cond.end.1124
  %531 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1128 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %531, i32 0, i32 0
  %arrayidx1129 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1128, i32 0, i64 0
  %arrayidx1130 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1129, i32 0, i64 0
  %532 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1130, align 8, !tbaa !1
  %p1131 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %532, i32 0, i32 0
  %x1132 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1131, i32 0, i32 0
  %533 = load i32, i32* %x1132, align 4, !tbaa !155
  %534 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1133 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %534, i32 0, i32 0
  %arrayidx1134 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1133, i32 0, i64 1
  %arrayidx1135 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1134, i32 0, i64 0
  %535 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1135, align 8, !tbaa !1
  %p1136 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %535, i32 0, i32 0
  %x1137 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1136, i32 0, i32 0
  %536 = load i32, i32* %x1137, align 4, !tbaa !155
  %sub1138 = sub nsw i32 %533, %536
  %cmp1139 = icmp slt i32 %sub1138, 0
  br i1 %cmp1139, label %cond.true.1140, label %cond.false.1153

cond.true.1140:                                   ; preds = %cond.true.1127
  %537 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1141 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %537, i32 0, i32 0
  %arrayidx1142 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1141, i32 0, i64 0
  %arrayidx1143 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1142, i32 0, i64 0
  %538 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1143, align 8, !tbaa !1
  %p1144 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %538, i32 0, i32 0
  %x1145 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1144, i32 0, i32 0
  %539 = load i32, i32* %x1145, align 4, !tbaa !155
  %540 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1146 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %540, i32 0, i32 0
  %arrayidx1147 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1146, i32 0, i64 1
  %arrayidx1148 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1147, i32 0, i64 0
  %541 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1148, align 8, !tbaa !1
  %p1149 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %541, i32 0, i32 0
  %x1150 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1149, i32 0, i32 0
  %542 = load i32, i32* %x1150, align 4, !tbaa !155
  %sub1151 = sub nsw i32 %539, %542
  %sub1152 = sub nsw i32 0, %sub1151
  br label %cond.end.1165

cond.false.1153:                                  ; preds = %cond.true.1127
  %543 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1154 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %543, i32 0, i32 0
  %arrayidx1155 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1154, i32 0, i64 0
  %arrayidx1156 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1155, i32 0, i64 0
  %544 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1156, align 8, !tbaa !1
  %p1157 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %544, i32 0, i32 0
  %x1158 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1157, i32 0, i32 0
  %545 = load i32, i32* %x1158, align 4, !tbaa !155
  %546 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1159 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %546, i32 0, i32 0
  %arrayidx1160 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1159, i32 0, i64 1
  %arrayidx1161 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1160, i32 0, i64 0
  %547 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1161, align 8, !tbaa !1
  %p1162 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %547, i32 0, i32 0
  %x1163 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1162, i32 0, i32 0
  %548 = load i32, i32* %x1163, align 4, !tbaa !155
  %sub1164 = sub nsw i32 %545, %548
  br label %cond.end.1165

cond.end.1165:                                    ; preds = %cond.false.1153, %cond.true.1140
  %cond1166 = phi i32 [ %sub1152, %cond.true.1140 ], [ %sub1164, %cond.false.1153 ]
  br label %cond.end.1207

cond.false.1167:                                  ; preds = %cond.end.1124
  %549 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1168 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %549, i32 0, i32 0
  %arrayidx1169 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1168, i32 0, i64 0
  %arrayidx1170 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1169, i32 0, i64 1
  %550 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1170, align 8, !tbaa !1
  %p1171 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %550, i32 0, i32 0
  %x1172 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1171, i32 0, i32 0
  %551 = load i32, i32* %x1172, align 4, !tbaa !155
  %552 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1173 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %552, i32 0, i32 0
  %arrayidx1174 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1173, i32 0, i64 1
  %arrayidx1175 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1174, i32 0, i64 1
  %553 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1175, align 8, !tbaa !1
  %p1176 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %553, i32 0, i32 0
  %x1177 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1176, i32 0, i32 0
  %554 = load i32, i32* %x1177, align 4, !tbaa !155
  %sub1178 = sub nsw i32 %551, %554
  %cmp1179 = icmp slt i32 %sub1178, 0
  br i1 %cmp1179, label %cond.true.1180, label %cond.false.1193

cond.true.1180:                                   ; preds = %cond.false.1167
  %555 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1181 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %555, i32 0, i32 0
  %arrayidx1182 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1181, i32 0, i64 0
  %arrayidx1183 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1182, i32 0, i64 1
  %556 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1183, align 8, !tbaa !1
  %p1184 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %556, i32 0, i32 0
  %x1185 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1184, i32 0, i32 0
  %557 = load i32, i32* %x1185, align 4, !tbaa !155
  %558 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1186 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %558, i32 0, i32 0
  %arrayidx1187 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1186, i32 0, i64 1
  %arrayidx1188 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1187, i32 0, i64 1
  %559 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1188, align 8, !tbaa !1
  %p1189 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %559, i32 0, i32 0
  %x1190 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1189, i32 0, i32 0
  %560 = load i32, i32* %x1190, align 4, !tbaa !155
  %sub1191 = sub nsw i32 %557, %560
  %sub1192 = sub nsw i32 0, %sub1191
  br label %cond.end.1205

cond.false.1193:                                  ; preds = %cond.false.1167
  %561 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1194 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %561, i32 0, i32 0
  %arrayidx1195 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1194, i32 0, i64 0
  %arrayidx1196 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1195, i32 0, i64 1
  %562 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1196, align 8, !tbaa !1
  %p1197 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %562, i32 0, i32 0
  %x1198 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1197, i32 0, i32 0
  %563 = load i32, i32* %x1198, align 4, !tbaa !155
  %564 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1199 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %564, i32 0, i32 0
  %arrayidx1200 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1199, i32 0, i64 1
  %arrayidx1201 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1200, i32 0, i64 1
  %565 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1201, align 8, !tbaa !1
  %p1202 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %565, i32 0, i32 0
  %x1203 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1202, i32 0, i32 0
  %566 = load i32, i32* %x1203, align 4, !tbaa !155
  %sub1204 = sub nsw i32 %563, %566
  br label %cond.end.1205

cond.end.1205:                                    ; preds = %cond.false.1193, %cond.true.1180
  %cond1206 = phi i32 [ %sub1192, %cond.true.1180 ], [ %sub1204, %cond.false.1193 ]
  br label %cond.end.1207

cond.end.1207:                                    ; preds = %cond.end.1205, %cond.end.1165
  %cond1208 = phi i32 [ %cond1166, %cond.end.1165 ], [ %cond1206, %cond.end.1205 ]
  br label %cond.end.1371

cond.false.1209:                                  ; preds = %cond.end.1044
  %567 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1210 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %567, i32 0, i32 0
  %arrayidx1211 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1210, i32 0, i64 0
  %arrayidx1212 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1211, i32 0, i64 0
  %568 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1212, align 8, !tbaa !1
  %p1213 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %568, i32 0, i32 0
  %y1214 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1213, i32 0, i32 1
  %569 = load i32, i32* %y1214, align 4, !tbaa !156
  %570 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1215 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %570, i32 0, i32 0
  %arrayidx1216 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1215, i32 0, i64 1
  %arrayidx1217 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1216, i32 0, i64 0
  %571 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1217, align 8, !tbaa !1
  %p1218 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %571, i32 0, i32 0
  %y1219 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1218, i32 0, i32 1
  %572 = load i32, i32* %y1219, align 4, !tbaa !156
  %sub1220 = sub nsw i32 %569, %572
  %cmp1221 = icmp slt i32 %sub1220, 0
  br i1 %cmp1221, label %cond.true.1222, label %cond.false.1235

cond.true.1222:                                   ; preds = %cond.false.1209
  %573 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1223 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %573, i32 0, i32 0
  %arrayidx1224 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1223, i32 0, i64 0
  %arrayidx1225 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1224, i32 0, i64 0
  %574 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1225, align 8, !tbaa !1
  %p1226 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %574, i32 0, i32 0
  %y1227 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1226, i32 0, i32 1
  %575 = load i32, i32* %y1227, align 4, !tbaa !156
  %576 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1228 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %576, i32 0, i32 0
  %arrayidx1229 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1228, i32 0, i64 1
  %arrayidx1230 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1229, i32 0, i64 0
  %577 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1230, align 8, !tbaa !1
  %p1231 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %577, i32 0, i32 0
  %y1232 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1231, i32 0, i32 1
  %578 = load i32, i32* %y1232, align 4, !tbaa !156
  %sub1233 = sub nsw i32 %575, %578
  %sub1234 = sub nsw i32 0, %sub1233
  br label %cond.end.1247

cond.false.1235:                                  ; preds = %cond.false.1209
  %579 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1236 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %579, i32 0, i32 0
  %arrayidx1237 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1236, i32 0, i64 0
  %arrayidx1238 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1237, i32 0, i64 0
  %580 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1238, align 8, !tbaa !1
  %p1239 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %580, i32 0, i32 0
  %y1240 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1239, i32 0, i32 1
  %581 = load i32, i32* %y1240, align 4, !tbaa !156
  %582 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1241 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %582, i32 0, i32 0
  %arrayidx1242 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1241, i32 0, i64 1
  %arrayidx1243 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1242, i32 0, i64 0
  %583 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1243, align 8, !tbaa !1
  %p1244 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %583, i32 0, i32 0
  %y1245 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1244, i32 0, i32 1
  %584 = load i32, i32* %y1245, align 4, !tbaa !156
  %sub1246 = sub nsw i32 %581, %584
  br label %cond.end.1247

cond.end.1247:                                    ; preds = %cond.false.1235, %cond.true.1222
  %cond1248 = phi i32 [ %sub1234, %cond.true.1222 ], [ %sub1246, %cond.false.1235 ]
  %585 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1249 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %585, i32 0, i32 0
  %arrayidx1250 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1249, i32 0, i64 0
  %arrayidx1251 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1250, i32 0, i64 1
  %586 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1251, align 8, !tbaa !1
  %p1252 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %586, i32 0, i32 0
  %y1253 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1252, i32 0, i32 1
  %587 = load i32, i32* %y1253, align 4, !tbaa !156
  %588 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1254 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %588, i32 0, i32 0
  %arrayidx1255 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1254, i32 0, i64 1
  %arrayidx1256 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1255, i32 0, i64 1
  %589 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1256, align 8, !tbaa !1
  %p1257 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %589, i32 0, i32 0
  %y1258 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1257, i32 0, i32 1
  %590 = load i32, i32* %y1258, align 4, !tbaa !156
  %sub1259 = sub nsw i32 %587, %590
  %cmp1260 = icmp slt i32 %sub1259, 0
  br i1 %cmp1260, label %cond.true.1261, label %cond.false.1274

cond.true.1261:                                   ; preds = %cond.end.1247
  %591 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1262 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %591, i32 0, i32 0
  %arrayidx1263 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1262, i32 0, i64 0
  %arrayidx1264 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1263, i32 0, i64 1
  %592 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1264, align 8, !tbaa !1
  %p1265 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %592, i32 0, i32 0
  %y1266 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1265, i32 0, i32 1
  %593 = load i32, i32* %y1266, align 4, !tbaa !156
  %594 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1267 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %594, i32 0, i32 0
  %arrayidx1268 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1267, i32 0, i64 1
  %arrayidx1269 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1268, i32 0, i64 1
  %595 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1269, align 8, !tbaa !1
  %p1270 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %595, i32 0, i32 0
  %y1271 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1270, i32 0, i32 1
  %596 = load i32, i32* %y1271, align 4, !tbaa !156
  %sub1272 = sub nsw i32 %593, %596
  %sub1273 = sub nsw i32 0, %sub1272
  br label %cond.end.1286

cond.false.1274:                                  ; preds = %cond.end.1247
  %597 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1275 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %597, i32 0, i32 0
  %arrayidx1276 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1275, i32 0, i64 0
  %arrayidx1277 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1276, i32 0, i64 1
  %598 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1277, align 8, !tbaa !1
  %p1278 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %598, i32 0, i32 0
  %y1279 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1278, i32 0, i32 1
  %599 = load i32, i32* %y1279, align 4, !tbaa !156
  %600 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1280 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %600, i32 0, i32 0
  %arrayidx1281 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1280, i32 0, i64 1
  %arrayidx1282 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1281, i32 0, i64 1
  %601 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1282, align 8, !tbaa !1
  %p1283 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %601, i32 0, i32 0
  %y1284 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1283, i32 0, i32 1
  %602 = load i32, i32* %y1284, align 4, !tbaa !156
  %sub1285 = sub nsw i32 %599, %602
  br label %cond.end.1286

cond.end.1286:                                    ; preds = %cond.false.1274, %cond.true.1261
  %cond1287 = phi i32 [ %sub1273, %cond.true.1261 ], [ %sub1285, %cond.false.1274 ]
  %cmp1288 = icmp sgt i32 %cond1248, %cond1287
  br i1 %cmp1288, label %cond.true.1289, label %cond.false.1329

cond.true.1289:                                   ; preds = %cond.end.1286
  %603 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1290 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %603, i32 0, i32 0
  %arrayidx1291 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1290, i32 0, i64 0
  %arrayidx1292 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1291, i32 0, i64 0
  %604 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1292, align 8, !tbaa !1
  %p1293 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %604, i32 0, i32 0
  %y1294 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1293, i32 0, i32 1
  %605 = load i32, i32* %y1294, align 4, !tbaa !156
  %606 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1295 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %606, i32 0, i32 0
  %arrayidx1296 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1295, i32 0, i64 1
  %arrayidx1297 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1296, i32 0, i64 0
  %607 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1297, align 8, !tbaa !1
  %p1298 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %607, i32 0, i32 0
  %y1299 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1298, i32 0, i32 1
  %608 = load i32, i32* %y1299, align 4, !tbaa !156
  %sub1300 = sub nsw i32 %605, %608
  %cmp1301 = icmp slt i32 %sub1300, 0
  br i1 %cmp1301, label %cond.true.1302, label %cond.false.1315

cond.true.1302:                                   ; preds = %cond.true.1289
  %609 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1303 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %609, i32 0, i32 0
  %arrayidx1304 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1303, i32 0, i64 0
  %arrayidx1305 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1304, i32 0, i64 0
  %610 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1305, align 8, !tbaa !1
  %p1306 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %610, i32 0, i32 0
  %y1307 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1306, i32 0, i32 1
  %611 = load i32, i32* %y1307, align 4, !tbaa !156
  %612 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1308 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %612, i32 0, i32 0
  %arrayidx1309 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1308, i32 0, i64 1
  %arrayidx1310 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1309, i32 0, i64 0
  %613 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1310, align 8, !tbaa !1
  %p1311 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %613, i32 0, i32 0
  %y1312 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1311, i32 0, i32 1
  %614 = load i32, i32* %y1312, align 4, !tbaa !156
  %sub1313 = sub nsw i32 %611, %614
  %sub1314 = sub nsw i32 0, %sub1313
  br label %cond.end.1327

cond.false.1315:                                  ; preds = %cond.true.1289
  %615 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1316 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %615, i32 0, i32 0
  %arrayidx1317 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1316, i32 0, i64 0
  %arrayidx1318 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1317, i32 0, i64 0
  %616 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1318, align 8, !tbaa !1
  %p1319 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %616, i32 0, i32 0
  %y1320 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1319, i32 0, i32 1
  %617 = load i32, i32* %y1320, align 4, !tbaa !156
  %618 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1321 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %618, i32 0, i32 0
  %arrayidx1322 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1321, i32 0, i64 1
  %arrayidx1323 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1322, i32 0, i64 0
  %619 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1323, align 8, !tbaa !1
  %p1324 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %619, i32 0, i32 0
  %y1325 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1324, i32 0, i32 1
  %620 = load i32, i32* %y1325, align 4, !tbaa !156
  %sub1326 = sub nsw i32 %617, %620
  br label %cond.end.1327

cond.end.1327:                                    ; preds = %cond.false.1315, %cond.true.1302
  %cond1328 = phi i32 [ %sub1314, %cond.true.1302 ], [ %sub1326, %cond.false.1315 ]
  br label %cond.end.1369

cond.false.1329:                                  ; preds = %cond.end.1286
  %621 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1330 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %621, i32 0, i32 0
  %arrayidx1331 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1330, i32 0, i64 0
  %arrayidx1332 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1331, i32 0, i64 1
  %622 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1332, align 8, !tbaa !1
  %p1333 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %622, i32 0, i32 0
  %y1334 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1333, i32 0, i32 1
  %623 = load i32, i32* %y1334, align 4, !tbaa !156
  %624 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1335 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %624, i32 0, i32 0
  %arrayidx1336 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1335, i32 0, i64 1
  %arrayidx1337 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1336, i32 0, i64 1
  %625 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1337, align 8, !tbaa !1
  %p1338 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %625, i32 0, i32 0
  %y1339 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1338, i32 0, i32 1
  %626 = load i32, i32* %y1339, align 4, !tbaa !156
  %sub1340 = sub nsw i32 %623, %626
  %cmp1341 = icmp slt i32 %sub1340, 0
  br i1 %cmp1341, label %cond.true.1342, label %cond.false.1355

cond.true.1342:                                   ; preds = %cond.false.1329
  %627 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1343 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %627, i32 0, i32 0
  %arrayidx1344 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1343, i32 0, i64 0
  %arrayidx1345 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1344, i32 0, i64 1
  %628 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1345, align 8, !tbaa !1
  %p1346 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %628, i32 0, i32 0
  %y1347 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1346, i32 0, i32 1
  %629 = load i32, i32* %y1347, align 4, !tbaa !156
  %630 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1348 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %630, i32 0, i32 0
  %arrayidx1349 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1348, i32 0, i64 1
  %arrayidx1350 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1349, i32 0, i64 1
  %631 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1350, align 8, !tbaa !1
  %p1351 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %631, i32 0, i32 0
  %y1352 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1351, i32 0, i32 1
  %632 = load i32, i32* %y1352, align 4, !tbaa !156
  %sub1353 = sub nsw i32 %629, %632
  %sub1354 = sub nsw i32 0, %sub1353
  br label %cond.end.1367

cond.false.1355:                                  ; preds = %cond.false.1329
  %633 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1356 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %633, i32 0, i32 0
  %arrayidx1357 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1356, i32 0, i64 0
  %arrayidx1358 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1357, i32 0, i64 1
  %634 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1358, align 8, !tbaa !1
  %p1359 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %634, i32 0, i32 0
  %y1360 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1359, i32 0, i32 1
  %635 = load i32, i32* %y1360, align 4, !tbaa !156
  %636 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1361 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %636, i32 0, i32 0
  %arrayidx1362 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1361, i32 0, i64 1
  %arrayidx1363 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1362, i32 0, i64 1
  %637 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1363, align 8, !tbaa !1
  %p1364 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %637, i32 0, i32 0
  %y1365 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1364, i32 0, i32 1
  %638 = load i32, i32* %y1365, align 4, !tbaa !156
  %sub1366 = sub nsw i32 %635, %638
  br label %cond.end.1367

cond.end.1367:                                    ; preds = %cond.false.1355, %cond.true.1342
  %cond1368 = phi i32 [ %sub1354, %cond.true.1342 ], [ %sub1366, %cond.false.1355 ]
  br label %cond.end.1369

cond.end.1369:                                    ; preds = %cond.end.1367, %cond.end.1327
  %cond1370 = phi i32 [ %cond1328, %cond.end.1327 ], [ %cond1368, %cond.end.1367 ]
  br label %cond.end.1371

cond.end.1371:                                    ; preds = %cond.end.1369, %cond.end.1207
  %cond1372 = phi i32 [ %cond1208, %cond.end.1207 ], [ %cond1370, %cond.end.1369 ]
  store i32 %cond1372, i32* %size_v, align 4, !tbaa !5
  store i32 0, i32* %big1, align 4, !tbaa !5
  %639 = bitcast i32* %size_v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %639) #2
  %640 = bitcast i32* %size_u to i8*
  call void @llvm.lifetime.end(i64 4, i8* %640) #2
  br label %if.end.1373

if.end.1373:                                      ; preds = %cond.end.1371, %if.end.77
  %641 = load i32, i32* %big1, align 4, !tbaa !5
  %tobool1374 = icmp ne i32 %641, 0
  br i1 %tobool1374, label %if.end.1922, label %if.then.1375

if.then.1375:                                     ; preds = %if.end.1373
  %642 = bitcast i32* %is_big_u to i8*
  call void @llvm.lifetime.start(i64 4, i8* %642) #2
  store i32 0, i32* %is_big_u, align 4, !tbaa !5
  %643 = bitcast i32* %is_big_v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %643) #2
  store i32 0, i32* %is_big_v, align 4, !tbaa !5
  %644 = bitcast double* %d0001x to i8*
  call void @llvm.lifetime.start(i64 8, i8* %644) #2
  %645 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1376 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %645, i32 0, i32 0
  %arrayidx1377 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1376, i32 0, i64 0
  %arrayidx1378 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1377, i32 0, i64 0
  %646 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1378, align 8, !tbaa !1
  %p1379 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %646, i32 0, i32 0
  %x1380 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1379, i32 0, i32 0
  %647 = load i32, i32* %x1380, align 4, !tbaa !155
  %648 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1381 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %648, i32 0, i32 0
  %arrayidx1382 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1381, i32 0, i64 0
  %arrayidx1383 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1382, i32 0, i64 1
  %649 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1383, align 8, !tbaa !1
  %p1384 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %649, i32 0, i32 0
  %x1385 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1384, i32 0, i32 0
  %650 = load i32, i32* %x1385, align 4, !tbaa !155
  %sub1386 = sub nsw i32 %647, %650
  %cmp1387 = icmp slt i32 %sub1386, 0
  br i1 %cmp1387, label %cond.true.1388, label %cond.false.1401

cond.true.1388:                                   ; preds = %if.then.1375
  %651 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1389 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %651, i32 0, i32 0
  %arrayidx1390 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1389, i32 0, i64 0
  %arrayidx1391 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1390, i32 0, i64 0
  %652 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1391, align 8, !tbaa !1
  %p1392 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %652, i32 0, i32 0
  %x1393 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1392, i32 0, i32 0
  %653 = load i32, i32* %x1393, align 4, !tbaa !155
  %654 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1394 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %654, i32 0, i32 0
  %arrayidx1395 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1394, i32 0, i64 0
  %arrayidx1396 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1395, i32 0, i64 1
  %655 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1396, align 8, !tbaa !1
  %p1397 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %655, i32 0, i32 0
  %x1398 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1397, i32 0, i32 0
  %656 = load i32, i32* %x1398, align 4, !tbaa !155
  %sub1399 = sub nsw i32 %653, %656
  %sub1400 = sub nsw i32 0, %sub1399
  br label %cond.end.1413

cond.false.1401:                                  ; preds = %if.then.1375
  %657 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1402 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %657, i32 0, i32 0
  %arrayidx1403 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1402, i32 0, i64 0
  %arrayidx1404 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1403, i32 0, i64 0
  %658 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1404, align 8, !tbaa !1
  %p1405 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %658, i32 0, i32 0
  %x1406 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1405, i32 0, i32 0
  %659 = load i32, i32* %x1406, align 4, !tbaa !155
  %660 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1407 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %660, i32 0, i32 0
  %arrayidx1408 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1407, i32 0, i64 0
  %arrayidx1409 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1408, i32 0, i64 1
  %661 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1409, align 8, !tbaa !1
  %p1410 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %661, i32 0, i32 0
  %x1411 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1410, i32 0, i32 0
  %662 = load i32, i32* %x1411, align 4, !tbaa !155
  %sub1412 = sub nsw i32 %659, %662
  br label %cond.end.1413

cond.end.1413:                                    ; preds = %cond.false.1401, %cond.true.1388
  %cond1414 = phi i32 [ %sub1400, %cond.true.1388 ], [ %sub1412, %cond.false.1401 ]
  %conv = sitofp i32 %cond1414 to double
  store double %conv, double* %d0001x, align 8, !tbaa !112
  %663 = bitcast double* %d1011x to i8*
  call void @llvm.lifetime.start(i64 8, i8* %663) #2
  %664 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1415 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %664, i32 0, i32 0
  %arrayidx1416 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1415, i32 0, i64 1
  %arrayidx1417 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1416, i32 0, i64 0
  %665 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1417, align 8, !tbaa !1
  %p1418 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %665, i32 0, i32 0
  %x1419 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1418, i32 0, i32 0
  %666 = load i32, i32* %x1419, align 4, !tbaa !155
  %667 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1420 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %667, i32 0, i32 0
  %arrayidx1421 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1420, i32 0, i64 1
  %arrayidx1422 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1421, i32 0, i64 1
  %668 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1422, align 8, !tbaa !1
  %p1423 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %668, i32 0, i32 0
  %x1424 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1423, i32 0, i32 0
  %669 = load i32, i32* %x1424, align 4, !tbaa !155
  %sub1425 = sub nsw i32 %666, %669
  %cmp1426 = icmp slt i32 %sub1425, 0
  br i1 %cmp1426, label %cond.true.1428, label %cond.false.1441

cond.true.1428:                                   ; preds = %cond.end.1413
  %670 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1429 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %670, i32 0, i32 0
  %arrayidx1430 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1429, i32 0, i64 1
  %arrayidx1431 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1430, i32 0, i64 0
  %671 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1431, align 8, !tbaa !1
  %p1432 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %671, i32 0, i32 0
  %x1433 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1432, i32 0, i32 0
  %672 = load i32, i32* %x1433, align 4, !tbaa !155
  %673 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1434 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %673, i32 0, i32 0
  %arrayidx1435 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1434, i32 0, i64 1
  %arrayidx1436 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1435, i32 0, i64 1
  %674 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1436, align 8, !tbaa !1
  %p1437 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %674, i32 0, i32 0
  %x1438 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1437, i32 0, i32 0
  %675 = load i32, i32* %x1438, align 4, !tbaa !155
  %sub1439 = sub nsw i32 %672, %675
  %sub1440 = sub nsw i32 0, %sub1439
  br label %cond.end.1453

cond.false.1441:                                  ; preds = %cond.end.1413
  %676 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1442 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %676, i32 0, i32 0
  %arrayidx1443 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1442, i32 0, i64 1
  %arrayidx1444 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1443, i32 0, i64 0
  %677 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1444, align 8, !tbaa !1
  %p1445 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %677, i32 0, i32 0
  %x1446 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1445, i32 0, i32 0
  %678 = load i32, i32* %x1446, align 4, !tbaa !155
  %679 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1447 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %679, i32 0, i32 0
  %arrayidx1448 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1447, i32 0, i64 1
  %arrayidx1449 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1448, i32 0, i64 1
  %680 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1449, align 8, !tbaa !1
  %p1450 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %680, i32 0, i32 0
  %x1451 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1450, i32 0, i32 0
  %681 = load i32, i32* %x1451, align 4, !tbaa !155
  %sub1452 = sub nsw i32 %678, %681
  br label %cond.end.1453

cond.end.1453:                                    ; preds = %cond.false.1441, %cond.true.1428
  %cond1454 = phi i32 [ %sub1440, %cond.true.1428 ], [ %sub1452, %cond.false.1441 ]
  %conv1455 = sitofp i32 %cond1454 to double
  store double %conv1455, double* %d1011x, align 8, !tbaa !112
  %682 = bitcast double* %d0001y to i8*
  call void @llvm.lifetime.start(i64 8, i8* %682) #2
  %683 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1456 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %683, i32 0, i32 0
  %arrayidx1457 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1456, i32 0, i64 0
  %arrayidx1458 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1457, i32 0, i64 0
  %684 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1458, align 8, !tbaa !1
  %p1459 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %684, i32 0, i32 0
  %y1460 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1459, i32 0, i32 1
  %685 = load i32, i32* %y1460, align 4, !tbaa !156
  %686 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1461 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %686, i32 0, i32 0
  %arrayidx1462 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1461, i32 0, i64 0
  %arrayidx1463 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1462, i32 0, i64 1
  %687 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1463, align 8, !tbaa !1
  %p1464 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %687, i32 0, i32 0
  %y1465 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1464, i32 0, i32 1
  %688 = load i32, i32* %y1465, align 4, !tbaa !156
  %sub1466 = sub nsw i32 %685, %688
  %cmp1467 = icmp slt i32 %sub1466, 0
  br i1 %cmp1467, label %cond.true.1469, label %cond.false.1482

cond.true.1469:                                   ; preds = %cond.end.1453
  %689 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1470 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %689, i32 0, i32 0
  %arrayidx1471 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1470, i32 0, i64 0
  %arrayidx1472 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1471, i32 0, i64 0
  %690 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1472, align 8, !tbaa !1
  %p1473 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %690, i32 0, i32 0
  %y1474 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1473, i32 0, i32 1
  %691 = load i32, i32* %y1474, align 4, !tbaa !156
  %692 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1475 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %692, i32 0, i32 0
  %arrayidx1476 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1475, i32 0, i64 0
  %arrayidx1477 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1476, i32 0, i64 1
  %693 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1477, align 8, !tbaa !1
  %p1478 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %693, i32 0, i32 0
  %y1479 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1478, i32 0, i32 1
  %694 = load i32, i32* %y1479, align 4, !tbaa !156
  %sub1480 = sub nsw i32 %691, %694
  %sub1481 = sub nsw i32 0, %sub1480
  br label %cond.end.1494

cond.false.1482:                                  ; preds = %cond.end.1453
  %695 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1483 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %695, i32 0, i32 0
  %arrayidx1484 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1483, i32 0, i64 0
  %arrayidx1485 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1484, i32 0, i64 0
  %696 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1485, align 8, !tbaa !1
  %p1486 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %696, i32 0, i32 0
  %y1487 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1486, i32 0, i32 1
  %697 = load i32, i32* %y1487, align 4, !tbaa !156
  %698 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1488 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %698, i32 0, i32 0
  %arrayidx1489 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1488, i32 0, i64 0
  %arrayidx1490 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1489, i32 0, i64 1
  %699 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1490, align 8, !tbaa !1
  %p1491 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %699, i32 0, i32 0
  %y1492 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1491, i32 0, i32 1
  %700 = load i32, i32* %y1492, align 4, !tbaa !156
  %sub1493 = sub nsw i32 %697, %700
  br label %cond.end.1494

cond.end.1494:                                    ; preds = %cond.false.1482, %cond.true.1469
  %cond1495 = phi i32 [ %sub1481, %cond.true.1469 ], [ %sub1493, %cond.false.1482 ]
  %conv1496 = sitofp i32 %cond1495 to double
  store double %conv1496, double* %d0001y, align 8, !tbaa !112
  %701 = bitcast double* %d1011y to i8*
  call void @llvm.lifetime.start(i64 8, i8* %701) #2
  %702 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1497 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %702, i32 0, i32 0
  %arrayidx1498 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1497, i32 0, i64 1
  %arrayidx1499 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1498, i32 0, i64 0
  %703 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1499, align 8, !tbaa !1
  %p1500 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %703, i32 0, i32 0
  %y1501 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1500, i32 0, i32 1
  %704 = load i32, i32* %y1501, align 4, !tbaa !156
  %705 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1502 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %705, i32 0, i32 0
  %arrayidx1503 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1502, i32 0, i64 1
  %arrayidx1504 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1503, i32 0, i64 1
  %706 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1504, align 8, !tbaa !1
  %p1505 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %706, i32 0, i32 0
  %y1506 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1505, i32 0, i32 1
  %707 = load i32, i32* %y1506, align 4, !tbaa !156
  %sub1507 = sub nsw i32 %704, %707
  %cmp1508 = icmp slt i32 %sub1507, 0
  br i1 %cmp1508, label %cond.true.1510, label %cond.false.1523

cond.true.1510:                                   ; preds = %cond.end.1494
  %708 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1511 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %708, i32 0, i32 0
  %arrayidx1512 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1511, i32 0, i64 1
  %arrayidx1513 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1512, i32 0, i64 0
  %709 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1513, align 8, !tbaa !1
  %p1514 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %709, i32 0, i32 0
  %y1515 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1514, i32 0, i32 1
  %710 = load i32, i32* %y1515, align 4, !tbaa !156
  %711 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1516 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %711, i32 0, i32 0
  %arrayidx1517 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1516, i32 0, i64 1
  %arrayidx1518 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1517, i32 0, i64 1
  %712 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1518, align 8, !tbaa !1
  %p1519 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %712, i32 0, i32 0
  %y1520 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1519, i32 0, i32 1
  %713 = load i32, i32* %y1520, align 4, !tbaa !156
  %sub1521 = sub nsw i32 %710, %713
  %sub1522 = sub nsw i32 0, %sub1521
  br label %cond.end.1535

cond.false.1523:                                  ; preds = %cond.end.1494
  %714 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1524 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %714, i32 0, i32 0
  %arrayidx1525 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1524, i32 0, i64 1
  %arrayidx1526 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1525, i32 0, i64 0
  %715 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1526, align 8, !tbaa !1
  %p1527 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %715, i32 0, i32 0
  %y1528 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1527, i32 0, i32 1
  %716 = load i32, i32* %y1528, align 4, !tbaa !156
  %717 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1529 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %717, i32 0, i32 0
  %arrayidx1530 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1529, i32 0, i64 1
  %arrayidx1531 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1530, i32 0, i64 1
  %718 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1531, align 8, !tbaa !1
  %p1532 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %718, i32 0, i32 0
  %y1533 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1532, i32 0, i32 1
  %719 = load i32, i32* %y1533, align 4, !tbaa !156
  %sub1534 = sub nsw i32 %716, %719
  br label %cond.end.1535

cond.end.1535:                                    ; preds = %cond.false.1523, %cond.true.1510
  %cond1536 = phi i32 [ %sub1522, %cond.true.1510 ], [ %sub1534, %cond.false.1523 ]
  %conv1537 = sitofp i32 %cond1536 to double
  store double %conv1537, double* %d1011y, align 8, !tbaa !112
  %720 = bitcast double* %d0010x to i8*
  call void @llvm.lifetime.start(i64 8, i8* %720) #2
  %721 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1538 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %721, i32 0, i32 0
  %arrayidx1539 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1538, i32 0, i64 0
  %arrayidx1540 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1539, i32 0, i64 0
  %722 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1540, align 8, !tbaa !1
  %p1541 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %722, i32 0, i32 0
  %x1542 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1541, i32 0, i32 0
  %723 = load i32, i32* %x1542, align 4, !tbaa !155
  %724 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1543 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %724, i32 0, i32 0
  %arrayidx1544 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1543, i32 0, i64 1
  %arrayidx1545 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1544, i32 0, i64 0
  %725 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1545, align 8, !tbaa !1
  %p1546 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %725, i32 0, i32 0
  %x1547 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1546, i32 0, i32 0
  %726 = load i32, i32* %x1547, align 4, !tbaa !155
  %sub1548 = sub nsw i32 %723, %726
  %cmp1549 = icmp slt i32 %sub1548, 0
  br i1 %cmp1549, label %cond.true.1551, label %cond.false.1564

cond.true.1551:                                   ; preds = %cond.end.1535
  %727 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1552 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %727, i32 0, i32 0
  %arrayidx1553 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1552, i32 0, i64 0
  %arrayidx1554 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1553, i32 0, i64 0
  %728 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1554, align 8, !tbaa !1
  %p1555 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %728, i32 0, i32 0
  %x1556 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1555, i32 0, i32 0
  %729 = load i32, i32* %x1556, align 4, !tbaa !155
  %730 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1557 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %730, i32 0, i32 0
  %arrayidx1558 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1557, i32 0, i64 1
  %arrayidx1559 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1558, i32 0, i64 0
  %731 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1559, align 8, !tbaa !1
  %p1560 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %731, i32 0, i32 0
  %x1561 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1560, i32 0, i32 0
  %732 = load i32, i32* %x1561, align 4, !tbaa !155
  %sub1562 = sub nsw i32 %729, %732
  %sub1563 = sub nsw i32 0, %sub1562
  br label %cond.end.1576

cond.false.1564:                                  ; preds = %cond.end.1535
  %733 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1565 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %733, i32 0, i32 0
  %arrayidx1566 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1565, i32 0, i64 0
  %arrayidx1567 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1566, i32 0, i64 0
  %734 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1567, align 8, !tbaa !1
  %p1568 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %734, i32 0, i32 0
  %x1569 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1568, i32 0, i32 0
  %735 = load i32, i32* %x1569, align 4, !tbaa !155
  %736 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1570 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %736, i32 0, i32 0
  %arrayidx1571 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1570, i32 0, i64 1
  %arrayidx1572 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1571, i32 0, i64 0
  %737 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1572, align 8, !tbaa !1
  %p1573 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %737, i32 0, i32 0
  %x1574 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1573, i32 0, i32 0
  %738 = load i32, i32* %x1574, align 4, !tbaa !155
  %sub1575 = sub nsw i32 %735, %738
  br label %cond.end.1576

cond.end.1576:                                    ; preds = %cond.false.1564, %cond.true.1551
  %cond1577 = phi i32 [ %sub1563, %cond.true.1551 ], [ %sub1575, %cond.false.1564 ]
  %conv1578 = sitofp i32 %cond1577 to double
  store double %conv1578, double* %d0010x, align 8, !tbaa !112
  %739 = bitcast double* %d0111x to i8*
  call void @llvm.lifetime.start(i64 8, i8* %739) #2
  %740 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1579 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %740, i32 0, i32 0
  %arrayidx1580 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1579, i32 0, i64 0
  %arrayidx1581 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1580, i32 0, i64 1
  %741 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1581, align 8, !tbaa !1
  %p1582 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %741, i32 0, i32 0
  %x1583 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1582, i32 0, i32 0
  %742 = load i32, i32* %x1583, align 4, !tbaa !155
  %743 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1584 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %743, i32 0, i32 0
  %arrayidx1585 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1584, i32 0, i64 1
  %arrayidx1586 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1585, i32 0, i64 1
  %744 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1586, align 8, !tbaa !1
  %p1587 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %744, i32 0, i32 0
  %x1588 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1587, i32 0, i32 0
  %745 = load i32, i32* %x1588, align 4, !tbaa !155
  %sub1589 = sub nsw i32 %742, %745
  %cmp1590 = icmp slt i32 %sub1589, 0
  br i1 %cmp1590, label %cond.true.1592, label %cond.false.1605

cond.true.1592:                                   ; preds = %cond.end.1576
  %746 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1593 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %746, i32 0, i32 0
  %arrayidx1594 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1593, i32 0, i64 0
  %arrayidx1595 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1594, i32 0, i64 1
  %747 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1595, align 8, !tbaa !1
  %p1596 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %747, i32 0, i32 0
  %x1597 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1596, i32 0, i32 0
  %748 = load i32, i32* %x1597, align 4, !tbaa !155
  %749 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1598 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %749, i32 0, i32 0
  %arrayidx1599 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1598, i32 0, i64 1
  %arrayidx1600 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1599, i32 0, i64 1
  %750 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1600, align 8, !tbaa !1
  %p1601 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %750, i32 0, i32 0
  %x1602 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1601, i32 0, i32 0
  %751 = load i32, i32* %x1602, align 4, !tbaa !155
  %sub1603 = sub nsw i32 %748, %751
  %sub1604 = sub nsw i32 0, %sub1603
  br label %cond.end.1617

cond.false.1605:                                  ; preds = %cond.end.1576
  %752 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1606 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %752, i32 0, i32 0
  %arrayidx1607 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1606, i32 0, i64 0
  %arrayidx1608 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1607, i32 0, i64 1
  %753 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1608, align 8, !tbaa !1
  %p1609 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %753, i32 0, i32 0
  %x1610 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1609, i32 0, i32 0
  %754 = load i32, i32* %x1610, align 4, !tbaa !155
  %755 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1611 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %755, i32 0, i32 0
  %arrayidx1612 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1611, i32 0, i64 1
  %arrayidx1613 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1612, i32 0, i64 1
  %756 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1613, align 8, !tbaa !1
  %p1614 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %756, i32 0, i32 0
  %x1615 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1614, i32 0, i32 0
  %757 = load i32, i32* %x1615, align 4, !tbaa !155
  %sub1616 = sub nsw i32 %754, %757
  br label %cond.end.1617

cond.end.1617:                                    ; preds = %cond.false.1605, %cond.true.1592
  %cond1618 = phi i32 [ %sub1604, %cond.true.1592 ], [ %sub1616, %cond.false.1605 ]
  %conv1619 = sitofp i32 %cond1618 to double
  store double %conv1619, double* %d0111x, align 8, !tbaa !112
  %758 = bitcast double* %d0010y to i8*
  call void @llvm.lifetime.start(i64 8, i8* %758) #2
  %759 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1620 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %759, i32 0, i32 0
  %arrayidx1621 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1620, i32 0, i64 0
  %arrayidx1622 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1621, i32 0, i64 0
  %760 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1622, align 8, !tbaa !1
  %p1623 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %760, i32 0, i32 0
  %y1624 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1623, i32 0, i32 1
  %761 = load i32, i32* %y1624, align 4, !tbaa !156
  %762 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1625 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %762, i32 0, i32 0
  %arrayidx1626 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1625, i32 0, i64 1
  %arrayidx1627 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1626, i32 0, i64 0
  %763 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1627, align 8, !tbaa !1
  %p1628 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %763, i32 0, i32 0
  %y1629 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1628, i32 0, i32 1
  %764 = load i32, i32* %y1629, align 4, !tbaa !156
  %sub1630 = sub nsw i32 %761, %764
  %cmp1631 = icmp slt i32 %sub1630, 0
  br i1 %cmp1631, label %cond.true.1633, label %cond.false.1646

cond.true.1633:                                   ; preds = %cond.end.1617
  %765 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1634 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %765, i32 0, i32 0
  %arrayidx1635 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1634, i32 0, i64 0
  %arrayidx1636 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1635, i32 0, i64 0
  %766 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1636, align 8, !tbaa !1
  %p1637 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %766, i32 0, i32 0
  %y1638 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1637, i32 0, i32 1
  %767 = load i32, i32* %y1638, align 4, !tbaa !156
  %768 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1639 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %768, i32 0, i32 0
  %arrayidx1640 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1639, i32 0, i64 1
  %arrayidx1641 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1640, i32 0, i64 0
  %769 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1641, align 8, !tbaa !1
  %p1642 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %769, i32 0, i32 0
  %y1643 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1642, i32 0, i32 1
  %770 = load i32, i32* %y1643, align 4, !tbaa !156
  %sub1644 = sub nsw i32 %767, %770
  %sub1645 = sub nsw i32 0, %sub1644
  br label %cond.end.1658

cond.false.1646:                                  ; preds = %cond.end.1617
  %771 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1647 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %771, i32 0, i32 0
  %arrayidx1648 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1647, i32 0, i64 0
  %arrayidx1649 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1648, i32 0, i64 0
  %772 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1649, align 8, !tbaa !1
  %p1650 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %772, i32 0, i32 0
  %y1651 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1650, i32 0, i32 1
  %773 = load i32, i32* %y1651, align 4, !tbaa !156
  %774 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1652 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %774, i32 0, i32 0
  %arrayidx1653 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1652, i32 0, i64 1
  %arrayidx1654 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1653, i32 0, i64 0
  %775 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1654, align 8, !tbaa !1
  %p1655 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %775, i32 0, i32 0
  %y1656 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1655, i32 0, i32 1
  %776 = load i32, i32* %y1656, align 4, !tbaa !156
  %sub1657 = sub nsw i32 %773, %776
  br label %cond.end.1658

cond.end.1658:                                    ; preds = %cond.false.1646, %cond.true.1633
  %cond1659 = phi i32 [ %sub1645, %cond.true.1633 ], [ %sub1657, %cond.false.1646 ]
  %conv1660 = sitofp i32 %cond1659 to double
  store double %conv1660, double* %d0010y, align 8, !tbaa !112
  %777 = bitcast double* %d0111y to i8*
  call void @llvm.lifetime.start(i64 8, i8* %777) #2
  %778 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1661 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %778, i32 0, i32 0
  %arrayidx1662 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1661, i32 0, i64 0
  %arrayidx1663 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1662, i32 0, i64 1
  %779 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1663, align 8, !tbaa !1
  %p1664 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %779, i32 0, i32 0
  %y1665 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1664, i32 0, i32 1
  %780 = load i32, i32* %y1665, align 4, !tbaa !156
  %781 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1666 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %781, i32 0, i32 0
  %arrayidx1667 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1666, i32 0, i64 1
  %arrayidx1668 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1667, i32 0, i64 1
  %782 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1668, align 8, !tbaa !1
  %p1669 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %782, i32 0, i32 0
  %y1670 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1669, i32 0, i32 1
  %783 = load i32, i32* %y1670, align 4, !tbaa !156
  %sub1671 = sub nsw i32 %780, %783
  %cmp1672 = icmp slt i32 %sub1671, 0
  br i1 %cmp1672, label %cond.true.1674, label %cond.false.1687

cond.true.1674:                                   ; preds = %cond.end.1658
  %784 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1675 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %784, i32 0, i32 0
  %arrayidx1676 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1675, i32 0, i64 0
  %arrayidx1677 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1676, i32 0, i64 1
  %785 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1677, align 8, !tbaa !1
  %p1678 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %785, i32 0, i32 0
  %y1679 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1678, i32 0, i32 1
  %786 = load i32, i32* %y1679, align 4, !tbaa !156
  %787 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1680 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %787, i32 0, i32 0
  %arrayidx1681 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1680, i32 0, i64 1
  %arrayidx1682 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1681, i32 0, i64 1
  %788 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1682, align 8, !tbaa !1
  %p1683 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %788, i32 0, i32 0
  %y1684 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1683, i32 0, i32 1
  %789 = load i32, i32* %y1684, align 4, !tbaa !156
  %sub1685 = sub nsw i32 %786, %789
  %sub1686 = sub nsw i32 0, %sub1685
  br label %cond.end.1699

cond.false.1687:                                  ; preds = %cond.end.1658
  %790 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1688 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %790, i32 0, i32 0
  %arrayidx1689 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1688, i32 0, i64 0
  %arrayidx1690 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1689, i32 0, i64 1
  %791 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1690, align 8, !tbaa !1
  %p1691 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %791, i32 0, i32 0
  %y1692 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1691, i32 0, i32 1
  %792 = load i32, i32* %y1692, align 4, !tbaa !156
  %793 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1693 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %793, i32 0, i32 0
  %arrayidx1694 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1693, i32 0, i64 1
  %arrayidx1695 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1694, i32 0, i64 1
  %794 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1695, align 8, !tbaa !1
  %p1696 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %794, i32 0, i32 0
  %y1697 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1696, i32 0, i32 1
  %795 = load i32, i32* %y1697, align 4, !tbaa !156
  %sub1698 = sub nsw i32 %792, %795
  br label %cond.end.1699

cond.end.1699:                                    ; preds = %cond.false.1687, %cond.true.1674
  %cond1700 = phi i32 [ %sub1686, %cond.true.1674 ], [ %sub1698, %cond.false.1687 ]
  %conv1701 = sitofp i32 %cond1700 to double
  store double %conv1701, double* %d0111y, align 8, !tbaa !112
  %796 = bitcast double* %size_u1702 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %796) #2
  %797 = load double, double* %d0001x, align 8, !tbaa !112
  %798 = load double, double* %d1011x, align 8, !tbaa !112
  %cmp1703 = fcmp ogt double %797, %798
  br i1 %cmp1703, label %cond.true.1705, label %cond.false.1706

cond.true.1705:                                   ; preds = %cond.end.1699
  %799 = load double, double* %d0001x, align 8, !tbaa !112
  br label %cond.end.1707

cond.false.1706:                                  ; preds = %cond.end.1699
  %800 = load double, double* %d1011x, align 8, !tbaa !112
  br label %cond.end.1707

cond.end.1707:                                    ; preds = %cond.false.1706, %cond.true.1705
  %cond1708 = phi double [ %799, %cond.true.1705 ], [ %800, %cond.false.1706 ]
  %801 = load double, double* %d0001y, align 8, !tbaa !112
  %802 = load double, double* %d1011y, align 8, !tbaa !112
  %cmp1709 = fcmp ogt double %801, %802
  br i1 %cmp1709, label %cond.true.1711, label %cond.false.1712

cond.true.1711:                                   ; preds = %cond.end.1707
  %803 = load double, double* %d0001y, align 8, !tbaa !112
  br label %cond.end.1713

cond.false.1712:                                  ; preds = %cond.end.1707
  %804 = load double, double* %d1011y, align 8, !tbaa !112
  br label %cond.end.1713

cond.end.1713:                                    ; preds = %cond.false.1712, %cond.true.1711
  %cond1714 = phi double [ %803, %cond.true.1711 ], [ %804, %cond.false.1712 ]
  %cmp1715 = fcmp ogt double %cond1708, %cond1714
  br i1 %cmp1715, label %cond.true.1717, label %cond.false.1724

cond.true.1717:                                   ; preds = %cond.end.1713
  %805 = load double, double* %d0001x, align 8, !tbaa !112
  %806 = load double, double* %d1011x, align 8, !tbaa !112
  %cmp1718 = fcmp ogt double %805, %806
  br i1 %cmp1718, label %cond.true.1720, label %cond.false.1721

cond.true.1720:                                   ; preds = %cond.true.1717
  %807 = load double, double* %d0001x, align 8, !tbaa !112
  br label %cond.end.1722

cond.false.1721:                                  ; preds = %cond.true.1717
  %808 = load double, double* %d1011x, align 8, !tbaa !112
  br label %cond.end.1722

cond.end.1722:                                    ; preds = %cond.false.1721, %cond.true.1720
  %cond1723 = phi double [ %807, %cond.true.1720 ], [ %808, %cond.false.1721 ]
  br label %cond.end.1731

cond.false.1724:                                  ; preds = %cond.end.1713
  %809 = load double, double* %d0001y, align 8, !tbaa !112
  %810 = load double, double* %d1011y, align 8, !tbaa !112
  %cmp1725 = fcmp ogt double %809, %810
  br i1 %cmp1725, label %cond.true.1727, label %cond.false.1728

cond.true.1727:                                   ; preds = %cond.false.1724
  %811 = load double, double* %d0001y, align 8, !tbaa !112
  br label %cond.end.1729

cond.false.1728:                                  ; preds = %cond.false.1724
  %812 = load double, double* %d1011y, align 8, !tbaa !112
  br label %cond.end.1729

cond.end.1729:                                    ; preds = %cond.false.1728, %cond.true.1727
  %cond1730 = phi double [ %811, %cond.true.1727 ], [ %812, %cond.false.1728 ]
  br label %cond.end.1731

cond.end.1731:                                    ; preds = %cond.end.1729, %cond.end.1722
  %cond1732 = phi double [ %cond1723, %cond.end.1722 ], [ %cond1730, %cond.end.1729 ]
  store double %cond1732, double* %size_u1702, align 8, !tbaa !112
  %813 = bitcast double* %size_v1733 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %813) #2
  %814 = load double, double* %d0010x, align 8, !tbaa !112
  %815 = load double, double* %d0111x, align 8, !tbaa !112
  %cmp1734 = fcmp ogt double %814, %815
  br i1 %cmp1734, label %cond.true.1736, label %cond.false.1737

cond.true.1736:                                   ; preds = %cond.end.1731
  %816 = load double, double* %d0010x, align 8, !tbaa !112
  br label %cond.end.1738

cond.false.1737:                                  ; preds = %cond.end.1731
  %817 = load double, double* %d0111x, align 8, !tbaa !112
  br label %cond.end.1738

cond.end.1738:                                    ; preds = %cond.false.1737, %cond.true.1736
  %cond1739 = phi double [ %816, %cond.true.1736 ], [ %817, %cond.false.1737 ]
  %818 = load double, double* %d0010y, align 8, !tbaa !112
  %819 = load double, double* %d0111y, align 8, !tbaa !112
  %cmp1740 = fcmp ogt double %818, %819
  br i1 %cmp1740, label %cond.true.1742, label %cond.false.1743

cond.true.1742:                                   ; preds = %cond.end.1738
  %820 = load double, double* %d0010y, align 8, !tbaa !112
  br label %cond.end.1744

cond.false.1743:                                  ; preds = %cond.end.1738
  %821 = load double, double* %d0111y, align 8, !tbaa !112
  br label %cond.end.1744

cond.end.1744:                                    ; preds = %cond.false.1743, %cond.true.1742
  %cond1745 = phi double [ %820, %cond.true.1742 ], [ %821, %cond.false.1743 ]
  %cmp1746 = fcmp ogt double %cond1739, %cond1745
  br i1 %cmp1746, label %cond.true.1748, label %cond.false.1755

cond.true.1748:                                   ; preds = %cond.end.1744
  %822 = load double, double* %d0010x, align 8, !tbaa !112
  %823 = load double, double* %d0111x, align 8, !tbaa !112
  %cmp1749 = fcmp ogt double %822, %823
  br i1 %cmp1749, label %cond.true.1751, label %cond.false.1752

cond.true.1751:                                   ; preds = %cond.true.1748
  %824 = load double, double* %d0010x, align 8, !tbaa !112
  br label %cond.end.1753

cond.false.1752:                                  ; preds = %cond.true.1748
  %825 = load double, double* %d0111x, align 8, !tbaa !112
  br label %cond.end.1753

cond.end.1753:                                    ; preds = %cond.false.1752, %cond.true.1751
  %cond1754 = phi double [ %824, %cond.true.1751 ], [ %825, %cond.false.1752 ]
  br label %cond.end.1762

cond.false.1755:                                  ; preds = %cond.end.1744
  %826 = load double, double* %d0010y, align 8, !tbaa !112
  %827 = load double, double* %d0111y, align 8, !tbaa !112
  %cmp1756 = fcmp ogt double %826, %827
  br i1 %cmp1756, label %cond.true.1758, label %cond.false.1759

cond.true.1758:                                   ; preds = %cond.false.1755
  %828 = load double, double* %d0010y, align 8, !tbaa !112
  br label %cond.end.1760

cond.false.1759:                                  ; preds = %cond.false.1755
  %829 = load double, double* %d0111y, align 8, !tbaa !112
  br label %cond.end.1760

cond.end.1760:                                    ; preds = %cond.false.1759, %cond.true.1758
  %cond1761 = phi double [ %828, %cond.true.1758 ], [ %829, %cond.false.1759 ]
  br label %cond.end.1762

cond.end.1762:                                    ; preds = %cond.end.1760, %cond.end.1753
  %cond1763 = phi double [ %cond1754, %cond.end.1753 ], [ %cond1761, %cond.end.1760 ]
  store double %cond1763, double* %size_v1733, align 8, !tbaa !112
  %830 = load double, double* %size_u1702, align 8, !tbaa !112
  %831 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %831, i32 0, i32 19
  %832 = load i32, i32* %decomposition_limit, align 4, !tbaa !34
  %conv1764 = sitofp i32 %832 to double
  %cmp1765 = fcmp ogt double %830, %conv1764
  br i1 %cmp1765, label %if.then.1767, label %if.end.1768

if.then.1767:                                     ; preds = %cond.end.1762
  store i32 1, i32* %is_big_u, align 4, !tbaa !5
  br label %if.end.1768

if.end.1768:                                      ; preds = %if.then.1767, %cond.end.1762
  %833 = load double, double* %size_v1733, align 8, !tbaa !112
  %834 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %decomposition_limit1769 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %834, i32 0, i32 19
  %835 = load i32, i32* %decomposition_limit1769, align 4, !tbaa !34
  %conv1770 = sitofp i32 %835 to double
  %cmp1771 = fcmp ogt double %833, %conv1770
  br i1 %cmp1771, label %if.then.1773, label %if.else

if.then.1773:                                     ; preds = %if.end.1768
  store i32 1, i32* %is_big_v, align 4, !tbaa !5
  br label %if.end.1780

if.else:                                          ; preds = %if.end.1768
  %836 = load i32, i32* %is_big_u, align 4, !tbaa !5
  %tobool1774 = icmp ne i32 %836, 0
  br i1 %tobool1774, label %if.end.1779, label %if.then.1775

if.then.1775:                                     ; preds = %if.else
  %837 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %837, i32 0, i32 22
  %838 = load i32, i32* %maybe_self_intersecting, align 4, !tbaa !27
  %tobool1776 = icmp ne i32 %838, 0
  %lnot = xor i1 %tobool1776, true
  %cond1777 = select i1 %lnot, i32 (%struct.patch_fill_state_s*, %struct.quadrangle_patch*, i32)* @constant_color_quadrangle, i32 (%struct.patch_fill_state_s*, %struct.quadrangle_patch*, i32)* @triangles4
  %839 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %840 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %841 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting1778 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %841, i32 0, i32 22
  %842 = load i32, i32* %maybe_self_intersecting1778, align 4, !tbaa !27
  %call = call i32 %cond1777(%struct.patch_fill_state_s* %839, %struct.quadrangle_patch* %840, i32 %842) #5
  store i32 %call, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1908

if.end.1779:                                      ; preds = %if.else
  br label %if.end.1780

if.end.1780:                                      ; preds = %if.end.1779, %if.then.1773
  %843 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color1781 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %843, i32 0, i32 23
  %844 = load i32, i32* %monotonic_color1781, align 4, !tbaa !29
  %tobool1782 = icmp ne i32 %844, 0
  br i1 %tobool1782, label %if.end.1801, label %if.then.1783

if.then.1783:                                     ; preds = %if.end.1780
  %845 = bitcast i32* %not_monotonic_by_u to i8*
  call void @llvm.lifetime.start(i64 4, i8* %845) #2
  store i32 0, i32* %not_monotonic_by_u, align 4, !tbaa !5
  %846 = bitcast i32* %not_monotonic_by_v to i8*
  call void @llvm.lifetime.start(i64 4, i8* %846) #2
  store i32 0, i32* %not_monotonic_by_v, align 4, !tbaa !5
  %847 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %848 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %call1784 = call i32 @is_quadrangle_color_monotonic(%struct.patch_fill_state_s* %847, %struct.quadrangle_patch* %848, i32* %not_monotonic_by_u, i32* %not_monotonic_by_v) #5
  store i32 %call1784, i32* %code, align 4, !tbaa !5
  %849 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1785 = icmp slt i32 %849, 0
  br i1 %cmp1785, label %if.then.1787, label %if.end.1788

if.then.1787:                                     ; preds = %if.then.1783
  %850 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %850, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1788:                                      ; preds = %if.then.1783
  %851 = load i32, i32* %is_big_u, align 4, !tbaa !5
  %tobool1789 = icmp ne i32 %851, 0
  br i1 %tobool1789, label %if.then.1790, label %if.end.1791

if.then.1790:                                     ; preds = %if.end.1788
  %852 = load i32, i32* %not_monotonic_by_u, align 4, !tbaa !5
  store i32 %852, i32* %divide_u, align 4, !tbaa !5
  br label %if.end.1791

if.end.1791:                                      ; preds = %if.then.1790, %if.end.1788
  %853 = load i32, i32* %is_big_v, align 4, !tbaa !5
  %tobool1792 = icmp ne i32 %853, 0
  br i1 %tobool1792, label %if.then.1793, label %if.end.1794

if.then.1793:                                     ; preds = %if.end.1791
  %854 = load i32, i32* %not_monotonic_by_v, align 4, !tbaa !5
  store i32 %854, i32* %divide_v, align 4, !tbaa !5
  br label %if.end.1794

if.end.1794:                                      ; preds = %if.then.1793, %if.end.1791
  %855 = load i32, i32* %divide_u, align 4, !tbaa !5
  %tobool1795 = icmp ne i32 %855, 0
  br i1 %tobool1795, label %if.end.1799, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.1794
  %856 = load i32, i32* %divide_v, align 4, !tbaa !5
  %tobool1796 = icmp ne i32 %856, 0
  br i1 %tobool1796, label %if.end.1799, label %if.then.1797

if.then.1797:                                     ; preds = %land.lhs.true
  %857 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color1798 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %857, i32 0, i32 23
  store i32 1, i32* %monotonic_color1798, align 4, !tbaa !29
  br label %if.end.1799

if.end.1799:                                      ; preds = %if.then.1797, %land.lhs.true, %if.end.1794
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.1799, %if.then.1787
  %858 = bitcast i32* %not_monotonic_by_v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %858) #2
  %859 = bitcast i32* %not_monotonic_by_u to i8*
  call void @llvm.lifetime.end(i64 4, i8* %859) #2
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.1908 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.1801

if.end.1801:                                      ; preds = %cleanup.cont, %if.end.1780
  %860 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color1802 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %860, i32 0, i32 23
  %861 = load i32, i32* %monotonic_color1802, align 4, !tbaa !29
  %tobool1803 = icmp ne i32 %861, 0
  br i1 %tobool1803, label %land.lhs.true.1804, label %if.end.1883

land.lhs.true.1804:                               ; preds = %if.end.1801
  %862 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color1805 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %862, i32 0, i32 24
  %863 = load i32, i32* %linear_color1805, align 4, !tbaa !31
  %tobool1806 = icmp ne i32 %863, 0
  br i1 %tobool1806, label %if.end.1883, label %if.then.1807

if.then.1807:                                     ; preds = %land.lhs.true.1804
  %864 = load i32, i32* %divide_v, align 4, !tbaa !5
  %tobool1808 = icmp ne i32 %864, 0
  br i1 %tobool1808, label %land.lhs.true.1809, label %if.else.1817

land.lhs.true.1809:                               ; preds = %if.then.1807
  %865 = load i32, i32* %divide_u, align 4, !tbaa !5
  %tobool1810 = icmp ne i32 %865, 0
  br i1 %tobool1810, label %if.then.1811, label %if.else.1817

if.then.1811:                                     ; preds = %land.lhs.true.1809
  %866 = load double, double* %size_u1702, align 8, !tbaa !112
  %867 = load double, double* %size_v1733, align 8, !tbaa !112
  %cmp1812 = fcmp ogt double %866, %867
  br i1 %cmp1812, label %if.then.1814, label %if.else.1815

if.then.1814:                                     ; preds = %if.then.1811
  store i32 0, i32* %divide_v, align 4, !tbaa !5
  br label %if.end.1816

if.else.1815:                                     ; preds = %if.then.1811
  store i32 0, i32* %divide_u, align 4, !tbaa !5
  br label %if.end.1816

if.end.1816:                                      ; preds = %if.else.1815, %if.then.1814
  br label %if.end.1876

if.else.1817:                                     ; preds = %land.lhs.true.1809, %if.then.1807
  %868 = load i32, i32* %divide_u, align 4, !tbaa !5
  %tobool1818 = icmp ne i32 %868, 0
  br i1 %tobool1818, label %if.end.1875, label %land.lhs.true.1819

land.lhs.true.1819:                               ; preds = %if.else.1817
  %869 = load i32, i32* %divide_v, align 4, !tbaa !5
  %tobool1820 = icmp ne i32 %869, 0
  br i1 %tobool1820, label %if.end.1875, label %land.lhs.true.1821

land.lhs.true.1821:                               ; preds = %land.lhs.true.1819
  %870 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %870, i32 0, i32 25
  %871 = load i32, i32* %unlinear, align 4, !tbaa !53
  %tobool1822 = icmp ne i32 %871, 0
  br i1 %tobool1822, label %if.end.1875, label %if.then.1823

if.then.1823:                                     ; preds = %land.lhs.true.1821
  %872 = load double, double* %d0001x, align 8, !tbaa !112
  %873 = load double, double* %d1011x, align 8, !tbaa !112
  %add = fadd double %872, %873
  %874 = load double, double* %d0001y, align 8, !tbaa !112
  %add1824 = fadd double %add, %874
  %875 = load double, double* %d1011y, align 8, !tbaa !112
  %add1825 = fadd double %add1824, %875
  %876 = load double, double* %d0010x, align 8, !tbaa !112
  %877 = load double, double* %d0111x, align 8, !tbaa !112
  %add1826 = fadd double %876, %877
  %878 = load double, double* %d0010y, align 8, !tbaa !112
  %add1827 = fadd double %add1826, %878
  %879 = load double, double* %d0111y, align 8, !tbaa !112
  %add1828 = fadd double %add1827, %879
  %cmp1829 = fcmp ogt double %add1825, %add1828
  br i1 %cmp1829, label %if.then.1831, label %if.end.1839

if.then.1831:                                     ; preds = %if.then.1823
  %880 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %881 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %call1832 = call i32 @is_quadrangle_color_linear_by_u(%struct.patch_fill_state_s* %880, %struct.quadrangle_patch* %881) #5
  store i32 %call1832, i32* %code, align 4, !tbaa !5
  %882 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1833 = icmp slt i32 %882, 0
  br i1 %cmp1833, label %if.then.1835, label %if.end.1836

if.then.1835:                                     ; preds = %if.then.1831
  %883 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %883, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1908

if.end.1836:                                      ; preds = %if.then.1831
  %884 = load i32, i32* %code, align 4, !tbaa !5
  %tobool1837 = icmp ne i32 %884, 0
  %lnot1838 = xor i1 %tobool1837, true
  %lnot.ext = zext i1 %lnot1838 to i32
  store i32 %lnot.ext, i32* %divide_u, align 4, !tbaa !5
  br label %if.end.1839

if.end.1839:                                      ; preds = %if.end.1836, %if.then.1823
  %885 = load i32, i32* %is_big_v, align 4, !tbaa !5
  %tobool1840 = icmp ne i32 %885, 0
  br i1 %tobool1840, label %if.then.1841, label %if.end.1850

if.then.1841:                                     ; preds = %if.end.1839
  %886 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %887 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %call1842 = call i32 @is_quadrangle_color_linear_by_v(%struct.patch_fill_state_s* %886, %struct.quadrangle_patch* %887) #5
  store i32 %call1842, i32* %code, align 4, !tbaa !5
  %888 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1843 = icmp slt i32 %888, 0
  br i1 %cmp1843, label %if.then.1845, label %if.end.1846

if.then.1845:                                     ; preds = %if.then.1841
  %889 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %889, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1908

if.end.1846:                                      ; preds = %if.then.1841
  %890 = load i32, i32* %code, align 4, !tbaa !5
  %tobool1847 = icmp ne i32 %890, 0
  %lnot1848 = xor i1 %tobool1847, true
  %lnot.ext1849 = zext i1 %lnot1848 to i32
  store i32 %lnot.ext1849, i32* %divide_v, align 4, !tbaa !5
  br label %if.end.1850

if.end.1850:                                      ; preds = %if.end.1846, %if.end.1839
  %891 = load i32, i32* %is_big_u, align 4, !tbaa !5
  %tobool1851 = icmp ne i32 %891, 0
  br i1 %tobool1851, label %land.lhs.true.1852, label %if.end.1874

land.lhs.true.1852:                               ; preds = %if.end.1850
  %892 = load i32, i32* %is_big_v, align 4, !tbaa !5
  %tobool1853 = icmp ne i32 %892, 0
  br i1 %tobool1853, label %if.then.1854, label %if.end.1874

if.then.1854:                                     ; preds = %land.lhs.true.1852
  %893 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %894 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %call1855 = call i32 @is_quadrangle_color_linear_by_diagonals(%struct.patch_fill_state_s* %893, %struct.quadrangle_patch* %894) #5
  store i32 %call1855, i32* %code, align 4, !tbaa !5
  %895 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1856 = icmp slt i32 %895, 0
  br i1 %cmp1856, label %if.then.1858, label %if.end.1859

if.then.1858:                                     ; preds = %if.then.1854
  %896 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %896, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1908

if.end.1859:                                      ; preds = %if.then.1854
  %897 = load i32, i32* %code, align 4, !tbaa !5
  %tobool1860 = icmp ne i32 %897, 0
  br i1 %tobool1860, label %if.end.1873, label %if.then.1861

if.then.1861:                                     ; preds = %if.end.1859
  %898 = load double, double* %d0001x, align 8, !tbaa !112
  %899 = load double, double* %d1011x, align 8, !tbaa !112
  %add1862 = fadd double %898, %899
  %900 = load double, double* %d0001y, align 8, !tbaa !112
  %add1863 = fadd double %add1862, %900
  %901 = load double, double* %d1011y, align 8, !tbaa !112
  %add1864 = fadd double %add1863, %901
  %902 = load double, double* %d0010x, align 8, !tbaa !112
  %903 = load double, double* %d0111x, align 8, !tbaa !112
  %add1865 = fadd double %902, %903
  %904 = load double, double* %d0010y, align 8, !tbaa !112
  %add1866 = fadd double %add1865, %904
  %905 = load double, double* %d0111y, align 8, !tbaa !112
  %add1867 = fadd double %add1866, %905
  %cmp1868 = fcmp ogt double %add1864, %add1867
  br i1 %cmp1868, label %if.then.1870, label %if.else.1871

if.then.1870:                                     ; preds = %if.then.1861
  store i32 1, i32* %divide_u, align 4, !tbaa !5
  store i32 0, i32* %divide_v, align 4, !tbaa !5
  br label %if.end.1872

if.else.1871:                                     ; preds = %if.then.1861
  store i32 1, i32* %divide_v, align 4, !tbaa !5
  store i32 0, i32* %divide_u, align 4, !tbaa !5
  br label %if.end.1872

if.end.1872:                                      ; preds = %if.else.1871, %if.then.1870
  br label %if.end.1873

if.end.1873:                                      ; preds = %if.end.1872, %if.end.1859
  br label %if.end.1874

if.end.1874:                                      ; preds = %if.end.1873, %land.lhs.true.1852, %if.end.1850
  br label %if.end.1875

if.end.1875:                                      ; preds = %if.end.1874, %land.lhs.true.1821, %land.lhs.true.1819, %if.else.1817
  br label %if.end.1876

if.end.1876:                                      ; preds = %if.end.1875, %if.end.1816
  %906 = load i32, i32* %divide_u, align 4, !tbaa !5
  %tobool1877 = icmp ne i32 %906, 0
  br i1 %tobool1877, label %if.end.1882, label %land.lhs.true.1878

land.lhs.true.1878:                               ; preds = %if.end.1876
  %907 = load i32, i32* %divide_v, align 4, !tbaa !5
  %tobool1879 = icmp ne i32 %907, 0
  br i1 %tobool1879, label %if.end.1882, label %if.then.1880

if.then.1880:                                     ; preds = %land.lhs.true.1878
  %908 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color1881 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %908, i32 0, i32 24
  store i32 1, i32* %linear_color1881, align 4, !tbaa !31
  br label %if.end.1882

if.end.1882:                                      ; preds = %if.then.1880, %land.lhs.true.1878, %if.end.1876
  br label %if.end.1883

if.end.1883:                                      ; preds = %if.end.1882, %land.lhs.true.1804, %if.end.1801
  %909 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color1884 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %909, i32 0, i32 24
  %910 = load i32, i32* %linear_color1884, align 4, !tbaa !31
  %tobool1885 = icmp ne i32 %910, 0
  br i1 %tobool1885, label %if.else.1887, label %if.then.1886

if.then.1886:                                     ; preds = %if.end.1883
  br label %if.end.1907

if.else.1887:                                     ; preds = %if.end.1883
  %911 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %912 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %913 = load i32, i32* %is_big_u, align 4, !tbaa !5
  %914 = load i32, i32* %is_big_v, align 4, !tbaa !5
  %915 = load double, double* %size_u1702, align 8, !tbaa !112
  %916 = load double, double* %size_v1733, align 8, !tbaa !112
  %call1888 = call i32 @quadrangle_color_change(%struct.patch_fill_state_s* %911, %struct.quadrangle_patch* %912, i32 %913, i32 %914, double %915, double %916, i32* %divide_u, i32* %divide_v) #5
  switch i32 %call1888, label %sw.epilog [
    i32 0, label %sw.bb
    i32 3, label %sw.bb.1898
    i32 2, label %sw.bb.1902
    i32 1, label %sw.bb.1906
    i32 4, label %sw.bb.1906
  ]

sw.bb:                                            ; preds = %if.else.1887
  %917 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting1889 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %917, i32 0, i32 22
  %918 = load i32, i32* %maybe_self_intersecting1889, align 4, !tbaa !27
  %tobool1890 = icmp ne i32 %918, 0
  %lnot1891 = xor i1 %tobool1890, true
  %cond1893 = select i1 %lnot1891, i32 (%struct.patch_fill_state_s*, %struct.quadrangle_patch*, i32)* @constant_color_quadrangle, i32 (%struct.patch_fill_state_s*, %struct.quadrangle_patch*, i32)* @triangles4
  %919 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %920 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %921 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting1894 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %921, i32 0, i32 22
  %922 = load i32, i32* %maybe_self_intersecting1894, align 4, !tbaa !27
  %call1895 = call i32 %cond1893(%struct.patch_fill_state_s* %919, %struct.quadrangle_patch* %920, i32 %922) #5
  store i32 %call1895, i32* %code, align 4, !tbaa !5
  %923 = load i32, i32* %monotonic_color_save, align 4, !tbaa !5
  %924 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color1896 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %924, i32 0, i32 23
  store i32 %923, i32* %monotonic_color1896, align 4, !tbaa !29
  %925 = load i32, i32* %linear_color_save, align 4, !tbaa !5
  %926 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color1897 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %926, i32 0, i32 24
  store i32 %925, i32* %linear_color1897, align 4, !tbaa !31
  %927 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %927, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1908

sw.bb.1898:                                       ; preds = %if.else.1887
  %928 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %929 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %call1899 = call i32 @triangles4(%struct.patch_fill_state_s* %928, %struct.quadrangle_patch* %929, i32 1) #5
  store i32 %call1899, i32* %code, align 4, !tbaa !5
  %930 = load i32, i32* %monotonic_color_save, align 4, !tbaa !5
  %931 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color1900 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %931, i32 0, i32 23
  store i32 %930, i32* %monotonic_color1900, align 4, !tbaa !29
  %932 = load i32, i32* %linear_color_save, align 4, !tbaa !5
  %933 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color1901 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %933, i32 0, i32 24
  store i32 %932, i32* %linear_color1901, align 4, !tbaa !31
  %934 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %934, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1908

sw.bb.1902:                                       ; preds = %if.else.1887
  %935 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %936 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %call1903 = call i32 @triangles2(%struct.patch_fill_state_s* %935, %struct.quadrangle_patch* %936, i32 1) #5
  store i32 %call1903, i32* %code, align 4, !tbaa !5
  %937 = load i32, i32* %monotonic_color_save, align 4, !tbaa !5
  %938 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color1904 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %938, i32 0, i32 23
  store i32 %937, i32* %monotonic_color1904, align 4, !tbaa !29
  %939 = load i32, i32* %linear_color_save, align 4, !tbaa !5
  %940 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color1905 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %940, i32 0, i32 24
  store i32 %939, i32* %linear_color1905, align 4, !tbaa !31
  %941 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %941, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.1908

sw.bb.1906:                                       ; preds = %if.else.1887, %if.else.1887
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb.1906, %if.else.1887
  br label %if.end.1907

if.end.1907:                                      ; preds = %sw.epilog, %if.then.1886
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.1908

cleanup.1908:                                     ; preds = %if.end.1907, %sw.bb.1902, %sw.bb.1898, %sw.bb, %if.then.1858, %if.then.1845, %if.then.1835, %cleanup, %if.then.1775
  %942 = bitcast double* %size_v1733 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %942) #2
  %943 = bitcast double* %size_u1702 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %943) #2
  %944 = bitcast double* %d0111y to i8*
  call void @llvm.lifetime.end(i64 8, i8* %944) #2
  %945 = bitcast double* %d0010y to i8*
  call void @llvm.lifetime.end(i64 8, i8* %945) #2
  %946 = bitcast double* %d0111x to i8*
  call void @llvm.lifetime.end(i64 8, i8* %946) #2
  %947 = bitcast double* %d0010x to i8*
  call void @llvm.lifetime.end(i64 8, i8* %947) #2
  %948 = bitcast double* %d1011y to i8*
  call void @llvm.lifetime.end(i64 8, i8* %948) #2
  %949 = bitcast double* %d0001y to i8*
  call void @llvm.lifetime.end(i64 8, i8* %949) #2
  %950 = bitcast double* %d1011x to i8*
  call void @llvm.lifetime.end(i64 8, i8* %950) #2
  %951 = bitcast double* %d0001x to i8*
  call void @llvm.lifetime.end(i64 8, i8* %951) #2
  %952 = bitcast i32* %is_big_v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %952) #2
  %953 = bitcast i32* %is_big_u to i8*
  call void @llvm.lifetime.end(i64 4, i8* %953) #2
  %cleanup.dest.1920 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1920, label %cleanup.2206 [
    i32 0, label %cleanup.cont.1921
  ]

cleanup.cont.1921:                                ; preds = %cleanup.1908
  br label %if.end.1922

if.end.1922:                                      ; preds = %cleanup.cont.1921, %if.end.1373
  %954 = load i32, i32* %inside1, align 4, !tbaa !5
  %tobool1923 = icmp ne i32 %954, 0
  br i1 %tobool1923, label %if.end.1955, label %if.then.1924

if.then.1924:                                     ; preds = %if.end.1922
  %p1925 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %x1926 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1925, i32 0, i32 0
  %955 = load i32, i32* %x1926, align 4, !tbaa !134
  %p1927 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %x1928 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1927, i32 0, i32 0
  %956 = load i32, i32* %x1928, align 4, !tbaa !134
  %cmp1929 = icmp eq i32 %955, %956
  br i1 %cmp1929, label %land.lhs.true.1931, label %if.end.1954

land.lhs.true.1931:                               ; preds = %if.then.1924
  %p1932 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 0
  %y1933 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1932, i32 0, i32 1
  %957 = load i32, i32* %y1933, align 4, !tbaa !133
  %p1934 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 0
  %y1935 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p1934, i32 0, i32 1
  %958 = load i32, i32* %y1935, align 4, !tbaa !133
  %cmp1936 = icmp eq i32 %957, %958
  br i1 %cmp1936, label %land.lhs.true.1938, label %if.end.1954

land.lhs.true.1938:                               ; preds = %land.lhs.true.1931
  %q1939 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %x1940 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1939, i32 0, i32 0
  %959 = load i32, i32* %x1940, align 4, !tbaa !136
  %q1941 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %x1942 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1941, i32 0, i32 0
  %960 = load i32, i32* %x1942, align 4, !tbaa !136
  %cmp1943 = icmp eq i32 %959, %960
  br i1 %cmp1943, label %land.lhs.true.1945, label %if.end.1954

land.lhs.true.1945:                               ; preds = %land.lhs.true.1938
  %q1946 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r, i32 0, i32 1
  %y1947 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1946, i32 0, i32 1
  %961 = load i32, i32* %y1947, align 4, !tbaa !135
  %q1948 = getelementptr inbounds %struct.gs_fixed_rect_s, %struct.gs_fixed_rect_s* %r1, i32 0, i32 1
  %y1949 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %q1948, i32 0, i32 1
  %962 = load i32, i32* %y1949, align 4, !tbaa !135
  %cmp1950 = icmp eq i32 %961, %962
  br i1 %cmp1950, label %if.then.1952, label %if.end.1954

if.then.1952:                                     ; preds = %land.lhs.true.1945
  %963 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside1953 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %963, i32 0, i32 26
  store i32 1, i32* %inside1953, align 4, !tbaa !32
  br label %if.end.1954

if.end.1954:                                      ; preds = %if.then.1952, %land.lhs.true.1945, %land.lhs.true.1938, %land.lhs.true.1931, %if.then.1924
  br label %if.end.1955

if.end.1955:                                      ; preds = %if.end.1954, %if.end.1922
  call void @init_wedge_vertex_list(%struct.wedge_vertex_list_t* %l0, i32 1) #5
  %964 = load i32, i32* %divide_v, align 4, !tbaa !5
  %tobool1956 = icmp ne i32 %964, 0
  br i1 %tobool1956, label %if.then.1957, label %if.else.2070

if.then.1957:                                     ; preds = %if.end.1955
  %965 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 16, i8* %965) #2
  %966 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %966) #2
  %967 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call1958 = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %967, %struct.patch_color_s** %arraydecay, i32 2) #5
  store i8* %call1958, i8** %color_stack_ptr, align 8, !tbaa !1
  %968 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp1959 = icmp eq i8* %968, null
  br i1 %cmp1959, label %if.then.1961, label %if.end.1962

if.then.1961:                                     ; preds = %if.then.1957
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.2066

if.end.1962:                                      ; preds = %if.then.1957
  %arrayidx1963 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %969 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx1963, align 8, !tbaa !1
  %arrayidx1964 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %q, i32 0, i64 0
  %c1965 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx1964, i32 0, i32 1
  store %struct.patch_color_s* %969, %struct.patch_color_s** %c1965, align 8, !tbaa !150
  %arrayidx1966 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %970 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx1966, align 8, !tbaa !1
  %arrayidx1967 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %q, i32 0, i64 1
  %c1968 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx1967, i32 0, i32 1
  store %struct.patch_color_s* %970, %struct.patch_color_s** %c1968, align 8, !tbaa !150
  %971 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay1969 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %q, i32 0, i32 0
  %972 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %arraydecay1970 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c, i32 0, i32 0
  call void @divide_quadrangle_by_v(%struct.patch_fill_state_s* %971, %struct.quadrangle_patch* %s0, %struct.quadrangle_patch* %s1, %struct.shading_vertex_s* %arraydecay1969, %struct.quadrangle_patch* %972, %struct.patch_color_s** %arraydecay1970) #5
  %973 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %974 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l0111 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %974, i32 0, i32 2
  %975 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0111, align 8, !tbaa !184
  %976 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1971 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %976, i32 0, i32 0
  %arrayidx1972 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1971, i32 0, i64 0
  %arrayidx1973 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1972, i32 0, i64 1
  %977 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1973, align 8, !tbaa !1
  %p1974 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %977, i32 0, i32 0
  %978 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1975 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %978, i32 0, i32 0
  %arrayidx1976 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1975, i32 0, i64 1
  %arrayidx1977 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1976, i32 0, i64 1
  %979 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1977, align 8, !tbaa !1
  %p1978 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %979, i32 0, i32 0
  %p1979 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx1980 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1979, i32 0, i64 1
  %arrayidx1981 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1980, i32 0, i64 1
  %980 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1981, align 8, !tbaa !1
  %p1982 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %980, i32 0, i32 0
  %call1983 = call i32 @make_wedge_median(%struct.patch_fill_state_s* %973, %struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t* %975, i32 1, %struct.gs_fixed_point_s* %p1974, %struct.gs_fixed_point_s* %p1978, %struct.gs_fixed_point_s* %p1982) #5
  store i32 %call1983, i32* %code, align 4, !tbaa !5
  %981 = load i32, i32* %code, align 4, !tbaa !5
  %cmp1984 = icmp sge i32 %981, 0
  br i1 %cmp1984, label %if.then.1986, label %if.end.2000

if.then.1986:                                     ; preds = %if.end.1962
  %982 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %983 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l1000 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %983, i32 0, i32 4
  %984 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l1000, align 8, !tbaa !186
  %985 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1987 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %985, i32 0, i32 0
  %arrayidx1988 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1987, i32 0, i64 1
  %arrayidx1989 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1988, i32 0, i64 0
  %986 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1989, align 8, !tbaa !1
  %p1990 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %986, i32 0, i32 0
  %987 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1991 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %987, i32 0, i32 0
  %arrayidx1992 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1991, i32 0, i64 0
  %arrayidx1993 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1992, i32 0, i64 0
  %988 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1993, align 8, !tbaa !1
  %p1994 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %988, i32 0, i32 0
  %p1995 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx1996 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1995, i32 0, i64 1
  %arrayidx1997 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx1996, i32 0, i64 0
  %989 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx1997, align 8, !tbaa !1
  %p1998 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %989, i32 0, i32 0
  %call1999 = call i32 @make_wedge_median(%struct.patch_fill_state_s* %982, %struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t* %984, i32 0, %struct.gs_fixed_point_s* %p1990, %struct.gs_fixed_point_s* %p1994, %struct.gs_fixed_point_s* %p1998) #5
  store i32 %call1999, i32* %code, align 4, !tbaa !5
  br label %if.end.2000

if.end.2000:                                      ; preds = %if.then.1986, %if.end.1962
  %990 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2001 = icmp sge i32 %990, 0
  br i1 %cmp2001, label %if.then.2003, label %if.end.2012

if.then.2003:                                     ; preds = %if.end.2000
  %l0001 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 1
  store %struct.wedge_vertex_list_t* %l0, %struct.wedge_vertex_list_t** %l0001, align 8, !tbaa !182
  %l1110 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 3
  store %struct.wedge_vertex_list_t* %l0, %struct.wedge_vertex_list_t** %l1110, align 8, !tbaa !185
  %l01112004 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 2
  store %struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t** %l01112004, align 8, !tbaa !184
  %l01112005 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 2
  store %struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t** %l01112005, align 8, !tbaa !184
  %l10002006 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 4
  store %struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t** %l10002006, align 8, !tbaa !186
  %l10002007 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 4
  store %struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t** %l10002007, align 8, !tbaa !186
  %991 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l00012008 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %991, i32 0, i32 1
  %992 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l00012008, align 8, !tbaa !182
  %l00012009 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 1
  store %struct.wedge_vertex_list_t* %992, %struct.wedge_vertex_list_t** %l00012009, align 8, !tbaa !182
  %993 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l11102010 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %993, i32 0, i32 3
  %994 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l11102010, align 8, !tbaa !185
  %l11102011 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 3
  store %struct.wedge_vertex_list_t* %994, %struct.wedge_vertex_list_t** %l11102011, align 8, !tbaa !185
  br label %if.end.2012

if.end.2012:                                      ; preds = %if.then.2003, %if.end.2000
  %995 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2013 = icmp sge i32 %995, 0
  br i1 %cmp2013, label %if.then.2015, label %if.end.2017

if.then.2015:                                     ; preds = %if.end.2012
  %996 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %997 = load i32, i32* %big.addr, align 4, !tbaa !5
  %call2016 = call i32 @fill_quadrangle(%struct.patch_fill_state_s* %996, %struct.quadrangle_patch* %s0, i32 %997) #5
  store i32 %call2016, i32* %code, align 4, !tbaa !5
  br label %if.end.2017

if.end.2017:                                      ; preds = %if.then.2015, %if.end.2012
  %998 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2018 = icmp sge i32 %998, 0
  br i1 %cmp2018, label %if.then.2020, label %if.end.2024

if.then.2020:                                     ; preds = %if.end.2017
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %l0, i32 0, i32 0
  store i32 1, i32* %last_side, align 4, !tbaa !172
  %999 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l01112021 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %999, i32 0, i32 2
  %1000 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l01112021, align 8, !tbaa !184
  call void @move_wedge(%struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t* %1000, i32 1) #5
  %1001 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l10002022 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1001, i32 0, i32 4
  %1002 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l10002022, align 8, !tbaa !186
  call void @move_wedge(%struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t* %1002, i32 0) #5
  %1003 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1004 = load i32, i32* %big1, align 4, !tbaa !5
  %call2023 = call i32 @fill_quadrangle(%struct.patch_fill_state_s* %1003, %struct.quadrangle_patch* %s1, i32 %1004) #5
  store i32 %call2023, i32* %code, align 4, !tbaa !5
  br label %if.end.2024

if.end.2024:                                      ; preds = %if.then.2020, %if.end.2017
  %1005 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2025 = icmp sge i32 %1005, 0
  br i1 %cmp2025, label %if.then.2027, label %if.end.2038

if.then.2027:                                     ; preds = %if.end.2024
  %1006 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1007 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l01112028 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1007, i32 0, i32 2
  %1008 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l01112028, align 8, !tbaa !184
  %1009 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2029 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1009, i32 0, i32 0
  %arrayidx2030 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2029, i32 0, i64 0
  %arrayidx2031 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2030, i32 0, i64 1
  %1010 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2031, align 8, !tbaa !1
  %c2032 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1010, i32 0, i32 1
  %1011 = load %struct.patch_color_s*, %struct.patch_color_s** %c2032, align 8, !tbaa !150
  %1012 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2033 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1012, i32 0, i32 0
  %arrayidx2034 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2033, i32 0, i64 1
  %arrayidx2035 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2034, i32 0, i64 1
  %1013 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2035, align 8, !tbaa !1
  %c2036 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1013, i32 0, i32 1
  %1014 = load %struct.patch_color_s*, %struct.patch_color_s** %c2036, align 8, !tbaa !150
  %call2037 = call i32 @close_wedge_median(%struct.patch_fill_state_s* %1006, %struct.wedge_vertex_list_t* %1008, %struct.patch_color_s* %1011, %struct.patch_color_s* %1014) #5
  store i32 %call2037, i32* %code, align 4, !tbaa !5
  br label %if.end.2038

if.end.2038:                                      ; preds = %if.then.2027, %if.end.2024
  %1015 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2039 = icmp sge i32 %1015, 0
  br i1 %cmp2039, label %if.then.2041, label %if.end.2052

if.then.2041:                                     ; preds = %if.end.2038
  %1016 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1017 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l10002042 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1017, i32 0, i32 4
  %1018 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l10002042, align 8, !tbaa !186
  %1019 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2043 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1019, i32 0, i32 0
  %arrayidx2044 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2043, i32 0, i64 1
  %arrayidx2045 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2044, i32 0, i64 0
  %1020 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2045, align 8, !tbaa !1
  %c2046 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1020, i32 0, i32 1
  %1021 = load %struct.patch_color_s*, %struct.patch_color_s** %c2046, align 8, !tbaa !150
  %1022 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2047 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1022, i32 0, i32 0
  %arrayidx2048 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2047, i32 0, i64 0
  %arrayidx2049 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2048, i32 0, i64 0
  %1023 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2049, align 8, !tbaa !1
  %c2050 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1023, i32 0, i32 1
  %1024 = load %struct.patch_color_s*, %struct.patch_color_s** %c2050, align 8, !tbaa !150
  %call2051 = call i32 @close_wedge_median(%struct.patch_fill_state_s* %1016, %struct.wedge_vertex_list_t* %1018, %struct.patch_color_s* %1021, %struct.patch_color_s* %1024) #5
  store i32 %call2051, i32* %code, align 4, !tbaa !5
  br label %if.end.2052

if.end.2052:                                      ; preds = %if.then.2041, %if.end.2038
  %1025 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2053 = icmp sge i32 %1025, 0
  br i1 %cmp2053, label %if.then.2055, label %if.end.2065

if.then.2055:                                     ; preds = %if.end.2052
  %1026 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %p2056 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx2057 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2056, i32 0, i64 1
  %arrayidx2058 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2057, i32 0, i64 0
  %1027 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2058, align 8, !tbaa !1
  %c2059 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1027, i32 0, i32 1
  %1028 = load %struct.patch_color_s*, %struct.patch_color_s** %c2059, align 8, !tbaa !150
  %p2060 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx2061 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2060, i32 0, i64 1
  %arrayidx2062 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2061, i32 0, i64 1
  %1029 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2062, align 8, !tbaa !1
  %c2063 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1029, i32 0, i32 1
  %1030 = load %struct.patch_color_s*, %struct.patch_color_s** %c2063, align 8, !tbaa !150
  %call2064 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %1026, %struct.wedge_vertex_list_t* %l0, %struct.patch_color_s* %1028, %struct.patch_color_s* %1030) #5
  store i32 %call2064, i32* %code, align 4, !tbaa !5
  br label %if.end.2065

if.end.2065:                                      ; preds = %if.then.2055, %if.end.2052
  %1031 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1032 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %1031, i8* %1032, i32 2) #5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.2066

cleanup.2066:                                     ; preds = %if.end.2065, %if.then.1961
  %1033 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1033) #2
  %1034 = bitcast [2 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 16, i8* %1034) #2
  %cleanup.dest.2068 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.2068, label %cleanup.2206 [
    i32 0, label %cleanup.cont.2069
  ]

cleanup.cont.2069:                                ; preds = %cleanup.2066
  br label %if.end.2202

if.else.2070:                                     ; preds = %if.end.1955
  %1035 = load i32, i32* %divide_u, align 4, !tbaa !5
  %tobool2071 = icmp ne i32 %1035, 0
  br i1 %tobool2071, label %if.then.2072, label %if.else.2193

if.then.2072:                                     ; preds = %if.else.2070
  %1036 = bitcast [2 x %struct.patch_color_s*]* %c2073 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1036) #2
  %1037 = bitcast i8** %color_stack_ptr2074 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1037) #2
  %1038 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay2075 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c2073, i32 0, i32 0
  %call2076 = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %1038, %struct.patch_color_s** %arraydecay2075, i32 2) #5
  store i8* %call2076, i8** %color_stack_ptr2074, align 8, !tbaa !1
  %1039 = load i8*, i8** %color_stack_ptr2074, align 8, !tbaa !1
  %cmp2077 = icmp eq i8* %1039, null
  br i1 %cmp2077, label %if.then.2079, label %if.end.2080

if.then.2079:                                     ; preds = %if.then.2072
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.2189

if.end.2080:                                      ; preds = %if.then.2072
  %arrayidx2081 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c2073, i32 0, i64 0
  %1040 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx2081, align 8, !tbaa !1
  %arrayidx2082 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %q, i32 0, i64 0
  %c2083 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx2082, i32 0, i32 1
  store %struct.patch_color_s* %1040, %struct.patch_color_s** %c2083, align 8, !tbaa !150
  %arrayidx2084 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c2073, i32 0, i64 1
  %1041 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx2084, align 8, !tbaa !1
  %arrayidx2085 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %q, i32 0, i64 1
  %c2086 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx2085, i32 0, i32 1
  store %struct.patch_color_s* %1041, %struct.patch_color_s** %c2086, align 8, !tbaa !150
  %1042 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay2087 = getelementptr inbounds [2 x %struct.shading_vertex_s], [2 x %struct.shading_vertex_s]* %q, i32 0, i32 0
  %1043 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %arraydecay2088 = getelementptr inbounds [2 x %struct.patch_color_s*], [2 x %struct.patch_color_s*]* %c2073, i32 0, i32 0
  call void @divide_quadrangle_by_u(%struct.patch_fill_state_s* %1042, %struct.quadrangle_patch* %s0, %struct.quadrangle_patch* %s1, %struct.shading_vertex_s* %arraydecay2087, %struct.quadrangle_patch* %1043, %struct.patch_color_s** %arraydecay2088) #5
  %1044 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1045 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l00012089 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1045, i32 0, i32 1
  %1046 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l00012089, align 8, !tbaa !182
  %1047 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2090 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1047, i32 0, i32 0
  %arrayidx2091 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2090, i32 0, i64 0
  %arrayidx2092 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2091, i32 0, i64 0
  %1048 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2092, align 8, !tbaa !1
  %p2093 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1048, i32 0, i32 0
  %1049 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2094 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1049, i32 0, i32 0
  %arrayidx2095 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2094, i32 0, i64 0
  %arrayidx2096 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2095, i32 0, i64 1
  %1050 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2096, align 8, !tbaa !1
  %p2097 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1050, i32 0, i32 0
  %p2098 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx2099 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2098, i32 0, i64 0
  %arrayidx2100 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2099, i32 0, i64 1
  %1051 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2100, align 8, !tbaa !1
  %p2101 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1051, i32 0, i32 0
  %call2102 = call i32 @make_wedge_median(%struct.patch_fill_state_s* %1044, %struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t* %1046, i32 1, %struct.gs_fixed_point_s* %p2093, %struct.gs_fixed_point_s* %p2097, %struct.gs_fixed_point_s* %p2101) #5
  store i32 %call2102, i32* %code, align 4, !tbaa !5
  %1052 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2103 = icmp sge i32 %1052, 0
  br i1 %cmp2103, label %if.then.2105, label %if.end.2120

if.then.2105:                                     ; preds = %if.end.2080
  %1053 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1054 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l11102106 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1054, i32 0, i32 3
  %1055 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l11102106, align 8, !tbaa !185
  %1056 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2107 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1056, i32 0, i32 0
  %arrayidx2108 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2107, i32 0, i64 1
  %arrayidx2109 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2108, i32 0, i64 1
  %1057 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2109, align 8, !tbaa !1
  %p2110 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1057, i32 0, i32 0
  %1058 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2111 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1058, i32 0, i32 0
  %arrayidx2112 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2111, i32 0, i64 1
  %arrayidx2113 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2112, i32 0, i64 0
  %1059 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2113, align 8, !tbaa !1
  %p2114 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1059, i32 0, i32 0
  %p2115 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx2116 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2115, i32 0, i64 1
  %arrayidx2117 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2116, i32 0, i64 1
  %1060 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2117, align 8, !tbaa !1
  %p2118 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1060, i32 0, i32 0
  %call2119 = call i32 @make_wedge_median(%struct.patch_fill_state_s* %1053, %struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t* %1055, i32 0, %struct.gs_fixed_point_s* %p2110, %struct.gs_fixed_point_s* %p2114, %struct.gs_fixed_point_s* %p2118) #5
  store i32 %call2119, i32* %code, align 4, !tbaa !5
  br label %if.end.2120

if.end.2120:                                      ; preds = %if.then.2105, %if.end.2080
  %1061 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2121 = icmp sge i32 %1061, 0
  br i1 %cmp2121, label %if.then.2123, label %if.end.2134

if.then.2123:                                     ; preds = %if.end.2120
  %l10002124 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 4
  store %struct.wedge_vertex_list_t* %l0, %struct.wedge_vertex_list_t** %l10002124, align 8, !tbaa !186
  %l01112125 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 2
  store %struct.wedge_vertex_list_t* %l0, %struct.wedge_vertex_list_t** %l01112125, align 8, !tbaa !184
  %l00012126 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 1
  store %struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t** %l00012126, align 8, !tbaa !182
  %l00012127 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 1
  store %struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t** %l00012127, align 8, !tbaa !182
  %l11102128 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 3
  store %struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t** %l11102128, align 8, !tbaa !185
  %l11102129 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 3
  store %struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t** %l11102129, align 8, !tbaa !185
  %1062 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l10002130 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1062, i32 0, i32 4
  %1063 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l10002130, align 8, !tbaa !186
  %l10002131 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 4
  store %struct.wedge_vertex_list_t* %1063, %struct.wedge_vertex_list_t** %l10002131, align 8, !tbaa !186
  %1064 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l01112132 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1064, i32 0, i32 2
  %1065 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l01112132, align 8, !tbaa !184
  %l01112133 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s1, i32 0, i32 2
  store %struct.wedge_vertex_list_t* %1065, %struct.wedge_vertex_list_t** %l01112133, align 8, !tbaa !184
  br label %if.end.2134

if.end.2134:                                      ; preds = %if.then.2123, %if.end.2120
  %1066 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2135 = icmp sge i32 %1066, 0
  br i1 %cmp2135, label %if.then.2137, label %if.end.2139

if.then.2137:                                     ; preds = %if.end.2134
  %1067 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1068 = load i32, i32* %big1, align 4, !tbaa !5
  %call2138 = call i32 @fill_quadrangle(%struct.patch_fill_state_s* %1067, %struct.quadrangle_patch* %s0, i32 %1068) #5
  store i32 %call2138, i32* %code, align 4, !tbaa !5
  br label %if.end.2139

if.end.2139:                                      ; preds = %if.then.2137, %if.end.2134
  %1069 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2140 = icmp sge i32 %1069, 0
  br i1 %cmp2140, label %if.then.2142, label %if.end.2147

if.then.2142:                                     ; preds = %if.end.2139
  %last_side2143 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %l0, i32 0, i32 0
  store i32 1, i32* %last_side2143, align 4, !tbaa !172
  %1070 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l00012144 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1070, i32 0, i32 1
  %1071 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l00012144, align 8, !tbaa !182
  call void @move_wedge(%struct.wedge_vertex_list_t* %l1, %struct.wedge_vertex_list_t* %1071, i32 1) #5
  %1072 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l11102145 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1072, i32 0, i32 3
  %1073 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l11102145, align 8, !tbaa !185
  call void @move_wedge(%struct.wedge_vertex_list_t* %l2, %struct.wedge_vertex_list_t* %1073, i32 0) #5
  %1074 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1075 = load i32, i32* %big1, align 4, !tbaa !5
  %call2146 = call i32 @fill_quadrangle(%struct.patch_fill_state_s* %1074, %struct.quadrangle_patch* %s1, i32 %1075) #5
  store i32 %call2146, i32* %code, align 4, !tbaa !5
  br label %if.end.2147

if.end.2147:                                      ; preds = %if.then.2142, %if.end.2139
  %1076 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2148 = icmp sge i32 %1076, 0
  br i1 %cmp2148, label %if.then.2150, label %if.end.2161

if.then.2150:                                     ; preds = %if.end.2147
  %1077 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1078 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l00012151 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1078, i32 0, i32 1
  %1079 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l00012151, align 8, !tbaa !182
  %1080 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2152 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1080, i32 0, i32 0
  %arrayidx2153 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2152, i32 0, i64 0
  %arrayidx2154 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2153, i32 0, i64 0
  %1081 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2154, align 8, !tbaa !1
  %c2155 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1081, i32 0, i32 1
  %1082 = load %struct.patch_color_s*, %struct.patch_color_s** %c2155, align 8, !tbaa !150
  %1083 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2156 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1083, i32 0, i32 0
  %arrayidx2157 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2156, i32 0, i64 0
  %arrayidx2158 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2157, i32 0, i64 1
  %1084 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2158, align 8, !tbaa !1
  %c2159 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1084, i32 0, i32 1
  %1085 = load %struct.patch_color_s*, %struct.patch_color_s** %c2159, align 8, !tbaa !150
  %call2160 = call i32 @close_wedge_median(%struct.patch_fill_state_s* %1077, %struct.wedge_vertex_list_t* %1079, %struct.patch_color_s* %1082, %struct.patch_color_s* %1085) #5
  store i32 %call2160, i32* %code, align 4, !tbaa !5
  br label %if.end.2161

if.end.2161:                                      ; preds = %if.then.2150, %if.end.2147
  %1086 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2162 = icmp sge i32 %1086, 0
  br i1 %cmp2162, label %if.then.2164, label %if.end.2175

if.then.2164:                                     ; preds = %if.end.2161
  %1087 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1088 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l11102165 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1088, i32 0, i32 3
  %1089 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l11102165, align 8, !tbaa !185
  %1090 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2166 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1090, i32 0, i32 0
  %arrayidx2167 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2166, i32 0, i64 1
  %arrayidx2168 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2167, i32 0, i64 1
  %1091 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2168, align 8, !tbaa !1
  %c2169 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1091, i32 0, i32 1
  %1092 = load %struct.patch_color_s*, %struct.patch_color_s** %c2169, align 8, !tbaa !150
  %1093 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p2170 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %1093, i32 0, i32 0
  %arrayidx2171 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2170, i32 0, i64 1
  %arrayidx2172 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2171, i32 0, i64 0
  %1094 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2172, align 8, !tbaa !1
  %c2173 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1094, i32 0, i32 1
  %1095 = load %struct.patch_color_s*, %struct.patch_color_s** %c2173, align 8, !tbaa !150
  %call2174 = call i32 @close_wedge_median(%struct.patch_fill_state_s* %1087, %struct.wedge_vertex_list_t* %1089, %struct.patch_color_s* %1092, %struct.patch_color_s* %1095) #5
  store i32 %call2174, i32* %code, align 4, !tbaa !5
  br label %if.end.2175

if.end.2175:                                      ; preds = %if.then.2164, %if.end.2161
  %1096 = load i32, i32* %code, align 4, !tbaa !5
  %cmp2176 = icmp sge i32 %1096, 0
  br i1 %cmp2176, label %if.then.2178, label %if.end.2188

if.then.2178:                                     ; preds = %if.end.2175
  %1097 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %p2179 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx2180 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2179, i32 0, i64 0
  %arrayidx2181 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2180, i32 0, i64 1
  %1098 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2181, align 8, !tbaa !1
  %c2182 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1098, i32 0, i32 1
  %1099 = load %struct.patch_color_s*, %struct.patch_color_s** %c2182, align 8, !tbaa !150
  %p2183 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %s0, i32 0, i32 0
  %arrayidx2184 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p2183, i32 0, i64 1
  %arrayidx2185 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx2184, i32 0, i64 1
  %1100 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2185, align 8, !tbaa !1
  %c2186 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %1100, i32 0, i32 1
  %1101 = load %struct.patch_color_s*, %struct.patch_color_s** %c2186, align 8, !tbaa !150
  %call2187 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %1097, %struct.wedge_vertex_list_t* %l0, %struct.patch_color_s* %1099, %struct.patch_color_s* %1101) #5
  store i32 %call2187, i32* %code, align 4, !tbaa !5
  br label %if.end.2188

if.end.2188:                                      ; preds = %if.then.2178, %if.end.2175
  %1102 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1103 = load i8*, i8** %color_stack_ptr2074, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %1102, i8* %1103, i32 2) #5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.2189

cleanup.2189:                                     ; preds = %if.end.2188, %if.then.2079
  %1104 = bitcast i8** %color_stack_ptr2074 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1104) #2
  %1105 = bitcast [2 x %struct.patch_color_s*]* %c2073 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %1105) #2
  %cleanup.dest.2191 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.2191, label %cleanup.2206 [
    i32 0, label %cleanup.cont.2192
  ]

cleanup.cont.2192:                                ; preds = %cleanup.2189
  br label %if.end.2201

if.else.2193:                                     ; preds = %if.else.2070
  %1106 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting2194 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1106, i32 0, i32 22
  %1107 = load i32, i32* %maybe_self_intersecting2194, align 4, !tbaa !27
  %tobool2195 = icmp ne i32 %1107, 0
  %lnot2196 = xor i1 %tobool2195, true
  %cond2198 = select i1 %lnot2196, i32 (%struct.patch_fill_state_s*, %struct.quadrangle_patch*, i32)* @constant_color_quadrangle, i32 (%struct.patch_fill_state_s*, %struct.quadrangle_patch*, i32)* @triangles4
  %1108 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %1109 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %1110 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %maybe_self_intersecting2199 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1110, i32 0, i32 22
  %1111 = load i32, i32* %maybe_self_intersecting2199, align 4, !tbaa !27
  %call2200 = call i32 %cond2198(%struct.patch_fill_state_s* %1108, %struct.quadrangle_patch* %1109, i32 %1111) #5
  store i32 %call2200, i32* %code, align 4, !tbaa !5
  br label %if.end.2201

if.end.2201:                                      ; preds = %if.else.2193, %cleanup.cont.2192
  br label %if.end.2202

if.end.2202:                                      ; preds = %if.end.2201, %cleanup.cont.2069
  %1112 = load i32, i32* %monotonic_color_save, align 4, !tbaa !5
  %1113 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %monotonic_color2203 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1113, i32 0, i32 23
  store i32 %1112, i32* %monotonic_color2203, align 4, !tbaa !29
  %1114 = load i32, i32* %linear_color_save, align 4, !tbaa !5
  %1115 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %linear_color2204 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1115, i32 0, i32 24
  store i32 %1114, i32* %linear_color2204, align 4, !tbaa !31
  %1116 = load i32, i32* %inside_save, align 4, !tbaa !5
  %1117 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %inside2205 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1117, i32 0, i32 26
  store i32 %1116, i32* %inside2205, align 4, !tbaa !32
  %1118 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %1118, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.2206

cleanup.2206:                                     ; preds = %if.end.2202, %cleanup.2189, %cleanup.2066, %cleanup.1908, %if.then.75
  %1119 = bitcast %struct.gs_fixed_rect_s* %r1 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %1119) #2
  %1120 = bitcast %struct.gs_fixed_rect_s* %r to i8*
  call void @llvm.lifetime.end(i64 16, i8* %1120) #2
  %1121 = bitcast i32* %inside1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1121) #2
  %1122 = bitcast i32* %inside_save to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1122) #2
  %1123 = bitcast i32* %linear_color_save to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1123) #2
  %1124 = bitcast i32* %monotonic_color_save to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1124) #2
  %1125 = bitcast [2 x %struct.shading_vertex_s]* %q to i8*
  call void @llvm.lifetime.end(i64 32, i8* %1125) #2
  %1126 = bitcast i32* %big1 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1126) #2
  %1127 = bitcast i32* %divide_v to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1127) #2
  %1128 = bitcast i32* %divide_u to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1128) #2
  %1129 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1129) #2
  %1130 = bitcast %struct.wedge_vertex_list_t* %l2 to i8*
  call void @llvm.lifetime.end(i64 24, i8* %1130) #2
  %1131 = bitcast %struct.wedge_vertex_list_t* %l1 to i8*
  call void @llvm.lifetime.end(i64 24, i8* %1131) #2
  %1132 = bitcast %struct.wedge_vertex_list_t* %l0 to i8*
  call void @llvm.lifetime.end(i64 24, i8* %1132) #2
  %1133 = bitcast %struct.quadrangle_patch* %s1 to i8*
  call void @llvm.lifetime.end(i64 64, i8* %1133) #2
  %1134 = bitcast %struct.quadrangle_patch* %s0 to i8*
  call void @llvm.lifetime.end(i64 64, i8* %1134) #2
  %1135 = load i32, i32* %retval
  ret i32 %1135
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @triangles4(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p, i32 %dummy_argument) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %dummy_argument.addr = alloca i32, align 4
  %p0001 = alloca %struct.shading_vertex_s, align 8
  %p1011 = alloca %struct.shading_vertex_s, align 8
  %q = alloca %struct.shading_vertex_s, align 8
  %c = alloca [3 x %struct.patch_color_s*], align 16
  %l = alloca [4 x %struct.wedge_vertex_list_t], align 16
  %code = alloca i32, align 4
  %color_stack_ptr = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i32 %dummy_argument, i32* %dummy_argument.addr, align 4, !tbaa !5
  %0 = bitcast %struct.shading_vertex_s* %p0001 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %0) #2
  %1 = bitcast %struct.shading_vertex_s* %p1011 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %1) #2
  %2 = bitcast %struct.shading_vertex_s* %q to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #2
  %3 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.start(i64 24, i8* %3) #2
  %4 = bitcast [4 x %struct.wedge_vertex_list_t]* %l to i8*
  call void @llvm.lifetime.start(i64 96, i8* %4) #2
  %5 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #2
  %6 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i32 0
  %call = call i8* @reserve_colors_inline(%struct.patch_fill_state_s* %7, %struct.patch_color_s** %arraydecay, i32 3) #5
  store i8* %call, i8** %color_stack_ptr, align 8, !tbaa !1
  %8 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  %cmp = icmp eq i8* %8, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %9 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %c1 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p0001, i32 0, i32 1
  store %struct.patch_color_s* %9, %struct.patch_color_s** %c1, align 8, !tbaa !150
  %arrayidx2 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %10 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx2, align 8, !tbaa !1
  %c3 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %p1011, i32 0, i32 1
  store %struct.patch_color_s* %10, %struct.patch_color_s** %c3, align 8, !tbaa !150
  %arrayidx4 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 2
  %11 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx4, align 8, !tbaa !1
  %c5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q, i32 0, i32 1
  store %struct.patch_color_s* %11, %struct.patch_color_s** %c5, align 8, !tbaa !150
  %arraydecay6 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i32 0
  call void @init_wedge_vertex_list(%struct.wedge_vertex_list_t* %arraydecay6, i32 4) #5
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %13 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %13, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p7, i32 0, i64 0
  %arrayidx9 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx8, i32 0, i64 0
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx9, align 8, !tbaa !1
  %15 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %15, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx11, i32 0, i64 1
  %16 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx12, align 8, !tbaa !1
  %arrayidx13 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 0
  %17 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx13, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %12, %struct.shading_vertex_s* %14, %struct.shading_vertex_s* %16, i32 2, %struct.shading_vertex_s* %p0001, %struct.patch_color_s* %17) #5
  %18 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %19 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p14 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %19, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p14, i32 0, i64 1
  %arrayidx16 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx15, i32 0, i64 0
  %20 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx16, align 8, !tbaa !1
  %21 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p17 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %21, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p17, i32 0, i64 1
  %arrayidx19 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx18, i32 0, i64 1
  %22 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx19, align 8, !tbaa !1
  %arrayidx20 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 1
  %23 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx20, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %18, %struct.shading_vertex_s* %20, %struct.shading_vertex_s* %22, i32 2, %struct.shading_vertex_s* %p1011, %struct.patch_color_s* %23) #5
  %24 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx21 = getelementptr inbounds [3 x %struct.patch_color_s*], [3 x %struct.patch_color_s*]* %c, i32 0, i64 2
  %25 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx21, align 8, !tbaa !1
  call void @divide_bar(%struct.patch_fill_state_s* %24, %struct.shading_vertex_s* %p0001, %struct.shading_vertex_s* %p1011, i32 2, %struct.shading_vertex_s* %q, %struct.patch_color_s* %25) #5
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %27 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %27, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p22, i32 0, i64 0
  %arrayidx24 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx23, i32 0, i64 0
  %28 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx24, align 8, !tbaa !1
  %29 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p25 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %29, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p25, i32 0, i64 0
  %arrayidx27 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx26, i32 0, i64 1
  %30 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx27, align 8, !tbaa !1
  %31 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l0001 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %31, i32 0, i32 1
  %32 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0001, align 8, !tbaa !182
  %arrayidx28 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 0
  %arrayidx29 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 3
  %call30 = call i32 @fill_triangle(%struct.patch_fill_state_s* %26, %struct.shading_vertex_s* %28, %struct.shading_vertex_s* %30, %struct.shading_vertex_s* %q, %struct.wedge_vertex_list_t* %32, %struct.wedge_vertex_list_t* %arrayidx28, %struct.wedge_vertex_list_t* %arrayidx29) #5
  store i32 %call30, i32* %code, align 4, !tbaa !5
  %33 = load i32, i32* %code, align 4, !tbaa !5
  %cmp31 = icmp sge i32 %33, 0
  br i1 %cmp31, label %if.then.32, label %if.end.45

if.then.32:                                       ; preds = %if.end
  %arrayidx33 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 0
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %arrayidx33, i32 0, i32 0
  store i32 1, i32* %last_side, align 4, !tbaa !172
  %arrayidx34 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 3
  %last_side35 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %arrayidx34, i32 0, i32 0
  store i32 1, i32* %last_side35, align 4, !tbaa !172
  %34 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %35 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p36 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %35, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p36, i32 0, i64 0
  %arrayidx38 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx37, i32 0, i64 1
  %36 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx38, align 8, !tbaa !1
  %37 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p39 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %37, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p39, i32 0, i64 1
  %arrayidx41 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx40, i32 0, i64 1
  %38 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx41, align 8, !tbaa !1
  %39 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l0111 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %39, i32 0, i32 2
  %40 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0111, align 8, !tbaa !184
  %arrayidx42 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 1
  %arrayidx43 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 0
  %call44 = call i32 @fill_triangle(%struct.patch_fill_state_s* %34, %struct.shading_vertex_s* %36, %struct.shading_vertex_s* %38, %struct.shading_vertex_s* %q, %struct.wedge_vertex_list_t* %40, %struct.wedge_vertex_list_t* %arrayidx42, %struct.wedge_vertex_list_t* %arrayidx43) #5
  store i32 %call44, i32* %code, align 4, !tbaa !5
  br label %if.end.45

if.end.45:                                        ; preds = %if.then.32, %if.end
  %41 = load i32, i32* %code, align 4, !tbaa !5
  %cmp46 = icmp sge i32 %41, 0
  br i1 %cmp46, label %if.then.47, label %if.end.59

if.then.47:                                       ; preds = %if.end.45
  %arrayidx48 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 1
  %last_side49 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %arrayidx48, i32 0, i32 0
  store i32 1, i32* %last_side49, align 4, !tbaa !172
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %43 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p50 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %43, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p50, i32 0, i64 1
  %arrayidx52 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx51, i32 0, i64 1
  %44 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx52, align 8, !tbaa !1
  %45 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p53 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %45, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p53, i32 0, i64 1
  %arrayidx55 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx54, i32 0, i64 0
  %46 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx55, align 8, !tbaa !1
  %47 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l1110 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %47, i32 0, i32 3
  %48 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l1110, align 8, !tbaa !185
  %arrayidx56 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 2
  %arrayidx57 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 1
  %call58 = call i32 @fill_triangle(%struct.patch_fill_state_s* %42, %struct.shading_vertex_s* %44, %struct.shading_vertex_s* %46, %struct.shading_vertex_s* %q, %struct.wedge_vertex_list_t* %48, %struct.wedge_vertex_list_t* %arrayidx56, %struct.wedge_vertex_list_t* %arrayidx57) #5
  store i32 %call58, i32* %code, align 4, !tbaa !5
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.47, %if.end.45
  %49 = load i32, i32* %code, align 4, !tbaa !5
  %cmp60 = icmp sge i32 %49, 0
  br i1 %cmp60, label %if.then.61, label %if.end.73

if.then.61:                                       ; preds = %if.end.59
  %arrayidx62 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 2
  %last_side63 = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %arrayidx62, i32 0, i32 0
  store i32 1, i32* %last_side63, align 4, !tbaa !172
  %50 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %51 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p64 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %51, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p64, i32 0, i64 1
  %arrayidx66 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx65, i32 0, i64 0
  %52 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx66, align 8, !tbaa !1
  %53 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p67 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %53, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p67, i32 0, i64 0
  %arrayidx69 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx68, i32 0, i64 0
  %54 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx69, align 8, !tbaa !1
  %55 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l1000 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %55, i32 0, i32 4
  %56 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l1000, align 8, !tbaa !186
  %arrayidx70 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 3
  %arrayidx71 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 2
  %call72 = call i32 @fill_triangle(%struct.patch_fill_state_s* %50, %struct.shading_vertex_s* %52, %struct.shading_vertex_s* %54, %struct.shading_vertex_s* %q, %struct.wedge_vertex_list_t* %56, %struct.wedge_vertex_list_t* %arrayidx70, %struct.wedge_vertex_list_t* %arrayidx71) #5
  store i32 %call72, i32* %code, align 4, !tbaa !5
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.61, %if.end.59
  %57 = load i32, i32* %code, align 4, !tbaa !5
  %cmp74 = icmp sge i32 %57, 0
  br i1 %cmp74, label %if.then.75, label %if.end.83

if.then.75:                                       ; preds = %if.end.73
  %58 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx76 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 0
  %59 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p77 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %59, i32 0, i32 0
  %arrayidx78 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p77, i32 0, i64 0
  %arrayidx79 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx78, i32 0, i64 1
  %60 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx79, align 8, !tbaa !1
  %c80 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %60, i32 0, i32 1
  %61 = load %struct.patch_color_s*, %struct.patch_color_s** %c80, align 8, !tbaa !150
  %c81 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q, i32 0, i32 1
  %62 = load %struct.patch_color_s*, %struct.patch_color_s** %c81, align 8, !tbaa !150
  %call82 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %58, %struct.wedge_vertex_list_t* %arrayidx76, %struct.patch_color_s* %61, %struct.patch_color_s* %62) #5
  store i32 %call82, i32* %code, align 4, !tbaa !5
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.75, %if.end.73
  %63 = load i32, i32* %code, align 4, !tbaa !5
  %cmp84 = icmp sge i32 %63, 0
  br i1 %cmp84, label %if.then.85, label %if.end.93

if.then.85:                                       ; preds = %if.end.83
  %64 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx86 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 1
  %65 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p87 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %65, i32 0, i32 0
  %arrayidx88 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p87, i32 0, i64 1
  %arrayidx89 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx88, i32 0, i64 1
  %66 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx89, align 8, !tbaa !1
  %c90 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %66, i32 0, i32 1
  %67 = load %struct.patch_color_s*, %struct.patch_color_s** %c90, align 8, !tbaa !150
  %c91 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q, i32 0, i32 1
  %68 = load %struct.patch_color_s*, %struct.patch_color_s** %c91, align 8, !tbaa !150
  %call92 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %64, %struct.wedge_vertex_list_t* %arrayidx86, %struct.patch_color_s* %67, %struct.patch_color_s* %68) #5
  store i32 %call92, i32* %code, align 4, !tbaa !5
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.85, %if.end.83
  %69 = load i32, i32* %code, align 4, !tbaa !5
  %cmp94 = icmp sge i32 %69, 0
  br i1 %cmp94, label %if.then.95, label %if.end.103

if.then.95:                                       ; preds = %if.end.93
  %70 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx96 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 2
  %71 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p97 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %71, i32 0, i32 0
  %arrayidx98 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p97, i32 0, i64 1
  %arrayidx99 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx98, i32 0, i64 0
  %72 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx99, align 8, !tbaa !1
  %c100 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %72, i32 0, i32 1
  %73 = load %struct.patch_color_s*, %struct.patch_color_s** %c100, align 8, !tbaa !150
  %c101 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q, i32 0, i32 1
  %74 = load %struct.patch_color_s*, %struct.patch_color_s** %c101, align 8, !tbaa !150
  %call102 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %70, %struct.wedge_vertex_list_t* %arrayidx96, %struct.patch_color_s* %73, %struct.patch_color_s* %74) #5
  store i32 %call102, i32* %code, align 4, !tbaa !5
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.95, %if.end.93
  %75 = load i32, i32* %code, align 4, !tbaa !5
  %cmp104 = icmp sge i32 %75, 0
  br i1 %cmp104, label %if.then.105, label %if.end.113

if.then.105:                                      ; preds = %if.end.103
  %76 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %arrayidx106 = getelementptr inbounds [4 x %struct.wedge_vertex_list_t], [4 x %struct.wedge_vertex_list_t]* %l, i32 0, i64 3
  %c107 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %q, i32 0, i32 1
  %77 = load %struct.patch_color_s*, %struct.patch_color_s** %c107, align 8, !tbaa !150
  %78 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p108 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %78, i32 0, i32 0
  %arrayidx109 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p108, i32 0, i64 0
  %arrayidx110 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx109, i32 0, i64 0
  %79 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx110, align 8, !tbaa !1
  %c111 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %79, i32 0, i32 1
  %80 = load %struct.patch_color_s*, %struct.patch_color_s** %c111, align 8, !tbaa !150
  %call112 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %76, %struct.wedge_vertex_list_t* %arrayidx106, %struct.patch_color_s* %77, %struct.patch_color_s* %80) #5
  store i32 %call112, i32* %code, align 4, !tbaa !5
  br label %if.end.113

if.end.113:                                       ; preds = %if.then.105, %if.end.103
  %81 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %82 = load i8*, i8** %color_stack_ptr, align 8, !tbaa !1
  call void @release_colors_inline(%struct.patch_fill_state_s* %81, i8* %82, i32 3) #5
  %83 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %83, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.113, %if.then
  %84 = bitcast i8** %color_stack_ptr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %84) #2
  %85 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %85) #2
  %86 = bitcast [4 x %struct.wedge_vertex_list_t]* %l to i8*
  call void @llvm.lifetime.end(i64 96, i8* %86) #2
  %87 = bitcast [3 x %struct.patch_color_s*]* %c to i8*
  call void @llvm.lifetime.end(i64 24, i8* %87) #2
  %88 = bitcast %struct.shading_vertex_s* %q to i8*
  call void @llvm.lifetime.end(i64 16, i8* %88) #2
  %89 = bitcast %struct.shading_vertex_s* %p1011 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %89) #2
  %90 = bitcast %struct.shading_vertex_s* %p0001 to i8*
  call void @llvm.lifetime.end(i64 16, i8* %90) #2
  %91 = load i32, i32* %retval
  ret i32 %91
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_quadrangle_color_monotonic(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p, i32* %not_monotonic_by_u, i32* %not_monotonic_by_v) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %not_monotonic_by_u.addr = alloca i32*, align 8
  %not_monotonic_by_v.addr = alloca i32*, align 8
  %code = alloca i32, align 4
  %r = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i32* %not_monotonic_by_u, i32** %not_monotonic_by_u.addr, align 8, !tbaa !1
  store i32* %not_monotonic_by_v, i32** %not_monotonic_by_v.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = bitcast i32* %r to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %3 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx2 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx, i32 0, i64 0
  %4 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %4, i32 0, i32 1
  %5 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %6 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %6, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p3, i32 0, i64 1
  %arrayidx5 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx4, i32 0, i64 1
  %7 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx5, align 8, !tbaa !1
  %c6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %7, i32 0, i32 1
  %8 = load %struct.patch_color_s*, %struct.patch_color_s** %c6, align 8, !tbaa !150
  %call = call i32 @isnt_color_monotonic(%struct.patch_fill_state_s* %2, %struct.patch_color_s* %5, %struct.patch_color_s* %8) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %9 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp sle i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %10, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %code, align 4, !tbaa !5
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %function_arg_shift = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %12, i32 0, i32 10
  %13 = load i32, i32* %function_arg_shift, align 4, !tbaa !30
  %shl = shl i32 %11, %13
  store i32 %shl, i32* %r, align 4, !tbaa !5
  %14 = load i32, i32* %r, align 4, !tbaa !5
  %and = and i32 %14, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end
  %15 = load i32*, i32** %not_monotonic_by_u.addr, align 8, !tbaa !1
  store i32 1, i32* %15, align 4, !tbaa !5
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %if.end
  %16 = load i32, i32* %r, align 4, !tbaa !5
  %and9 = and i32 %16, 2
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  %17 = load i32*, i32** %not_monotonic_by_v.addr, align 8, !tbaa !1
  store i32 1, i32* %17, align 4, !tbaa !5
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %if.end.8
  %18 = load i32, i32* %code, align 4, !tbaa !5
  %tobool13 = icmp ne i32 %18, 0
  %lnot = xor i1 %tobool13, true
  %lnot.ext = zext i1 %lnot to i32
  store i32 %lnot.ext, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.12, %if.then
  %19 = bitcast i32* %r to i8*
  call void @llvm.lifetime.end(i64 4, i8* %19) #2
  %20 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %20) #2
  %21 = load i32, i32* %retval
  ret i32 %21
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_quadrangle_color_linear_by_u(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %2 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx2 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx, i32 0, i64 0
  %3 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %3, i32 0, i32 1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %5 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p3, i32 0, i64 0
  %arrayidx5 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx4, i32 0, i64 1
  %6 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx5, align 8, !tbaa !1
  %c6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %6, i32 0, i32 1
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c6, align 8, !tbaa !150
  %call = call i32 @is_color_linear(%struct.patch_fill_state_s* %1, %struct.patch_color_s* %4, %struct.patch_color_s* %7) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %8 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp sle i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %11 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %11, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p7, i32 0, i64 1
  %arrayidx9 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx8, i32 0, i64 0
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx9, align 8, !tbaa !1
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i32 0, i32 1
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %14 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %14, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p11, i32 0, i64 1
  %arrayidx13 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx12, i32 0, i64 1
  %15 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx13, align 8, !tbaa !1
  %c14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %15, i32 0, i32 1
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %c14, align 8, !tbaa !150
  %call15 = call i32 @is_color_linear(%struct.patch_fill_state_s* %10, %struct.patch_color_s* %13, %struct.patch_color_s* %16) #5
  store i32 %call15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %17 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #2
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_quadrangle_color_linear_by_v(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %2 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx2 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx, i32 0, i64 0
  %3 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %3, i32 0, i32 1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %5 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p3, i32 0, i64 1
  %arrayidx5 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx4, i32 0, i64 0
  %6 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx5, align 8, !tbaa !1
  %c6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %6, i32 0, i32 1
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c6, align 8, !tbaa !150
  %call = call i32 @is_color_linear(%struct.patch_fill_state_s* %1, %struct.patch_color_s* %4, %struct.patch_color_s* %7) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %8 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp sle i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %11 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %11, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p7, i32 0, i64 0
  %arrayidx9 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx8, i32 0, i64 1
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx9, align 8, !tbaa !1
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i32 0, i32 1
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %14 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %14, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p11, i32 0, i64 1
  %arrayidx13 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx12, i32 0, i64 1
  %15 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx13, align 8, !tbaa !1
  %c14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %15, i32 0, i32 1
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %c14, align 8, !tbaa !150
  %call15 = call i32 @is_color_linear(%struct.patch_fill_state_s* %10, %struct.patch_color_s* %13, %struct.patch_color_s* %16) #5
  store i32 %call15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %17 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #2
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @is_quadrangle_color_linear_by_diagonals(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %0 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %2 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx2 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx, i32 0, i64 0
  %3 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %3, i32 0, i32 1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %5 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p3, i32 0, i64 1
  %arrayidx5 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx4, i32 0, i64 1
  %6 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx5, align 8, !tbaa !1
  %c6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %6, i32 0, i32 1
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c6, align 8, !tbaa !150
  %call = call i32 @is_color_linear(%struct.patch_fill_state_s* %1, %struct.patch_color_s* %4, %struct.patch_color_s* %7) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %8 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp sle i32 %8, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %9, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %11 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %11, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p7, i32 0, i64 0
  %arrayidx9 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx8, i32 0, i64 1
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx9, align 8, !tbaa !1
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i32 0, i32 1
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %14 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %14, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p11, i32 0, i64 1
  %arrayidx13 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx12, i32 0, i64 0
  %15 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx13, align 8, !tbaa !1
  %c14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %15, i32 0, i32 1
  %16 = load %struct.patch_color_s*, %struct.patch_color_s** %c14, align 8, !tbaa !150
  %call15 = call i32 @is_color_linear(%struct.patch_fill_state_s* %10, %struct.patch_color_s* %13, %struct.patch_color_s* %16) #5
  store i32 %call15, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %17 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #2
  %18 = load i32, i32* %retval
  ret i32 %18
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @quadrangle_color_change(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p, i32 %is_big_u, i32 %is_big_v, double %size_u, double %size_v, i32* %divide_u, i32* %divide_v) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %is_big_u.addr = alloca i32, align 4
  %is_big_v.addr = alloca i32, align 4
  %size_u.addr = alloca double, align 8
  %size_v.addr = alloca double, align 8
  %divide_u.addr = alloca i32*, align 8
  %divide_v.addr = alloca i32*, align 8
  %d0001 = alloca %struct.patch_color_s, align 8
  %d1011 = alloca %struct.patch_color_s, align 8
  %d = alloca %struct.patch_color_s, align 8
  %D = alloca double, align 8
  %D0001 = alloca double, align 8
  %D1011 = alloca double, align 8
  %D0010 = alloca double, align 8
  %D0111 = alloca double, align 8
  %D0011 = alloca double, align 8
  %D0110 = alloca double, align 8
  %Du = alloca double, align 8
  %Dv = alloca double, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i32 %is_big_u, i32* %is_big_u.addr, align 4, !tbaa !5
  store i32 %is_big_v, i32* %is_big_v.addr, align 4, !tbaa !5
  store double %size_u, double* %size_u.addr, align 8, !tbaa !112
  store double %size_v, double* %size_v.addr, align 8, !tbaa !112
  store i32* %divide_u, i32** %divide_u.addr, align 8, !tbaa !1
  store i32* %divide_v, i32** %divide_v.addr, align 8, !tbaa !1
  %0 = bitcast %struct.patch_color_s* %d0001 to i8*
  call void @llvm.lifetime.start(i64 272, i8* %0) #2
  %1 = bitcast %struct.patch_color_s* %d1011 to i8*
  call void @llvm.lifetime.start(i64 272, i8* %1) #2
  %2 = bitcast %struct.patch_color_s* %d to i8*
  call void @llvm.lifetime.start(i64 272, i8* %2) #2
  %3 = bitcast double* %D to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #2
  %4 = bitcast double* %D0001 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = bitcast double* %D1011 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #2
  %6 = bitcast double* %D0010 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #2
  %7 = bitcast double* %D0111 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #2
  %8 = bitcast double* %D0011 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #2
  %9 = bitcast double* %D0110 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #2
  %10 = bitcast double* %Du to i8*
  call void @llvm.lifetime.start(i64 8, i8* %10) #2
  %11 = bitcast double* %Dv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #2
  %12 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %13 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %13, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx2 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx, i32 0, i64 0
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 1
  %15 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %16 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %16, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p3, i32 0, i64 0
  %arrayidx5 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx4, i32 0, i64 1
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx5, align 8, !tbaa !1
  %c6 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 1
  %18 = load %struct.patch_color_s*, %struct.patch_color_s** %c6, align 8, !tbaa !150
  call void @color_diff(%struct.patch_fill_state_s* %12, %struct.patch_color_s* %15, %struct.patch_color_s* %18, %struct.patch_color_s* %d0001) #5
  %19 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %20 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p7 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %20, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p7, i32 0, i64 1
  %arrayidx9 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx8, i32 0, i64 0
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx9, align 8, !tbaa !1
  %c10 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %21, i32 0, i32 1
  %22 = load %struct.patch_color_s*, %struct.patch_color_s** %c10, align 8, !tbaa !150
  %23 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p11 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %23, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p11, i32 0, i64 1
  %arrayidx13 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx12, i32 0, i64 1
  %24 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx13, align 8, !tbaa !1
  %c14 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %24, i32 0, i32 1
  %25 = load %struct.patch_color_s*, %struct.patch_color_s** %c14, align 8, !tbaa !150
  call void @color_diff(%struct.patch_fill_state_s* %19, %struct.patch_color_s* %22, %struct.patch_color_s* %25, %struct.patch_color_s* %d1011) #5
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call = call double @color_norm(%struct.patch_fill_state_s* %26, %struct.patch_color_s* %d0001) #5
  store double %call, double* %D0001, align 8, !tbaa !112
  %27 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call15 = call double @color_norm(%struct.patch_fill_state_s* %27, %struct.patch_color_s* %d1011) #5
  store double %call15, double* %D1011, align 8, !tbaa !112
  %28 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %29 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p16 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %29, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p16, i32 0, i64 0
  %arrayidx18 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx17, i32 0, i64 0
  %30 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx18, align 8, !tbaa !1
  %c19 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %30, i32 0, i32 1
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %c19, align 8, !tbaa !150
  %32 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p20 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %32, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p20, i32 0, i64 1
  %arrayidx22 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx21, i32 0, i64 0
  %33 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx22, align 8, !tbaa !1
  %c23 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %33, i32 0, i32 1
  %34 = load %struct.patch_color_s*, %struct.patch_color_s** %c23, align 8, !tbaa !150
  %call24 = call double @color_span(%struct.patch_fill_state_s* %28, %struct.patch_color_s* %31, %struct.patch_color_s* %34) #5
  store double %call24, double* %D0010, align 8, !tbaa !112
  %35 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %36 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p25 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %36, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p25, i32 0, i64 0
  %arrayidx27 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx26, i32 0, i64 1
  %37 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx27, align 8, !tbaa !1
  %c28 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %37, i32 0, i32 1
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %c28, align 8, !tbaa !150
  %39 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p29 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %39, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p29, i32 0, i64 1
  %arrayidx31 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx30, i32 0, i64 1
  %40 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx31, align 8, !tbaa !1
  %c32 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %40, i32 0, i32 1
  %41 = load %struct.patch_color_s*, %struct.patch_color_s** %c32, align 8, !tbaa !150
  %call33 = call double @color_span(%struct.patch_fill_state_s* %35, %struct.patch_color_s* %38, %struct.patch_color_s* %41) #5
  store double %call33, double* %D0111, align 8, !tbaa !112
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %43 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p34 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %43, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p34, i32 0, i64 0
  %arrayidx36 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx35, i32 0, i64 0
  %44 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx36, align 8, !tbaa !1
  %c37 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %44, i32 0, i32 1
  %45 = load %struct.patch_color_s*, %struct.patch_color_s** %c37, align 8, !tbaa !150
  %46 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p38 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %46, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p38, i32 0, i64 1
  %arrayidx40 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx39, i32 0, i64 1
  %47 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx40, align 8, !tbaa !1
  %c41 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %47, i32 0, i32 1
  %48 = load %struct.patch_color_s*, %struct.patch_color_s** %c41, align 8, !tbaa !150
  %call42 = call double @color_span(%struct.patch_fill_state_s* %42, %struct.patch_color_s* %45, %struct.patch_color_s* %48) #5
  store double %call42, double* %D0011, align 8, !tbaa !112
  %49 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %50 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p43 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %50, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p43, i32 0, i64 0
  %arrayidx45 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx44, i32 0, i64 1
  %51 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx45, align 8, !tbaa !1
  %c46 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %51, i32 0, i32 1
  %52 = load %struct.patch_color_s*, %struct.patch_color_s** %c46, align 8, !tbaa !150
  %53 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p47 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %53, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p47, i32 0, i64 1
  %arrayidx49 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx48, i32 0, i64 0
  %54 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx49, align 8, !tbaa !1
  %c50 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %54, i32 0, i32 1
  %55 = load %struct.patch_color_s*, %struct.patch_color_s** %c50, align 8, !tbaa !150
  %call51 = call double @color_span(%struct.patch_fill_state_s* %49, %struct.patch_color_s* %52, %struct.patch_color_s* %55) #5
  store double %call51, double* %D0110, align 8, !tbaa !112
  %56 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %unlinear = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %56, i32 0, i32 25
  %57 = load i32, i32* %unlinear, align 4, !tbaa !53
  %tobool = icmp ne i32 %57, 0
  br i1 %tobool, label %if.then, label %if.end.87

if.then:                                          ; preds = %entry
  %58 = load double, double* %D0001, align 8, !tbaa !112
  %59 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %59, i32 0, i32 21
  %60 = load double, double* %smoothness, align 8, !tbaa !50
  %cmp = fcmp ole double %58, %60
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %61 = load double, double* %D1011, align 8, !tbaa !112
  %62 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness52 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %62, i32 0, i32 21
  %63 = load double, double* %smoothness52, align 8, !tbaa !50
  %cmp53 = fcmp ole double %61, %63
  br i1 %cmp53, label %land.lhs.true.54, label %if.end

land.lhs.true.54:                                 ; preds = %land.lhs.true
  %64 = load double, double* %D0010, align 8, !tbaa !112
  %65 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness55 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %65, i32 0, i32 21
  %66 = load double, double* %smoothness55, align 8, !tbaa !50
  %cmp56 = fcmp ole double %64, %66
  br i1 %cmp56, label %land.lhs.true.57, label %if.end

land.lhs.true.57:                                 ; preds = %land.lhs.true.54
  %67 = load double, double* %D0111, align 8, !tbaa !112
  %68 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness58 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %68, i32 0, i32 21
  %69 = load double, double* %smoothness58, align 8, !tbaa !50
  %cmp59 = fcmp ole double %67, %69
  br i1 %cmp59, label %land.lhs.true.60, label %if.end

land.lhs.true.60:                                 ; preds = %land.lhs.true.57
  %70 = load double, double* %D0011, align 8, !tbaa !112
  %71 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness61 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %71, i32 0, i32 21
  %72 = load double, double* %smoothness61, align 8, !tbaa !50
  %cmp62 = fcmp ole double %70, %72
  br i1 %cmp62, label %land.lhs.true.63, label %if.end

land.lhs.true.63:                                 ; preds = %land.lhs.true.60
  %73 = load double, double* %D0110, align 8, !tbaa !112
  %74 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness64 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %74, i32 0, i32 21
  %75 = load double, double* %smoothness64, align 8, !tbaa !50
  %cmp65 = fcmp ole double %73, %75
  br i1 %cmp65, label %if.then.66, label %if.end

if.then.66:                                       ; preds = %land.lhs.true.63
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.63, %land.lhs.true.60, %land.lhs.true.57, %land.lhs.true.54, %land.lhs.true, %if.then
  %76 = load double, double* %D0001, align 8, !tbaa !112
  %77 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness67 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %77, i32 0, i32 21
  %78 = load double, double* %smoothness67, align 8, !tbaa !50
  %cmp68 = fcmp ole double %76, %78
  br i1 %cmp68, label %land.lhs.true.69, label %if.end.76

land.lhs.true.69:                                 ; preds = %if.end
  %79 = load double, double* %D1011, align 8, !tbaa !112
  %80 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness70 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %80, i32 0, i32 21
  %81 = load double, double* %smoothness70, align 8, !tbaa !50
  %cmp71 = fcmp ole double %79, %81
  br i1 %cmp71, label %if.then.72, label %if.end.76

if.then.72:                                       ; preds = %land.lhs.true.69
  %82 = load i32, i32* %is_big_v.addr, align 4, !tbaa !5
  %tobool73 = icmp ne i32 %82, 0
  br i1 %tobool73, label %if.end.75, label %if.then.74

if.then.74:                                       ; preds = %if.then.72
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.75:                                        ; preds = %if.then.72
  %83 = load i32*, i32** %divide_v.addr, align 8, !tbaa !1
  store i32 1, i32* %83, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.76:                                        ; preds = %land.lhs.true.69, %if.end
  %84 = load double, double* %D0010, align 8, !tbaa !112
  %85 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness77 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %85, i32 0, i32 21
  %86 = load double, double* %smoothness77, align 8, !tbaa !50
  %cmp78 = fcmp ole double %84, %86
  br i1 %cmp78, label %land.lhs.true.79, label %if.end.86

land.lhs.true.79:                                 ; preds = %if.end.76
  %87 = load double, double* %D0111, align 8, !tbaa !112
  %88 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness80 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %88, i32 0, i32 21
  %89 = load double, double* %smoothness80, align 8, !tbaa !50
  %cmp81 = fcmp ole double %87, %89
  br i1 %cmp81, label %if.then.82, label %if.end.86

if.then.82:                                       ; preds = %land.lhs.true.79
  %90 = load i32, i32* %is_big_u.addr, align 4, !tbaa !5
  %tobool83 = icmp ne i32 %90, 0
  br i1 %tobool83, label %if.end.85, label %if.then.84

if.then.84:                                       ; preds = %if.then.82
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.85:                                        ; preds = %if.then.82
  %91 = load i32*, i32** %divide_u.addr, align 8, !tbaa !1
  store i32 1, i32* %91, align 4, !tbaa !5
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.86:                                        ; preds = %land.lhs.true.79, %if.end.76
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.86, %entry
  %92 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @color_diff(%struct.patch_fill_state_s* %92, %struct.patch_color_s* %d0001, %struct.patch_color_s* %d1011, %struct.patch_color_s* %d) #5
  %93 = load double, double* %D0001, align 8, !tbaa !112
  %94 = load double, double* %D1011, align 8, !tbaa !112
  %cmp88 = fcmp ogt double %93, %94
  br i1 %cmp88, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.87
  %95 = load double, double* %D0001, align 8, !tbaa !112
  br label %cond.end

cond.false:                                       ; preds = %if.end.87
  %96 = load double, double* %D1011, align 8, !tbaa !112
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %95, %cond.true ], [ %96, %cond.false ]
  store double %cond, double* %Du, align 8, !tbaa !112
  %97 = load double, double* %D0010, align 8, !tbaa !112
  %98 = load double, double* %D0111, align 8, !tbaa !112
  %cmp89 = fcmp ogt double %97, %98
  br i1 %cmp89, label %cond.true.90, label %cond.false.91

cond.true.90:                                     ; preds = %cond.end
  %99 = load double, double* %D0010, align 8, !tbaa !112
  br label %cond.end.92

cond.false.91:                                    ; preds = %cond.end
  %100 = load double, double* %D0111, align 8, !tbaa !112
  br label %cond.end.92

cond.end.92:                                      ; preds = %cond.false.91, %cond.true.90
  %cond93 = phi double [ %99, %cond.true.90 ], [ %100, %cond.false.91 ]
  store double %cond93, double* %Dv, align 8, !tbaa !112
  %101 = load double, double* %Du, align 8, !tbaa !112
  %102 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness94 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %102, i32 0, i32 21
  %103 = load double, double* %smoothness94, align 8, !tbaa !50
  %div = fdiv double %103, 8.000000e+00
  %cmp95 = fcmp ole double %101, %div
  br i1 %cmp95, label %land.lhs.true.96, label %if.end.101

land.lhs.true.96:                                 ; preds = %cond.end.92
  %104 = load double, double* %Dv, align 8, !tbaa !112
  %105 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness97 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %105, i32 0, i32 21
  %106 = load double, double* %smoothness97, align 8, !tbaa !50
  %div98 = fdiv double %106, 8.000000e+00
  %cmp99 = fcmp ole double %104, %div98
  br i1 %cmp99, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %land.lhs.true.96
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.101:                                       ; preds = %land.lhs.true.96, %cond.end.92
  %107 = load double, double* %Du, align 8, !tbaa !112
  %108 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness102 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %108, i32 0, i32 21
  %109 = load double, double* %smoothness102, align 8, !tbaa !50
  %div103 = fdiv double %109, 8.000000e+00
  %cmp104 = fcmp ole double %107, %div103
  br i1 %cmp104, label %if.then.105, label %if.end.106

if.then.105:                                      ; preds = %if.end.101
  store i32 2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.106:                                       ; preds = %if.end.101
  %110 = load double, double* %Dv, align 8, !tbaa !112
  %111 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness107 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %111, i32 0, i32 21
  %112 = load double, double* %smoothness107, align 8, !tbaa !50
  %div108 = fdiv double %112, 8.000000e+00
  %cmp109 = fcmp ole double %110, %div108
  br i1 %cmp109, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %if.end.106
  store i32 2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.111:                                       ; preds = %if.end.106
  %113 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %call112 = call double @color_norm(%struct.patch_fill_state_s* %113, %struct.patch_color_s* %d) #5
  store double %call112, double* %D, align 8, !tbaa !112
  %114 = load double, double* %D, align 8, !tbaa !112
  %115 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %smoothness113 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %115, i32 0, i32 21
  %116 = load double, double* %smoothness113, align 8, !tbaa !50
  %cmp114 = fcmp ole double %114, %116
  br i1 %cmp114, label %if.then.115, label %if.end.116

if.then.115:                                      ; preds = %if.end.111
  store i32 3, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.116:                                       ; preds = %if.end.111
  %117 = load double, double* %Du, align 8, !tbaa !112
  %118 = load double, double* %Dv, align 8, !tbaa !112
  %cmp117 = fcmp ogt double %117, %118
  br i1 %cmp117, label %land.lhs.true.118, label %if.else

land.lhs.true.118:                                ; preds = %if.end.116
  %119 = load i32, i32* %is_big_u.addr, align 4, !tbaa !5
  %tobool119 = icmp ne i32 %119, 0
  br i1 %tobool119, label %if.then.120, label %if.else

if.then.120:                                      ; preds = %land.lhs.true.118
  %120 = load i32*, i32** %divide_u.addr, align 8, !tbaa !1
  store i32 1, i32* %120, align 4, !tbaa !5
  br label %if.end.147

if.else:                                          ; preds = %land.lhs.true.118, %if.end.116
  %121 = load double, double* %Du, align 8, !tbaa !112
  %122 = load double, double* %Dv, align 8, !tbaa !112
  %cmp121 = fcmp olt double %121, %122
  br i1 %cmp121, label %land.lhs.true.122, label %if.else.125

land.lhs.true.122:                                ; preds = %if.else
  %123 = load i32, i32* %is_big_v.addr, align 4, !tbaa !5
  %tobool123 = icmp ne i32 %123, 0
  br i1 %tobool123, label %if.then.124, label %if.else.125

if.then.124:                                      ; preds = %land.lhs.true.122
  %124 = load i32*, i32** %divide_v.addr, align 8, !tbaa !1
  store i32 1, i32* %124, align 4, !tbaa !5
  br label %if.end.146

if.else.125:                                      ; preds = %land.lhs.true.122, %if.else
  %125 = load i32, i32* %is_big_u.addr, align 4, !tbaa !5
  %tobool126 = icmp ne i32 %125, 0
  br i1 %tobool126, label %land.lhs.true.127, label %if.else.130

land.lhs.true.127:                                ; preds = %if.else.125
  %126 = load double, double* %size_u.addr, align 8, !tbaa !112
  %127 = load double, double* %size_v.addr, align 8, !tbaa !112
  %cmp128 = fcmp ogt double %126, %127
  br i1 %cmp128, label %if.then.129, label %if.else.130

if.then.129:                                      ; preds = %land.lhs.true.127
  %128 = load i32*, i32** %divide_u.addr, align 8, !tbaa !1
  store i32 1, i32* %128, align 4, !tbaa !5
  br label %if.end.145

if.else.130:                                      ; preds = %land.lhs.true.127, %if.else.125
  %129 = load i32, i32* %is_big_v.addr, align 4, !tbaa !5
  %tobool131 = icmp ne i32 %129, 0
  br i1 %tobool131, label %land.lhs.true.132, label %if.else.135

land.lhs.true.132:                                ; preds = %if.else.130
  %130 = load double, double* %size_v.addr, align 8, !tbaa !112
  %131 = load double, double* %size_u.addr, align 8, !tbaa !112
  %cmp133 = fcmp ogt double %130, %131
  br i1 %cmp133, label %if.then.134, label %if.else.135

if.then.134:                                      ; preds = %land.lhs.true.132
  %132 = load i32*, i32** %divide_v.addr, align 8, !tbaa !1
  store i32 1, i32* %132, align 4, !tbaa !5
  br label %if.end.144

if.else.135:                                      ; preds = %land.lhs.true.132, %if.else.130
  %133 = load i32, i32* %is_big_u.addr, align 4, !tbaa !5
  %tobool136 = icmp ne i32 %133, 0
  br i1 %tobool136, label %if.then.137, label %if.else.138

if.then.137:                                      ; preds = %if.else.135
  %134 = load i32*, i32** %divide_u.addr, align 8, !tbaa !1
  store i32 1, i32* %134, align 4, !tbaa !5
  br label %if.end.143

if.else.138:                                      ; preds = %if.else.135
  %135 = load i32, i32* %is_big_v.addr, align 4, !tbaa !5
  %tobool139 = icmp ne i32 %135, 0
  br i1 %tobool139, label %if.then.140, label %if.else.141

if.then.140:                                      ; preds = %if.else.138
  %136 = load i32*, i32** %divide_v.addr, align 8, !tbaa !1
  store i32 1, i32* %136, align 4, !tbaa !5
  br label %if.end.142

if.else.141:                                      ; preds = %if.else.138
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.142:                                       ; preds = %if.then.140
  br label %if.end.143

if.end.143:                                       ; preds = %if.end.142, %if.then.137
  br label %if.end.144

if.end.144:                                       ; preds = %if.end.143, %if.then.134
  br label %if.end.145

if.end.145:                                       ; preds = %if.end.144, %if.then.129
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %if.then.124
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %if.then.120
  store i32 4, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.147, %if.else.141, %if.then.115, %if.then.110, %if.then.105, %if.then.100, %if.end.85, %if.then.84, %if.end.75, %if.then.74, %if.then.66
  %137 = bitcast double* %Dv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %137) #2
  %138 = bitcast double* %Du to i8*
  call void @llvm.lifetime.end(i64 8, i8* %138) #2
  %139 = bitcast double* %D0110 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %139) #2
  %140 = bitcast double* %D0011 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %140) #2
  %141 = bitcast double* %D0111 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %141) #2
  %142 = bitcast double* %D0010 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %142) #2
  %143 = bitcast double* %D1011 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %143) #2
  %144 = bitcast double* %D0001 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %144) #2
  %145 = bitcast double* %D to i8*
  call void @llvm.lifetime.end(i64 8, i8* %145) #2
  %146 = bitcast %struct.patch_color_s* %d to i8*
  call void @llvm.lifetime.end(i64 272, i8* %146) #2
  %147 = bitcast %struct.patch_color_s* %d1011 to i8*
  call void @llvm.lifetime.end(i64 272, i8* %147) #2
  %148 = bitcast %struct.patch_color_s* %d0001 to i8*
  call void @llvm.lifetime.end(i64 272, i8* %148) #2
  %149 = load i32, i32* %retval
  ret i32 %149
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @triangles2(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %p, i32 %dummy_argument) #1 {
entry:
  %retval = alloca i32, align 4
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %dummy_argument.addr = alloca i32, align 4
  %l = alloca %struct.wedge_vertex_list_t, align 8
  %code = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store i32 %dummy_argument, i32* %dummy_argument.addr, align 4, !tbaa !5
  %0 = bitcast %struct.wedge_vertex_list_t* %l to i8*
  call void @llvm.lifetime.start(i64 24, i8* %0) #2
  %1 = bitcast i32* %code to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #2
  call void @init_wedge_vertex_list(%struct.wedge_vertex_list_t* %l, i32 1) #5
  %2 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %3 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p1 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p1, i32 0, i64 0
  %arrayidx2 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx, i32 0, i64 0
  %4 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx2, align 8, !tbaa !1
  %5 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p3 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p3, i32 0, i64 0
  %arrayidx5 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx4, i32 0, i64 1
  %6 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx5, align 8, !tbaa !1
  %7 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p6 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %7, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p6, i32 0, i64 1
  %arrayidx8 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx7, i32 0, i64 1
  %8 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx8, align 8, !tbaa !1
  %9 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l0001 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %9, i32 0, i32 1
  %10 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0001, align 8, !tbaa !182
  %11 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l0111 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %11, i32 0, i32 2
  %12 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l0111, align 8, !tbaa !184
  %call = call i32 @fill_triangle(%struct.patch_fill_state_s* %2, %struct.shading_vertex_s* %4, %struct.shading_vertex_s* %6, %struct.shading_vertex_s* %8, %struct.wedge_vertex_list_t* %10, %struct.wedge_vertex_list_t* %12, %struct.wedge_vertex_list_t* %l) #5
  store i32 %call, i32* %code, align 4, !tbaa !5
  %13 = load i32, i32* %code, align 4, !tbaa !5
  %cmp = icmp slt i32 %13, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %14 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %14, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %last_side = getelementptr inbounds %struct.wedge_vertex_list_t, %struct.wedge_vertex_list_t* %l, i32 0, i32 0
  store i32 1, i32* %last_side, align 4, !tbaa !172
  %15 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %16 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p9 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %16, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p9, i32 0, i64 1
  %arrayidx11 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx10, i32 0, i64 1
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx11, align 8, !tbaa !1
  %18 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p12 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %18, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p12, i32 0, i64 1
  %arrayidx14 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx13, i32 0, i64 0
  %19 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx14, align 8, !tbaa !1
  %20 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p15 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %20, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p15, i32 0, i64 0
  %arrayidx17 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx16, i32 0, i64 0
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx17, align 8, !tbaa !1
  %22 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l1110 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %22, i32 0, i32 3
  %23 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l1110, align 8, !tbaa !185
  %24 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %l1000 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %24, i32 0, i32 4
  %25 = load %struct.wedge_vertex_list_t*, %struct.wedge_vertex_list_t** %l1000, align 8, !tbaa !186
  %call18 = call i32 @fill_triangle(%struct.patch_fill_state_s* %15, %struct.shading_vertex_s* %17, %struct.shading_vertex_s* %19, %struct.shading_vertex_s* %21, %struct.wedge_vertex_list_t* %23, %struct.wedge_vertex_list_t* %25, %struct.wedge_vertex_list_t* %l) #5
  store i32 %call18, i32* %code, align 4, !tbaa !5
  %26 = load i32, i32* %code, align 4, !tbaa !5
  %cmp19 = icmp slt i32 %26, 0
  br i1 %cmp19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %if.end
  %27 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %27, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.21:                                        ; preds = %if.end
  %28 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %29 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p22 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %29, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p22, i32 0, i64 1
  %arrayidx24 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx23, i32 0, i64 1
  %30 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx24, align 8, !tbaa !1
  %c = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %30, i32 0, i32 1
  %31 = load %struct.patch_color_s*, %struct.patch_color_s** %c, align 8, !tbaa !150
  %32 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p25 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %32, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p25, i32 0, i64 0
  %arrayidx27 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx26, i32 0, i64 0
  %33 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx27, align 8, !tbaa !1
  %c28 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %33, i32 0, i32 1
  %34 = load %struct.patch_color_s*, %struct.patch_color_s** %c28, align 8, !tbaa !150
  %call29 = call i32 @terminate_wedge_vertex_list(%struct.patch_fill_state_s* %28, %struct.wedge_vertex_list_t* %l, %struct.patch_color_s* %31, %struct.patch_color_s* %34) #5
  store i32 %call29, i32* %code, align 4, !tbaa !5
  %35 = load i32, i32* %code, align 4, !tbaa !5
  %cmp30 = icmp slt i32 %35, 0
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.21
  %36 = load i32, i32* %code, align 4, !tbaa !5
  store i32 %36, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end.21
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.32, %if.then.31, %if.then.20, %if.then
  %37 = bitcast i32* %code to i8*
  call void @llvm.lifetime.end(i64 4, i8* %37) #2
  %38 = bitcast %struct.wedge_vertex_list_t* %l to i8*
  call void @llvm.lifetime.end(i64 24, i8* %38) #2
  %39 = load i32, i32* %retval
  ret i32 %39
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @divide_quadrangle_by_v(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %s0, %struct.quadrangle_patch* %s1, %struct.shading_vertex_s* %q, %struct.quadrangle_patch* %p, %struct.patch_color_s** %c) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %s0.addr = alloca %struct.quadrangle_patch*, align 8
  %s1.addr = alloca %struct.quadrangle_patch*, align 8
  %q.addr = alloca %struct.shading_vertex_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %c.addr = alloca %struct.patch_color_s**, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %s0, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %s1, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store %struct.patch_color_s** %c, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %0 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %0, i64 0
  %1 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %2, i64 0
  %c2 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx1, i32 0, i32 1
  store %struct.patch_color_s* %1, %struct.patch_color_s** %c2, align 8, !tbaa !150
  %3 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %3, i64 1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx3, align 8, !tbaa !1
  %5 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %5, i64 1
  %c5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx4, i32 0, i32 1
  store %struct.patch_color_s* %4, %struct.patch_color_s** %c5, align 8, !tbaa !150
  %6 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p6 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p6, i32 0, i64 0
  %arrayidx8 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx7, i32 0, i64 0
  %7 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx8, align 8, !tbaa !1
  %p9 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %7, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p9, i32 0, i32 0
  %8 = load i32, i32* %x, align 4, !tbaa !155
  %9 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p10, i32 0, i64 1
  %arrayidx12 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx11, i32 0, i64 0
  %10 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx12, align 8, !tbaa !1
  %p13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %10, i32 0, i32 0
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p13, i32 0, i32 0
  %11 = load i32, i32* %x14, align 4, !tbaa !155
  %add = add nsw i32 %8, %11
  %div = sdiv i32 %add, 2
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i64 0
  %p16 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx15, i32 0, i32 0
  %x17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p16, i32 0, i32 0
  store i32 %div, i32* %x17, align 4, !tbaa !155
  %13 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p18 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %13, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p18, i32 0, i64 0
  %arrayidx20 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx19, i32 0, i64 1
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx20, align 8, !tbaa !1
  %p21 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 0
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p21, i32 0, i32 0
  %15 = load i32, i32* %x22, align 4, !tbaa !155
  %16 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p23 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %16, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p23, i32 0, i64 1
  %arrayidx25 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx24, i32 0, i64 1
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx25, align 8, !tbaa !1
  %p26 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 0
  %x27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p26, i32 0, i32 0
  %18 = load i32, i32* %x27, align 4, !tbaa !155
  %add28 = add nsw i32 %15, %18
  %div29 = sdiv i32 %add28, 2
  %19 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %19, i64 1
  %p31 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx30, i32 0, i32 0
  %x32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p31, i32 0, i32 0
  store i32 %div29, i32* %x32, align 4, !tbaa !155
  %20 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p33 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %20, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p33, i32 0, i64 0
  %arrayidx35 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx34, i32 0, i64 0
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx35, align 8, !tbaa !1
  %p36 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %21, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p36, i32 0, i32 1
  %22 = load i32, i32* %y, align 4, !tbaa !156
  %23 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p37 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %23, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p37, i32 0, i64 1
  %arrayidx39 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx38, i32 0, i64 0
  %24 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx39, align 8, !tbaa !1
  %p40 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %24, i32 0, i32 0
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p40, i32 0, i32 1
  %25 = load i32, i32* %y41, align 4, !tbaa !156
  %add42 = add nsw i32 %22, %25
  %div43 = sdiv i32 %add42, 2
  %26 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %26, i64 0
  %p45 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx44, i32 0, i32 0
  %y46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p45, i32 0, i32 1
  store i32 %div43, i32* %y46, align 4, !tbaa !156
  %27 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p47 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %27, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p47, i32 0, i64 0
  %arrayidx49 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx48, i32 0, i64 1
  %28 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx49, align 8, !tbaa !1
  %p50 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %28, i32 0, i32 0
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p50, i32 0, i32 1
  %29 = load i32, i32* %y51, align 4, !tbaa !156
  %30 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p52 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %30, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p52, i32 0, i64 1
  %arrayidx54 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx53, i32 0, i64 1
  %31 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx54, align 8, !tbaa !1
  %p55 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %31, i32 0, i32 0
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p55, i32 0, i32 1
  %32 = load i32, i32* %y56, align 4, !tbaa !156
  %add57 = add nsw i32 %29, %32
  %div58 = sdiv i32 %add57, 2
  %33 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx59 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %33, i64 1
  %p60 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx59, i32 0, i32 0
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p60, i32 0, i32 1
  store i32 %div58, i32* %y61, align 4, !tbaa !156
  %34 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %34, i64 0
  %35 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx62, align 8, !tbaa !1
  %36 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p63 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %36, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p63, i32 0, i64 0
  %arrayidx65 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx64, i32 0, i64 0
  %37 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx65, align 8, !tbaa !1
  %c66 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %37, i32 0, i32 1
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %c66, align 8, !tbaa !150
  %39 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p67 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %39, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p67, i32 0, i64 1
  %arrayidx69 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx68, i32 0, i64 0
  %40 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx69, align 8, !tbaa !1
  %c70 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %40, i32 0, i32 1
  %41 = load %struct.patch_color_s*, %struct.patch_color_s** %c70, align 8, !tbaa !150
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %35, %struct.patch_color_s* %38, %struct.patch_color_s* %41, %struct.patch_fill_state_s* %42, double 5.000000e-01) #5
  %43 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %43, i64 1
  %44 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx71, align 8, !tbaa !1
  %45 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p72 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %45, i32 0, i32 0
  %arrayidx73 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p72, i32 0, i64 0
  %arrayidx74 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx73, i32 0, i64 1
  %46 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx74, align 8, !tbaa !1
  %c75 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %46, i32 0, i32 1
  %47 = load %struct.patch_color_s*, %struct.patch_color_s** %c75, align 8, !tbaa !150
  %48 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p76 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %48, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p76, i32 0, i64 1
  %arrayidx78 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx77, i32 0, i64 1
  %49 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx78, align 8, !tbaa !1
  %c79 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %49, i32 0, i32 1
  %50 = load %struct.patch_color_s*, %struct.patch_color_s** %c79, align 8, !tbaa !150
  %51 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %44, %struct.patch_color_s* %47, %struct.patch_color_s* %50, %struct.patch_fill_state_s* %51, double 5.000000e-01) #5
  %52 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p80 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %52, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p80, i32 0, i64 0
  %arrayidx82 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx81, i32 0, i64 0
  %53 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx82, align 8, !tbaa !1
  %54 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p83 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %54, i32 0, i32 0
  %arrayidx84 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p83, i32 0, i64 0
  %arrayidx85 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx84, i32 0, i64 0
  store %struct.shading_vertex_s* %53, %struct.shading_vertex_s** %arrayidx85, align 8, !tbaa !1
  %55 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p86 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %55, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p86, i32 0, i64 0
  %arrayidx88 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx87, i32 0, i64 1
  %56 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx88, align 8, !tbaa !1
  %57 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p89 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %57, i32 0, i32 0
  %arrayidx90 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p89, i32 0, i64 0
  %arrayidx91 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx90, i32 0, i64 1
  store %struct.shading_vertex_s* %56, %struct.shading_vertex_s** %arrayidx91, align 8, !tbaa !1
  %58 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx92 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %58, i64 0
  %59 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p93 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %59, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p93, i32 0, i64 0
  %arrayidx95 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx94, i32 0, i64 0
  store %struct.shading_vertex_s* %arrayidx92, %struct.shading_vertex_s** %arrayidx95, align 8, !tbaa !1
  %60 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p96 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %60, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p96, i32 0, i64 1
  %arrayidx98 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx97, i32 0, i64 0
  store %struct.shading_vertex_s* %arrayidx92, %struct.shading_vertex_s** %arrayidx98, align 8, !tbaa !1
  %61 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx99 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %61, i64 1
  %62 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p100 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %62, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p100, i32 0, i64 0
  %arrayidx102 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx101, i32 0, i64 1
  store %struct.shading_vertex_s* %arrayidx99, %struct.shading_vertex_s** %arrayidx102, align 8, !tbaa !1
  %63 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p103 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %63, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p103, i32 0, i64 1
  %arrayidx105 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx104, i32 0, i64 1
  store %struct.shading_vertex_s* %arrayidx99, %struct.shading_vertex_s** %arrayidx105, align 8, !tbaa !1
  %64 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p106 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %64, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p106, i32 0, i64 1
  %arrayidx108 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx107, i32 0, i64 0
  %65 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx108, align 8, !tbaa !1
  %66 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p109 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %66, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p109, i32 0, i64 1
  %arrayidx111 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx110, i32 0, i64 0
  store %struct.shading_vertex_s* %65, %struct.shading_vertex_s** %arrayidx111, align 8, !tbaa !1
  %67 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p112 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %67, i32 0, i32 0
  %arrayidx113 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p112, i32 0, i64 1
  %arrayidx114 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx113, i32 0, i64 1
  %68 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx114, align 8, !tbaa !1
  %69 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p115 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %69, i32 0, i32 0
  %arrayidx116 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p115, i32 0, i64 1
  %arrayidx117 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx116, i32 0, i64 1
  store %struct.shading_vertex_s* %68, %struct.shading_vertex_s** %arrayidx117, align 8, !tbaa !1
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @divide_quadrangle_by_u(%struct.patch_fill_state_s* %pfs, %struct.quadrangle_patch* %s0, %struct.quadrangle_patch* %s1, %struct.shading_vertex_s* %q, %struct.quadrangle_patch* %p, %struct.patch_color_s** %c) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %s0.addr = alloca %struct.quadrangle_patch*, align 8
  %s1.addr = alloca %struct.quadrangle_patch*, align 8
  %q.addr = alloca %struct.shading_vertex_s*, align 8
  %p.addr = alloca %struct.quadrangle_patch*, align 8
  %c.addr = alloca %struct.patch_color_s**, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %s0, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %s1, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  store %struct.shading_vertex_s* %q, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  store %struct.quadrangle_patch* %p, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  store %struct.patch_color_s** %c, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %0 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %0, i64 0
  %1 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx, align 8, !tbaa !1
  %2 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx1 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %2, i64 0
  %c2 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx1, i32 0, i32 1
  store %struct.patch_color_s* %1, %struct.patch_color_s** %c2, align 8, !tbaa !150
  %3 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx3 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %3, i64 1
  %4 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx3, align 8, !tbaa !1
  %5 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx4 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %5, i64 1
  %c5 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx4, i32 0, i32 1
  store %struct.patch_color_s* %4, %struct.patch_color_s** %c5, align 8, !tbaa !150
  %6 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p6 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p6, i32 0, i64 0
  %arrayidx8 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx7, i32 0, i64 0
  %7 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx8, align 8, !tbaa !1
  %p9 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %7, i32 0, i32 0
  %x = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p9, i32 0, i32 0
  %8 = load i32, i32* %x, align 4, !tbaa !155
  %9 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p10 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx11, i32 0, i64 1
  %10 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx12, align 8, !tbaa !1
  %p13 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %10, i32 0, i32 0
  %x14 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p13, i32 0, i32 0
  %11 = load i32, i32* %x14, align 4, !tbaa !155
  %add = add nsw i32 %8, %11
  %div = sdiv i32 %add, 2
  %12 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx15 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %12, i64 0
  %p16 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx15, i32 0, i32 0
  %x17 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p16, i32 0, i32 0
  store i32 %div, i32* %x17, align 4, !tbaa !155
  %13 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p18 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %13, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p18, i32 0, i64 1
  %arrayidx20 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx19, i32 0, i64 0
  %14 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx20, align 8, !tbaa !1
  %p21 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %14, i32 0, i32 0
  %x22 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p21, i32 0, i32 0
  %15 = load i32, i32* %x22, align 4, !tbaa !155
  %16 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p23 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %16, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p23, i32 0, i64 1
  %arrayidx25 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx24, i32 0, i64 1
  %17 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx25, align 8, !tbaa !1
  %p26 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %17, i32 0, i32 0
  %x27 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p26, i32 0, i32 0
  %18 = load i32, i32* %x27, align 4, !tbaa !155
  %add28 = add nsw i32 %15, %18
  %div29 = sdiv i32 %add28, 2
  %19 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx30 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %19, i64 1
  %p31 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx30, i32 0, i32 0
  %x32 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p31, i32 0, i32 0
  store i32 %div29, i32* %x32, align 4, !tbaa !155
  %20 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p33 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %20, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p33, i32 0, i64 0
  %arrayidx35 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx34, i32 0, i64 0
  %21 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx35, align 8, !tbaa !1
  %p36 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %21, i32 0, i32 0
  %y = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p36, i32 0, i32 1
  %22 = load i32, i32* %y, align 4, !tbaa !156
  %23 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p37 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %23, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p37, i32 0, i64 0
  %arrayidx39 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx38, i32 0, i64 1
  %24 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx39, align 8, !tbaa !1
  %p40 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %24, i32 0, i32 0
  %y41 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p40, i32 0, i32 1
  %25 = load i32, i32* %y41, align 4, !tbaa !156
  %add42 = add nsw i32 %22, %25
  %div43 = sdiv i32 %add42, 2
  %26 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx44 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %26, i64 0
  %p45 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx44, i32 0, i32 0
  %y46 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p45, i32 0, i32 1
  store i32 %div43, i32* %y46, align 4, !tbaa !156
  %27 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p47 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %27, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p47, i32 0, i64 1
  %arrayidx49 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx48, i32 0, i64 0
  %28 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx49, align 8, !tbaa !1
  %p50 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %28, i32 0, i32 0
  %y51 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p50, i32 0, i32 1
  %29 = load i32, i32* %y51, align 4, !tbaa !156
  %30 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p52 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %30, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p52, i32 0, i64 1
  %arrayidx54 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx53, i32 0, i64 1
  %31 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx54, align 8, !tbaa !1
  %p55 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %31, i32 0, i32 0
  %y56 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p55, i32 0, i32 1
  %32 = load i32, i32* %y56, align 4, !tbaa !156
  %add57 = add nsw i32 %29, %32
  %div58 = sdiv i32 %add57, 2
  %33 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx59 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %33, i64 1
  %p60 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %arrayidx59, i32 0, i32 0
  %y61 = getelementptr inbounds %struct.gs_fixed_point_s, %struct.gs_fixed_point_s* %p60, i32 0, i32 1
  store i32 %div58, i32* %y61, align 4, !tbaa !156
  %34 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx62 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %34, i64 0
  %35 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx62, align 8, !tbaa !1
  %36 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p63 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %36, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p63, i32 0, i64 0
  %arrayidx65 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx64, i32 0, i64 0
  %37 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx65, align 8, !tbaa !1
  %c66 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %37, i32 0, i32 1
  %38 = load %struct.patch_color_s*, %struct.patch_color_s** %c66, align 8, !tbaa !150
  %39 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p67 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %39, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p67, i32 0, i64 0
  %arrayidx69 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx68, i32 0, i64 1
  %40 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx69, align 8, !tbaa !1
  %c70 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %40, i32 0, i32 1
  %41 = load %struct.patch_color_s*, %struct.patch_color_s** %c70, align 8, !tbaa !150
  %42 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %35, %struct.patch_color_s* %38, %struct.patch_color_s* %41, %struct.patch_fill_state_s* %42, double 5.000000e-01) #5
  %43 = load %struct.patch_color_s**, %struct.patch_color_s*** %c.addr, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds %struct.patch_color_s*, %struct.patch_color_s** %43, i64 1
  %44 = load %struct.patch_color_s*, %struct.patch_color_s** %arrayidx71, align 8, !tbaa !1
  %45 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p72 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %45, i32 0, i32 0
  %arrayidx73 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p72, i32 0, i64 1
  %arrayidx74 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx73, i32 0, i64 0
  %46 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx74, align 8, !tbaa !1
  %c75 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %46, i32 0, i32 1
  %47 = load %struct.patch_color_s*, %struct.patch_color_s** %c75, align 8, !tbaa !150
  %48 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p76 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %48, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p76, i32 0, i64 1
  %arrayidx78 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx77, i32 0, i64 1
  %49 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx78, align 8, !tbaa !1
  %c79 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %49, i32 0, i32 1
  %50 = load %struct.patch_color_s*, %struct.patch_color_s** %c79, align 8, !tbaa !150
  %51 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  call void @patch_interpolate_color(%struct.patch_color_s* %44, %struct.patch_color_s* %47, %struct.patch_color_s* %50, %struct.patch_fill_state_s* %51, double 5.000000e-01) #5
  %52 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p80 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %52, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p80, i32 0, i64 0
  %arrayidx82 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx81, i32 0, i64 0
  %53 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx82, align 8, !tbaa !1
  %54 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p83 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %54, i32 0, i32 0
  %arrayidx84 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p83, i32 0, i64 0
  %arrayidx85 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx84, i32 0, i64 0
  store %struct.shading_vertex_s* %53, %struct.shading_vertex_s** %arrayidx85, align 8, !tbaa !1
  %55 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p86 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %55, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p86, i32 0, i64 1
  %arrayidx88 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx87, i32 0, i64 0
  %56 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx88, align 8, !tbaa !1
  %57 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p89 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %57, i32 0, i32 0
  %arrayidx90 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p89, i32 0, i64 1
  %arrayidx91 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx90, i32 0, i64 0
  store %struct.shading_vertex_s* %56, %struct.shading_vertex_s** %arrayidx91, align 8, !tbaa !1
  %58 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx92 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %58, i64 0
  %59 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p93 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %59, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p93, i32 0, i64 0
  %arrayidx95 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx94, i32 0, i64 0
  store %struct.shading_vertex_s* %arrayidx92, %struct.shading_vertex_s** %arrayidx95, align 8, !tbaa !1
  %60 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p96 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %60, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p96, i32 0, i64 0
  %arrayidx98 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx97, i32 0, i64 1
  store %struct.shading_vertex_s* %arrayidx92, %struct.shading_vertex_s** %arrayidx98, align 8, !tbaa !1
  %61 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %q.addr, align 8, !tbaa !1
  %arrayidx99 = getelementptr inbounds %struct.shading_vertex_s, %struct.shading_vertex_s* %61, i64 1
  %62 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p100 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %62, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p100, i32 0, i64 1
  %arrayidx102 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx101, i32 0, i64 0
  store %struct.shading_vertex_s* %arrayidx99, %struct.shading_vertex_s** %arrayidx102, align 8, !tbaa !1
  %63 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s0.addr, align 8, !tbaa !1
  %p103 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %63, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p103, i32 0, i64 1
  %arrayidx105 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx104, i32 0, i64 1
  store %struct.shading_vertex_s* %arrayidx99, %struct.shading_vertex_s** %arrayidx105, align 8, !tbaa !1
  %64 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p106 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %64, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p106, i32 0, i64 0
  %arrayidx108 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx107, i32 0, i64 1
  %65 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx108, align 8, !tbaa !1
  %66 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p109 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %66, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p109, i32 0, i64 0
  %arrayidx111 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx110, i32 0, i64 1
  store %struct.shading_vertex_s* %65, %struct.shading_vertex_s** %arrayidx111, align 8, !tbaa !1
  %67 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %p.addr, align 8, !tbaa !1
  %p112 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %67, i32 0, i32 0
  %arrayidx113 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p112, i32 0, i64 1
  %arrayidx114 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx113, i32 0, i64 1
  %68 = load %struct.shading_vertex_s*, %struct.shading_vertex_s** %arrayidx114, align 8, !tbaa !1
  %69 = load %struct.quadrangle_patch*, %struct.quadrangle_patch** %s1.addr, align 8, !tbaa !1
  %p115 = getelementptr inbounds %struct.quadrangle_patch, %struct.quadrangle_patch* %69, i32 0, i32 0
  %arrayidx116 = getelementptr inbounds [2 x [2 x %struct.shading_vertex_s*]], [2 x [2 x %struct.shading_vertex_s*]]* %p115, i32 0, i64 1
  %arrayidx117 = getelementptr inbounds [2 x %struct.shading_vertex_s*], [2 x %struct.shading_vertex_s*]* %arrayidx116, i32 0, i64 1
  store %struct.shading_vertex_s* %68, %struct.shading_vertex_s** %arrayidx117, align 8, !tbaa !1
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @color_diff(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c0, %struct.patch_color_s* %c1, %struct.patch_color_s* %d) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c0.addr = alloca %struct.patch_color_s*, align 8
  %c1.addr = alloca %struct.patch_color_s*, align 8
  %d.addr = alloca %struct.patch_color_s*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c0, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c1, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %d, %struct.patch_color_s** %d.addr, align 8, !tbaa !1
  %0 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 3
  %2 = load i32, i32* %num_components, align 4, !tbaa !17
  store i32 %2, i32* %n, align 4, !tbaa !5
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !5
  %5 = load i32, i32* %n, align 4, !tbaa !5
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %6 to i64
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c1.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %7, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 %idxprom
  %8 = load float, float* %arrayidx, align 4, !tbaa !18
  %9 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom1 = sext i32 %9 to i64
  %10 = load %struct.patch_color_s*, %struct.patch_color_s** %c0.addr, align 8, !tbaa !1
  %cc2 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %10, i32 0, i32 1
  %paint3 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc2, i32 0, i32 1
  %values4 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint3, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [64 x float], [64 x float]* %values4, i32 0, i64 %idxprom1
  %11 = load float, float* %arrayidx5, align 4, !tbaa !18
  %sub = fsub float %8, %11
  %12 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom6 = sext i32 %12 to i64
  %13 = load %struct.patch_color_s*, %struct.patch_color_s** %d.addr, align 8, !tbaa !1
  %cc7 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %13, i32 0, i32 1
  %paint8 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc7, i32 0, i32 1
  %values9 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint8, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [64 x float], [64 x float]* %values9, i32 0, i64 %idxprom6
  store float %sub, float* %arrayidx10, align 4, !tbaa !18
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %15) #2
  %16 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %16) #2
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal double @color_norm(%struct.patch_fill_state_s* %pfs, %struct.patch_color_s* %c) #1 {
entry:
  %pfs.addr = alloca %struct.patch_fill_state_s*, align 8
  %c.addr = alloca %struct.patch_color_s*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca double, align 8
  store %struct.patch_fill_state_s* %pfs, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  store %struct.patch_color_s* %c, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %0 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #2
  %1 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %num_components = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %1, i32 0, i32 3
  %2 = load i32, i32* %num_components, align 4, !tbaa !17
  store i32 %2, i32* %n, align 4, !tbaa !5
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #2
  %4 = bitcast double* %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #2
  %5 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %5, i32 0, i32 1
  %paint = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc, i32 0, i32 1
  %values = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint, i32 0, i32 0
  %arrayidx = getelementptr inbounds [64 x float], [64 x float]* %values, i32 0, i64 0
  %6 = load float, float* %arrayidx, align 4, !tbaa !18
  %cmp = fcmp olt float %6, 0.000000e+00
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %7 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc1 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %7, i32 0, i32 1
  %paint2 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc1, i32 0, i32 1
  %values3 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint2, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [64 x float], [64 x float]* %values3, i32 0, i64 0
  %8 = load float, float* %arrayidx4, align 4, !tbaa !18
  %sub = fsub float -0.000000e+00, %8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %9 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc5 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %9, i32 0, i32 1
  %paint6 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc5, i32 0, i32 1
  %values7 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [64 x float], [64 x float]* %values7, i32 0, i64 0
  %10 = load float, float* %arrayidx8, align 4, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %sub, %cond.true ], [ %10, %cond.false ]
  %11 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %11, i32 0, i32 18
  %paint9 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain, i32 0, i32 1
  %values10 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [64 x float], [64 x float]* %values10, i32 0, i64 0
  %12 = load float, float* %arrayidx11, align 4, !tbaa !18
  %div = fdiv float %cond, %12
  %conv = fpext float %div to double
  store double %conv, double* %m, align 8, !tbaa !112
  store i32 1, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %13 = load i32, i32* %i, align 4, !tbaa !5
  %14 = load i32, i32* %n, align 4, !tbaa !5
  %cmp12 = icmp slt i32 %13, %14
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load double, double* %m, align 8, !tbaa !112
  %16 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %16 to i64
  %17 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc14 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %17, i32 0, i32 1
  %paint15 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc14, i32 0, i32 1
  %values16 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint15, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [64 x float], [64 x float]* %values16, i32 0, i64 %idxprom
  %18 = load float, float* %arrayidx17, align 4, !tbaa !18
  %cmp18 = fcmp olt float %18, 0.000000e+00
  br i1 %cmp18, label %cond.true.20, label %cond.false.27

cond.true.20:                                     ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom21 = sext i32 %19 to i64
  %20 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc22 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %20, i32 0, i32 1
  %paint23 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc22, i32 0, i32 1
  %values24 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint23, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [64 x float], [64 x float]* %values24, i32 0, i64 %idxprom21
  %21 = load float, float* %arrayidx25, align 4, !tbaa !18
  %sub26 = fsub float -0.000000e+00, %21
  br label %cond.end.33

cond.false.27:                                    ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom28 = sext i32 %22 to i64
  %23 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc29 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %23, i32 0, i32 1
  %paint30 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc29, i32 0, i32 1
  %values31 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint30, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [64 x float], [64 x float]* %values31, i32 0, i64 %idxprom28
  %24 = load float, float* %arrayidx32, align 4, !tbaa !18
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.false.27, %cond.true.20
  %cond34 = phi float [ %sub26, %cond.true.20 ], [ %24, %cond.false.27 ]
  %25 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom35 = sext i32 %25 to i64
  %26 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain36 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %26, i32 0, i32 18
  %paint37 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain36, i32 0, i32 1
  %values38 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint37, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [64 x float], [64 x float]* %values38, i32 0, i64 %idxprom35
  %27 = load float, float* %arrayidx39, align 4, !tbaa !18
  %div40 = fdiv float %cond34, %27
  %conv41 = fpext float %div40 to double
  %cmp42 = fcmp ogt double %15, %conv41
  br i1 %cmp42, label %cond.true.44, label %cond.false.45

cond.true.44:                                     ; preds = %cond.end.33
  %28 = load double, double* %m, align 8, !tbaa !112
  br label %cond.end.75

cond.false.45:                                    ; preds = %cond.end.33
  %29 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom46 = sext i32 %29 to i64
  %30 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc47 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %30, i32 0, i32 1
  %paint48 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc47, i32 0, i32 1
  %values49 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint48, i32 0, i32 0
  %arrayidx50 = getelementptr inbounds [64 x float], [64 x float]* %values49, i32 0, i64 %idxprom46
  %31 = load float, float* %arrayidx50, align 4, !tbaa !18
  %cmp51 = fcmp olt float %31, 0.000000e+00
  br i1 %cmp51, label %cond.true.53, label %cond.false.60

cond.true.53:                                     ; preds = %cond.false.45
  %32 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom54 = sext i32 %32 to i64
  %33 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc55 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %33, i32 0, i32 1
  %paint56 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc55, i32 0, i32 1
  %values57 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint56, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [64 x float], [64 x float]* %values57, i32 0, i64 %idxprom54
  %34 = load float, float* %arrayidx58, align 4, !tbaa !18
  %sub59 = fsub float -0.000000e+00, %34
  br label %cond.end.66

cond.false.60:                                    ; preds = %cond.false.45
  %35 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom61 = sext i32 %35 to i64
  %36 = load %struct.patch_color_s*, %struct.patch_color_s** %c.addr, align 8, !tbaa !1
  %cc62 = getelementptr inbounds %struct.patch_color_s, %struct.patch_color_s* %36, i32 0, i32 1
  %paint63 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %cc62, i32 0, i32 1
  %values64 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint63, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [64 x float], [64 x float]* %values64, i32 0, i64 %idxprom61
  %37 = load float, float* %arrayidx65, align 4, !tbaa !18
  br label %cond.end.66

cond.end.66:                                      ; preds = %cond.false.60, %cond.true.53
  %cond67 = phi float [ %sub59, %cond.true.53 ], [ %37, %cond.false.60 ]
  %38 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom68 = sext i32 %38 to i64
  %39 = load %struct.patch_fill_state_s*, %struct.patch_fill_state_s** %pfs.addr, align 8, !tbaa !1
  %color_domain69 = getelementptr inbounds %struct.patch_fill_state_s, %struct.patch_fill_state_s* %39, i32 0, i32 18
  %paint70 = getelementptr inbounds %struct.gs_client_color_s, %struct.gs_client_color_s* %color_domain69, i32 0, i32 1
  %values71 = getelementptr inbounds %struct.gs_paint_color_s, %struct.gs_paint_color_s* %paint70, i32 0, i32 0
  %arrayidx72 = getelementptr inbounds [64 x float], [64 x float]* %values71, i32 0, i64 %idxprom68
  %40 = load float, float* %arrayidx72, align 4, !tbaa !18
  %div73 = fdiv float %cond67, %40
  %conv74 = fpext float %div73 to double
  br label %cond.end.75

cond.end.75:                                      ; preds = %cond.end.66, %cond.true.44
  %cond76 = phi double [ %28, %cond.true.44 ], [ %conv74, %cond.end.66 ]
  store double %cond76, double* %m, align 8, !tbaa !112
  br label %for.inc

for.inc:                                          ; preds = %cond.end.75
  %41 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %42 = load double, double* %m, align 8, !tbaa !112
  %43 = bitcast double* %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %43) #2
  %44 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #2
  %45 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end(i64 4, i8* %45) #2
  ret double %42
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin }
attributes #6 = { nobuiltin nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !3, i64 0}
!7 = !{!8, !2, i64 688}
!8 = !{!"patch_fill_state_s", !2, i64 0, !2, i64 8, !2, i64 16, !6, i64 24, !3, i64 28, !2, i64 288, !2, i64 296, !2, i64 304, !9, i64 312, !2, i64 328, !6, i64 336, !6, i64 340, !6, i64 344, !6, i64 348, !2, i64 352, !2, i64 360, !6, i64 368, !6, i64 372, !11, i64 376, !6, i64 640, !6, i64 644, !13, i64 648, !6, i64 656, !6, i64 660, !6, i64 664, !6, i64 668, !6, i64 672, !6, i64 676, !6, i64 680, !2, i64 688, !2, i64 696, !2, i64 704, !2, i64 712, !2, i64 720}
!9 = !{!"gs_fixed_rect_s", !10, i64 0, !10, i64 8}
!10 = !{!"gs_fixed_point_s", !6, i64 0, !6, i64 4}
!11 = !{!"gs_client_color_s", !2, i64 0, !12, i64 8}
!12 = !{!"gs_paint_color_s", !3, i64 0}
!13 = !{!"double", !3, i64 0}
!14 = !{!8, !6, i64 680}
!15 = !{!8, !2, i64 704}
!16 = !{!8, !2, i64 16}
!17 = !{!8, !6, i64 24}
!18 = !{!19, !19, i64 0}
!19 = !{!"float", !3, i64 0}
!20 = !{!21, !2, i64 0}
!21 = !{!"gs_color_space_s", !2, i64 0, !22, i64 8, !23, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !3, i64 72}
!22 = !{!"rc_header_s", !23, i64 0, !2, i64 8, !2, i64 16}
!23 = !{!"long", !3, i64 0}
!24 = !{!25, !2, i64 40}
!25 = !{!"gs_color_space_type_s", !3, i64 0, !6, i64 4, !6, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128}
!26 = !{!8, !6, i64 340}
!27 = !{!8, !6, i64 656}
!28 = !{!8, !2, i64 328}
!29 = !{!8, !6, i64 660}
!30 = !{!8, !6, i64 336}
!31 = !{!8, !6, i64 664}
!32 = !{!8, !6, i64 672}
!33 = !{!8, !6, i64 344}
!34 = !{!8, !6, i64 640}
!35 = !{!8, !2, i64 8}
!36 = !{!37, !19, i64 296}
!37 = !{!"gs_imager_state_s", !6, i64 0, !2, i64 8, !2, i64 16, !38, i64 24, !6, i64 128, !41, i64 132, !6, i64 168, !42, i64 176, !42, i64 192, !6, i64 208, !6, i64 212, !43, i64 216, !3, i64 220, !44, i64 224, !44, i64 228, !45, i64 232, !23, i64 240, !6, i64 248, !6, i64 252, !6, i64 256, !2, i64 264, !6, i64 272, !6, i64 276, !6, i64 280, !6, i64 284, !6, i64 288, !6, i64 292, !19, i64 296, !10, i64 300, !6, i64 308, !6, i64 312, !6, i64 316, !19, i64 320, !6, i64 324, !6, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !3, i64 376, !2, i64 392, !2, i64 400, !6, i64 408, !2, i64 416, !2, i64 424, !46, i64 432, !3, i64 496, !2, i64 1008, !2, i64 1016, !47, i64 1024, !2, i64 1304, !2, i64 1312, !2, i64 1320, !2, i64 1328, !47, i64 1336}
!38 = !{!"gx_line_params_s", !19, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !6, i64 20, !19, i64 24, !19, i64 28, !19, i64 32, !6, i64 36, !39, i64 40, !40, i64 64}
!39 = !{!"gs_matrix_s", !19, i64 0, !19, i64 4, !19, i64 8, !19, i64 12, !19, i64 16, !19, i64 20}
!40 = !{!"gx_dash_params_s", !2, i64 0, !6, i64 8, !19, i64 12, !6, i64 16, !19, i64 20, !6, i64 24, !6, i64 28, !19, i64 32}
!41 = !{!"gs_matrix_fixed_s", !19, i64 0, !19, i64 4, !19, i64 8, !19, i64 12, !19, i64 16, !19, i64 20, !6, i64 24, !6, i64 28, !6, i64 32}
!42 = !{!"gs_point_s", !13, i64 0, !13, i64 8}
!43 = !{!"short", !3, i64 0}
!44 = !{!"gs_transparency_source_s", !19, i64 0}
!45 = !{!"gs_xstate_trans_flags", !6, i64 0, !6, i64 4}
!46 = !{!"gx_transfer_s", !6, i64 0, !2, i64 8, !6, i64 16, !2, i64 24, !6, i64 32, !2, i64 40, !6, i64 48, !2, i64 56}
!47 = !{!"gs_devicen_color_map_s", !6, i64 0, !3, i64 4, !6, i64 8, !6, i64 12, !23, i64 16, !3, i64 24}
!48 = !{!8, !6, i64 644}
!49 = !{!37, !19, i64 320}
!50 = !{!8, !13, i64 648}
!51 = !{!8, !6, i64 676}
!52 = !{!8, !2, i64 696}
!53 = !{!8, !6, i64 668}
!54 = !{!37, !2, i64 8}
!55 = !{!8, !2, i64 0}
!56 = !{!57, !3, i64 136}
!57 = !{!"gx_device_s", !6, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !6, i64 40, !2, i64 48, !22, i64 56, !6, i64 80, !6, i64 84, !6, i64 88, !58, i64 96, !60, i64 816, !6, i64 832, !6, i64 836, !6, i64 840, !6, i64 844, !6, i64 848, !6, i64 852, !3, i64 856, !3, i64 864, !6, i64 880, !3, i64 884, !3, i64 892, !3, i64 900, !3, i64 908, !23, i64 928, !23, i64 936, !6, i64 944, !6, i64 948, !6, i64 952, !6, i64 956, !6, i64 960, !23, i64 968, !23, i64 976, !61, i64 984, !6, i64 1052, !6, i64 1056, !62, i64 1064, !2, i64 1104, !3, i64 1112, !64, i64 1120, !65, i64 1144}
!58 = !{!"gx_device_color_info_s", !6, i64 0, !6, i64 4, !3, i64 8, !43, i64 12, !3, i64 14, !6, i64 16, !6, i64 20, !6, i64 24, !6, i64 28, !59, i64 32, !3, i64 40, !3, i64 44, !3, i64 108, !3, i64 176, !2, i64 688, !3, i64 696, !23, i64 704, !6, i64 712}
!59 = !{!"gx_device_anti_alias_info_s", !6, i64 0, !6, i64 4}
!60 = !{!"gx_device_cached_colors_s", !23, i64 0, !23, i64 8}
!61 = !{!"gx_stroked_gradient_recognizer_s", !6, i64 0, !3, i64 4, !3, i64 36}
!62 = !{!"gdev_space_params_s", !23, i64 0, !23, i64 8, !63, i64 16, !6, i64 32, !3, i64 36}
!63 = !{!"gx_band_params_s", !6, i64 0, !6, i64 4, !23, i64 8}
!64 = !{!"gx_page_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16}
!65 = !{!"gx_device_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176, !2, i64 184, !2, i64 192, !2, i64 200, !2, i64 208, !2, i64 216, !2, i64 224, !2, i64 232, !2, i64 240, !2, i64 248, !2, i64 256, !2, i64 264, !2, i64 272, !2, i64 280, !2, i64 288, !2, i64 296, !2, i64 304, !2, i64 312, !2, i64 320, !2, i64 328, !2, i64 336, !2, i64 344, !2, i64 352, !2, i64 360, !2, i64 368, !2, i64 376, !2, i64 384, !2, i64 392, !2, i64 400, !2, i64 408, !2, i64 416, !2, i64 424, !2, i64 432, !2, i64 440, !2, i64 448, !2, i64 456, !2, i64 464, !2, i64 472, !2, i64 480, !2, i64 488, !2, i64 496, !2, i64 504, !2, i64 512, !2, i64 520, !2, i64 528, !2, i64 536, !2, i64 544, !2, i64 552, !2, i64 560, !2, i64 568, !2, i64 576}
!66 = !{!67, !2, i64 48}
!67 = !{!"gx_color_map_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48}
!68 = !{!8, !2, i64 712}
!69 = !{!8, !6, i64 348}
!70 = !{!8, !2, i64 720}
!71 = !{!8, !2, i64 288}
!72 = !{!73, !2, i64 24}
!73 = !{!"gs_memory_s", !2, i64 0, !74, i64 8, !2, i64 192, !2, i64 200, !2, i64 208}
!74 = !{!"gs_memory_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !2, i64 144, !2, i64 152, !2, i64 160, !2, i64 168, !2, i64 176}
!75 = !{!8, !2, i64 352}
!76 = !{!8, !2, i64 360}
!77 = !{!78, !2, i64 8}
!78 = !{!"gs_function_s", !79, i64 0, !81, i64 72}
!79 = !{!"gs_function_head_s", !6, i64 0, !80, i64 8}
!80 = !{!"gs_function_procs_s", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56}
!81 = !{!"gs_function_params_s", !6, i64 0, !2, i64 8, !6, i64 16, !2, i64 24}
!82 = !{!8, !2, i64 296}
!83 = !{!84, !2, i64 136}
!84 = !{!"gs_shading_Cp_s", !85, i64 0, !87, i64 16}
!85 = !{!"gs_shading_head_s", !3, i64 0, !86, i64 8}
!86 = !{!"gs_shading_procs_s", !2, i64 0}
!87 = !{!"gs_shading_Cp_params_s", !2, i64 0, !2, i64 8, !2, i64 16, !6, i64 24, !88, i64 32, !6, i64 64, !89, i64 72, !6, i64 104, !6, i64 108, !2, i64 112, !2, i64 120, !6, i64 128}
!88 = !{!"gs_rect_s", !42, i64 0, !42, i64 16}
!89 = !{!"gs_data_source_s", !2, i64 0, !3, i64 8, !3, i64 16}
!90 = !{!91, !6, i64 280}
!91 = !{!"patch_curve_s", !92, i64 0, !3, i64 264, !6, i64 280}
!92 = !{!"mesh_vertex_s", !10, i64 0, !3, i64 8}
!93 = !{!84, !6, i64 144}
!94 = !{!95, !2, i64 416}
!95 = !{!"shade_coord_stream_s", !96, i64 0, !2, i64 352, !6, i64 360, !6, i64 364, !6, i64 368, !2, i64 376, !2, i64 384, !2, i64 392, !2, i64 400, !2, i64 408, !2, i64 416}
!96 = !{!"stream_s", !2, i64 0, !2, i64 8, !2, i64 16, !6, i64 24, !3, i64 28, !3, i64 112, !2, i64 136, !6, i64 144, !6, i64 148, !43, i64 152, !3, i64 154, !3, i64 155, !97, i64 160, !23, i64 176, !98, i64 184, !2, i64 240, !6, i64 248, !6, i64 252, !2, i64 256, !43, i64 264, !43, i64 266, !2, i64 272, !2, i64 280, !6, i64 288, !6, i64 292, !2, i64 296, !2, i64 304, !99, i64 312, !6, i64 328, !23, i64 336, !23, i64 344}
!97 = !{!"gs_string_s", !2, i64 0, !6, i64 8}
!98 = !{!"", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !2, i64 40, !2, i64 48}
!99 = !{!"gs_const_string_s", !2, i64 0, !6, i64 8}
!100 = !{i64 0, i64 4, !5, i64 4, i64 4, !5, i64 8, i64 256, !101, i64 264, i64 16, !101, i64 280, i64 4, !5}
!101 = !{!3, !3, i64 0}
!102 = !{i64 0, i64 4, !5, i64 4, i64 4, !5, i64 8, i64 256, !101}
!103 = !{!95, !2, i64 408}
!104 = !{!57, !2, i64 1664}
!105 = !{!91, !6, i64 0}
!106 = !{!91, !6, i64 4}
!107 = !{!23, !23, i64 0}
!108 = !{!57, !2, i64 24}
!109 = !{!10, !6, i64 0}
!110 = !{!10, !6, i64 4}
!111 = !{!57, !2, i64 1336}
!112 = !{!13, !13, i64 0}
!113 = !{!114, !2, i64 136}
!114 = !{!"gs_shading_Tpp_s", !85, i64 0, !115, i64 16}
!115 = !{!"gs_shading_Tpp_params_s", !2, i64 0, !2, i64 8, !2, i64 16, !6, i64 24, !88, i64 32, !6, i64 64, !89, i64 72, !6, i64 104, !6, i64 108, !2, i64 112, !2, i64 120, !6, i64 128}
!116 = !{!114, !6, i64 144}
!117 = !{i64 0, i64 4, !5, i64 4, i64 4, !5}
!118 = !{!8, !6, i64 372}
!119 = !{!73, !2, i64 64}
!120 = !{!8, !6, i64 368}
!121 = !{!25, !2, i64 72}
!122 = !{!123, !2, i64 0}
!123 = !{!"gx_device_color_s", !2, i64 0, !3, i64 8, !124, i64 352, !6, i64 360, !11, i64 368, !125, i64 632}
!124 = !{!"gs_int_point_s", !6, i64 0, !6, i64 4}
!125 = !{!"_mask", !126, i64 0, !23, i64 8, !2, i64 16}
!126 = !{!"mp_", !6, i64 0, !6, i64 4}
!127 = !{!58, !6, i64 4}
!128 = !{!129, !6, i64 0}
!129 = !{!"gs_fixed_edge_s", !10, i64 0, !10, i64 8}
!130 = !{!129, !6, i64 4}
!131 = !{!129, !6, i64 8}
!132 = !{!129, !6, i64 12}
!133 = !{!9, !6, i64 4}
!134 = !{!9, !6, i64 0}
!135 = !{!9, !6, i64 12}
!136 = !{!9, !6, i64 8}
!137 = !{i64 0, i64 4, !5, i64 4, i64 4, !5, i64 8, i64 4, !5, i64 12, i64 4, !5}
!138 = !{!8, !6, i64 312}
!139 = !{!8, !6, i64 320}
!140 = !{!8, !6, i64 316}
!141 = !{!8, !6, i64 324}
!142 = !{!143, !2, i64 0}
!143 = !{!"gs_fill_attributes_s", !2, i64 0, !6, i64 8, !2, i64 16, !6, i64 24, !6, i64 28, !6, i64 32, !2, i64 40}
!144 = !{!143, !2, i64 16}
!145 = !{!143, !6, i64 8}
!146 = !{!143, !6, i64 24}
!147 = !{!143, !6, i64 28}
!148 = !{!143, !6, i64 32}
!149 = !{!57, !2, i64 1600}
!150 = !{!151, !2, i64 8}
!151 = !{!"shading_vertex_s", !10, i64 0, !2, i64 8}
!152 = !{!57, !6, i64 100}
!153 = !{!8, !2, i64 304}
!154 = !{!143, !2, i64 40}
!155 = !{!151, !6, i64 0}
!156 = !{!151, !6, i64 4}
!157 = !{!57, !2, i64 1360}
!158 = !{!159, !6, i64 28}
!159 = !{!"", !2, i64 0, !2, i64 8, !43, i64 16, !43, i64 18, !10, i64 20, !10, i64 28, !10, i64 36}
!160 = !{!159, !6, i64 32}
!161 = !{!159, !6, i64 36}
!162 = !{!159, !6, i64 40}
!163 = !{!159, !6, i64 20}
!164 = !{!159, !6, i64 24}
!165 = !{!43, !43, i64 0}
!166 = !{i64 0, i64 8, !101, i64 8, i64 8, !1, i64 16, i64 256, !101}
!167 = !{!37, !6, i64 212}
!168 = !{!78, !2, i64 16}
!169 = !{!25, !2, i64 120}
!170 = !{!171, !2, i64 8}
!171 = !{!"", !6, i64 0, !2, i64 8, !2, i64 16}
!172 = !{!171, !6, i64 0}
!173 = !{!57, !2, i64 1608}
!174 = !{!171, !2, i64 16}
!175 = !{!176, !6, i64 0}
!176 = !{!"wedge_vertex_list_elem_s", !10, i64 0, !6, i64 8, !6, i64 12, !2, i64 16, !2, i64 24}
!177 = !{!176, !6, i64 4}
!178 = !{!176, !6, i64 12}
!179 = !{!176, !2, i64 16}
!180 = !{!176, !6, i64 8}
!181 = !{!176, !2, i64 24}
!182 = !{!183, !2, i64 32}
!183 = !{!"", !3, i64 0, !2, i64 32, !2, i64 40, !2, i64 48, !2, i64 56}
!184 = !{!183, !2, i64 40}
!185 = !{!183, !2, i64 48}
!186 = !{!183, !2, i64 56}
