; ModuleID = '24.deliver.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.envelope = type { %struct.header*, i64, i64, i8*, %struct.address, i8*, i8**, %struct.address*, %struct.address*, i64, i8*, i64, i32, i16, i16, i16, i16, i16, i16, i32 (%struct.mailer_con_info*, %struct.header*, %struct.envelope*, i32)*, i32 (%struct.mailer_con_info*, %struct.envelope*, i8*)*, %struct.envelope*, %struct.envelope*, i8*, %struct.sm_file*, i8*, i32, i32, i32, i32, i32, i32, %struct.sm_file*, %struct.sm_file*, i8*, i8*, i8*, i8, i8*, i8*, i8*, i8*, i64, i32, i64, i64, %struct.MACROS_T, %struct.mailer_con_info*, i8*, %struct.sm_timers, i64, i32, %struct.SM_RPOOL_T*, i32 }
%struct.header = type { i8*, i8*, %struct.header*, i8, i64, [8 x i32] }
%struct.address = type { i8*, i8*, i8*, i8*, %struct.mailer*, i64, i32, i32, i8*, i8*, %struct.address*, %struct.address*, i8*, %struct.address*, %struct.address*, i8*, i8*, i8*, i8*, i64, i8*, i16, i8*, i32, i32, i8* }
%struct.mailer = type { i8*, i8*, i8*, i8*, i8*, [8 x i32], i16, i16, i8**, i16, i16, i16, i16, i8*, i64, i32, i32, i8*, i8*, i32, i32, i8*, i64, i32, i16 }
%struct.sm_file = type { i8*, i8*, i32, i32, i64, i16, %struct.smbuf, i32, i8*, i32, i32 (%struct.sm_file*)*, i64 (%struct.sm_file*, i8*, i64)*, i64 (%struct.sm_file*, i64, i32)*, i64 (%struct.sm_file*, i8*, i64)*, i32 (%struct.sm_file*, i8*, i32, i8*)*, i32 (%struct.sm_file*, i32, i8*)*, i32 (%struct.sm_file*, i32, i8*)*, i32, i32, i8*, %struct.sm_file*, %struct.sm_file*, %struct.smbuf, i8*, i32, [3 x i8], [1 x i8], i32, i64, i32 }
%struct.smbuf = type { i8*, i32 }
%struct.MACROS_T = type { %struct.SM_RPOOL_T*, [8 x i32], [256 x i8*] }
%struct.mailer_con_info = type { i64, i16, i16, i16, i16, i32, i64, %struct.sm_file*, %struct.sm_file*, i32, i8*, %struct.mailer*, i8*, i8*, i8*, i64, %struct.sm_file*, i8*, i64, i32, i8*, %struct.SM_RPOOL_T*, i32, %struct.address*, %struct.MACROS_T }
%struct.sm_timers = type { %struct._timer }
%struct._timer = type { i64, i64, i64, i64 }
%struct.SM_RPOOL_T = type { i8*, void (i8*)**, i64, i64, i8*, i64, %struct.sm_poollink*, %struct.sm_resource*, i64, %struct.sm_rlist* }
%struct.sm_poollink = type { %struct.sm_poollink* }
%struct.sm_resource = type { void (i8*)*, i8* }
%struct.sm_rlist = type { [511 x %struct.sm_resource], %struct.sm_rlist* }
%struct.queue_char = type { i8*, i32, %struct.queue_char* }
%struct.anon = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [8 x i64], [8 x i64], [3 x i64], [3 x i32] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%union.bigsockaddr = type { %struct.sockaddr_in, [96 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sm_exc_handler = type { %struct.sm_exc*, [1 x %struct.__jmp_buf_tag], %struct.sm_exc_handler*, i32 }
%struct.sm_exc = type { i8*, i64, %struct.sm_exc_type*, %union.sm_val* }
%struct.sm_exc_type = type { i8*, i8*, i8*, void (%struct.sm_exc*, %struct.sm_file*)*, i8* }
%union.sm_val = type { i64 }
%struct.sm_event = type { i64, void (i32)*, i32, i32, %struct.sm_event* }
%union.anon = type { i32 }
%union.anon.0 = type { i32 }
%union.anon.1 = type { i32 }
%union.anon.2 = type { i32 }
%union.anon.3 = type { i32 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%union.anon.4 = type { i32 }
%union.anon.5 = type { i32 }
%struct.symtab = type { i8*, i16, %struct.symtab*, %union.anon.6 }
%union.anon.6 = type { %struct.mailer_con_info }
%struct.__res_state = type { i32, i32, i64, i32, [3 x %struct.sockaddr_in], i16, [7 x i8*], [256 x i8], i64, i32, [10 x %struct.anon.7], i32 (%struct.sockaddr_in**, i8**, i32*, i8*, i32, i32*)*, i32 (%struct.sockaddr_in*, i8*, i32, i8*, i32, i32*)*, i32, i32, i32, %union.anon.8 }
%struct.anon.7 = type { %struct.in_addr, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i16, [3 x i16], [3 x i32], i16, i16, [3 x %struct.sockaddr_in6*], [2 x i32] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.10 }
%union.anon.10 = type { [4 x i32] }
%struct.hostsig_t = type { i8*, i64 }
%struct.servent = type { i8*, i8**, i32, i8* }

@Verbose = external global i32, align 4
@tTdvect = external global [100 x i8], align 16
@IntSig = external global i32, align 4
@.str = private unnamed_addr constant [27 x i8] c"sendall: discarding id %s\0A\00", align 1
@LogLevel = external global i32, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"discarded\00", align 1
@OpMode = external global i8, align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"\0A===== SENDALL: mode %c, id %s, e_from \00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"\09e_flags = \00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"sendqueue:\0A\00", align 1
@CurEnv = external global %struct.envelope*, align 8
@MaxHopCount = external global i32, align 4
@.str.5 = private unnamed_addr constant [9 x i8] c"(nobody)\00", align 1
@ExitStat = external global i32, align 4
@.str.6 = private unnamed_addr constant [59 x i8] c"554 5.4.6 Too many hops %d (%d max): from %s via %s, to %s\00", align 1
@RealHostName = external global i8*, align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"5.4.6\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"554 5.4.6 Too many hops\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"sendall: QS_SENDER \00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"\0AAfter first owner pass, sendq =\0A\00", align 1
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"owner = \22%s\22, otherowners = %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"Checking \00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"    ... QS_IS_DEAD\0A\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"    ... First owner = \22%s\22\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"    ... Same owner = \22%s\22\0A\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"    ... Another owner \22%s\22\0A\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"    ... Null owner\0A\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"    ... QS_IS_BADADDR\0A\00", align 1
@FallbackMX = external global i8*, align 8
@.str.21 = private unnamed_addr constant [6 x i8] c"[IPC]\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"TCP\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"    ... FallbackMX\0A\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"deliver.c\00", align 1
@SmHeapGroup = external global i32, align 4
@.str.25 = private unnamed_addr constant [23 x i8] c"    ... QS_IS_QUEUEUP\0A\00", align 1
@NoConnect = external global i32, align 4
@.str.26 = private unnamed_addr constant [19 x i8] c"    ... expensive\0A\00", align 1
@QueueLimitId = external global %struct.queue_char*, align 8
@QueueLimitSender = external global %struct.queue_char*, align 8
@QueueLimitRecipient = external global %struct.queue_char*, align 8
@.str.27 = private unnamed_addr constant [14 x i8] c"    ... hold\0A\00", align 1
@QueueMode = external global i32, align 4
@.str.28 = private unnamed_addr constant [24 x i8] c"    ... quarantine: %s\0A\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"    ... deliverable\0A\00", align 1
@.str.30 = private unnamed_addr constant [59 x i8] c"sendall: split %s into %s, owner = \22%s\22, otherowners = %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"sendall(split): QS_SENDER \00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"\09... stripping %s from original envelope\0A\00", align 1
@.str.33 = private unnamed_addr constant [39 x i8] c"\09... dropping %s from cloned envelope\0A\00", align 1
@DefaultNotify = external global i32, align 4
@.str.34 = private unnamed_addr constant [35 x i8] c"\09... moving %s to cloned envelope\0A\00", align 1
@.str.35 = private unnamed_addr constant [20 x i8] c"%s: clone: owner=%s\00", align 1
@.str.36 = private unnamed_addr constant [27 x i8] c"sendall(owner): QS_SENDER \00", align 1
@.str.37 = private unnamed_addr constant [30 x i8] c"No deliveries: auto-queueing\0A\00", align 1
@SuperSafe = external global i32, align 4
@.str.38 = private unnamed_addr constant [25 x i8] c"after envelope splitting\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"sendall: final mode = %c\0A\00", align 1
@.str.40 = private unnamed_addr constant [61 x i8] c"\0A================ Final Send Queue(s) =====================\0A\00", align 1
@.str.41 = private unnamed_addr constant [35 x i8] c"\0A  *** Envelope %s, e_from=%s ***\0A\00", align 1
@.str.42 = private unnamed_addr constant [61 x i8] c"==========================================================\0A\0A\00", align 1
@.str.43 = private unnamed_addr constant [16 x i8] c"deliver: fork 1\00", align 1
@RestartRequest = external global i8*, align 8
@RestartWorkGroup = external global i32, align 4
@ShutdownRequest = external global i8*, align 8
@PendingSignal = external global i32, align 4
@CurrentPid = external global i32, align 4
@.str.44 = private unnamed_addr constant [16 x i8] c"deliver: fork 2\00", align 1
@QuickAbort = external global i32, align 4
@RequiresDirfsync = external global i32, align 4
@.str.45 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"sync_dir: %s: fsync(%d)\00", align 1
@.str.47 = private unnamed_addr constant [37 x i8] c"!sync_dir: cannot fsync directory %s\00", align 1
@.str.48 = private unnamed_addr constant [40 x i8] c"sync_dir: cannot fsync directory %s: %s\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"5.5.4\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"5.5.2\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"5.1.1\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"5.1.2\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"5.3.0\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"5.5.0\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"4.5.0\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"4.2.0\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"X-UNIX\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@CurHostName = external global i8*, align 8
@TimeOuts = external global %struct.anon, align 8
@.str.59 = private unnamed_addr constant [15 x i8] c"Draining Input\00", align 1
@EndWaitTimeout = internal global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16
@.str.60 = private unnamed_addr constant [33 x i8] c"endmailer %s: wait timeout (%ld)\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"endmailer %s: wait\00", align 1
@.str.62 = private unnamed_addr constant [42 x i8] c"451 4.3.0 mailer %s died with signal %d%s\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c" (core dumped)\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c" (stopped)\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"Arguments:\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"giveresponse: null envelope\00", align 1
@.str.69 = private unnamed_addr constant [20 x i8] c"SM_ASSERT(0) failed\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"250 2.0.0 Sent\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"%s (%s)\00", align 1
@.str.72 = private unnamed_addr constant [34 x i8] c"554 5.3.0 unknown mailer error %d\00", align 1
@SmtpError = external global [2048 x i8], align 16
@.str.73 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.76 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.77 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@MsgBuf = external global [0 x i8], align 1
@Errors = external global i32, align 4
@.str.78 = private unnamed_addr constant [9 x i8] c"%.3s %%s\00", align 1
@.str.79 = private unnamed_addr constant [61 x i8] c"giveresponse: status=%d, dsn=%s, e->e_message=%s, errnum=%d\0A\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"<NULL>\00", align 1
@.str.81 = private unnamed_addr constant [11 x i8] c", ctladdr=\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c" (%d/%d)\00", align 1
@.str.83 = private unnamed_addr constant [9 x i8] c", delay=\00", align 1
@.str.84 = private unnamed_addr constant [10 x i8] c", xdelay=\00", align 1
@.str.85 = private unnamed_addr constant [10 x i8] c", mailer=\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c", pri=%ld\00", align 1
@.str.87 = private unnamed_addr constant [9 x i8] c", relay=\00", align 1
@CurHostAddr = external global %union.bigsockaddr, align 4
@.str.88 = private unnamed_addr constant [6 x i8] c" [%s]\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"quarantined\00", align 1
@.str.90 = private unnamed_addr constant [16 x i8] c", quarantine=%s\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@.str.92 = private unnamed_addr constant [11 x i8] c", relay=%s\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c", dsn=\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c", stat=\00", align 1
@.str.96 = private unnamed_addr constant [11 x i8] c"NO-TO-LIST\00", align 1
@.str.97 = private unnamed_addr constant [17 x i8] c"to=%.*s [more]%s\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"to=%.*s%s\00", align 1
@UnixFromLine = external global i8*, align 8
@.str.99 = private unnamed_addr constant [3 x i8] c"\81g\00", align 1
@.str.100 = private unnamed_addr constant [3 x i8] c"\81k\00", align 1
@.str.101 = private unnamed_addr constant [36 x i8] c"From %.800s  \81d remote from %.100s\0A\00", align 1
@SmFtStdio_def = external global %struct.sm_file, align 8
@.str.102 = private unnamed_addr constant [40 x i8] c"!putbody: Cannot open %s for %s from %s\00", align 1
@.str.103 = private unnamed_addr constant [29 x i8] c"<<< No Message Collected >>>\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"MIME-Version\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"MIME-Version: 1.0\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"Content-Type\00", align 1
@.str.107 = private unnamed_addr constant [37 x i8] c"Content-Type: text/plain; charset=%s\00", align 1
@MaxMimeHeaderLength = external global i32, align 4
@MaxMimeFieldLength = external global i32, align 4
@SuprErrs = external global i32, align 4
@.str.108 = private unnamed_addr constant [6 x i8] c"From \00", align 1
@TrafficLogFile = external global %struct.sm_file*, align 8
@.str.109 = private unnamed_addr constant [10 x i8] c"%05d >>> \00", align 1
@.str.110 = private unnamed_addr constant [50 x i8] c"SM_ASSERT(pbp < peekbuf + sizeof(peekbuf)) failed\00", align 1
@.str.111 = private unnamed_addr constant [4 x i8] c"!%s\00", align 1
@.str.112 = private unnamed_addr constant [30 x i8] c"putbody: %s/%cf%s: read error\00", align 1
@.str.113 = private unnamed_addr constant [21 x i8] c"putbody: write error\00", align 1
@.str.114 = private unnamed_addr constant [23 x i8] c"mailfile %s\0A  ctladdr=\00", align 1
@FileMailer = external global %struct.mailer*, align 8
@.str.115 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@MimeMode = external global i32, align 4
@.str.116 = private unnamed_addr constant [6 x i8] c"5.6.3\00", align 1
@.str.117 = private unnamed_addr constant [48 x i8] c"554 Cannot send 8-bit data to 7-bit destination\00", align 1
@SafeFileEnv = external global i8*, align 8
@.str.118 = private unnamed_addr constant [36 x i8] c"mailfile: filename too long (%s/%s)\00", align 1
@.str.119 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.120 = private unnamed_addr constant [33 x i8] c"mailfile: filename too long (%s)\00", align 1
@OldUmask = external global i32, align 4
@CtxMailfileTimeout = internal global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16
@FileMode = external global i32, align 4
@.str.121 = private unnamed_addr constant [50 x i8] c"mailfile: ignoring set-user-ID/set-group-ID bits\0A\00", align 1
@.str.122 = private unnamed_addr constant [40 x i8] c"mailfile: Cannot open %s for %s from %s\00", align 1
@RealUserName = external global i8*, align 8
@RunAsUid = external global i32, align 4
@RealUid = external global i32, align 4
@.str.123 = private unnamed_addr constant [75 x i8] c"mailfile: insufficient privileges to change uid, RunAsUid=%ld, RealUid=%ld\00", align 1
@DefUser = external global i8*, align 8
@DefUid = external global i32, align 4
@RunAsGid = external global i32, align 4
@RealGid = external global i32, align 4
@.str.124 = private unnamed_addr constant [94 x i8] c"mailfile: insufficient privileges to change gid, RealGid=%ld, RunAsUid=%ld, gid=%ld, egid=%ld\00", align 1
@DefGid = external global i32, align 4
@DontInitGroups = external global i32, align 4
@.str.125 = private unnamed_addr constant [37 x i8] c"mailfile: initgroups(%s, %ld) failed\00", align 1
@.str.126 = private unnamed_addr constant [29 x i8] c"mailfile: setgroups() failed\00", align 1
@.str.127 = private unnamed_addr constant [21 x i8] c"mailfile: chroot %s\0A\00", align 1
@.str.128 = private unnamed_addr constant [28 x i8] c"mailfile: Cannot chroot(%s)\00", align 1
@.str.129 = private unnamed_addr constant [25 x i8] c"mailfile: deliver to %s\0A\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"mailfile: cannot chdir(/)\00", align 1
@.str.131 = private unnamed_addr constant [29 x i8] c"mailfile: setgid(%ld) failed\00", align 1
@.str.132 = private unnamed_addr constant [29 x i8] c"mailfile: setuid(%ld) failed\00", align 1
@.str.133 = private unnamed_addr constant [53 x i8] c"mailfile: running as r/euid=%ld/%ld, r/egid=%ld/%ld\0A\00", align 1
@.str.134 = private unnamed_addr constant [21 x i8] c"mailfile: trydir %s\0A\00", align 1
@DontBlameSendmail = external global [8 x i32], align 16
@.str.135 = private unnamed_addr constant [29 x i8] c"454 4.3.0 cannot open %s: %s\00", align 1
@.str.136 = private unnamed_addr constant [29 x i8] c"554 5.3.0 cannot open %s: %s\00", align 1
@.str.137 = private unnamed_addr constant [34 x i8] c"554 5.3.0 file changed after open\00", align 1
@.str.138 = private unnamed_addr constant [26 x i8] c"554 5.3.0 cannot fstat %s\00", align 1
@.str.139 = private unnamed_addr constant [26 x i8] c"Content-Transfer-Encoding\00", align 1
@.str.140 = private unnamed_addr constant [17 x i8] c"quoted-printable\00", align 1
@.str.141 = private unnamed_addr constant [7 x i8] c"base64\00", align 1
@.str.142 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@SmIoF = external global [0 x %struct.sm_file], align 8
@.str.143 = private unnamed_addr constant [19 x i8] c"mailfile: %s: wait\00", align 1
@.str.144 = private unnamed_addr constant [38 x i8] c"mailfile: %s: child died on signal %d\00", align 1
@.str.145 = private unnamed_addr constant [19 x i8] c"hostsignature(%s)\0A\00", align 1
@.str.146 = private unnamed_addr constant [8 x i8] c"_empty_\00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c"FILE\00", align 1
@.str.148 = private unnamed_addr constant [36 x i8] c"hostsignature(): stab(%s) found %s\0A\00", align 1
@ConfigLevel = external global i32, align 4
@.str.149 = private unnamed_addr constant [3 x i8] c":,\00", align 1
@.str.150 = private unnamed_addr constant [17 x i8] c"550 Host unknown\00", align 1
@.str.151 = private unnamed_addr constant [55 x i8] c"hostsignature(): getmxrr() returned %d, mxhosts[0]=%s\0A\00", align 1
@.str.152 = private unnamed_addr constant [52 x i8] c"hostsignature for host '%s' exceeds maxlen (%d): %d\00", align 1
@.str.153 = private unnamed_addr constant [24 x i8] c"hostsignature(%s) = %s\0A\00", align 1
@.str.154 = private unnamed_addr constant [32 x i8] c"sendenvelope(%s) e_flags=0x%lx\0A\00", align 1
@.str.155 = private unnamed_addr constant [10 x i8] c"[NOQUEUE]\00", align 1
@.str.156 = private unnamed_addr constant [26 x i8] c"sendenvelope, flags=0x%lx\00", align 1
@.str.157 = private unnamed_addr constant [8 x i8] c"{envid}\00", align 1
@.str.158 = private unnamed_addr constant [11 x i8] c"{bodytype}\00", align 1
@.str.159 = private unnamed_addr constant [14 x i8] c"sendall(%.*s)\00", align 1
@.str.160 = private unnamed_addr constant [41 x i8] c"deliverable: mailer %s, host %s, user %s\00", align 1
@.str.161 = private unnamed_addr constant [32 x i8] c"deliverable: mailer %s, user %s\00", align 1
@CheckpointInterval = external global i32, align 4
@.str.162 = private unnamed_addr constant [20 x i8] c"end of sendenvelope\00", align 1
@deliver.tobufsize = internal global i32 0, align 4
@deliver.tobuf = internal global i8* null, align 8
@.str.163 = private unnamed_addr constant [35 x i8] c"SM_REQUIRE(firstto != NULL) failed\00", align 1
@.str.164 = private unnamed_addr constant [29 x i8] c"SM_REQUIRE(e != NULL) failed\00", align 1
@.str.165 = private unnamed_addr constant [58 x i8] c"\0A--deliver, id=%s, mailer=%s, host=`%s', first user=`%s'\0A\00", align 1
@.str.166 = private unnamed_addr constant [14 x i8] c"{client_name}\00", align 1
@.str.167 = private unnamed_addr constant [13 x i8] c"{client_ptr}\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"{client_addr}\00", align 1
@.str.169 = private unnamed_addr constant [14 x i8] c"{client_port}\00", align 1
@.str.170 = private unnamed_addr constant [17 x i8] c"{client_resolve}\00", align 1
@SmExcHandler = external global %struct.sm_exc_handler*, align 8
@.str.171 = private unnamed_addr constant [45 x i8] c"SM_ASSERT(e->e_from.q_mailer != NULL) failed\00", align 1
@.str.172 = private unnamed_addr constant [32 x i8] c"remotename: huge return path %s\00", align 1
@IgnoreHostStatus = external global i32, align 4
@FromFlag = external global i32, align 4
@.str.173 = private unnamed_addr constant [3 x i8] c"-f\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.175 = private unnamed_addr constant [46 x i8] c"554 5.3.5 Too many parameters to %s before $u\00", align 1
@.str.176 = private unnamed_addr constant [47 x i8] c"Warning: mailer %s: LMTP flag (F=z) turned off\00", align 1
@.str.177 = private unnamed_addr constant [10 x i8] c"\0Asend to \00", align 1
@.str.178 = private unnamed_addr constant [9 x i8] c"ctladdr=\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"5.2.3\00", align 1
@.str.180 = private unnamed_addr constant [6 x i8] c"5.3.4\00", align 1
@.str.181 = private unnamed_addr constant [40 x i8] c"552 Message is too large; %ld bytes max\00", align 1
@.str.182 = private unnamed_addr constant [13 x i8] c"check_compat\00", align 1
@.str.183 = private unnamed_addr constant [13 x i8] c"{quarantine}\00", align 1
@.str.184 = private unnamed_addr constant [31 x i8] c"deliver: discarding recipient \00", align 1
@ProgMailer = external global %struct.mailer*, align 8
@.str.185 = private unnamed_addr constant [7 x i8] c"[FILE]\00", align 1
@.str.186 = private unnamed_addr constant [43 x i8] c"empty filename specification for mailer %s\00", align 1
@.str.187 = private unnamed_addr constant [6 x i8] c"2.1.5\00", align 1
@.str.188 = private unnamed_addr constant [30 x i8] c"%s... Successfully delivered\0A\00", align 1
@.str.189 = private unnamed_addr constant [8 x i8] c"[CHAIN]\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"SUCCESS,\00", align 1
@.str.191 = private unnamed_addr constant [9 x i8] c"FAILURE,\00", align 1
@.str.192 = private unnamed_addr constant [7 x i8] c"DELAY,\00", align 1
@.str.193 = private unnamed_addr constant [6 x i8] c"NEVER\00", align 1
@.str.194 = private unnamed_addr constant [13 x i8] c"{dsn_notify}\00", align 1
@.str.195 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.196 = private unnamed_addr constant [47 x i8] c"554 5.3.0 deliver: pv overflow after $u for %s\00", align 1
@.str.197 = private unnamed_addr constant [12 x i8] c"openmailer:\00", align 1
@SmtpPhase = external global i8*, align 8
@.str.198 = private unnamed_addr constant [21 x i8] c"%s... openmailer(%s)\00", align 1
@.str.199 = private unnamed_addr constant [16 x i8] c"before delivery\00", align 1
@.str.200 = private unnamed_addr constant [6 x i8] c"[LPC]\00", align 1
@.str.201 = private unnamed_addr constant [43 x i8] c"Using cached SMTP/LPC connection for %s...\00", align 1
@.str.202 = private unnamed_addr constant [31 x i8] c"null destination for %s mailer\00", align 1
@.str.203 = private unnamed_addr constant [27 x i8] c"null host signature for %s\00", align 1
@.str.204 = private unnamed_addr constant [25 x i8] c"554 5.3.5 non-clever IPC\00", align 1
@.str.205 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@.str.206 = private unnamed_addr constant [19 x i8] c"Service %s unknown\00", align 1
@deliver.hostbuf = internal global [257 x i8] zeroinitializer, align 16
@.str.207 = private unnamed_addr constant [37 x i8] c"deliver: null host name in signature\00", align 1
@.str.208 = private unnamed_addr constant [13 x i8] c"openmailer: \00", align 1
@.str.209 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.210 = private unnamed_addr constant [3 x i8] c"ES\00", align 1
@.str.211 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.212 = private unnamed_addr constant [46 x i8] c"Using cached %sMTP connection to %s via %s...\00", align 1
@.str.213 = private unnamed_addr constant [6 x i8] c"4.4.5\00", align 1
@.str.214 = private unnamed_addr constant [10 x i8] c"%s %s: %s\00", align 1
@.str.215 = private unnamed_addr constant [10 x i8] c"user open\00", align 1
@.str.216 = private unnamed_addr constant [27 x i8] c"Connecting to %s via %s...\00", align 1
@.str.217 = private unnamed_addr constant [35 x i8] c"Connecting to %s port %d via %s...\00", align 1
@.str.218 = private unnamed_addr constant [61 x i8] c"Timeout.to_aconnect occurred before exhausting all addresses\00", align 1
@NumFallbackMXHosts = external global i32, align 4
@.str.219 = private unnamed_addr constant [21 x i8] c"%05d === CONNECT %s\0A\00", align 1
@.str.220 = private unnamed_addr constant [49 x i8] c"openmailer: makeconnection => stat=%d, errno=%d\0A\00", align 1
@.str.221 = private unnamed_addr constant [22 x i8] c"deliver: no host name\00", align 1
@.str.222 = private unnamed_addr constant [39 x i8] c"Using cached LMTP connection for %s...\00", align 1
@.str.223 = private unnamed_addr constant [20 x i8] c"Connecting to %s...\00", align 1
@.str.224 = private unnamed_addr constant [14 x i8] c"%05d === EXEC\00", align 1
@.str.225 = private unnamed_addr constant [26 x i8] c"before creating mail pipe\00", align 1
@.str.226 = private unnamed_addr constant [39 x i8] c"%s... openmailer(%s): pipe (to mailer)\00", align 1
@.str.227 = private unnamed_addr constant [18 x i8] c"openmailer: NULL\0A\00", align 1
@.str.228 = private unnamed_addr constant [41 x i8] c"%s... openmailer(%s): bogus mpvect %d %d\00", align 1
@.str.229 = private unnamed_addr constant [10 x i8] c"mpvect[0]\00", align 1
@.str.230 = private unnamed_addr constant [10 x i8] c"mpvect[1]\00", align 1
@.str.231 = private unnamed_addr constant [47 x i8] c"%s... openmailer(%s): overlapping mpvect %d %d\00", align 1
@.str.232 = private unnamed_addr constant [60 x i8] c"%s... openmailer(%s): overlapping mpvect %d %d, lockfp = %d\00", align 1
@.str.233 = private unnamed_addr constant [41 x i8] c"%s... openmailer(%s): pipe (from mailer)\00", align 1
@.str.234 = private unnamed_addr constant [10 x i8] c"rpvect[0]\00", align 1
@.str.235 = private unnamed_addr constant [10 x i8] c"rpvect[1]\00", align 1
@.str.236 = private unnamed_addr constant [34 x i8] c"%s... openmailer(%s): cannot fork\00", align 1
@.str.237 = private unnamed_addr constant [39 x i8] c"openmailer: initgroups(%s, %ld) failed\00", align 1
@.str.238 = private unnamed_addr constant [31 x i8] c"openmailer: setgroups() failed\00", align 1
@.str.239 = private unnamed_addr constant [96 x i8] c"openmailer: insufficient privileges to change gid, RunAsUid=%ld, new_gid=%ld, gid=%ld, egid=%ld\00", align 1
@.str.240 = private unnamed_addr constant [31 x i8] c"openmailer: setgid(%ld) failed\00", align 1
@.str.241 = private unnamed_addr constant [23 x i8] c"openmailer: chroot %s\0A\00", align 1
@.str.242 = private unnamed_addr constant [30 x i8] c"openmailer: Cannot chroot(%s)\00", align 1
@.str.243 = private unnamed_addr constant [28 x i8] c"openmailer: cannot chdir(/)\00", align 1
@.str.244 = private unnamed_addr constant [78 x i8] c"openmailer: insufficient privileges to change uid, new_euid=%ld, RunAsUid=%ld\00", align 1
@.str.245 = private unnamed_addr constant [38 x i8] c"openmailer: setreuid(%ld, %ld) failed\00", align 1
@.str.246 = private unnamed_addr constant [31 x i8] c"openmailer: setuid(%ld) failed\00", align 1
@.str.247 = private unnamed_addr constant [55 x i8] c"openmailer: running as r/euid=%ld/%ld, r/egid=%ld/%ld\0A\00", align 1
@.str.248 = private unnamed_addr constant [23 x i8] c"openmailer: trydir %s\0A\00", align 1
@.str.249 = private unnamed_addr constant [31 x i8] c"Warning: program %s unsafe: %s\00", align 1
@.str.250 = private unnamed_addr constant [52 x i8] c"%s... openmailer(%s): cannot dup pipe %d for stdout\00", align 1
@.str.251 = private unnamed_addr constant [51 x i8] c"%s... openmailer(%s): cannot dup stdout for stderr\00", align 1
@.str.252 = private unnamed_addr constant [51 x i8] c"%s... openmailer(%s): cannot dup pipe %d for stdin\00", align 1
@DtableSize = external global i32, align 4
@UserEnviron = external global [101 x i8*], align 16
@.str.253 = private unnamed_addr constant [15 x i8] c"Cannot exec %s\00", align 1
@SmFtStdiofd_def = external global %struct.sm_file, align 8
@.str.254 = private unnamed_addr constant [52 x i8] c"deliver: cannot create mailer output channel, fd=%d\00", align 1
@.str.255 = private unnamed_addr constant [51 x i8] c"deliver: cannot create mailer input channel, fd=%d\00", align 1
@.str.256 = private unnamed_addr constant [6 x i8] c"5.4.7\00", align 1
@.str.257 = private unnamed_addr constant [39 x i8] c"554 Server does not support Deliver By\00", align 1
@.str.258 = private unnamed_addr constant [50 x i8] c"554 Message can't be delivered in time; %ld < %ld\00", align 1
@.str.259 = private unnamed_addr constant [61 x i8] c"554 5.3.5 deliver: mci=%lx rcode=%d errno=%d state=%d sig=%s\00", align 1
@.str.260 = private unnamed_addr constant [39 x i8] c"%s mailer (%s) exited with EX_TEMPFAIL\00", align 1
@.str.261 = private unnamed_addr constant [15 x i8] c"after delivery\00", align 1
@.str.262 = private unnamed_addr constant [38 x i8] c"SM_ASSERT(strsize < tobufsize) failed\00", align 1
@.str.263 = private unnamed_addr constant [48 x i8] c"%s... relayed; expect no further notifications\0A\00", align 1
@.str.264 = private unnamed_addr constant [34 x i8] c"%s... Deliver-by notify: relayed\0A\00", align 1
@.str.265 = private unnamed_addr constant [33 x i8] c"%s... Deliver-By trace: relayed\0A\00", align 1
@.str.266 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@.str.267 = private unnamed_addr constant [38 x i8] c"SM_ASSERT(SmExcHandler == &_h) failed\00", align 1
@.str.268 = private unnamed_addr constant [25 x i8] c"%s... end of deliver(%s)\00", align 1
@FallbackSmartHost = external global i8*, align 8
@.str.269 = private unnamed_addr constant [40 x i8] c"one last try with FallbackSmartHost %s\0A\00", align 1
@.str.270 = private unnamed_addr constant [33 x i8] c"!dup_queue_file: can't commit %s\00", align 1
@.str.271 = private unnamed_addr constant [22 x i8] c"sendall: link(%s, %s)\00", align 1
@.str.272 = private unnamed_addr constant [32 x i8] c"!sendall: unlink(%s): permanent\00", align 1
@.str.273 = private unnamed_addr constant [34 x i8] c"!sendall: link(%s, %s): permanent\00", align 1

; Function Attrs: nounwind uwtable
define void @sendall(%struct.envelope* %e, i32 %mode) #0 {
entry:
  %e.addr = alloca %struct.envelope*, align 8
  %mode.addr = alloca i32, align 4
  %q = alloca %struct.address*, align 8
  %owner = alloca i8*, align 8
  %otherowners = alloca i32, align 4
  %save_errno = alloca i32, align 4
  %ee = alloca %struct.envelope*, align 8
  %splitenv = alloca %struct.envelope*, align 8
  %oldverbose = alloca i32, align 4
  %somedeliveries = alloca i32, align 4
  %expensive = alloca i32, align 4
  %pid = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %recip = alloca i8*, align 8
  %a = alloca %struct.address*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1_len255 = alloca i64, align 8
  %__s2_len257 = alloca i64, align 8
  %tmp258 = alloca i32, align 4
  %m = alloca %struct.mailer*, align 8
  %__s1_len335 = alloca i64, align 8
  %__s2_len337 = alloca i64, align 8
  %tmp338 = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp381 = alloca i32, align 4
  %__s1_len395 = alloca i64, align 8
  %__s2_len397 = alloca i64, align 8
  %tmp398 = alloca i32, align 4
  %__s1404 = alloca i8*, align 8
  %__result408 = alloca i32, align 4
  %tmp446 = alloca i32, align 4
  %len = alloca i32, align 4
  %p = alloca i8*, align 8
  %now = alloca i64, align 8
  %msync = alloca i32, align 4
  %qid = alloca i8*, align 8
  %qid890 = alloca i8*, align 8
  %sibling = alloca %struct.envelope*, align 8
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !5
  %0 = bitcast %struct.address** %q to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i8** %owner to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i32* %otherowners to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast %struct.envelope** %ee to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.envelope** %splitenv to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  store %struct.envelope* null, %struct.envelope** %splitenv, align 8, !tbaa !1
  %6 = bitcast i32* %oldverbose to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = load i32, i32* @Verbose, align 4, !tbaa !5
  store i32 %7, i32* %oldverbose, align 4, !tbaa !5
  %8 = bitcast i32* %somedeliveries to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #1
  store i32 0, i32* %somedeliveries, align 4, !tbaa !5
  %9 = bitcast i32* %expensive to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  store i32 0, i32* %expensive, align 4, !tbaa !5
  %10 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  %11 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags = getelementptr inbounds %struct.envelope, %struct.envelope* %11, i32 0, i32 11
  %12 = load i64, i64* %e_flags, align 8, !tbaa !7
  %and = and i64 %12, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %if.then, label %if.end.14

if.then:                                          ; preds = %entry
  %13 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv = zext i8 %13 to i32
  %cmp1 = icmp sge i32 %conv, 1
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %14 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %if.end, label %if.then.3

if.then.3:                                        ; preds = %land.lhs.true
  %15 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id = getelementptr inbounds %struct.envelope, %struct.envelope* %15, i32 0, i32 25
  %16 = load i8*, i8** %e_id, align 8, !tbaa !16
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i32 0, i32 0), i8* %16)
  br label %if.end

if.end:                                           ; preds = %if.then.3, %land.lhs.true, %if.then
  %17 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags4 = getelementptr inbounds %struct.envelope, %struct.envelope* %17, i32 0, i32 11
  %18 = load i64, i64* %e_flags4, align 8, !tbaa !7
  %or = or i64 %18, 8
  store i64 %or, i64* %e_flags4, align 8, !tbaa !7
  %19 = load i32, i32* @LogLevel, align 4, !tbaa !5
  %cmp5 = icmp sgt i32 %19, 9
  br i1 %cmp5, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %if.end
  %20 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @logundelrcpts(%struct.envelope* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 9, i32 1)
  br label %if.end.13

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* @LogLevel, align 4, !tbaa !5
  %cmp8 = icmp sgt i32 %21, 4
  br i1 %cmp8, label %if.then.10, label %if.end.12

if.then.10:                                       ; preds = %if.else
  %22 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id11 = getelementptr inbounds %struct.envelope, %struct.envelope* %22, i32 0, i32 25
  %23 = load i8*, i8** %e_id11, align 8, !tbaa !16
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 6, i8* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0))
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.10, %if.else
  br label %if.end.13

if.end.13:                                        ; preds = %if.end.12, %if.then.7
  %24 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @markstats(%struct.envelope* %24, %struct.address* null, i32 114)
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.969

if.end.14:                                        ; preds = %entry
  %25 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags15 = getelementptr inbounds %struct.envelope, %struct.envelope* %25, i32 0, i32 11
  %26 = load i64, i64* %e_flags15, align 8, !tbaa !7
  %and16 = and i64 %26, 32
  %cmp17 = icmp ne i64 %and16, 0
  br i1 %cmp17, label %land.lhs.true.19, label %if.end.29

land.lhs.true.19:                                 ; preds = %if.end.14
  %27 = load i8, i8* @OpMode, align 1, !tbaa !15
  %conv20 = sext i8 %27 to i32
  %cmp21 = icmp eq i32 %conv20, 115
  br i1 %cmp21, label %if.then.26, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.19
  %28 = load i8, i8* @OpMode, align 1, !tbaa !15
  %conv23 = sext i8 %28 to i32
  %cmp24 = icmp eq i32 %conv23, 100
  br i1 %cmp24, label %if.then.26, label %if.end.29

if.then.26:                                       ; preds = %lor.lhs.false, %land.lhs.true.19
  %29 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags27 = getelementptr inbounds %struct.envelope, %struct.envelope* %29, i32 0, i32 11
  %30 = load i64, i64* %e_flags27, align 8, !tbaa !7
  %or28 = or i64 %30, 8
  store i64 %or28, i64* %e_flags27, align 8, !tbaa !7
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.969

if.end.29:                                        ; preds = %lor.lhs.false, %if.end.14
  %31 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp30 = icmp eq i32 %31, 0
  br i1 %cmp30, label %if.then.32, label %if.end.43

if.then.32:                                       ; preds = %if.end.29
  %32 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendmode = getelementptr inbounds %struct.envelope, %struct.envelope* %32, i32 0, i32 16
  %33 = load i16, i16* %e_sendmode, align 2, !tbaa !17
  %conv33 = sext i16 %33 to i32
  store i32 %conv33, i32* %mode.addr, align 4, !tbaa !5
  %34 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp34 = icmp ne i32 %34, 118
  br i1 %cmp34, label %land.lhs.true.36, label %if.end.42

land.lhs.true.36:                                 ; preds = %if.then.32
  %35 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp37 = icmp ne i32 %35, 100
  br i1 %cmp37, label %land.lhs.true.39, label %if.end.42

land.lhs.true.39:                                 ; preds = %land.lhs.true.36
  %36 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_msgpriority = getelementptr inbounds %struct.envelope, %struct.envelope* %36, i32 0, i32 1
  %37 = load i64, i64* %e_msgpriority, align 8, !tbaa !18
  %38 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_ctime = getelementptr inbounds %struct.envelope, %struct.envelope* %38, i32 0, i32 2
  %39 = load i64, i64* %e_ctime, align 8, !tbaa !19
  %call = call i32 @shouldqueue(i64 %37, i64 %39)
  %tobool40 = icmp ne i32 %call, 0
  br i1 %tobool40, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %land.lhs.true.39
  store i32 113, i32* %mode.addr, align 4, !tbaa !5
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.41, %land.lhs.true.39, %land.lhs.true.36, %if.then.32
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.end.29
  %40 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv44 = zext i8 %40 to i32
  %cmp45 = icmp sge i32 %conv44, 1
  br i1 %cmp45, label %land.lhs.true.47, label %if.end.53

land.lhs.true.47:                                 ; preds = %if.end.43
  %41 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool48 = icmp ne i32 %41, 0
  br i1 %tobool48, label %if.end.53, label %if.then.49

if.then.49:                                       ; preds = %land.lhs.true.47
  %42 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %43 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id50 = getelementptr inbounds %struct.envelope, %struct.envelope* %43, i32 0, i32 25
  %44 = load i8*, i8** %e_id50, align 8, !tbaa !16
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0), i32 %42, i8* %44)
  %call51 = call %struct.sm_file* @sm_debug_file()
  %45 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from = getelementptr inbounds %struct.envelope, %struct.envelope* %45, i32 0, i32 4
  call void @printaddr(%struct.sm_file* %call51, %struct.address* %e_from, i32 0)
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0))
  %46 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @printenvflags(%struct.envelope* %46)
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0))
  %call52 = call %struct.sm_file* @sm_debug_file()
  %47 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue = getelementptr inbounds %struct.envelope, %struct.envelope* %47, i32 0, i32 7
  %48 = load %struct.address*, %struct.address** %e_sendqueue, align 8, !tbaa !20
  call void @printaddr(%struct.sm_file* %call52, %struct.address* %48, i32 1)
  br label %if.end.53

if.end.53:                                        ; preds = %if.then.49, %land.lhs.true.47, %if.end.43
  %49 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.envelope* %49, %struct.envelope** @CurEnv, align 8, !tbaa !1
  %50 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 62), align 1, !tbaa !15
  %conv54 = zext i8 %50 to i32
  %cmp55 = icmp sge i32 %conv54, 1
  br i1 %cmp55, label %land.lhs.true.57, label %if.end.60

land.lhs.true.57:                                 ; preds = %if.end.53
  %51 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool58 = icmp ne i32 %51, 0
  br i1 %tobool58, label %if.end.60, label %if.then.59

if.then.59:                                       ; preds = %land.lhs.true.57
  call void @checkfds(i8* null)
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.59, %land.lhs.true.57, %if.end.53
  %52 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_hopcount = getelementptr inbounds %struct.envelope, %struct.envelope* %52, i32 0, i32 14
  %53 = load i16, i16* %e_hopcount, align 2, !tbaa !21
  %conv61 = sext i16 %53 to i32
  %54 = load i32, i32* @MaxHopCount, align 4, !tbaa !5
  %cmp62 = icmp sgt i32 %conv61, %54
  br i1 %cmp62, label %if.then.64, label %if.end.99

if.then.64:                                       ; preds = %if.end.60
  %55 = bitcast i8** %recip to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55) #1
  %56 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue65 = getelementptr inbounds %struct.envelope, %struct.envelope* %56, i32 0, i32 7
  %57 = load %struct.address*, %struct.address** %e_sendqueue65, align 8, !tbaa !20
  %cmp66 = icmp ne %struct.address* %57, null
  br i1 %cmp66, label %land.lhs.true.68, label %if.else.75

land.lhs.true.68:                                 ; preds = %if.then.64
  %58 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue69 = getelementptr inbounds %struct.envelope, %struct.envelope* %58, i32 0, i32 7
  %59 = load %struct.address*, %struct.address** %e_sendqueue69, align 8, !tbaa !20
  %q_paddr = getelementptr inbounds %struct.address, %struct.address* %59, i32 0, i32 0
  %60 = load i8*, i8** %q_paddr, align 8, !tbaa !22
  %cmp70 = icmp ne i8* %60, null
  br i1 %cmp70, label %if.then.72, label %if.else.75

if.then.72:                                       ; preds = %land.lhs.true.68
  %61 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue73 = getelementptr inbounds %struct.envelope, %struct.envelope* %61, i32 0, i32 7
  %62 = load %struct.address*, %struct.address** %e_sendqueue73, align 8, !tbaa !20
  %q_paddr74 = getelementptr inbounds %struct.address, %struct.address* %62, i32 0, i32 0
  %63 = load i8*, i8** %q_paddr74, align 8, !tbaa !22
  store i8* %63, i8** %recip, align 8, !tbaa !1
  br label %if.end.76

if.else.75:                                       ; preds = %land.lhs.true.68, %if.then.64
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8** %recip, align 8, !tbaa !1
  br label %if.end.76

if.end.76:                                        ; preds = %if.else.75, %if.then.72
  %call77 = call i32* @__errno_location() #11
  store i32 0, i32* %call77, align 4, !tbaa !5
  %64 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %65 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp78 = icmp eq i32 %65, 113
  br i1 %cmp78, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.76
  %66 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp80 = icmp eq i32 %66, 100
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end.76
  %67 = phi i1 [ true, %if.end.76 ], [ %cmp80, %lor.rhs ]
  %lor.ext = zext i1 %67 to i32
  call void @queueup(%struct.envelope* %64, i32 %lor.ext, i32 0)
  %68 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags82 = getelementptr inbounds %struct.envelope, %struct.envelope* %68, i32 0, i32 11
  %69 = load i64, i64* %e_flags82, align 8, !tbaa !7
  %or83 = or i64 %69, 8232
  store i64 %or83, i64* %e_flags82, align 8, !tbaa !7
  store i32 69, i32* @ExitStat, align 4, !tbaa !5
  %70 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_hopcount84 = getelementptr inbounds %struct.envelope, %struct.envelope* %70, i32 0, i32 14
  %71 = load i16, i16* %e_hopcount84, align 2, !tbaa !21
  %conv85 = sext i16 %71 to i32
  %72 = load i32, i32* @MaxHopCount, align 4, !tbaa !5
  %73 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from86 = getelementptr inbounds %struct.envelope, %struct.envelope* %73, i32 0, i32 4
  %q_paddr87 = getelementptr inbounds %struct.address, %struct.address* %e_from86, i32 0, i32 0
  %74 = load i8*, i8** %q_paddr87, align 8, !tbaa !23
  %75 = load i8*, i8** @RealHostName, align 8, !tbaa !1
  %cmp88 = icmp eq i8* %75, null
  br i1 %cmp88, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.end
  br label %cond.end

cond.false:                                       ; preds = %lor.end
  %76 = load i8*, i8** @RealHostName, align 8, !tbaa !1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), %cond.true ], [ %76, %cond.false ]
  %77 = load i8*, i8** %recip, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i32 0, i32 0), i32 %conv85, i32 %72, i8* %74, i8* %cond, i8* %77)
  %78 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue90 = getelementptr inbounds %struct.envelope, %struct.envelope* %78, i32 0, i32 7
  %79 = load %struct.address*, %struct.address** %e_sendqueue90, align 8, !tbaa !20
  store %struct.address* %79, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %80 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %cmp91 = icmp ne %struct.address* %80, null
  br i1 %cmp91, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %81 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state = getelementptr inbounds %struct.address, %struct.address* %81, i32 0, i32 21
  %82 = load i16, i16* %q_state, align 2, !tbaa !24
  %conv93 = sext i16 %82 to i32
  %cmp94 = icmp sge i32 %conv93, 6
  br i1 %cmp94, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %for.body
  br label %for.inc

if.end.97:                                        ; preds = %for.body
  %83 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state98 = getelementptr inbounds %struct.address, %struct.address* %83, i32 0, i32 21
  store i16 2, i16* %q_state98, align 2, !tbaa !24
  %84 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_status = getelementptr inbounds %struct.address, %struct.address* %84, i32 0, i32 17
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8** %q_status, align 8, !tbaa !25
  %85 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_rstatus = getelementptr inbounds %struct.address, %struct.address* %85, i32 0, i32 18
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), i8** %q_rstatus, align 8, !tbaa !26
  br label %for.inc

for.inc:                                          ; preds = %if.end.97, %if.then.96
  %86 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_next = getelementptr inbounds %struct.address, %struct.address* %86, i32 0, i32 10
  %87 = load %struct.address*, %struct.address** %q_next, align 8, !tbaa !27
  store %struct.address* %87, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %cleanup.dest.slot
  %88 = bitcast i8** %recip to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  br label %cleanup.969

if.end.99:                                        ; preds = %if.end.60
  %89 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags100 = getelementptr inbounds %struct.envelope, %struct.envelope* %89, i32 0, i32 11
  %90 = load i64, i64* %e_flags100, align 8, !tbaa !7
  %and101 = and i64 %90, 16384
  %cmp102 = icmp ne i64 %and101, 0
  br i1 %cmp102, label %if.end.125, label %land.lhs.true.104

land.lhs.true.104:                                ; preds = %if.end.99
  %91 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from105 = getelementptr inbounds %struct.envelope, %struct.envelope* %91, i32 0, i32 4
  %q_state106 = getelementptr inbounds %struct.address, %struct.address* %e_from105, i32 0, i32 21
  %92 = load i16, i16* %q_state106, align 2, !tbaa !28
  %conv107 = sext i16 %92 to i32
  %cmp108 = icmp eq i32 %conv107, 3
  br i1 %cmp108, label %if.end.125, label %if.then.110

if.then.110:                                      ; preds = %land.lhs.true.104
  %93 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv111 = zext i8 %93 to i32
  %cmp112 = icmp sge i32 %conv111, 5
  br i1 %cmp112, label %land.lhs.true.114, label %if.end.119

land.lhs.true.114:                                ; preds = %if.then.110
  %94 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool115 = icmp ne i32 %94, 0
  br i1 %tobool115, label %if.end.119, label %if.then.116

if.then.116:                                      ; preds = %land.lhs.true.114
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i32 0, i32 0))
  %call117 = call %struct.sm_file* @sm_debug_file()
  %95 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from118 = getelementptr inbounds %struct.envelope, %struct.envelope* %95, i32 0, i32 4
  call void @printaddr(%struct.sm_file* %call117, %struct.address* %e_from118, i32 0)
  br label %if.end.119

if.end.119:                                       ; preds = %if.then.116, %land.lhs.true.114, %if.then.110
  %96 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from120 = getelementptr inbounds %struct.envelope, %struct.envelope* %96, i32 0, i32 4
  %q_state121 = getelementptr inbounds %struct.address, %struct.address* %e_from120, i32 0, i32 21
  store i16 8, i16* %q_state121, align 2, !tbaa !28
  %97 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from122 = getelementptr inbounds %struct.envelope, %struct.envelope* %97, i32 0, i32 4
  %98 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue123 = getelementptr inbounds %struct.envelope, %struct.envelope* %98, i32 0, i32 7
  %99 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call124 = call %struct.address* @recipient(%struct.address* %e_from122, %struct.address** %e_sendqueue123, i32 0, %struct.envelope* %99)
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.119, %land.lhs.true.104, %if.end.99
  %100 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue126 = getelementptr inbounds %struct.envelope, %struct.envelope* %100, i32 0, i32 7
  %101 = load %struct.address*, %struct.address** %e_sendqueue126, align 8, !tbaa !20
  store %struct.address* %101, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.127

for.cond.127:                                     ; preds = %for.inc.163, %if.end.125
  %102 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %cmp128 = icmp ne %struct.address* %102, null
  br i1 %cmp128, label %for.body.130, label %for.end.165

for.body.130:                                     ; preds = %for.cond.127
  %103 = bitcast %struct.address** %a to i8*
  call void @llvm.lifetime.start(i64 8, i8* %103) #1
  %104 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  store %struct.address* %104, %struct.address** %a, align 8, !tbaa !1
  br label %for.cond.131

for.cond.131:                                     ; preds = %for.inc.137, %for.body.130
  %105 = load %struct.address*, %struct.address** %a, align 8, !tbaa !1
  %cmp132 = icmp ne %struct.address* %105, null
  br i1 %cmp132, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.131
  %106 = load %struct.address*, %struct.address** %a, align 8, !tbaa !1
  %q_owner = getelementptr inbounds %struct.address, %struct.address* %106, i32 0, i32 12
  %107 = load i8*, i8** %q_owner, align 8, !tbaa !29
  %cmp134 = icmp eq i8* %107, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.131
  %108 = phi i1 [ false, %for.cond.131 ], [ %cmp134, %land.rhs ]
  br i1 %108, label %for.body.136, label %for.end.138

for.body.136:                                     ; preds = %land.end
  br label %for.inc.137

for.inc.137:                                      ; preds = %for.body.136
  %109 = load %struct.address*, %struct.address** %a, align 8, !tbaa !1
  %q_alias = getelementptr inbounds %struct.address, %struct.address* %109, i32 0, i32 11
  %110 = load %struct.address*, %struct.address** %q_alias, align 8, !tbaa !30
  store %struct.address* %110, %struct.address** %a, align 8, !tbaa !1
  br label %for.cond.131

for.end.138:                                      ; preds = %land.end
  %111 = load %struct.address*, %struct.address** %a, align 8, !tbaa !1
  %cmp139 = icmp ne %struct.address* %111, null
  br i1 %cmp139, label %if.then.141, label %if.end.144

if.then.141:                                      ; preds = %for.end.138
  %112 = load %struct.address*, %struct.address** %a, align 8, !tbaa !1
  %q_owner142 = getelementptr inbounds %struct.address, %struct.address* %112, i32 0, i32 12
  %113 = load i8*, i8** %q_owner142, align 8, !tbaa !29
  %114 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner143 = getelementptr inbounds %struct.address, %struct.address* %114, i32 0, i32 12
  store i8* %113, i8** %q_owner143, align 8, !tbaa !29
  br label %if.end.144

if.end.144:                                       ; preds = %if.then.141, %for.end.138
  %115 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner145 = getelementptr inbounds %struct.address, %struct.address* %115, i32 0, i32 12
  %116 = load i8*, i8** %q_owner145, align 8, !tbaa !29
  %cmp146 = icmp ne i8* %116, null
  br i1 %cmp146, label %land.lhs.true.148, label %if.end.162

land.lhs.true.148:                                ; preds = %if.end.144
  %117 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state149 = getelementptr inbounds %struct.address, %struct.address* %117, i32 0, i32 21
  %118 = load i16, i16* %q_state149, align 2, !tbaa !24
  %conv150 = sext i16 %118 to i32
  %cmp151 = icmp sge i32 %conv150, 6
  br i1 %cmp151, label %if.end.162, label %land.lhs.true.153

land.lhs.true.153:                                ; preds = %land.lhs.true.148
  %119 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %119) #1
  %120 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %120) #1
  %121 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner154 = getelementptr inbounds %struct.address, %struct.address* %121, i32 0, i32 12
  %122 = load i8*, i8** %q_owner154, align 8, !tbaa !29
  %123 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from155 = getelementptr inbounds %struct.envelope, %struct.envelope* %123, i32 0, i32 4
  %q_paddr156 = getelementptr inbounds %struct.address, %struct.address* %e_from155, i32 0, i32 0
  %124 = load i8*, i8** %q_paddr156, align 8, !tbaa !23
  %call157 = call i32 @strcmp(i8* %122, i8* %124) #1
  store i32 %call157, i32* %tmp, !tbaa !5
  %125 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %126) #1
  %127 = load i32, i32* %tmp, !tbaa !5
  %cmp158 = icmp eq i32 %127, 0
  br i1 %cmp158, label %if.then.160, label %if.end.162

if.then.160:                                      ; preds = %land.lhs.true.153
  %128 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner161 = getelementptr inbounds %struct.address, %struct.address* %128, i32 0, i32 12
  store i8* null, i8** %q_owner161, align 8, !tbaa !29
  br label %if.end.162

if.end.162:                                       ; preds = %if.then.160, %land.lhs.true.153, %land.lhs.true.148, %if.end.144
  %129 = bitcast %struct.address** %a to i8*
  call void @llvm.lifetime.end(i64 8, i8* %129) #1
  br label %for.inc.163

for.inc.163:                                      ; preds = %if.end.162
  %130 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_next164 = getelementptr inbounds %struct.address, %struct.address* %130, i32 0, i32 10
  %131 = load %struct.address*, %struct.address** %q_next164, align 8, !tbaa !27
  store %struct.address* %131, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.127

for.end.165:                                      ; preds = %for.cond.127
  %132 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv166 = zext i8 %132 to i32
  %cmp167 = icmp sge i32 %conv166, 25
  br i1 %cmp167, label %land.lhs.true.169, label %if.end.174

land.lhs.true.169:                                ; preds = %for.end.165
  %133 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool170 = icmp ne i32 %133, 0
  br i1 %tobool170, label %if.end.174, label %if.then.171

if.then.171:                                      ; preds = %land.lhs.true.169
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i32 0, i32 0))
  %call172 = call %struct.sm_file* @sm_debug_file()
  %134 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue173 = getelementptr inbounds %struct.envelope, %struct.envelope* %134, i32 0, i32 7
  %135 = load %struct.address*, %struct.address** %e_sendqueue173, align 8, !tbaa !20
  call void @printaddr(%struct.sm_file* %call172, %struct.address* %135, i32 1)
  br label %if.end.174

if.end.174:                                       ; preds = %if.then.171, %land.lhs.true.169, %for.end.165
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8** %owner, align 8, !tbaa !1
  store i32 1, i32* %otherowners, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end.698, %if.end.174
  %136 = load i8*, i8** %owner, align 8, !tbaa !1
  %cmp175 = icmp ne i8* %136, null
  br i1 %cmp175, label %land.rhs.177, label %land.end.180

land.rhs.177:                                     ; preds = %while.cond
  %137 = load i32, i32* %otherowners, align 4, !tbaa !5
  %cmp178 = icmp sgt i32 %137, 0
  br label %land.end.180

land.end.180:                                     ; preds = %land.rhs.177, %while.cond
  %138 = phi i1 [ false, %while.cond ], [ %cmp178, %land.rhs.177 ]
  br i1 %138, label %while.body, label %while.end

while.body:                                       ; preds = %land.end.180
  %139 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv181 = zext i8 %139 to i32
  %cmp182 = icmp sge i32 %conv181, 28
  br i1 %cmp182, label %land.lhs.true.184, label %if.end.187

land.lhs.true.184:                                ; preds = %while.body
  %140 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool185 = icmp ne i32 %140, 0
  br i1 %tobool185, label %if.end.187, label %if.then.186

if.then.186:                                      ; preds = %land.lhs.true.184
  %141 = load i8*, i8** %owner, align 8, !tbaa !1
  %142 = load i32, i32* %otherowners, align 4, !tbaa !5
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i32 0, i32 0), i8* %141, i32 %142)
  br label %if.end.187

if.end.187:                                       ; preds = %if.then.186, %land.lhs.true.184, %while.body
  store i8* null, i8** %owner, align 8, !tbaa !1
  %143 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags188 = getelementptr inbounds %struct.envelope, %struct.envelope* %143, i32 0, i32 11
  %144 = load i64, i64* %e_flags188, align 8, !tbaa !7
  %and189 = and i64 %144, 16
  %cmp190 = icmp ne i64 %and189, 0
  %cond192 = select i1 %cmp190, i32 1, i32 0
  store i32 %cond192, i32* %otherowners, align 4, !tbaa !5
  %145 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue193 = getelementptr inbounds %struct.envelope, %struct.envelope* %145, i32 0, i32 7
  %146 = load %struct.address*, %struct.address** %e_sendqueue193, align 8, !tbaa !20
  store %struct.address* %146, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.194

for.cond.194:                                     ; preds = %for.inc.551, %if.end.187
  %147 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %cmp195 = icmp ne %struct.address* %147, null
  br i1 %cmp195, label %for.body.197, label %for.end.553

for.body.197:                                     ; preds = %for.cond.194
  %148 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv198 = zext i8 %148 to i32
  %cmp199 = icmp sge i32 %conv198, 30
  br i1 %cmp199, label %land.lhs.true.201, label %if.end.205

land.lhs.true.201:                                ; preds = %for.body.197
  %149 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool202 = icmp ne i32 %149, 0
  br i1 %tobool202, label %if.end.205, label %if.then.203

if.then.203:                                      ; preds = %land.lhs.true.201
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0))
  %call204 = call %struct.sm_file* @sm_debug_file()
  %150 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  call void @printaddr(%struct.sm_file* %call204, %struct.address* %150, i32 0)
  br label %if.end.205

if.end.205:                                       ; preds = %if.then.203, %land.lhs.true.201, %for.body.197
  %151 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state206 = getelementptr inbounds %struct.address, %struct.address* %151, i32 0, i32 21
  %152 = load i16, i16* %q_state206, align 2, !tbaa !24
  %conv207 = sext i16 %152 to i32
  %cmp208 = icmp sge i32 %conv207, 6
  br i1 %cmp208, label %if.then.210, label %if.end.218

if.then.210:                                      ; preds = %if.end.205
  %153 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv211 = zext i8 %153 to i32
  %cmp212 = icmp sge i32 %conv211, 30
  br i1 %cmp212, label %land.lhs.true.214, label %if.end.217

land.lhs.true.214:                                ; preds = %if.then.210
  %154 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool215 = icmp ne i32 %154, 0
  br i1 %tobool215, label %if.end.217, label %if.then.216

if.then.216:                                      ; preds = %land.lhs.true.214
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i32 0, i32 0))
  br label %if.end.217

if.end.217:                                       ; preds = %if.then.216, %land.lhs.true.214, %if.then.210
  br label %for.inc.551

if.end.218:                                       ; preds = %if.end.205
  %155 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv219 = zext i8 %155 to i32
  %cmp220 = icmp sge i32 %conv219, 29
  br i1 %cmp220, label %land.lhs.true.222, label %if.end.232

land.lhs.true.222:                                ; preds = %if.end.218
  %156 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool223 = icmp ne i32 %156, 0
  br i1 %tobool223, label %if.end.232, label %land.lhs.true.224

land.lhs.true.224:                                ; preds = %land.lhs.true.222
  %157 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv225 = zext i8 %157 to i32
  %cmp226 = icmp sge i32 %conv225, 30
  br i1 %cmp226, label %land.lhs.true.228, label %if.then.230

land.lhs.true.228:                                ; preds = %land.lhs.true.224
  %158 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool229 = icmp ne i32 %158, 0
  br i1 %tobool229, label %if.then.230, label %if.end.232

if.then.230:                                      ; preds = %land.lhs.true.228, %land.lhs.true.224
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0))
  %call231 = call %struct.sm_file* @sm_debug_file()
  %159 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  call void @printaddr(%struct.sm_file* %call231, %struct.address* %159, i32 0)
  br label %if.end.232

if.end.232:                                       ; preds = %if.then.230, %land.lhs.true.228, %land.lhs.true.222, %if.end.218
  %160 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner233 = getelementptr inbounds %struct.address, %struct.address* %160, i32 0, i32 12
  %161 = load i8*, i8** %q_owner233, align 8, !tbaa !29
  %cmp234 = icmp ne i8* %161, null
  br i1 %cmp234, label %if.then.236, label %if.else.293

if.then.236:                                      ; preds = %if.end.232
  %162 = load i8*, i8** %owner, align 8, !tbaa !1
  %cmp237 = icmp eq i8* %162, null
  br i1 %cmp237, label %if.then.239, label %if.else.249

if.then.239:                                      ; preds = %if.then.236
  %163 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv240 = zext i8 %163 to i32
  %cmp241 = icmp sge i32 %conv240, 40
  br i1 %cmp241, label %land.lhs.true.243, label %if.end.247

land.lhs.true.243:                                ; preds = %if.then.239
  %164 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool244 = icmp ne i32 %164, 0
  br i1 %tobool244, label %if.end.247, label %if.then.245

if.then.245:                                      ; preds = %land.lhs.true.243
  %165 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner246 = getelementptr inbounds %struct.address, %struct.address* %165, i32 0, i32 12
  %166 = load i8*, i8** %q_owner246, align 8, !tbaa !29
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0), i8* %166)
  br label %if.end.247

if.end.247:                                       ; preds = %if.then.245, %land.lhs.true.243, %if.then.239
  %167 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner248 = getelementptr inbounds %struct.address, %struct.address* %167, i32 0, i32 12
  %168 = load i8*, i8** %q_owner248, align 8, !tbaa !29
  store i8* %168, i8** %owner, align 8, !tbaa !1
  br label %if.end.292

if.else.249:                                      ; preds = %if.then.236
  %169 = load i8*, i8** %owner, align 8, !tbaa !1
  %170 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner250 = getelementptr inbounds %struct.address, %struct.address* %170, i32 0, i32 12
  %171 = load i8*, i8** %q_owner250, align 8, !tbaa !29
  %cmp251 = icmp ne i8* %169, %171
  br i1 %cmp251, label %if.then.253, label %if.else.283

if.then.253:                                      ; preds = %if.else.249
  %172 = bitcast i64* %__s1_len255 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %172) #1
  %173 = bitcast i64* %__s2_len257 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %173) #1
  %174 = load i8*, i8** %owner, align 8, !tbaa !1
  %175 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner259 = getelementptr inbounds %struct.address, %struct.address* %175, i32 0, i32 12
  %176 = load i8*, i8** %q_owner259, align 8, !tbaa !29
  %call260 = call i32 @strcmp(i8* %174, i8* %176) #1
  store i32 %call260, i32* %tmp258, !tbaa !5
  %177 = bitcast i64* %__s2_len257 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %177) #1
  %178 = bitcast i64* %__s1_len255 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %178) #1
  %179 = load i32, i32* %tmp258, !tbaa !5
  %cmp261 = icmp eq i32 %179, 0
  br i1 %cmp261, label %if.then.263, label %if.else.272

if.then.263:                                      ; preds = %if.then.253
  %180 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv264 = zext i8 %180 to i32
  %cmp265 = icmp sge i32 %conv264, 40
  br i1 %cmp265, label %land.lhs.true.267, label %if.end.270

land.lhs.true.267:                                ; preds = %if.then.263
  %181 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool268 = icmp ne i32 %181, 0
  br i1 %tobool268, label %if.end.270, label %if.then.269

if.then.269:                                      ; preds = %land.lhs.true.267
  %182 = load i8*, i8** %owner, align 8, !tbaa !1
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i8* %182)
  br label %if.end.270

if.end.270:                                       ; preds = %if.then.269, %land.lhs.true.267, %if.then.263
  %183 = load i8*, i8** %owner, align 8, !tbaa !1
  %184 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner271 = getelementptr inbounds %struct.address, %struct.address* %184, i32 0, i32 12
  store i8* %183, i8** %q_owner271, align 8, !tbaa !29
  br label %if.end.281

if.else.272:                                      ; preds = %if.then.253
  %185 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv273 = zext i8 %185 to i32
  %cmp274 = icmp sge i32 %conv273, 40
  br i1 %cmp274, label %land.lhs.true.276, label %if.end.280

land.lhs.true.276:                                ; preds = %if.else.272
  %186 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool277 = icmp ne i32 %186, 0
  br i1 %tobool277, label %if.end.280, label %if.then.278

if.then.278:                                      ; preds = %land.lhs.true.276
  %187 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner279 = getelementptr inbounds %struct.address, %struct.address* %187, i32 0, i32 12
  %188 = load i8*, i8** %q_owner279, align 8, !tbaa !29
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i32 0, i32 0), i8* %188)
  br label %if.end.280

if.end.280:                                       ; preds = %if.then.278, %land.lhs.true.276, %if.else.272
  %189 = load i32, i32* %otherowners, align 4, !tbaa !5
  %inc = add nsw i32 %189, 1
  store i32 %inc, i32* %otherowners, align 4, !tbaa !5
  br label %if.end.281

if.end.281:                                       ; preds = %if.end.280, %if.end.270
  %190 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner282 = getelementptr inbounds %struct.address, %struct.address* %190, i32 0, i32 12
  %191 = load i8*, i8** %q_owner282, align 8, !tbaa !29
  store i8* %191, i8** %owner, align 8, !tbaa !1
  br label %if.end.291

if.else.283:                                      ; preds = %if.else.249
  %192 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv284 = zext i8 %192 to i32
  %cmp285 = icmp sge i32 %conv284, 40
  br i1 %cmp285, label %land.lhs.true.287, label %if.end.290

land.lhs.true.287:                                ; preds = %if.else.283
  %193 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool288 = icmp ne i32 %193, 0
  br i1 %tobool288, label %if.end.290, label %if.then.289

if.then.289:                                      ; preds = %land.lhs.true.287
  %194 = load i8*, i8** %owner, align 8, !tbaa !1
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i8* %194)
  br label %if.end.290

if.end.290:                                       ; preds = %if.then.289, %land.lhs.true.287, %if.else.283
  br label %if.end.291

if.end.291:                                       ; preds = %if.end.290, %if.end.281
  br label %if.end.292

if.end.292:                                       ; preds = %if.end.291, %if.end.247
  br label %if.end.302

if.else.293:                                      ; preds = %if.end.232
  %195 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv294 = zext i8 %195 to i32
  %cmp295 = icmp sge i32 %conv294, 40
  br i1 %cmp295, label %land.lhs.true.297, label %if.end.300

land.lhs.true.297:                                ; preds = %if.else.293
  %196 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool298 = icmp ne i32 %196, 0
  br i1 %tobool298, label %if.end.300, label %if.then.299

if.then.299:                                      ; preds = %land.lhs.true.297
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i32 0, i32 0))
  br label %if.end.300

if.end.300:                                       ; preds = %if.then.299, %land.lhs.true.297, %if.else.293
  %197 = load i32, i32* %otherowners, align 4, !tbaa !5
  %inc301 = add nsw i32 %197, 1
  store i32 %inc301, i32* %otherowners, align 4, !tbaa !5
  br label %if.end.302

if.end.302:                                       ; preds = %if.end.300, %if.end.292
  %198 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state303 = getelementptr inbounds %struct.address, %struct.address* %198, i32 0, i32 21
  %199 = load i16, i16* %q_state303, align 2, !tbaa !24
  %conv304 = sext i16 %199 to i32
  %cmp305 = icmp eq i32 %conv304, 2
  br i1 %cmp305, label %if.then.307, label %if.end.315

if.then.307:                                      ; preds = %if.end.302
  %200 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv308 = zext i8 %200 to i32
  %cmp309 = icmp sge i32 %conv308, 30
  br i1 %cmp309, label %land.lhs.true.311, label %if.end.314

land.lhs.true.311:                                ; preds = %if.then.307
  %201 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool312 = icmp ne i32 %201, 0
  br i1 %tobool312, label %if.end.314, label %if.then.313

if.then.313:                                      ; preds = %land.lhs.true.311
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i32 0, i32 0))
  br label %if.end.314

if.end.314:                                       ; preds = %if.then.313, %land.lhs.true.311, %if.then.307
  br label %for.inc.551

if.end.315:                                       ; preds = %if.end.302
  %202 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state316 = getelementptr inbounds %struct.address, %struct.address* %202, i32 0, i32 21
  %203 = load i16, i16* %q_state316, align 2, !tbaa !24
  %conv317 = sext i16 %203 to i32
  %cmp318 = icmp eq i32 %conv317, 3
  br i1 %cmp318, label %if.then.320, label %if.end.481

if.then.320:                                      ; preds = %if.end.315
  %204 = bitcast %struct.mailer** %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %204) #1
  %205 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_mailer = getelementptr inbounds %struct.address, %struct.address* %205, i32 0, i32 4
  %206 = load %struct.mailer*, %struct.mailer** %q_mailer, align 8, !tbaa !31
  store %struct.mailer* %206, %struct.mailer** %m, align 8, !tbaa !1
  %207 = load i8*, i8** @FallbackMX, align 8, !tbaa !1
  %cmp322 = icmp ne i8* %207, null
  br i1 %cmp322, label %land.lhs.true.324, label %if.else.472

land.lhs.true.324:                                ; preds = %if.then.320
  %208 = load i8*, i8** @FallbackMX, align 8, !tbaa !1
  %call325 = call i32 @wordinclass(i8* %208, i32 119)
  %tobool326 = icmp ne i32 %call325, 0
  br i1 %tobool326, label %if.else.472, label %land.lhs.true.327

land.lhs.true.327:                                ; preds = %land.lhs.true.324
  %209 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp328 = icmp ne i32 %209, 118
  br i1 %cmp328, label %land.lhs.true.330, label %if.else.472

land.lhs.true.330:                                ; preds = %land.lhs.true.327
  %210 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags = getelementptr inbounds %struct.mailer, %struct.mailer* %210, i32 0, i32 5
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags, i32 0, i64 1
  %211 = load i32, i32* %arrayidx, align 4, !tbaa !5
  %and331 = and i32 %211, 65536
  %tobool332 = icmp ne i32 %and331, 0
  br i1 %tobool332, label %if.else.472, label %land.lhs.true.333

land.lhs.true.333:                                ; preds = %land.lhs.true.330
  %212 = bitcast i64* %__s1_len335 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %212) #1
  %213 = bitcast i64* %__s2_len337 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %213) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1) to i64), i64 ptrtoint ([6 x i8]* @.str.21 to i64)), i64 1), label %land.lhs.true.339, label %cond.false.382

land.lhs.true.339:                                ; preds = %land.lhs.true.333
  store i64 5, i64* %__s2_len337, align 8, !tbaa !32
  %214 = load i64, i64* %__s2_len337, align 8, !tbaa !32
  %cmp340 = icmp ult i64 %214, 4
  br i1 %cmp340, label %cond.true.342, label %cond.false.382

cond.true.342:                                    ; preds = %land.lhs.true.339
  %215 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %215) #1
  %216 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer = getelementptr inbounds %struct.mailer, %struct.mailer* %216, i32 0, i32 1
  %217 = load i8*, i8** %m_mailer, align 8, !tbaa !33
  store i8* %217, i8** %__s1, align 8, !tbaa !1
  %218 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %218) #1
  %219 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx345 = getelementptr inbounds i8, i8* %219, i64 0
  %220 = load i8, i8* %arrayidx345, align 1, !tbaa !15
  %conv346 = zext i8 %220 to i32
  %221 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), align 1, !tbaa !15
  %conv347 = zext i8 %221 to i32
  %sub = sub nsw i32 %conv346, %conv347
  store i32 %sub, i32* %__result, align 4, !tbaa !5
  %222 = load i64, i64* %__s2_len337, align 8, !tbaa !32
  %cmp348 = icmp ugt i64 %222, 0
  br i1 %cmp348, label %land.lhs.true.350, label %if.end.380

land.lhs.true.350:                                ; preds = %cond.true.342
  %223 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp351 = icmp eq i32 %223, 0
  br i1 %cmp351, label %if.then.353, label %if.end.380

if.then.353:                                      ; preds = %land.lhs.true.350
  %224 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx354 = getelementptr inbounds i8, i8* %224, i64 1
  %225 = load i8, i8* %arrayidx354, align 1, !tbaa !15
  %conv355 = zext i8 %225 to i32
  %226 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1), align 1, !tbaa !15
  %conv356 = zext i8 %226 to i32
  %sub357 = sub nsw i32 %conv355, %conv356
  store i32 %sub357, i32* %__result, align 4, !tbaa !5
  %227 = load i64, i64* %__s2_len337, align 8, !tbaa !32
  %cmp358 = icmp ugt i64 %227, 1
  br i1 %cmp358, label %land.lhs.true.360, label %if.end.379

land.lhs.true.360:                                ; preds = %if.then.353
  %228 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp361 = icmp eq i32 %228, 0
  br i1 %cmp361, label %if.then.363, label %if.end.379

if.then.363:                                      ; preds = %land.lhs.true.360
  %229 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx364 = getelementptr inbounds i8, i8* %229, i64 2
  %230 = load i8, i8* %arrayidx364, align 1, !tbaa !15
  %conv365 = zext i8 %230 to i32
  %231 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 2), align 1, !tbaa !15
  %conv366 = zext i8 %231 to i32
  %sub367 = sub nsw i32 %conv365, %conv366
  store i32 %sub367, i32* %__result, align 4, !tbaa !5
  %232 = load i64, i64* %__s2_len337, align 8, !tbaa !32
  %cmp368 = icmp ugt i64 %232, 2
  br i1 %cmp368, label %land.lhs.true.370, label %if.end.378

land.lhs.true.370:                                ; preds = %if.then.363
  %233 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp371 = icmp eq i32 %233, 0
  br i1 %cmp371, label %if.then.373, label %if.end.378

if.then.373:                                      ; preds = %land.lhs.true.370
  %234 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx374 = getelementptr inbounds i8, i8* %234, i64 3
  %235 = load i8, i8* %arrayidx374, align 1, !tbaa !15
  %conv375 = zext i8 %235 to i32
  %236 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 3), align 1, !tbaa !15
  %conv376 = zext i8 %236 to i32
  %sub377 = sub nsw i32 %conv375, %conv376
  store i32 %sub377, i32* %__result, align 4, !tbaa !5
  br label %if.end.378

if.end.378:                                       ; preds = %if.then.373, %land.lhs.true.370, %if.then.363
  br label %if.end.379

if.end.379:                                       ; preds = %if.end.378, %land.lhs.true.360, %if.then.353
  br label %if.end.380

if.end.380:                                       ; preds = %if.end.379, %land.lhs.true.350, %cond.true.342
  %237 = load i32, i32* %__result, align 4, !tbaa !5
  store i32 %237, i32* %tmp381, !tbaa !5
  %238 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %238) #1
  %239 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %239) #1
  %240 = load i32, i32* %tmp381, !tbaa !5
  br label %cond.end.385

cond.false.382:                                   ; preds = %land.lhs.true.339, %land.lhs.true.333
  %241 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer383 = getelementptr inbounds %struct.mailer, %struct.mailer* %241, i32 0, i32 1
  %242 = load i8*, i8** %m_mailer383, align 8, !tbaa !33
  %call384 = call i32 @strcmp(i8* %242, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0)) #1
  br label %cond.end.385

cond.end.385:                                     ; preds = %cond.false.382, %if.end.380
  %cond386 = phi i32 [ %240, %if.end.380 ], [ %call384, %cond.false.382 ]
  store i32 %cond386, i32* %tmp338, !tbaa !5
  %243 = bitcast i64* %__s2_len337 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %243) #1
  %244 = bitcast i64* %__s1_len335 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %244) #1
  %245 = load i32, i32* %tmp338, !tbaa !5
  %cmp387 = icmp eq i32 %245, 0
  br i1 %cmp387, label %land.lhs.true.389, label %if.else.472

land.lhs.true.389:                                ; preds = %cond.end.385
  %246 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_argv = getelementptr inbounds %struct.mailer, %struct.mailer* %246, i32 0, i32 8
  %247 = load i8**, i8*** %m_argv, align 8, !tbaa !35
  %arrayidx390 = getelementptr inbounds i8*, i8** %247, i64 0
  %248 = load i8*, i8** %arrayidx390, align 8, !tbaa !1
  %cmp391 = icmp ne i8* %248, null
  br i1 %cmp391, label %land.lhs.true.393, label %if.else.472

land.lhs.true.393:                                ; preds = %land.lhs.true.389
  %249 = bitcast i64* %__s1_len395 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %249) #1
  %250 = bitcast i64* %__s2_len397 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %250) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 1) to i64), i64 ptrtoint ([4 x i8]* @.str.22 to i64)), i64 1), label %land.lhs.true.399, label %cond.false.447

land.lhs.true.399:                                ; preds = %land.lhs.true.393
  store i64 3, i64* %__s2_len397, align 8, !tbaa !32
  %251 = load i64, i64* %__s2_len397, align 8, !tbaa !32
  %cmp400 = icmp ult i64 %251, 4
  br i1 %cmp400, label %cond.true.402, label %cond.false.447

cond.true.402:                                    ; preds = %land.lhs.true.399
  %252 = bitcast i8** %__s1404 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %252) #1
  %253 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_argv405 = getelementptr inbounds %struct.mailer, %struct.mailer* %253, i32 0, i32 8
  %254 = load i8**, i8*** %m_argv405, align 8, !tbaa !35
  %arrayidx406 = getelementptr inbounds i8*, i8** %254, i64 0
  %255 = load i8*, i8** %arrayidx406, align 8, !tbaa !1
  store i8* %255, i8** %__s1404, align 8, !tbaa !1
  %256 = bitcast i32* %__result408 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %256) #1
  %257 = load i8*, i8** %__s1404, align 8, !tbaa !1
  %arrayidx409 = getelementptr inbounds i8, i8* %257, i64 0
  %258 = load i8, i8* %arrayidx409, align 1, !tbaa !15
  %conv410 = zext i8 %258 to i32
  %259 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), align 1, !tbaa !15
  %conv411 = zext i8 %259 to i32
  %sub412 = sub nsw i32 %conv410, %conv411
  store i32 %sub412, i32* %__result408, align 4, !tbaa !5
  %260 = load i64, i64* %__s2_len397, align 8, !tbaa !32
  %cmp413 = icmp ugt i64 %260, 0
  br i1 %cmp413, label %land.lhs.true.415, label %if.end.445

land.lhs.true.415:                                ; preds = %cond.true.402
  %261 = load i32, i32* %__result408, align 4, !tbaa !5
  %cmp416 = icmp eq i32 %261, 0
  br i1 %cmp416, label %if.then.418, label %if.end.445

if.then.418:                                      ; preds = %land.lhs.true.415
  %262 = load i8*, i8** %__s1404, align 8, !tbaa !1
  %arrayidx419 = getelementptr inbounds i8, i8* %262, i64 1
  %263 = load i8, i8* %arrayidx419, align 1, !tbaa !15
  %conv420 = zext i8 %263 to i32
  %264 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 1), align 1, !tbaa !15
  %conv421 = zext i8 %264 to i32
  %sub422 = sub nsw i32 %conv420, %conv421
  store i32 %sub422, i32* %__result408, align 4, !tbaa !5
  %265 = load i64, i64* %__s2_len397, align 8, !tbaa !32
  %cmp423 = icmp ugt i64 %265, 1
  br i1 %cmp423, label %land.lhs.true.425, label %if.end.444

land.lhs.true.425:                                ; preds = %if.then.418
  %266 = load i32, i32* %__result408, align 4, !tbaa !5
  %cmp426 = icmp eq i32 %266, 0
  br i1 %cmp426, label %if.then.428, label %if.end.444

if.then.428:                                      ; preds = %land.lhs.true.425
  %267 = load i8*, i8** %__s1404, align 8, !tbaa !1
  %arrayidx429 = getelementptr inbounds i8, i8* %267, i64 2
  %268 = load i8, i8* %arrayidx429, align 1, !tbaa !15
  %conv430 = zext i8 %268 to i32
  %269 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 2), align 1, !tbaa !15
  %conv431 = zext i8 %269 to i32
  %sub432 = sub nsw i32 %conv430, %conv431
  store i32 %sub432, i32* %__result408, align 4, !tbaa !5
  %270 = load i64, i64* %__s2_len397, align 8, !tbaa !32
  %cmp433 = icmp ugt i64 %270, 2
  br i1 %cmp433, label %land.lhs.true.435, label %if.end.443

land.lhs.true.435:                                ; preds = %if.then.428
  %271 = load i32, i32* %__result408, align 4, !tbaa !5
  %cmp436 = icmp eq i32 %271, 0
  br i1 %cmp436, label %if.then.438, label %if.end.443

if.then.438:                                      ; preds = %land.lhs.true.435
  %272 = load i8*, i8** %__s1404, align 8, !tbaa !1
  %arrayidx439 = getelementptr inbounds i8, i8* %272, i64 3
  %273 = load i8, i8* %arrayidx439, align 1, !tbaa !15
  %conv440 = zext i8 %273 to i32
  %274 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 3), align 1, !tbaa !15
  %conv441 = zext i8 %274 to i32
  %sub442 = sub nsw i32 %conv440, %conv441
  store i32 %sub442, i32* %__result408, align 4, !tbaa !5
  br label %if.end.443

if.end.443:                                       ; preds = %if.then.438, %land.lhs.true.435, %if.then.428
  br label %if.end.444

if.end.444:                                       ; preds = %if.end.443, %land.lhs.true.425, %if.then.418
  br label %if.end.445

if.end.445:                                       ; preds = %if.end.444, %land.lhs.true.415, %cond.true.402
  %275 = load i32, i32* %__result408, align 4, !tbaa !5
  store i32 %275, i32* %tmp446, !tbaa !5
  %276 = bitcast i32* %__result408 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %276) #1
  %277 = bitcast i8** %__s1404 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %277) #1
  %278 = load i32, i32* %tmp446, !tbaa !5
  br label %cond.end.451

cond.false.447:                                   ; preds = %land.lhs.true.399, %land.lhs.true.393
  %279 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_argv448 = getelementptr inbounds %struct.mailer, %struct.mailer* %279, i32 0, i32 8
  %280 = load i8**, i8*** %m_argv448, align 8, !tbaa !35
  %arrayidx449 = getelementptr inbounds i8*, i8** %280, i64 0
  %281 = load i8*, i8** %arrayidx449, align 8, !tbaa !1
  %call450 = call i32 @strcmp(i8* %281, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0)) #1
  br label %cond.end.451

cond.end.451:                                     ; preds = %cond.false.447, %if.end.445
  %cond452 = phi i32 [ %278, %if.end.445 ], [ %call450, %cond.false.447 ]
  store i32 %cond452, i32* %tmp398, !tbaa !5
  %282 = bitcast i64* %__s2_len397 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %282) #1
  %283 = bitcast i64* %__s1_len395 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %283) #1
  %284 = load i32, i32* %tmp398, !tbaa !5
  %cmp453 = icmp eq i32 %284, 0
  br i1 %cmp453, label %if.then.455, label %if.else.472

if.then.455:                                      ; preds = %cond.end.451
  %285 = bitcast i32* %len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %285) #1
  %286 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %286) #1
  %287 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv458 = zext i8 %287 to i32
  %cmp459 = icmp sge i32 %conv458, 30
  br i1 %cmp459, label %land.lhs.true.461, label %if.end.464

land.lhs.true.461:                                ; preds = %if.then.455
  %288 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool462 = icmp ne i32 %288, 0
  br i1 %tobool462, label %if.end.464, label %if.then.463

if.then.463:                                      ; preds = %land.lhs.true.461
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0))
  br label %if.end.464

if.end.464:                                       ; preds = %if.then.463, %land.lhs.true.461, %if.then.455
  %289 = load i8*, i8** @FallbackMX, align 8, !tbaa !1
  %call465 = call i64 @strlen(i8* %289) #12
  %add = add i64 %call465, 1
  %conv466 = trunc i64 %add to i32
  store i32 %conv466, i32* %len, align 4, !tbaa !5
  %290 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool = getelementptr inbounds %struct.envelope, %struct.envelope* %290, i32 0, i32 52
  %291 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool, align 8, !tbaa !36
  %292 = load i32, i32* %len, align 4, !tbaa !5
  %conv467 = sext i32 %292 to i64
  %293 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  %call468 = call i8* @sm_rpool_malloc_tagged_x(%struct.SM_RPOOL_T* %291, i64 %conv467, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 322, i32 %293)
  store i8* %call468, i8** %p, align 8, !tbaa !1
  %294 = load i8*, i8** %p, align 8, !tbaa !1
  %295 = load i8*, i8** @FallbackMX, align 8, !tbaa !1
  %296 = load i32, i32* %len, align 4, !tbaa !5
  %conv469 = sext i32 %296 to i64
  %call470 = call i64 @sm_strlcpy(i8* %294, i8* %295, i64 %conv469)
  %297 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state471 = getelementptr inbounds %struct.address, %struct.address* %297, i32 0, i32 21
  store i16 0, i16* %q_state471, align 2, !tbaa !24
  %298 = load i8*, i8** %p, align 8, !tbaa !1
  %299 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_host = getelementptr inbounds %struct.address, %struct.address* %299, i32 0, i32 3
  store i8* %298, i8** %q_host, align 8, !tbaa !37
  %300 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %300) #1
  %301 = bitcast i32* %len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %301) #1
  br label %if.end.480

if.else.472:                                      ; preds = %cond.end.451, %land.lhs.true.389, %cond.end.385, %land.lhs.true.330, %land.lhs.true.327, %land.lhs.true.324, %if.then.320
  %302 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv473 = zext i8 %302 to i32
  %cmp474 = icmp sge i32 %conv473, 30
  br i1 %cmp474, label %land.lhs.true.476, label %if.end.479

land.lhs.true.476:                                ; preds = %if.else.472
  %303 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool477 = icmp ne i32 %303, 0
  br i1 %tobool477, label %if.end.479, label %if.then.478

if.then.478:                                      ; preds = %land.lhs.true.476
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0))
  br label %if.end.479

if.end.479:                                       ; preds = %if.then.478, %land.lhs.true.476, %if.else.472
  store i32 15, i32* %cleanup.dest.slot
  br label %cleanup

if.end.480:                                       ; preds = %if.end.464
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.480, %if.end.479
  %304 = bitcast %struct.mailer** %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %304) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 15, label %for.inc.551
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.481

if.end.481:                                       ; preds = %cleanup.cont, %if.end.315
  %305 = load i32, i32* @NoConnect, align 4, !tbaa !5
  %tobool482 = icmp ne i32 %305, 0
  br i1 %tobool482, label %land.lhs.true.483, label %if.else.500

land.lhs.true.483:                                ; preds = %if.end.481
  %306 = load i32, i32* @Verbose, align 4, !tbaa !5
  %tobool484 = icmp ne i32 %306, 0
  br i1 %tobool484, label %if.else.500, label %land.lhs.true.485

land.lhs.true.485:                                ; preds = %land.lhs.true.483
  %307 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_mailer486 = getelementptr inbounds %struct.address, %struct.address* %307, i32 0, i32 4
  %308 = load %struct.mailer*, %struct.mailer** %q_mailer486, align 8, !tbaa !31
  %m_flags487 = getelementptr inbounds %struct.mailer, %struct.mailer* %308, i32 0, i32 5
  %arrayidx488 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags487, i32 0, i64 3
  %309 = load i32, i32* %arrayidx488, align 4, !tbaa !5
  %and489 = and i32 %309, 32
  %tobool490 = icmp ne i32 %and489, 0
  br i1 %tobool490, label %if.then.491, label %if.else.500

if.then.491:                                      ; preds = %land.lhs.true.485
  %310 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv492 = zext i8 %310 to i32
  %cmp493 = icmp sge i32 %conv492, 30
  br i1 %cmp493, label %land.lhs.true.495, label %if.end.498

land.lhs.true.495:                                ; preds = %if.then.491
  %311 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool496 = icmp ne i32 %311, 0
  br i1 %tobool496, label %if.end.498, label %if.then.497

if.then.497:                                      ; preds = %land.lhs.true.495
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i32 0, i32 0))
  br label %if.end.498

if.end.498:                                       ; preds = %if.then.497, %land.lhs.true.495, %if.then.491
  %312 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state499 = getelementptr inbounds %struct.address, %struct.address* %312, i32 0, i32 21
  store i16 3, i16* %q_state499, align 2, !tbaa !24
  store i32 1, i32* %expensive, align 4, !tbaa !5
  br label %if.end.550

if.else.500:                                      ; preds = %land.lhs.true.485, %land.lhs.true.483, %if.end.481
  %313 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_mailer501 = getelementptr inbounds %struct.address, %struct.address* %313, i32 0, i32 4
  %314 = load %struct.mailer*, %struct.mailer** %q_mailer501, align 8, !tbaa !31
  %m_flags502 = getelementptr inbounds %struct.mailer, %struct.mailer* %314, i32 0, i32 5
  %arrayidx503 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags502, i32 0, i64 1
  %315 = load i32, i32* %arrayidx503, align 4, !tbaa !5
  %and504 = and i32 %315, 32
  %tobool505 = icmp ne i32 %and504, 0
  br i1 %tobool505, label %land.lhs.true.506, label %if.else.524

land.lhs.true.506:                                ; preds = %if.else.500
  %316 = load %struct.queue_char*, %struct.queue_char** @QueueLimitId, align 8, !tbaa !1
  %cmp507 = icmp eq %struct.queue_char* %316, null
  br i1 %cmp507, label %land.lhs.true.509, label %if.else.524

land.lhs.true.509:                                ; preds = %land.lhs.true.506
  %317 = load %struct.queue_char*, %struct.queue_char** @QueueLimitSender, align 8, !tbaa !1
  %cmp510 = icmp eq %struct.queue_char* %317, null
  br i1 %cmp510, label %land.lhs.true.512, label %if.else.524

land.lhs.true.512:                                ; preds = %land.lhs.true.509
  %318 = load %struct.queue_char*, %struct.queue_char** @QueueLimitRecipient, align 8, !tbaa !1
  %cmp513 = icmp eq %struct.queue_char* %318, null
  br i1 %cmp513, label %if.then.515, label %if.else.524

if.then.515:                                      ; preds = %land.lhs.true.512
  %319 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv516 = zext i8 %319 to i32
  %cmp517 = icmp sge i32 %conv516, 30
  br i1 %cmp517, label %land.lhs.true.519, label %if.end.522

land.lhs.true.519:                                ; preds = %if.then.515
  %320 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool520 = icmp ne i32 %320, 0
  br i1 %tobool520, label %if.end.522, label %if.then.521

if.then.521:                                      ; preds = %land.lhs.true.519
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i32 0, i32 0))
  br label %if.end.522

if.end.522:                                       ; preds = %if.then.521, %land.lhs.true.519, %if.then.515
  %321 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state523 = getelementptr inbounds %struct.address, %struct.address* %321, i32 0, i32 21
  store i16 3, i16* %q_state523, align 2, !tbaa !24
  store i32 1, i32* %expensive, align 4, !tbaa !5
  br label %if.end.549

if.else.524:                                      ; preds = %land.lhs.true.512, %land.lhs.true.509, %land.lhs.true.506, %if.else.500
  %322 = load i32, i32* @QueueMode, align 4, !tbaa !5
  %cmp525 = icmp ne i32 %322, 81
  br i1 %cmp525, label %land.lhs.true.527, label %if.else.540

land.lhs.true.527:                                ; preds = %if.else.524
  %323 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg = getelementptr inbounds %struct.envelope, %struct.envelope* %323, i32 0, i32 36
  %324 = load i8*, i8** %e_quarmsg, align 8, !tbaa !38
  %cmp528 = icmp ne i8* %324, null
  br i1 %cmp528, label %if.then.530, label %if.else.540

if.then.530:                                      ; preds = %land.lhs.true.527
  %325 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv531 = zext i8 %325 to i32
  %cmp532 = icmp sge i32 %conv531, 30
  br i1 %cmp532, label %land.lhs.true.534, label %if.end.538

land.lhs.true.534:                                ; preds = %if.then.530
  %326 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool535 = icmp ne i32 %326, 0
  br i1 %tobool535, label %if.end.538, label %if.then.536

if.then.536:                                      ; preds = %land.lhs.true.534
  %327 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg537 = getelementptr inbounds %struct.envelope, %struct.envelope* %327, i32 0, i32 36
  %328 = load i8*, i8** %e_quarmsg537, align 8, !tbaa !38
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i8* %328)
  br label %if.end.538

if.end.538:                                       ; preds = %if.then.536, %land.lhs.true.534, %if.then.530
  %329 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state539 = getelementptr inbounds %struct.address, %struct.address* %329, i32 0, i32 21
  store i16 3, i16* %q_state539, align 2, !tbaa !24
  store i32 1, i32* %expensive, align 4, !tbaa !5
  br label %if.end.548

if.else.540:                                      ; preds = %land.lhs.true.527, %if.else.524
  %330 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv541 = zext i8 %330 to i32
  %cmp542 = icmp sge i32 %conv541, 30
  br i1 %cmp542, label %land.lhs.true.544, label %if.end.547

land.lhs.true.544:                                ; preds = %if.else.540
  %331 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool545 = icmp ne i32 %331, 0
  br i1 %tobool545, label %if.end.547, label %if.then.546

if.then.546:                                      ; preds = %land.lhs.true.544
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i32 0, i32 0))
  br label %if.end.547

if.end.547:                                       ; preds = %if.then.546, %land.lhs.true.544, %if.else.540
  store i32 1, i32* %somedeliveries, align 4, !tbaa !5
  br label %if.end.548

if.end.548:                                       ; preds = %if.end.547, %if.end.538
  br label %if.end.549

if.end.549:                                       ; preds = %if.end.548, %if.end.522
  br label %if.end.550

if.end.550:                                       ; preds = %if.end.549, %if.end.498
  br label %for.inc.551

for.inc.551:                                      ; preds = %if.end.550, %cleanup, %if.end.314, %if.end.217
  %332 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_next552 = getelementptr inbounds %struct.address, %struct.address* %332, i32 0, i32 10
  %333 = load %struct.address*, %struct.address** %q_next552, align 8, !tbaa !27
  store %struct.address* %333, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.194

for.end.553:                                      ; preds = %for.cond.194
  %334 = load i8*, i8** %owner, align 8, !tbaa !1
  %cmp554 = icmp ne i8* %334, null
  br i1 %cmp554, label %land.lhs.true.556, label %if.end.698

land.lhs.true.556:                                ; preds = %for.end.553
  %335 = load i32, i32* %otherowners, align 4, !tbaa !5
  %cmp557 = icmp sgt i32 %335, 0
  br i1 %cmp557, label %if.then.559, label %if.end.698

if.then.559:                                      ; preds = %land.lhs.true.556
  %336 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool560 = getelementptr inbounds %struct.envelope, %struct.envelope* %336, i32 0, i32 52
  %337 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool560, align 8, !tbaa !36
  %338 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  %call561 = call i8* @sm_rpool_malloc_tagged_x(%struct.SM_RPOOL_T* %337, i64 2656, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 386, i32 %338)
  %339 = bitcast i8* %call561 to %struct.envelope*
  store %struct.envelope* %339, %struct.envelope** %ee, align 8, !tbaa !1
  %340 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %341 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %342 = bitcast %struct.envelope* %340 to i8*
  %343 = bitcast %struct.envelope* %341 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %342, i8* %343, i64 2656, i32 8, i1 false), !tbaa.struct !39
  %344 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_message = getelementptr inbounds %struct.envelope, %struct.envelope* %344, i32 0, i32 34
  store i8* null, i8** %e_message, align 8, !tbaa !41
  %345 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id562 = getelementptr inbounds %struct.envelope, %struct.envelope* %345, i32 0, i32 25
  store i8* null, i8** %e_id562, align 8, !tbaa !16
  %346 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @assign_queueid(%struct.envelope* %346)
  %347 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv563 = zext i8 %347 to i32
  %cmp564 = icmp sge i32 %conv563, 1
  br i1 %cmp564, label %land.lhs.true.566, label %if.end.571

land.lhs.true.566:                                ; preds = %if.then.559
  %348 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool567 = icmp ne i32 %348, 0
  br i1 %tobool567, label %if.end.571, label %if.then.568

if.then.568:                                      ; preds = %land.lhs.true.566
  %349 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id569 = getelementptr inbounds %struct.envelope, %struct.envelope* %349, i32 0, i32 25
  %350 = load i8*, i8** %e_id569, align 8, !tbaa !16
  %351 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id570 = getelementptr inbounds %struct.envelope, %struct.envelope* %351, i32 0, i32 25
  %352 = load i8*, i8** %e_id570, align 8, !tbaa !16
  %353 = load i8*, i8** %owner, align 8, !tbaa !1
  %354 = load i32, i32* %otherowners, align 4, !tbaa !5
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.30, i32 0, i32 0), i8* %350, i8* %352, i8* %353, i32 %354)
  br label %if.end.571

if.end.571:                                       ; preds = %if.then.568, %land.lhs.true.566, %if.then.559
  %355 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header = getelementptr inbounds %struct.envelope, %struct.envelope* %355, i32 0, i32 0
  %356 = load %struct.header*, %struct.header** %e_header, align 8, !tbaa !42
  %357 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_rpool572 = getelementptr inbounds %struct.envelope, %struct.envelope* %357, i32 0, i32 52
  %358 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool572, align 8, !tbaa !36
  %call573 = call %struct.header* @copyheader(%struct.header* %356, %struct.SM_RPOOL_T* %358)
  %359 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_header574 = getelementptr inbounds %struct.envelope, %struct.envelope* %359, i32 0, i32 0
  store %struct.header* %call573, %struct.header** %e_header574, align 8, !tbaa !42
  %360 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue575 = getelementptr inbounds %struct.envelope, %struct.envelope* %360, i32 0, i32 7
  %361 = load %struct.address*, %struct.address** %e_sendqueue575, align 8, !tbaa !20
  %362 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_rpool576 = getelementptr inbounds %struct.envelope, %struct.envelope* %362, i32 0, i32 52
  %363 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool576, align 8, !tbaa !36
  %call577 = call %struct.address* @copyqueue(%struct.address* %361, %struct.SM_RPOOL_T* %363)
  %364 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sendqueue578 = getelementptr inbounds %struct.envelope, %struct.envelope* %364, i32 0, i32 7
  store %struct.address* %call577, %struct.address** %e_sendqueue578, align 8, !tbaa !20
  %365 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_errorqueue = getelementptr inbounds %struct.envelope, %struct.envelope* %365, i32 0, i32 8
  %366 = load %struct.address*, %struct.address** %e_errorqueue, align 8, !tbaa !43
  %367 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_rpool579 = getelementptr inbounds %struct.envelope, %struct.envelope* %367, i32 0, i32 52
  %368 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool579, align 8, !tbaa !36
  %call580 = call %struct.address* @copyqueue(%struct.address* %366, %struct.SM_RPOOL_T* %368)
  %369 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_errorqueue581 = getelementptr inbounds %struct.envelope, %struct.envelope* %369, i32 0, i32 8
  store %struct.address* %call580, %struct.address** %e_errorqueue581, align 8, !tbaa !43
  %370 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags582 = getelementptr inbounds %struct.envelope, %struct.envelope* %370, i32 0, i32 11
  %371 = load i64, i64* %e_flags582, align 8, !tbaa !7
  %and583 = and i64 %371, -1048635
  %372 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_flags584 = getelementptr inbounds %struct.envelope, %struct.envelope* %372, i32 0, i32 11
  store i64 %and583, i64* %e_flags584, align 8, !tbaa !7
  %373 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_flags585 = getelementptr inbounds %struct.envelope, %struct.envelope* %373, i32 0, i32 11
  %374 = load i64, i64* %e_flags585, align 8, !tbaa !7
  %or586 = or i64 %374, 65536
  store i64 %or586, i64* %e_flags585, align 8, !tbaa !7
  %375 = load i8*, i8** %owner, align 8, !tbaa !1
  %376 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @setsender(i8* %375, %struct.envelope* %376, i8** null, i32 0, i32 1)
  %377 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv587 = zext i8 %377 to i32
  %cmp588 = icmp sge i32 %conv587, 5
  br i1 %cmp588, label %land.lhs.true.590, label %if.end.595

land.lhs.true.590:                                ; preds = %if.end.571
  %378 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool591 = icmp ne i32 %378, 0
  br i1 %tobool591, label %if.end.595, label %if.then.592

if.then.592:                                      ; preds = %land.lhs.true.590
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i32 0, i32 0))
  %call593 = call %struct.sm_file* @sm_debug_file()
  %379 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_from594 = getelementptr inbounds %struct.envelope, %struct.envelope* %379, i32 0, i32 4
  call void @printaddr(%struct.sm_file* %call593, %struct.address* %e_from594, i32 0)
  br label %if.end.595

if.end.595:                                       ; preds = %if.then.592, %land.lhs.true.590, %if.end.571
  %380 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_from596 = getelementptr inbounds %struct.envelope, %struct.envelope* %380, i32 0, i32 4
  %q_state597 = getelementptr inbounds %struct.address, %struct.address* %e_from596, i32 0, i32 21
  store i16 8, i16* %q_state597, align 2, !tbaa !28
  %381 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_dfp = getelementptr inbounds %struct.envelope, %struct.envelope* %381, i32 0, i32 24
  store %struct.sm_file* null, %struct.sm_file** %e_dfp, align 8, !tbaa !44
  %382 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_lockfp = getelementptr inbounds %struct.envelope, %struct.envelope* %382, i32 0, i32 33
  store %struct.sm_file* null, %struct.sm_file** %e_lockfp, align 8, !tbaa !45
  %383 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_xfp = getelementptr inbounds %struct.envelope, %struct.envelope* %383, i32 0, i32 32
  store %struct.sm_file* null, %struct.sm_file** %e_xfp, align 8, !tbaa !46
  %384 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_qgrp = getelementptr inbounds %struct.envelope, %struct.envelope* %384, i32 0, i32 26
  %385 = load i32, i32* %e_qgrp, align 4, !tbaa !47
  %386 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_qgrp598 = getelementptr inbounds %struct.envelope, %struct.envelope* %386, i32 0, i32 26
  store i32 %385, i32* %e_qgrp598, align 4, !tbaa !47
  %387 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_qdir = getelementptr inbounds %struct.envelope, %struct.envelope* %387, i32 0, i32 27
  %388 = load i32, i32* %e_qdir, align 4, !tbaa !48
  %389 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_qdir599 = getelementptr inbounds %struct.envelope, %struct.envelope* %389, i32 0, i32 27
  store i32 %388, i32* %e_qdir599, align 4, !tbaa !48
  %390 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_errormode = getelementptr inbounds %struct.envelope, %struct.envelope* %390, i32 0, i32 17
  store i16 109, i16* %e_errormode, align 2, !tbaa !49
  %391 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  %392 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling = getelementptr inbounds %struct.envelope, %struct.envelope* %392, i32 0, i32 22
  store %struct.envelope* %391, %struct.envelope** %e_sibling, align 8, !tbaa !50
  %393 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_statmsg = getelementptr inbounds %struct.envelope, %struct.envelope* %393, i32 0, i32 35
  store i8* null, i8** %e_statmsg, align 8, !tbaa !51
  %394 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg600 = getelementptr inbounds %struct.envelope, %struct.envelope* %394, i32 0, i32 36
  %395 = load i8*, i8** %e_quarmsg600, align 8, !tbaa !38
  %cmp601 = icmp ne i8* %395, null
  br i1 %cmp601, label %if.then.603, label %if.end.608

if.then.603:                                      ; preds = %if.end.595
  %396 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_rpool604 = getelementptr inbounds %struct.envelope, %struct.envelope* %396, i32 0, i32 52
  %397 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool604, align 8, !tbaa !36
  %398 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg605 = getelementptr inbounds %struct.envelope, %struct.envelope* %398, i32 0, i32 36
  %399 = load i8*, i8** %e_quarmsg605, align 8, !tbaa !38
  %call606 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %397, i8* %399)
  %400 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_quarmsg607 = getelementptr inbounds %struct.envelope, %struct.envelope* %400, i32 0, i32 36
  store i8* %call606, i8** %e_quarmsg607, align 8, !tbaa !38
  br label %if.end.608

if.end.608:                                       ; preds = %if.then.603, %if.end.595
  %401 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  store %struct.envelope* %401, %struct.envelope** %splitenv, align 8, !tbaa !1
  %402 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue609 = getelementptr inbounds %struct.envelope, %struct.envelope* %402, i32 0, i32 7
  %403 = load %struct.address*, %struct.address** %e_sendqueue609, align 8, !tbaa !20
  store %struct.address* %403, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.610

for.cond.610:                                     ; preds = %for.inc.628, %if.end.608
  %404 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %cmp611 = icmp ne %struct.address* %404, null
  br i1 %cmp611, label %for.body.613, label %for.end.630

for.body.613:                                     ; preds = %for.cond.610
  %405 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner614 = getelementptr inbounds %struct.address, %struct.address* %405, i32 0, i32 12
  %406 = load i8*, i8** %q_owner614, align 8, !tbaa !29
  %407 = load i8*, i8** %owner, align 8, !tbaa !1
  %cmp615 = icmp eq i8* %406, %407
  br i1 %cmp615, label %if.then.617, label %if.end.627

if.then.617:                                      ; preds = %for.body.613
  %408 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state618 = getelementptr inbounds %struct.address, %struct.address* %408, i32 0, i32 21
  store i16 9, i16* %q_state618, align 2, !tbaa !24
  %409 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv619 = zext i8 %409 to i32
  %cmp620 = icmp sge i32 %conv619, 6
  br i1 %cmp620, label %land.lhs.true.622, label %if.end.626

land.lhs.true.622:                                ; preds = %if.then.617
  %410 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool623 = icmp ne i32 %410, 0
  br i1 %tobool623, label %if.end.626, label %if.then.624

if.then.624:                                      ; preds = %land.lhs.true.622
  %411 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_paddr625 = getelementptr inbounds %struct.address, %struct.address* %411, i32 0, i32 0
  %412 = load i8*, i8** %q_paddr625, align 8, !tbaa !22
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i8* %412)
  br label %if.end.626

if.end.626:                                       ; preds = %if.then.624, %land.lhs.true.622, %if.then.617
  br label %if.end.627

if.end.627:                                       ; preds = %if.end.626, %for.body.613
  br label %for.inc.628

for.inc.628:                                      ; preds = %if.end.627
  %413 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_next629 = getelementptr inbounds %struct.address, %struct.address* %413, i32 0, i32 10
  %414 = load %struct.address*, %struct.address** %q_next629, align 8, !tbaa !27
  store %struct.address* %414, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.610

for.end.630:                                      ; preds = %for.cond.610
  %415 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sendqueue631 = getelementptr inbounds %struct.envelope, %struct.envelope* %415, i32 0, i32 7
  %416 = load %struct.address*, %struct.address** %e_sendqueue631, align 8, !tbaa !20
  store %struct.address* %416, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.632

for.cond.632:                                     ; preds = %for.inc.664, %for.end.630
  %417 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %cmp633 = icmp ne %struct.address* %417, null
  br i1 %cmp633, label %for.body.635, label %for.end.666

for.body.635:                                     ; preds = %for.cond.632
  %418 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_owner636 = getelementptr inbounds %struct.address, %struct.address* %418, i32 0, i32 12
  %419 = load i8*, i8** %q_owner636, align 8, !tbaa !29
  %420 = load i8*, i8** %owner, align 8, !tbaa !1
  %cmp637 = icmp ne i8* %419, %420
  br i1 %cmp637, label %if.then.639, label %if.else.649

if.then.639:                                      ; preds = %for.body.635
  %421 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state640 = getelementptr inbounds %struct.address, %struct.address* %421, i32 0, i32 21
  store i16 9, i16* %q_state640, align 2, !tbaa !24
  %422 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv641 = zext i8 %422 to i32
  %cmp642 = icmp sge i32 %conv641, 6
  br i1 %cmp642, label %land.lhs.true.644, label %if.end.648

land.lhs.true.644:                                ; preds = %if.then.639
  %423 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool645 = icmp ne i32 %423, 0
  br i1 %tobool645, label %if.end.648, label %if.then.646

if.then.646:                                      ; preds = %land.lhs.true.644
  %424 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_paddr647 = getelementptr inbounds %struct.address, %struct.address* %424, i32 0, i32 0
  %425 = load i8*, i8** %q_paddr647, align 8, !tbaa !22
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.33, i32 0, i32 0), i8* %425)
  br label %if.end.648

if.end.648:                                       ; preds = %if.then.646, %land.lhs.true.644, %if.then.639
  br label %if.end.663

if.else.649:                                      ; preds = %for.body.635
  %426 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_flags = getelementptr inbounds %struct.address, %struct.address* %426, i32 0, i32 5
  %427 = load i64, i64* %q_flags, align 8, !tbaa !52
  %and650 = and i64 %427, -961
  store i64 %and650, i64* %q_flags, align 8, !tbaa !52
  %428 = load i32, i32* @DefaultNotify, align 4, !tbaa !5
  %and651 = and i32 %428, -65
  %conv652 = sext i32 %and651 to i64
  %429 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_flags653 = getelementptr inbounds %struct.address, %struct.address* %429, i32 0, i32 5
  %430 = load i64, i64* %q_flags653, align 8, !tbaa !52
  %or654 = or i64 %430, %conv652
  store i64 %or654, i64* %q_flags653, align 8, !tbaa !52
  %431 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv655 = zext i8 %431 to i32
  %cmp656 = icmp sge i32 %conv655, 6
  br i1 %cmp656, label %land.lhs.true.658, label %if.end.662

land.lhs.true.658:                                ; preds = %if.else.649
  %432 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool659 = icmp ne i32 %432, 0
  br i1 %tobool659, label %if.end.662, label %if.then.660

if.then.660:                                      ; preds = %land.lhs.true.658
  %433 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_paddr661 = getelementptr inbounds %struct.address, %struct.address* %433, i32 0, i32 0
  %434 = load i8*, i8** %q_paddr661, align 8, !tbaa !22
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i32 0, i32 0), i8* %434)
  br label %if.end.662

if.end.662:                                       ; preds = %if.then.660, %land.lhs.true.658, %if.else.649
  br label %if.end.663

if.end.663:                                       ; preds = %if.end.662, %if.end.648
  br label %for.inc.664

for.inc.664:                                      ; preds = %if.end.663
  %435 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_next665 = getelementptr inbounds %struct.address, %struct.address* %435, i32 0, i32 10
  %436 = load %struct.address*, %struct.address** %q_next665, align 8, !tbaa !27
  store %struct.address* %436, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.632

for.end.666:                                      ; preds = %for.cond.632
  %437 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp667 = icmp ne i32 %437, 118
  br i1 %cmp667, label %land.lhs.true.669, label %if.end.675

land.lhs.true.669:                                ; preds = %for.end.666
  %438 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags670 = getelementptr inbounds %struct.envelope, %struct.envelope* %438, i32 0, i32 11
  %439 = load i64, i64* %e_flags670, align 8, !tbaa !7
  %and671 = and i64 %439, 2097152
  %cmp672 = icmp ne i64 %and671, 0
  br i1 %cmp672, label %if.then.674, label %if.end.675

if.then.674:                                      ; preds = %land.lhs.true.669
  %440 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %441 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @dup_queue_file(%struct.envelope* %440, %struct.envelope* %441, i32 100)
  br label %if.end.675

if.end.675:                                       ; preds = %if.then.674, %land.lhs.true.669, %for.end.666
  %442 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp676 = getelementptr inbounds %struct.envelope, %struct.envelope* %442, i32 0, i32 32
  %443 = load %struct.sm_file*, %struct.sm_file** %e_xfp676, align 8, !tbaa !46
  %cmp677 = icmp ne %struct.sm_file* %443, null
  br i1 %cmp677, label %if.then.679, label %if.end.683

if.then.679:                                      ; preds = %if.end.675
  %444 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp680 = getelementptr inbounds %struct.envelope, %struct.envelope* %444, i32 0, i32 32
  %445 = load %struct.sm_file*, %struct.sm_file** %e_xfp680, align 8, !tbaa !46
  %call681 = call %struct.sm_file* @sm_io_dup(%struct.sm_file* %445)
  %446 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_xfp682 = getelementptr inbounds %struct.envelope, %struct.envelope* %446, i32 0, i32 32
  store %struct.sm_file* %call681, %struct.sm_file** %e_xfp682, align 8, !tbaa !46
  br label %if.end.683

if.end.683:                                       ; preds = %if.then.679, %if.end.675
  %447 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_xfp684 = getelementptr inbounds %struct.envelope, %struct.envelope* %447, i32 0, i32 32
  %448 = load %struct.sm_file*, %struct.sm_file** %e_xfp684, align 8, !tbaa !46
  %cmp685 = icmp eq %struct.sm_file* %448, null
  br i1 %cmp685, label %if.then.687, label %if.end.688

if.then.687:                                      ; preds = %if.end.683
  %449 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @openxscript(%struct.envelope* %449)
  br label %if.end.688

if.end.688:                                       ; preds = %if.then.687, %if.end.683
  %450 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp689 = icmp ne i32 %450, 118
  br i1 %cmp689, label %land.lhs.true.691, label %if.end.697

land.lhs.true.691:                                ; preds = %if.end.688
  %451 = load i32, i32* @LogLevel, align 4, !tbaa !5
  %cmp692 = icmp sgt i32 %451, 4
  br i1 %cmp692, label %if.then.694, label %if.end.697

if.then.694:                                      ; preds = %land.lhs.true.691
  %452 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id695 = getelementptr inbounds %struct.envelope, %struct.envelope* %452, i32 0, i32 25
  %453 = load i8*, i8** %e_id695, align 8, !tbaa !16
  %454 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id696 = getelementptr inbounds %struct.envelope, %struct.envelope* %454, i32 0, i32 25
  %455 = load i8*, i8** %e_id696, align 8, !tbaa !16
  %456 = load i8*, i8** %owner, align 8, !tbaa !1
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 6, i8* %453, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i32 0, i32 0), i8* %455, i8* %456)
  br label %if.end.697

if.end.697:                                       ; preds = %if.then.694, %land.lhs.true.691, %if.end.688
  br label %if.end.698

if.end.698:                                       ; preds = %if.end.697, %land.lhs.true.556, %for.end.553
  br label %while.cond

while.end:                                        ; preds = %land.end.180
  %457 = load i8*, i8** %owner, align 8, !tbaa !1
  %cmp699 = icmp ne i8* %457, null
  br i1 %cmp699, label %if.then.701, label %if.end.718

if.then.701:                                      ; preds = %while.end
  %458 = load i8*, i8** %owner, align 8, !tbaa !1
  %459 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @setsender(i8* %458, %struct.envelope* %459, i8** null, i32 0, i32 1)
  %460 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv702 = zext i8 %460 to i32
  %cmp703 = icmp sge i32 %conv702, 5
  br i1 %cmp703, label %land.lhs.true.705, label %if.end.710

land.lhs.true.705:                                ; preds = %if.then.701
  %461 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool706 = icmp ne i32 %461, 0
  br i1 %tobool706, label %if.end.710, label %if.then.707

if.then.707:                                      ; preds = %land.lhs.true.705
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i32 0, i32 0))
  %call708 = call %struct.sm_file* @sm_debug_file()
  %462 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from709 = getelementptr inbounds %struct.envelope, %struct.envelope* %462, i32 0, i32 4
  call void @printaddr(%struct.sm_file* %call708, %struct.address* %e_from709, i32 0)
  br label %if.end.710

if.end.710:                                       ; preds = %if.then.707, %land.lhs.true.705, %if.then.701
  %463 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from711 = getelementptr inbounds %struct.envelope, %struct.envelope* %463, i32 0, i32 4
  %q_state712 = getelementptr inbounds %struct.address, %struct.address* %e_from711, i32 0, i32 21
  store i16 8, i16* %q_state712, align 2, !tbaa !28
  %464 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_errormode713 = getelementptr inbounds %struct.envelope, %struct.envelope* %464, i32 0, i32 17
  store i16 109, i16* %e_errormode713, align 2, !tbaa !49
  %465 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags714 = getelementptr inbounds %struct.envelope, %struct.envelope* %465, i32 0, i32 11
  %466 = load i64, i64* %e_flags714, align 8, !tbaa !7
  %or715 = or i64 %466, 65536
  store i64 %or715, i64* %e_flags714, align 8, !tbaa !7
  %467 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags716 = getelementptr inbounds %struct.envelope, %struct.envelope* %467, i32 0, i32 11
  %468 = load i64, i64* %e_flags716, align 8, !tbaa !7
  %and717 = and i64 %468, -33
  store i64 %and717, i64* %e_flags716, align 8, !tbaa !7
  br label %if.end.718

if.end.718:                                       ; preds = %if.end.710, %while.end
  %469 = load i32, i32* %somedeliveries, align 4, !tbaa !5
  %tobool719 = icmp ne i32 %469, 0
  br i1 %tobool719, label %if.end.756, label %land.lhs.true.720

land.lhs.true.720:                                ; preds = %if.end.718
  %470 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp721 = icmp eq i32 %470, 113
  br i1 %cmp721, label %if.end.756, label %lor.lhs.false.723

lor.lhs.false.723:                                ; preds = %land.lhs.true.720
  %471 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp724 = icmp eq i32 %471, 100
  br i1 %cmp724, label %if.end.756, label %land.lhs.true.726

land.lhs.true.726:                                ; preds = %lor.lhs.false.723
  %472 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp727 = icmp ne i32 %472, 118
  br i1 %cmp727, label %if.then.729, label %if.end.756

if.then.729:                                      ; preds = %land.lhs.true.726
  %473 = bitcast i64* %now to i8*
  call void @llvm.lifetime.start(i64 8, i8* %473) #1
  %474 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv731 = zext i8 %474 to i32
  %cmp732 = icmp sge i32 %conv731, 29
  br i1 %cmp732, label %land.lhs.true.734, label %if.end.737

land.lhs.true.734:                                ; preds = %if.then.729
  %475 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool735 = icmp ne i32 %475, 0
  br i1 %tobool735, label %if.end.737, label %if.then.736

if.then.736:                                      ; preds = %land.lhs.true.734
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i32 0, i32 0))
  br label %if.end.737

if.end.737:                                       ; preds = %if.then.736, %land.lhs.true.734, %if.then.729
  store i32 113, i32* %mode.addr, align 4, !tbaa !5
  %call738 = call i64 @curtime()
  store i64 %call738, i64* %now, align 8, !tbaa !32
  %476 = load i64, i64* %now, align 8, !tbaa !32
  %477 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dtime = getelementptr inbounds %struct.envelope, %struct.envelope* %477, i32 0, i32 42
  store i64 %476, i64* %e_dtime, align 8, !tbaa !53
  %478 = load i32, i32* %expensive, align 4, !tbaa !5
  %tobool739 = icmp ne i32 %478, 0
  br i1 %tobool739, label %if.end.742, label %if.then.740

if.then.740:                                      ; preds = %if.end.737
  %479 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_ntries = getelementptr inbounds %struct.envelope, %struct.envelope* %479, i32 0, i32 43
  %480 = load i32, i32* %e_ntries, align 4, !tbaa !54
  %inc741 = add nsw i32 %480, 1
  store i32 %inc741, i32* %e_ntries, align 4, !tbaa !54
  br label %if.end.742

if.end.742:                                       ; preds = %if.then.740, %if.end.737
  %481 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %481, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.743

for.cond.743:                                     ; preds = %for.inc.753, %if.end.742
  %482 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp744 = icmp ne %struct.envelope* %482, null
  br i1 %cmp744, label %for.body.746, label %for.end.755

for.body.746:                                     ; preds = %for.cond.743
  %483 = load i64, i64* %now, align 8, !tbaa !32
  %484 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_dtime747 = getelementptr inbounds %struct.envelope, %struct.envelope* %484, i32 0, i32 42
  store i64 %483, i64* %e_dtime747, align 8, !tbaa !53
  %485 = load i32, i32* %expensive, align 4, !tbaa !5
  %tobool748 = icmp ne i32 %485, 0
  br i1 %tobool748, label %if.end.752, label %if.then.749

if.then.749:                                      ; preds = %for.body.746
  %486 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_ntries750 = getelementptr inbounds %struct.envelope, %struct.envelope* %486, i32 0, i32 43
  %487 = load i32, i32* %e_ntries750, align 4, !tbaa !54
  %inc751 = add nsw i32 %487, 1
  store i32 %inc751, i32* %e_ntries750, align 4, !tbaa !54
  br label %if.end.752

if.end.752:                                       ; preds = %if.then.749, %for.body.746
  br label %for.inc.753

for.inc.753:                                      ; preds = %if.end.752
  %488 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling754 = getelementptr inbounds %struct.envelope, %struct.envelope* %488, i32 0, i32 22
  %489 = load %struct.envelope*, %struct.envelope** %e_sibling754, align 8, !tbaa !50
  store %struct.envelope* %489, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.743

for.end.755:                                      ; preds = %for.cond.743
  %490 = bitcast i64* %now to i8*
  call void @llvm.lifetime.end(i64 8, i8* %490) #1
  br label %if.end.756

if.end.756:                                       ; preds = %for.end.755, %land.lhs.true.726, %lor.lhs.false.723, %land.lhs.true.720, %if.end.718
  %491 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp757 = icmp eq i32 %491, 113
  br i1 %cmp757, label %land.lhs.true.774, label %lor.lhs.false.759

lor.lhs.false.759:                                ; preds = %if.end.756
  %492 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp760 = icmp eq i32 %492, 100
  br i1 %cmp760, label %land.lhs.true.774, label %lor.lhs.false.762

lor.lhs.false.762:                                ; preds = %lor.lhs.false.759
  %493 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp763 = icmp eq i32 %493, 98
  br i1 %cmp763, label %land.lhs.true.774, label %lor.lhs.false.765

lor.lhs.false.765:                                ; preds = %lor.lhs.false.762
  %494 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp766 = icmp ne i32 %494, 118
  br i1 %cmp766, label %land.lhs.true.768, label %if.end.805

land.lhs.true.768:                                ; preds = %lor.lhs.false.765
  %495 = load i32, i32* @SuperSafe, align 4, !tbaa !5
  %cmp769 = icmp eq i32 %495, 2
  br i1 %cmp769, label %land.lhs.true.774, label %lor.lhs.false.771

lor.lhs.false.771:                                ; preds = %land.lhs.true.768
  %496 = load i32, i32* @SuperSafe, align 4, !tbaa !5
  %cmp772 = icmp eq i32 %496, 3
  br i1 %cmp772, label %land.lhs.true.774, label %if.end.805

land.lhs.true.774:                                ; preds = %lor.lhs.false.771, %land.lhs.true.768, %lor.lhs.false.762, %lor.lhs.false.759, %if.end.756
  %497 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags775 = getelementptr inbounds %struct.envelope, %struct.envelope* %497, i32 0, i32 11
  %498 = load i64, i64* %e_flags775, align 8, !tbaa !7
  %and776 = and i64 %498, 2
  %cmp777 = icmp ne i64 %and776, 0
  br i1 %cmp777, label %lor.lhs.false.779, label %if.then.782

lor.lhs.false.779:                                ; preds = %land.lhs.true.774
  %499 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  %cmp780 = icmp ne %struct.envelope* %499, null
  br i1 %cmp780, label %if.then.782, label %if.end.805

if.then.782:                                      ; preds = %lor.lhs.false.779, %land.lhs.true.774
  %500 = bitcast i32* %msync to i8*
  call void @llvm.lifetime.start(i64 4, i8* %500) #1
  store i32 0, i32* %msync, align 4, !tbaa !5
  %501 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %501, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.784

for.cond.784:                                     ; preds = %for.inc.795, %if.then.782
  %502 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp785 = icmp ne %struct.envelope* %502, null
  br i1 %cmp785, label %for.body.787, label %for.end.797

for.body.787:                                     ; preds = %for.cond.784
  %503 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %504 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp788 = icmp eq i32 %504, 113
  br i1 %cmp788, label %lor.end.793, label %lor.rhs.790

lor.rhs.790:                                      ; preds = %for.body.787
  %505 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp791 = icmp eq i32 %505, 100
  br label %lor.end.793

lor.end.793:                                      ; preds = %lor.rhs.790, %for.body.787
  %506 = phi i1 [ true, %for.body.787 ], [ %cmp791, %lor.rhs.790 ]
  %lor.ext794 = zext i1 %506 to i32
  %507 = load i32, i32* %msync, align 4, !tbaa !5
  call void @queueup(%struct.envelope* %503, i32 %lor.ext794, i32 %507)
  br label %for.inc.795

for.inc.795:                                      ; preds = %lor.end.793
  %508 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling796 = getelementptr inbounds %struct.envelope, %struct.envelope* %508, i32 0, i32 22
  %509 = load %struct.envelope*, %struct.envelope** %e_sibling796, align 8, !tbaa !50
  store %struct.envelope* %509, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.784

for.end.797:                                      ; preds = %for.cond.784
  %510 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %511 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp798 = icmp eq i32 %511, 113
  br i1 %cmp798, label %lor.end.803, label %lor.rhs.800

lor.rhs.800:                                      ; preds = %for.end.797
  %512 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp801 = icmp eq i32 %512, 100
  br label %lor.end.803

lor.end.803:                                      ; preds = %lor.rhs.800, %for.end.797
  %513 = phi i1 [ true, %for.end.797 ], [ %cmp801, %lor.rhs.800 ]
  %lor.ext804 = zext i1 %513 to i32
  %514 = load i32, i32* %msync, align 4, !tbaa !5
  call void @queueup(%struct.envelope* %510, i32 %lor.ext804, i32 %514)
  %515 = bitcast i32* %msync to i8*
  call void @llvm.lifetime.end(i64 4, i8* %515) #1
  br label %if.end.805

if.end.805:                                       ; preds = %lor.end.803, %lor.lhs.false.779, %lor.lhs.false.771, %lor.lhs.false.765
  %516 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 62), align 1, !tbaa !15
  %conv806 = zext i8 %516 to i32
  %cmp807 = icmp sge i32 %conv806, 10
  br i1 %cmp807, label %land.lhs.true.809, label %if.end.812

land.lhs.true.809:                                ; preds = %if.end.805
  %517 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool810 = icmp ne i32 %517, 0
  br i1 %tobool810, label %if.end.812, label %if.then.811

if.then.811:                                      ; preds = %land.lhs.true.809
  call void @checkfds(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0))
  br label %if.end.812

if.end.812:                                       ; preds = %if.then.811, %land.lhs.true.809, %if.end.805
  %518 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv813 = zext i8 %518 to i32
  %cmp814 = icmp sge i32 %conv813, 20
  br i1 %cmp814, label %land.lhs.true.816, label %if.end.843

land.lhs.true.816:                                ; preds = %if.end.812
  %519 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool817 = icmp ne i32 %519, 0
  br i1 %tobool817, label %if.end.843, label %if.then.818

if.then.818:                                      ; preds = %land.lhs.true.816
  %520 = load i32, i32* %mode.addr, align 4, !tbaa !5
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i32 0, i32 0), i32 %520)
  %521 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv819 = zext i8 %521 to i32
  %cmp820 = icmp sge i32 %conv819, 21
  br i1 %cmp820, label %land.lhs.true.822, label %if.end.842

land.lhs.true.822:                                ; preds = %if.then.818
  %522 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool823 = icmp ne i32 %522, 0
  br i1 %tobool823, label %if.end.842, label %if.then.824

if.then.824:                                      ; preds = %land.lhs.true.822
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.40, i32 0, i32 0))
  %523 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id825 = getelementptr inbounds %struct.envelope, %struct.envelope* %523, i32 0, i32 25
  %524 = load i8*, i8** %e_id825, align 8, !tbaa !16
  %525 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from826 = getelementptr inbounds %struct.envelope, %struct.envelope* %525, i32 0, i32 4
  %q_paddr827 = getelementptr inbounds %struct.address, %struct.address* %e_from826, i32 0, i32 0
  %526 = load i8*, i8** %q_paddr827, align 8, !tbaa !23
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i32 0, i32 0), i8* %524, i8* %526)
  %call828 = call %struct.sm_file* @sm_debug_file()
  %527 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue829 = getelementptr inbounds %struct.envelope, %struct.envelope* %527, i32 0, i32 7
  %528 = load %struct.address*, %struct.address** %e_sendqueue829, align 8, !tbaa !20
  call void @printaddr(%struct.sm_file* %call828, %struct.address* %528, i32 1)
  %529 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %529, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.830

for.cond.830:                                     ; preds = %for.inc.839, %if.then.824
  %530 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp831 = icmp ne %struct.envelope* %530, null
  br i1 %cmp831, label %for.body.833, label %for.end.841

for.body.833:                                     ; preds = %for.cond.830
  %531 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id834 = getelementptr inbounds %struct.envelope, %struct.envelope* %531, i32 0, i32 25
  %532 = load i8*, i8** %e_id834, align 8, !tbaa !16
  %533 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_from835 = getelementptr inbounds %struct.envelope, %struct.envelope* %533, i32 0, i32 4
  %q_paddr836 = getelementptr inbounds %struct.address, %struct.address* %e_from835, i32 0, i32 0
  %534 = load i8*, i8** %q_paddr836, align 8, !tbaa !23
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i32 0, i32 0), i8* %532, i8* %534)
  %call837 = call %struct.sm_file* @sm_debug_file()
  %535 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sendqueue838 = getelementptr inbounds %struct.envelope, %struct.envelope* %535, i32 0, i32 7
  %536 = load %struct.address*, %struct.address** %e_sendqueue838, align 8, !tbaa !20
  call void @printaddr(%struct.sm_file* %call837, %struct.address* %536, i32 1)
  br label %for.inc.839

for.inc.839:                                      ; preds = %for.body.833
  %537 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling840 = getelementptr inbounds %struct.envelope, %struct.envelope* %537, i32 0, i32 22
  %538 = load %struct.envelope*, %struct.envelope** %e_sibling840, align 8, !tbaa !50
  store %struct.envelope* %538, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.830

for.end.841:                                      ; preds = %for.cond.830
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.42, i32 0, i32 0))
  br label %if.end.842

if.end.842:                                       ; preds = %for.end.841, %land.lhs.true.822, %if.then.818
  br label %if.end.843

if.end.843:                                       ; preds = %if.end.842, %land.lhs.true.816, %if.end.812
  %539 = load i32, i32* %mode.addr, align 4, !tbaa !5
  switch i32 %539, label %sw.epilog [
    i32 118, label %sw.bb
    i32 113, label %sw.bb.844
    i32 100, label %sw.bb.844
    i32 98, label %sw.bb.869
  ]

sw.bb:                                            ; preds = %if.end.843
  store i32 2, i32* @Verbose, align 4, !tbaa !5
  br label %sw.epilog

sw.bb.844:                                        ; preds = %if.end.843, %if.end.843
  %540 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nrcpts = getelementptr inbounds %struct.envelope, %struct.envelope* %540, i32 0, i32 12
  %541 = load i32, i32* %e_nrcpts, align 4, !tbaa !55
  %cmp845 = icmp sgt i32 %541, 0
  br i1 %cmp845, label %if.then.847, label %if.end.850

if.then.847:                                      ; preds = %sw.bb.844
  %542 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags848 = getelementptr inbounds %struct.envelope, %struct.envelope* %542, i32 0, i32 11
  %543 = load i64, i64* %e_flags848, align 8, !tbaa !7
  %or849 = or i64 %543, 2
  store i64 %or849, i64* %e_flags848, align 8, !tbaa !7
  br label %if.end.850

if.end.850:                                       ; preds = %if.then.847, %sw.bb.844
  %544 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %545 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  %cmp851 = icmp ne %struct.envelope* %545, null
  %conv852 = zext i1 %cmp851 to i32
  %call853 = call i32 @dropenvelope(%struct.envelope* %544, i32 %conv852, i32 1)
  %546 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %546, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.854

for.cond.854:                                     ; preds = %for.inc.866, %if.end.850
  %547 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp855 = icmp ne %struct.envelope* %547, null
  br i1 %cmp855, label %for.body.857, label %for.end.868

for.body.857:                                     ; preds = %for.cond.854
  %548 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_nrcpts858 = getelementptr inbounds %struct.envelope, %struct.envelope* %548, i32 0, i32 12
  %549 = load i32, i32* %e_nrcpts858, align 4, !tbaa !55
  %cmp859 = icmp sgt i32 %549, 0
  br i1 %cmp859, label %if.then.861, label %if.end.864

if.then.861:                                      ; preds = %for.body.857
  %550 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_flags862 = getelementptr inbounds %struct.envelope, %struct.envelope* %550, i32 0, i32 11
  %551 = load i64, i64* %e_flags862, align 8, !tbaa !7
  %or863 = or i64 %551, 2
  store i64 %or863, i64* %e_flags862, align 8, !tbaa !7
  br label %if.end.864

if.end.864:                                       ; preds = %if.then.861, %for.body.857
  %552 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %call865 = call i32 @dropenvelope(%struct.envelope* %552, i32 0, i32 1)
  br label %for.inc.866

for.inc.866:                                      ; preds = %if.end.864
  %553 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling867 = getelementptr inbounds %struct.envelope, %struct.envelope* %553, i32 0, i32 22
  %554 = load %struct.envelope*, %struct.envelope** %e_sibling867, align 8, !tbaa !50
  store %struct.envelope* %554, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.854

for.end.868:                                      ; preds = %for.cond.854
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.969

sw.bb.869:                                        ; preds = %if.end.843
  %555 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp870 = getelementptr inbounds %struct.envelope, %struct.envelope* %555, i32 0, i32 32
  %556 = load %struct.sm_file*, %struct.sm_file** %e_xfp870, align 8, !tbaa !46
  %cmp871 = icmp ne %struct.sm_file* %556, null
  br i1 %cmp871, label %if.then.873, label %if.end.876

if.then.873:                                      ; preds = %sw.bb.869
  %557 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp874 = getelementptr inbounds %struct.envelope, %struct.envelope* %557, i32 0, i32 32
  %558 = load %struct.sm_file*, %struct.sm_file** %e_xfp874, align 8, !tbaa !46
  %call875 = call i32 @sm_io_flush(%struct.sm_file* %558, i32 -2)
  br label %if.end.876

if.end.876:                                       ; preds = %if.then.873, %sw.bb.869
  %559 = bitcast i8** %qid to i8*
  call void @llvm.lifetime.start(i64 8, i8* %559) #1
  %560 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id878 = getelementptr inbounds %struct.envelope, %struct.envelope* %560, i32 0, i32 25
  %561 = load i8*, i8** %e_id878, align 8, !tbaa !16
  store i8* %561, i8** %qid, align 8, !tbaa !1
  %562 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags879 = getelementptr inbounds %struct.envelope, %struct.envelope* %562, i32 0, i32 11
  %563 = load i64, i64* %e_flags879, align 8, !tbaa !7
  %or880 = or i64 %563, 2
  store i64 %or880, i64* %e_flags879, align 8, !tbaa !7
  %564 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %565 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  %cmp881 = icmp ne %struct.envelope* %565, null
  %conv882 = zext i1 %cmp881 to i32
  %call883 = call i32 @dropenvelope(%struct.envelope* %564, i32 %conv882, i32 0)
  %566 = load i8*, i8** %qid, align 8, !tbaa !1
  %567 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id884 = getelementptr inbounds %struct.envelope, %struct.envelope* %567, i32 0, i32 25
  store i8* %566, i8** %e_id884, align 8, !tbaa !16
  %568 = bitcast i8** %qid to i8*
  call void @llvm.lifetime.end(i64 8, i8* %568) #1
  %569 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %569, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.885

for.cond.885:                                     ; preds = %for.inc.896, %if.end.876
  %570 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp886 = icmp ne %struct.envelope* %570, null
  br i1 %cmp886, label %for.body.888, label %for.end.898

for.body.888:                                     ; preds = %for.cond.885
  %571 = bitcast i8** %qid890 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %571) #1
  %572 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id891 = getelementptr inbounds %struct.envelope, %struct.envelope* %572, i32 0, i32 25
  %573 = load i8*, i8** %e_id891, align 8, !tbaa !16
  store i8* %573, i8** %qid890, align 8, !tbaa !1
  %574 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_flags892 = getelementptr inbounds %struct.envelope, %struct.envelope* %574, i32 0, i32 11
  %575 = load i64, i64* %e_flags892, align 8, !tbaa !7
  %or893 = or i64 %575, 2
  store i64 %or893, i64* %e_flags892, align 8, !tbaa !7
  %576 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %call894 = call i32 @dropenvelope(%struct.envelope* %576, i32 0, i32 0)
  %577 = load i8*, i8** %qid890, align 8, !tbaa !1
  %578 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id895 = getelementptr inbounds %struct.envelope, %struct.envelope* %578, i32 0, i32 25
  store i8* %577, i8** %e_id895, align 8, !tbaa !16
  %579 = bitcast i8** %qid890 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %579) #1
  br label %for.inc.896

for.inc.896:                                      ; preds = %for.body.888
  %580 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling897 = getelementptr inbounds %struct.envelope, %struct.envelope* %580, i32 0, i32 22
  %581 = load %struct.envelope*, %struct.envelope** %e_sibling897, align 8, !tbaa !50
  store %struct.envelope* %581, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.885

for.end.898:                                      ; preds = %for.cond.885
  call void @closemaps(i32 0)
  %call899 = call i32 @fork() #1
  store i32 %call899, i32* %pid, align 4, !tbaa !5
  %582 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp900 = icmp slt i32 %582, 0
  br i1 %cmp900, label %if.then.902, label %if.else.912

if.then.902:                                      ; preds = %for.end.898
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i32 0, i32 0))
  %583 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id903 = getelementptr inbounds %struct.envelope, %struct.envelope* %583, i32 0, i32 25
  store i8* null, i8** %e_id903, align 8, !tbaa !16
  %584 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %584, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.904

for.cond.904:                                     ; preds = %for.inc.909, %if.then.902
  %585 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp905 = icmp ne %struct.envelope* %585, null
  br i1 %cmp905, label %for.body.907, label %for.end.911

for.body.907:                                     ; preds = %for.cond.904
  %586 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id908 = getelementptr inbounds %struct.envelope, %struct.envelope* %586, i32 0, i32 25
  store i8* null, i8** %e_id908, align 8, !tbaa !16
  br label %for.inc.909

for.inc.909:                                      ; preds = %for.body.907
  %587 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling910 = getelementptr inbounds %struct.envelope, %struct.envelope* %587, i32 0, i32 22
  %588 = load %struct.envelope*, %struct.envelope** %e_sibling910, align 8, !tbaa !50
  store %struct.envelope* %588, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.904

for.end.911:                                      ; preds = %for.cond.904
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.969

if.else.912:                                      ; preds = %for.end.898
  %589 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp913 = icmp sgt i32 %589, 0
  br i1 %cmp913, label %if.then.915, label %if.end.918

if.then.915:                                      ; preds = %if.else.912
  %590 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id916 = getelementptr inbounds %struct.envelope, %struct.envelope* %590, i32 0, i32 25
  store i8* null, i8** %e_id916, align 8, !tbaa !16
  %591 = load i32, i32* %pid, align 4, !tbaa !5
  %call917 = call i32 @waitfor(i32 %591)
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.969

if.end.918:                                       ; preds = %if.else.912
  br label %if.end.919

if.end.919:                                       ; preds = %if.end.918
  store volatile i8* null, i8** @RestartRequest, align 8, !tbaa !1
  store volatile i32 0, i32* @RestartWorkGroup, align 4, !tbaa !5
  store volatile i8* null, i8** @ShutdownRequest, align 8, !tbaa !1
  store volatile i32 0, i32* @PendingSignal, align 4, !tbaa !5
  call void @sm_exc_newthread(void (%struct.sm_exc*)* @fatal_error)
  %call920 = call void (i32)* @sm_signal(i32 15, void (i32)* null)
  %call921 = call i32 @fork() #1
  store i32 %call921, i32* %pid, align 4, !tbaa !5
  %592 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp922 = icmp sgt i32 %592, 0
  br i1 %cmp922, label %if.then.924, label %if.end.925

if.then.924:                                      ; preds = %if.end.919
  call void @exit(i32 0) #13
  unreachable

if.end.925:                                       ; preds = %if.end.919
  %call926 = call i32* @__errno_location() #11
  %593 = load i32, i32* %call926, align 4, !tbaa !5
  store i32 %593, i32* %save_errno, align 4, !tbaa !5
  %call927 = call i32 @getpid() #1
  store i32 %call927, i32* @CurrentPid, align 4, !tbaa !5
  %594 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @disconnect(i32 2, %struct.envelope* %594)
  call void @clearstats()
  %595 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp928 = icmp slt i32 %595, 0
  br i1 %cmp928, label %if.then.930, label %if.end.933

if.then.930:                                      ; preds = %if.end.925
  %596 = load i32, i32* %save_errno, align 4, !tbaa !5
  %call931 = call i32* @__errno_location() #11
  store i32 %596, i32* %call931, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i32 0, i32 0))
  %597 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id932 = getelementptr inbounds %struct.envelope, %struct.envelope* %597, i32 0, i32 25
  store i8* null, i8** %e_id932, align 8, !tbaa !16
  %598 = load i32, i32* @ExitStat, align 4, !tbaa !5
  call void @finis(i32 1, i32 1, i32 %598)
  br label %if.end.933

if.end.933:                                       ; preds = %if.then.930, %if.end.925
  store i32 0, i32* @QuickAbort, align 4, !tbaa !5
  call void @mci_flush(i32 0, %struct.mailer_con_info* null)
  %599 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %599, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.934

for.cond.934:                                     ; preds = %for.inc.945, %if.end.933
  %600 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp935 = icmp ne %struct.envelope* %600, null
  br i1 %cmp935, label %for.body.937, label %for.end.947

for.body.937:                                     ; preds = %for.cond.934
  %601 = bitcast %struct.envelope** %sibling to i8*
  call void @llvm.lifetime.start(i64 8, i8* %601) #1
  %602 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling939 = getelementptr inbounds %struct.envelope, %struct.envelope* %602, i32 0, i32 22
  %603 = load %struct.envelope*, %struct.envelope** %e_sibling939, align 8, !tbaa !50
  store %struct.envelope* %603, %struct.envelope** %sibling, align 8, !tbaa !1
  %604 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_qgrp940 = getelementptr inbounds %struct.envelope, %struct.envelope* %604, i32 0, i32 26
  %605 = load i32, i32* %e_qgrp940, align 4, !tbaa !47
  %606 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_qdir941 = getelementptr inbounds %struct.envelope, %struct.envelope* %606, i32 0, i32 27
  %607 = load i32, i32* %e_qdir941, align 4, !tbaa !48
  %608 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id942 = getelementptr inbounds %struct.envelope, %struct.envelope* %608, i32 0, i32 25
  %609 = load i8*, i8** %e_id942, align 8, !tbaa !16
  %610 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %call943 = call i32 @dowork(i32 %605, i32 %607, i8* %609, i32 0, i32 0, %struct.envelope* %610)
  %611 = load %struct.envelope*, %struct.envelope** %sibling, align 8, !tbaa !1
  %612 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling944 = getelementptr inbounds %struct.envelope, %struct.envelope* %612, i32 0, i32 22
  store %struct.envelope* %611, %struct.envelope** %e_sibling944, align 8, !tbaa !50
  %613 = bitcast %struct.envelope** %sibling to i8*
  call void @llvm.lifetime.end(i64 8, i8* %613) #1
  br label %for.inc.945

for.inc.945:                                      ; preds = %for.body.937
  %614 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling946 = getelementptr inbounds %struct.envelope, %struct.envelope* %614, i32 0, i32 22
  %615 = load %struct.envelope*, %struct.envelope** %e_sibling946, align 8, !tbaa !50
  store %struct.envelope* %615, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.934

for.end.947:                                      ; preds = %for.cond.934
  %616 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_qgrp948 = getelementptr inbounds %struct.envelope, %struct.envelope* %616, i32 0, i32 26
  %617 = load i32, i32* %e_qgrp948, align 4, !tbaa !47
  %618 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_qdir949 = getelementptr inbounds %struct.envelope, %struct.envelope* %618, i32 0, i32 27
  %619 = load i32, i32* %e_qdir949, align 4, !tbaa !48
  %620 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id950 = getelementptr inbounds %struct.envelope, %struct.envelope* %620, i32 0, i32 25
  %621 = load i8*, i8** %e_id950, align 8, !tbaa !16
  %622 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call951 = call i32 @dowork(i32 %617, i32 %619, i8* %621, i32 0, i32 0, %struct.envelope* %622)
  %623 = load i32, i32* @ExitStat, align 4, !tbaa !5
  call void @finis(i32 1, i32 1, i32 %623)
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end.947, %if.end.843, %sw.bb
  %624 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %625 = load i32, i32* %mode.addr, align 4, !tbaa !5
  call void @sendenvelope(%struct.envelope* %624, i32 %625)
  %626 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call952 = call i32 @dropenvelope(%struct.envelope* %626, i32 1, i32 1)
  %627 = load %struct.envelope*, %struct.envelope** %splitenv, align 8, !tbaa !1
  store %struct.envelope* %627, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.953

for.cond.953:                                     ; preds = %for.inc.962, %sw.epilog
  %628 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp954 = icmp ne %struct.envelope* %628, null
  br i1 %cmp954, label %for.body.956, label %for.end.964

for.body.956:                                     ; preds = %for.cond.953
  %629 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  store %struct.envelope* %629, %struct.envelope** @CurEnv, align 8, !tbaa !1
  %630 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp957 = icmp ne i32 %630, 118
  br i1 %cmp957, label %if.then.959, label %if.end.960

if.then.959:                                      ; preds = %for.body.956
  %631 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @openxscript(%struct.envelope* %631)
  br label %if.end.960

if.end.960:                                       ; preds = %if.then.959, %for.body.956
  %632 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %633 = load i32, i32* %mode.addr, align 4, !tbaa !5
  call void @sendenvelope(%struct.envelope* %632, i32 %633)
  %634 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %call961 = call i32 @dropenvelope(%struct.envelope* %634, i32 1, i32 1)
  br label %for.inc.962

for.inc.962:                                      ; preds = %if.end.960
  %635 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling963 = getelementptr inbounds %struct.envelope, %struct.envelope* %635, i32 0, i32 22
  %636 = load %struct.envelope*, %struct.envelope** %e_sibling963, align 8, !tbaa !50
  store %struct.envelope* %636, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.953

for.end.964:                                      ; preds = %for.cond.953
  %637 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.envelope* %637, %struct.envelope** @CurEnv, align 8, !tbaa !1
  %638 = load i32, i32* %oldverbose, align 4, !tbaa !5
  store i32 %638, i32* @Verbose, align 4, !tbaa !5
  %639 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp965 = icmp eq i32 %639, 98
  br i1 %cmp965, label %if.then.967, label %if.end.968

if.then.967:                                      ; preds = %for.end.964
  %640 = load i32, i32* @ExitStat, align 4, !tbaa !5
  call void @finis(i32 1, i32 1, i32 %640)
  br label %if.end.968

if.end.968:                                       ; preds = %if.then.967, %for.end.964
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.969

cleanup.969:                                      ; preds = %if.end.968, %if.then.915, %for.end.911, %for.end.868, %for.end, %if.then.26, %if.end.13
  %641 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %641) #1
  %642 = bitcast i32* %expensive to i8*
  call void @llvm.lifetime.end(i64 4, i8* %642) #1
  %643 = bitcast i32* %somedeliveries to i8*
  call void @llvm.lifetime.end(i64 4, i8* %643) #1
  %644 = bitcast i32* %oldverbose to i8*
  call void @llvm.lifetime.end(i64 4, i8* %644) #1
  %645 = bitcast %struct.envelope** %splitenv to i8*
  call void @llvm.lifetime.end(i64 8, i8* %645) #1
  %646 = bitcast %struct.envelope** %ee to i8*
  call void @llvm.lifetime.end(i64 8, i8* %646) #1
  %647 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %647) #1
  %648 = bitcast i32* %otherowners to i8*
  call void @llvm.lifetime.end(i64 4, i8* %648) #1
  %649 = bitcast i8** %owner to i8*
  call void @llvm.lifetime.end(i64 8, i8* %649) #1
  %650 = bitcast %struct.address** %q to i8*
  call void @llvm.lifetime.end(i64 8, i8* %650) #1
  %cleanup.dest.979 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.979, label %unreachable [
    i32 0, label %cleanup.cont.980
    i32 1, label %cleanup.cont.980
  ]

cleanup.cont.980:                                 ; preds = %cleanup.969, %cleanup.969
  ret void

unreachable:                                      ; preds = %cleanup.969, %cleanup
  unreachable
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

declare void @sm_dprintf(i8*, ...) #2

declare void @logundelrcpts(%struct.envelope*, i8*, i32, i32) #2

declare void @sm_syslog(i32, i8*, i8*, ...) #2

declare void @markstats(%struct.envelope*, %struct.address*, i32) #2

declare i32 @shouldqueue(i64, i64) #2

declare void @printaddr(%struct.sm_file*, %struct.address*, i32) #2

declare %struct.sm_file* @sm_debug_file() #2

declare void @printenvflags(%struct.envelope*) #2

declare void @checkfds(i8*) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #3

declare void @queueup(%struct.envelope*, i32, i32) #2

declare void @syserr(i8*, ...) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare %struct.address* @recipient(%struct.address*, %struct.address**, i32, %struct.envelope*) #2

; Function Attrs: nounwind
declare i32 @strcmp(i8*, i8*) #4

declare i32 @wordinclass(i8*, i32) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

declare i8* @sm_rpool_malloc_tagged_x(%struct.SM_RPOOL_T*, i64, i8*, i32, i32) #2

declare i64 @sm_strlcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare void @assign_queueid(%struct.envelope*) #2

declare %struct.header* @copyheader(%struct.header*, %struct.SM_RPOOL_T*) #2

declare %struct.address* @copyqueue(%struct.address*, %struct.SM_RPOOL_T*) #2

declare void @setsender(i8*, %struct.envelope*, i8**, i32, i32) #2

declare i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T*, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @dup_queue_file(%struct.envelope* %e, %struct.envelope* %ee, i32 %type) #0 {
entry:
  %e.addr = alloca %struct.envelope*, align 8
  %ee.addr = alloca %struct.envelope*, align 8
  %type.addr = alloca i32, align 4
  %f1buf = alloca [4096 x i8], align 16
  %f2buf = alloca [4096 x i8], align 16
  %save_errno = alloca i32, align 4
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.envelope* %ee, %struct.envelope** %ee.addr, align 8, !tbaa !1
  store i32 %type, i32* %type.addr, align 4, !tbaa !5
  %0 = bitcast [4096 x i8]* %f1buf to i8*
  call void @llvm.lifetime.start(i64 4096, i8* %0) #1
  %1 = bitcast [4096 x i8]* %f2buf to i8*
  call void @llvm.lifetime.start(i64 4096, i8* %1) #1
  %2 = load %struct.envelope*, %struct.envelope** %ee.addr, align 8, !tbaa !1
  %e_dfp = getelementptr inbounds %struct.envelope, %struct.envelope* %2, i32 0, i32 24
  store %struct.sm_file* null, %struct.sm_file** %e_dfp, align 8, !tbaa !44
  %3 = load %struct.envelope*, %struct.envelope** %ee.addr, align 8, !tbaa !1
  %e_xfp = getelementptr inbounds %struct.envelope, %struct.envelope* %3, i32 0, i32 32
  store %struct.sm_file* null, %struct.sm_file** %e_xfp, align 8, !tbaa !46
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %f1buf, i32 0, i32 0
  %4 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %5 = load i32, i32* %type.addr, align 4, !tbaa !5
  %call = call i8* @queuename(%struct.envelope* %4, i32 %5)
  %call1 = call i64 @sm_strlcpy(i8* %arraydecay, i8* %call, i64 4096)
  %arraydecay2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  %6 = load %struct.envelope*, %struct.envelope** %ee.addr, align 8, !tbaa !1
  %7 = load i32, i32* %type.addr, align 4, !tbaa !5
  %call3 = call i8* @queuename(%struct.envelope* %6, i32 %7)
  %call4 = call i64 @sm_strlcpy(i8* %arraydecay2, i8* %call3, i64 4096)
  %8 = load i32, i32* %type.addr, align 4, !tbaa !5
  %cmp = icmp eq i32 %8, 100
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp5 = getelementptr inbounds %struct.envelope, %struct.envelope* %9, i32 0, i32 24
  %10 = load %struct.sm_file*, %struct.sm_file** %e_dfp5, align 8, !tbaa !44
  %cmp6 = icmp ne %struct.sm_file* %10, null
  br i1 %cmp6, label %land.lhs.true.7, label %if.end

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %11 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp8 = getelementptr inbounds %struct.envelope, %struct.envelope* %11, i32 0, i32 24
  %12 = load %struct.sm_file*, %struct.sm_file** %e_dfp8, align 8, !tbaa !44
  %call9 = call i32 @sm_io_setinfo(%struct.sm_file* %12, i32 1001, i8* null)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %land.lhs.true.11, label %if.end

land.lhs.true.11:                                 ; preds = %land.lhs.true.7
  %call12 = call i32* @__errno_location() #11
  %13 = load i32, i32* %call12, align 4, !tbaa !5
  %cmp13 = icmp ne i32 %13, 22
  br i1 %cmp13, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.11
  %arraydecay14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f1buf, i32 0, i32 0
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.270, i32 0, i32 0), i8* %arraydecay14)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.11, %land.lhs.true.7, %land.lhs.true, %entry
  %arraydecay15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f1buf, i32 0, i32 0
  %arraydecay16 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  %call17 = call i32 @link(i8* %arraydecay15, i8* %arraydecay16) #1
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.then.19, label %if.end.40

if.then.19:                                       ; preds = %if.end
  %14 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  %call20 = call i32* @__errno_location() #11
  %15 = load i32, i32* %call20, align 4, !tbaa !5
  store i32 %15, i32* %save_errno, align 4, !tbaa !5
  %arraydecay21 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f1buf, i32 0, i32 0
  %arraydecay22 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.271, i32 0, i32 0), i8* %arraydecay21, i8* %arraydecay22)
  %16 = load i32, i32* %save_errno, align 4, !tbaa !5
  %cmp23 = icmp eq i32 %16, 17
  br i1 %cmp23, label %if.then.24, label %if.end.39

if.then.24:                                       ; preds = %if.then.19
  %arraydecay25 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  %call26 = call i32 @unlink(i8* %arraydecay25) #1
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %if.then.28, label %if.end.30

if.then.28:                                       ; preds = %if.then.24
  %arraydecay29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.272, i32 0, i32 0), i8* %arraydecay29)
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.28, %if.then.24
  %arraydecay31 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f1buf, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  %call33 = call i32 @link(i8* %arraydecay31, i8* %arraydecay32) #1
  %cmp34 = icmp slt i32 %call33, 0
  br i1 %cmp34, label %if.then.35, label %if.end.38

if.then.35:                                       ; preds = %if.end.30
  %arraydecay36 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f1buf, i32 0, i32 0
  %arraydecay37 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.273, i32 0, i32 0), i8* %arraydecay36, i8* %arraydecay37)
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.35, %if.end.30
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.then.19
  %17 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %17) #1
  br label %if.end.40

if.end.40:                                        ; preds = %if.end.39, %if.end
  %arraydecay41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %f2buf, i32 0, i32 0
  call void @sync_dir(i8* %arraydecay41, i32 1)
  %18 = bitcast [4096 x i8]* %f2buf to i8*
  call void @llvm.lifetime.end(i64 4096, i8* %18) #1
  %19 = bitcast [4096 x i8]* %f1buf to i8*
  call void @llvm.lifetime.end(i64 4096, i8* %19) #1
  ret void
}

declare %struct.sm_file* @sm_io_dup(%struct.sm_file*) #2

declare void @openxscript(%struct.envelope*) #2

declare i64 @curtime() #2

declare i32 @dropenvelope(%struct.envelope*, i32, i32) #2

declare i32 @sm_io_flush(%struct.sm_file*, i32) #2

declare void @closemaps(i32) #2

; Function Attrs: nounwind
declare i32 @fork() #4

declare i32 @waitfor(i32) #2

declare void @sm_exc_newthread(void (%struct.sm_exc*)*) #2

declare void @fatal_error(%struct.sm_exc*) #2

declare void (i32)* @sm_signal(i32, void (i32)*) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #6

; Function Attrs: nounwind
declare i32 @getpid() #4

declare void @disconnect(i32, %struct.envelope*) #2

declare void @clearstats() #2

declare void @finis(i32, i32, i32) #2

declare void @mci_flush(i32, %struct.mailer_con_info*) #2

declare i32 @dowork(i32, i32, i8*, i32, i32, %struct.envelope*) #2

; Function Attrs: nounwind uwtable
define internal void @sendenvelope(%struct.envelope* %e, i32 %mode) #0 {
entry:
  %e.addr = alloca %struct.envelope*, align 8
  %mode.addr = alloca i32, align 4
  %q = alloca %struct.address*, align 8
  %didany = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %oldsib = alloca %struct.envelope*, align 8
  %ee = alloca %struct.envelope*, align 8
  %wbuf = alloca [276 x i8], align 16
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !5
  %0 = bitcast %struct.address** %q to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %didany to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %2 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 13), align 1, !tbaa !15
  %conv = zext i8 %2 to i32
  %cmp = icmp sge i32 %conv, 10
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id = getelementptr inbounds %struct.envelope, %struct.envelope* %4, i32 0, i32 25
  %5 = load i8*, i8** %e_id, align 8, !tbaa !16
  %cmp2 = icmp eq i8* %5, null
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  br label %cond.end

cond.false:                                       ; preds = %if.then
  %6 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id4 = getelementptr inbounds %struct.envelope, %struct.envelope* %6, i32 0, i32 25
  %7 = load i8*, i8** %e_id4, align 8, !tbaa !16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.155, i32 0, i32 0), %cond.true ], [ %7, %cond.false ]
  %8 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags = getelementptr inbounds %struct.envelope, %struct.envelope* %8, i32 0, i32 11
  %9 = load i64, i64* %e_flags, align 8, !tbaa !7
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.154, i32 0, i32 0), i8* %cond, i64 %9)
  br label %if.end

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  %10 = load i32, i32* @LogLevel, align 4, !tbaa !5
  %cmp5 = icmp sgt i32 %10, 80
  br i1 %cmp5, label %if.then.7, label %if.end.10

if.then.7:                                        ; preds = %if.end
  %11 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id8 = getelementptr inbounds %struct.envelope, %struct.envelope* %11, i32 0, i32 25
  %12 = load i8*, i8** %e_id8, align 8, !tbaa !16
  %13 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags9 = getelementptr inbounds %struct.envelope, %struct.envelope* %13, i32 0, i32 11
  %14 = load i64, i64* %e_flags9, align 8, !tbaa !7
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 7, i8* %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.156, i32 0, i32 0), i64 %14)
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.7, %if.end
  %15 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags11 = getelementptr inbounds %struct.envelope, %struct.envelope* %15, i32 0, i32 11
  %16 = load i64, i64* %e_flags11, align 8, !tbaa !7
  %and = and i64 %16, 32
  %cmp12 = icmp ne i64 %and, 0
  br i1 %cmp12, label %land.lhs.true.14, label %if.end.23

land.lhs.true.14:                                 ; preds = %if.end.10
  %17 = load i8, i8* @OpMode, align 1, !tbaa !15
  %conv15 = sext i8 %17 to i32
  %cmp16 = icmp eq i32 %conv15, 115
  br i1 %cmp16, label %if.then.21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.14
  %18 = load i8, i8* @OpMode, align 1, !tbaa !15
  %conv18 = sext i8 %18 to i32
  %cmp19 = icmp eq i32 %conv18, 100
  br i1 %cmp19, label %if.then.21, label %if.end.23

if.then.21:                                       ; preds = %lor.lhs.false, %land.lhs.true.14
  %19 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags22 = getelementptr inbounds %struct.envelope, %struct.envelope* %19, i32 0, i32 11
  %20 = load i64, i64* %e_flags22, align 8, !tbaa !7
  %or = or i64 %20, 8
  store i64 %or, i64* %e_flags22, align 8, !tbaa !7
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.164

if.end.23:                                        ; preds = %lor.lhs.false, %if.end.10
  %21 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags24 = getelementptr inbounds %struct.envelope, %struct.envelope* %21, i32 0, i32 11
  %22 = load i64, i64* %e_flags24, align 8, !tbaa !7
  %and25 = and i64 %22, 128
  %cmp26 = icmp ne i64 %and25, 0
  br i1 %cmp26, label %if.end.43, label %land.lhs.true.28

land.lhs.true.28:                                 ; preds = %if.end.23
  %23 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_timeoutclass = getelementptr inbounds %struct.envelope, %struct.envelope* %23, i32 0, i32 18
  %24 = load i16, i16* %e_timeoutclass, align 2, !tbaa !56
  %idxprom = sext i16 %24 to i64
  %arrayidx = getelementptr inbounds [8 x i64], [8 x i64]* getelementptr inbounds (%struct.anon, %struct.anon* @TimeOuts, i32 0, i32 18), i32 0, i64 %idxprom
  %25 = load i64, i64* %arrayidx, align 8, !tbaa !32
  %cmp29 = icmp eq i64 %25, -1
  br i1 %cmp29, label %if.then.42, label %lor.lhs.false.31

lor.lhs.false.31:                                 ; preds = %land.lhs.true.28
  %26 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dlvr_flag = getelementptr inbounds %struct.envelope, %struct.envelope* %26, i32 0, i32 51
  %27 = load i32, i32* %e_dlvr_flag, align 4, !tbaa !57
  %and32 = and i32 %27, 2
  %cmp33 = icmp ne i32 %and32, 0
  br i1 %cmp33, label %land.lhs.true.35, label %if.end.43

land.lhs.true.35:                                 ; preds = %lor.lhs.false.31
  %28 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_deliver_by = getelementptr inbounds %struct.envelope, %struct.envelope* %28, i32 0, i32 50
  %29 = load i64, i64* %e_deliver_by, align 8, !tbaa !58
  %cmp36 = icmp sgt i64 %29, 0
  br i1 %cmp36, label %land.lhs.true.38, label %if.end.43

land.lhs.true.38:                                 ; preds = %land.lhs.true.35
  %call = call i64 @curtime()
  %30 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_ctime = getelementptr inbounds %struct.envelope, %struct.envelope* %30, i32 0, i32 2
  %31 = load i64, i64* %e_ctime, align 8, !tbaa !19
  %32 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_deliver_by39 = getelementptr inbounds %struct.envelope, %struct.envelope* %32, i32 0, i32 50
  %33 = load i64, i64* %e_deliver_by39, align 8, !tbaa !58
  %add = add nsw i64 %31, %33
  %cmp40 = icmp sgt i64 %call, %add
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %land.lhs.true.38, %land.lhs.true.28
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.164

if.end.43:                                        ; preds = %land.lhs.true.38, %land.lhs.true.35, %lor.lhs.false.31, %if.end.23
  %34 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nsent = getelementptr inbounds %struct.envelope, %struct.envelope* %34, i32 0, i32 15
  store i16 0, i16* %e_nsent, align 2, !tbaa !59
  %35 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags44 = getelementptr inbounds %struct.envelope, %struct.envelope* %35, i32 0, i32 11
  %36 = load i64, i64* %e_flags44, align 8, !tbaa !7
  %or45 = or i64 %36, 4096
  store i64 %or45, i64* %e_flags44, align 8, !tbaa !7
  %37 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro = getelementptr inbounds %struct.envelope, %struct.envelope* %37, i32 0, i32 46
  %call46 = call i32 @macid_parse(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.157, i32 0, i32 0), i8** null)
  %38 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_envid = getelementptr inbounds %struct.envelope, %struct.envelope* %38, i32 0, i32 40
  %39 = load i8*, i8** %e_envid, align 8, !tbaa !60
  %40 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro, i32 2, i32 %call46, i8* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 834, i32 %40)
  %41 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro47 = getelementptr inbounds %struct.envelope, %struct.envelope* %41, i32 0, i32 46
  %call48 = call i32 @macid_parse(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.158, i32 0, i32 0), i8** null)
  %42 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_bodytype = getelementptr inbounds %struct.envelope, %struct.envelope* %42, i32 0, i32 23
  %43 = load i8*, i8** %e_bodytype, align 8, !tbaa !61
  %44 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro47, i32 2, i32 %call48, i8* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 835, i32 %44)
  store i32 0, i32* %didany, align 4, !tbaa !5
  %45 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags49 = getelementptr inbounds %struct.envelope, %struct.envelope* %45, i32 0, i32 11
  %46 = load i64, i64* %e_flags49, align 8, !tbaa !7
  %and50 = and i64 %46, 67108864
  %cmp51 = icmp ne i64 %and50, 0
  br i1 %cmp51, label %if.end.99, label %if.then.53

if.then.53:                                       ; preds = %if.end.43
  %47 = bitcast %struct.envelope** %oldsib to i8*
  call void @llvm.lifetime.start(i64 8, i8* %47) #1
  %48 = bitcast %struct.envelope** %ee to i8*
  call void @llvm.lifetime.start(i64 8, i8* %48) #1
  %49 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sibling = getelementptr inbounds %struct.envelope, %struct.envelope* %49, i32 0, i32 22
  %50 = load %struct.envelope*, %struct.envelope** %e_sibling, align 8, !tbaa !50
  store %struct.envelope* %50, %struct.envelope** %oldsib, align 8, !tbaa !1
  %51 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sibling54 = getelementptr inbounds %struct.envelope, %struct.envelope* %51, i32 0, i32 22
  store %struct.envelope* null, %struct.envelope** %e_sibling54, align 8, !tbaa !50
  %52 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call55 = call i32 @split_by_recipient(%struct.envelope* %52)
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %if.end.74, label %land.lhs.true.57

land.lhs.true.57:                                 ; preds = %if.then.53
  %53 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags58 = getelementptr inbounds %struct.envelope, %struct.envelope* %53, i32 0, i32 11
  %54 = load i64, i64* %e_flags58, align 8, !tbaa !7
  %and59 = and i64 %54, 32
  %cmp60 = icmp ne i64 %and59, 0
  br i1 %cmp60, label %if.then.62, label %if.end.74

if.then.62:                                       ; preds = %land.lhs.true.57
  %55 = load i8, i8* @OpMode, align 1, !tbaa !15
  %conv63 = sext i8 %55 to i32
  %cmp64 = icmp eq i32 %conv63, 115
  br i1 %cmp64, label %if.then.70, label %lor.lhs.false.66

lor.lhs.false.66:                                 ; preds = %if.then.62
  %56 = load i8, i8* @OpMode, align 1, !tbaa !15
  %conv67 = sext i8 %56 to i32
  %cmp68 = icmp eq i32 %conv67, 100
  br i1 %cmp68, label %if.then.70, label %if.end.73

if.then.70:                                       ; preds = %lor.lhs.false.66, %if.then.62
  %57 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags71 = getelementptr inbounds %struct.envelope, %struct.envelope* %57, i32 0, i32 11
  %58 = load i64, i64* %e_flags71, align 8, !tbaa !7
  %or72 = or i64 %58, 8
  store i64 %or72, i64* %e_flags71, align 8, !tbaa !7
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.70, %lor.lhs.false.66
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.74:                                        ; preds = %land.lhs.true.57, %if.then.53
  %59 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sibling75 = getelementptr inbounds %struct.envelope, %struct.envelope* %59, i32 0, i32 22
  %60 = load %struct.envelope*, %struct.envelope** %e_sibling75, align 8, !tbaa !50
  store %struct.envelope* %60, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.74
  %61 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp76 = icmp ne %struct.envelope* %61, null
  br i1 %cmp76, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %62 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @queueup(%struct.envelope* %62, i32 0, i32 1)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %63 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling78 = getelementptr inbounds %struct.envelope, %struct.envelope* %63, i32 0, i32 22
  %64 = load %struct.envelope*, %struct.envelope** %e_sibling78, align 8, !tbaa !50
  store %struct.envelope* %64, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %65 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sibling79 = getelementptr inbounds %struct.envelope, %struct.envelope* %65, i32 0, i32 22
  %66 = load %struct.envelope*, %struct.envelope** %e_sibling79, align 8, !tbaa !50
  store %struct.envelope* %66, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.80

for.cond.80:                                      ; preds = %for.inc.94, %for.end
  %67 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %cmp81 = icmp ne %struct.envelope* %67, null
  br i1 %cmp81, label %for.body.83, label %for.end.96

for.body.83:                                      ; preds = %for.cond.80
  %68 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @closexscript(%struct.envelope* %68)
  %69 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  call void @unlockqueue(%struct.envelope* %69)
  %70 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_dfp = getelementptr inbounds %struct.envelope, %struct.envelope* %70, i32 0, i32 24
  %71 = load %struct.sm_file*, %struct.sm_file** %e_dfp, align 8, !tbaa !44
  %cmp84 = icmp ne %struct.sm_file* %71, null
  br i1 %cmp84, label %if.then.86, label %if.end.90

if.then.86:                                       ; preds = %for.body.83
  %72 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_dfp87 = getelementptr inbounds %struct.envelope, %struct.envelope* %72, i32 0, i32 24
  %73 = load %struct.sm_file*, %struct.sm_file** %e_dfp87, align 8, !tbaa !44
  %call88 = call i32 @sm_io_close(%struct.sm_file* %73, i32 -2)
  %74 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_dfp89 = getelementptr inbounds %struct.envelope, %struct.envelope* %74, i32 0, i32 24
  store %struct.sm_file* null, %struct.sm_file** %e_dfp89, align 8, !tbaa !44
  br label %if.end.90

if.end.90:                                        ; preds = %if.then.86, %for.body.83
  %75 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_id91 = getelementptr inbounds %struct.envelope, %struct.envelope* %75, i32 0, i32 25
  store i8* null, i8** %e_id91, align 8, !tbaa !16
  %76 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_flags92 = getelementptr inbounds %struct.envelope, %struct.envelope* %76, i32 0, i32 11
  %77 = load i64, i64* %e_flags92, align 8, !tbaa !7
  %and93 = and i64 %77, -2097153
  store i64 %and93, i64* %e_flags92, align 8, !tbaa !7
  br label %for.inc.94

for.inc.94:                                       ; preds = %if.end.90
  %78 = load %struct.envelope*, %struct.envelope** %ee, align 8, !tbaa !1
  %e_sibling95 = getelementptr inbounds %struct.envelope, %struct.envelope* %78, i32 0, i32 22
  %79 = load %struct.envelope*, %struct.envelope** %e_sibling95, align 8, !tbaa !50
  store %struct.envelope* %79, %struct.envelope** %ee, align 8, !tbaa !1
  br label %for.cond.80

for.end.96:                                       ; preds = %for.cond.80
  %80 = load %struct.envelope*, %struct.envelope** %oldsib, align 8, !tbaa !1
  %81 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sibling97 = getelementptr inbounds %struct.envelope, %struct.envelope* %81, i32 0, i32 22
  store %struct.envelope* %80, %struct.envelope** %e_sibling97, align 8, !tbaa !50
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %for.end.96, %if.end.73
  %82 = bitcast %struct.envelope** %ee to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  %83 = bitcast %struct.envelope** %oldsib to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.164 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.99

if.end.99:                                        ; preds = %cleanup.cont, %if.end.43
  %84 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sendqueue = getelementptr inbounds %struct.envelope, %struct.envelope* %84, i32 0, i32 7
  %85 = load %struct.address*, %struct.address** %e_sendqueue, align 8, !tbaa !20
  store %struct.address* %85, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.100

for.cond.100:                                     ; preds = %for.inc.158, %if.end.99
  %86 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %cmp101 = icmp ne %struct.address* %86, null
  br i1 %cmp101, label %for.body.103, label %for.end.159

for.body.103:                                     ; preds = %for.cond.100
  %87 = bitcast [276 x i8]* %wbuf to i8*
  call void @llvm.lifetime.start(i64 276, i8* %87) #1
  %arraydecay = getelementptr inbounds [276 x i8], [276 x i8]* %wbuf, i32 0, i32 0
  %88 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_paddr = getelementptr inbounds %struct.address, %struct.address* %88, i32 0, i32 0
  %89 = load i8*, i8** %q_paddr, align 8, !tbaa !22
  %call104 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay, i64 276, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.159, i32 0, i32 0), i32 256, i8* %89)
  %arraydecay105 = getelementptr inbounds [276 x i8], [276 x i8]* %wbuf, i32 0, i32 0
  call void @checkfd012(i8* %arraydecay105)
  %90 = load i32, i32* %mode.addr, align 4, !tbaa !5
  %cmp106 = icmp eq i32 %90, 118
  br i1 %cmp106, label %if.then.108, label %if.else.139

if.then.108:                                      ; preds = %for.body.103
  %91 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_paddr109 = getelementptr inbounds %struct.address, %struct.address* %91, i32 0, i32 0
  %92 = load i8*, i8** %q_paddr109, align 8, !tbaa !22
  %93 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to = getelementptr inbounds %struct.envelope, %struct.envelope* %93, i32 0, i32 3
  store i8* %92, i8** %e_to, align 8, !tbaa !62
  %94 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state = getelementptr inbounds %struct.address, %struct.address* %94, i32 0, i32 21
  %95 = load i16, i16* %q_state, align 2, !tbaa !24
  %conv110 = sext i16 %95 to i32
  %cmp111 = icmp eq i32 %conv110, 0
  br i1 %cmp111, label %if.then.123, label %lor.lhs.false.113

lor.lhs.false.113:                                ; preds = %if.then.108
  %96 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state114 = getelementptr inbounds %struct.address, %struct.address* %96, i32 0, i32 21
  %97 = load i16, i16* %q_state114, align 2, !tbaa !24
  %conv115 = sext i16 %97 to i32
  %cmp116 = icmp eq i32 %conv115, 3
  br i1 %cmp116, label %if.then.123, label %lor.lhs.false.118

lor.lhs.false.118:                                ; preds = %lor.lhs.false.113
  %98 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state119 = getelementptr inbounds %struct.address, %struct.address* %98, i32 0, i32 21
  %99 = load i16, i16* %q_state119, align 2, !tbaa !24
  %conv120 = sext i16 %99 to i32
  %cmp121 = icmp eq i32 %conv120, 4
  br i1 %cmp121, label %if.then.123, label %if.end.138

if.then.123:                                      ; preds = %lor.lhs.false.118, %lor.lhs.false.113, %if.then.108
  %100 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_host = getelementptr inbounds %struct.address, %struct.address* %100, i32 0, i32 3
  %101 = load i8*, i8** %q_host, align 8, !tbaa !37
  %cmp124 = icmp ne i8* %101, null
  br i1 %cmp124, label %land.lhs.true.126, label %if.else

land.lhs.true.126:                                ; preds = %if.then.123
  %102 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_host127 = getelementptr inbounds %struct.address, %struct.address* %102, i32 0, i32 3
  %103 = load i8*, i8** %q_host127, align 8, !tbaa !37
  %arrayidx128 = getelementptr inbounds i8, i8* %103, i64 0
  %104 = load i8, i8* %arrayidx128, align 1, !tbaa !15
  %conv129 = sext i8 %104 to i32
  %cmp130 = icmp ne i32 %conv129, 0
  br i1 %cmp130, label %if.then.132, label %if.else

if.then.132:                                      ; preds = %land.lhs.true.126
  %105 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_mailer = getelementptr inbounds %struct.address, %struct.address* %105, i32 0, i32 4
  %106 = load %struct.mailer*, %struct.mailer** %q_mailer, align 8, !tbaa !31
  %m_name = getelementptr inbounds %struct.mailer, %struct.mailer* %106, i32 0, i32 0
  %107 = load i8*, i8** %m_name, align 8, !tbaa !63
  %108 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_host133 = getelementptr inbounds %struct.address, %struct.address* %108, i32 0, i32 3
  %109 = load i8*, i8** %q_host133, align 8, !tbaa !37
  %110 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_user = getelementptr inbounds %struct.address, %struct.address* %110, i32 0, i32 1
  %111 = load i8*, i8** %q_user, align 8, !tbaa !64
  call void (i8*, ...) @message(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.160, i32 0, i32 0), i8* %107, i8* %109, i8* %111)
  br label %if.end.137

if.else:                                          ; preds = %land.lhs.true.126, %if.then.123
  %112 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_mailer134 = getelementptr inbounds %struct.address, %struct.address* %112, i32 0, i32 4
  %113 = load %struct.mailer*, %struct.mailer** %q_mailer134, align 8, !tbaa !31
  %m_name135 = getelementptr inbounds %struct.mailer, %struct.mailer* %113, i32 0, i32 0
  %114 = load i8*, i8** %m_name135, align 8, !tbaa !63
  %115 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_user136 = getelementptr inbounds %struct.address, %struct.address* %115, i32 0, i32 1
  %116 = load i8*, i8** %q_user136, align 8, !tbaa !64
  call void (i8*, ...) @message(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.161, i32 0, i32 0), i8* %114, i8* %116)
  br label %if.end.137

if.end.137:                                       ; preds = %if.else, %if.then.132
  br label %if.end.138

if.end.138:                                       ; preds = %if.end.137, %lor.lhs.false.118
  br label %if.end.157

if.else.139:                                      ; preds = %for.body.103
  %117 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_state140 = getelementptr inbounds %struct.address, %struct.address* %117, i32 0, i32 21
  %118 = load i16, i16* %q_state140, align 2, !tbaa !24
  %conv141 = sext i16 %118 to i32
  %cmp142 = icmp eq i32 %conv141, 0
  br i1 %cmp142, label %if.then.144, label %if.end.156

if.then.144:                                      ; preds = %if.else.139
  %119 = load i32, i32* @CheckpointInterval, align 4, !tbaa !5
  %cmp145 = icmp sgt i32 %119, 0
  br i1 %cmp145, label %land.lhs.true.147, label %if.end.154

land.lhs.true.147:                                ; preds = %if.then.144
  %120 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nsent148 = getelementptr inbounds %struct.envelope, %struct.envelope* %120, i32 0, i32 15
  %121 = load i16, i16* %e_nsent148, align 2, !tbaa !59
  %conv149 = sext i16 %121 to i32
  %122 = load i32, i32* @CheckpointInterval, align 4, !tbaa !5
  %cmp150 = icmp sge i32 %conv149, %122
  br i1 %cmp150, label %if.then.152, label %if.end.154

if.then.152:                                      ; preds = %land.lhs.true.147
  %123 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @queueup(%struct.envelope* %123, i32 0, i32 0)
  %124 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nsent153 = getelementptr inbounds %struct.envelope, %struct.envelope* %124, i32 0, i32 15
  store i16 0, i16* %e_nsent153, align 2, !tbaa !59
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.152, %land.lhs.true.147, %if.then.144
  %125 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %126 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %call155 = call i32 @deliver(%struct.envelope* %125, %struct.address* %126)
  store i32 1, i32* %didany, align 4, !tbaa !5
  br label %if.end.156

if.end.156:                                       ; preds = %if.end.154, %if.else.139
  br label %if.end.157

if.end.157:                                       ; preds = %if.end.156, %if.end.138
  %127 = bitcast [276 x i8]* %wbuf to i8*
  call void @llvm.lifetime.end(i64 276, i8* %127) #1
  br label %for.inc.158

for.inc.158:                                      ; preds = %if.end.157
  %128 = load %struct.address*, %struct.address** %q, align 8, !tbaa !1
  %q_next = getelementptr inbounds %struct.address, %struct.address* %128, i32 0, i32 10
  %129 = load %struct.address*, %struct.address** %q_next, align 8, !tbaa !27
  store %struct.address* %129, %struct.address** %q, align 8, !tbaa !1
  br label %for.cond.100

for.end.159:                                      ; preds = %for.cond.100
  %130 = load i32, i32* %didany, align 4, !tbaa !5
  %tobool160 = icmp ne i32 %130, 0
  br i1 %tobool160, label %if.then.161, label %if.end.163

if.then.161:                                      ; preds = %for.end.159
  %call162 = call i64 @curtime()
  %131 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dtime = getelementptr inbounds %struct.envelope, %struct.envelope* %131, i32 0, i32 42
  store i64 %call162, i64* %e_dtime, align 8, !tbaa !53
  %132 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_ntries = getelementptr inbounds %struct.envelope, %struct.envelope* %132, i32 0, i32 43
  %133 = load i32, i32* %e_ntries, align 4, !tbaa !54
  %inc = add nsw i32 %133, 1
  store i32 %inc, i32* %e_ntries, align 4, !tbaa !54
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.161, %for.end.159
  call void @checkfd012(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.162, i32 0, i32 0))
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.164

cleanup.164:                                      ; preds = %if.end.163, %cleanup, %if.then.42, %if.then.21
  %134 = bitcast i32* %didany to i8*
  call void @llvm.lifetime.end(i64 4, i8* %134) #1
  %135 = bitcast %struct.address** %q to i8*
  call void @llvm.lifetime.end(i64 8, i8* %135) #1
  %cleanup.dest.166 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.166, label %unreachable [
    i32 0, label %cleanup.cont.167
    i32 1, label %cleanup.cont.167
  ]

cleanup.cont.167:                                 ; preds = %cleanup.164, %cleanup.164
  ret void

unreachable:                                      ; preds = %cleanup.164
  unreachable
}

; Function Attrs: nounwind uwtable
define void @sync_dir(i8* %filename, i32 %panic) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %panic.addr = alloca i32, align 4
  %dirfd = alloca i32, align 4
  %dirp = alloca i8*, align 8
  %dir = alloca [4096 x i8], align 16
  %cleanup.dest.slot = alloca i32
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !1
  store i32 %panic, i32* %panic.addr, align 4, !tbaa !5
  %0 = bitcast i32* %dirfd to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i8** %dirp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast [4096 x i8]* %dir to i8*
  call void @llvm.lifetime.start(i64 4096, i8* %2) #1
  %3 = load i32, i32* @RequiresDirfsync, align 4, !tbaa !5
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %filename.addr, align 8, !tbaa !1
  %call = call i8* @strrchr(i8* %4, i32 47) #12
  store i8* %call, i8** %dirp, align 8, !tbaa !1
  %5 = load i8*, i8** %dirp, align 8, !tbaa !1
  %cmp = icmp ne i8* %5, null
  br i1 %cmp, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %dir, i32 0, i32 0
  %6 = load i8*, i8** %filename.addr, align 8, !tbaa !1
  %call2 = call i64 @sm_strlcpy(i8* %arraydecay, i8* %6, i64 4096)
  %cmp3 = icmp uge i64 %call2, 4096
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.1
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.5:                                         ; preds = %if.then.1
  %7 = load i8*, i8** %dirp, align 8, !tbaa !1
  %8 = load i8*, i8** %filename.addr, align 8, !tbaa !1
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %dir, i32 0, i64 %sub.ptr.sub
  store i8 0, i8* %arrayidx, align 1, !tbaa !15
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %dir, i32 0, i32 0
  store i8* %arraydecay6, i8** %dirp, align 8, !tbaa !1
  br label %if.end.7

if.else:                                          ; preds = %if.end
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0), i8** %dirp, align 8, !tbaa !1
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.end.5
  %9 = load i8*, i8** %dirp, align 8, !tbaa !1
  %call8 = call i32 (i8*, i32, ...) @open(i8* %9, i32 0, i32 448)
  store i32 %call8, i32* %dirfd, align 4, !tbaa !5
  %10 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 40), align 1, !tbaa !15
  %conv = zext i8 %10 to i32
  %cmp9 = icmp sge i32 %conv, 32
  br i1 %cmp9, label %land.lhs.true, label %if.end.13

land.lhs.true:                                    ; preds = %if.end.7
  %11 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool11 = icmp ne i32 %11, 0
  br i1 %tobool11, label %if.end.13, label %if.then.12

if.then.12:                                       ; preds = %land.lhs.true
  %12 = load i8*, i8** %dirp, align 8, !tbaa !1
  %13 = load i32, i32* %dirfd, align 4, !tbaa !5
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i32 0, i32 0), i8* %12, i32 %13)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.12, %land.lhs.true, %if.end.7
  %14 = load i32, i32* %dirfd, align 4, !tbaa !5
  %cmp14 = icmp sge i32 %14, 0
  br i1 %cmp14, label %if.then.16, label %if.end.33

if.then.16:                                       ; preds = %if.end.13
  %15 = load i32, i32* %dirfd, align 4, !tbaa !5
  %call17 = call i32 @fsync(i32 %15)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.then.20, label %if.end.31

if.then.20:                                       ; preds = %if.then.16
  %16 = load i32, i32* %panic.addr, align 4, !tbaa !5
  %tobool21 = icmp ne i32 %16, 0
  br i1 %tobool21, label %if.then.22, label %if.else.23

if.then.22:                                       ; preds = %if.then.20
  %17 = load i8*, i8** %dirp, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.47, i32 0, i32 0), i8* %17)
  br label %if.end.30

if.else.23:                                       ; preds = %if.then.20
  %18 = load i32, i32* @LogLevel, align 4, !tbaa !5
  %cmp24 = icmp sgt i32 %18, 1
  br i1 %cmp24, label %if.then.26, label %if.end.29

if.then.26:                                       ; preds = %if.else.23
  %19 = load i8*, i8** %dirp, align 8, !tbaa !1
  %call27 = call i32* @__errno_location() #11
  %20 = load i32, i32* %call27, align 4, !tbaa !5
  %call28 = call i8* @sm_errstring(i32 %20)
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.48, i32 0, i32 0), i8* %19, i8* %call28)
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.26, %if.else.23
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.then.22
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30, %if.then.16
  %21 = load i32, i32* %dirfd, align 4, !tbaa !5
  %call32 = call i32 @close(i32 %21)
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.31, %if.end.13
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.33, %if.then.4, %if.then
  %22 = bitcast [4096 x i8]* %dir to i8*
  call void @llvm.lifetime.end(i64 4096, i8* %22) #1
  %23 = bitcast i8** %dirp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %23) #1
  %24 = bitcast i32* %dirfd to i8*
  call void @llvm.lifetime.end(i64 4, i8* %24) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

declare i32 @open(i8*, i32, ...) #2

declare i32 @fsync(i32) #2

declare i8* @sm_errstring(i32) #2

declare i32 @close(i32) #2

; Function Attrs: nounwind uwtable
define i32 @dofork() #0 {
entry:
  %pid = alloca i32, align 4
  %i = alloca i32, align 4
  %0 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 -1, i32* %pid, align 4, !tbaa !5
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 5, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %if.end.5, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !5
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* %i, align 4, !tbaa !5
  %cmp = icmp sge i32 %dec, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @fork() #1
  store i32 %call, i32* %pid, align 4, !tbaa !5
  %3 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp1 = icmp sge i32 %3, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !tbaa !5
  %cmp2 = icmp sgt i32 %4, 0
  br i1 %cmp2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !tbaa !5
  %sub = sub i32 5, %5
  %call4 = call i32 @sleep(i32 %sub)
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.3, %if.end
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %6) #1
  %7 = load i32, i32* %pid, align 4, !tbaa !5
  %8 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %8) #1
  ret i32 %7
}

declare i32 @sleep(i32) #2

; Function Attrs: nounwind uwtable
define void @markfailure(%struct.envelope* %e, %struct.address* %q, %struct.mailer_con_info* %mci, i32 %rcode, i32 %ovr) #0 {
entry:
  %e.addr = alloca %struct.envelope*, align 8
  %q.addr = alloca %struct.address*, align 8
  %mci.addr = alloca %struct.mailer_con_info*, align 8
  %rcode.addr = alloca i32, align 4
  %ovr.addr = alloca i32, align 4
  %save_errno = alloca i32, align 4
  %status = alloca i8*, align 8
  %rstatus = alloca i8*, align 8
  %buf = alloca [16 x i8], align 16
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.address* %q, %struct.address** %q.addr, align 8, !tbaa !1
  store %struct.mailer_con_info* %mci, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  store i32 %rcode, i32* %rcode.addr, align 4, !tbaa !5
  store i32 %ovr, i32* %ovr.addr, align 4, !tbaa !5
  %0 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %call = call i32* @__errno_location() #11
  %1 = load i32, i32* %call, align 4, !tbaa !5
  store i32 %1, i32* %save_errno, align 4, !tbaa !5
  %2 = bitcast i8** %status to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  store i8* null, i8** %status, align 8, !tbaa !1
  %3 = bitcast i8** %rstatus to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  store i8* null, i8** %rstatus, align 8, !tbaa !1
  %4 = load i32, i32* %rcode.addr, align 4, !tbaa !5
  switch i32 %4, label %sw.default [
    i32 0, label %sw.epilog
    i32 75, label %sw.bb
    i32 74, label %sw.bb
    i32 71, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry
  %5 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_state = getelementptr inbounds %struct.address, %struct.address* %5, i32 0, i32 21
  store i16 3, i16* %q_state, align 2, !tbaa !24
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %6 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_state1 = getelementptr inbounds %struct.address, %struct.address* %6, i32 0, i32 21
  store i16 2, i16* %q_state1, align 2, !tbaa !24
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb, %entry
  %7 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.mailer_con_info* %7, null
  br i1 %cmp, label %land.lhs.true, label %if.else.10

land.lhs.true:                                    ; preds = %sw.epilog
  %8 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_status = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %8, i32 0, i32 13
  %9 = load i8*, i8** %mci_status, align 8, !tbaa !65
  %cmp2 = icmp ne i8* %9, null
  br i1 %cmp2, label %if.then, label %if.else.10

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool = getelementptr inbounds %struct.envelope, %struct.envelope* %10, i32 0, i32 52
  %11 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool, align 8, !tbaa !36
  %12 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_status3 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %12, i32 0, i32 13
  %13 = load i8*, i8** %mci_status3, align 8, !tbaa !65
  %call4 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %11, i8* %13)
  store i8* %call4, i8** %status, align 8, !tbaa !1
  %14 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_rstatus = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %14, i32 0, i32 14
  %15 = load i8*, i8** %mci_rstatus, align 8, !tbaa !67
  %cmp5 = icmp ne i8* %15, null
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %if.then
  %16 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool7 = getelementptr inbounds %struct.envelope, %struct.envelope* %16, i32 0, i32 52
  %17 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool7, align 8, !tbaa !36
  %18 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_rstatus8 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %18, i32 0, i32 14
  %19 = load i8*, i8** %mci_rstatus8, align 8, !tbaa !67
  %call9 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %17, i8* %19)
  store i8* %call9, i8** %rstatus, align 8, !tbaa !1
  br label %if.end

if.else:                                          ; preds = %if.then
  store i8* null, i8** %rstatus, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  br label %if.end.25

if.else.10:                                       ; preds = %land.lhs.true, %sw.epilog
  %20 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status = getelementptr inbounds %struct.envelope, %struct.envelope* %20, i32 0, i32 41
  %21 = load i8*, i8** %e_status, align 8, !tbaa !68
  %cmp11 = icmp ne i8* %21, null
  br i1 %cmp11, label %if.then.12, label %if.else.14

if.then.12:                                       ; preds = %if.else.10
  %22 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status13 = getelementptr inbounds %struct.envelope, %struct.envelope* %22, i32 0, i32 41
  %23 = load i8*, i8** %e_status13, align 8, !tbaa !68
  store i8* %23, i8** %status, align 8, !tbaa !1
  store i8* null, i8** %rstatus, align 8, !tbaa !1
  br label %if.end.24

if.else.14:                                       ; preds = %if.else.10
  %24 = load i32, i32* %rcode.addr, align 4, !tbaa !5
  switch i32 %24, label %sw.epilog.23 [
    i32 64, label %sw.bb.15
    i32 65, label %sw.bb.16
    i32 67, label %sw.bb.17
    i32 68, label %sw.bb.18
    i32 66, label %sw.bb.19
    i32 73, label %sw.bb.19
    i32 77, label %sw.bb.19
    i32 69, label %sw.bb.20
    i32 70, label %sw.bb.20
    i32 72, label %sw.bb.20
    i32 76, label %sw.bb.20
    i32 78, label %sw.bb.20
    i32 71, label %sw.bb.21
    i32 74, label %sw.bb.21
    i32 75, label %sw.bb.22
  ]

sw.bb.15:                                         ; preds = %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.bb.16:                                         ; preds = %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.bb.17:                                         ; preds = %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.bb.18:                                         ; preds = %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.bb.19:                                         ; preds = %if.else.14, %if.else.14, %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.bb.20:                                         ; preds = %if.else.14, %if.else.14, %if.else.14, %if.else.14, %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.bb.21:                                         ; preds = %if.else.14, %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.bb.22:                                         ; preds = %if.else.14
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), i8** %status, align 8, !tbaa !1
  br label %sw.epilog.23

sw.epilog.23:                                     ; preds = %if.else.14, %sw.bb.22, %sw.bb.21, %sw.bb.20, %sw.bb.19, %sw.bb.18, %sw.bb.17, %sw.bb.16, %sw.bb.15
  br label %if.end.24

if.end.24:                                        ; preds = %sw.epilog.23, %if.then.12
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.24, %if.end
  %25 = load i8*, i8** %status, align 8, !tbaa !1
  %cmp26 = icmp ne i8* %25, null
  br i1 %cmp26, label %land.lhs.true.27, label %if.end.46

land.lhs.true.27:                                 ; preds = %if.end.25
  %26 = load i8*, i8** %status, align 8, !tbaa !1
  %27 = load i8, i8* %26, align 1, !tbaa !15
  %conv = sext i8 %27 to i32
  %cmp28 = icmp ne i32 %conv, 0
  br i1 %cmp28, label %land.lhs.true.30, label %if.end.46

land.lhs.true.30:                                 ; preds = %land.lhs.true.27
  %28 = load i32, i32* %ovr.addr, align 4, !tbaa !5
  %tobool = icmp ne i32 %28, 0
  br i1 %tobool, label %if.then.44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.30
  %29 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_status = getelementptr inbounds %struct.address, %struct.address* %29, i32 0, i32 17
  %30 = load i8*, i8** %q_status, align 8, !tbaa !25
  %cmp31 = icmp eq i8* %30, null
  br i1 %cmp31, label %if.then.44, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %lor.lhs.false
  %31 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_status34 = getelementptr inbounds %struct.address, %struct.address* %31, i32 0, i32 17
  %32 = load i8*, i8** %q_status34, align 8, !tbaa !25
  %33 = load i8, i8* %32, align 1, !tbaa !15
  %conv35 = sext i8 %33 to i32
  %cmp36 = icmp eq i32 %conv35, 0
  br i1 %cmp36, label %if.then.44, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %lor.lhs.false.33
  %34 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_status39 = getelementptr inbounds %struct.address, %struct.address* %34, i32 0, i32 17
  %35 = load i8*, i8** %q_status39, align 8, !tbaa !25
  %36 = load i8, i8* %35, align 1, !tbaa !15
  %conv40 = sext i8 %36 to i32
  %37 = load i8*, i8** %status, align 8, !tbaa !1
  %38 = load i8, i8* %37, align 1, !tbaa !15
  %conv41 = sext i8 %38 to i32
  %cmp42 = icmp slt i32 %conv40, %conv41
  br i1 %cmp42, label %if.then.44, label %if.end.46

if.then.44:                                       ; preds = %lor.lhs.false.38, %lor.lhs.false.33, %lor.lhs.false, %land.lhs.true.30
  %39 = load i8*, i8** %status, align 8, !tbaa !1
  %40 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_status45 = getelementptr inbounds %struct.address, %struct.address* %40, i32 0, i32 17
  store i8* %39, i8** %q_status45, align 8, !tbaa !25
  %41 = load i8*, i8** %rstatus, align 8, !tbaa !1
  %42 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_rstatus = getelementptr inbounds %struct.address, %struct.address* %42, i32 0, i32 18
  store i8* %41, i8** %q_rstatus, align 8, !tbaa !26
  br label %if.end.46

if.end.46:                                        ; preds = %if.then.44, %lor.lhs.false.38, %land.lhs.true.27, %if.end.25
  %43 = load i32, i32* %rcode.addr, align 4, !tbaa !5
  %cmp47 = icmp ne i32 %43, 0
  br i1 %cmp47, label %land.lhs.true.49, label %if.end.72

land.lhs.true.49:                                 ; preds = %if.end.46
  %44 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_rstatus50 = getelementptr inbounds %struct.address, %struct.address* %44, i32 0, i32 18
  %45 = load i8*, i8** %q_rstatus50, align 8, !tbaa !26
  %cmp51 = icmp eq i8* %45, null
  br i1 %cmp51, label %land.lhs.true.53, label %if.end.72

land.lhs.true.53:                                 ; preds = %land.lhs.true.49
  %46 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_mailer = getelementptr inbounds %struct.address, %struct.address* %46, i32 0, i32 4
  %47 = load %struct.mailer*, %struct.mailer** %q_mailer, align 8, !tbaa !31
  %cmp54 = icmp ne %struct.mailer* %47, null
  br i1 %cmp54, label %land.lhs.true.56, label %if.end.72

land.lhs.true.56:                                 ; preds = %land.lhs.true.53
  %48 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_mailer57 = getelementptr inbounds %struct.address, %struct.address* %48, i32 0, i32 4
  %49 = load %struct.mailer*, %struct.mailer** %q_mailer57, align 8, !tbaa !31
  %m_diagtype = getelementptr inbounds %struct.mailer, %struct.mailer* %49, i32 0, i32 4
  %50 = load i8*, i8** %m_diagtype, align 8, !tbaa !69
  %cmp58 = icmp ne i8* %50, null
  br i1 %cmp58, label %land.lhs.true.60, label %if.end.72

land.lhs.true.60:                                 ; preds = %land.lhs.true.56
  %51 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_mailer61 = getelementptr inbounds %struct.address, %struct.address* %51, i32 0, i32 4
  %52 = load %struct.mailer*, %struct.mailer** %q_mailer61, align 8, !tbaa !31
  %m_diagtype62 = getelementptr inbounds %struct.mailer, %struct.mailer* %52, i32 0, i32 4
  %53 = load i8*, i8** %m_diagtype62, align 8, !tbaa !69
  %call63 = call i32 @sm_strcasecmp(i8* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0))
  %cmp64 = icmp eq i32 %call63, 0
  br i1 %cmp64, label %if.then.66, label %if.end.72

if.then.66:                                       ; preds = %land.lhs.true.60
  %54 = bitcast [16 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 16, i8* %54) #1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %55 = load i32, i32* %rcode.addr, align 4, !tbaa !5
  %call67 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay, i64 16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i32 %55)
  %56 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool68 = getelementptr inbounds %struct.envelope, %struct.envelope* %56, i32 0, i32 52
  %57 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool68, align 8, !tbaa !36
  %arraydecay69 = getelementptr inbounds [16 x i8], [16 x i8]* %buf, i32 0, i32 0
  %call70 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %57, i8* %arraydecay69)
  %58 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_rstatus71 = getelementptr inbounds %struct.address, %struct.address* %58, i32 0, i32 18
  store i8* %call70, i8** %q_rstatus71, align 8, !tbaa !26
  %59 = bitcast [16 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 16, i8* %59) #1
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.66, %land.lhs.true.60, %land.lhs.true.56, %land.lhs.true.53, %land.lhs.true.49, %if.end.46
  %call73 = call i64 @curtime()
  %60 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_statdate = getelementptr inbounds %struct.address, %struct.address* %60, i32 0, i32 19
  store i64 %call73, i64* %q_statdate, align 8, !tbaa !70
  %61 = load i8*, i8** @CurHostName, align 8, !tbaa !1
  %cmp74 = icmp ne i8* %61, null
  br i1 %cmp74, label %land.lhs.true.76, label %if.end.89

land.lhs.true.76:                                 ; preds = %if.end.72
  %62 = load i8*, i8** @CurHostName, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %62, i64 0
  %63 = load i8, i8* %arrayidx, align 1, !tbaa !15
  %conv77 = sext i8 %63 to i32
  %cmp78 = icmp ne i32 %conv77, 0
  br i1 %cmp78, label %land.lhs.true.80, label %if.end.89

land.lhs.true.80:                                 ; preds = %land.lhs.true.76
  %64 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %cmp81 = icmp ne %struct.mailer_con_info* %64, null
  br i1 %cmp81, label %land.lhs.true.83, label %if.end.89

land.lhs.true.83:                                 ; preds = %land.lhs.true.80
  %65 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %65, i32 0, i32 0
  %66 = load i64, i64* %mci_flags, align 8, !tbaa !71
  %and = and i64 %66, 108
  %cmp84 = icmp ne i64 %and, 0
  br i1 %cmp84, label %if.end.89, label %if.then.86

if.then.86:                                       ; preds = %land.lhs.true.83
  %67 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool87 = getelementptr inbounds %struct.envelope, %struct.envelope* %67, i32 0, i32 52
  %68 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool87, align 8, !tbaa !36
  %69 = load i8*, i8** @CurHostName, align 8, !tbaa !1
  %call88 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %68, i8* %69)
  %70 = load %struct.address*, %struct.address** %q.addr, align 8, !tbaa !1
  %q_statmta = getelementptr inbounds %struct.address, %struct.address* %70, i32 0, i32 20
  store i8* %call88, i8** %q_statmta, align 8, !tbaa !72
  br label %if.end.89

if.end.89:                                        ; preds = %if.then.86, %land.lhs.true.83, %land.lhs.true.80, %land.lhs.true.76, %if.end.72
  %71 = load i32, i32* %save_errno, align 4, !tbaa !5
  %call90 = call i32* @__errno_location() #11
  store i32 %71, i32* %call90, align 4, !tbaa !5
  %72 = bitcast i8** %rstatus to i8*
  call void @llvm.lifetime.end(i64 8, i8* %72) #1
  %73 = bitcast i8** %status to i8*
  call void @llvm.lifetime.end(i64 8, i8* %73) #1
  %74 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %74) #1
  ret void
}

declare i32 @sm_strcasecmp(i8*, i8*) #2

declare i32 @sm_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define i32 @endmailer(%struct.mailer_con_info* %mci, %struct.envelope* %e, i8** %pv) #0 {
entry:
  %retval = alloca i32, align 4
  %mci.addr = alloca %struct.mailer_con_info*, align 8
  %e.addr = alloca %struct.envelope*, align 8
  %pv.addr = alloca i8**, align 8
  %st = alloca i32, align 4
  %save_errno = alloca i32, align 4
  %buf = alloca [2048 x i8], align 16
  %ev = alloca %struct.sm_event*, align 8
  %cleanup.dest.slot = alloca i32
  %.compoundliteral = alloca %union.anon, align 4
  %.compoundliteral66 = alloca %union.anon.0, align 4
  %.compoundliteral73 = alloca %union.anon.1, align 4
  %.compoundliteral77 = alloca %union.anon.2, align 4
  %.compoundliteral81 = alloca %union.anon.3, align 4
  %av = alloca i8**, align 8
  store %struct.mailer_con_info* %mci, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store i8** %pv, i8*** %pv.addr, align 8, !tbaa !1
  %0 = bitcast i32* %st to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  %1 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %call = call i32* @__errno_location() #11
  %2 = load i32, i32* %call, align 4, !tbaa !5
  store i32 %2, i32* %save_errno, align 4, !tbaa !5
  %3 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %3) #1
  %4 = bitcast %struct.sm_event** %ev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  store %struct.sm_event* null, %struct.sm_event** %ev, align 8, !tbaa !1
  %5 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  call void @mci_unlock_host(%struct.mailer_con_info* %5)
  %6 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %6, i32 0, i32 8
  %7 = load %struct.sm_file*, %struct.sm_file** %mci_out, align 8, !tbaa !73
  %cmp = icmp ne %struct.sm_file* %7, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %8 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out1 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %8, i32 0, i32 8
  %9 = load %struct.sm_file*, %struct.sm_file** %mci_out1, align 8, !tbaa !73
  %call2 = call i32 @sm_io_close(%struct.sm_file* %9, i32 -2)
  %10 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out3 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %10, i32 0, i32 8
  store %struct.sm_file* null, %struct.sm_file** %mci_out3, align 8, !tbaa !73
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_in = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %11, i32 0, i32 7
  %12 = load %struct.sm_file*, %struct.sm_file** %mci_in, align 8, !tbaa !74
  %cmp4 = icmp ne %struct.sm_file* %12, null
  br i1 %cmp4, label %land.lhs.true, label %if.end.18

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_state = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %13, i32 0, i32 4
  %14 = load i16, i16* %mci_state, align 2, !tbaa !75
  %conv = sext i16 %14 to i32
  %cmp5 = icmp ne i32 %conv, 8
  br i1 %cmp5, label %land.lhs.true.7, label %if.end.18

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %15 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp = getelementptr inbounds %struct.envelope, %struct.envelope* %15, i32 0, i32 32
  %16 = load %struct.sm_file*, %struct.sm_file** %e_xfp, align 8, !tbaa !46
  %cmp8 = icmp ne %struct.sm_file* %16, null
  br i1 %cmp8, label %if.then.10, label %if.end.18

if.then.10:                                       ; preds = %land.lhs.true.7
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.10
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %17 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_in11 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %17, i32 0, i32 7
  %18 = load %struct.sm_file*, %struct.sm_file** %mci_in11, align 8, !tbaa !74
  %19 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @TimeOuts, i32 0, i32 12), align 8, !tbaa !76
  %call12 = call i8* @sfgets(i8* %arraydecay, i32 2048, %struct.sm_file* %18, i64 %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i32 0, i32 0))
  %cmp13 = icmp ne i8* %call12, null
  br i1 %cmp13, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %20 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp15 = getelementptr inbounds %struct.envelope, %struct.envelope* %20, i32 0, i32 32
  %21 = load %struct.sm_file*, %struct.sm_file** %e_xfp15, align 8, !tbaa !46
  %arraydecay16 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %call17 = call i32 @sm_io_fputs(%struct.sm_file* %21, i32 -2, i8* %arraydecay16)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.18

if.end.18:                                        ; preds = %while.end, %land.lhs.true.7, %land.lhs.true, %if.end
  %22 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_in19 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %22, i32 0, i32 7
  %23 = load %struct.sm_file*, %struct.sm_file** %mci_in19, align 8, !tbaa !74
  %cmp20 = icmp ne %struct.sm_file* %23, null
  br i1 %cmp20, label %if.then.22, label %if.end.26

if.then.22:                                       ; preds = %if.end.18
  %24 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_in23 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %24, i32 0, i32 7
  %25 = load %struct.sm_file*, %struct.sm_file** %mci_in23, align 8, !tbaa !74
  %call24 = call i32 @sm_io_close(%struct.sm_file* %25, i32 -2)
  %26 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_in25 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %26, i32 0, i32 7
  store %struct.sm_file* null, %struct.sm_file** %mci_in25, align 8, !tbaa !74
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.22, %if.end.18
  %27 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_state27 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %27, i32 0, i32 4
  store i16 0, i16* %mci_state27, align 2, !tbaa !75
  %28 = load i32, i32* %save_errno, align 4, !tbaa !5
  %call28 = call i32* @__errno_location() #11
  store i32 %28, i32* %call28, align 4, !tbaa !5
  %29 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_pid = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %29, i32 0, i32 9
  %30 = load i32, i32* %mci_pid, align 4, !tbaa !78
  %cmp29 = icmp eq i32 %30, 0
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.26
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.32:                                        ; preds = %if.end.26
  %31 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %31, i32 0, i32 11
  %32 = load %struct.mailer*, %struct.mailer** %mci_mailer, align 8, !tbaa !79
  %m_wait = getelementptr inbounds %struct.mailer, %struct.mailer* %32, i32 0, i32 22
  %33 = load i64, i64* %m_wait, align 8, !tbaa !80
  %cmp33 = icmp sgt i64 %33, 0
  br i1 %cmp33, label %if.then.35, label %if.end.48

if.then.35:                                       ; preds = %if.end.32
  %call36 = call i32 @__sigsetjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @EndWaitTimeout, i32 0, i32 0), i32 1) #14
  %cmp37 = icmp eq i32 %call36, 0
  br i1 %cmp37, label %if.then.39, label %if.else

if.then.39:                                       ; preds = %if.then.35
  %34 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer40 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %34, i32 0, i32 11
  %35 = load %struct.mailer*, %struct.mailer** %mci_mailer40, align 8, !tbaa !79
  %m_wait41 = getelementptr inbounds %struct.mailer, %struct.mailer* %35, i32 0, i32 22
  %36 = load i64, i64* %m_wait41, align 8, !tbaa !80
  %mul = mul nsw i64 %36, 1000
  %conv42 = trunc i64 %mul to i32
  %call43 = call %struct.sm_event* @sm_seteventm(i32 %conv42, void (i32)* @endwaittimeout, i32 0)
  store %struct.sm_event* %call43, %struct.sm_event** %ev, align 8, !tbaa !1
  br label %if.end.47

if.else:                                          ; preds = %if.then.35
  %37 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer44 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %37, i32 0, i32 11
  %38 = load %struct.mailer*, %struct.mailer** %mci_mailer44, align 8, !tbaa !79
  %m_name = getelementptr inbounds %struct.mailer, %struct.mailer* %38, i32 0, i32 0
  %39 = load i8*, i8** %m_name, align 8, !tbaa !63
  %40 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer45 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %40, i32 0, i32 11
  %41 = load %struct.mailer*, %struct.mailer** %mci_mailer45, align 8, !tbaa !79
  %m_wait46 = getelementptr inbounds %struct.mailer, %struct.mailer* %41, i32 0, i32 22
  %42 = load i64, i64* %m_wait46, align 8, !tbaa !80
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.60, i32 0, i32 0), i8* %39, i64 %42)
  store i32 75, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.47:                                        ; preds = %if.then.39
  br label %if.end.48

if.end.48:                                        ; preds = %if.end.47, %if.end.32
  %43 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_pid49 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %43, i32 0, i32 9
  %44 = load i32, i32* %mci_pid49, align 4, !tbaa !78
  %call50 = call i32 @waitfor(i32 %44)
  store i32 %call50, i32* %st, align 4, !tbaa !5
  %call51 = call i32* @__errno_location() #11
  %45 = load i32, i32* %call51, align 4, !tbaa !5
  store i32 %45, i32* %save_errno, align 4, !tbaa !5
  %46 = load %struct.sm_event*, %struct.sm_event** %ev, align 8, !tbaa !1
  %cmp52 = icmp ne %struct.sm_event* %46, null
  br i1 %cmp52, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.48
  %47 = load %struct.sm_event*, %struct.sm_event** %ev, align 8, !tbaa !1
  call void @sm_clrevent(%struct.sm_event* %47)
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.54, %if.end.48
  %48 = load i32, i32* %save_errno, align 4, !tbaa !5
  %call56 = call i32* @__errno_location() #11
  store i32 %48, i32* %call56, align 4, !tbaa !5
  %49 = load i32, i32* %st, align 4, !tbaa !5
  %cmp57 = icmp eq i32 %49, -1
  br i1 %cmp57, label %if.then.59, label %if.end.62

if.then.59:                                       ; preds = %if.end.55
  %50 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer60 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %50, i32 0, i32 11
  %51 = load %struct.mailer*, %struct.mailer** %mci_mailer60, align 8, !tbaa !79
  %m_name61 = getelementptr inbounds %struct.mailer, %struct.mailer* %51, i32 0, i32 0
  %52 = load i8*, i8** %m_name61, align 8, !tbaa !63
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i32 0, i32 0), i8* %52)
  store i32 70, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.62:                                        ; preds = %if.end.55
  %__in = bitcast %union.anon* %.compoundliteral to i32*
  %53 = load i32, i32* %st, align 4, !tbaa !5
  store i32 %53, i32* %__in, align 4, !tbaa !5
  %__i = bitcast %union.anon* %.compoundliteral to i32*
  %54 = load i32, i32* %__i, align 4, !tbaa !5
  %and = and i32 %54, 127
  %cmp63 = icmp eq i32 %and, 0
  br i1 %cmp63, label %if.then.65, label %if.end.70

if.then.65:                                       ; preds = %if.end.62
  %__in67 = bitcast %union.anon.0* %.compoundliteral66 to i32*
  %55 = load i32, i32* %st, align 4, !tbaa !5
  store i32 %55, i32* %__in67, align 4, !tbaa !5
  %__i68 = bitcast %union.anon.0* %.compoundliteral66 to i32*
  %56 = load i32, i32* %__i68, align 4, !tbaa !5
  %and69 = and i32 %56, 65280
  %shr = ashr i32 %and69, 8
  store i32 %shr, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.70:                                        ; preds = %if.end.62
  %57 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer71 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %57, i32 0, i32 11
  %58 = load %struct.mailer*, %struct.mailer** %mci_mailer71, align 8, !tbaa !79
  %m_name72 = getelementptr inbounds %struct.mailer, %struct.mailer* %58, i32 0, i32 0
  %59 = load i8*, i8** %m_name72, align 8, !tbaa !63
  %__in74 = bitcast %union.anon.1* %.compoundliteral73 to i32*
  %60 = load i32, i32* %st, align 4, !tbaa !5
  store i32 %60, i32* %__in74, align 4, !tbaa !5
  %__i75 = bitcast %union.anon.1* %.compoundliteral73 to i32*
  %61 = load i32, i32* %__i75, align 4, !tbaa !5
  %and76 = and i32 %61, 127
  %__in78 = bitcast %union.anon.2* %.compoundliteral77 to i32*
  %62 = load i32, i32* %st, align 4, !tbaa !5
  store i32 %62, i32* %__in78, align 4, !tbaa !5
  %__i79 = bitcast %union.anon.2* %.compoundliteral77 to i32*
  %63 = load i32, i32* %__i79, align 4, !tbaa !5
  %and80 = and i32 %63, 128
  %tobool = icmp ne i32 %and80, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.70
  br label %cond.end

cond.false:                                       ; preds = %if.end.70
  %__in82 = bitcast %union.anon.3* %.compoundliteral81 to i32*
  %64 = load i32, i32* %st, align 4, !tbaa !5
  store i32 %64, i32* %__in82, align 4, !tbaa !5
  %__i83 = bitcast %union.anon.3* %.compoundliteral81 to i32*
  %65 = load i32, i32* %__i83, align 4, !tbaa !5
  %and84 = and i32 %65, 255
  %cmp85 = icmp eq i32 %and84, 127
  %cond = select i1 %cmp85, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond87 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), %cond.true ], [ %cond, %cond.false ]
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.62, i32 0, i32 0), i8* %59, i32 %and76, i8* %cond87)
  %66 = load i8**, i8*** %pv.addr, align 8, !tbaa !1
  %cmp88 = icmp ne i8** %66, null
  br i1 %cmp88, label %land.lhs.true.90, label %if.end.103

land.lhs.true.90:                                 ; preds = %cond.end
  %67 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp91 = getelementptr inbounds %struct.envelope, %struct.envelope* %67, i32 0, i32 32
  %68 = load %struct.sm_file*, %struct.sm_file** %e_xfp91, align 8, !tbaa !46
  %cmp92 = icmp ne %struct.sm_file* %68, null
  br i1 %cmp92, label %if.then.94, label %if.end.103

if.then.94:                                       ; preds = %land.lhs.true.90
  %69 = bitcast i8*** %av to i8*
  call void @llvm.lifetime.start(i64 8, i8* %69) #1
  %70 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp95 = getelementptr inbounds %struct.envelope, %struct.envelope* %70, i32 0, i32 32
  %71 = load %struct.sm_file*, %struct.sm_file** %e_xfp95, align 8, !tbaa !46
  %call96 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %71, i32 -2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i32 0, i32 0))
  %72 = load i8**, i8*** %pv.addr, align 8, !tbaa !1
  store i8** %72, i8*** %av, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.94
  %73 = load i8**, i8*** %av, align 8, !tbaa !1
  %74 = load i8*, i8** %73, align 8, !tbaa !1
  %cmp97 = icmp ne i8* %74, null
  br i1 %cmp97, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %75 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp99 = getelementptr inbounds %struct.envelope, %struct.envelope* %75, i32 0, i32 32
  %76 = load %struct.sm_file*, %struct.sm_file** %e_xfp99, align 8, !tbaa !46
  %77 = load i8**, i8*** %av, align 8, !tbaa !1
  %78 = load i8*, i8** %77, align 8, !tbaa !1
  %call100 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %76, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8* %78)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %79 = load i8**, i8*** %av, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8*, i8** %79, i32 1
  store i8** %incdec.ptr, i8*** %av, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %80 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp101 = getelementptr inbounds %struct.envelope, %struct.envelope* %80, i32 0, i32 32
  %81 = load %struct.sm_file*, %struct.sm_file** %e_xfp101, align 8, !tbaa !46
  %call102 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %81, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0))
  %82 = bitcast i8*** %av to i8*
  call void @llvm.lifetime.end(i64 8, i8* %82) #1
  br label %if.end.103

if.end.103:                                       ; preds = %for.end, %land.lhs.true.90, %cond.end
  store i32 75, i32* @ExitStat, align 4, !tbaa !5
  store i32 75, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.103, %if.then.65, %if.then.59, %if.else, %if.then.31
  %83 = bitcast %struct.sm_event** %ev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #1
  %84 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %84) #1
  %85 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %85) #1
  %86 = bitcast i32* %st to i8*
  call void @llvm.lifetime.end(i64 4, i8* %86) #1
  %87 = load i32, i32* %retval
  ret i32 %87
}

declare void @mci_unlock_host(%struct.mailer_con_info*) #2

declare i32 @sm_io_close(%struct.sm_file*, i32) #2

declare i8* @sfgets(i8*, i32, %struct.sm_file*, i64, i8*) #2

declare i32 @sm_io_fputs(%struct.sm_file*, i32, i8*) #2

; Function Attrs: nounwind returns_twice
declare i32 @__sigsetjmp(%struct.__jmp_buf_tag*, i32) #7

declare %struct.sm_event* @sm_seteventm(i32, void (i32)*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @endwaittimeout(i32 %ignore) #0 {
entry:
  %ignore.addr = alloca i32, align 4
  store i32 %ignore, i32* %ignore.addr, align 4, !tbaa !5
  %call = call i32* @__errno_location() #11
  store i32 110, i32* %call, align 4, !tbaa !5
  call void @siglongjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @EndWaitTimeout, i32 0, i32 0), i32 1) #13
  unreachable

return:                                           ; No predecessors!
  ret void
}

declare void @sm_clrevent(%struct.sm_event*) #2

declare i32 @sm_io_fprintf(%struct.sm_file*, i32, i8*, ...) #2

; Function Attrs: nounwind uwtable
define void @giveresponse(i32 %status, i8* %dsn, %struct.mailer* %m, %struct.mailer_con_info* %mci, %struct.address* %ctladdr, i64 %xstart, %struct.envelope* %e, %struct.address* %to) #0 {
entry:
  %status.addr = alloca i32, align 4
  %dsn.addr = alloca i8*, align 8
  %m.addr = alloca %struct.mailer*, align 8
  %mci.addr = alloca %struct.mailer_con_info*, align 8
  %ctladdr.addr = alloca %struct.address*, align 8
  %xstart.addr = alloca i64, align 8
  %e.addr = alloca %struct.envelope*, align 8
  %to.addr = alloca %struct.address*, align 8
  %statmsg = alloca i8*, align 8
  %errnum = alloca i32, align 4
  %off = alloca i32, align 4
  %usestat = alloca i32, align 4
  %dsnbuf = alloca [10 x i8], align 1
  %buf = alloca [2048 x i8], align 16
  %exmsg = alloca i8*, align 8
  %bp = alloca i8*, align 8
  %mbuf = alloca [14 x i8], align 1
  store i32 %status, i32* %status.addr, align 4, !tbaa !5
  store i8* %dsn, i8** %dsn.addr, align 8, !tbaa !1
  store %struct.mailer* %m, %struct.mailer** %m.addr, align 8, !tbaa !1
  store %struct.mailer_con_info* %mci, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  store %struct.address* %ctladdr, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  store i64 %xstart, i64* %xstart.addr, align 8, !tbaa !32
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.address* %to, %struct.address** %to.addr, align 8, !tbaa !1
  %0 = bitcast i8** %statmsg to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %errnum to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  %call = call i32* @__errno_location() #11
  %2 = load i32, i32* %call, align 4, !tbaa !5
  store i32 %2, i32* %errnum, align 4, !tbaa !5
  %3 = bitcast i32* %off to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  store i32 4, i32* %off, align 4, !tbaa !5
  %4 = bitcast i32* %usestat to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  store i32 0, i32* %usestat, align 4, !tbaa !5
  %5 = bitcast [10 x i8]* %dsnbuf to i8*
  call void @llvm.lifetime.start(i64 10, i8* %5) #1
  %6 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %6) #1
  %7 = bitcast i8** %exmsg to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %cmp = icmp eq %struct.envelope* %8, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i32 0, i32 0))
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 4002, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.69, i32 0, i32 0)) #15
  unreachable

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %status.addr, align 4, !tbaa !5
  %call1 = call i8* @sm_sysexmsg(i32 %9)
  store i8* %call1, i8** %exmsg, align 8, !tbaa !1
  %10 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp2 = icmp eq i32 %10, 0
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %if.end
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i8** %statmsg, align 8, !tbaa !1
  %11 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_statmsg = getelementptr inbounds %struct.envelope, %struct.envelope* %11, i32 0, i32 35
  %12 = load i8*, i8** %e_statmsg, align 8, !tbaa !51
  %cmp4 = icmp ne i8* %12, null
  br i1 %cmp4, label %if.then.5, label %if.end.10

if.then.5:                                        ; preds = %if.then.3
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %13 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %14 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_statmsg6 = getelementptr inbounds %struct.envelope, %struct.envelope* %14, i32 0, i32 35
  %15 = load i8*, i8** %e_statmsg6, align 8, !tbaa !51
  %call7 = call i8* @shortenstring(i8* %15, i64 403)
  %call8 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay, i64 2048, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0), i8* %13, i8* %call7)
  %arraydecay9 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay9, i8** %statmsg, align 8, !tbaa !1
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.5, %if.then.3
  br label %if.end.108

if.else:                                          ; preds = %if.end
  %16 = load i8*, i8** %exmsg, align 8, !tbaa !1
  %cmp11 = icmp eq i8* %16, null
  br i1 %cmp11, label %if.then.12, label %if.else.16

if.then.12:                                       ; preds = %if.else
  %arraydecay13 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %17 = load i32, i32* %status.addr, align 4, !tbaa !5
  %call14 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay13, i64 2048, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.72, i32 0, i32 0), i32 %17)
  store i32 69, i32* %status.addr, align 4, !tbaa !5
  %arraydecay15 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay15, i8** %statmsg, align 8, !tbaa !1
  store i32 1, i32* %usestat, align 4, !tbaa !5
  br label %if.end.107

if.else.16:                                       ; preds = %if.else
  %18 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp17 = icmp eq i32 %18, 75
  br i1 %cmp17, label %if.then.18, label %if.else.64

if.then.18:                                       ; preds = %if.else.16
  %19 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %19) #1
  %arraydecay19 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay19, i8** %bp, align 8, !tbaa !1
  %20 = load i8*, i8** %bp, align 8, !tbaa !1
  %21 = load i8*, i8** %exmsg, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 1
  %22 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay20 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast = ptrtoint i8* %22 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay20 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 2048, %sub.ptr.sub
  %call21 = call i64 @sm_strlcpy(i8* %20, i8* %add.ptr, i64 %sub)
  %23 = load i8*, i8** %bp, align 8, !tbaa !1
  %call22 = call i64 @strlen(i8* %23) #12
  %24 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr23 = getelementptr inbounds i8, i8* %24, i64 %call22
  store i8* %add.ptr23, i8** %bp, align 8, !tbaa !1
  %call24 = call i32* @__h_errno_location() #11
  %25 = load i32, i32* %call24, align 4, !tbaa !5
  %cmp25 = icmp eq i32 %25, 2
  br i1 %cmp25, label %if.then.26, label %if.else.29

if.then.26:                                       ; preds = %if.then.18
  %call27 = call i32* @__h_errno_location() #11
  %26 = load i32, i32* %call27, align 4, !tbaa !5
  %add = add nsw i32 %26, 276
  %call28 = call i8* @sm_errstring(i32 %add)
  store i8* %call28, i8** %statmsg, align 8, !tbaa !1
  br label %if.end.35

if.else.29:                                       ; preds = %if.then.18
  %27 = load i32, i32* %errnum, align 4, !tbaa !5
  %cmp30 = icmp ne i32 %27, 0
  br i1 %cmp30, label %if.then.31, label %if.else.33

if.then.31:                                       ; preds = %if.else.29
  %28 = load i32, i32* %errnum, align 4, !tbaa !5
  %call32 = call i8* @sm_errstring(i32 %28)
  store i8* %call32, i8** %statmsg, align 8, !tbaa !1
  br label %if.end.34

if.else.33:                                       ; preds = %if.else.29
  store i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @SmtpError, i32 0, i32 0), i8** %statmsg, align 8, !tbaa !1
  br label %if.end.34

if.end.34:                                        ; preds = %if.else.33, %if.then.31
  br label %if.end.35

if.end.35:                                        ; preds = %if.end.34, %if.then.26
  %29 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %cmp36 = icmp ne i8* %29, null
  br i1 %cmp36, label %land.lhs.true, label %if.end.62

land.lhs.true:                                    ; preds = %if.end.35
  %30 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %30, i64 0
  %31 = load i8, i8* %arrayidx, align 1, !tbaa !15
  %conv = sext i8 %31 to i32
  %cmp37 = icmp ne i32 %conv, 0
  br i1 %cmp37, label %if.then.39, label %if.end.62

if.then.39:                                       ; preds = %land.lhs.true
  %32 = load i32, i32* %errnum, align 4, !tbaa !5
  switch i32 %32, label %sw.epilog [
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then.39, %if.then.39, %if.then.39, %if.then.39, %if.then.39, %if.then.39
  %33 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %cmp40 = icmp ne %struct.mailer_con_info* %33, null
  br i1 %cmp40, label %land.lhs.true.42, label %if.end.55

land.lhs.true.42:                                 ; preds = %sw.bb
  %34 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_host = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %34, i32 0, i32 12
  %35 = load i8*, i8** %mci_host, align 8, !tbaa !81
  %cmp43 = icmp ne i8* %35, null
  br i1 %cmp43, label %if.then.45, label %if.end.55

if.then.45:                                       ; preds = %land.lhs.true.42
  %36 = load i8*, i8** %bp, align 8, !tbaa !1
  %37 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay46 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast47 = ptrtoint i8* %37 to i64
  %sub.ptr.rhs.cast48 = ptrtoint i8* %arraydecay46 to i64
  %sub.ptr.sub49 = sub i64 %sub.ptr.lhs.cast47, %sub.ptr.rhs.cast48
  %sub50 = sub i64 2048, %sub.ptr.sub49
  %38 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_host51 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %38, i32 0, i32 12
  %39 = load i8*, i8** %mci_host51, align 8, !tbaa !81
  %call52 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %36, i64 %sub50, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* %39)
  %40 = load i8*, i8** %bp, align 8, !tbaa !1
  %call53 = call i64 @strlen(i8* %40) #12
  %41 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr54 = getelementptr inbounds i8, i8* %41, i64 %call53
  store i8* %add.ptr54, i8** %bp, align 8, !tbaa !1
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.45, %land.lhs.true.42, %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then.39, %if.end.55
  %42 = load i8*, i8** %bp, align 8, !tbaa !1
  %43 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay56 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast57 = ptrtoint i8* %43 to i64
  %sub.ptr.rhs.cast58 = ptrtoint i8* %arraydecay56 to i64
  %sub.ptr.sub59 = sub i64 %sub.ptr.lhs.cast57, %sub.ptr.rhs.cast58
  %sub60 = sub i64 2048, %sub.ptr.sub59
  %44 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %call61 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %42, i64 %sub60, i32 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* %44)
  store i32 1, i32* %usestat, align 4, !tbaa !5
  br label %if.end.62

if.end.62:                                        ; preds = %sw.epilog, %land.lhs.true, %if.end.35
  %arraydecay63 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay63, i8** %statmsg, align 8, !tbaa !1
  %45 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #1
  br label %if.end.106

if.else.64:                                       ; preds = %if.else.16
  %46 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp65 = icmp eq i32 %46, 68
  br i1 %cmp65, label %land.lhs.true.67, label %if.else.79

land.lhs.true.67:                                 ; preds = %if.else.64
  %call68 = call i32* @__h_errno_location() #11
  %47 = load i32, i32* %call68, align 4, !tbaa !5
  %cmp69 = icmp ne i32 %47, 0
  br i1 %cmp69, label %if.then.71, label %if.else.79

if.then.71:                                       ; preds = %land.lhs.true.67
  %call72 = call i32* @__h_errno_location() #11
  %48 = load i32, i32* %call72, align 4, !tbaa !5
  %add73 = add nsw i32 %48, 276
  %call74 = call i8* @sm_errstring(i32 %add73)
  store i8* %call74, i8** %statmsg, align 8, !tbaa !1
  %arraydecay75 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %49 = load i8*, i8** %exmsg, align 8, !tbaa !1
  %add.ptr76 = getelementptr inbounds i8, i8* %49, i64 1
  %50 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %call77 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay75, i64 2048, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0), i8* %add.ptr76, i8* %50)
  %arraydecay78 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay78, i8** %statmsg, align 8, !tbaa !1
  store i32 1, i32* %usestat, align 4, !tbaa !5
  br label %if.end.105

if.else.79:                                       ; preds = %land.lhs.true.67, %if.else.64
  %51 = load i8*, i8** %exmsg, align 8, !tbaa !1
  store i8* %51, i8** %statmsg, align 8, !tbaa !1
  %52 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr, i8** %statmsg, align 8, !tbaa !1
  %53 = load i8, i8* %52, align 1, !tbaa !15
  %conv80 = sext i8 %53 to i32
  %cmp81 = icmp eq i32 %conv80, 58
  br i1 %cmp81, label %land.lhs.true.83, label %if.else.91

land.lhs.true.83:                                 ; preds = %if.else.79
  %54 = load i32, i32* %errnum, align 4, !tbaa !5
  %cmp84 = icmp ne i32 %54, 0
  br i1 %cmp84, label %if.then.86, label %if.else.91

if.then.86:                                       ; preds = %land.lhs.true.83
  %arraydecay87 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %55 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %56 = load i32, i32* %errnum, align 4, !tbaa !5
  %call88 = call i8* @sm_errstring(i32 %56)
  %call89 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay87, i64 2048, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i32 0, i32 0), i8* %55, i8* %call88)
  %arraydecay90 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay90, i8** %statmsg, align 8, !tbaa !1
  store i32 1, i32* %usestat, align 4, !tbaa !5
  br label %if.end.104

if.else.91:                                       ; preds = %land.lhs.true.83, %if.else.79
  %57 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_flags = getelementptr inbounds %struct.mailer, %struct.mailer* %57, i32 0, i32 5
  %arrayidx92 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags, i32 0, i64 3
  %58 = load i32, i32* %arrayidx92, align 4, !tbaa !5
  %and = and i32 %58, 67108864
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true.93, label %if.end.103

land.lhs.true.93:                                 ; preds = %if.else.91
  %59 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_statmsg94 = getelementptr inbounds %struct.envelope, %struct.envelope* %59, i32 0, i32 35
  %60 = load i8*, i8** %e_statmsg94, align 8, !tbaa !51
  %cmp95 = icmp ne i8* %60, null
  br i1 %cmp95, label %if.then.97, label %if.end.103

if.then.97:                                       ; preds = %land.lhs.true.93
  %arraydecay98 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %61 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %62 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_statmsg99 = getelementptr inbounds %struct.envelope, %struct.envelope* %62, i32 0, i32 35
  %63 = load i8*, i8** %e_statmsg99, align 8, !tbaa !51
  %call100 = call i8* @shortenstring(i8* %63, i64 403)
  %call101 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay98, i64 2048, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i32 0, i32 0), i8* %61, i8* %call100)
  %arraydecay102 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay102, i8** %statmsg, align 8, !tbaa !1
  store i32 1, i32* %usestat, align 4, !tbaa !5
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.97, %land.lhs.true.93, %if.else.91
  br label %if.end.104

if.end.104:                                       ; preds = %if.end.103, %if.then.86
  br label %if.end.105

if.end.105:                                       ; preds = %if.end.104, %if.then.71
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.end.62
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %if.then.12
  br label %if.end.108

if.end.108:                                       ; preds = %if.end.107, %if.end.10
  %64 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp109 = icmp eq i32 %64, 0
  br i1 %cmp109, label %if.then.113, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.108
  %65 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp111 = icmp eq i32 %65, 75
  br i1 %cmp111, label %if.then.113, label %if.else.140

if.then.113:                                      ; preds = %lor.lhs.false, %if.end.108
  %66 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %add.ptr114 = getelementptr inbounds i8, i8* %66, i64 4
  %call115 = call i32 @isenhsc(i8* %add.ptr114, i32 32)
  store i32 %call115, i32* %off, align 4, !tbaa !5
  %cmp116 = icmp sgt i32 %call115, 0
  br i1 %cmp116, label %if.then.118, label %if.else.128

if.then.118:                                      ; preds = %if.then.113
  %67 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  %cmp119 = icmp eq i8* %67, null
  br i1 %cmp119, label %if.then.121, label %if.end.126

if.then.121:                                      ; preds = %if.then.118
  %arraydecay122 = getelementptr inbounds [10 x i8], [10 x i8]* %dsnbuf, i32 0, i32 0
  %68 = load i32, i32* %off, align 4, !tbaa !5
  %69 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %add.ptr123 = getelementptr inbounds i8, i8* %69, i64 4
  %call124 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay122, i64 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 %68, i8* %add.ptr123)
  %arraydecay125 = getelementptr inbounds [10 x i8], [10 x i8]* %dsnbuf, i32 0, i32 0
  store i8* %arraydecay125, i8** %dsn.addr, align 8, !tbaa !1
  br label %if.end.126

if.end.126:                                       ; preds = %if.then.121, %if.then.118
  %70 = load i32, i32* %off, align 4, !tbaa !5
  %add127 = add nsw i32 %70, 5
  store i32 %add127, i32* %off, align 4, !tbaa !5
  br label %if.end.129

if.else.128:                                      ; preds = %if.then.113
  store i32 4, i32* %off, align 4, !tbaa !5
  br label %if.end.129

if.end.129:                                       ; preds = %if.else.128, %if.end.126
  %71 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %72 = load i32, i32* %off, align 4, !tbaa !5
  %idx.ext = sext i32 %72 to i64
  %add.ptr130 = getelementptr inbounds i8, i8* %71, i64 %idx.ext
  call void (i8*, ...) @message(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i32 0, i32 0), i8* %add.ptr130)
  %73 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp131 = icmp eq i32 %73, 75
  br i1 %cmp131, label %land.lhs.true.133, label %if.end.139

land.lhs.true.133:                                ; preds = %if.end.129
  %74 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp = getelementptr inbounds %struct.envelope, %struct.envelope* %74, i32 0, i32 32
  %75 = load %struct.sm_file*, %struct.sm_file** %e_xfp, align 8, !tbaa !46
  %cmp134 = icmp ne %struct.sm_file* %75, null
  br i1 %cmp134, label %if.then.136, label %if.end.139

if.then.136:                                      ; preds = %land.lhs.true.133
  %76 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp137 = getelementptr inbounds %struct.envelope, %struct.envelope* %76, i32 0, i32 32
  %77 = load %struct.sm_file*, %struct.sm_file** %e_xfp137, align 8, !tbaa !46
  %call138 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %77, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @MsgBuf, i32 0, i64 4))
  br label %if.end.139

if.end.139:                                       ; preds = %if.then.136, %land.lhs.true.133, %if.end.129
  br label %if.end.171

if.else.140:                                      ; preds = %lor.lhs.false
  %78 = bitcast [14 x i8]* %mbuf to i8*
  call void @llvm.lifetime.start(i64 14, i8* %78) #1
  %79 = load i32, i32* @Errors, align 4, !tbaa !5
  %inc = add nsw i32 %79, 1
  store i32 %inc, i32* @Errors, align 4, !tbaa !5
  %80 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %add.ptr141 = getelementptr inbounds i8, i8* %80, i64 4
  %call142 = call i32 @isenhsc(i8* %add.ptr141, i32 32)
  store i32 %call142, i32* %off, align 4, !tbaa !5
  %cmp143 = icmp sgt i32 %call142, 0
  br i1 %cmp143, label %land.lhs.true.145, label %if.else.164

land.lhs.true.145:                                ; preds = %if.else.140
  %81 = load i32, i32* %off, align 4, !tbaa !5
  %conv146 = sext i32 %81 to i64
  %cmp147 = icmp ult i64 %conv146, 10
  br i1 %cmp147, label %if.then.149, label %if.else.164

if.then.149:                                      ; preds = %land.lhs.true.145
  %82 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  %cmp150 = icmp eq i8* %82, null
  br i1 %cmp150, label %if.then.152, label %if.end.157

if.then.152:                                      ; preds = %if.then.149
  %arraydecay153 = getelementptr inbounds [10 x i8], [10 x i8]* %dsnbuf, i32 0, i32 0
  %83 = load i32, i32* %off, align 4, !tbaa !5
  %84 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %add.ptr154 = getelementptr inbounds i8, i8* %84, i64 4
  %call155 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay153, i64 10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i32 %83, i8* %add.ptr154)
  %arraydecay156 = getelementptr inbounds [10 x i8], [10 x i8]* %dsnbuf, i32 0, i32 0
  store i8* %arraydecay156, i8** %dsn.addr, align 8, !tbaa !1
  br label %if.end.157

if.end.157:                                       ; preds = %if.then.152, %if.then.149
  %85 = load i32, i32* %off, align 4, !tbaa !5
  %add158 = add nsw i32 %85, 5
  store i32 %add158, i32* %off, align 4, !tbaa !5
  %arraydecay159 = getelementptr inbounds [14 x i8], [14 x i8]* %mbuf, i32 0, i32 0
  %86 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %87 = load i32, i32* %off, align 4, !tbaa !5
  %conv160 = sext i32 %87 to i64
  %call161 = call i64 @sm_strlcpy(i8* %arraydecay159, i8* %86, i64 %conv160)
  %arraydecay162 = getelementptr inbounds [14 x i8], [14 x i8]* %mbuf, i32 0, i32 0
  %call163 = call i64 @sm_strlcat(i8* %arraydecay162, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i64 14)
  br label %if.end.168

if.else.164:                                      ; preds = %land.lhs.true.145, %if.else.140
  %arrayidx165 = getelementptr inbounds [10 x i8], [10 x i8]* %dsnbuf, i32 0, i64 0
  store i8 0, i8* %arrayidx165, align 1, !tbaa !15
  %arraydecay166 = getelementptr inbounds [14 x i8], [14 x i8]* %mbuf, i32 0, i32 0
  %88 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %call167 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay166, i64 14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.78, i32 0, i32 0), i8* %88)
  store i32 4, i32* %off, align 4, !tbaa !5
  br label %if.end.168

if.end.168:                                       ; preds = %if.else.164, %if.end.157
  %arraydecay169 = getelementptr inbounds [14 x i8], [14 x i8]* %mbuf, i32 0, i32 0
  %89 = load i32, i32* %off, align 4, !tbaa !5
  %idxprom = sext i32 %89 to i64
  %90 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %arrayidx170 = getelementptr inbounds i8, i8* %90, i64 %idxprom
  call void (i8*, ...) @usrerr(i8* %arraydecay169, i8* %arrayidx170)
  %91 = bitcast [14 x i8]* %mbuf to i8*
  call void @llvm.lifetime.end(i64 14, i8* %91) #1
  br label %if.end.171

if.end.171:                                       ; preds = %if.end.168, %if.end.139
  %92 = load i8, i8* @OpMode, align 1, !tbaa !15
  %conv172 = sext i8 %92 to i32
  %cmp173 = icmp ne i32 %conv172, 118
  br i1 %cmp173, label %land.lhs.true.175, label %if.end.190

land.lhs.true.175:                                ; preds = %if.end.171
  %93 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags = getelementptr inbounds %struct.envelope, %struct.envelope* %93, i32 0, i32 11
  %94 = load i64, i64* %e_flags, align 8, !tbaa !7
  %and176 = and i64 %94, 512
  %cmp177 = icmp ne i64 %and176, 0
  br i1 %cmp177, label %if.end.190, label %land.lhs.true.179

land.lhs.true.179:                                ; preds = %land.lhs.true.175
  %95 = load i32, i32* @LogLevel, align 4, !tbaa !5
  %96 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp180 = icmp eq i32 %96, 75
  br i1 %cmp180, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.179
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.179
  %97 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp182 = icmp eq i32 %97, 0
  %cond = select i1 %cmp182, i32 7, i32 6
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond184 = phi i32 [ 8, %cond.true ], [ %cond, %cond.false ]
  %cmp185 = icmp sgt i32 %95, %cond184
  br i1 %cmp185, label %if.then.187, label %if.end.190

if.then.187:                                      ; preds = %cond.end
  %98 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %99 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %100 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  %101 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %102 = load i32, i32* %off, align 4, !tbaa !5
  %idx.ext188 = sext i32 %102 to i64
  %add.ptr189 = getelementptr inbounds i8, i8* %101, i64 %idx.ext188
  %103 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %104 = load i64, i64* %xstart.addr, align 8, !tbaa !32
  %105 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %106 = load %struct.address*, %struct.address** %to.addr, align 8, !tbaa !1
  %107 = load i32, i32* %status.addr, align 4, !tbaa !5
  call void @logdelivery(%struct.mailer* %98, %struct.mailer_con_info* %99, i8* %100, i8* %add.ptr189, %struct.address* %103, i64 %104, %struct.envelope* %105, %struct.address* %106, i32 %107)
  br label %if.end.190

if.end.190:                                       ; preds = %if.then.187, %cond.end, %land.lhs.true.175, %if.end.171
  %108 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv191 = zext i8 %108 to i32
  %cmp192 = icmp sge i32 %conv191, 2
  br i1 %cmp192, label %land.lhs.true.194, label %if.end.210

land.lhs.true.194:                                ; preds = %if.end.190
  %109 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool195 = icmp ne i32 %109, 0
  br i1 %tobool195, label %if.end.210, label %if.then.196

if.then.196:                                      ; preds = %land.lhs.true.194
  %110 = load i32, i32* %status.addr, align 4, !tbaa !5
  %111 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  %cmp197 = icmp eq i8* %111, null
  br i1 %cmp197, label %cond.true.199, label %cond.false.200

cond.true.199:                                    ; preds = %if.then.196
  br label %cond.end.201

cond.false.200:                                   ; preds = %if.then.196
  %112 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  br label %cond.end.201

cond.end.201:                                     ; preds = %cond.false.200, %cond.true.199
  %cond202 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %cond.true.199 ], [ %112, %cond.false.200 ]
  %113 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_message = getelementptr inbounds %struct.envelope, %struct.envelope* %113, i32 0, i32 34
  %114 = load i8*, i8** %e_message, align 8, !tbaa !41
  %cmp203 = icmp eq i8* %114, null
  br i1 %cmp203, label %cond.true.205, label %cond.false.206

cond.true.205:                                    ; preds = %cond.end.201
  br label %cond.end.208

cond.false.206:                                   ; preds = %cond.end.201
  %115 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_message207 = getelementptr inbounds %struct.envelope, %struct.envelope* %115, i32 0, i32 34
  %116 = load i8*, i8** %e_message207, align 8, !tbaa !41
  br label %cond.end.208

cond.end.208:                                     ; preds = %cond.false.206, %cond.true.205
  %cond209 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), %cond.true.205 ], [ %116, %cond.false.206 ]
  %117 = load i32, i32* %errnum, align 4, !tbaa !5
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.79, i32 0, i32 0), i32 %110, i8* %cond202, i8* %cond209, i32 %117)
  br label %if.end.210

if.end.210:                                       ; preds = %cond.end.208, %land.lhs.true.194, %if.end.190
  %118 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp211 = icmp ne i32 %118, 75
  br i1 %cmp211, label %if.then.213, label %if.end.221

if.then.213:                                      ; preds = %if.end.210
  br label %do.body

do.body:                                          ; preds = %if.then.213
  %119 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp214 = icmp eq i32 %119, 0
  br i1 %cmp214, label %if.then.219, label %lor.lhs.false.216

lor.lhs.false.216:                                ; preds = %do.body
  %120 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp217 = icmp eq i32 %120, 75
  br i1 %cmp217, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %lor.lhs.false.216, %do.body
  %121 = load i32, i32* %status.addr, align 4, !tbaa !5
  store i32 %121, i32* @ExitStat, align 4, !tbaa !5
  br label %if.end.220

if.end.220:                                       ; preds = %if.then.219, %lor.lhs.false.216
  br label %do.cond

do.cond:                                          ; preds = %if.end.220
  br label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.221

if.end.221:                                       ; preds = %do.end, %if.end.210
  %122 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp222 = icmp ne i32 %122, 0
  br i1 %cmp222, label %land.lhs.true.224, label %if.end.236

land.lhs.true.224:                                ; preds = %if.end.221
  %123 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp225 = icmp ne i32 %123, 75
  br i1 %cmp225, label %if.then.231, label %lor.lhs.false.227

lor.lhs.false.227:                                ; preds = %land.lhs.true.224
  %124 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_message228 = getelementptr inbounds %struct.envelope, %struct.envelope* %124, i32 0, i32 34
  %125 = load i8*, i8** %e_message228, align 8, !tbaa !41
  %cmp229 = icmp eq i8* %125, null
  br i1 %cmp229, label %if.then.231, label %if.end.236

if.then.231:                                      ; preds = %lor.lhs.false.227, %land.lhs.true.224
  %126 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool = getelementptr inbounds %struct.envelope, %struct.envelope* %126, i32 0, i32 52
  %127 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool, align 8, !tbaa !36
  %128 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %129 = load i32, i32* %off, align 4, !tbaa !5
  %idx.ext232 = sext i32 %129 to i64
  %add.ptr233 = getelementptr inbounds i8, i8* %128, i64 %idx.ext232
  %call234 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %127, i8* %add.ptr233)
  %130 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_message235 = getelementptr inbounds %struct.envelope, %struct.envelope* %130, i32 0, i32 34
  store i8* %call234, i8** %e_message235, align 8, !tbaa !41
  br label %if.end.236

if.end.236:                                       ; preds = %if.then.231, %lor.lhs.false.227, %if.end.221
  %131 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp237 = icmp ne i32 %131, 0
  br i1 %cmp237, label %land.lhs.true.239, label %if.end.263

land.lhs.true.239:                                ; preds = %if.end.236
  %132 = load %struct.address*, %struct.address** %to.addr, align 8, !tbaa !1
  %cmp240 = icmp ne %struct.address* %132, null
  br i1 %cmp240, label %land.lhs.true.242, label %if.end.263

land.lhs.true.242:                                ; preds = %land.lhs.true.239
  %133 = load %struct.address*, %struct.address** %to.addr, align 8, !tbaa !1
  %q_message = getelementptr inbounds %struct.address, %struct.address* %133, i32 0, i32 25
  %134 = load i8*, i8** %q_message, align 8, !tbaa !82
  %cmp243 = icmp eq i8* %134, null
  br i1 %cmp243, label %if.then.245, label %if.end.263

if.then.245:                                      ; preds = %land.lhs.true.242
  %135 = load i32, i32* %usestat, align 4, !tbaa !5
  %tobool246 = icmp ne i32 %135, 0
  br i1 %tobool246, label %if.else.256, label %land.lhs.true.247

land.lhs.true.247:                                ; preds = %if.then.245
  %136 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_message248 = getelementptr inbounds %struct.envelope, %struct.envelope* %136, i32 0, i32 34
  %137 = load i8*, i8** %e_message248, align 8, !tbaa !41
  %cmp249 = icmp ne i8* %137, null
  br i1 %cmp249, label %if.then.251, label %if.else.256

if.then.251:                                      ; preds = %land.lhs.true.247
  %138 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool252 = getelementptr inbounds %struct.envelope, %struct.envelope* %138, i32 0, i32 52
  %139 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool252, align 8, !tbaa !36
  %140 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_message253 = getelementptr inbounds %struct.envelope, %struct.envelope* %140, i32 0, i32 34
  %141 = load i8*, i8** %e_message253, align 8, !tbaa !41
  %call254 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %139, i8* %141)
  %142 = load %struct.address*, %struct.address** %to.addr, align 8, !tbaa !1
  %q_message255 = getelementptr inbounds %struct.address, %struct.address* %142, i32 0, i32 25
  store i8* %call254, i8** %q_message255, align 8, !tbaa !82
  br label %if.end.262

if.else.256:                                      ; preds = %land.lhs.true.247, %if.then.245
  %143 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool257 = getelementptr inbounds %struct.envelope, %struct.envelope* %143, i32 0, i32 52
  %144 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool257, align 8, !tbaa !36
  %145 = load i8*, i8** %statmsg, align 8, !tbaa !1
  %146 = load i32, i32* %off, align 4, !tbaa !5
  %idx.ext258 = sext i32 %146 to i64
  %add.ptr259 = getelementptr inbounds i8, i8* %145, i64 %idx.ext258
  %call260 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %144, i8* %add.ptr259)
  %147 = load %struct.address*, %struct.address** %to.addr, align 8, !tbaa !1
  %q_message261 = getelementptr inbounds %struct.address, %struct.address* %147, i32 0, i32 25
  store i8* %call260, i8** %q_message261, align 8, !tbaa !82
  br label %if.end.262

if.end.262:                                       ; preds = %if.else.256, %if.then.251
  br label %if.end.263

if.end.263:                                       ; preds = %if.end.262, %land.lhs.true.242, %land.lhs.true.239, %if.end.236
  %call264 = call i32* @__errno_location() #11
  store i32 0, i32* %call264, align 4, !tbaa !5
  %call265 = call i32* @__h_errno_location() #11
  store i32 0, i32* %call265, align 4, !tbaa !5
  %148 = bitcast i8** %exmsg to i8*
  call void @llvm.lifetime.end(i64 8, i8* %148) #1
  %149 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %149) #1
  %150 = bitcast [10 x i8]* %dsnbuf to i8*
  call void @llvm.lifetime.end(i64 10, i8* %150) #1
  %151 = bitcast i32* %usestat to i8*
  call void @llvm.lifetime.end(i64 4, i8* %151) #1
  %152 = bitcast i32* %off to i8*
  call void @llvm.lifetime.end(i64 4, i8* %152) #1
  %153 = bitcast i32* %errnum to i8*
  call void @llvm.lifetime.end(i64 4, i8* %153) #1
  %154 = bitcast i8** %statmsg to i8*
  call void @llvm.lifetime.end(i64 8, i8* %154) #1
  ret void
}

; Function Attrs: noreturn
declare void @sm_abort_at(i8*, i32, i8*) #8

declare i8* @sm_sysexmsg(i32) #2

declare i8* @shortenstring(i8*, i64) #2

; Function Attrs: nounwind readnone
declare i32* @__h_errno_location() #3

declare i64 @sm_strlcpyn(i8*, i64, i32, ...) #2

declare i32 @isenhsc(i8*, i32) #2

declare void @message(i8*, ...) #2

declare i64 @sm_strlcat(i8*, i8*, i64) #2

declare void @usrerr(i8*, ...) #2

; Function Attrs: nounwind uwtable
define void @logdelivery(%struct.mailer* %m, %struct.mailer_con_info* %mci, i8* %dsn, i8* %status, %struct.address* %ctladdr, i64 %xstart, %struct.envelope* %e, %struct.address* %to, i32 %rcode) #0 {
entry:
  %m.addr = alloca %struct.mailer*, align 8
  %mci.addr = alloca %struct.mailer_con_info*, align 8
  %dsn.addr = alloca i8*, align 8
  %status.addr = alloca i8*, align 8
  %ctladdr.addr = alloca %struct.address*, align 8
  %xstart.addr = alloca i64, align 8
  %e.addr = alloca %struct.envelope*, align 8
  %to.addr = alloca %struct.address*, align 8
  %rcode.addr = alloca i32, align 4
  %bp = alloca i8*, align 8
  %p = alloca i8*, align 8
  %l = alloca i32, align 4
  %now = alloca i64, align 8
  %buf = alloca [1024 x i8], align 16
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp126 = alloca i32, align 4
  %__s1_len148 = alloca i64, align 8
  %__s2_len150 = alloca i64, align 8
  %tmp151 = alloca i32, align 4
  %__s1157 = alloca i8*, align 8
  %__result159 = alloca i32, align 4
  %tmp197 = alloca i32, align 4
  %q = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  store %struct.mailer* %m, %struct.mailer** %m.addr, align 8, !tbaa !1
  store %struct.mailer_con_info* %mci, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  store i8* %dsn, i8** %dsn.addr, align 8, !tbaa !1
  store i8* %status, i8** %status.addr, align 8, !tbaa !1
  store %struct.address* %ctladdr, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  store i64 %xstart, i64* %xstart.addr, align 8, !tbaa !32
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.address* %to, %struct.address** %to.addr, align 8, !tbaa !1
  store i32 %rcode, i32* %rcode.addr, align 4, !tbaa !5
  %0 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i32* %l to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i64* %now to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %call = call i64 @curtime()
  store i64 %call, i64* %now, align 8, !tbaa !32
  %4 = bitcast [1024 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 1024, i8* %4) #1
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay, i8** %bp, align 8, !tbaa !1
  %5 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.address* %5, null
  br i1 %cmp, label %if.then, label %if.end.15

if.then:                                          ; preds = %entry
  %6 = load i8*, i8** %bp, align 8, !tbaa !1
  %7 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub = sub i64 1024, %sub.ptr.sub
  %8 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_paddr = getelementptr inbounds %struct.address, %struct.address* %8, i32 0, i32 0
  %9 = load i8*, i8** %q_paddr, align 8, !tbaa !22
  %call2 = call i8* @shortenstring(i8* %9, i64 83)
  %call3 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %6, i64 %sub, i32 2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i32 0, i32 0), i8* %call2)
  %10 = load i8*, i8** %bp, align 8, !tbaa !1
  %call4 = call i64 @strlen(i8* %10) #12
  %11 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %call4
  store i8* %add.ptr, i8** %bp, align 8, !tbaa !1
  %12 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_flags = getelementptr inbounds %struct.address, %struct.address* %12, i32 0, i32 5
  %13 = load i64, i64* %q_flags, align 8, !tbaa !52
  %and = and i64 %13, 1
  %cmp5 = icmp ne i64 %and, 0
  br i1 %cmp5, label %if.then.6, label %if.end

if.then.6:                                        ; preds = %if.then
  %14 = load i8*, i8** %bp, align 8, !tbaa !1
  %15 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast8 = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast9 = ptrtoint i8* %arraydecay7 to i64
  %sub.ptr.sub10 = sub i64 %sub.ptr.lhs.cast8, %sub.ptr.rhs.cast9
  %sub11 = sub i64 1024, %sub.ptr.sub10
  %16 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_uid = getelementptr inbounds %struct.address, %struct.address* %16, i32 0, i32 6
  %17 = load i32, i32* %q_uid, align 4, !tbaa !83
  %18 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_gid = getelementptr inbounds %struct.address, %struct.address* %18, i32 0, i32 7
  %19 = load i32, i32* %q_gid, align 4, !tbaa !84
  %call12 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %14, i64 %sub11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i32 0, i32 0), i32 %17, i32 %19)
  %20 = load i8*, i8** %bp, align 8, !tbaa !1
  %call13 = call i64 @strlen(i8* %20) #12
  %21 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr14 = getelementptr inbounds i8, i8* %21, i64 %call13
  store i8* %add.ptr14, i8** %bp, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then.6, %if.then
  br label %if.end.15

if.end.15:                                        ; preds = %if.end, %entry
  %22 = load i8*, i8** %bp, align 8, !tbaa !1
  %23 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast17 = ptrtoint i8* %23 to i64
  %sub.ptr.rhs.cast18 = ptrtoint i8* %arraydecay16 to i64
  %sub.ptr.sub19 = sub i64 %sub.ptr.lhs.cast17, %sub.ptr.rhs.cast18
  %sub20 = sub i64 1024, %sub.ptr.sub19
  %24 = load i64, i64* %now, align 8, !tbaa !32
  %25 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_ctime = getelementptr inbounds %struct.envelope, %struct.envelope* %25, i32 0, i32 2
  %26 = load i64, i64* %e_ctime, align 8, !tbaa !19
  %sub21 = sub nsw i64 %24, %26
  %call22 = call i8* @pintvl(i64 %sub21, i32 1)
  %call23 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %22, i64 %sub20, i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.83, i32 0, i32 0), i8* %call22)
  %27 = load i8*, i8** %bp, align 8, !tbaa !1
  %call24 = call i64 @strlen(i8* %27) #12
  %28 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr25 = getelementptr inbounds i8, i8* %28, i64 %call24
  store i8* %add.ptr25, i8** %bp, align 8, !tbaa !1
  %29 = load i64, i64* %xstart.addr, align 8, !tbaa !32
  %cmp26 = icmp ne i64 %29, 0
  br i1 %cmp26, label %if.then.27, label %if.end.38

if.then.27:                                       ; preds = %if.end.15
  %30 = load i8*, i8** %bp, align 8, !tbaa !1
  %31 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast29 = ptrtoint i8* %31 to i64
  %sub.ptr.rhs.cast30 = ptrtoint i8* %arraydecay28 to i64
  %sub.ptr.sub31 = sub i64 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30
  %sub32 = sub i64 1024, %sub.ptr.sub31
  %32 = load i64, i64* %now, align 8, !tbaa !32
  %33 = load i64, i64* %xstart.addr, align 8, !tbaa !32
  %sub33 = sub nsw i64 %32, %33
  %call34 = call i8* @pintvl(i64 %sub33, i32 1)
  %call35 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %30, i64 %sub32, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i32 0, i32 0), i8* %call34)
  %34 = load i8*, i8** %bp, align 8, !tbaa !1
  %call36 = call i64 @strlen(i8* %34) #12
  %35 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr37 = getelementptr inbounds i8, i8* %35, i64 %call36
  store i8* %add.ptr37, i8** %bp, align 8, !tbaa !1
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.27, %if.end.15
  %36 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %cmp39 = icmp ne %struct.mailer* %36, null
  br i1 %cmp39, label %if.then.40, label %if.end.49

if.then.40:                                       ; preds = %if.end.38
  %37 = load i8*, i8** %bp, align 8, !tbaa !1
  %38 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay41 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast42 = ptrtoint i8* %38 to i64
  %sub.ptr.rhs.cast43 = ptrtoint i8* %arraydecay41 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %sub45 = sub i64 1024, %sub.ptr.sub44
  %39 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_name = getelementptr inbounds %struct.mailer, %struct.mailer* %39, i32 0, i32 0
  %40 = load i8*, i8** %m_name, align 8, !tbaa !63
  %call46 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %37, i64 %sub45, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.85, i32 0, i32 0), i8* %40)
  %41 = load i8*, i8** %bp, align 8, !tbaa !1
  %call47 = call i64 @strlen(i8* %41) #12
  %42 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr48 = getelementptr inbounds i8, i8* %42, i64 %call47
  store i8* %add.ptr48, i8** %bp, align 8, !tbaa !1
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.40, %if.end.38
  %43 = load i8*, i8** %bp, align 8, !tbaa !1
  %44 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay50 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast51 = ptrtoint i8* %44 to i64
  %sub.ptr.rhs.cast52 = ptrtoint i8* %arraydecay50 to i64
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52
  %sub54 = sub i64 1024, %sub.ptr.sub53
  %45 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_msgpriority = getelementptr inbounds %struct.envelope, %struct.envelope* %45, i32 0, i32 1
  %46 = load i64, i64* %e_msgpriority, align 8, !tbaa !18
  %cmp55 = icmp slt i64 %46, 0
  br i1 %cmp55, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.49
  br label %cond.end

cond.false:                                       ; preds = %if.end.49
  %47 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_msgpriority56 = getelementptr inbounds %struct.envelope, %struct.envelope* %47, i32 0, i32 1
  %48 = load i64, i64* %e_msgpriority56, align 8, !tbaa !18
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 9223372036854775807, %cond.true ], [ %48, %cond.false ]
  %call57 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %43, i64 %sub54, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i32 0, i32 0), i64 %cond)
  %49 = load i8*, i8** %bp, align 8, !tbaa !1
  %call58 = call i64 @strlen(i8* %49) #12
  %50 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr59 = getelementptr inbounds i8, i8* %50, i64 %call58
  store i8* %add.ptr59, i8** %bp, align 8, !tbaa !1
  %51 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %cmp60 = icmp ne %struct.mailer_con_info* %51, null
  br i1 %cmp60, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %cond.end
  %52 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_host = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %52, i32 0, i32 12
  %53 = load i8*, i8** %mci_host, align 8, !tbaa !81
  %cmp61 = icmp ne i8* %53, null
  br i1 %cmp61, label %if.then.62, label %if.else

if.then.62:                                       ; preds = %land.lhs.true
  %54 = load i8*, i8** %bp, align 8, !tbaa !1
  %55 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay63 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast64 = ptrtoint i8* %55 to i64
  %sub.ptr.rhs.cast65 = ptrtoint i8* %arraydecay63 to i64
  %sub.ptr.sub66 = sub i64 %sub.ptr.lhs.cast64, %sub.ptr.rhs.cast65
  %sub67 = sub i64 1024, %sub.ptr.sub66
  %56 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_host68 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %56, i32 0, i32 12
  %57 = load i8*, i8** %mci_host68, align 8, !tbaa !81
  %call69 = call i8* @shortenstring(i8* %57, i64 40)
  %call70 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %54, i64 %sub67, i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.87, i32 0, i32 0), i8* %call69)
  %58 = load i8*, i8** %bp, align 8, !tbaa !1
  %call71 = call i64 @strlen(i8* %58) #12
  %59 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr72 = getelementptr inbounds i8, i8* %59, i64 %call71
  store i8* %add.ptr72, i8** %bp, align 8, !tbaa !1
  %60 = load i16, i16* getelementptr inbounds (%struct.sockaddr, %struct.sockaddr* bitcast (%union.bigsockaddr* @CurHostAddr to %struct.sockaddr*), i32 0, i32 0), align 2, !tbaa !85
  %conv = zext i16 %60 to i32
  %cmp73 = icmp ne i32 %conv, 0
  br i1 %cmp73, label %if.then.75, label %if.end.83

if.then.75:                                       ; preds = %if.then.62
  %61 = load i8*, i8** %bp, align 8, !tbaa !1
  %62 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay76 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast77 = ptrtoint i8* %62 to i64
  %sub.ptr.rhs.cast78 = ptrtoint i8* %arraydecay76 to i64
  %sub.ptr.sub79 = sub i64 %sub.ptr.lhs.cast77, %sub.ptr.rhs.cast78
  %sub80 = sub i64 1024, %sub.ptr.sub79
  %call81 = call i8* @anynet_ntoa(%union.bigsockaddr* @CurHostAddr)
  %call82 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %61, i64 %sub80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i32 0, i32 0), i8* %call81)
  br label %if.end.83

if.end.83:                                        ; preds = %if.then.75, %if.then.62
  br label %if.end.224

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %63 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %63) #1
  %64 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %64) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i32 0, i64 1) to i64), i64 ptrtoint ([12 x i8]* @.str.89 to i64)), i64 1), label %land.lhs.true.84, label %cond.false.127

land.lhs.true.84:                                 ; preds = %if.else
  store i64 11, i64* %__s2_len, align 8, !tbaa !32
  %65 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp85 = icmp ult i64 %65, 4
  br i1 %cmp85, label %cond.true.87, label %cond.false.127

cond.true.87:                                     ; preds = %land.lhs.true.84
  %66 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %66) #1
  %67 = load i8*, i8** %status.addr, align 8, !tbaa !1
  store i8* %67, i8** %__s1, align 8, !tbaa !1
  %68 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %68) #1
  %69 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %69, i64 0
  %70 = load i8, i8* %arrayidx, align 1, !tbaa !15
  %conv90 = zext i8 %70 to i32
  %71 = load i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i32 0, i32 0), align 1, !tbaa !15
  %conv91 = zext i8 %71 to i32
  %sub92 = sub nsw i32 %conv90, %conv91
  store i32 %sub92, i32* %__result, align 4, !tbaa !5
  %72 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp93 = icmp ugt i64 %72, 0
  br i1 %cmp93, label %land.lhs.true.95, label %if.end.125

land.lhs.true.95:                                 ; preds = %cond.true.87
  %73 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp96 = icmp eq i32 %73, 0
  br i1 %cmp96, label %if.then.98, label %if.end.125

if.then.98:                                       ; preds = %land.lhs.true.95
  %74 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx99 = getelementptr inbounds i8, i8* %74, i64 1
  %75 = load i8, i8* %arrayidx99, align 1, !tbaa !15
  %conv100 = zext i8 %75 to i32
  %76 = load i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i32 0, i64 1), align 1, !tbaa !15
  %conv101 = zext i8 %76 to i32
  %sub102 = sub nsw i32 %conv100, %conv101
  store i32 %sub102, i32* %__result, align 4, !tbaa !5
  %77 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp103 = icmp ugt i64 %77, 1
  br i1 %cmp103, label %land.lhs.true.105, label %if.end.124

land.lhs.true.105:                                ; preds = %if.then.98
  %78 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp106 = icmp eq i32 %78, 0
  br i1 %cmp106, label %if.then.108, label %if.end.124

if.then.108:                                      ; preds = %land.lhs.true.105
  %79 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx109 = getelementptr inbounds i8, i8* %79, i64 2
  %80 = load i8, i8* %arrayidx109, align 1, !tbaa !15
  %conv110 = zext i8 %80 to i32
  %81 = load i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i32 0, i64 2), align 1, !tbaa !15
  %conv111 = zext i8 %81 to i32
  %sub112 = sub nsw i32 %conv110, %conv111
  store i32 %sub112, i32* %__result, align 4, !tbaa !5
  %82 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp113 = icmp ugt i64 %82, 2
  br i1 %cmp113, label %land.lhs.true.115, label %if.end.123

land.lhs.true.115:                                ; preds = %if.then.108
  %83 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp116 = icmp eq i32 %83, 0
  br i1 %cmp116, label %if.then.118, label %if.end.123

if.then.118:                                      ; preds = %land.lhs.true.115
  %84 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx119 = getelementptr inbounds i8, i8* %84, i64 3
  %85 = load i8, i8* %arrayidx119, align 1, !tbaa !15
  %conv120 = zext i8 %85 to i32
  %86 = load i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i32 0, i64 3), align 1, !tbaa !15
  %conv121 = zext i8 %86 to i32
  %sub122 = sub nsw i32 %conv120, %conv121
  store i32 %sub122, i32* %__result, align 4, !tbaa !5
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.118, %land.lhs.true.115, %if.then.108
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123, %land.lhs.true.105, %if.then.98
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %land.lhs.true.95, %cond.true.87
  %87 = load i32, i32* %__result, align 4, !tbaa !5
  store i32 %87, i32* %tmp126, !tbaa !5
  %88 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %88) #1
  %89 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  %90 = load i32, i32* %tmp126, !tbaa !5
  br label %cond.end.129

cond.false.127:                                   ; preds = %land.lhs.true.84, %if.else
  %91 = load i8*, i8** %status.addr, align 8, !tbaa !1
  %call128 = call i32 @strcmp(i8* %91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i32 0, i32 0)) #1
  br label %cond.end.129

cond.end.129:                                     ; preds = %cond.false.127, %if.end.125
  %cond130 = phi i32 [ %90, %if.end.125 ], [ %call128, %cond.false.127 ]
  store i32 %cond130, i32* %tmp, !tbaa !5
  %92 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %92) #1
  %93 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %93) #1
  %94 = load i32, i32* %tmp, !tbaa !5
  %cmp131 = icmp eq i32 %94, 0
  br i1 %cmp131, label %if.then.133, label %if.else.146

if.then.133:                                      ; preds = %cond.end.129
  %95 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg = getelementptr inbounds %struct.envelope, %struct.envelope* %95, i32 0, i32 36
  %96 = load i8*, i8** %e_quarmsg, align 8, !tbaa !38
  %cmp134 = icmp ne i8* %96, null
  br i1 %cmp134, label %if.then.136, label %if.end.145

if.then.136:                                      ; preds = %if.then.133
  %97 = load i8*, i8** %bp, align 8, !tbaa !1
  %98 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay137 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast138 = ptrtoint i8* %98 to i64
  %sub.ptr.rhs.cast139 = ptrtoint i8* %arraydecay137 to i64
  %sub.ptr.sub140 = sub i64 %sub.ptr.lhs.cast138, %sub.ptr.rhs.cast139
  %sub141 = sub i64 1024, %sub.ptr.sub140
  %99 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg142 = getelementptr inbounds %struct.envelope, %struct.envelope* %99, i32 0, i32 36
  %100 = load i8*, i8** %e_quarmsg142, align 8, !tbaa !38
  %call143 = call i8* @shortenstring(i8* %100, i64 40)
  %call144 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %97, i64 %sub141, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.90, i32 0, i32 0), i8* %call143)
  br label %if.end.145

if.end.145:                                       ; preds = %if.then.136, %if.then.133
  br label %if.end.223

if.else.146:                                      ; preds = %cond.end.129
  %101 = bitcast i64* %__s1_len148 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %101) #1
  %102 = bitcast i64* %__s2_len150 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %102) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.91 to i64)), i64 1), label %land.lhs.true.152, label %cond.false.198

land.lhs.true.152:                                ; preds = %if.else.146
  store i64 6, i64* %__s2_len150, align 8, !tbaa !32
  %103 = load i64, i64* %__s2_len150, align 8, !tbaa !32
  %cmp153 = icmp ult i64 %103, 4
  br i1 %cmp153, label %cond.true.155, label %cond.false.198

cond.true.155:                                    ; preds = %land.lhs.true.152
  %104 = bitcast i8** %__s1157 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %104) #1
  %105 = load i8*, i8** %status.addr, align 8, !tbaa !1
  store i8* %105, i8** %__s1157, align 8, !tbaa !1
  %106 = bitcast i32* %__result159 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %106) #1
  %107 = load i8*, i8** %__s1157, align 8, !tbaa !1
  %arrayidx160 = getelementptr inbounds i8, i8* %107, i64 0
  %108 = load i8, i8* %arrayidx160, align 1, !tbaa !15
  %conv161 = zext i8 %108 to i32
  %109 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), align 1, !tbaa !15
  %conv162 = zext i8 %109 to i32
  %sub163 = sub nsw i32 %conv161, %conv162
  store i32 %sub163, i32* %__result159, align 4, !tbaa !5
  %110 = load i64, i64* %__s2_len150, align 8, !tbaa !32
  %cmp164 = icmp ugt i64 %110, 0
  br i1 %cmp164, label %land.lhs.true.166, label %if.end.196

land.lhs.true.166:                                ; preds = %cond.true.155
  %111 = load i32, i32* %__result159, align 4, !tbaa !5
  %cmp167 = icmp eq i32 %111, 0
  br i1 %cmp167, label %if.then.169, label %if.end.196

if.then.169:                                      ; preds = %land.lhs.true.166
  %112 = load i8*, i8** %__s1157, align 8, !tbaa !1
  %arrayidx170 = getelementptr inbounds i8, i8* %112, i64 1
  %113 = load i8, i8* %arrayidx170, align 1, !tbaa !15
  %conv171 = zext i8 %113 to i32
  %114 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i64 1), align 1, !tbaa !15
  %conv172 = zext i8 %114 to i32
  %sub173 = sub nsw i32 %conv171, %conv172
  store i32 %sub173, i32* %__result159, align 4, !tbaa !5
  %115 = load i64, i64* %__s2_len150, align 8, !tbaa !32
  %cmp174 = icmp ugt i64 %115, 1
  br i1 %cmp174, label %land.lhs.true.176, label %if.end.195

land.lhs.true.176:                                ; preds = %if.then.169
  %116 = load i32, i32* %__result159, align 4, !tbaa !5
  %cmp177 = icmp eq i32 %116, 0
  br i1 %cmp177, label %if.then.179, label %if.end.195

if.then.179:                                      ; preds = %land.lhs.true.176
  %117 = load i8*, i8** %__s1157, align 8, !tbaa !1
  %arrayidx180 = getelementptr inbounds i8, i8* %117, i64 2
  %118 = load i8, i8* %arrayidx180, align 1, !tbaa !15
  %conv181 = zext i8 %118 to i32
  %119 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i64 2), align 1, !tbaa !15
  %conv182 = zext i8 %119 to i32
  %sub183 = sub nsw i32 %conv181, %conv182
  store i32 %sub183, i32* %__result159, align 4, !tbaa !5
  %120 = load i64, i64* %__s2_len150, align 8, !tbaa !32
  %cmp184 = icmp ugt i64 %120, 2
  br i1 %cmp184, label %land.lhs.true.186, label %if.end.194

land.lhs.true.186:                                ; preds = %if.then.179
  %121 = load i32, i32* %__result159, align 4, !tbaa !5
  %cmp187 = icmp eq i32 %121, 0
  br i1 %cmp187, label %if.then.189, label %if.end.194

if.then.189:                                      ; preds = %land.lhs.true.186
  %122 = load i8*, i8** %__s1157, align 8, !tbaa !1
  %arrayidx190 = getelementptr inbounds i8, i8* %122, i64 3
  %123 = load i8, i8* %arrayidx190, align 1, !tbaa !15
  %conv191 = zext i8 %123 to i32
  %124 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i64 3), align 1, !tbaa !15
  %conv192 = zext i8 %124 to i32
  %sub193 = sub nsw i32 %conv191, %conv192
  store i32 %sub193, i32* %__result159, align 4, !tbaa !5
  br label %if.end.194

if.end.194:                                       ; preds = %if.then.189, %land.lhs.true.186, %if.then.179
  br label %if.end.195

if.end.195:                                       ; preds = %if.end.194, %land.lhs.true.176, %if.then.169
  br label %if.end.196

if.end.196:                                       ; preds = %if.end.195, %land.lhs.true.166, %cond.true.155
  %125 = load i32, i32* %__result159, align 4, !tbaa !5
  store i32 %125, i32* %tmp197, !tbaa !5
  %126 = bitcast i32* %__result159 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %126) #1
  %127 = bitcast i8** %__s1157 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %127) #1
  %128 = load i32, i32* %tmp197, !tbaa !5
  br label %cond.end.200

cond.false.198:                                   ; preds = %land.lhs.true.152, %if.else.146
  %129 = load i8*, i8** %status.addr, align 8, !tbaa !1
  %call199 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0)) #1
  br label %cond.end.200

cond.end.200:                                     ; preds = %cond.false.198, %if.end.196
  %cond201 = phi i32 [ %128, %if.end.196 ], [ %call199, %cond.false.198 ]
  store i32 %cond201, i32* %tmp151, !tbaa !5
  %130 = bitcast i64* %__s2_len150 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %130) #1
  %131 = bitcast i64* %__s1_len148 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %131) #1
  %132 = load i32, i32* %tmp151, !tbaa !5
  %cmp202 = icmp ne i32 %132, 0
  br i1 %cmp202, label %if.then.204, label %if.end.222

if.then.204:                                      ; preds = %cond.end.200
  %133 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call205 = call i8* @macvalue(i32 104, %struct.envelope* %133)
  store i8* %call205, i8** %p, align 8, !tbaa !1
  %134 = load i8*, i8** %p, align 8, !tbaa !1
  %cmp206 = icmp ne i8* %134, null
  br i1 %cmp206, label %land.lhs.true.208, label %if.end.221

land.lhs.true.208:                                ; preds = %if.then.204
  %135 = load i8*, i8** %p, align 8, !tbaa !1
  %arrayidx209 = getelementptr inbounds i8, i8* %135, i64 0
  %136 = load i8, i8* %arrayidx209, align 1, !tbaa !15
  %conv210 = sext i8 %136 to i32
  %cmp211 = icmp ne i32 %conv210, 0
  br i1 %cmp211, label %if.then.213, label %if.end.221

if.then.213:                                      ; preds = %land.lhs.true.208
  %137 = load i8*, i8** %bp, align 8, !tbaa !1
  %138 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay214 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast215 = ptrtoint i8* %138 to i64
  %sub.ptr.rhs.cast216 = ptrtoint i8* %arraydecay214 to i64
  %sub.ptr.sub217 = sub i64 %sub.ptr.lhs.cast215, %sub.ptr.rhs.cast216
  %sub218 = sub i64 1024, %sub.ptr.sub217
  %139 = load i8*, i8** %p, align 8, !tbaa !1
  %call219 = call i8* @shortenstring(i8* %139, i64 40)
  %call220 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %137, i64 %sub218, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.92, i32 0, i32 0), i8* %call219)
  br label %if.end.221

if.end.221:                                       ; preds = %if.then.213, %land.lhs.true.208, %if.then.204
  br label %if.end.222

if.end.222:                                       ; preds = %if.end.221, %cond.end.200
  br label %if.end.223

if.end.223:                                       ; preds = %if.end.222, %if.end.145
  br label %if.end.224

if.end.224:                                       ; preds = %if.end.223, %if.end.83
  %140 = load i8*, i8** %bp, align 8, !tbaa !1
  %call225 = call i64 @strlen(i8* %140) #12
  %141 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr226 = getelementptr inbounds i8, i8* %141, i64 %call225
  store i8* %add.ptr226, i8** %bp, align 8, !tbaa !1
  %142 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  %cmp227 = icmp ne i8* %142, null
  br i1 %cmp227, label %land.lhs.true.229, label %if.end.243

land.lhs.true.229:                                ; preds = %if.end.224
  %143 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  %144 = load i8, i8* %143, align 1, !tbaa !15
  %conv230 = sext i8 %144 to i32
  %cmp231 = icmp ne i32 %conv230, 0
  br i1 %cmp231, label %if.then.233, label %if.end.243

if.then.233:                                      ; preds = %land.lhs.true.229
  %145 = load i8*, i8** %bp, align 8, !tbaa !1
  %146 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay234 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast235 = ptrtoint i8* %146 to i64
  %sub.ptr.rhs.cast236 = ptrtoint i8* %arraydecay234 to i64
  %sub.ptr.sub237 = sub i64 %sub.ptr.lhs.cast235, %sub.ptr.rhs.cast236
  %sub238 = sub i64 1024, %sub.ptr.sub237
  %147 = load i8*, i8** %dsn.addr, align 8, !tbaa !1
  %call239 = call i8* @shortenstring(i8* %147, i64 10)
  %call240 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %145, i64 %sub238, i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i32 0, i32 0), i8* %call239)
  %148 = load i8*, i8** %bp, align 8, !tbaa !1
  %call241 = call i64 @strlen(i8* %148) #12
  %149 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr242 = getelementptr inbounds i8, i8* %149, i64 %call241
  store i8* %add.ptr242, i8** %bp, align 8, !tbaa !1
  br label %if.end.243

if.end.243:                                       ; preds = %if.then.233, %land.lhs.true.229, %if.end.224
  %150 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay244 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast245 = ptrtoint i8* %150 to i64
  %sub.ptr.rhs.cast246 = ptrtoint i8* %arraydecay244 to i64
  %sub.ptr.sub247 = sub i64 %sub.ptr.lhs.cast245, %sub.ptr.rhs.cast246
  %cmp248 = icmp ugt i64 %sub.ptr.sub247, 801
  br i1 %cmp248, label %if.then.250, label %if.end.261

if.then.250:                                      ; preds = %if.end.243
  %arraydecay251 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %add.ptr252 = getelementptr inbounds i8, i8* %arraydecay251, i64 1024
  %add.ptr253 = getelementptr inbounds i8, i8* %add.ptr252, i64 -220
  store i8* %add.ptr253, i8** %bp, align 8, !tbaa !1
  %151 = load i8*, i8** %bp, align 8, !tbaa !1
  %152 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay254 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast255 = ptrtoint i8* %152 to i64
  %sub.ptr.rhs.cast256 = ptrtoint i8* %arraydecay254 to i64
  %sub.ptr.sub257 = sub i64 %sub.ptr.lhs.cast255, %sub.ptr.rhs.cast256
  %sub258 = sub i64 1024, %sub.ptr.sub257
  %call259 = call i64 @sm_strlcpy(i8* %151, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i64 %sub258)
  %153 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr260 = getelementptr inbounds i8, i8* %153, i64 3
  store i8* %add.ptr260, i8** %bp, align 8, !tbaa !1
  br label %if.end.261

if.end.261:                                       ; preds = %if.then.250, %if.end.243
  %154 = load i8*, i8** %bp, align 8, !tbaa !1
  %155 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay262 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast263 = ptrtoint i8* %155 to i64
  %sub.ptr.rhs.cast264 = ptrtoint i8* %arraydecay262 to i64
  %sub.ptr.sub265 = sub i64 %sub.ptr.lhs.cast263, %sub.ptr.rhs.cast264
  %sub266 = sub i64 1024, %sub.ptr.sub265
  %call267 = call i64 @sm_strlcpy(i8* %154, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i32 0, i32 0), i64 %sub266)
  %156 = load i8*, i8** %bp, align 8, !tbaa !1
  %call268 = call i64 @strlen(i8* %156) #12
  %157 = load i8*, i8** %bp, align 8, !tbaa !1
  %add.ptr269 = getelementptr inbounds i8, i8* %157, i64 %call268
  store i8* %add.ptr269, i8** %bp, align 8, !tbaa !1
  %158 = load i8*, i8** %bp, align 8, !tbaa !1
  %159 = load i8*, i8** %status.addr, align 8, !tbaa !1
  %call270 = call i8* @shortenstring(i8* %159, i64 203)
  %160 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay271 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast272 = ptrtoint i8* %160 to i64
  %sub.ptr.rhs.cast273 = ptrtoint i8* %arraydecay271 to i64
  %sub.ptr.sub274 = sub i64 %sub.ptr.lhs.cast272, %sub.ptr.rhs.cast273
  %sub275 = sub i64 1024, %sub.ptr.sub274
  %call276 = call i64 @sm_strlcpy(i8* %158, i8* %call270, i64 %sub275)
  %arraydecay277 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %call278 = call i64 @strlen(i8* %arraydecay277) #12
  %sub279 = sub i64 924, %call278
  %conv280 = trunc i64 %sub279 to i32
  store i32 %conv280, i32* %l, align 4, !tbaa !5
  %161 = load i32, i32* %l, align 4, !tbaa !5
  %cmp281 = icmp slt i32 %161, 0
  br i1 %cmp281, label %if.then.283, label %if.end.284

if.then.283:                                      ; preds = %if.end.261
  store i32 0, i32* %l, align 4, !tbaa !5
  br label %if.end.284

if.end.284:                                       ; preds = %if.then.283, %if.end.261
  %162 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to = getelementptr inbounds %struct.envelope, %struct.envelope* %162, i32 0, i32 3
  %163 = load i8*, i8** %e_to, align 8, !tbaa !62
  %cmp285 = icmp eq i8* %163, null
  br i1 %cmp285, label %cond.true.287, label %cond.false.288

cond.true.287:                                    ; preds = %if.end.284
  br label %cond.end.290

cond.false.288:                                   ; preds = %if.end.284
  %164 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to289 = getelementptr inbounds %struct.envelope, %struct.envelope* %164, i32 0, i32 3
  %165 = load i8*, i8** %e_to289, align 8, !tbaa !62
  br label %cond.end.290

cond.end.290:                                     ; preds = %cond.false.288, %cond.true.287
  %cond291 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.96, i32 0, i32 0), %cond.true.287 ], [ %165, %cond.false.288 ]
  store i8* %cond291, i8** %p, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont, %cond.end.290
  %166 = load i8*, i8** %p, align 8, !tbaa !1
  %call292 = call i64 @strlen(i8* %166) #12
  %167 = load i32, i32* %l, align 4, !tbaa !5
  %conv293 = sext i32 %167 to i64
  %cmp294 = icmp uge i64 %call292, %conv293
  br i1 %cmp294, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %168 = bitcast i8** %q to i8*
  call void @llvm.lifetime.start(i64 8, i8* %168) #1
  %169 = load i8*, i8** %p, align 8, !tbaa !1
  %170 = load i32, i32* %l, align 4, !tbaa !5
  %idx.ext = sext i32 %170 to i64
  %add.ptr297 = getelementptr inbounds i8, i8* %169, i64 %idx.ext
  store i8* %add.ptr297, i8** %q, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %171 = load i8*, i8** %q, align 8, !tbaa !1
  %172 = load i8*, i8** %p, align 8, !tbaa !1
  %cmp298 = icmp ugt i8* %171, %172
  br i1 %cmp298, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %173 = load i8*, i8** %q, align 8, !tbaa !1
  %174 = load i8, i8* %173, align 1, !tbaa !15
  %conv300 = sext i8 %174 to i32
  %cmp301 = icmp eq i32 %conv300, 44
  br i1 %cmp301, label %if.then.303, label %if.end.304

if.then.303:                                      ; preds = %for.body
  br label %for.end

if.end.304:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.304
  %175 = load i8*, i8** %q, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %175, i32 -1
  store i8* %incdec.ptr, i8** %q, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %if.then.303, %for.cond
  %176 = load i8*, i8** %p, align 8, !tbaa !1
  %177 = load i8*, i8** %q, align 8, !tbaa !1
  %cmp305 = icmp eq i8* %176, %177
  br i1 %cmp305, label %if.then.307, label %if.end.308

if.then.307:                                      ; preds = %for.end
  store i32 3, i32* %cleanup.dest.slot
  br label %cleanup

if.end.308:                                       ; preds = %for.end
  %178 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id = getelementptr inbounds %struct.envelope, %struct.envelope* %178, i32 0, i32 25
  %179 = load i8*, i8** %e_id, align 8, !tbaa !16
  %180 = load i8*, i8** %q, align 8, !tbaa !1
  %incdec.ptr309 = getelementptr inbounds i8, i8* %180, i32 1
  store i8* %incdec.ptr309, i8** %q, align 8, !tbaa !1
  %181 = load i8*, i8** %p, align 8, !tbaa !1
  %sub.ptr.lhs.cast310 = ptrtoint i8* %incdec.ptr309 to i64
  %sub.ptr.rhs.cast311 = ptrtoint i8* %181 to i64
  %sub.ptr.sub312 = sub i64 %sub.ptr.lhs.cast310, %sub.ptr.rhs.cast311
  %conv313 = trunc i64 %sub.ptr.sub312 to i32
  %182 = load i8*, i8** %p, align 8, !tbaa !1
  %arraydecay314 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 6, i8* %179, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.97, i32 0, i32 0), i32 %conv313, i8* %182, i8* %arraydecay314)
  %183 = load i8*, i8** %q, align 8, !tbaa !1
  store i8* %183, i8** %p, align 8, !tbaa !1
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.308, %if.then.307
  %184 = bitcast i8** %q to i8*
  call void @llvm.lifetime.end(i64 8, i8* %184) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %while.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond

while.end:                                        ; preds = %cleanup, %while.cond
  %185 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id315 = getelementptr inbounds %struct.envelope, %struct.envelope* %185, i32 0, i32 25
  %186 = load i8*, i8** %e_id315, align 8, !tbaa !16
  %187 = load i32, i32* %l, align 4, !tbaa !5
  %188 = load i8*, i8** %p, align 8, !tbaa !1
  %arraydecay316 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 6, i8* %186, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i32 %187, i8* %188, i8* %arraydecay316)
  %189 = bitcast [1024 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 1024, i8* %189) #1
  %190 = bitcast i64* %now to i8*
  call void @llvm.lifetime.end(i64 8, i8* %190) #1
  %191 = bitcast i32* %l to i8*
  call void @llvm.lifetime.end(i64 4, i8* %191) #1
  %192 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %192) #1
  %193 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %193) #1
  ret void

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare i8* @pintvl(i64, i32) #2

declare i8* @anynet_ntoa(%union.bigsockaddr*) #2

declare i8* @macvalue(i32, %struct.envelope*) #2

; Function Attrs: nounwind uwtable
define i32 @putfromline(%struct.mailer_con_info* %mci, %struct.envelope* %e) #0 {
entry:
  %retval = alloca i32, align 4
  %mci.addr = alloca %struct.mailer_con_info*, align 8
  %e.addr = alloca %struct.envelope*, align 8
  %template = alloca i8*, align 8
  %buf = alloca [2048 x i8], align 16
  %xbuf = alloca [2048 x i8], align 16
  %cleanup.dest.slot = alloca i32
  %bang = alloca i8*, align 8
  %at = alloca i8*, align 8
  %hname = alloca [256 x i8], align 16
  store %struct.mailer_con_info* %mci, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  %0 = bitcast i8** %template to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = load i8*, i8** @UnixFromLine, align 8, !tbaa !1
  store i8* %1, i8** %template, align 8, !tbaa !1
  %2 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %2) #1
  %3 = bitcast [2048 x i8]* %xbuf to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %3) #1
  %4 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %4, i32 0, i32 11
  %5 = load %struct.mailer*, %struct.mailer** %mci_mailer, align 8, !tbaa !79
  %m_flags = getelementptr inbounds %struct.mailer, %struct.mailer* %5, i32 0, i32 5
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags, i32 0, i64 3
  %6 = load i32, i32* %arrayidx, align 4, !tbaa !5
  %and = and i32 %6, 16384
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %7, i32 0, i32 0
  %8 = load i64, i64* %mci_flags, align 8, !tbaa !71
  %or = or i64 %8, 512
  store i64 %or, i64* %mci_flags, align 8, !tbaa !71
  %9 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer1 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %9, i32 0, i32 11
  %10 = load %struct.mailer*, %struct.mailer** %mci_mailer1, align 8, !tbaa !79
  %m_flags2 = getelementptr inbounds %struct.mailer, %struct.mailer* %10, i32 0, i32 5
  %arrayidx3 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags2, i32 0, i64 2
  %11 = load i32, i32* %arrayidx3, align 4, !tbaa !5
  %and4 = and i32 %11, 2097152
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then.6, label %if.end.26

if.then.6:                                        ; preds = %if.end
  %12 = bitcast i8** %bang to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12) #1
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %13 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.99, i32 0, i32 0), i8* %arraydecay, i64 2048, %struct.envelope* %13)
  %arraydecay7 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %call = call i8* @strchr(i8* %arraydecay7, i32 33) #1
  store i8* %call, i8** %bang, align 8, !tbaa !1
  %14 = load i8*, i8** %bang, align 8, !tbaa !1
  %cmp = icmp eq i8* %14, null
  br i1 %cmp, label %if.then.8, label %if.else.19

if.then.8:                                        ; preds = %if.then.6
  %15 = bitcast i8** %at to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  %16 = bitcast [256 x i8]* %hname to i8*
  call void @llvm.lifetime.start(i64 256, i8* %16) #1
  %arraydecay9 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %call10 = call i8* @strrchr(i8* %arraydecay9, i32 64) #12
  store i8* %call10, i8** %at, align 8, !tbaa !1
  %17 = load i8*, i8** %at, align 8, !tbaa !1
  %cmp11 = icmp eq i8* %17, null
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %if.then.8
  %arraydecay13 = getelementptr inbounds [256 x i8], [256 x i8]* %hname, i32 0, i32 0
  %18 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i8* %arraydecay13, i64 256, %struct.envelope* %18)
  %arraydecay14 = getelementptr inbounds [256 x i8], [256 x i8]* %hname, i32 0, i32 0
  store i8* %arraydecay14, i8** %at, align 8, !tbaa !1
  br label %if.end.15

if.else:                                          ; preds = %if.then.8
  %19 = load i8*, i8** %at, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr, i8** %at, align 8, !tbaa !1
  store i8 0, i8* %19, align 1, !tbaa !15
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.12
  %arraydecay16 = getelementptr inbounds [2048 x i8], [2048 x i8]* %xbuf, i32 0, i32 0
  %arraydecay17 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %20 = load i8*, i8** %at, align 8, !tbaa !1
  %call18 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay16, i64 2048, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.101, i32 0, i32 0), i8* %arraydecay17, i8* %20)
  %21 = bitcast [256 x i8]* %hname to i8*
  call void @llvm.lifetime.end(i64 256, i8* %21) #1
  %22 = bitcast i8** %at to i8*
  call void @llvm.lifetime.end(i64 8, i8* %22) #1
  br label %if.end.25

if.else.19:                                       ; preds = %if.then.6
  %23 = load i8*, i8** %bang, align 8, !tbaa !1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %23, i32 1
  store i8* %incdec.ptr20, i8** %bang, align 8, !tbaa !1
  store i8 0, i8* %23, align 1, !tbaa !15
  %arraydecay21 = getelementptr inbounds [2048 x i8], [2048 x i8]* %xbuf, i32 0, i32 0
  %24 = load i8*, i8** %bang, align 8, !tbaa !1
  %arraydecay22 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %call23 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay21, i64 2048, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.101, i32 0, i32 0), i8* %24, i8* %arraydecay22)
  %arraydecay24 = getelementptr inbounds [2048 x i8], [2048 x i8]* %xbuf, i32 0, i32 0
  store i8* %arraydecay24, i8** %template, align 8, !tbaa !1
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.19, %if.end.15
  %25 = bitcast i8** %bang to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #1
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.end
  %26 = load i8*, i8** %template, align 8, !tbaa !1
  %arraydecay27 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %27 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %26, i8* %arraydecay27, i64 2048, %struct.envelope* %27)
  %arraydecay28 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %arraydecay29 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %call30 = call i64 @strlen(i8* %arraydecay29) #12
  %28 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %call31 = call i32 @putxline(i8* %arraydecay28, i64 %call30, %struct.mailer_con_info* %28, i32 4)
  store i32 %call31, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.26, %if.then
  %29 = bitcast [2048 x i8]* %xbuf to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %29) #1
  %30 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %30) #1
  %31 = bitcast i8** %template to i8*
  call void @llvm.lifetime.end(i64 8, i8* %31) #1
  %32 = load i32, i32* %retval
  ret i32 %32
}

declare void @expand(i8*, i8*, i64, %struct.envelope*) #2

; Function Attrs: nounwind
declare i8* @strchr(i8*, i32) #4

declare i32 @putxline(i8*, i64, %struct.mailer_con_info*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @putbody(%struct.mailer_con_info* %mci, %struct.envelope* %e, i8* %separator) #0 {
entry:
  %retval = alloca i32, align 4
  %mci.addr = alloca %struct.mailer_con_info*, align 8
  %e.addr = alloca %struct.envelope*, align 8
  %separator.addr = alloca i8*, align 8
  %dead = alloca i32, align 4
  %ioerr = alloca i32, align 4
  %save_errno = alloca i32, align 4
  %buf = alloca [2048 x i8], align 16
  %boundaries = alloca [21 x i8*], align 16
  %df = alloca i8*, align 8
  %msg = alloca i8*, align 8
  %stbuf = alloca %struct.stat, align 8
  %oldsuprerrs = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %ostate = alloca i32, align 4
  %bp = alloca i8*, align 8
  %pbp = alloca i8*, align 8
  %c = alloca i32, align 4
  %xp = alloca i8*, align 8
  %padc = alloca i32, align 4
  %buflim = alloca i8*, align 8
  %pos = alloca i32, align 4
  %peekbuf = alloca [12 x i8], align 1
  %sl = alloca i32, align 4
  %d = alloca i32, align 4
  store %struct.mailer_con_info* %mci, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store i8* %separator, i8** %separator.addr, align 8, !tbaa !1
  %0 = bitcast i32* %dead to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %dead, align 4, !tbaa !5
  %1 = bitcast i32* %ioerr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %ioerr, align 4, !tbaa !5
  %2 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %3) #1
  %4 = bitcast [21 x i8*]* %boundaries to i8*
  call void @llvm.lifetime.start(i64 168, i8* %4) #1
  %5 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp = getelementptr inbounds %struct.envelope, %struct.envelope* %5, i32 0, i32 24
  %6 = load %struct.sm_file*, %struct.sm_file** %e_dfp, align 8, !tbaa !44
  %cmp = icmp eq %struct.sm_file* %6, null
  br i1 %cmp, label %land.lhs.true, label %if.end.11

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags = getelementptr inbounds %struct.envelope, %struct.envelope* %7, i32 0, i32 11
  %8 = load i64, i64* %e_flags, align 8, !tbaa !7
  %and = and i64 %8, 2097152
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.then, label %if.end.11

if.then:                                          ; preds = %land.lhs.true
  %9 = bitcast i8** %df to i8*
  call void @llvm.lifetime.start(i64 8, i8* %9) #1
  %10 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call = call i8* @queuename(%struct.envelope* %10, i32 100)
  store i8* %call, i8** %df, align 8, !tbaa !1
  %11 = load i8*, i8** %df, align 8, !tbaa !1
  %call2 = call %struct.sm_file* @sm_io_open(%struct.sm_file* @SmFtStdio_def, i32 -2, i8* %11, i32 2, i8* null)
  %12 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp3 = getelementptr inbounds %struct.envelope, %struct.envelope* %12, i32 0, i32 24
  store %struct.sm_file* %call2, %struct.sm_file** %e_dfp3, align 8, !tbaa !44
  %13 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp4 = getelementptr inbounds %struct.envelope, %struct.envelope* %13, i32 0, i32 24
  %14 = load %struct.sm_file*, %struct.sm_file** %e_dfp4, align 8, !tbaa !44
  %cmp5 = icmp eq %struct.sm_file* %14, null
  br i1 %cmp5, label %if.then.6, label %if.end.10

if.then.6:                                        ; preds = %if.then
  %15 = bitcast i8** %msg to i8*
  call void @llvm.lifetime.start(i64 8, i8* %15) #1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.102, i32 0, i32 0), i8** %msg, align 8, !tbaa !1
  %call7 = call i32* @__errno_location() #11
  %16 = load i32, i32* %call7, align 4, !tbaa !5
  %cmp8 = icmp eq i32 %16, 2
  br i1 %cmp8, label %if.then.9, label %if.end

if.then.9:                                        ; preds = %if.then.6
  %17 = load i8*, i8** %msg, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr, i8** %msg, align 8, !tbaa !1
  br label %if.end

if.end:                                           ; preds = %if.then.9, %if.then.6
  %18 = load i8*, i8** %msg, align 8, !tbaa !1
  %19 = load i8*, i8** %df, align 8, !tbaa !1
  %20 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to = getelementptr inbounds %struct.envelope, %struct.envelope* %20, i32 0, i32 3
  %21 = load i8*, i8** %e_to, align 8, !tbaa !62
  %22 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from = getelementptr inbounds %struct.envelope, %struct.envelope* %22, i32 0, i32 4
  %q_paddr = getelementptr inbounds %struct.address, %struct.address* %e_from, i32 0, i32 0
  %23 = load i8*, i8** %q_paddr, align 8, !tbaa !23
  call void (i8*, ...) @syserr(i8* %18, i8* %19, i8* %21, i8* %23)
  %24 = bitcast i8** %msg to i8*
  call void @llvm.lifetime.end(i64 8, i8* %24) #1
  br label %if.end.10

if.end.10:                                        ; preds = %if.end, %if.then
  %25 = bitcast i8** %df to i8*
  call void @llvm.lifetime.end(i64 8, i8* %25) #1
  br label %if.end.11

if.end.11:                                        ; preds = %if.end.10, %land.lhs.true, %entry
  %26 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp12 = getelementptr inbounds %struct.envelope, %struct.envelope* %26, i32 0, i32 24
  %27 = load %struct.sm_file*, %struct.sm_file** %e_dfp12, align 8, !tbaa !44
  %cmp13 = icmp eq %struct.sm_file* %27, null
  br i1 %cmp13, label %if.then.14, label %if.end.28

if.then.14:                                       ; preds = %if.end.11
  %28 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %28, i32 0, i32 0
  %29 = load i64, i64* %mci_flags, align 8, !tbaa !71
  %and15 = and i64 %29, 512
  %cmp16 = icmp ne i64 %and15, 0
  br i1 %cmp16, label %if.then.17, label %if.end.23

if.then.17:                                       ; preds = %if.then.14
  %30 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %call18 = call i32 @putline(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), %struct.mailer_con_info* %30)
  %tobool = icmp ne i32 %call18, 0
  br i1 %tobool, label %if.end.20, label %if.then.19

if.then.19:                                       ; preds = %if.then.17
  br label %writeerr

if.end.20:                                        ; preds = %if.then.17
  %31 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags21 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %31, i32 0, i32 0
  %32 = load i64, i64* %mci_flags21, align 8, !tbaa !71
  %and22 = and i64 %32, -513
  store i64 %and22, i64* %mci_flags21, align 8, !tbaa !71
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.20, %if.then.14
  %33 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %call24 = call i32 @putline(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0), %struct.mailer_con_info* %33)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.end.27, label %if.then.26

if.then.26:                                       ; preds = %if.end.23
  br label %writeerr

if.end.27:                                        ; preds = %if.end.23
  br label %endofmessage

if.end.28:                                        ; preds = %if.end.11
  %34 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfino = getelementptr inbounds %struct.envelope, %struct.envelope* %34, i32 0, i32 45
  %35 = load i64, i64* %e_dfino, align 8, !tbaa !87
  %cmp29 = icmp eq i64 %35, 0
  br i1 %cmp29, label %if.then.30, label %if.end.39

if.then.30:                                       ; preds = %if.end.28
  %36 = bitcast %struct.stat* %stbuf to i8*
  call void @llvm.lifetime.start(i64 144, i8* %36) #1
  %37 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp31 = getelementptr inbounds %struct.envelope, %struct.envelope* %37, i32 0, i32 24
  %38 = load %struct.sm_file*, %struct.sm_file** %e_dfp31, align 8, !tbaa !44
  %call32 = call i32 @sm_io_getinfo(%struct.sm_file* %38, i32 3, i8* null)
  %call33 = call i32 @fstat(i32 %call32, %struct.stat* %stbuf) #1
  %cmp34 = icmp slt i32 %call33, 0
  br i1 %cmp34, label %if.then.35, label %if.else

if.then.35:                                       ; preds = %if.then.30
  %39 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfino36 = getelementptr inbounds %struct.envelope, %struct.envelope* %39, i32 0, i32 45
  store i64 -1, i64* %e_dfino36, align 8, !tbaa !87
  br label %if.end.38

if.else:                                          ; preds = %if.then.30
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %stbuf, i32 0, i32 0
  %40 = load i64, i64* %st_dev, align 8, !tbaa !88
  %41 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfdev = getelementptr inbounds %struct.envelope, %struct.envelope* %41, i32 0, i32 44
  store i64 %40, i64* %e_dfdev, align 8, !tbaa !91
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %stbuf, i32 0, i32 1
  %42 = load i64, i64* %st_ino, align 8, !tbaa !92
  %43 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfino37 = getelementptr inbounds %struct.envelope, %struct.envelope* %43, i32 0, i32 45
  store i64 %42, i64* %e_dfino37, align 8, !tbaa !87
  br label %if.end.38

if.end.38:                                        ; preds = %if.else, %if.then.35
  %44 = bitcast %struct.stat* %stbuf to i8*
  call void @llvm.lifetime.end(i64 144, i8* %44) #1
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.end.28
  %45 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp40 = getelementptr inbounds %struct.envelope, %struct.envelope* %45, i32 0, i32 24
  %46 = load %struct.sm_file*, %struct.sm_file** %e_dfp40, align 8, !tbaa !44
  %call41 = call i32 @bfrewind(%struct.sm_file* %46)
  %47 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 84), align 1, !tbaa !15
  %conv = zext i8 %47 to i32
  %cmp42 = icmp sge i32 %conv, 101
  br i1 %cmp42, label %land.lhs.true.44, label %if.end.48

land.lhs.true.44:                                 ; preds = %if.end.39
  %48 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool45 = icmp ne i32 %48, 0
  br i1 %tobool45, label %if.end.48, label %if.then.46

if.then.46:                                       ; preds = %land.lhs.true.44
  %call47 = call i32 @sleep(i32 319)
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.46, %land.lhs.true.44, %if.end.39
  %49 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags49 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %49, i32 0, i32 0
  %50 = load i64, i64* %mci_flags49, align 8, !tbaa !71
  %and50 = and i64 %50, 1024
  %cmp51 = icmp ne i64 %and50, 0
  br i1 %cmp51, label %if.then.53, label %if.else.83

if.then.53:                                       ; preds = %if.end.48
  %51 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header = getelementptr inbounds %struct.envelope, %struct.envelope* %51, i32 0, i32 0
  %52 = load %struct.header*, %struct.header** %e_header, align 8, !tbaa !42
  %call54 = call i8* @hvalue(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.104, i32 0, i32 0), %struct.header* %52)
  %cmp55 = icmp eq i8* %call54, null
  br i1 %cmp55, label %land.lhs.true.57, label %if.end.61

land.lhs.true.57:                                 ; preds = %if.then.53
  %53 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %call58 = call i32 @putline(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.105, i32 0, i32 0), %struct.mailer_con_info* %53)
  %tobool59 = icmp ne i32 %call58, 0
  br i1 %tobool59, label %if.end.61, label %if.then.60

if.then.60:                                       ; preds = %land.lhs.true.57
  br label %writeerr

if.end.61:                                        ; preds = %land.lhs.true.57, %if.then.53
  %54 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header62 = getelementptr inbounds %struct.envelope, %struct.envelope* %54, i32 0, i32 0
  %55 = load %struct.header*, %struct.header** %e_header62, align 8, !tbaa !42
  %call63 = call i8* @hvalue(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), %struct.header* %55)
  %cmp64 = icmp eq i8* %call63, null
  br i1 %cmp64, label %if.then.66, label %if.end.74

if.then.66:                                       ; preds = %if.end.61
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %56 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call67 = call i8* @defcharset(%struct.envelope* %56)
  %call68 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay, i64 2048, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.107, i32 0, i32 0), i8* %call67)
  %arraydecay69 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %57 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %call70 = call i32 @putline(i8* %arraydecay69, %struct.mailer_con_info* %57)
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.end.73, label %if.then.72

if.then.72:                                       ; preds = %if.then.66
  br label %writeerr

if.end.73:                                        ; preds = %if.then.66
  br label %if.end.74

if.end.74:                                        ; preds = %if.end.73, %if.end.61
  %arrayidx = getelementptr inbounds [21 x i8*], [21 x i8*]* %boundaries, i32 0, i64 0
  store i8* null, i8** %arrayidx, align 8, !tbaa !1
  %58 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags75 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %58, i32 0, i32 0
  %59 = load i64, i64* %mci_flags75, align 8, !tbaa !71
  %or = or i64 %59, 512
  store i64 %or, i64* %mci_flags75, align 8, !tbaa !71
  %60 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %61 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header76 = getelementptr inbounds %struct.envelope, %struct.envelope* %61, i32 0, i32 0
  %62 = load %struct.header*, %struct.header** %e_header76, align 8, !tbaa !42
  %63 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %arraydecay77 = getelementptr inbounds [21 x i8*], [21 x i8*]* %boundaries, i32 0, i32 0
  %call78 = call i32 @mime8to7(%struct.mailer_con_info* %60, %struct.header* %62, %struct.envelope* %63, i8** %arraydecay77, i32 0, i32 0)
  %cmp79 = icmp eq i32 %call78, -1
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.end.74
  br label %writeerr

if.end.82:                                        ; preds = %if.end.74
  br label %if.end.575

if.else.83:                                       ; preds = %if.end.48
  %64 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags84 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %64, i32 0, i32 0
  %65 = load i64, i64* %mci_flags84, align 8, !tbaa !71
  %and85 = and i64 %65, 8192
  %cmp86 = icmp ne i64 %and85, 0
  br i1 %cmp86, label %if.then.88, label %if.else.94

if.then.88:                                       ; preds = %if.else.83
  %66 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %67 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header89 = getelementptr inbounds %struct.envelope, %struct.envelope* %67, i32 0, i32 0
  %68 = load %struct.header*, %struct.header** %e_header89, align 8, !tbaa !42
  %69 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call90 = call i32 @mime7to8(%struct.mailer_con_info* %66, %struct.header* %68, %struct.envelope* %69)
  %tobool91 = icmp ne i32 %call90, 0
  br i1 %tobool91, label %if.end.93, label %if.then.92

if.then.92:                                       ; preds = %if.then.88
  br label %writeerr

if.end.93:                                        ; preds = %if.then.88
  br label %if.end.574

if.else.94:                                       ; preds = %if.else.83
  %70 = load i32, i32* @MaxMimeHeaderLength, align 4, !tbaa !5
  %cmp95 = icmp sgt i32 %70, 0
  br i1 %cmp95, label %if.then.99, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.94
  %71 = load i32, i32* @MaxMimeFieldLength, align 4, !tbaa !5
  %cmp97 = icmp sgt i32 %71, 0
  br i1 %cmp97, label %if.then.99, label %if.else.116

if.then.99:                                       ; preds = %lor.lhs.false, %if.else.94
  %72 = bitcast i32* %oldsuprerrs to i8*
  call void @llvm.lifetime.start(i64 4, i8* %72) #1
  %73 = load i32, i32* @SuprErrs, align 4, !tbaa !5
  store i32 %73, i32* %oldsuprerrs, align 4, !tbaa !5
  %arrayidx100 = getelementptr inbounds [21 x i8*], [21 x i8*]* %boundaries, i32 0, i64 0
  store i8* null, i8** %arrayidx100, align 8, !tbaa !1
  %74 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags101 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %74, i32 0, i32 0
  %75 = load i64, i64* %mci_flags101, align 8, !tbaa !71
  %or102 = or i64 %75, 512
  store i64 %or102, i64* %mci_flags101, align 8, !tbaa !71
  %76 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags103 = getelementptr inbounds %struct.envelope, %struct.envelope* %76, i32 0, i32 11
  %77 = load i64, i64* %e_flags103, align 8, !tbaa !7
  %and104 = and i64 %77, 8388608
  %cmp105 = icmp ne i64 %and104, 0
  br i1 %cmp105, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %if.then.99
  store i32 1, i32* @SuprErrs, align 4, !tbaa !5
  br label %if.end.108

if.end.108:                                       ; preds = %if.then.107, %if.then.99
  %78 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %79 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header109 = getelementptr inbounds %struct.envelope, %struct.envelope* %79, i32 0, i32 0
  %80 = load %struct.header*, %struct.header** %e_header109, align 8, !tbaa !42
  %81 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %arraydecay110 = getelementptr inbounds [21 x i8*], [21 x i8*]* %boundaries, i32 0, i32 0
  %call111 = call i32 @mime8to7(%struct.mailer_con_info* %78, %struct.header* %80, %struct.envelope* %81, i8** %arraydecay110, i32 4, i32 0)
  %cmp112 = icmp eq i32 %call111, -1
  br i1 %cmp112, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %if.end.108
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.115:                                       ; preds = %if.end.108
  %82 = load i32, i32* %oldsuprerrs, align 4, !tbaa !5
  store i32 %82, i32* @SuprErrs, align 4, !tbaa !5
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.then.114, %if.end.115
  %83 = bitcast i32* %oldsuprerrs to i8*
  call void @llvm.lifetime.end(i64 4, i8* %83) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %cleanup.640 [
    i32 0, label %cleanup.cont
    i32 2, label %writeerr
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end.573

if.else.116:                                      ; preds = %lor.lhs.false
  %84 = bitcast i32* %ostate to i8*
  call void @llvm.lifetime.start(i64 4, i8* %84) #1
  %85 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %85) #1
  %86 = bitcast i8** %pbp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %86) #1
  %87 = bitcast i32* %c to i8*
  call void @llvm.lifetime.start(i64 4, i8* %87) #1
  %88 = bitcast i8** %xp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %88) #1
  %89 = bitcast i32* %padc to i8*
  call void @llvm.lifetime.start(i64 4, i8* %89) #1
  %90 = bitcast i8** %buflim to i8*
  call void @llvm.lifetime.start(i64 8, i8* %90) #1
  %91 = bitcast i32* %pos to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #1
  store i32 0, i32* %pos, align 4, !tbaa !5
  %92 = bitcast [12 x i8]* %peekbuf to i8*
  call void @llvm.lifetime.start(i64 12, i8* %92) #1
  %93 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags117 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %93, i32 0, i32 0
  %94 = load i64, i64* %mci_flags117, align 8, !tbaa !71
  %and118 = and i64 %94, 512
  %cmp119 = icmp ne i64 %and118, 0
  br i1 %cmp119, label %if.then.121, label %if.end.128

if.then.121:                                      ; preds = %if.else.116
  %95 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %call122 = call i32 @putline(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), %struct.mailer_con_info* %95)
  %tobool123 = icmp ne i32 %call122, 0
  br i1 %tobool123, label %if.end.125, label %if.then.124

if.then.124:                                      ; preds = %if.then.121
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.562

if.end.125:                                       ; preds = %if.then.121
  %96 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags126 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %96, i32 0, i32 0
  %97 = load i64, i64* %mci_flags126, align 8, !tbaa !71
  %and127 = and i64 %97, -513
  store i64 %and127, i64* %mci_flags126, align 8, !tbaa !71
  br label %if.end.128

if.end.128:                                       ; preds = %if.end.125, %if.else.116
  %arrayidx129 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 2047
  store i8* %arrayidx129, i8** %buflim, align 8, !tbaa !1
  %98 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %98, i32 0, i32 11
  %99 = load %struct.mailer*, %struct.mailer** %mci_mailer, align 8, !tbaa !79
  %m_linelimit = getelementptr inbounds %struct.mailer, %struct.mailer* %99, i32 0, i32 15
  %100 = load i32, i32* %m_linelimit, align 4, !tbaa !93
  %cmp130 = icmp sgt i32 %100, 0
  br i1 %cmp130, label %land.lhs.true.132, label %if.end.142

land.lhs.true.132:                                ; preds = %if.end.128
  %101 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer133 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %101, i32 0, i32 11
  %102 = load %struct.mailer*, %struct.mailer** %mci_mailer133, align 8, !tbaa !79
  %m_linelimit134 = getelementptr inbounds %struct.mailer, %struct.mailer* %102, i32 0, i32 15
  %103 = load i32, i32* %m_linelimit134, align 4, !tbaa !93
  %conv135 = sext i32 %103 to i64
  %cmp136 = icmp ult i64 %conv135, 2047
  br i1 %cmp136, label %if.then.138, label %if.end.142

if.then.138:                                      ; preds = %land.lhs.true.132
  %104 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer139 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %104, i32 0, i32 11
  %105 = load %struct.mailer*, %struct.mailer** %mci_mailer139, align 8, !tbaa !79
  %m_linelimit140 = getelementptr inbounds %struct.mailer, %struct.mailer* %105, i32 0, i32 15
  %106 = load i32, i32* %m_linelimit140, align 4, !tbaa !93
  %sub = sub nsw i32 %106, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx141 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 %idxprom
  store i8* %arrayidx141, i8** %buflim, align 8, !tbaa !1
  br label %if.end.142

if.end.142:                                       ; preds = %if.then.138, %land.lhs.true.132, %if.end.128
  store i32 0, i32* %ostate, align 4, !tbaa !5
  %arraydecay143 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay143, i8** %bp, align 8, !tbaa !1
  %arraydecay144 = getelementptr inbounds [12 x i8], [12 x i8]* %peekbuf, i32 0, i32 0
  store i8* %arraydecay144, i8** %pbp, align 8, !tbaa !1
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %if.then.496, %if.then.480, %cleanup.462, %if.then.361, %if.end.347, %if.then.339, %if.end.328, %if.then.291, %if.then.272, %if.end.142
  %107 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %107, i32 0, i32 8
  %108 = load %struct.sm_file*, %struct.sm_file** %mci_out, align 8, !tbaa !73
  %f_flags = getelementptr inbounds %struct.sm_file, %struct.sm_file* %108, i32 0, i32 4
  %109 = load i64, i64* %f_flags, align 8, !tbaa !94
  %and145 = and i64 %109, 256
  %cmp146 = icmp ne i64 %and145, 0
  br i1 %cmp146, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %while.cond
  %110 = load i32, i32* %dead, align 4, !tbaa !5
  %tobool148 = icmp ne i32 %110, 0
  %lnot = xor i1 %tobool148, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %111 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %111, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %112 = load i8*, i8** %pbp, align 8, !tbaa !1
  %arraydecay149 = getelementptr inbounds [12 x i8], [12 x i8]* %peekbuf, i32 0, i32 0
  %cmp150 = icmp ugt i8* %112, %arraydecay149
  br i1 %cmp150, label %if.then.152, label %if.else.155

if.then.152:                                      ; preds = %while.body
  %113 = load i8*, i8** %pbp, align 8, !tbaa !1
  %incdec.ptr153 = getelementptr inbounds i8, i8* %113, i32 -1
  store i8* %incdec.ptr153, i8** %pbp, align 8, !tbaa !1
  %114 = load i8, i8* %incdec.ptr153, align 1, !tbaa !15
  %conv154 = sext i8 %114 to i32
  store i32 %conv154, i32* %c, align 4, !tbaa !5
  br label %if.end.162

if.else.155:                                      ; preds = %while.body
  %115 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp156 = getelementptr inbounds %struct.envelope, %struct.envelope* %115, i32 0, i32 24
  %116 = load %struct.sm_file*, %struct.sm_file** %e_dfp156, align 8, !tbaa !44
  %call157 = call i32 @sm_io_getc(%struct.sm_file* %116, i32 -2)
  store i32 %call157, i32* %c, align 4, !tbaa !5
  %cmp158 = icmp eq i32 %call157, -1
  br i1 %cmp158, label %if.then.160, label %if.end.161

if.then.160:                                      ; preds = %if.else.155
  br label %while.end

if.end.161:                                       ; preds = %if.else.155
  br label %if.end.162

if.end.162:                                       ; preds = %if.end.161, %if.then.152
  %117 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_flags163 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %117, i32 0, i32 0
  %118 = load i64, i64* %mci_flags163, align 8, !tbaa !71
  %and164 = and i64 %118, 128
  %cmp165 = icmp ne i64 %and164, 0
  br i1 %cmp165, label %if.then.167, label %if.end.169

if.then.167:                                      ; preds = %if.end.162
  %119 = load i32, i32* %c, align 4, !tbaa !5
  %and168 = and i32 %119, 127
  store i32 %and168, i32* %c, align 4, !tbaa !5
  br label %if.end.169

if.end.169:                                       ; preds = %if.then.167, %if.end.162
  %120 = load i32, i32* %ostate, align 4, !tbaa !5
  switch i32 %120, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb.329
    i32 2, label %sw.bb.358
  ]

sw.bb:                                            ; preds = %if.end.169
  %121 = load i32, i32* %c, align 4, !tbaa !5
  %cmp170 = icmp eq i32 %121, 0
  br i1 %cmp170, label %land.lhs.true.172, label %if.end.178

land.lhs.true.172:                                ; preds = %sw.bb
  %122 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer173 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %122, i32 0, i32 11
  %123 = load %struct.mailer*, %struct.mailer** %mci_mailer173, align 8, !tbaa !79
  %m_flags = getelementptr inbounds %struct.mailer, %struct.mailer* %123, i32 0, i32 5
  %arrayidx174 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags, i32 0, i64 1
  %124 = load i32, i32* %arrayidx174, align 4, !tbaa !5
  %and175 = and i32 %124, 131072
  %tobool176 = icmp ne i32 %and175, 0
  br i1 %tobool176, label %if.then.177, label %if.end.178

if.then.177:                                      ; preds = %land.lhs.true.172
  br label %sw.epilog

if.end.178:                                       ; preds = %land.lhs.true.172, %sw.bb
  %125 = load i32, i32* %c, align 4, !tbaa !5
  %cmp179 = icmp ne i32 %125, 13
  br i1 %cmp179, label %land.lhs.true.181, label %if.end.190

land.lhs.true.181:                                ; preds = %if.end.178
  %126 = load i32, i32* %c, align 4, !tbaa !5
  %cmp182 = icmp ne i32 %126, 10
  br i1 %cmp182, label %land.lhs.true.184, label %if.end.190

land.lhs.true.184:                                ; preds = %land.lhs.true.181
  %127 = load i8*, i8** %bp, align 8, !tbaa !1
  %128 = load i8*, i8** %buflim, align 8, !tbaa !1
  %cmp185 = icmp ult i8* %127, %128
  br i1 %cmp185, label %if.then.187, label %if.end.190

if.then.187:                                      ; preds = %land.lhs.true.184
  %129 = load i32, i32* %c, align 4, !tbaa !5
  %conv188 = trunc i32 %129 to i8
  %130 = load i8*, i8** %bp, align 8, !tbaa !1
  %incdec.ptr189 = getelementptr inbounds i8, i8* %130, i32 1
  store i8* %incdec.ptr189, i8** %bp, align 8, !tbaa !1
  store i8 %conv188, i8* %130, align 1, !tbaa !15
  br label %sw.epilog

if.end.190:                                       ; preds = %land.lhs.true.184, %land.lhs.true.181, %if.end.178
  %131 = load i8*, i8** %bp, align 8, !tbaa !1
  store i8 0, i8* %131, align 1, !tbaa !15
  store i32 0, i32* %pos, align 4, !tbaa !5
  store i32 -1, i32* %padc, align 4, !tbaa !5
  %arrayidx191 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 0
  %132 = load i8, i8* %arrayidx191, align 1, !tbaa !15
  %conv192 = sext i8 %132 to i32
  %cmp193 = icmp eq i32 %conv192, 70
  br i1 %cmp193, label %land.lhs.true.195, label %if.end.207

land.lhs.true.195:                                ; preds = %if.end.190
  %133 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer196 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %133, i32 0, i32 11
  %134 = load %struct.mailer*, %struct.mailer** %mci_mailer196, align 8, !tbaa !79
  %m_flags197 = getelementptr inbounds %struct.mailer, %struct.mailer* %134, i32 0, i32 5
  %arrayidx198 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags197, i32 0, i64 2
  %135 = load i32, i32* %arrayidx198, align 4, !tbaa !5
  %and199 = and i32 %135, 32
  %tobool200 = icmp ne i32 %and199, 0
  br i1 %tobool200, label %land.lhs.true.201, label %if.end.207

land.lhs.true.201:                                ; preds = %land.lhs.true.195
  %arraydecay202 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %call203 = call i32 @strncmp(i8* %arraydecay202, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i32 0, i32 0), i64 5) #12
  %cmp204 = icmp eq i32 %call203, 0
  br i1 %cmp204, label %if.then.206, label %if.end.207

if.then.206:                                      ; preds = %land.lhs.true.201
  store i32 62, i32* %padc, align 4, !tbaa !5
  br label %if.end.207

if.end.207:                                       ; preds = %if.then.206, %land.lhs.true.201, %land.lhs.true.195, %if.end.190
  %arrayidx208 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 0
  %136 = load i8, i8* %arrayidx208, align 1, !tbaa !15
  %conv209 = sext i8 %136 to i32
  %cmp210 = icmp eq i32 %conv209, 45
  br i1 %cmp210, label %land.lhs.true.212, label %if.end.230

land.lhs.true.212:                                ; preds = %if.end.207
  %arrayidx213 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 1
  %137 = load i8, i8* %arrayidx213, align 1, !tbaa !15
  %conv214 = sext i8 %137 to i32
  %cmp215 = icmp eq i32 %conv214, 45
  br i1 %cmp215, label %land.lhs.true.217, label %if.end.230

land.lhs.true.217:                                ; preds = %land.lhs.true.212
  %138 = load i8*, i8** %separator.addr, align 8, !tbaa !1
  %cmp218 = icmp ne i8* %138, null
  br i1 %cmp218, label %if.then.220, label %if.end.230

if.then.220:                                      ; preds = %land.lhs.true.217
  %139 = bitcast i32* %sl to i8*
  call void @llvm.lifetime.start(i64 4, i8* %139) #1
  %140 = load i8*, i8** %separator.addr, align 8, !tbaa !1
  %call221 = call i64 @strlen(i8* %140) #12
  %conv222 = trunc i64 %call221 to i32
  store i32 %conv222, i32* %sl, align 4, !tbaa !5
  %arrayidx223 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 2
  %141 = load i8*, i8** %separator.addr, align 8, !tbaa !1
  %142 = load i32, i32* %sl, align 4, !tbaa !5
  %conv224 = sext i32 %142 to i64
  %call225 = call i32 @strncmp(i8* %arrayidx223, i8* %141, i64 %conv224) #12
  %cmp226 = icmp eq i32 %call225, 0
  br i1 %cmp226, label %if.then.228, label %if.end.229

if.then.228:                                      ; preds = %if.then.220
  store i32 32, i32* %padc, align 4, !tbaa !5
  br label %if.end.229

if.end.229:                                       ; preds = %if.then.228, %if.then.220
  %143 = bitcast i32* %sl to i8*
  call void @llvm.lifetime.end(i64 4, i8* %143) #1
  br label %if.end.230

if.end.230:                                       ; preds = %if.end.229, %land.lhs.true.217, %land.lhs.true.212, %if.end.207
  %arrayidx231 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 0
  %144 = load i8, i8* %arrayidx231, align 1, !tbaa !15
  %conv232 = sext i8 %144 to i32
  %cmp233 = icmp eq i32 %conv232, 46
  br i1 %cmp233, label %land.lhs.true.235, label %if.end.242

land.lhs.true.235:                                ; preds = %if.end.230
  %145 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer236 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %145, i32 0, i32 11
  %146 = load %struct.mailer*, %struct.mailer** %mci_mailer236, align 8, !tbaa !79
  %m_flags237 = getelementptr inbounds %struct.mailer, %struct.mailer* %146, i32 0, i32 5
  %arrayidx238 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags237, i32 0, i64 2
  %147 = load i32, i32* %arrayidx238, align 4, !tbaa !5
  %and239 = and i32 %147, 16777216
  %tobool240 = icmp ne i32 %and239, 0
  br i1 %tobool240, label %if.then.241, label %if.end.242

if.then.241:                                      ; preds = %land.lhs.true.235
  store i32 46, i32* %padc, align 4, !tbaa !5
  br label %if.end.242

if.end.242:                                       ; preds = %if.then.241, %land.lhs.true.235, %if.end.230
  %148 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp243 = icmp ne %struct.sm_file* %148, null
  br i1 %cmp243, label %if.then.245, label %if.end.264

if.then.245:                                      ; preds = %if.end.242
  %149 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %150 = load i32, i32* @CurrentPid, align 4, !tbaa !5
  %call246 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %149, i32 -2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0), i32 %150)
  %151 = load i32, i32* %padc, align 4, !tbaa !5
  %cmp247 = icmp ne i32 %151, -1
  br i1 %cmp247, label %if.then.249, label %if.end.251

if.then.249:                                      ; preds = %if.then.245
  %152 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %153 = load i32, i32* %padc, align 4, !tbaa !5
  %call250 = call i32 @sm_io_putc(%struct.sm_file* %152, i32 -2, i32 %153)
  br label %if.end.251

if.end.251:                                       ; preds = %if.then.249, %if.then.245
  %arraydecay252 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay252, i8** %xp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.251
  %154 = load i8*, i8** %xp, align 8, !tbaa !1
  %155 = load i8*, i8** %bp, align 8, !tbaa !1
  %cmp253 = icmp ult i8* %154, %155
  br i1 %cmp253, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %156 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %157 = load i8*, i8** %xp, align 8, !tbaa !1
  %158 = load i8, i8* %157, align 1, !tbaa !15
  %conv255 = zext i8 %158 to i32
  %call256 = call i32 @sm_io_putc(%struct.sm_file* %156, i32 -2, i32 %conv255)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %159 = load i8*, i8** %xp, align 8, !tbaa !1
  %incdec.ptr257 = getelementptr inbounds i8, i8* %159, i32 1
  store i8* %incdec.ptr257, i8** %xp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %160 = load i32, i32* %c, align 4, !tbaa !5
  %cmp258 = icmp eq i32 %160, 10
  br i1 %cmp258, label %if.then.260, label %if.end.263

if.then.260:                                      ; preds = %for.end
  %161 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %162 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer261 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %162, i32 0, i32 11
  %163 = load %struct.mailer*, %struct.mailer** %mci_mailer261, align 8, !tbaa !79
  %m_eol = getelementptr inbounds %struct.mailer, %struct.mailer* %163, i32 0, i32 13
  %164 = load i8*, i8** %m_eol, align 8, !tbaa !97
  %call262 = call i32 @sm_io_fputs(%struct.sm_file* %161, i32 -2, i8* %164)
  br label %if.end.263

if.end.263:                                       ; preds = %if.then.260, %for.end
  br label %if.end.264

if.end.264:                                       ; preds = %if.end.263, %if.end.242
  %165 = load i32, i32* %padc, align 4, !tbaa !5
  %cmp265 = icmp ne i32 %165, -1
  br i1 %cmp265, label %if.then.267, label %if.end.274

if.then.267:                                      ; preds = %if.end.264
  %166 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out268 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %166, i32 0, i32 8
  %167 = load %struct.sm_file*, %struct.sm_file** %mci_out268, align 8, !tbaa !73
  %168 = load i32, i32* %padc, align 4, !tbaa !5
  %call269 = call i32 @sm_io_putc(%struct.sm_file* %167, i32 -2, i32 %168)
  %cmp270 = icmp eq i32 %call269, -1
  br i1 %cmp270, label %if.then.272, label %if.end.273

if.then.272:                                      ; preds = %if.then.267
  store i32 1, i32* %dead, align 4, !tbaa !5
  br label %while.cond

if.end.273:                                       ; preds = %if.then.267
  %169 = load i32, i32* %pos, align 4, !tbaa !5
  %inc = add nsw i32 %169, 1
  store i32 %inc, i32* %pos, align 4, !tbaa !5
  br label %if.end.274

if.end.274:                                       ; preds = %if.end.273, %if.end.264
  %arraydecay275 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay275, i8** %xp, align 8, !tbaa !1
  br label %for.cond.276

for.cond.276:                                     ; preds = %for.inc.287, %if.end.274
  %170 = load i8*, i8** %xp, align 8, !tbaa !1
  %171 = load i8*, i8** %bp, align 8, !tbaa !1
  %cmp277 = icmp ult i8* %170, %171
  br i1 %cmp277, label %for.body.279, label %for.end.289

for.body.279:                                     ; preds = %for.cond.276
  %172 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out280 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %172, i32 0, i32 8
  %173 = load %struct.sm_file*, %struct.sm_file** %mci_out280, align 8, !tbaa !73
  %174 = load i8*, i8** %xp, align 8, !tbaa !1
  %175 = load i8, i8* %174, align 1, !tbaa !15
  %conv281 = zext i8 %175 to i32
  %call282 = call i32 @sm_io_putc(%struct.sm_file* %173, i32 -2, i32 %conv281)
  %cmp283 = icmp eq i32 %call282, -1
  br i1 %cmp283, label %if.then.285, label %if.end.286

if.then.285:                                      ; preds = %for.body.279
  store i32 1, i32* %dead, align 4, !tbaa !5
  br label %for.end.289

if.end.286:                                       ; preds = %for.body.279
  br label %for.inc.287

for.inc.287:                                      ; preds = %if.end.286
  %176 = load i8*, i8** %xp, align 8, !tbaa !1
  %incdec.ptr288 = getelementptr inbounds i8, i8* %176, i32 1
  store i8* %incdec.ptr288, i8** %xp, align 8, !tbaa !1
  br label %for.cond.276

for.end.289:                                      ; preds = %if.then.285, %for.cond.276
  %177 = load i32, i32* %dead, align 4, !tbaa !5
  %tobool290 = icmp ne i32 %177, 0
  br i1 %tobool290, label %if.then.291, label %if.end.292

if.then.291:                                      ; preds = %for.end.289
  br label %while.cond

if.end.292:                                       ; preds = %for.end.289
  %178 = load i32, i32* %c, align 4, !tbaa !5
  %cmp293 = icmp eq i32 %178, 10
  br i1 %cmp293, label %if.then.295, label %if.else.304

if.then.295:                                      ; preds = %if.end.292
  %179 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out296 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %179, i32 0, i32 8
  %180 = load %struct.sm_file*, %struct.sm_file** %mci_out296, align 8, !tbaa !73
  %181 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer297 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %181, i32 0, i32 11
  %182 = load %struct.mailer*, %struct.mailer** %mci_mailer297, align 8, !tbaa !79
  %m_eol298 = getelementptr inbounds %struct.mailer, %struct.mailer* %182, i32 0, i32 13
  %183 = load i8*, i8** %m_eol298, align 8, !tbaa !97
  %call299 = call i32 @sm_io_fputs(%struct.sm_file* %180, i32 -2, i8* %183)
  %cmp300 = icmp eq i32 %call299, -1
  br i1 %cmp300, label %if.then.302, label %if.end.303

if.then.302:                                      ; preds = %if.then.295
  br label %sw.epilog

if.end.303:                                       ; preds = %if.then.295
  store i32 0, i32* %pos, align 4, !tbaa !5
  br label %if.end.317

if.else.304:                                      ; preds = %if.end.292
  %184 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay305 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast = ptrtoint i8* %184 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay305 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %185 = load i32, i32* %pos, align 4, !tbaa !5
  %conv306 = sext i32 %185 to i64
  %add = add nsw i64 %conv306, %sub.ptr.sub
  %conv307 = trunc i64 %add to i32
  store i32 %conv307, i32* %pos, align 4, !tbaa !5
  %186 = load i32, i32* %c, align 4, !tbaa !5
  %cmp308 = icmp ne i32 %186, 13
  br i1 %cmp308, label %if.then.310, label %if.end.316

if.then.310:                                      ; preds = %if.else.304
  %187 = load i8*, i8** %pbp, align 8, !tbaa !1
  %arraydecay311 = getelementptr inbounds [12 x i8], [12 x i8]* %peekbuf, i32 0, i32 0
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay311, i64 12
  %cmp312 = icmp ult i8* %187, %add.ptr
  br i1 %cmp312, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.then.310
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 4890, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.110, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end

lor.end:                                          ; preds = %188, %if.then.310
  %189 = phi i1 [ true, %if.then.310 ], [ false, %188 ]
  %lor.ext = zext i1 %189 to i32
  %190 = load i32, i32* %c, align 4, !tbaa !5
  %conv314 = trunc i32 %190 to i8
  %191 = load i8*, i8** %pbp, align 8, !tbaa !1
  %incdec.ptr315 = getelementptr inbounds i8, i8* %191, i32 1
  store i8* %incdec.ptr315, i8** %pbp, align 8, !tbaa !1
  store i8 %conv314, i8* %191, align 1, !tbaa !15
  br label %if.end.316

if.end.316:                                       ; preds = %lor.end, %if.else.304
  br label %if.end.317

if.end.317:                                       ; preds = %if.end.316, %if.end.303
  %arraydecay318 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay318, i8** %bp, align 8, !tbaa !1
  %192 = load i32, i32* %c, align 4, !tbaa !5
  %cmp319 = icmp eq i32 %192, 10
  br i1 %cmp319, label %if.then.321, label %if.else.322

if.then.321:                                      ; preds = %if.end.317
  store i32 0, i32* %ostate, align 4, !tbaa !5
  br label %if.end.328

if.else.322:                                      ; preds = %if.end.317
  %193 = load i32, i32* %c, align 4, !tbaa !5
  %cmp323 = icmp eq i32 %193, 13
  br i1 %cmp323, label %if.then.325, label %if.else.326

if.then.325:                                      ; preds = %if.else.322
  store i32 1, i32* %ostate, align 4, !tbaa !5
  br label %if.end.327

if.else.326:                                      ; preds = %if.else.322
  store i32 2, i32* %ostate, align 4, !tbaa !5
  br label %if.end.327

if.end.327:                                       ; preds = %if.else.326, %if.then.325
  br label %if.end.328

if.end.328:                                       ; preds = %if.end.327, %if.then.321
  br label %while.cond

sw.bb.329:                                        ; preds = %if.end.169
  %194 = load i32, i32* %c, align 4, !tbaa !5
  %cmp330 = icmp eq i32 %194, 10
  br i1 %cmp330, label %if.then.332, label %if.end.348

if.then.332:                                      ; preds = %sw.bb.329
  %195 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out333 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %195, i32 0, i32 8
  %196 = load %struct.sm_file*, %struct.sm_file** %mci_out333, align 8, !tbaa !73
  %197 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer334 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %197, i32 0, i32 11
  %198 = load %struct.mailer*, %struct.mailer** %mci_mailer334, align 8, !tbaa !79
  %m_eol335 = getelementptr inbounds %struct.mailer, %struct.mailer* %198, i32 0, i32 13
  %199 = load i8*, i8** %m_eol335, align 8, !tbaa !97
  %call336 = call i32 @sm_io_fputs(%struct.sm_file* %196, i32 -2, i8* %199)
  %cmp337 = icmp eq i32 %call336, -1
  br i1 %cmp337, label %if.then.339, label %if.end.340

if.then.339:                                      ; preds = %if.then.332
  br label %while.cond

if.end.340:                                       ; preds = %if.then.332
  %200 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp341 = icmp ne %struct.sm_file* %200, null
  br i1 %cmp341, label %if.then.343, label %if.end.347

if.then.343:                                      ; preds = %if.end.340
  %201 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %202 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer344 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %202, i32 0, i32 11
  %203 = load %struct.mailer*, %struct.mailer** %mci_mailer344, align 8, !tbaa !79
  %m_eol345 = getelementptr inbounds %struct.mailer, %struct.mailer* %203, i32 0, i32 13
  %204 = load i8*, i8** %m_eol345, align 8, !tbaa !97
  %call346 = call i32 @sm_io_fputs(%struct.sm_file* %201, i32 -2, i8* %204)
  br label %if.end.347

if.end.347:                                       ; preds = %if.then.343, %if.end.340
  store i32 0, i32* %pos, align 4, !tbaa !5
  store i32 0, i32* %ostate, align 4, !tbaa !5
  br label %while.cond

if.end.348:                                       ; preds = %sw.bb.329
  %205 = load i8*, i8** %pbp, align 8, !tbaa !1
  %arraydecay349 = getelementptr inbounds [12 x i8], [12 x i8]* %peekbuf, i32 0, i32 0
  %add.ptr350 = getelementptr inbounds i8, i8* %arraydecay349, i64 12
  %cmp351 = icmp ult i8* %205, %add.ptr350
  br i1 %cmp351, label %lor.end.354, label %lor.rhs.353

lor.rhs.353:                                      ; preds = %if.end.348
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 4928, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.110, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.354

lor.end.354:                                      ; preds = %206, %if.end.348
  %207 = phi i1 [ true, %if.end.348 ], [ false, %206 ]
  %lor.ext355 = zext i1 %207 to i32
  %208 = load i32, i32* %c, align 4, !tbaa !5
  %conv356 = trunc i32 %208 to i8
  %209 = load i8*, i8** %pbp, align 8, !tbaa !1
  %incdec.ptr357 = getelementptr inbounds i8, i8* %209, i32 1
  store i8* %incdec.ptr357, i8** %pbp, align 8, !tbaa !1
  store i8 %conv356, i8* %209, align 1, !tbaa !15
  store i32 13, i32* %c, align 4, !tbaa !5
  store i32 2, i32* %ostate, align 4, !tbaa !5
  br label %putch

sw.bb.358:                                        ; preds = %if.end.169
  %210 = load i32, i32* %c, align 4, !tbaa !5
  %cmp359 = icmp eq i32 %210, 13
  br i1 %cmp359, label %if.then.361, label %if.end.362

if.then.361:                                      ; preds = %sw.bb.358
  store i32 1, i32* %ostate, align 4, !tbaa !5
  br label %while.cond

if.end.362:                                       ; preds = %sw.bb.358
  %211 = load i32, i32* %c, align 4, !tbaa !5
  %cmp363 = icmp eq i32 %211, 0
  br i1 %cmp363, label %land.lhs.true.365, label %if.end.372

land.lhs.true.365:                                ; preds = %if.end.362
  %212 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer366 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %212, i32 0, i32 11
  %213 = load %struct.mailer*, %struct.mailer** %mci_mailer366, align 8, !tbaa !79
  %m_flags367 = getelementptr inbounds %struct.mailer, %struct.mailer* %213, i32 0, i32 5
  %arrayidx368 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags367, i32 0, i64 1
  %214 = load i32, i32* %arrayidx368, align 4, !tbaa !5
  %and369 = and i32 %214, 131072
  %tobool370 = icmp ne i32 %and369, 0
  br i1 %tobool370, label %if.then.371, label %if.end.372

if.then.371:                                      ; preds = %land.lhs.true.365
  br label %sw.epilog

if.end.372:                                       ; preds = %land.lhs.true.365, %if.end.362
  br label %putch

putch:                                            ; preds = %if.end.372, %lor.end.354
  %215 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer373 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %215, i32 0, i32 11
  %216 = load %struct.mailer*, %struct.mailer** %mci_mailer373, align 8, !tbaa !79
  %m_linelimit374 = getelementptr inbounds %struct.mailer, %struct.mailer* %216, i32 0, i32 15
  %217 = load i32, i32* %m_linelimit374, align 4, !tbaa !93
  %cmp375 = icmp sgt i32 %217, 0
  br i1 %cmp375, label %land.lhs.true.377, label %if.end.463

land.lhs.true.377:                                ; preds = %putch
  %218 = load i32, i32* %pos, align 4, !tbaa !5
  %219 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer378 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %219, i32 0, i32 11
  %220 = load %struct.mailer*, %struct.mailer** %mci_mailer378, align 8, !tbaa !79
  %m_linelimit379 = getelementptr inbounds %struct.mailer, %struct.mailer* %220, i32 0, i32 15
  %221 = load i32, i32* %m_linelimit379, align 4, !tbaa !93
  %sub380 = sub nsw i32 %221, 1
  %cmp381 = icmp sge i32 %218, %sub380
  br i1 %cmp381, label %land.lhs.true.383, label %if.end.463

land.lhs.true.383:                                ; preds = %land.lhs.true.377
  %222 = load i32, i32* %c, align 4, !tbaa !5
  %cmp384 = icmp ne i32 %222, 10
  br i1 %cmp384, label %if.then.386, label %if.end.463

if.then.386:                                      ; preds = %land.lhs.true.383
  %223 = bitcast i32* %d to i8*
  call void @llvm.lifetime.start(i64 4, i8* %223) #1
  %224 = load i8*, i8** %pbp, align 8, !tbaa !1
  %arraydecay387 = getelementptr inbounds [12 x i8], [12 x i8]* %peekbuf, i32 0, i32 0
  %cmp388 = icmp ugt i8* %224, %arraydecay387
  br i1 %cmp388, label %if.then.390, label %if.else.393

if.then.390:                                      ; preds = %if.then.386
  %225 = load i8*, i8** %pbp, align 8, !tbaa !1
  %add.ptr391 = getelementptr inbounds i8, i8* %225, i64 -1
  %226 = load i8, i8* %add.ptr391, align 1, !tbaa !15
  %conv392 = sext i8 %226 to i32
  store i32 %conv392, i32* %d, align 4, !tbaa !5
  br label %if.end.409

if.else.393:                                      ; preds = %if.then.386
  %227 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp394 = getelementptr inbounds %struct.envelope, %struct.envelope* %227, i32 0, i32 24
  %228 = load %struct.sm_file*, %struct.sm_file** %e_dfp394, align 8, !tbaa !44
  %call395 = call i32 @sm_io_getc(%struct.sm_file* %228, i32 -2)
  store i32 %call395, i32* %d, align 4, !tbaa !5
  %cmp396 = icmp ne i32 %call395, -1
  br i1 %cmp396, label %if.then.398, label %if.end.408

if.then.398:                                      ; preds = %if.else.393
  %229 = load i8*, i8** %pbp, align 8, !tbaa !1
  %arraydecay399 = getelementptr inbounds [12 x i8], [12 x i8]* %peekbuf, i32 0, i32 0
  %add.ptr400 = getelementptr inbounds i8, i8* %arraydecay399, i64 12
  %cmp401 = icmp ult i8* %229, %add.ptr400
  br i1 %cmp401, label %lor.end.404, label %lor.rhs.403

lor.rhs.403:                                      ; preds = %if.then.398
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 4959, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.110, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.404

lor.end.404:                                      ; preds = %230, %if.then.398
  %231 = phi i1 [ true, %if.then.398 ], [ false, %230 ]
  %lor.ext405 = zext i1 %231 to i32
  %232 = load i32, i32* %d, align 4, !tbaa !5
  %conv406 = trunc i32 %232 to i8
  %233 = load i8*, i8** %pbp, align 8, !tbaa !1
  %incdec.ptr407 = getelementptr inbounds i8, i8* %233, i32 1
  store i8* %incdec.ptr407, i8** %pbp, align 8, !tbaa !1
  store i8 %conv406, i8* %233, align 1, !tbaa !15
  br label %if.end.408

if.end.408:                                       ; preds = %lor.end.404, %if.else.393
  br label %if.end.409

if.end.409:                                       ; preds = %if.end.408, %if.then.390
  %234 = load i32, i32* %d, align 4, !tbaa !5
  %cmp410 = icmp eq i32 %234, 10
  br i1 %cmp410, label %if.then.415, label %lor.lhs.false.412

lor.lhs.false.412:                                ; preds = %if.end.409
  %235 = load i32, i32* %d, align 4, !tbaa !5
  %cmp413 = icmp eq i32 %235, -1
  br i1 %cmp413, label %if.then.415, label %if.end.432

if.then.415:                                      ; preds = %lor.lhs.false.412, %if.end.409
  %236 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp416 = icmp ne %struct.sm_file* %236, null
  br i1 %cmp416, label %if.then.418, label %if.end.422

if.then.418:                                      ; preds = %if.then.415
  %237 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %238 = load i32, i32* %c, align 4, !tbaa !5
  %conv419 = trunc i32 %238 to i8
  %conv420 = zext i8 %conv419 to i32
  %call421 = call i32 @sm_io_putc(%struct.sm_file* %237, i32 -2, i32 %conv420)
  br label %if.end.422

if.end.422:                                       ; preds = %if.then.418, %if.then.415
  %239 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out423 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %239, i32 0, i32 8
  %240 = load %struct.sm_file*, %struct.sm_file** %mci_out423, align 8, !tbaa !73
  %241 = load i32, i32* %c, align 4, !tbaa !5
  %conv424 = trunc i32 %241 to i8
  %conv425 = zext i8 %conv424 to i32
  %call426 = call i32 @sm_io_putc(%struct.sm_file* %240, i32 -2, i32 %conv425)
  %cmp427 = icmp eq i32 %call426, -1
  br i1 %cmp427, label %if.then.429, label %if.end.430

if.then.429:                                      ; preds = %if.end.422
  store i32 1, i32* %dead, align 4, !tbaa !5
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.462

if.end.430:                                       ; preds = %if.end.422
  %242 = load i32, i32* %pos, align 4, !tbaa !5
  %inc431 = add nsw i32 %242, 1
  store i32 %inc431, i32* %pos, align 4, !tbaa !5
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.462

if.end.432:                                       ; preds = %lor.lhs.false.412
  %243 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out433 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %243, i32 0, i32 8
  %244 = load %struct.sm_file*, %struct.sm_file** %mci_out433, align 8, !tbaa !73
  %call434 = call i32 @sm_io_putc(%struct.sm_file* %244, i32 -2, i32 33)
  %cmp435 = icmp eq i32 %call434, -1
  br i1 %cmp435, label %if.then.444, label %lor.lhs.false.437

lor.lhs.false.437:                                ; preds = %if.end.432
  %245 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out438 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %245, i32 0, i32 8
  %246 = load %struct.sm_file*, %struct.sm_file** %mci_out438, align 8, !tbaa !73
  %247 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer439 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %247, i32 0, i32 11
  %248 = load %struct.mailer*, %struct.mailer** %mci_mailer439, align 8, !tbaa !79
  %m_eol440 = getelementptr inbounds %struct.mailer, %struct.mailer* %248, i32 0, i32 13
  %249 = load i8*, i8** %m_eol440, align 8, !tbaa !97
  %call441 = call i32 @sm_io_fputs(%struct.sm_file* %246, i32 -2, i8* %249)
  %cmp442 = icmp eq i32 %call441, -1
  br i1 %cmp442, label %if.then.444, label %if.end.445

if.then.444:                                      ; preds = %lor.lhs.false.437, %if.end.432
  store i32 1, i32* %dead, align 4, !tbaa !5
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.462

if.end.445:                                       ; preds = %lor.lhs.false.437
  %250 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp446 = icmp ne %struct.sm_file* %250, null
  br i1 %cmp446, label %if.then.448, label %if.end.452

if.then.448:                                      ; preds = %if.end.445
  %251 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %252 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer449 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %252, i32 0, i32 11
  %253 = load %struct.mailer*, %struct.mailer** %mci_mailer449, align 8, !tbaa !79
  %m_eol450 = getelementptr inbounds %struct.mailer, %struct.mailer* %253, i32 0, i32 13
  %254 = load i8*, i8** %m_eol450, align 8, !tbaa !97
  %call451 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %251, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.111, i32 0, i32 0), i8* %254)
  br label %if.end.452

if.end.452:                                       ; preds = %if.then.448, %if.end.445
  store i32 0, i32* %ostate, align 4, !tbaa !5
  %255 = load i8*, i8** %pbp, align 8, !tbaa !1
  %arraydecay453 = getelementptr inbounds [12 x i8], [12 x i8]* %peekbuf, i32 0, i32 0
  %add.ptr454 = getelementptr inbounds i8, i8* %arraydecay453, i64 12
  %cmp455 = icmp ult i8* %255, %add.ptr454
  br i1 %cmp455, label %lor.end.458, label %lor.rhs.457

lor.rhs.457:                                      ; preds = %if.end.452
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 5002, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.110, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.458

lor.end.458:                                      ; preds = %256, %if.end.452
  %257 = phi i1 [ true, %if.end.452 ], [ false, %256 ]
  %lor.ext459 = zext i1 %257 to i32
  %258 = load i32, i32* %c, align 4, !tbaa !5
  %conv460 = trunc i32 %258 to i8
  %259 = load i8*, i8** %pbp, align 8, !tbaa !1
  %incdec.ptr461 = getelementptr inbounds i8, i8* %259, i32 1
  store i8* %incdec.ptr461, i8** %pbp, align 8, !tbaa !1
  store i8 %conv460, i8* %259, align 1, !tbaa !15
  store i32 4, i32* %cleanup.dest.slot
  br label %cleanup.462

cleanup.462:                                      ; preds = %lor.end.458, %if.then.444, %if.end.430, %if.then.429
  %260 = bitcast i32* %d to i8*
  call void @llvm.lifetime.end(i64 4, i8* %260) #1
  br label %while.cond

if.end.463:                                       ; preds = %land.lhs.true.383, %land.lhs.true.377, %putch
  %261 = load i32, i32* %c, align 4, !tbaa !5
  %cmp464 = icmp eq i32 %261, 10
  br i1 %cmp464, label %if.then.466, label %if.else.482

if.then.466:                                      ; preds = %if.end.463
  %262 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp467 = icmp ne %struct.sm_file* %262, null
  br i1 %cmp467, label %if.then.469, label %if.end.473

if.then.469:                                      ; preds = %if.then.466
  %263 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %264 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer470 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %264, i32 0, i32 11
  %265 = load %struct.mailer*, %struct.mailer** %mci_mailer470, align 8, !tbaa !79
  %m_eol471 = getelementptr inbounds %struct.mailer, %struct.mailer* %265, i32 0, i32 13
  %266 = load i8*, i8** %m_eol471, align 8, !tbaa !97
  %call472 = call i32 @sm_io_fputs(%struct.sm_file* %263, i32 -2, i8* %266)
  br label %if.end.473

if.end.473:                                       ; preds = %if.then.469, %if.then.466
  %267 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out474 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %267, i32 0, i32 8
  %268 = load %struct.sm_file*, %struct.sm_file** %mci_out474, align 8, !tbaa !73
  %269 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer475 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %269, i32 0, i32 11
  %270 = load %struct.mailer*, %struct.mailer** %mci_mailer475, align 8, !tbaa !79
  %m_eol476 = getelementptr inbounds %struct.mailer, %struct.mailer* %270, i32 0, i32 13
  %271 = load i8*, i8** %m_eol476, align 8, !tbaa !97
  %call477 = call i32 @sm_io_fputs(%struct.sm_file* %268, i32 -2, i8* %271)
  %cmp478 = icmp eq i32 %call477, -1
  br i1 %cmp478, label %if.then.480, label %if.end.481

if.then.480:                                      ; preds = %if.end.473
  br label %while.cond

if.end.481:                                       ; preds = %if.end.473
  store i32 0, i32* %pos, align 4, !tbaa !5
  store i32 0, i32* %ostate, align 4, !tbaa !5
  br label %if.end.499

if.else.482:                                      ; preds = %if.end.463
  %272 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp483 = icmp ne %struct.sm_file* %272, null
  br i1 %cmp483, label %if.then.485, label %if.end.489

if.then.485:                                      ; preds = %if.else.482
  %273 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %274 = load i32, i32* %c, align 4, !tbaa !5
  %conv486 = trunc i32 %274 to i8
  %conv487 = zext i8 %conv486 to i32
  %call488 = call i32 @sm_io_putc(%struct.sm_file* %273, i32 -2, i32 %conv487)
  br label %if.end.489

if.end.489:                                       ; preds = %if.then.485, %if.else.482
  %275 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out490 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %275, i32 0, i32 8
  %276 = load %struct.sm_file*, %struct.sm_file** %mci_out490, align 8, !tbaa !73
  %277 = load i32, i32* %c, align 4, !tbaa !5
  %conv491 = trunc i32 %277 to i8
  %conv492 = zext i8 %conv491 to i32
  %call493 = call i32 @sm_io_putc(%struct.sm_file* %276, i32 -2, i32 %conv492)
  %cmp494 = icmp eq i32 %call493, -1
  br i1 %cmp494, label %if.then.496, label %if.end.497

if.then.496:                                      ; preds = %if.end.489
  store i32 1, i32* %dead, align 4, !tbaa !5
  br label %while.cond

if.end.497:                                       ; preds = %if.end.489
  %278 = load i32, i32* %pos, align 4, !tbaa !5
  %inc498 = add nsw i32 %278, 1
  store i32 %inc498, i32* %pos, align 4, !tbaa !5
  store i32 2, i32* %ostate, align 4, !tbaa !5
  br label %if.end.499

if.end.499:                                       ; preds = %if.end.497, %if.end.481
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.169, %if.end.499, %if.then.371, %if.then.302, %if.then.187, %if.then.177
  br label %while.cond

while.end:                                        ; preds = %if.then.160, %land.end
  %279 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay500 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %cmp501 = icmp ugt i8* %279, %arraydecay500
  br i1 %cmp501, label %if.then.503, label %if.end.540

if.then.503:                                      ; preds = %while.end
  %280 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp504 = icmp ne %struct.sm_file* %280, null
  br i1 %cmp504, label %if.then.506, label %if.end.517

if.then.506:                                      ; preds = %if.then.503
  %arraydecay507 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay507, i8** %xp, align 8, !tbaa !1
  br label %for.cond.508

for.cond.508:                                     ; preds = %for.inc.514, %if.then.506
  %281 = load i8*, i8** %xp, align 8, !tbaa !1
  %282 = load i8*, i8** %bp, align 8, !tbaa !1
  %cmp509 = icmp ult i8* %281, %282
  br i1 %cmp509, label %for.body.511, label %for.end.516

for.body.511:                                     ; preds = %for.cond.508
  %283 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %284 = load i8*, i8** %xp, align 8, !tbaa !1
  %285 = load i8, i8* %284, align 1, !tbaa !15
  %conv512 = zext i8 %285 to i32
  %call513 = call i32 @sm_io_putc(%struct.sm_file* %283, i32 -2, i32 %conv512)
  br label %for.inc.514

for.inc.514:                                      ; preds = %for.body.511
  %286 = load i8*, i8** %xp, align 8, !tbaa !1
  %incdec.ptr515 = getelementptr inbounds i8, i8* %286, i32 1
  store i8* %incdec.ptr515, i8** %xp, align 8, !tbaa !1
  br label %for.cond.508

for.end.516:                                      ; preds = %for.cond.508
  br label %if.end.517

if.end.517:                                       ; preds = %for.end.516, %if.then.503
  %arraydecay518 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay518, i8** %xp, align 8, !tbaa !1
  br label %for.cond.519

for.cond.519:                                     ; preds = %for.inc.530, %if.end.517
  %287 = load i8*, i8** %xp, align 8, !tbaa !1
  %288 = load i8*, i8** %bp, align 8, !tbaa !1
  %cmp520 = icmp ult i8* %287, %288
  br i1 %cmp520, label %for.body.522, label %for.end.532

for.body.522:                                     ; preds = %for.cond.519
  %289 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out523 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %289, i32 0, i32 8
  %290 = load %struct.sm_file*, %struct.sm_file** %mci_out523, align 8, !tbaa !73
  %291 = load i8*, i8** %xp, align 8, !tbaa !1
  %292 = load i8, i8* %291, align 1, !tbaa !15
  %conv524 = zext i8 %292 to i32
  %call525 = call i32 @sm_io_putc(%struct.sm_file* %290, i32 -2, i32 %conv524)
  %cmp526 = icmp eq i32 %call525, -1
  br i1 %cmp526, label %if.then.528, label %if.end.529

if.then.528:                                      ; preds = %for.body.522
  store i32 1, i32* %dead, align 4, !tbaa !5
  br label %for.end.532

if.end.529:                                       ; preds = %for.body.522
  br label %for.inc.530

for.inc.530:                                      ; preds = %if.end.529
  %293 = load i8*, i8** %xp, align 8, !tbaa !1
  %incdec.ptr531 = getelementptr inbounds i8, i8* %293, i32 1
  store i8* %incdec.ptr531, i8** %xp, align 8, !tbaa !1
  br label %for.cond.519

for.end.532:                                      ; preds = %if.then.528, %for.cond.519
  %294 = load i8*, i8** %bp, align 8, !tbaa !1
  %arraydecay533 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast534 = ptrtoint i8* %294 to i64
  %sub.ptr.rhs.cast535 = ptrtoint i8* %arraydecay533 to i64
  %sub.ptr.sub536 = sub i64 %sub.ptr.lhs.cast534, %sub.ptr.rhs.cast535
  %295 = load i32, i32* %pos, align 4, !tbaa !5
  %conv537 = sext i32 %295 to i64
  %add538 = add nsw i64 %conv537, %sub.ptr.sub536
  %conv539 = trunc i64 %add538 to i32
  store i32 %conv539, i32* %pos, align 4, !tbaa !5
  br label %if.end.540

if.end.540:                                       ; preds = %for.end.532, %while.end
  %296 = load i32, i32* %dead, align 4, !tbaa !5
  %tobool541 = icmp ne i32 %296, 0
  br i1 %tobool541, label %if.end.561, label %land.lhs.true.542

land.lhs.true.542:                                ; preds = %if.end.540
  %297 = load i32, i32* %pos, align 4, !tbaa !5
  %cmp543 = icmp sgt i32 %297, 0
  br i1 %cmp543, label %if.then.545, label %if.end.561

if.then.545:                                      ; preds = %land.lhs.true.542
  %298 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp546 = icmp ne %struct.sm_file* %298, null
  br i1 %cmp546, label %if.then.548, label %if.end.552

if.then.548:                                      ; preds = %if.then.545
  %299 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %300 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer549 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %300, i32 0, i32 11
  %301 = load %struct.mailer*, %struct.mailer** %mci_mailer549, align 8, !tbaa !79
  %m_eol550 = getelementptr inbounds %struct.mailer, %struct.mailer* %301, i32 0, i32 13
  %302 = load i8*, i8** %m_eol550, align 8, !tbaa !97
  %call551 = call i32 @sm_io_fputs(%struct.sm_file* %299, i32 -2, i8* %302)
  br label %if.end.552

if.end.552:                                       ; preds = %if.then.548, %if.then.545
  %303 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out553 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %303, i32 0, i32 8
  %304 = load %struct.sm_file*, %struct.sm_file** %mci_out553, align 8, !tbaa !73
  %305 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer554 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %305, i32 0, i32 11
  %306 = load %struct.mailer*, %struct.mailer** %mci_mailer554, align 8, !tbaa !79
  %m_eol555 = getelementptr inbounds %struct.mailer, %struct.mailer* %306, i32 0, i32 13
  %307 = load i8*, i8** %m_eol555, align 8, !tbaa !97
  %call556 = call i32 @sm_io_fputs(%struct.sm_file* %304, i32 -2, i8* %307)
  %cmp557 = icmp eq i32 %call556, -1
  br i1 %cmp557, label %if.then.559, label %if.end.560

if.then.559:                                      ; preds = %if.end.552
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup.562

if.end.560:                                       ; preds = %if.end.552
  br label %if.end.561

if.end.561:                                       ; preds = %if.end.560, %land.lhs.true.542, %if.end.540
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.562

cleanup.562:                                      ; preds = %if.then.559, %if.then.124, %if.end.561
  %308 = bitcast [12 x i8]* %peekbuf to i8*
  call void @llvm.lifetime.end(i64 12, i8* %308) #1
  %309 = bitcast i32* %pos to i8*
  call void @llvm.lifetime.end(i64 4, i8* %309) #1
  %310 = bitcast i8** %buflim to i8*
  call void @llvm.lifetime.end(i64 8, i8* %310) #1
  %311 = bitcast i32* %padc to i8*
  call void @llvm.lifetime.end(i64 4, i8* %311) #1
  %312 = bitcast i8** %xp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %312) #1
  %313 = bitcast i32* %c to i8*
  call void @llvm.lifetime.end(i64 4, i8* %313) #1
  %314 = bitcast i8** %pbp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %314) #1
  %315 = bitcast i8** %bp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %315) #1
  %316 = bitcast i32* %ostate to i8*
  call void @llvm.lifetime.end(i64 4, i8* %316) #1
  %cleanup.dest.571 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.571, label %cleanup.640 [
    i32 0, label %cleanup.cont.572
    i32 2, label %writeerr
  ]

cleanup.cont.572:                                 ; preds = %cleanup.562
  br label %if.end.573

if.end.573:                                       ; preds = %cleanup.cont.572, %cleanup.cont
  br label %if.end.574

if.end.574:                                       ; preds = %if.end.573, %if.end.93
  br label %if.end.575

if.end.575:                                       ; preds = %if.end.574, %if.end.82
  %317 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp576 = getelementptr inbounds %struct.envelope, %struct.envelope* %317, i32 0, i32 24
  %318 = load %struct.sm_file*, %struct.sm_file** %e_dfp576, align 8, !tbaa !44
  %f_flags577 = getelementptr inbounds %struct.sm_file, %struct.sm_file* %318, i32 0, i32 4
  %319 = load i64, i64* %f_flags577, align 8, !tbaa !94
  %and578 = and i64 %319, 256
  %cmp579 = icmp ne i64 %and578, 0
  br i1 %cmp579, label %if.then.581, label %if.end.583

if.then.581:                                      ; preds = %if.end.575
  %320 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfqgrp = getelementptr inbounds %struct.envelope, %struct.envelope* %320, i32 0, i32 28
  %321 = load i32, i32* %e_dfqgrp, align 4, !tbaa !98
  %322 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfqdir = getelementptr inbounds %struct.envelope, %struct.envelope* %322, i32 0, i32 29
  %323 = load i32, i32* %e_dfqdir, align 4, !tbaa !99
  %call582 = call i8* @qid_printqueue(i32 %321, i32 %323)
  %324 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id = getelementptr inbounds %struct.envelope, %struct.envelope* %324, i32 0, i32 25
  %325 = load i8*, i8** %e_id, align 8, !tbaa !16
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.112, i32 0, i32 0), i8* %call582, i32 100, i8* %325)
  store i32 74, i32* @ExitStat, align 4, !tbaa !5
  store i32 1, i32* %ioerr, align 4, !tbaa !5
  br label %if.end.583

if.end.583:                                       ; preds = %if.then.581, %if.end.575
  br label %endofmessage

endofmessage:                                     ; preds = %if.end.583, %if.end.27
  %call584 = call i32* @__errno_location() #11
  %326 = load i32, i32* %call584, align 4, !tbaa !5
  store i32 %326, i32* %save_errno, align 4, !tbaa !5
  %327 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp585 = getelementptr inbounds %struct.envelope, %struct.envelope* %327, i32 0, i32 24
  %328 = load %struct.sm_file*, %struct.sm_file** %e_dfp585, align 8, !tbaa !44
  %cmp586 = icmp ne %struct.sm_file* %328, null
  br i1 %cmp586, label %if.then.588, label %if.end.591

if.then.588:                                      ; preds = %endofmessage
  %329 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp589 = getelementptr inbounds %struct.envelope, %struct.envelope* %329, i32 0, i32 24
  %330 = load %struct.sm_file*, %struct.sm_file** %e_dfp589, align 8, !tbaa !44
  %call590 = call i32 @bfrewind(%struct.sm_file* %330)
  br label %if.end.591

if.end.591:                                       ; preds = %if.then.588, %endofmessage
  %331 = load i32, i32* %dead, align 4, !tbaa !5
  %tobool592 = icmp ne i32 %331, 0
  br i1 %tobool592, label %if.end.614, label %land.lhs.true.593

land.lhs.true.593:                                ; preds = %if.end.591
  %332 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_mailer594 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %332, i32 0, i32 11
  %333 = load %struct.mailer*, %struct.mailer** %mci_mailer594, align 8, !tbaa !79
  %m_flags595 = getelementptr inbounds %struct.mailer, %struct.mailer* %333, i32 0, i32 5
  %arrayidx596 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags595, i32 0, i64 3
  %334 = load i32, i32* %arrayidx596, align 4, !tbaa !5
  %and597 = and i32 %334, 4
  %tobool598 = icmp ne i32 %and597, 0
  br i1 %tobool598, label %land.lhs.true.599, label %if.end.614

land.lhs.true.599:                                ; preds = %land.lhs.true.593
  %arrayidx600 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 0
  %335 = load i8, i8* %arrayidx600, align 1, !tbaa !15
  %conv601 = sext i8 %335 to i32
  %cmp602 = icmp ne i32 %conv601, 0
  br i1 %cmp602, label %land.lhs.true.604, label %if.end.614

land.lhs.true.604:                                ; preds = %land.lhs.true.599
  %arrayidx605 = getelementptr inbounds [2048 x i8], [2048 x i8]* %buf, i32 0, i64 0
  %336 = load i8, i8* %arrayidx605, align 1, !tbaa !15
  %conv606 = sext i8 %336 to i32
  %cmp607 = icmp ne i32 %conv606, 10
  br i1 %cmp607, label %if.then.609, label %if.end.614

if.then.609:                                      ; preds = %land.lhs.true.604
  %337 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %call610 = call i32 @putline(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), %struct.mailer_con_info* %337)
  %tobool611 = icmp ne i32 %call610, 0
  br i1 %tobool611, label %if.end.613, label %if.then.612

if.then.612:                                      ; preds = %if.then.609
  br label %writeerr

if.end.613:                                       ; preds = %if.then.609
  br label %if.end.614

if.end.614:                                       ; preds = %if.end.613, %land.lhs.true.604, %land.lhs.true.599, %land.lhs.true.593, %if.end.591
  %338 = load i32, i32* %dead, align 4, !tbaa !5
  %tobool615 = icmp ne i32 %338, 0
  br i1 %tobool615, label %if.end.633, label %land.lhs.true.616

land.lhs.true.616:                                ; preds = %if.end.614
  %339 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out617 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %339, i32 0, i32 8
  %340 = load %struct.sm_file*, %struct.sm_file** %mci_out617, align 8, !tbaa !73
  %call618 = call i32 @sm_io_flush(%struct.sm_file* %340, i32 -2)
  %cmp619 = icmp eq i32 %call618, -1
  br i1 %cmp619, label %if.then.631, label %lor.lhs.false.621

lor.lhs.false.621:                                ; preds = %land.lhs.true.616
  %341 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci.addr, align 8, !tbaa !1
  %mci_out622 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %341, i32 0, i32 8
  %342 = load %struct.sm_file*, %struct.sm_file** %mci_out622, align 8, !tbaa !73
  %f_flags623 = getelementptr inbounds %struct.sm_file, %struct.sm_file* %342, i32 0, i32 4
  %343 = load i64, i64* %f_flags623, align 8, !tbaa !94
  %and624 = and i64 %343, 256
  %cmp625 = icmp ne i64 %and624, 0
  br i1 %cmp625, label %land.lhs.true.627, label %if.end.633

land.lhs.true.627:                                ; preds = %lor.lhs.false.621
  %call628 = call i32* @__errno_location() #11
  %344 = load i32, i32* %call628, align 4, !tbaa !5
  %cmp629 = icmp ne i32 %344, 32
  br i1 %cmp629, label %if.then.631, label %if.end.633

if.then.631:                                      ; preds = %land.lhs.true.627, %land.lhs.true.616
  %call632 = call i32* @__errno_location() #11
  %345 = load i32, i32* %call632, align 4, !tbaa !5
  store i32 %345, i32* %save_errno, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.113, i32 0, i32 0))
  store i32 74, i32* @ExitStat, align 4, !tbaa !5
  store i32 1, i32* %ioerr, align 4, !tbaa !5
  br label %if.end.633

if.end.633:                                       ; preds = %if.then.631, %land.lhs.true.627, %lor.lhs.false.621, %if.end.614
  %346 = load i32, i32* %save_errno, align 4, !tbaa !5
  %call634 = call i32* @__errno_location() #11
  store i32 %346, i32* %call634, align 4, !tbaa !5
  %347 = load i32, i32* %dead, align 4, !tbaa !5
  %tobool635 = icmp ne i32 %347, 0
  br i1 %tobool635, label %land.end.639, label %land.rhs.636

land.rhs.636:                                     ; preds = %if.end.633
  %348 = load i32, i32* %ioerr, align 4, !tbaa !5
  %tobool637 = icmp ne i32 %348, 0
  %lnot638 = xor i1 %tobool637, true
  br label %land.end.639

land.end.639:                                     ; preds = %land.rhs.636, %if.end.633
  %349 = phi i1 [ false, %if.end.633 ], [ %lnot638, %land.rhs.636 ]
  %land.ext = zext i1 %349 to i32
  store i32 %land.ext, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.640

writeerr:                                         ; preds = %cleanup.562, %cleanup, %if.then.612, %if.then.92, %if.then.81, %if.then.72, %if.then.60, %if.then.26, %if.then.19
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.640

cleanup.640:                                      ; preds = %writeerr, %land.end.639, %cleanup.562, %cleanup
  %350 = bitcast [21 x i8*]* %boundaries to i8*
  call void @llvm.lifetime.end(i64 168, i8* %350) #1
  %351 = bitcast [2048 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %351) #1
  %352 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %352) #1
  %353 = bitcast i32* %ioerr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %353) #1
  %354 = bitcast i32* %dead to i8*
  call void @llvm.lifetime.end(i64 4, i8* %354) #1
  %355 = load i32, i32* %retval
  ret i32 %355
}

declare i8* @queuename(%struct.envelope*, i32) #2

declare %struct.sm_file* @sm_io_open(%struct.sm_file*, i32, i8*, i32, i8*) #2

declare i32 @putline(i8*, %struct.mailer_con_info*) #2

; Function Attrs: inlinehint nounwind uwtable
define available_externally i32 @fstat(i32 %__fd, %struct.stat* nonnull %__statbuf) #9 {
entry:
  %__fd.addr = alloca i32, align 4
  %__statbuf.addr = alloca %struct.stat*, align 8
  store i32 %__fd, i32* %__fd.addr, align 4, !tbaa !5
  store %struct.stat* %__statbuf, %struct.stat** %__statbuf.addr, align 8, !tbaa !1
  %0 = load i32, i32* %__fd.addr, align 4, !tbaa !5
  %1 = load %struct.stat*, %struct.stat** %__statbuf.addr, align 8, !tbaa !1
  %call = call i32 @__fxstat(i32 1, i32 %0, %struct.stat* %1) #1
  ret i32 %call
}

declare i32 @sm_io_getinfo(%struct.sm_file*, i32, i8*) #2

declare i32 @bfrewind(%struct.sm_file*) #2

declare i8* @hvalue(i8*, %struct.header*) #2

declare i8* @defcharset(%struct.envelope*) #2

declare i32 @mime8to7(%struct.mailer_con_info*, %struct.header*, %struct.envelope*, i8**, i32, i32) #2

declare i32 @mime7to8(%struct.mailer_con_info*, %struct.header*, %struct.envelope*) #2

declare i32 @sm_io_getc(%struct.sm_file*, i32) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #5

declare i32 @sm_io_putc(%struct.sm_file*, i32, i32) #2

declare i8* @qid_printqueue(i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @mailfile(i8* %filename, %struct.mailer* %mailer, %struct.address* %ctladdr, i64 %sfflags, %struct.envelope* %e) #0 {
entry:
  %retval = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %mailer.addr = alloca %struct.mailer*, align 8
  %ctladdr.addr = alloca %struct.address*, align 8
  %sfflags.addr = alloca i64, align 8
  %e.addr = alloca %struct.envelope*, align 8
  %f = alloca %struct.sm_file*, align 8
  %pid = alloca i32, align 4
  %mode = alloca i32, align 4
  %len = alloca i32, align 4
  %curoff = alloca i64, align 8
  %suidwarn = alloca i32, align 4
  %p = alloca i8*, align 8
  %realfile = alloca i8*, align 8
  %ev = alloca %struct.sm_event*, align 8
  %buf = alloca [4096 x i8], align 16
  %targetfile = alloca [4096 x i8], align 16
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %i = alloca i32, align 4
  %stb = alloca %struct.stat, align 8
  %mcibuf = alloca %struct.mailer_con_info, align 8
  %err = alloca i32, align 4
  %oflags = alloca i32, align 4
  %fd = alloca i32, align 4
  %df = alloca i8*, align 8
  %gidset = alloca [1 x i32], align 4
  %save = alloca i8, align 1
  %q = alloca i8*, align 8
  %st = alloca i32, align 4
  %.compoundliteral = alloca %union.anon.4, align 4
  %.compoundliteral793 = alloca %union.anon.5, align 4
  store volatile i8* %filename, i8** %filename.addr, align 8, !tbaa !1
  store volatile %struct.mailer* %mailer, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  store %struct.address* %ctladdr, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  store volatile i64 %sfflags, i64* %sfflags.addr, align 8, !tbaa !32
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  %0 = bitcast %struct.sm_file** %f to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 -1, i32* %pid, align 4, !tbaa !5
  %2 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i64* %curoff to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast i32* %suidwarn to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %call = call i32 @geteuid() #1
  %cmp = icmp eq i32 %call, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %suidwarn, align 4, !tbaa !5
  %6 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = bitcast i8** %realfile to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast %struct.sm_event** %ev to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast [4096 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 4096, i8* %9) #1
  %10 = bitcast [4096 x i8]* %targetfile to i8*
  call void @llvm.lifetime.start(i64 4096, i8* %10) #1
  %11 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1 = zext i8 %11 to i32
  %cmp2 = icmp sge i32 %conv1, 1
  br i1 %cmp2, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %12 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %13 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i32 0, i32 0), i8* %13)
  %call4 = call %struct.sm_file* @sm_debug_file()
  %14 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  call void @printaddr(%struct.sm_file* %call4, %struct.address* %14, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %15 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %cmp5 = icmp eq %struct.mailer* %15, null
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.end
  %16 = load %struct.mailer*, %struct.mailer** @FileMailer, align 8, !tbaa !1
  store volatile %struct.mailer* %16, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %if.end
  %17 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp = getelementptr inbounds %struct.envelope, %struct.envelope* %17, i32 0, i32 32
  %18 = load %struct.sm_file*, %struct.sm_file** %e_xfp, align 8, !tbaa !46
  %cmp9 = icmp ne %struct.sm_file* %18, null
  br i1 %cmp9, label %if.then.11, label %if.end.14

if.then.11:                                       ; preds = %if.end.8
  %19 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp12 = getelementptr inbounds %struct.envelope, %struct.envelope* %19, i32 0, i32 32
  %20 = load %struct.sm_file*, %struct.sm_file** %e_xfp12, align 8, !tbaa !46
  %call13 = call i32 @sm_io_flush(%struct.sm_file* %20, i32 -2)
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.11, %if.end.8
  %21 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #1
  %22 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i64 1) to i64), i64 ptrtoint ([10 x i8]* @.str.115 to i64)), i64 1), label %land.lhs.true.15, label %cond.false

land.lhs.true.15:                                 ; preds = %if.end.14
  store i64 9, i64* %__s2_len, align 8, !tbaa !32
  %23 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp16 = icmp ult i64 %23, 4
  br i1 %cmp16, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.15
  %24 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %24) #1
  %25 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  store i8* %25, i8** %__s1, align 8, !tbaa !1
  %26 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 0
  %28 = load i8, i8* %arrayidx, align 1, !tbaa !15
  %conv20 = zext i8 %28 to i32
  %29 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i32 0), align 1, !tbaa !15
  %conv21 = zext i8 %29 to i32
  %sub = sub nsw i32 %conv20, %conv21
  store i32 %sub, i32* %__result, align 4, !tbaa !5
  %30 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp22 = icmp ugt i64 %30, 0
  br i1 %cmp22, label %land.lhs.true.24, label %if.end.54

land.lhs.true.24:                                 ; preds = %cond.true
  %31 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp25 = icmp eq i32 %31, 0
  br i1 %cmp25, label %if.then.27, label %if.end.54

if.then.27:                                       ; preds = %land.lhs.true.24
  %32 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx28 = getelementptr inbounds i8, i8* %32, i64 1
  %33 = load i8, i8* %arrayidx28, align 1, !tbaa !15
  %conv29 = zext i8 %33 to i32
  %34 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i64 1), align 1, !tbaa !15
  %conv30 = zext i8 %34 to i32
  %sub31 = sub nsw i32 %conv29, %conv30
  store i32 %sub31, i32* %__result, align 4, !tbaa !5
  %35 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp32 = icmp ugt i64 %35, 1
  br i1 %cmp32, label %land.lhs.true.34, label %if.end.53

land.lhs.true.34:                                 ; preds = %if.then.27
  %36 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp35 = icmp eq i32 %36, 0
  br i1 %cmp35, label %if.then.37, label %if.end.53

if.then.37:                                       ; preds = %land.lhs.true.34
  %37 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx38 = getelementptr inbounds i8, i8* %37, i64 2
  %38 = load i8, i8* %arrayidx38, align 1, !tbaa !15
  %conv39 = zext i8 %38 to i32
  %39 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i64 2), align 1, !tbaa !15
  %conv40 = zext i8 %39 to i32
  %sub41 = sub nsw i32 %conv39, %conv40
  store i32 %sub41, i32* %__result, align 4, !tbaa !5
  %40 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp42 = icmp ugt i64 %40, 2
  br i1 %cmp42, label %land.lhs.true.44, label %if.end.52

land.lhs.true.44:                                 ; preds = %if.then.37
  %41 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp45 = icmp eq i32 %41, 0
  br i1 %cmp45, label %if.then.47, label %if.end.52

if.then.47:                                       ; preds = %land.lhs.true.44
  %42 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx48 = getelementptr inbounds i8, i8* %42, i64 3
  %43 = load i8, i8* %arrayidx48, align 1, !tbaa !15
  %conv49 = zext i8 %43 to i32
  %44 = load i8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i64 3), align 1, !tbaa !15
  %conv50 = zext i8 %44 to i32
  %sub51 = sub nsw i32 %conv49, %conv50
  store i32 %sub51, i32* %__result, align 4, !tbaa !5
  br label %if.end.52

if.end.52:                                        ; preds = %if.then.47, %land.lhs.true.44, %if.then.37
  br label %if.end.53

if.end.53:                                        ; preds = %if.end.52, %land.lhs.true.34, %if.then.27
  br label %if.end.54

if.end.54:                                        ; preds = %if.end.53, %land.lhs.true.24, %cond.true
  %45 = load i32, i32* %__result, align 4, !tbaa !5
  store i32 %45, i32* %tmp55, !tbaa !5
  %46 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %46) #1
  %47 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %47) #1
  %48 = load i32, i32* %tmp55, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.15, %if.end.14
  %49 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %call56 = call i32 @strcmp(i8* %49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i32 0)) #1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.54
  %cond = phi i32 [ %48, %if.end.54 ], [ %call56, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !5
  %50 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #1
  %51 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %51) #1
  %52 = load i32, i32* %tmp, !tbaa !5
  %cmp57 = icmp eq i32 %52, 0
  br i1 %cmp57, label %if.then.59, label %if.end.60

if.then.59:                                       ; preds = %cond.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.799

if.end.60:                                        ; preds = %cond.end
  %53 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags = getelementptr inbounds %struct.envelope, %struct.envelope* %53, i32 0, i32 11
  %54 = load i64, i64* %e_flags, align 8, !tbaa !7
  %and = and i64 %54, 131072
  %cmp61 = icmp ne i64 %and, 0
  br i1 %cmp61, label %land.lhs.true.63, label %if.end.87

land.lhs.true.63:                                 ; preds = %if.end.60
  %55 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_flags = getelementptr inbounds %struct.mailer, %struct.mailer* %55, i32 0, i32 5
  %arrayidx64 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags, i32 0, i64 1
  %56 = load i32, i32* %arrayidx64, align 4, !tbaa !5
  %and65 = and i32 %56, 8388608
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %land.lhs.true.67, label %if.end.87

land.lhs.true.67:                                 ; preds = %land.lhs.true.63
  %57 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags68 = getelementptr inbounds %struct.envelope, %struct.envelope* %57, i32 0, i32 11
  %58 = load i64, i64* %e_flags68, align 8, !tbaa !7
  %and69 = and i64 %58, 8388608
  %cmp70 = icmp ne i64 %and69, 0
  br i1 %cmp70, label %if.then.84, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.67
  %59 = load i32, i32* @MimeMode, align 4, !tbaa !5
  %and72 = and i32 %59, 4
  %cmp73 = icmp ne i32 %and72, 0
  br i1 %cmp73, label %if.end.87, label %lor.lhs.false.75

lor.lhs.false.75:                                 ; preds = %lor.lhs.false
  %60 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags76 = getelementptr inbounds %struct.envelope, %struct.envelope* %60, i32 0, i32 11
  %61 = load i64, i64* %e_flags76, align 8, !tbaa !7
  %and77 = and i64 %61, 4194304
  %cmp78 = icmp ne i64 %and77, 0
  br i1 %cmp78, label %land.lhs.true.80, label %if.then.84

land.lhs.true.80:                                 ; preds = %lor.lhs.false.75
  %62 = load i32, i32* @MimeMode, align 4, !tbaa !5
  %and81 = and i32 %62, 1
  %cmp82 = icmp ne i32 %and81, 0
  br i1 %cmp82, label %if.end.87, label %if.then.84

if.then.84:                                       ; preds = %land.lhs.true.80, %lor.lhs.false.75, %land.lhs.true.67
  %63 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status = getelementptr inbounds %struct.envelope, %struct.envelope* %63, i32 0, i32 41
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i32 0, i32 0), i8** %e_status, align 8, !tbaa !68
  %64 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status85 = getelementptr inbounds %struct.envelope, %struct.envelope* %64, i32 0, i32 41
  %65 = load i8*, i8** %e_status85, align 8, !tbaa !68
  call void (i8*, i8*, ...) @usrerrenh(i8* %65, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.117, i32 0, i32 0))
  %call86 = call i32* @__errno_location() #11
  store i32 0, i32* %call86, align 4, !tbaa !5
  store i32 65, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.799

if.end.87:                                        ; preds = %land.lhs.true.80, %lor.lhs.false, %land.lhs.true.63, %if.end.60
  %66 = load i8*, i8** @SafeFileEnv, align 8, !tbaa !1
  %cmp88 = icmp ne i8* %66, null
  br i1 %cmp88, label %land.lhs.true.90, label %if.else

land.lhs.true.90:                                 ; preds = %if.end.87
  %67 = load i8*, i8** @SafeFileEnv, align 8, !tbaa !1
  %arrayidx91 = getelementptr inbounds i8, i8* %67, i64 0
  %68 = load i8, i8* %arrayidx91, align 1, !tbaa !15
  %conv92 = sext i8 %68 to i32
  %cmp93 = icmp ne i32 %conv92, 0
  br i1 %cmp93, label %if.then.95, label %if.else

if.then.95:                                       ; preds = %land.lhs.true.90
  %69 = load i8*, i8** @SafeFileEnv, align 8, !tbaa !1
  %call96 = call i64 @strlen(i8* %69) #12
  %conv97 = trunc i64 %call96 to i32
  store i32 %conv97, i32* %len, align 4, !tbaa !5
  %70 = load i8*, i8** @SafeFileEnv, align 8, !tbaa !1
  %71 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %72 = load i32, i32* %len, align 4, !tbaa !5
  %conv98 = sext i32 %72 to i64
  %call99 = call i32 @strncmp(i8* %70, i8* %71, i64 %conv98) #12
  %cmp100 = icmp eq i32 %call99, 0
  br i1 %cmp100, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %if.then.95
  %73 = load i32, i32* %len, align 4, !tbaa !5
  %74 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %idx.ext = sext i32 %73 to i64
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext
  store volatile i8* %add.ptr, i8** %filename.addr, align 8, !tbaa !1
  br label %if.end.103

if.end.103:                                       ; preds = %if.then.102, %if.then.95
  %75 = load i32, i32* %len, align 4, !tbaa !5
  %conv104 = sext i32 %75 to i64
  %76 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %call105 = call i64 @strlen(i8* %76) #12
  %add = add i64 %conv104, %call105
  %add106 = add i64 %add, 1
  %cmp107 = icmp uge i64 %add106, 4096
  br i1 %cmp107, label %if.then.109, label %if.end.110

if.then.109:                                      ; preds = %if.end.103
  %77 = load i8*, i8** @SafeFileEnv, align 8, !tbaa !1
  %78 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.118, i32 0, i32 0), i8* %77, i8* %78)
  store i32 73, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.799

if.end.110:                                       ; preds = %if.end.103
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %79 = load i8*, i8** @SafeFileEnv, align 8, !tbaa !1
  %call111 = call i64 @sm_strlcpy(i8* %arraydecay, i8* %79, i64 4096)
  %arraydecay112 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %80 = load i32, i32* %len, align 4, !tbaa !5
  %idx.ext113 = sext i32 %80 to i64
  %add.ptr114 = getelementptr inbounds i8, i8* %arraydecay112, i64 %idx.ext113
  store volatile i8* %add.ptr114, i8** %realfile, align 8, !tbaa !1
  %81 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %82 = load i8, i8* %81, align 1, !tbaa !15
  %conv115 = sext i8 %82 to i32
  %cmp116 = icmp eq i32 %conv115, 47
  br i1 %cmp116, label %if.then.118, label %if.end.119

if.then.118:                                      ; preds = %if.end.110
  %83 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %83, i32 1
  store volatile i8* %incdec.ptr, i8** %filename.addr, align 8, !tbaa !1
  br label %if.end.119

if.end.119:                                       ; preds = %if.then.118, %if.end.110
  %84 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %85 = load i8, i8* %84, align 1, !tbaa !15
  %conv120 = sext i8 %85 to i32
  %cmp121 = icmp ne i32 %conv120, 0
  br i1 %cmp121, label %if.then.123, label %if.end.135

if.then.123:                                      ; preds = %if.end.119
  %86 = load i32, i32* %len, align 4, !tbaa !5
  %sub124 = sub nsw i32 %86, 1
  %idxprom = sext i32 %sub124 to i64
  %arrayidx125 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i64 %idxprom
  %87 = load i8, i8* %arrayidx125, align 1, !tbaa !15
  %conv126 = sext i8 %87 to i32
  %cmp127 = icmp ne i32 %conv126, 47
  br i1 %cmp127, label %if.then.129, label %if.end.132

if.then.129:                                      ; preds = %if.then.123
  %arraydecay130 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %call131 = call i64 @sm_strlcat(i8* %arraydecay130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0), i64 4096)
  br label %if.end.132

if.end.132:                                       ; preds = %if.then.129, %if.then.123
  %arraydecay133 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %88 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %call134 = call i64 @sm_strlcat(i8* %arraydecay133, i8* %88, i64 4096)
  br label %if.end.135

if.end.135:                                       ; preds = %if.end.132, %if.end.119
  br label %if.end.195

if.else:                                          ; preds = %land.lhs.true.90, %if.end.87
  %89 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_rootdir = getelementptr inbounds %struct.mailer, %struct.mailer* %89, i32 0, i32 18
  %90 = load i8*, i8** %m_rootdir, align 8, !tbaa !100
  %cmp136 = icmp ne i8* %90, null
  br i1 %cmp136, label %if.then.138, label %if.else.186

if.then.138:                                      ; preds = %if.else
  %91 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_rootdir139 = getelementptr inbounds %struct.mailer, %struct.mailer* %91, i32 0, i32 18
  %92 = load i8*, i8** %m_rootdir139, align 8, !tbaa !100
  %arraydecay140 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %93 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %92, i8* %arraydecay140, i64 4096, %struct.envelope* %93)
  %arraydecay141 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %call142 = call i64 @strlen(i8* %arraydecay141) #12
  %conv143 = trunc i64 %call142 to i32
  store i32 %conv143, i32* %len, align 4, !tbaa !5
  %arraydecay144 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %94 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %95 = load i32, i32* %len, align 4, !tbaa !5
  %conv145 = sext i32 %95 to i64
  %call146 = call i32 @strncmp(i8* %arraydecay144, i8* %94, i64 %conv145) #12
  %cmp147 = icmp eq i32 %call146, 0
  br i1 %cmp147, label %if.then.149, label %if.end.152

if.then.149:                                      ; preds = %if.then.138
  %96 = load i32, i32* %len, align 4, !tbaa !5
  %97 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %idx.ext150 = sext i32 %96 to i64
  %add.ptr151 = getelementptr inbounds i8, i8* %97, i64 %idx.ext150
  store volatile i8* %add.ptr151, i8** %filename.addr, align 8, !tbaa !1
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.149, %if.then.138
  %98 = load i32, i32* %len, align 4, !tbaa !5
  %conv153 = sext i32 %98 to i64
  %99 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %call154 = call i64 @strlen(i8* %99) #12
  %add155 = add i64 %conv153, %call154
  %add156 = add i64 %add155, 1
  %cmp157 = icmp uge i64 %add156, 4096
  br i1 %cmp157, label %if.then.159, label %if.end.161

if.then.159:                                      ; preds = %if.end.152
  %arraydecay160 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %100 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.118, i32 0, i32 0), i8* %arraydecay160, i8* %100)
  store i32 73, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.799

if.end.161:                                       ; preds = %if.end.152
  %arraydecay162 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %101 = load i32, i32* %len, align 4, !tbaa !5
  %idx.ext163 = sext i32 %101 to i64
  %add.ptr164 = getelementptr inbounds i8, i8* %arraydecay162, i64 %idx.ext163
  store volatile i8* %add.ptr164, i8** %realfile, align 8, !tbaa !1
  %102 = load i32, i32* %len, align 4, !tbaa !5
  %sub165 = sub nsw i32 %102, 1
  %idxprom166 = sext i32 %sub165 to i64
  %arrayidx167 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i64 %idxprom166
  %103 = load i8, i8* %arrayidx167, align 1, !tbaa !15
  %conv168 = sext i8 %103 to i32
  %cmp169 = icmp ne i32 %conv168, 47
  br i1 %cmp169, label %if.then.171, label %if.end.174

if.then.171:                                      ; preds = %if.end.161
  %arraydecay172 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %call173 = call i64 @sm_strlcat(i8* %arraydecay172, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0), i64 4096)
  br label %if.end.174

if.end.174:                                       ; preds = %if.then.171, %if.end.161
  %104 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %105 = load i8, i8* %104, align 1, !tbaa !15
  %conv175 = sext i8 %105 to i32
  %cmp176 = icmp eq i32 %conv175, 47
  br i1 %cmp176, label %if.then.178, label %if.else.182

if.then.178:                                      ; preds = %if.end.174
  %arraydecay179 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %106 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %add.ptr180 = getelementptr inbounds i8, i8* %106, i64 1
  %call181 = call i64 @sm_strlcat(i8* %arraydecay179, i8* %add.ptr180, i64 4096)
  br label %if.end.185

if.else.182:                                      ; preds = %if.end.174
  %arraydecay183 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %107 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %call184 = call i64 @sm_strlcat(i8* %arraydecay183, i8* %107, i64 4096)
  br label %if.end.185

if.end.185:                                       ; preds = %if.else.182, %if.then.178
  br label %if.end.194

if.else.186:                                      ; preds = %if.else
  %arraydecay187 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %108 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %call188 = call i64 @sm_strlcpy(i8* %arraydecay187, i8* %108, i64 4096)
  %cmp189 = icmp uge i64 %call188, 4096
  br i1 %cmp189, label %if.then.191, label %if.end.192

if.then.191:                                      ; preds = %if.else.186
  %109 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.120, i32 0, i32 0), i8* %109)
  store i32 73, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.799

if.end.192:                                       ; preds = %if.else.186
  %arraydecay193 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  store volatile i8* %arraydecay193, i8** %realfile, align 8, !tbaa !1
  br label %if.end.194

if.end.194:                                       ; preds = %if.end.192, %if.end.185
  br label %if.end.195

if.end.195:                                       ; preds = %if.end.194, %if.end.135
  %call196 = call void (i32)* @sm_signal(i32 17, void (i32)* null)
  %110 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %110) #1
  store i32 5, i32* %i, align 4, !tbaa !5
  br label %for.cond

for.cond:                                         ; preds = %if.end.210, %if.end.195
  %111 = load i32, i32* %i, align 4, !tbaa !5
  %dec = add nsw i32 %111, -1
  store i32 %dec, i32* %i, align 4, !tbaa !5
  %cmp198 = icmp sge i32 %dec, 0
  br i1 %cmp198, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call200 = call i32 @fork() #1
  store i32 %call200, i32* %pid, align 4, !tbaa !5
  %112 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp201 = icmp sge i32 %112, 0
  br i1 %cmp201, label %if.then.203, label %if.end.204

if.then.203:                                      ; preds = %for.body
  br label %for.end

if.end.204:                                       ; preds = %for.body
  %113 = load i32, i32* %i, align 4, !tbaa !5
  %cmp205 = icmp sgt i32 %113, 0
  br i1 %cmp205, label %if.then.207, label %if.end.210

if.then.207:                                      ; preds = %if.end.204
  %114 = load i32, i32* %i, align 4, !tbaa !5
  %sub208 = sub i32 5, %114
  %call209 = call i32 @sleep(i32 %sub208)
  br label %if.end.210

if.end.210:                                       ; preds = %if.then.207, %if.end.204
  br label %for.cond

for.end:                                          ; preds = %if.then.203, %for.cond
  %115 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %115) #1
  %116 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp211 = icmp slt i32 %116, 0
  br i1 %cmp211, label %if.then.213, label %if.else.214

if.then.213:                                      ; preds = %for.end
  store i32 71, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.799

if.else.214:                                      ; preds = %for.end
  %117 = load i32, i32* %pid, align 4, !tbaa !5
  %cmp215 = icmp eq i32 %117, 0
  br i1 %cmp215, label %if.then.217, label %if.else.781

if.then.217:                                      ; preds = %if.else.214
  %118 = bitcast %struct.stat* %stb to i8*
  call void @llvm.lifetime.start(i64 144, i8* %118) #1
  %119 = bitcast %struct.mailer_con_info* %mcibuf to i8*
  call void @llvm.lifetime.start(i64 2256, i8* %119) #1
  %120 = bitcast i32* %err to i8*
  call void @llvm.lifetime.start(i64 4, i8* %120) #1
  %121 = bitcast i32* %oflags to i8*
  call void @llvm.lifetime.start(i64 4, i8* %121) #1
  store volatile i32 1025, i32* %oflags, align 4, !tbaa !5
  store volatile i8* null, i8** @RestartRequest, align 8, !tbaa !1
  store volatile i32 0, i32* @RestartWorkGroup, align 4, !tbaa !5
  store volatile i8* null, i8** @ShutdownRequest, align 8, !tbaa !1
  store volatile i32 0, i32* @PendingSignal, align 4, !tbaa !5
  %call222 = call i32 @getpid() #1
  store i32 %call222, i32* @CurrentPid, align 4, !tbaa !5
  %122 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp = getelementptr inbounds %struct.envelope, %struct.envelope* %122, i32 0, i32 33
  %123 = load %struct.sm_file*, %struct.sm_file** %e_lockfp, align 8, !tbaa !45
  %cmp223 = icmp ne %struct.sm_file* %123, null
  br i1 %cmp223, label %if.then.225, label %if.end.234

if.then.225:                                      ; preds = %if.then.217
  %124 = bitcast i32* %fd to i8*
  call void @llvm.lifetime.start(i64 4, i8* %124) #1
  %125 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp227 = getelementptr inbounds %struct.envelope, %struct.envelope* %125, i32 0, i32 33
  %126 = load %struct.sm_file*, %struct.sm_file** %e_lockfp227, align 8, !tbaa !45
  %call228 = call i32 @sm_io_getinfo(%struct.sm_file* %126, i32 3, i8* null)
  store i32 %call228, i32* %fd, align 4, !tbaa !5
  %127 = load i32, i32* %fd, align 4, !tbaa !5
  %cmp229 = icmp sge i32 %127, 0
  br i1 %cmp229, label %if.then.231, label %if.end.233

if.then.231:                                      ; preds = %if.then.225
  %128 = load i32, i32* %fd, align 4, !tbaa !5
  %call232 = call i32 @close(i32 %128)
  br label %if.end.233

if.end.233:                                       ; preds = %if.then.231, %if.then.225
  %129 = bitcast i32* %fd to i8*
  call void @llvm.lifetime.end(i64 4, i8* %129) #1
  br label %if.end.234

if.end.234:                                       ; preds = %if.end.233, %if.then.217
  %call235 = call void (i32)* @sm_signal(i32 2, void (i32)* null)
  %call236 = call void (i32)* @sm_signal(i32 1, void (i32)* null)
  %call237 = call void (i32)* @sm_signal(i32 15, void (i32)* null)
  %130 = load i32, i32* @OldUmask, align 4, !tbaa !5
  %call238 = call i32 @umask(i32 %130) #1
  %131 = load volatile i8*, i8** %filename.addr, align 8, !tbaa !1
  %132 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to = getelementptr inbounds %struct.envelope, %struct.envelope* %132, i32 0, i32 3
  store i8* %131, i8** %e_to, align 8, !tbaa !62
  store i32 0, i32* @ExitStat, align 4, !tbaa !5
  %call239 = call i32 @__sigsetjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @CtxMailfileTimeout, i32 0, i32 0), i32 1) #14
  %cmp240 = icmp ne i32 %call239, 0
  br i1 %cmp240, label %if.then.242, label %if.end.243

if.then.242:                                      ; preds = %if.end.234
  call void @exit(i32 75) #13
  unreachable

if.end.243:                                       ; preds = %if.end.234
  %133 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @TimeOuts, i32 0, i32 15), align 8, !tbaa !101
  %cmp244 = icmp sgt i64 %133, 0
  br i1 %cmp244, label %if.then.246, label %if.else.249

if.then.246:                                      ; preds = %if.end.243
  %134 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @TimeOuts, i32 0, i32 15), align 8, !tbaa !101
  %mul = mul nsw i64 %134, 1000
  %conv247 = trunc i64 %mul to i32
  %call248 = call %struct.sm_event* @sm_seteventm(i32 %conv247, void (i32)* @mailfiletimeout, i32 0)
  store %struct.sm_event* %call248, %struct.sm_event** %ev, align 8, !tbaa !1
  br label %if.end.250

if.else.249:                                      ; preds = %if.end.243
  store %struct.sm_event* null, %struct.sm_event** %ev, align 8, !tbaa !1
  br label %if.end.250

if.end.250:                                       ; preds = %if.else.249, %if.then.246
  %arraydecay251 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %call252 = call i32 @stat(i8* %arraydecay251, %struct.stat* %stb) #1
  %cmp253 = icmp slt i32 %call252, 0
  br i1 %cmp253, label %if.then.255, label %if.else.256

if.then.255:                                      ; preds = %if.end.250
  %135 = load i32, i32* @FileMode, align 4, !tbaa !5
  store volatile i32 %135, i32* %mode, align 4, !tbaa !5
  br label %if.end.257

if.else.256:                                      ; preds = %if.end.250
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 3
  %136 = load i32, i32* %st_mode, align 4, !tbaa !102
  store volatile i32 %136, i32* %mode, align 4, !tbaa !5
  br label %if.end.257

if.end.257:                                       ; preds = %if.else.256, %if.then.255
  %call258 = call i32* @__errno_location() #11
  store i32 0, i32* %call258, align 4, !tbaa !5
  store i32 0, i32* @ExitStat, align 4, !tbaa !5
  %137 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %cmp259 = icmp ne %struct.address* %137, null
  br i1 %cmp259, label %land.lhs.true.261, label %lor.lhs.false.265

land.lhs.true.261:                                ; preds = %if.end.257
  %138 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_flags = getelementptr inbounds %struct.address, %struct.address* %138, i32 0, i32 5
  %139 = load i64, i64* %q_flags, align 8, !tbaa !52
  %and262 = and i64 %139, 16384
  %cmp263 = icmp ne i64 %and262, 0
  br i1 %cmp263, label %lor.lhs.false.265, label %if.then.269

lor.lhs.false.265:                                ; preds = %land.lhs.true.261, %if.end.257
  %140 = load volatile i64, i64* %sfflags.addr, align 8, !tbaa !32
  %and266 = and i64 %140, 8
  %cmp267 = icmp ne i64 %and266, 0
  br i1 %cmp267, label %if.then.269, label %if.end.278

if.then.269:                                      ; preds = %lor.lhs.false.265, %land.lhs.true.261
  %141 = load volatile i32, i32* %mode, align 4, !tbaa !5
  %and270 = and i32 %141, -3073
  store volatile i32 %and270, i32* %mode, align 4, !tbaa !5
  %142 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv271 = zext i8 %142 to i32
  %cmp272 = icmp sge i32 %conv271, 20
  br i1 %cmp272, label %land.lhs.true.274, label %if.end.277

land.lhs.true.274:                                ; preds = %if.then.269
  %143 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool275 = icmp ne i32 %143, 0
  br i1 %tobool275, label %if.end.277, label %if.then.276

if.then.276:                                      ; preds = %land.lhs.true.274
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.121, i32 0, i32 0))
  br label %if.end.277

if.end.277:                                       ; preds = %if.then.276, %land.lhs.true.274, %if.then.269
  br label %if.end.278

if.end.278:                                       ; preds = %if.end.277, %lor.lhs.false.265
  %144 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp = getelementptr inbounds %struct.envelope, %struct.envelope* %144, i32 0, i32 24
  %145 = load %struct.sm_file*, %struct.sm_file** %e_dfp, align 8, !tbaa !44
  %cmp279 = icmp eq %struct.sm_file* %145, null
  br i1 %cmp279, label %land.lhs.true.281, label %if.end.297

land.lhs.true.281:                                ; preds = %if.end.278
  %146 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags282 = getelementptr inbounds %struct.envelope, %struct.envelope* %146, i32 0, i32 11
  %147 = load i64, i64* %e_flags282, align 8, !tbaa !7
  %and283 = and i64 %147, 2097152
  %cmp284 = icmp ne i64 %and283, 0
  br i1 %cmp284, label %if.then.286, label %if.end.297

if.then.286:                                      ; preds = %land.lhs.true.281
  %148 = bitcast i8** %df to i8*
  call void @llvm.lifetime.start(i64 8, i8* %148) #1
  %149 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call288 = call i8* @queuename(%struct.envelope* %149, i32 100)
  store i8* %call288, i8** %df, align 8, !tbaa !1
  %150 = load i8*, i8** %df, align 8, !tbaa !1
  %call289 = call %struct.sm_file* @sm_io_open(%struct.sm_file* @SmFtStdio_def, i32 -2, i8* %150, i32 2, i8* null)
  %151 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp290 = getelementptr inbounds %struct.envelope, %struct.envelope* %151, i32 0, i32 24
  store %struct.sm_file* %call289, %struct.sm_file** %e_dfp290, align 8, !tbaa !44
  %152 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dfp291 = getelementptr inbounds %struct.envelope, %struct.envelope* %152, i32 0, i32 24
  %153 = load %struct.sm_file*, %struct.sm_file** %e_dfp291, align 8, !tbaa !44
  %cmp292 = icmp eq %struct.sm_file* %153, null
  br i1 %cmp292, label %if.then.294, label %if.end.296

if.then.294:                                      ; preds = %if.then.286
  %154 = load i8*, i8** %df, align 8, !tbaa !1
  %155 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to295 = getelementptr inbounds %struct.envelope, %struct.envelope* %155, i32 0, i32 3
  %156 = load i8*, i8** %e_to295, align 8, !tbaa !62
  %157 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from = getelementptr inbounds %struct.envelope, %struct.envelope* %157, i32 0, i32 4
  %q_paddr = getelementptr inbounds %struct.address, %struct.address* %e_from, i32 0, i32 0
  %158 = load i8*, i8** %q_paddr, align 8, !tbaa !23
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.122, i32 0, i32 0), i8* %154, i8* %156, i8* %158)
  br label %if.end.296

if.end.296:                                       ; preds = %if.then.294, %if.then.286
  %159 = bitcast i8** %df to i8*
  call void @llvm.lifetime.end(i64 8, i8* %159) #1
  br label %if.end.297

if.end.297:                                       ; preds = %if.end.296, %land.lhs.true.281, %if.end.278
  %160 = load volatile i64, i64* %sfflags.addr, align 8, !tbaa !32
  %and298 = and i64 %160, 8
  %cmp299 = icmp ne i64 %and298, 0
  br i1 %cmp299, label %if.end.424, label %if.then.301

if.then.301:                                      ; preds = %if.end.297
  %161 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_flags302 = getelementptr inbounds %struct.mailer, %struct.mailer* %161, i32 0, i32 5
  %arrayidx303 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags302, i32 0, i64 2
  %162 = load i32, i32* %arrayidx303, align 4, !tbaa !5
  %and304 = and i32 %162, 524288
  %tobool305 = icmp ne i32 %and304, 0
  br i1 %tobool305, label %if.then.306, label %if.else.322

if.then.306:                                      ; preds = %if.then.301
  store i8* null, i8** @RealUserName, align 8, !tbaa !1
  %163 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_uid = getelementptr inbounds %struct.mailer, %struct.mailer* %163, i32 0, i32 19
  %164 = load i32, i32* %m_uid, align 4, !tbaa !103
  %cmp307 = icmp eq i32 %164, -1
  br i1 %cmp307, label %if.then.309, label %if.else.310

if.then.309:                                      ; preds = %if.then.306
  %165 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  store i32 %165, i32* @RealUid, align 4, !tbaa !5
  br label %if.end.312

if.else.310:                                      ; preds = %if.then.306
  %166 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_uid311 = getelementptr inbounds %struct.mailer, %struct.mailer* %166, i32 0, i32 19
  %167 = load i32, i32* %m_uid311, align 4, !tbaa !103
  store i32 %167, i32* @RealUid, align 4, !tbaa !5
  br label %if.end.312

if.end.312:                                       ; preds = %if.else.310, %if.then.309
  %168 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %cmp313 = icmp ne i32 %168, 0
  br i1 %cmp313, label %land.lhs.true.315, label %if.end.321

land.lhs.true.315:                                ; preds = %if.end.312
  %169 = load i32, i32* @RealUid, align 4, !tbaa !5
  %170 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %cmp316 = icmp ne i32 %169, %170
  br i1 %cmp316, label %if.then.318, label %if.end.321

if.then.318:                                      ; preds = %land.lhs.true.315
  %171 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %conv319 = zext i32 %171 to i64
  %172 = load i32, i32* @RealUid, align 4, !tbaa !5
  %conv320 = zext i32 %172 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.123, i32 0, i32 0), i64 %conv319, i64 %conv320)
  call void @exit(i32 75) #13
  unreachable

if.end.321:                                       ; preds = %land.lhs.true.315, %if.end.312
  br label %if.end.354

if.else.322:                                      ; preds = %if.then.301
  %173 = load volatile i32, i32* %mode, align 4, !tbaa !5
  %and323 = and i32 %173, 2048
  %cmp324 = icmp ne i32 %and323, 0
  br i1 %cmp324, label %if.then.326, label %if.else.327

if.then.326:                                      ; preds = %if.else.322
  store i8* null, i8** @RealUserName, align 8, !tbaa !1
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 4
  %174 = load i32, i32* %st_uid, align 4, !tbaa !104
  store i32 %174, i32* @RealUid, align 4, !tbaa !5
  br label %if.end.353

if.else.327:                                      ; preds = %if.else.322
  %175 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %cmp328 = icmp ne %struct.address* %175, null
  br i1 %cmp328, label %land.lhs.true.330, label %if.else.341

land.lhs.true.330:                                ; preds = %if.else.327
  %176 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_uid = getelementptr inbounds %struct.address, %struct.address* %176, i32 0, i32 6
  %177 = load i32, i32* %q_uid, align 4, !tbaa !83
  %cmp331 = icmp ne i32 %177, 0
  br i1 %cmp331, label %if.then.333, label %if.else.341

if.then.333:                                      ; preds = %land.lhs.true.330
  %178 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_ruser = getelementptr inbounds %struct.address, %struct.address* %178, i32 0, i32 2
  %179 = load i8*, i8** %q_ruser, align 8, !tbaa !105
  %cmp334 = icmp ne i8* %179, null
  br i1 %cmp334, label %if.then.336, label %if.else.338

if.then.336:                                      ; preds = %if.then.333
  %180 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_ruser337 = getelementptr inbounds %struct.address, %struct.address* %180, i32 0, i32 2
  %181 = load i8*, i8** %q_ruser337, align 8, !tbaa !105
  store i8* %181, i8** @RealUserName, align 8, !tbaa !1
  br label %if.end.339

if.else.338:                                      ; preds = %if.then.333
  %182 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_user = getelementptr inbounds %struct.address, %struct.address* %182, i32 0, i32 1
  %183 = load i8*, i8** %q_user, align 8, !tbaa !64
  store i8* %183, i8** @RealUserName, align 8, !tbaa !1
  br label %if.end.339

if.end.339:                                       ; preds = %if.else.338, %if.then.336
  %184 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_uid340 = getelementptr inbounds %struct.address, %struct.address* %184, i32 0, i32 6
  %185 = load i32, i32* %q_uid340, align 4, !tbaa !83
  store i32 %185, i32* @RealUid, align 4, !tbaa !5
  br label %if.end.352

if.else.341:                                      ; preds = %land.lhs.true.330, %if.else.327
  %186 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %cmp342 = icmp ne %struct.mailer* %186, null
  br i1 %cmp342, label %land.lhs.true.344, label %if.else.350

land.lhs.true.344:                                ; preds = %if.else.341
  %187 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_uid345 = getelementptr inbounds %struct.mailer, %struct.mailer* %187, i32 0, i32 19
  %188 = load i32, i32* %m_uid345, align 4, !tbaa !103
  %cmp346 = icmp ne i32 %188, -1
  br i1 %cmp346, label %if.then.348, label %if.else.350

if.then.348:                                      ; preds = %land.lhs.true.344
  %189 = load i8*, i8** @DefUser, align 8, !tbaa !1
  store i8* %189, i8** @RealUserName, align 8, !tbaa !1
  %190 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_uid349 = getelementptr inbounds %struct.mailer, %struct.mailer* %190, i32 0, i32 19
  %191 = load i32, i32* %m_uid349, align 4, !tbaa !103
  store i32 %191, i32* @RealUid, align 4, !tbaa !5
  br label %if.end.351

if.else.350:                                      ; preds = %land.lhs.true.344, %if.else.341
  %192 = load i8*, i8** @DefUser, align 8, !tbaa !1
  store i8* %192, i8** @RealUserName, align 8, !tbaa !1
  %193 = load i32, i32* @DefUid, align 4, !tbaa !5
  store i32 %193, i32* @RealUid, align 4, !tbaa !5
  br label %if.end.351

if.end.351:                                       ; preds = %if.else.350, %if.then.348
  br label %if.end.352

if.end.352:                                       ; preds = %if.end.351, %if.end.339
  br label %if.end.353

if.end.353:                                       ; preds = %if.end.352, %if.then.326
  br label %if.end.354

if.end.354:                                       ; preds = %if.end.353, %if.end.321
  %194 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_flags355 = getelementptr inbounds %struct.mailer, %struct.mailer* %194, i32 0, i32 5
  %arrayidx356 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags355, i32 0, i64 2
  %195 = load i32, i32* %arrayidx356, align 4, !tbaa !5
  %and357 = and i32 %195, 524288
  %tobool358 = icmp ne i32 %and357, 0
  br i1 %tobool358, label %if.then.359, label %if.else.384

if.then.359:                                      ; preds = %if.end.354
  %196 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_gid = getelementptr inbounds %struct.mailer, %struct.mailer* %196, i32 0, i32 20
  %197 = load i32, i32* %m_gid, align 4, !tbaa !106
  %cmp360 = icmp eq i32 %197, -1
  br i1 %cmp360, label %if.then.362, label %if.else.363

if.then.362:                                      ; preds = %if.then.359
  %198 = load i32, i32* @RunAsGid, align 4, !tbaa !5
  store i32 %198, i32* @RealGid, align 4, !tbaa !5
  br label %if.end.365

if.else.363:                                      ; preds = %if.then.359
  %199 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_gid364 = getelementptr inbounds %struct.mailer, %struct.mailer* %199, i32 0, i32 20
  %200 = load i32, i32* %m_gid364, align 4, !tbaa !106
  store i32 %200, i32* @RealGid, align 4, !tbaa !5
  br label %if.end.365

if.end.365:                                       ; preds = %if.else.363, %if.then.362
  %201 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %cmp366 = icmp ne i32 %201, 0
  br i1 %cmp366, label %land.lhs.true.368, label %if.end.383

land.lhs.true.368:                                ; preds = %if.end.365
  %202 = load i32, i32* @RealGid, align 4, !tbaa !5
  %call369 = call i32 @getgid() #1
  %cmp370 = icmp ne i32 %202, %call369
  br i1 %cmp370, label %if.then.376, label %lor.lhs.false.372

lor.lhs.false.372:                                ; preds = %land.lhs.true.368
  %203 = load i32, i32* @RealGid, align 4, !tbaa !5
  %call373 = call i32 @getegid() #1
  %cmp374 = icmp ne i32 %203, %call373
  br i1 %cmp374, label %if.then.376, label %if.end.383

if.then.376:                                      ; preds = %lor.lhs.false.372, %land.lhs.true.368
  %204 = load i32, i32* @RealGid, align 4, !tbaa !5
  %conv377 = zext i32 %204 to i64
  %205 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %conv378 = zext i32 %205 to i64
  %call379 = call i32 @getgid() #1
  %conv380 = zext i32 %call379 to i64
  %call381 = call i32 @getegid() #1
  %conv382 = zext i32 %call381 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.124, i32 0, i32 0), i64 %conv377, i64 %conv378, i64 %conv380, i64 %conv382)
  call void @exit(i32 75) #13
  unreachable

if.end.383:                                       ; preds = %lor.lhs.false.372, %if.end.365
  br label %if.end.423

if.else.384:                                      ; preds = %if.end.354
  %206 = load volatile i32, i32* %mode, align 4, !tbaa !5
  %and385 = and i32 %206, 1024
  %cmp386 = icmp ne i32 %and385, 0
  br i1 %cmp386, label %if.then.388, label %if.else.389

if.then.388:                                      ; preds = %if.else.384
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 5
  %207 = load i32, i32* %st_gid, align 4, !tbaa !107
  store i32 %207, i32* @RealGid, align 4, !tbaa !5
  br label %if.end.422

if.else.389:                                      ; preds = %if.else.384
  %208 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %cmp390 = icmp ne %struct.address* %208, null
  br i1 %cmp390, label %land.lhs.true.392, label %if.else.400

land.lhs.true.392:                                ; preds = %if.else.389
  %209 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_uid393 = getelementptr inbounds %struct.address, %struct.address* %209, i32 0, i32 6
  %210 = load i32, i32* %q_uid393, align 4, !tbaa !83
  %211 = load i32, i32* @DefUid, align 4, !tbaa !5
  %cmp394 = icmp eq i32 %210, %211
  br i1 %cmp394, label %land.lhs.true.396, label %if.else.400

land.lhs.true.396:                                ; preds = %land.lhs.true.392
  %212 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_gid = getelementptr inbounds %struct.address, %struct.address* %212, i32 0, i32 7
  %213 = load i32, i32* %q_gid, align 4, !tbaa !84
  %cmp397 = icmp eq i32 %213, 0
  br i1 %cmp397, label %if.then.399, label %if.else.400

if.then.399:                                      ; preds = %land.lhs.true.396
  %214 = load i32, i32* @DefGid, align 4, !tbaa !5
  store i32 %214, i32* @RealGid, align 4, !tbaa !5
  %215 = load i8*, i8** @DefUser, align 8, !tbaa !1
  store i8* %215, i8** @RealUserName, align 8, !tbaa !1
  br label %if.end.421

if.else.400:                                      ; preds = %land.lhs.true.396, %land.lhs.true.392, %if.else.389
  %216 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %cmp401 = icmp ne %struct.address* %216, null
  br i1 %cmp401, label %land.lhs.true.403, label %if.else.409

land.lhs.true.403:                                ; preds = %if.else.400
  %217 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_uid404 = getelementptr inbounds %struct.address, %struct.address* %217, i32 0, i32 6
  %218 = load i32, i32* %q_uid404, align 4, !tbaa !83
  %cmp405 = icmp ne i32 %218, 0
  br i1 %cmp405, label %if.then.407, label %if.else.409

if.then.407:                                      ; preds = %land.lhs.true.403
  %219 = load %struct.address*, %struct.address** %ctladdr.addr, align 8, !tbaa !1
  %q_gid408 = getelementptr inbounds %struct.address, %struct.address* %219, i32 0, i32 7
  %220 = load i32, i32* %q_gid408, align 4, !tbaa !84
  store i32 %220, i32* @RealGid, align 4, !tbaa !5
  br label %if.end.420

if.else.409:                                      ; preds = %land.lhs.true.403, %if.else.400
  %221 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %cmp410 = icmp ne %struct.mailer* %221, null
  br i1 %cmp410, label %land.lhs.true.412, label %if.else.418

land.lhs.true.412:                                ; preds = %if.else.409
  %222 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_gid413 = getelementptr inbounds %struct.mailer, %struct.mailer* %222, i32 0, i32 20
  %223 = load i32, i32* %m_gid413, align 4, !tbaa !106
  %cmp414 = icmp ne i32 %223, -1
  br i1 %cmp414, label %if.then.416, label %if.else.418

if.then.416:                                      ; preds = %land.lhs.true.412
  %224 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_gid417 = getelementptr inbounds %struct.mailer, %struct.mailer* %224, i32 0, i32 20
  %225 = load i32, i32* %m_gid417, align 4, !tbaa !106
  store i32 %225, i32* @RealGid, align 4, !tbaa !5
  br label %if.end.419

if.else.418:                                      ; preds = %land.lhs.true.412, %if.else.409
  %226 = load i32, i32* @DefGid, align 4, !tbaa !5
  store i32 %226, i32* @RealGid, align 4, !tbaa !5
  br label %if.end.419

if.end.419:                                       ; preds = %if.else.418, %if.then.416
  br label %if.end.420

if.end.420:                                       ; preds = %if.end.419, %if.then.407
  br label %if.end.421

if.end.421:                                       ; preds = %if.end.420, %if.then.399
  br label %if.end.422

if.end.422:                                       ; preds = %if.end.421, %if.then.388
  br label %if.end.423

if.end.423:                                       ; preds = %if.end.422, %if.end.383
  br label %if.end.424

if.end.424:                                       ; preds = %if.end.423, %if.end.297
  %227 = load volatile i64, i64* %sfflags.addr, align 8, !tbaa !32
  %and425 = and i64 %227, 4
  %cmp426 = icmp ne i64 %and425, 0
  br i1 %cmp426, label %if.end.437, label %if.then.428

if.then.428:                                      ; preds = %if.end.424
  %228 = load i32, i32* @RealUid, align 4, !tbaa !5
  %cmp429 = icmp eq i32 %228, 0
  br i1 %cmp429, label %if.then.431, label %if.end.432

if.then.431:                                      ; preds = %if.then.428
  %229 = load i32, i32* @DefUid, align 4, !tbaa !5
  store i32 %229, i32* @RealUid, align 4, !tbaa !5
  br label %if.end.432

if.end.432:                                       ; preds = %if.then.431, %if.then.428
  %230 = load i32, i32* @RealGid, align 4, !tbaa !5
  %cmp433 = icmp eq i32 %230, 0
  br i1 %cmp433, label %if.then.435, label %if.end.436

if.then.435:                                      ; preds = %if.end.432
  %231 = load i32, i32* @DefGid, align 4, !tbaa !5
  store i32 %231, i32* @RealGid, align 4, !tbaa !5
  br label %if.end.436

if.end.436:                                       ; preds = %if.then.435, %if.end.432
  br label %if.end.437

if.end.437:                                       ; preds = %if.end.436, %if.end.424
  %232 = load i8*, i8** @RealUserName, align 8, !tbaa !1
  %cmp438 = icmp ne i8* %232, null
  br i1 %cmp438, label %land.lhs.true.440, label %if.else.451

land.lhs.true.440:                                ; preds = %if.end.437
  %233 = load i32, i32* @DontInitGroups, align 4, !tbaa !5
  %tobool441 = icmp ne i32 %233, 0
  br i1 %tobool441, label %if.else.451, label %if.then.442

if.then.442:                                      ; preds = %land.lhs.true.440
  %234 = load i8*, i8** @RealUserName, align 8, !tbaa !1
  %235 = load i32, i32* @RealGid, align 4, !tbaa !5
  %call443 = call i32 @initgroups(i8* %234, i32 %235)
  %cmp444 = icmp eq i32 %call443, -1
  br i1 %cmp444, label %land.lhs.true.446, label %if.end.450

land.lhs.true.446:                                ; preds = %if.then.442
  %236 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool447 = icmp ne i32 %236, 0
  br i1 %tobool447, label %if.then.448, label %if.end.450

if.then.448:                                      ; preds = %land.lhs.true.446
  %237 = load i8*, i8** @RealUserName, align 8, !tbaa !1
  %238 = load i32, i32* @RealGid, align 4, !tbaa !5
  %conv449 = zext i32 %238 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.125, i32 0, i32 0), i8* %237, i64 %conv449)
  call void @exit(i32 75) #13
  unreachable

if.end.450:                                       ; preds = %land.lhs.true.446, %if.then.442
  br label %if.end.462

if.else.451:                                      ; preds = %land.lhs.true.440, %if.end.437
  %239 = bitcast [1 x i32]* %gidset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %239) #1
  %240 = load i32, i32* @RealGid, align 4, !tbaa !5
  %arrayidx453 = getelementptr inbounds [1 x i32], [1 x i32]* %gidset, i32 0, i64 0
  store i32 %240, i32* %arrayidx453, align 4, !tbaa !5
  %arraydecay454 = getelementptr inbounds [1 x i32], [1 x i32]* %gidset, i32 0, i32 0
  %call455 = call i32 @setgroups(i64 1, i32* %arraydecay454) #1
  %cmp456 = icmp eq i32 %call455, -1
  br i1 %cmp456, label %land.lhs.true.458, label %if.end.461

land.lhs.true.458:                                ; preds = %if.else.451
  %241 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool459 = icmp ne i32 %241, 0
  br i1 %tobool459, label %if.then.460, label %if.end.461

if.then.460:                                      ; preds = %land.lhs.true.458
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.126, i32 0, i32 0))
  call void @exit(i32 75) #13
  unreachable

if.end.461:                                       ; preds = %land.lhs.true.458, %if.else.451
  %242 = bitcast [1 x i32]* %gidset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %242) #1
  br label %if.end.462

if.end.462:                                       ; preds = %if.end.461, %if.end.450
  %243 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %arraydecay463 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %cmp464 = icmp ne i8* %243, %arraydecay463
  br i1 %cmp464, label %if.then.466, label %if.end.483

if.then.466:                                      ; preds = %if.end.462
  call void @llvm.lifetime.start(i64 1, i8* %save) #1
  %244 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %245 = load i8, i8* %244, align 1, !tbaa !15
  store i8 %245, i8* %save, align 1, !tbaa !15
  %246 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  store i8 0, i8* %246, align 1, !tbaa !15
  %247 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv468 = zext i8 %247 to i32
  %cmp469 = icmp sge i32 %conv468, 20
  br i1 %cmp469, label %land.lhs.true.471, label %if.end.475

land.lhs.true.471:                                ; preds = %if.then.466
  %248 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool472 = icmp ne i32 %248, 0
  br i1 %tobool472, label %if.end.475, label %if.then.473

if.then.473:                                      ; preds = %land.lhs.true.471
  %arraydecay474 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.127, i32 0, i32 0), i8* %arraydecay474)
  br label %if.end.475

if.end.475:                                       ; preds = %if.then.473, %land.lhs.true.471, %if.then.466
  %arraydecay476 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %call477 = call i32 @chroot(i8* %arraydecay476) #1
  %cmp478 = icmp slt i32 %call477, 0
  br i1 %cmp478, label %if.then.480, label %if.end.482

if.then.480:                                      ; preds = %if.end.475
  %arraydecay481 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.128, i32 0, i32 0), i8* %arraydecay481)
  call void @exit(i32 73) #13
  unreachable

if.end.482:                                       ; preds = %if.end.475
  %249 = load i8, i8* %save, align 1, !tbaa !15
  %250 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  store i8 %249, i8* %250, align 1, !tbaa !15
  call void @llvm.lifetime.end(i64 1, i8* %save) #1
  br label %if.end.483

if.end.483:                                       ; preds = %if.end.482, %if.end.462
  %251 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv484 = zext i8 %251 to i32
  %cmp485 = icmp sge i32 %conv484, 40
  br i1 %cmp485, label %land.lhs.true.487, label %if.end.490

land.lhs.true.487:                                ; preds = %if.end.483
  %252 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool488 = icmp ne i32 %252, 0
  br i1 %tobool488, label %if.end.490, label %if.then.489

if.then.489:                                      ; preds = %land.lhs.true.487
  %253 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.129, i32 0, i32 0), i8* %253)
  br label %if.end.490

if.end.490:                                       ; preds = %if.then.489, %land.lhs.true.487, %if.end.483
  %call491 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0)) #1
  %cmp492 = icmp slt i32 %call491, 0
  br i1 %cmp492, label %if.then.494, label %if.end.495

if.then.494:                                      ; preds = %if.end.490
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i32 0, i32 0))
  call void @exit(i32 73) #13
  unreachable

if.end.495:                                       ; preds = %if.end.490
  call void @endpwent()
  call void @sm_mbdb_terminate()
  %254 = load i32, i32* @RealGid, align 4, !tbaa !5
  %call496 = call i32 @setgid(i32 %254) #1
  %cmp497 = icmp slt i32 %call496, 0
  br i1 %cmp497, label %land.lhs.true.499, label %if.end.503

land.lhs.true.499:                                ; preds = %if.end.495
  %255 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool500 = icmp ne i32 %255, 0
  br i1 %tobool500, label %if.then.501, label %if.end.503

if.then.501:                                      ; preds = %land.lhs.true.499
  %256 = load i32, i32* @RealGid, align 4, !tbaa !5
  %conv502 = zext i32 %256 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.131, i32 0, i32 0), i64 %conv502)
  call void @exit(i32 75) #13
  unreachable

if.end.503:                                       ; preds = %land.lhs.true.499, %if.end.495
  %257 = load i32, i32* @RealUid, align 4, !tbaa !5
  call void @vendor_set_uid(i32 %257)
  %258 = load i32, i32* @RealUid, align 4, !tbaa !5
  %call504 = call i32 @setuid(i32 %258) #1
  %cmp505 = icmp slt i32 %call504, 0
  br i1 %cmp505, label %land.lhs.true.507, label %if.end.511

land.lhs.true.507:                                ; preds = %if.end.503
  %259 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool508 = icmp ne i32 %259, 0
  br i1 %tobool508, label %if.then.509, label %if.end.511

if.then.509:                                      ; preds = %land.lhs.true.507
  %260 = load i32, i32* @RealUid, align 4, !tbaa !5
  %conv510 = zext i32 %260 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.132, i32 0, i32 0), i64 %conv510)
  call void @exit(i32 75) #13
  unreachable

if.end.511:                                       ; preds = %land.lhs.true.507, %if.end.503
  %261 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv512 = zext i8 %261 to i32
  %cmp513 = icmp sge i32 %conv512, 2
  br i1 %cmp513, label %land.lhs.true.515, label %if.end.526

land.lhs.true.515:                                ; preds = %if.end.511
  %262 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool516 = icmp ne i32 %262, 0
  br i1 %tobool516, label %if.end.526, label %if.then.517

if.then.517:                                      ; preds = %land.lhs.true.515
  %call518 = call i32 @getuid() #1
  %conv519 = zext i32 %call518 to i64
  %call520 = call i32 @geteuid() #1
  %conv521 = zext i32 %call520 to i64
  %call522 = call i32 @getgid() #1
  %conv523 = zext i32 %call522 to i64
  %call524 = call i32 @getegid() #1
  %conv525 = zext i32 %call524 to i64
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.133, i32 0, i32 0), i64 %conv519, i64 %conv521, i64 %conv523, i64 %conv525)
  br label %if.end.526

if.end.526:                                       ; preds = %if.then.517, %land.lhs.true.515, %if.end.511
  %263 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_execdir = getelementptr inbounds %struct.mailer, %struct.mailer* %263, i32 0, i32 17
  %264 = load i8*, i8** %m_execdir, align 8, !tbaa !108
  %cmp527 = icmp ne i8* %264, null
  br i1 %cmp527, label %if.then.529, label %if.end.567

if.then.529:                                      ; preds = %if.end.526
  %265 = bitcast i8** %q to i8*
  call void @llvm.lifetime.start(i64 8, i8* %265) #1
  %266 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_execdir531 = getelementptr inbounds %struct.mailer, %struct.mailer* %266, i32 0, i32 17
  %267 = load i8*, i8** %m_execdir531, align 8, !tbaa !108
  store i8* %267, i8** %p, align 8, !tbaa !1
  br label %for.cond.532

for.cond.532:                                     ; preds = %for.inc, %if.then.529
  %268 = load i8*, i8** %p, align 8, !tbaa !1
  %cmp533 = icmp ne i8* %268, null
  br i1 %cmp533, label %for.body.535, label %for.end.566

for.body.535:                                     ; preds = %for.cond.532
  %269 = load i8*, i8** %p, align 8, !tbaa !1
  %call536 = call i8* @strchr(i8* %269, i32 58) #1
  store i8* %call536, i8** %q, align 8, !tbaa !1
  %270 = load i8*, i8** %q, align 8, !tbaa !1
  %cmp537 = icmp ne i8* %270, null
  br i1 %cmp537, label %if.then.539, label %if.end.540

if.then.539:                                      ; preds = %for.body.535
  %271 = load i8*, i8** %q, align 8, !tbaa !1
  store i8 0, i8* %271, align 1, !tbaa !15
  br label %if.end.540

if.end.540:                                       ; preds = %if.then.539, %for.body.535
  %272 = load i8*, i8** %p, align 8, !tbaa !1
  %arraydecay541 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0
  %273 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %272, i8* %arraydecay541, i64 4096, %struct.envelope* %273)
  %274 = load i8*, i8** %q, align 8, !tbaa !1
  %cmp542 = icmp ne i8* %274, null
  br i1 %cmp542, label %if.then.544, label %if.end.546

if.then.544:                                      ; preds = %if.end.540
  %275 = load i8*, i8** %q, align 8, !tbaa !1
  %incdec.ptr545 = getelementptr inbounds i8, i8* %275, i32 1
  store i8* %incdec.ptr545, i8** %q, align 8, !tbaa !1
  store i8 58, i8* %275, align 1, !tbaa !15
  br label %if.end.546

if.end.546:                                       ; preds = %if.then.544, %if.end.540
  %276 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv547 = zext i8 %276 to i32
  %cmp548 = icmp sge i32 %conv547, 20
  br i1 %cmp548, label %land.lhs.true.550, label %if.end.554

land.lhs.true.550:                                ; preds = %if.end.546
  %277 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool551 = icmp ne i32 %277, 0
  br i1 %tobool551, label %if.end.554, label %if.then.552

if.then.552:                                      ; preds = %land.lhs.true.550
  %arraydecay553 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.134, i32 0, i32 0), i8* %arraydecay553)
  br label %if.end.554

if.end.554:                                       ; preds = %if.then.552, %land.lhs.true.550, %if.end.546
  %arrayidx555 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i64 0
  %278 = load i8, i8* %arrayidx555, align 1, !tbaa !15
  %conv556 = sext i8 %278 to i32
  %cmp557 = icmp ne i32 %conv556, 0
  br i1 %cmp557, label %land.lhs.true.559, label %if.end.565

land.lhs.true.559:                                ; preds = %if.end.554
  %arraydecay560 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf, i32 0, i32 0
  %call561 = call i32 @chdir(i8* %arraydecay560) #1
  %cmp562 = icmp sge i32 %call561, 0
  br i1 %cmp562, label %if.then.564, label %if.end.565

if.then.564:                                      ; preds = %land.lhs.true.559
  br label %for.end.566

if.end.565:                                       ; preds = %land.lhs.true.559, %if.end.554
  br label %for.inc

for.inc:                                          ; preds = %if.end.565
  %279 = load i8*, i8** %q, align 8, !tbaa !1
  store i8* %279, i8** %p, align 8, !tbaa !1
  br label %for.cond.532

for.end.566:                                      ; preds = %if.then.564, %for.cond.532
  %280 = bitcast i8** %q to i8*
  call void @llvm.lifetime.end(i64 8, i8* %280) #1
  br label %if.end.567

if.end.567:                                       ; preds = %for.end.566, %if.end.526
  %281 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @DontBlameSendmail, i32 0, i64 0), align 4, !tbaa !5
  %and568 = and i32 %281, 65536
  %tobool569 = icmp ne i32 %and568, 0
  br i1 %tobool569, label %if.then.570, label %if.else.572

if.then.570:                                      ; preds = %if.end.567
  %282 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %call571 = call i32 @stat(i8* %282, %struct.stat* %stb) #1
  store i32 %call571, i32* %err, align 4, !tbaa !5
  br label %if.end.574

if.else.572:                                      ; preds = %if.end.567
  %283 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %call573 = call i32 @lstat(i8* %283, %struct.stat* %stb) #1
  store i32 %call573, i32* %err, align 4, !tbaa !5
  br label %if.end.574

if.end.574:                                       ; preds = %if.else.572, %if.then.570
  %284 = load i32, i32* %err, align 4, !tbaa !5
  %cmp575 = icmp slt i32 %284, 0
  br i1 %cmp575, label %if.then.577, label %if.else.579

if.then.577:                                      ; preds = %if.end.574
  %st_mode578 = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 3
  store i32 62055, i32* %st_mode578, align 4, !tbaa !102
  %285 = load i32, i32* @FileMode, align 4, !tbaa !5
  store volatile i32 %285, i32* %mode, align 4, !tbaa !5
  %286 = load volatile i32, i32* %oflags, align 4, !tbaa !5
  %or = or i32 %286, 192
  store volatile i32 %or, i32* %oflags, align 4, !tbaa !5
  br label %if.end.601

if.else.579:                                      ; preds = %if.end.574
  %287 = load volatile i32, i32* %mode, align 4, !tbaa !5
  %and580 = and i32 %287, 73
  %cmp581 = icmp ne i32 %and580, 0
  br i1 %cmp581, label %if.then.597, label %lor.lhs.false.583

lor.lhs.false.583:                                ; preds = %if.else.579
  %288 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @DontBlameSendmail, i32 0, i64 0), align 4, !tbaa !5
  %and584 = and i32 %288, 32768
  %tobool585 = icmp ne i32 %and584, 0
  br i1 %tobool585, label %lor.lhs.false.589, label %land.lhs.true.586

land.lhs.true.586:                                ; preds = %lor.lhs.false.583
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 2
  %289 = load i64, i64* %st_nlink, align 8, !tbaa !109
  %cmp587 = icmp ne i64 %289, 1
  br i1 %cmp587, label %if.then.597, label %lor.lhs.false.589

lor.lhs.false.589:                                ; preds = %land.lhs.true.586, %lor.lhs.false.583
  %290 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %arraydecay590 = getelementptr inbounds [4096 x i8], [4096 x i8]* %targetfile, i32 0, i32 0
  %cmp591 = icmp ne i8* %290, %arraydecay590
  br i1 %cmp591, label %land.lhs.true.593, label %if.else.598

land.lhs.true.593:                                ; preds = %lor.lhs.false.589
  %291 = load volatile i32, i32* %mode, align 4, !tbaa !5
  %and594 = and i32 %291, 61440
  %cmp595 = icmp eq i32 %and594, 32768
  br i1 %cmp595, label %if.else.598, label %if.then.597

if.then.597:                                      ; preds = %land.lhs.true.593, %land.lhs.true.586, %if.else.579
  call void @exit(i32 73) #13
  unreachable

if.else.598:                                      ; preds = %land.lhs.true.593, %lor.lhs.false.589
  %st_mode599 = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 3
  %292 = load i32, i32* %st_mode599, align 4, !tbaa !102
  store volatile i32 %292, i32* %mode, align 4, !tbaa !5
  br label %if.end.600

if.end.600:                                       ; preds = %if.else.598
  br label %if.end.601

if.end.601:                                       ; preds = %if.end.600, %if.then.577
  %293 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @DontBlameSendmail, i32 0, i64 0), align 4, !tbaa !5
  %and602 = and i32 %293, 65536
  %tobool603 = icmp ne i32 %and602, 0
  br i1 %tobool603, label %if.end.606, label %if.then.604

if.then.604:                                      ; preds = %if.end.601
  %294 = load volatile i64, i64* %sfflags.addr, align 8, !tbaa !32
  %or605 = or i64 %294, 2
  store volatile i64 %or605, i64* %sfflags.addr, align 8, !tbaa !32
  br label %if.end.606

if.end.606:                                       ; preds = %if.then.604, %if.end.601
  %295 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @DontBlameSendmail, i32 0, i64 0), align 4, !tbaa !5
  %and607 = and i32 %295, 32768
  %tobool608 = icmp ne i32 %and607, 0
  br i1 %tobool608, label %if.end.611, label %if.then.609

if.then.609:                                      ; preds = %if.end.606
  %296 = load volatile i64, i64* %sfflags.addr, align 8, !tbaa !32
  %or610 = or i64 %296, 512
  store volatile i64 %or610, i64* %sfflags.addr, align 8, !tbaa !32
  br label %if.end.611

if.end.611:                                       ; preds = %if.then.609, %if.end.606
  %297 = load volatile i64, i64* %sfflags.addr, align 8, !tbaa !32
  %and612 = and i64 %297, -8193
  store volatile i64 %and612, i64* %sfflags.addr, align 8, !tbaa !32
  %298 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %299 = load volatile i32, i32* %oflags, align 4, !tbaa !5
  %300 = load volatile i32, i32* %mode, align 4, !tbaa !5
  %301 = load volatile i64, i64* %sfflags.addr, align 8, !tbaa !32
  %call613 = call %struct.sm_file* @safefopen(i8* %298, i32 %299, i32 %300, i64 %301)
  store %struct.sm_file* %call613, %struct.sm_file** %f, align 8, !tbaa !1
  %302 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %cmp614 = icmp eq %struct.sm_file* %302, null
  br i1 %cmp614, label %if.then.616, label %if.end.628

if.then.616:                                      ; preds = %if.end.611
  %call617 = call i32* @__errno_location() #11
  %303 = load i32, i32* %call617, align 4, !tbaa !5
  %call618 = call i32 @transienterror(i32 %303)
  %tobool619 = icmp ne i32 %call618, 0
  br i1 %tobool619, label %if.then.620, label %if.else.624

if.then.620:                                      ; preds = %if.then.616
  %304 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %call621 = call i8* @shortenstring(i8* %304, i64 203)
  %call622 = call i32* @__errno_location() #11
  %305 = load i32, i32* %call622, align 4, !tbaa !5
  %call623 = call i8* @sm_errstring(i32 %305)
  call void (i8*, ...) @usrerr(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.135, i32 0, i32 0), i8* %call621, i8* %call623)
  call void @exit(i32 75) #13
  unreachable

if.else.624:                                      ; preds = %if.then.616
  %306 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %call625 = call i8* @shortenstring(i8* %306, i64 203)
  %call626 = call i32* @__errno_location() #11
  %307 = load i32, i32* %call626, align 4, !tbaa !5
  %call627 = call i8* @sm_errstring(i32 %307)
  call void (i8*, ...) @usrerr(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.136, i32 0, i32 0), i8* %call625, i8* %call627)
  call void @exit(i32 73) #13
  unreachable

if.end.628:                                       ; preds = %if.end.611
  %308 = load volatile i8*, i8** %realfile, align 8, !tbaa !1
  %309 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %call629 = call i32 @sm_io_getinfo(%struct.sm_file* %309, i32 3, i8* null)
  %call630 = call i32 @filechanged(i8* %308, i32 %call629, %struct.stat* %stb)
  %tobool631 = icmp ne i32 %call630, 0
  br i1 %tobool631, label %if.then.632, label %if.end.633

if.then.632:                                      ; preds = %if.end.628
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.137, i32 0, i32 0))
  call void @exit(i32 73) #13
  unreachable

if.end.633:                                       ; preds = %if.end.628
  %310 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %call634 = call i32 @sm_io_getinfo(%struct.sm_file* %310, i32 3, i8* null)
  %call635 = call i32 @fstat(i32 %call634, %struct.stat* %stb) #1
  %cmp636 = icmp slt i32 %call635, 0
  br i1 %cmp636, label %if.then.638, label %if.end.641

if.then.638:                                      ; preds = %if.end.633
  %call639 = call i32* @__errno_location() #11
  %311 = load i32, i32* %call639, align 4, !tbaa !5
  %call640 = call i8* @sm_errstring(i32 %311)
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.138, i32 0, i32 0), i8* %call640)
  call void @exit(i32 73) #13
  unreachable

if.end.641:                                       ; preds = %if.end.633
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 8
  %312 = load i64, i64* %st_size, align 8, !tbaa !110
  store i64 %312, i64* %curoff, align 8, !tbaa !32
  %313 = load %struct.sm_event*, %struct.sm_event** %ev, align 8, !tbaa !1
  %cmp642 = icmp ne %struct.sm_event* %313, null
  br i1 %cmp642, label %if.then.644, label %if.end.645

if.then.644:                                      ; preds = %if.end.641
  %314 = load %struct.sm_event*, %struct.sm_event** %ev, align 8, !tbaa !1
  call void @sm_clrevent(%struct.sm_event* %314)
  br label %if.end.645

if.end.645:                                       ; preds = %if.then.644, %if.end.641
  %315 = bitcast %struct.mailer_con_info* %mcibuf to i8*
  call void @llvm.memset.p0i8.i64(i8* %315, i8 0, i64 2256, i32 8, i1 false)
  %316 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %mci_mailer = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %mcibuf, i32 0, i32 11
  store %struct.mailer* %316, %struct.mailer** %mci_mailer, align 8, !tbaa !79
  %317 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %mci_out = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %mcibuf, i32 0, i32 8
  store %struct.sm_file* %317, %struct.sm_file** %mci_out, align 8, !tbaa !73
  %318 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_flags646 = getelementptr inbounds %struct.mailer, %struct.mailer* %318, i32 0, i32 5
  %arrayidx647 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags646, i32 0, i64 1
  %319 = load i32, i32* %arrayidx647, align 4, !tbaa !5
  %and648 = and i32 %319, 8388608
  %tobool649 = icmp ne i32 %and648, 0
  br i1 %tobool649, label %if.then.650, label %if.end.652

if.then.650:                                      ; preds = %if.end.645
  %mci_flags = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %mcibuf, i32 0, i32 0
  %320 = load i64, i64* %mci_flags, align 8, !tbaa !71
  %or651 = or i64 %320, 128
  store i64 %or651, i64* %mci_flags, align 8, !tbaa !71
  br label %if.end.652

if.end.652:                                       ; preds = %if.then.650, %if.end.645
  %mci_flags653 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %mcibuf, i32 0, i32 0
  %321 = load i64, i64* %mci_flags653, align 8, !tbaa !71
  %and654 = and i64 %321, -9217
  store i64 %and654, i64* %mci_flags653, align 8, !tbaa !71
  %322 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags655 = getelementptr inbounds %struct.envelope, %struct.envelope* %322, i32 0, i32 11
  %323 = load i64, i64* %e_flags655, align 8, !tbaa !7
  %and656 = and i64 %323, 131072
  %cmp657 = icmp ne i64 %and656, 0
  br i1 %cmp657, label %land.lhs.true.659, label %if.end.672

land.lhs.true.659:                                ; preds = %if.end.652
  %324 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags660 = getelementptr inbounds %struct.envelope, %struct.envelope* %324, i32 0, i32 11
  %325 = load i64, i64* %e_flags660, align 8, !tbaa !7
  %and661 = and i64 %325, 8388608
  %cmp662 = icmp ne i64 %and661, 0
  br i1 %cmp662, label %if.end.672, label %land.lhs.true.664

land.lhs.true.664:                                ; preds = %land.lhs.true.659
  %326 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_flags665 = getelementptr inbounds %struct.mailer, %struct.mailer* %326, i32 0, i32 5
  %arrayidx666 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags665, i32 0, i64 1
  %327 = load i32, i32* %arrayidx666, align 4, !tbaa !5
  %and667 = and i32 %327, 8388608
  %tobool668 = icmp ne i32 %and667, 0
  br i1 %tobool668, label %if.then.669, label %if.end.672

if.then.669:                                      ; preds = %land.lhs.true.664
  %mci_flags670 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %mcibuf, i32 0, i32 0
  %328 = load i64, i64* %mci_flags670, align 8, !tbaa !71
  %or671 = or i64 %328, 1024
  store i64 %or671, i64* %mci_flags670, align 8, !tbaa !71
  br label %if.end.672

if.end.672:                                       ; preds = %if.then.669, %land.lhs.true.664, %land.lhs.true.659, %if.end.652
  %329 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_flags673 = getelementptr inbounds %struct.mailer, %struct.mailer* %329, i32 0, i32 5
  %arrayidx674 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags673, i32 0, i64 1
  %330 = load i32, i32* %arrayidx674, align 4, !tbaa !5
  %and675 = and i32 %330, 33554432
  %tobool676 = icmp ne i32 %and675, 0
  br i1 %tobool676, label %land.lhs.true.677, label %if.end.722

land.lhs.true.677:                                ; preds = %if.end.672
  %mci_flags678 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %mcibuf, i32 0, i32 0
  %331 = load i64, i64* %mci_flags678, align 8, !tbaa !71
  %and679 = and i64 %331, 128
  %cmp680 = icmp ne i64 %and679, 0
  br i1 %cmp680, label %if.end.722, label %land.lhs.true.682

land.lhs.true.682:                                ; preds = %land.lhs.true.677
  %332 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header = getelementptr inbounds %struct.envelope, %struct.envelope* %332, i32 0, i32 0
  %333 = load %struct.header*, %struct.header** %e_header, align 8, !tbaa !42
  %call683 = call i8* @hvalue(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.139, i32 0, i32 0), %struct.header* %333)
  store i8* %call683, i8** %p, align 8, !tbaa !1
  %cmp684 = icmp ne i8* %call683, null
  br i1 %cmp684, label %land.lhs.true.686, label %if.end.722

land.lhs.true.686:                                ; preds = %land.lhs.true.682
  %334 = load i8*, i8** %p, align 8, !tbaa !1
  %call687 = call i32 @sm_strcasecmp(i8* %334, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.140, i32 0, i32 0))
  %cmp688 = icmp eq i32 %call687, 0
  br i1 %cmp688, label %land.lhs.true.694, label %lor.lhs.false.690

lor.lhs.false.690:                                ; preds = %land.lhs.true.686
  %335 = load i8*, i8** %p, align 8, !tbaa !1
  %call691 = call i32 @sm_strcasecmp(i8* %335, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0))
  %cmp692 = icmp eq i32 %call691, 0
  br i1 %cmp692, label %land.lhs.true.694, label %if.end.722

land.lhs.true.694:                                ; preds = %lor.lhs.false.690, %land.lhs.true.686
  %336 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header695 = getelementptr inbounds %struct.envelope, %struct.envelope* %336, i32 0, i32 0
  %337 = load %struct.header*, %struct.header** %e_header695, align 8, !tbaa !42
  %call696 = call i8* @hvalue(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), %struct.header* %337)
  store i8* %call696, i8** %p, align 8, !tbaa !1
  %cmp697 = icmp ne i8* %call696, null
  br i1 %cmp697, label %if.then.699, label %if.end.722

if.then.699:                                      ; preds = %land.lhs.true.694
  %338 = load i8*, i8** %p, align 8, !tbaa !1
  %call700 = call i32 @sm_strncasecmp(i8* %338, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i32 0, i32 0), i64 10)
  %cmp701 = icmp eq i32 %call700, 0
  br i1 %cmp701, label %land.lhs.true.703, label %if.end.721

land.lhs.true.703:                                ; preds = %if.then.699
  %339 = load i8*, i8** %p, align 8, !tbaa !1
  %arrayidx704 = getelementptr inbounds i8, i8* %339, i64 10
  %340 = load i8, i8* %arrayidx704, align 1, !tbaa !15
  %conv705 = sext i8 %340 to i32
  %cmp706 = icmp eq i32 %conv705, 0
  br i1 %cmp706, label %if.then.718, label %lor.lhs.false.708

lor.lhs.false.708:                                ; preds = %land.lhs.true.703
  %341 = load i8*, i8** %p, align 8, !tbaa !1
  %arrayidx709 = getelementptr inbounds i8, i8* %341, i64 10
  %342 = load i8, i8* %arrayidx709, align 1, !tbaa !15
  %conv710 = sext i8 %342 to i32
  %cmp711 = icmp eq i32 %conv710, 32
  br i1 %cmp711, label %if.then.718, label %lor.lhs.false.713

lor.lhs.false.713:                                ; preds = %lor.lhs.false.708
  %343 = load i8*, i8** %p, align 8, !tbaa !1
  %arrayidx714 = getelementptr inbounds i8, i8* %343, i64 10
  %344 = load i8, i8* %arrayidx714, align 1, !tbaa !15
  %conv715 = sext i8 %344 to i32
  %cmp716 = icmp eq i32 %conv715, 59
  br i1 %cmp716, label %if.then.718, label %if.end.721

if.then.718:                                      ; preds = %lor.lhs.false.713, %lor.lhs.false.708, %land.lhs.true.703
  %mci_flags719 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %mcibuf, i32 0, i32 0
  %345 = load i64, i64* %mci_flags719, align 8, !tbaa !71
  %or720 = or i64 %345, 8192
  store i64 %or720, i64* %mci_flags719, align 8, !tbaa !71
  br label %if.end.721

if.end.721:                                       ; preds = %if.then.718, %lor.lhs.false.713, %if.then.699
  br label %if.end.722

if.end.722:                                       ; preds = %if.end.721, %land.lhs.true.694, %lor.lhs.false.690, %land.lhs.true.682, %land.lhs.true.677, %if.end.672
  %346 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call723 = call i32 @putfromline(%struct.mailer_con_info* %mcibuf, %struct.envelope* %346)
  %tobool724 = icmp ne i32 %call723, 0
  br i1 %tobool724, label %lor.lhs.false.725, label %if.then.751

lor.lhs.false.725:                                ; preds = %if.end.722
  %347 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_puthdr = getelementptr inbounds %struct.envelope, %struct.envelope* %347, i32 0, i32 19
  %348 = load i32 (%struct.mailer_con_info*, %struct.header*, %struct.envelope*, i32)*, i32 (%struct.mailer_con_info*, %struct.header*, %struct.envelope*, i32)** %e_puthdr, align 8, !tbaa !111
  %349 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header726 = getelementptr inbounds %struct.envelope, %struct.envelope* %349, i32 0, i32 0
  %350 = load %struct.header*, %struct.header** %e_header726, align 8, !tbaa !42
  %351 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call727 = call i32 %348(%struct.mailer_con_info* %mcibuf, %struct.header* %350, %struct.envelope* %351, i32 0)
  %tobool728 = icmp ne i32 %call727, 0
  br i1 %tobool728, label %lor.lhs.false.729, label %if.then.751

lor.lhs.false.729:                                ; preds = %lor.lhs.false.725
  %352 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_putbody = getelementptr inbounds %struct.envelope, %struct.envelope* %352, i32 0, i32 20
  %353 = load i32 (%struct.mailer_con_info*, %struct.envelope*, i8*)*, i32 (%struct.mailer_con_info*, %struct.envelope*, i8*)** %e_putbody, align 8, !tbaa !112
  %354 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call730 = call i32 %353(%struct.mailer_con_info* %mcibuf, %struct.envelope* %354, i8* null)
  %tobool731 = icmp ne i32 %call730, 0
  br i1 %tobool731, label %lor.lhs.false.732, label %if.then.751

lor.lhs.false.732:                                ; preds = %lor.lhs.false.729
  %call733 = call i32 @putline(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0), %struct.mailer_con_info* %mcibuf)
  %tobool734 = icmp ne i32 %call733, 0
  br i1 %tobool734, label %lor.lhs.false.735, label %if.then.751

lor.lhs.false.735:                                ; preds = %lor.lhs.false.732
  %355 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %call736 = call i32 @sm_io_flush(%struct.sm_file* %355, i32 -2)
  %cmp737 = icmp ne i32 %call736, 0
  br i1 %cmp737, label %if.then.751, label %lor.lhs.false.739

lor.lhs.false.739:                                ; preds = %lor.lhs.false.735
  %356 = load i32, i32* @SuperSafe, align 4, !tbaa !5
  %cmp740 = icmp ne i32 %356, 0
  br i1 %cmp740, label %land.lhs.true.742, label %lor.lhs.false.747

land.lhs.true.742:                                ; preds = %lor.lhs.false.739
  %357 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %call743 = call i32 @sm_io_getinfo(%struct.sm_file* %357, i32 3, i8* null)
  %call744 = call i32 @fsync(i32 %call743)
  %cmp745 = icmp slt i32 %call744, 0
  br i1 %cmp745, label %if.then.751, label %lor.lhs.false.747

lor.lhs.false.747:                                ; preds = %land.lhs.true.742, %lor.lhs.false.739
  %358 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %f_flags = getelementptr inbounds %struct.sm_file, %struct.sm_file* %358, i32 0, i32 4
  %359 = load i64, i64* %f_flags, align 8, !tbaa !94
  %and748 = and i64 %359, 256
  %cmp749 = icmp ne i64 %and748, 0
  br i1 %cmp749, label %if.then.751, label %if.end.761

if.then.751:                                      ; preds = %lor.lhs.false.747, %land.lhs.true.742, %lor.lhs.false.735, %lor.lhs.false.732, %lor.lhs.false.729, %lor.lhs.false.725, %if.end.722
  br label %do.body

do.body:                                          ; preds = %if.then.751
  %360 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp752 = icmp eq i32 %360, 0
  br i1 %cmp752, label %if.then.757, label %lor.lhs.false.754

lor.lhs.false.754:                                ; preds = %do.body
  %361 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp755 = icmp eq i32 %361, 75
  br i1 %cmp755, label %if.then.757, label %if.end.758

if.then.757:                                      ; preds = %lor.lhs.false.754, %do.body
  store i32 74, i32* @ExitStat, align 4, !tbaa !5
  br label %if.end.758

if.end.758:                                       ; preds = %if.then.757, %lor.lhs.false.754
  br label %do.cond

do.cond:                                          ; preds = %if.end.758
  br label %do.end

do.end:                                           ; preds = %do.cond
  %362 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %call759 = call i32 @sm_io_getinfo(%struct.sm_file* %362, i32 3, i8* null)
  %363 = load i64, i64* %curoff, align 8, !tbaa !32
  %call760 = call i32 @ftruncate(i32 %call759, i64 %363) #1
  br label %if.end.761

if.end.761:                                       ; preds = %do.end, %lor.lhs.false.747
  %364 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %call762 = call i32 @sm_io_getinfo(%struct.sm_file* %364, i32 3, i8* null)
  %365 = load volatile i32, i32* %mode, align 4, !tbaa !5
  %call763 = call i32 @fchmod(i32 %call762, i32 %365) #1
  %366 = load %struct.sm_file*, %struct.sm_file** %f, align 8, !tbaa !1
  %call764 = call i32 @sm_io_close(%struct.sm_file* %366, i32 -2)
  %cmp765 = icmp slt i32 %call764, 0
  br i1 %cmp765, label %if.then.767, label %if.end.778

if.then.767:                                      ; preds = %if.end.761
  br label %do.body.768

do.body.768:                                      ; preds = %if.then.767
  %367 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp769 = icmp eq i32 %367, 0
  br i1 %cmp769, label %if.then.774, label %lor.lhs.false.771

lor.lhs.false.771:                                ; preds = %do.body.768
  %368 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp772 = icmp eq i32 %368, 75
  br i1 %cmp772, label %if.then.774, label %if.end.775

if.then.774:                                      ; preds = %lor.lhs.false.771, %do.body.768
  store i32 74, i32* @ExitStat, align 4, !tbaa !5
  br label %if.end.775

if.end.775:                                       ; preds = %if.then.774, %lor.lhs.false.771
  br label %do.cond.776

do.cond.776:                                      ; preds = %if.end.775
  br label %do.end.777

do.end.777:                                       ; preds = %do.cond.776
  br label %if.end.778

if.end.778:                                       ; preds = %do.end.777, %if.end.761
  %call779 = call i32 @sm_io_flush(%struct.sm_file* getelementptr inbounds ([0 x %struct.sm_file], [0 x %struct.sm_file]* @SmIoF, i32 0, i64 1), i32 -2)
  %369 = load i32, i32* @RealUid, align 4, !tbaa !5
  %call780 = call i32 @setuid(i32 %369) #1
  %370 = load i32, i32* @ExitStat, align 4, !tbaa !5
  call void @exit(i32 %370) #13
  unreachable

if.else.781:                                      ; preds = %if.else.214
  %371 = bitcast i32* %st to i8*
  call void @llvm.lifetime.start(i64 4, i8* %371) #1
  %372 = load i32, i32* %pid, align 4, !tbaa !5
  %call783 = call i32 @waitfor(i32 %372)
  store i32 %call783, i32* %st, align 4, !tbaa !5
  %373 = load i32, i32* %st, align 4, !tbaa !5
  %cmp784 = icmp eq i32 %373, -1
  br i1 %cmp784, label %if.then.786, label %if.end.787

if.then.786:                                      ; preds = %if.else.781
  %374 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_name = getelementptr inbounds %struct.mailer, %struct.mailer* %374, i32 0, i32 0
  %375 = load i8*, i8** %m_name, align 8, !tbaa !63
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.143, i32 0, i32 0), i8* %375)
  store i32 70, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.787:                                       ; preds = %if.else.781
  %__in = bitcast %union.anon.4* %.compoundliteral to i32*
  %376 = load i32, i32* %st, align 4, !tbaa !5
  store i32 %376, i32* %__in, align 4, !tbaa !5
  %__i = bitcast %union.anon.4* %.compoundliteral to i32*
  %377 = load i32, i32* %__i, align 4, !tbaa !5
  %and788 = and i32 %377, 127
  %cmp789 = icmp eq i32 %and788, 0
  br i1 %cmp789, label %if.then.791, label %if.else.797

if.then.791:                                      ; preds = %if.end.787
  %call792 = call i32* @__errno_location() #11
  store i32 0, i32* %call792, align 4, !tbaa !5
  %__in794 = bitcast %union.anon.5* %.compoundliteral793 to i32*
  %378 = load i32, i32* %st, align 4, !tbaa !5
  store i32 %378, i32* %__in794, align 4, !tbaa !5
  %__i795 = bitcast %union.anon.5* %.compoundliteral793 to i32*
  %379 = load i32, i32* %__i795, align 4, !tbaa !5
  %and796 = and i32 %379, 65280
  %shr = ashr i32 %and796, 8
  store i32 %shr, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else.797:                                      ; preds = %if.end.787
  %380 = load volatile %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %m_name798 = getelementptr inbounds %struct.mailer, %struct.mailer* %380, i32 0, i32 0
  %381 = load i8*, i8** %m_name798, align 8, !tbaa !63
  %382 = load i32, i32* %st, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i32 0, i32 0), i8* %381, i32 %382)
  store i32 69, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.else.797, %if.then.791, %if.then.786
  %383 = bitcast i32* %st to i8*
  call void @llvm.lifetime.end(i64 4, i8* %383) #1
  br label %cleanup.799

cleanup.799:                                      ; preds = %cleanup, %if.then.213, %if.then.191, %if.then.159, %if.then.109, %if.then.84, %if.then.59
  %384 = bitcast [4096 x i8]* %targetfile to i8*
  call void @llvm.lifetime.end(i64 4096, i8* %384) #1
  %385 = bitcast [4096 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 4096, i8* %385) #1
  %386 = bitcast %struct.sm_event** %ev to i8*
  call void @llvm.lifetime.end(i64 8, i8* %386) #1
  %387 = bitcast i8** %realfile to i8*
  call void @llvm.lifetime.end(i64 8, i8* %387) #1
  %388 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %388) #1
  %389 = bitcast i32* %suidwarn to i8*
  call void @llvm.lifetime.end(i64 4, i8* %389) #1
  %390 = bitcast i64* %curoff to i8*
  call void @llvm.lifetime.end(i64 8, i8* %390) #1
  %391 = bitcast i32* %len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %391) #1
  %392 = bitcast i32* %mode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %392) #1
  %393 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %393) #1
  %394 = bitcast %struct.sm_file** %f to i8*
  call void @llvm.lifetime.end(i64 8, i8* %394) #1
  %395 = load i32, i32* %retval
  ret i32 %395
}

; Function Attrs: nounwind
declare i32 @geteuid() #4

declare void @usrerrenh(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare i32 @umask(i32) #4

; Function Attrs: nounwind uwtable
define internal void @mailfiletimeout(i32 %ignore) #0 {
entry:
  %ignore.addr = alloca i32, align 4
  store i32 %ignore, i32* %ignore.addr, align 4, !tbaa !5
  %call = call i32* @__errno_location() #11
  store i32 110, i32* %call, align 4, !tbaa !5
  call void @siglongjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @CtxMailfileTimeout, i32 0, i32 0), i32 1) #13
  unreachable

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define available_externally i32 @stat(i8* nonnull %__path, %struct.stat* nonnull %__statbuf) #9 {
entry:
  %__path.addr = alloca i8*, align 8
  %__statbuf.addr = alloca %struct.stat*, align 8
  store i8* %__path, i8** %__path.addr, align 8, !tbaa !1
  store %struct.stat* %__statbuf, %struct.stat** %__statbuf.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %__path.addr, align 8, !tbaa !1
  %1 = load %struct.stat*, %struct.stat** %__statbuf.addr, align 8, !tbaa !1
  %call = call i32 @__xstat(i32 1, i8* %0, %struct.stat* %1) #1
  ret i32 %call
}

; Function Attrs: nounwind
declare i32 @getgid() #4

; Function Attrs: nounwind
declare i32 @getegid() #4

declare i32 @initgroups(i8*, i32) #2

; Function Attrs: nounwind
declare i32 @setgroups(i64, i32*) #4

; Function Attrs: nounwind
declare i32 @chroot(i8*) #4

; Function Attrs: nounwind
declare i32 @chdir(i8*) #4

declare void @endpwent() #2

declare void @sm_mbdb_terminate() #2

; Function Attrs: nounwind
declare i32 @setgid(i32) #4

declare void @vendor_set_uid(i32) #2

; Function Attrs: nounwind
declare i32 @setuid(i32) #4

; Function Attrs: nounwind
declare i32 @getuid() #4

; Function Attrs: inlinehint nounwind uwtable
define available_externally i32 @lstat(i8* nonnull %__path, %struct.stat* nonnull %__statbuf) #9 {
entry:
  %__path.addr = alloca i8*, align 8
  %__statbuf.addr = alloca %struct.stat*, align 8
  store i8* %__path, i8** %__path.addr, align 8, !tbaa !1
  store %struct.stat* %__statbuf, %struct.stat** %__statbuf.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %__path.addr, align 8, !tbaa !1
  %1 = load %struct.stat*, %struct.stat** %__statbuf.addr, align 8, !tbaa !1
  %call = call i32 @__lxstat(i32 1, i8* %0, %struct.stat* %1) #1
  ret i32 %call
}

declare %struct.sm_file* @safefopen(i8*, i32, i32, i64) #2

declare i32 @transienterror(i32) #2

declare i32 @filechanged(i8*, i32, %struct.stat*) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

declare i32 @sm_strncasecmp(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare i32 @ftruncate(i32, i64) #4

; Function Attrs: nounwind
declare i32 @fchmod(i32, i32) #4

; Function Attrs: nounwind uwtable
define i8* @hostsignature(%struct.mailer* %m, i8* %host) #0 {
entry:
  %retval = alloca i8*, align 8
  %m.addr = alloca %struct.mailer*, align 8
  %host.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %s = alloca %struct.symtab*, align 8
  %now = alloca i64, align 8
  %sep = alloca i8, align 1
  %prevsep = alloca i8, align 1
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %nmx = alloca i32, align 4
  %hl = alloca i32, align 4
  %hp = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %oldoptions = alloca i32, align 4
  %mxhosts = alloca [101 x i8*], align 16
  %mxprefs = alloca [101 x i16], align 16
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp46 = alloca i32, align 4
  %__s1_len57 = alloca i64, align 8
  %__s2_len59 = alloca i64, align 8
  %tmp60 = alloca i32, align 4
  %__s166 = alloca i8*, align 8
  %__result70 = alloca i32, align 4
  %tmp108 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %__s1_len125 = alloca i64, align 8
  %__s2_len127 = alloca i64, align 8
  %tmp128 = alloca i32, align 4
  %__s1134 = alloca i8*, align 8
  %__result137 = alloca i32, align 4
  %tmp175 = alloca i32, align 4
  %__s1_len193 = alloca i64, align 8
  %__s2_len195 = alloca i64, align 8
  %tmp196 = alloca i32, align 4
  %__s1202 = alloca i8*, align 8
  %__result206 = alloca i32, align 4
  %tmp244 = alloca i32, align 4
  %__a0 = alloca i8, align 1
  %__a1 = alloca i8, align 1
  %__a2 = alloca i8, align 1
  %tmp302 = alloca i8*, align 8
  %rcode = alloca i32, align 4
  %ttl = alloca i32, align 4
  %save_errno = alloca i32, align 4
  %mci = alloca %struct.mailer_con_info*, align 8
  store %struct.mailer* %m, %struct.mailer** %m.addr, align 8, !tbaa !1
  store i8* %host, i8** %host.addr, align 8, !tbaa !1
  %0 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast %struct.symtab** %s to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i64* %now to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  call void @llvm.lifetime.start(i64 1, i8* %sep) #1
  store i8 58, i8* %sep, align 1, !tbaa !15
  call void @llvm.lifetime.start(i64 1, i8* %prevsep) #1
  store i8 58, i8* %prevsep, align 1, !tbaa !15
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i32* %len to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #1
  %5 = bitcast i32* %nmx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %5) #1
  %6 = bitcast i32* %hl to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #1
  %7 = bitcast i8** %hp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast i8** %endp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = bitcast i32* %oldoptions to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #1
  %call = call %struct.__res_state* @__res_state() #11
  %options = getelementptr inbounds %struct.__res_state, %struct.__res_state* %call, i32 0, i32 2
  %10 = load i64, i64* %options, align 8, !tbaa !113
  %conv = trunc i64 %10 to i32
  store i32 %conv, i32* %oldoptions, align 4, !tbaa !5
  %11 = bitcast [101 x i8*]* %mxhosts to i8*
  call void @llvm.lifetime.start(i64 808, i8* %11) #1
  %12 = bitcast [101 x i16]* %mxprefs to i8*
  call void @llvm.lifetime.start(i64 202, i8* %12) #1
  %13 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 17), align 1, !tbaa !15
  %conv1 = zext i8 %13 to i32
  %cmp = icmp sge i32 %conv1, 3
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %14 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %15 = load i8*, i8** %host.addr, align 8, !tbaa !1
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.145, i32 0, i32 0), i8* %15)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %16 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_flags = getelementptr inbounds %struct.mailer, %struct.mailer* %16, i32 0, i32 5
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags, i32 0, i64 3
  %17 = load i32, i32* %arrayidx, align 4, !tbaa !5
  %and = and i32 %17, 4096
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %land.lhs.true.4, label %if.end.118

land.lhs.true.4:                                  ; preds = %if.end
  %18 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #1
  %19 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %19) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1) to i64), i64 ptrtoint ([6 x i8]* @.str.21 to i64)), i64 1), label %land.lhs.true.5, label %cond.false

land.lhs.true.5:                                  ; preds = %land.lhs.true.4
  store i64 5, i64* %__s2_len, align 8, !tbaa !32
  %20 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp6 = icmp ult i64 %20, 4
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.5
  %21 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #1
  %22 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_mailer = getelementptr inbounds %struct.mailer, %struct.mailer* %22, i32 0, i32 1
  %23 = load i8*, i8** %m_mailer, align 8, !tbaa !33
  store i8* %23, i8** %__s1, align 8, !tbaa !1
  %24 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #1
  %25 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx10 = getelementptr inbounds i8, i8* %25, i64 0
  %26 = load i8, i8* %arrayidx10, align 1, !tbaa !15
  %conv11 = zext i8 %26 to i32
  %27 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), align 1, !tbaa !15
  %conv12 = zext i8 %27 to i32
  %sub = sub nsw i32 %conv11, %conv12
  store i32 %sub, i32* %__result, align 4, !tbaa !5
  %28 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp13 = icmp ugt i64 %28, 0
  br i1 %cmp13, label %land.lhs.true.15, label %if.end.45

land.lhs.true.15:                                 ; preds = %cond.true
  %29 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp16 = icmp eq i32 %29, 0
  br i1 %cmp16, label %if.then.18, label %if.end.45

if.then.18:                                       ; preds = %land.lhs.true.15
  %30 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx19 = getelementptr inbounds i8, i8* %30, i64 1
  %31 = load i8, i8* %arrayidx19, align 1, !tbaa !15
  %conv20 = zext i8 %31 to i32
  %32 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1), align 1, !tbaa !15
  %conv21 = zext i8 %32 to i32
  %sub22 = sub nsw i32 %conv20, %conv21
  store i32 %sub22, i32* %__result, align 4, !tbaa !5
  %33 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp23 = icmp ugt i64 %33, 1
  br i1 %cmp23, label %land.lhs.true.25, label %if.end.44

land.lhs.true.25:                                 ; preds = %if.then.18
  %34 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp26 = icmp eq i32 %34, 0
  br i1 %cmp26, label %if.then.28, label %if.end.44

if.then.28:                                       ; preds = %land.lhs.true.25
  %35 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx29 = getelementptr inbounds i8, i8* %35, i64 2
  %36 = load i8, i8* %arrayidx29, align 1, !tbaa !15
  %conv30 = zext i8 %36 to i32
  %37 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 2), align 1, !tbaa !15
  %conv31 = zext i8 %37 to i32
  %sub32 = sub nsw i32 %conv30, %conv31
  store i32 %sub32, i32* %__result, align 4, !tbaa !5
  %38 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp33 = icmp ugt i64 %38, 2
  br i1 %cmp33, label %land.lhs.true.35, label %if.end.43

land.lhs.true.35:                                 ; preds = %if.then.28
  %39 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp36 = icmp eq i32 %39, 0
  br i1 %cmp36, label %if.then.38, label %if.end.43

if.then.38:                                       ; preds = %land.lhs.true.35
  %40 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx39 = getelementptr inbounds i8, i8* %40, i64 3
  %41 = load i8, i8* %arrayidx39, align 1, !tbaa !15
  %conv40 = zext i8 %41 to i32
  %42 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 3), align 1, !tbaa !15
  %conv41 = zext i8 %42 to i32
  %sub42 = sub nsw i32 %conv40, %conv41
  store i32 %sub42, i32* %__result, align 4, !tbaa !5
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.38, %land.lhs.true.35, %if.then.28
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %land.lhs.true.25, %if.then.18
  br label %if.end.45

if.end.45:                                        ; preds = %if.end.44, %land.lhs.true.15, %cond.true
  %43 = load i32, i32* %__result, align 4, !tbaa !5
  store i32 %43, i32* %tmp46, !tbaa !5
  %44 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %44) #1
  %45 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %45) #1
  %46 = load i32, i32* %tmp46, !tbaa !5
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.5, %land.lhs.true.4
  %47 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_mailer47 = getelementptr inbounds %struct.mailer, %struct.mailer* %47, i32 0, i32 1
  %48 = load i8*, i8** %m_mailer47, align 8, !tbaa !33
  %call48 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0)) #1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.45
  %cond = phi i32 [ %46, %if.end.45 ], [ %call48, %cond.false ]
  store i32 %cond, i32* %tmp, !tbaa !5
  %49 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %49) #1
  %50 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %50) #1
  %51 = load i32, i32* %tmp, !tbaa !5
  %cmp49 = icmp ne i32 %51, 0
  br i1 %cmp49, label %land.lhs.true.51, label %if.end.118

land.lhs.true.51:                                 ; preds = %cond.end
  %52 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_argv = getelementptr inbounds %struct.mailer, %struct.mailer* %52, i32 0, i32 8
  %53 = load i8**, i8*** %m_argv, align 8, !tbaa !35
  %arrayidx52 = getelementptr inbounds i8*, i8** %53, i64 0
  %54 = load i8*, i8** %arrayidx52, align 8, !tbaa !1
  %cmp53 = icmp ne i8* %54, null
  br i1 %cmp53, label %land.lhs.true.55, label %if.then.117

land.lhs.true.55:                                 ; preds = %land.lhs.true.51
  %55 = bitcast i64* %__s1_len57 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %55) #1
  %56 = bitcast i64* %__s2_len59 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %56) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 1) to i64), i64 ptrtoint ([4 x i8]* @.str.22 to i64)), i64 1), label %land.lhs.true.61, label %cond.false.109

land.lhs.true.61:                                 ; preds = %land.lhs.true.55
  store i64 3, i64* %__s2_len59, align 8, !tbaa !32
  %57 = load i64, i64* %__s2_len59, align 8, !tbaa !32
  %cmp62 = icmp ult i64 %57, 4
  br i1 %cmp62, label %cond.true.64, label %cond.false.109

cond.true.64:                                     ; preds = %land.lhs.true.61
  %58 = bitcast i8** %__s166 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %58) #1
  %59 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_argv67 = getelementptr inbounds %struct.mailer, %struct.mailer* %59, i32 0, i32 8
  %60 = load i8**, i8*** %m_argv67, align 8, !tbaa !35
  %arrayidx68 = getelementptr inbounds i8*, i8** %60, i64 0
  %61 = load i8*, i8** %arrayidx68, align 8, !tbaa !1
  store i8* %61, i8** %__s166, align 8, !tbaa !1
  %62 = bitcast i32* %__result70 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %62) #1
  %63 = load i8*, i8** %__s166, align 8, !tbaa !1
  %arrayidx71 = getelementptr inbounds i8, i8* %63, i64 0
  %64 = load i8, i8* %arrayidx71, align 1, !tbaa !15
  %conv72 = zext i8 %64 to i32
  %65 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0), align 1, !tbaa !15
  %conv73 = zext i8 %65 to i32
  %sub74 = sub nsw i32 %conv72, %conv73
  store i32 %sub74, i32* %__result70, align 4, !tbaa !5
  %66 = load i64, i64* %__s2_len59, align 8, !tbaa !32
  %cmp75 = icmp ugt i64 %66, 0
  br i1 %cmp75, label %land.lhs.true.77, label %if.end.107

land.lhs.true.77:                                 ; preds = %cond.true.64
  %67 = load i32, i32* %__result70, align 4, !tbaa !5
  %cmp78 = icmp eq i32 %67, 0
  br i1 %cmp78, label %if.then.80, label %if.end.107

if.then.80:                                       ; preds = %land.lhs.true.77
  %68 = load i8*, i8** %__s166, align 8, !tbaa !1
  %arrayidx81 = getelementptr inbounds i8, i8* %68, i64 1
  %69 = load i8, i8* %arrayidx81, align 1, !tbaa !15
  %conv82 = zext i8 %69 to i32
  %70 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 1), align 1, !tbaa !15
  %conv83 = zext i8 %70 to i32
  %sub84 = sub nsw i32 %conv82, %conv83
  store i32 %sub84, i32* %__result70, align 4, !tbaa !5
  %71 = load i64, i64* %__s2_len59, align 8, !tbaa !32
  %cmp85 = icmp ugt i64 %71, 1
  br i1 %cmp85, label %land.lhs.true.87, label %if.end.106

land.lhs.true.87:                                 ; preds = %if.then.80
  %72 = load i32, i32* %__result70, align 4, !tbaa !5
  %cmp88 = icmp eq i32 %72, 0
  br i1 %cmp88, label %if.then.90, label %if.end.106

if.then.90:                                       ; preds = %land.lhs.true.87
  %73 = load i8*, i8** %__s166, align 8, !tbaa !1
  %arrayidx91 = getelementptr inbounds i8, i8* %73, i64 2
  %74 = load i8, i8* %arrayidx91, align 1, !tbaa !15
  %conv92 = zext i8 %74 to i32
  %75 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 2), align 1, !tbaa !15
  %conv93 = zext i8 %75 to i32
  %sub94 = sub nsw i32 %conv92, %conv93
  store i32 %sub94, i32* %__result70, align 4, !tbaa !5
  %76 = load i64, i64* %__s2_len59, align 8, !tbaa !32
  %cmp95 = icmp ugt i64 %76, 2
  br i1 %cmp95, label %land.lhs.true.97, label %if.end.105

land.lhs.true.97:                                 ; preds = %if.then.90
  %77 = load i32, i32* %__result70, align 4, !tbaa !5
  %cmp98 = icmp eq i32 %77, 0
  br i1 %cmp98, label %if.then.100, label %if.end.105

if.then.100:                                      ; preds = %land.lhs.true.97
  %78 = load i8*, i8** %__s166, align 8, !tbaa !1
  %arrayidx101 = getelementptr inbounds i8, i8* %78, i64 3
  %79 = load i8, i8* %arrayidx101, align 1, !tbaa !15
  %conv102 = zext i8 %79 to i32
  %80 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i64 3), align 1, !tbaa !15
  %conv103 = zext i8 %80 to i32
  %sub104 = sub nsw i32 %conv102, %conv103
  store i32 %sub104, i32* %__result70, align 4, !tbaa !5
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.100, %land.lhs.true.97, %if.then.90
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %land.lhs.true.87, %if.then.80
  br label %if.end.107

if.end.107:                                       ; preds = %if.end.106, %land.lhs.true.77, %cond.true.64
  %81 = load i32, i32* %__result70, align 4, !tbaa !5
  store i32 %81, i32* %tmp108, !tbaa !5
  %82 = bitcast i32* %__result70 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %82) #1
  %83 = bitcast i8** %__s166 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %83) #1
  %84 = load i32, i32* %tmp108, !tbaa !5
  br label %cond.end.113

cond.false.109:                                   ; preds = %land.lhs.true.61, %land.lhs.true.55
  %85 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_argv110 = getelementptr inbounds %struct.mailer, %struct.mailer* %85, i32 0, i32 8
  %86 = load i8**, i8*** %m_argv110, align 8, !tbaa !35
  %arrayidx111 = getelementptr inbounds i8*, i8** %86, i64 0
  %87 = load i8*, i8** %arrayidx111, align 8, !tbaa !1
  %call112 = call i32 @strcmp(i8* %87, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i32 0, i32 0)) #1
  br label %cond.end.113

cond.end.113:                                     ; preds = %cond.false.109, %if.end.107
  %cond114 = phi i32 [ %84, %if.end.107 ], [ %call112, %cond.false.109 ]
  store i32 %cond114, i32* %tmp60, !tbaa !5
  %88 = bitcast i64* %__s2_len59 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %88) #1
  %89 = bitcast i64* %__s1_len57 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %89) #1
  %90 = load i32, i32* %tmp60, !tbaa !5
  %cmp115 = icmp eq i32 %90, 0
  br i1 %cmp115, label %if.end.118, label %if.then.117

if.then.117:                                      ; preds = %cond.end.113, %land.lhs.true.51
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.118:                                       ; preds = %cond.end.113, %cond.end, %if.end
  %91 = load i8*, i8** %host.addr, align 8, !tbaa !1
  %92 = load i8, i8* %91, align 1, !tbaa !15
  %conv119 = sext i8 %92 to i32
  %cmp120 = icmp eq i32 %conv119, 0
  br i1 %cmp120, label %if.then.122, label %if.end.123

if.then.122:                                      ; preds = %if.end.118
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.146, i32 0, i32 0), i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.123:                                       ; preds = %if.end.118
  %93 = bitcast i64* %__s1_len125 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %93) #1
  %94 = bitcast i64* %__s2_len127 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %94) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1) to i64), i64 ptrtoint ([6 x i8]* @.str.21 to i64)), i64 1), label %land.lhs.true.129, label %cond.false.176

land.lhs.true.129:                                ; preds = %if.end.123
  store i64 5, i64* %__s2_len127, align 8, !tbaa !32
  %95 = load i64, i64* %__s2_len127, align 8, !tbaa !32
  %cmp130 = icmp ult i64 %95, 4
  br i1 %cmp130, label %cond.true.132, label %cond.false.176

cond.true.132:                                    ; preds = %land.lhs.true.129
  %96 = bitcast i8** %__s1134 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %96) #1
  %97 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_mailer135 = getelementptr inbounds %struct.mailer, %struct.mailer* %97, i32 0, i32 1
  %98 = load i8*, i8** %m_mailer135, align 8, !tbaa !33
  store i8* %98, i8** %__s1134, align 8, !tbaa !1
  %99 = bitcast i32* %__result137 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %99) #1
  %100 = load i8*, i8** %__s1134, align 8, !tbaa !1
  %arrayidx138 = getelementptr inbounds i8, i8* %100, i64 0
  %101 = load i8, i8* %arrayidx138, align 1, !tbaa !15
  %conv139 = zext i8 %101 to i32
  %102 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), align 1, !tbaa !15
  %conv140 = zext i8 %102 to i32
  %sub141 = sub nsw i32 %conv139, %conv140
  store i32 %sub141, i32* %__result137, align 4, !tbaa !5
  %103 = load i64, i64* %__s2_len127, align 8, !tbaa !32
  %cmp142 = icmp ugt i64 %103, 0
  br i1 %cmp142, label %land.lhs.true.144, label %if.end.174

land.lhs.true.144:                                ; preds = %cond.true.132
  %104 = load i32, i32* %__result137, align 4, !tbaa !5
  %cmp145 = icmp eq i32 %104, 0
  br i1 %cmp145, label %if.then.147, label %if.end.174

if.then.147:                                      ; preds = %land.lhs.true.144
  %105 = load i8*, i8** %__s1134, align 8, !tbaa !1
  %arrayidx148 = getelementptr inbounds i8, i8* %105, i64 1
  %106 = load i8, i8* %arrayidx148, align 1, !tbaa !15
  %conv149 = zext i8 %106 to i32
  %107 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1), align 1, !tbaa !15
  %conv150 = zext i8 %107 to i32
  %sub151 = sub nsw i32 %conv149, %conv150
  store i32 %sub151, i32* %__result137, align 4, !tbaa !5
  %108 = load i64, i64* %__s2_len127, align 8, !tbaa !32
  %cmp152 = icmp ugt i64 %108, 1
  br i1 %cmp152, label %land.lhs.true.154, label %if.end.173

land.lhs.true.154:                                ; preds = %if.then.147
  %109 = load i32, i32* %__result137, align 4, !tbaa !5
  %cmp155 = icmp eq i32 %109, 0
  br i1 %cmp155, label %if.then.157, label %if.end.173

if.then.157:                                      ; preds = %land.lhs.true.154
  %110 = load i8*, i8** %__s1134, align 8, !tbaa !1
  %arrayidx158 = getelementptr inbounds i8, i8* %110, i64 2
  %111 = load i8, i8* %arrayidx158, align 1, !tbaa !15
  %conv159 = zext i8 %111 to i32
  %112 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 2), align 1, !tbaa !15
  %conv160 = zext i8 %112 to i32
  %sub161 = sub nsw i32 %conv159, %conv160
  store i32 %sub161, i32* %__result137, align 4, !tbaa !5
  %113 = load i64, i64* %__s2_len127, align 8, !tbaa !32
  %cmp162 = icmp ugt i64 %113, 2
  br i1 %cmp162, label %land.lhs.true.164, label %if.end.172

land.lhs.true.164:                                ; preds = %if.then.157
  %114 = load i32, i32* %__result137, align 4, !tbaa !5
  %cmp165 = icmp eq i32 %114, 0
  br i1 %cmp165, label %if.then.167, label %if.end.172

if.then.167:                                      ; preds = %land.lhs.true.164
  %115 = load i8*, i8** %__s1134, align 8, !tbaa !1
  %arrayidx168 = getelementptr inbounds i8, i8* %115, i64 3
  %116 = load i8, i8* %arrayidx168, align 1, !tbaa !15
  %conv169 = zext i8 %116 to i32
  %117 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 3), align 1, !tbaa !15
  %conv170 = zext i8 %117 to i32
  %sub171 = sub nsw i32 %conv169, %conv170
  store i32 %sub171, i32* %__result137, align 4, !tbaa !5
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.167, %land.lhs.true.164, %if.then.157
  br label %if.end.173

if.end.173:                                       ; preds = %if.end.172, %land.lhs.true.154, %if.then.147
  br label %if.end.174

if.end.174:                                       ; preds = %if.end.173, %land.lhs.true.144, %cond.true.132
  %118 = load i32, i32* %__result137, align 4, !tbaa !5
  store i32 %118, i32* %tmp175, !tbaa !5
  %119 = bitcast i32* %__result137 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %119) #1
  %120 = bitcast i8** %__s1134 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %120) #1
  %121 = load i32, i32* %tmp175, !tbaa !5
  br label %cond.end.179

cond.false.176:                                   ; preds = %land.lhs.true.129, %if.end.123
  %122 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_mailer177 = getelementptr inbounds %struct.mailer, %struct.mailer* %122, i32 0, i32 1
  %123 = load i8*, i8** %m_mailer177, align 8, !tbaa !33
  %call178 = call i32 @strcmp(i8* %123, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0)) #1
  br label %cond.end.179

cond.end.179:                                     ; preds = %cond.false.176, %if.end.174
  %cond180 = phi i32 [ %121, %if.end.174 ], [ %call178, %cond.false.176 ]
  store i32 %cond180, i32* %tmp128, !tbaa !5
  %124 = bitcast i64* %__s2_len127 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %124) #1
  %125 = bitcast i64* %__s1_len125 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %125) #1
  %126 = load i32, i32* %tmp128, !tbaa !5
  %cmp181 = icmp ne i32 %126, 0
  br i1 %cmp181, label %if.then.186, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end.179
  %127 = load %struct.envelope*, %struct.envelope** @CurEnv, align 8, !tbaa !1
  %e_sendmode = getelementptr inbounds %struct.envelope, %struct.envelope* %127, i32 0, i32 16
  %128 = load i16, i16* %e_sendmode, align 2, !tbaa !17
  %conv183 = sext i16 %128 to i32
  %cmp184 = icmp eq i32 %conv183, 100
  br i1 %cmp184, label %if.then.186, label %if.else

if.then.186:                                      ; preds = %lor.lhs.false, %cond.end.179
  %129 = load i8*, i8** %host.addr, align 8, !tbaa !1
  store i8* %129, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.else:                                          ; preds = %lor.lhs.false
  %130 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_argv187 = getelementptr inbounds %struct.mailer, %struct.mailer* %130, i32 0, i32 8
  %131 = load i8**, i8*** %m_argv187, align 8, !tbaa !35
  %arrayidx188 = getelementptr inbounds i8*, i8** %131, i64 0
  %132 = load i8*, i8** %arrayidx188, align 8, !tbaa !1
  %cmp189 = icmp ne i8* %132, null
  br i1 %cmp189, label %land.lhs.true.191, label %if.end.254

land.lhs.true.191:                                ; preds = %if.else
  %133 = bitcast i64* %__s1_len193 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %133) #1
  %134 = bitcast i64* %__s2_len195 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %134) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 1) to i64), i64 ptrtoint ([5 x i8]* @.str.147 to i64)), i64 1), label %land.lhs.true.197, label %cond.false.245

land.lhs.true.197:                                ; preds = %land.lhs.true.191
  store i64 4, i64* %__s2_len195, align 8, !tbaa !32
  %135 = load i64, i64* %__s2_len195, align 8, !tbaa !32
  %cmp198 = icmp ult i64 %135, 4
  br i1 %cmp198, label %cond.true.200, label %cond.false.245

cond.true.200:                                    ; preds = %land.lhs.true.197
  %136 = bitcast i8** %__s1202 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %136) #1
  %137 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_argv203 = getelementptr inbounds %struct.mailer, %struct.mailer* %137, i32 0, i32 8
  %138 = load i8**, i8*** %m_argv203, align 8, !tbaa !35
  %arrayidx204 = getelementptr inbounds i8*, i8** %138, i64 0
  %139 = load i8*, i8** %arrayidx204, align 8, !tbaa !1
  store i8* %139, i8** %__s1202, align 8, !tbaa !1
  %140 = bitcast i32* %__result206 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %140) #1
  %141 = load i8*, i8** %__s1202, align 8, !tbaa !1
  %arrayidx207 = getelementptr inbounds i8, i8* %141, i64 0
  %142 = load i8, i8* %arrayidx207, align 1, !tbaa !15
  %conv208 = zext i8 %142 to i32
  %143 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0), align 1, !tbaa !15
  %conv209 = zext i8 %143 to i32
  %sub210 = sub nsw i32 %conv208, %conv209
  store i32 %sub210, i32* %__result206, align 4, !tbaa !5
  %144 = load i64, i64* %__s2_len195, align 8, !tbaa !32
  %cmp211 = icmp ugt i64 %144, 0
  br i1 %cmp211, label %land.lhs.true.213, label %if.end.243

land.lhs.true.213:                                ; preds = %cond.true.200
  %145 = load i32, i32* %__result206, align 4, !tbaa !5
  %cmp214 = icmp eq i32 %145, 0
  br i1 %cmp214, label %if.then.216, label %if.end.243

if.then.216:                                      ; preds = %land.lhs.true.213
  %146 = load i8*, i8** %__s1202, align 8, !tbaa !1
  %arrayidx217 = getelementptr inbounds i8, i8* %146, i64 1
  %147 = load i8, i8* %arrayidx217, align 1, !tbaa !15
  %conv218 = zext i8 %147 to i32
  %148 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 1), align 1, !tbaa !15
  %conv219 = zext i8 %148 to i32
  %sub220 = sub nsw i32 %conv218, %conv219
  store i32 %sub220, i32* %__result206, align 4, !tbaa !5
  %149 = load i64, i64* %__s2_len195, align 8, !tbaa !32
  %cmp221 = icmp ugt i64 %149, 1
  br i1 %cmp221, label %land.lhs.true.223, label %if.end.242

land.lhs.true.223:                                ; preds = %if.then.216
  %150 = load i32, i32* %__result206, align 4, !tbaa !5
  %cmp224 = icmp eq i32 %150, 0
  br i1 %cmp224, label %if.then.226, label %if.end.242

if.then.226:                                      ; preds = %land.lhs.true.223
  %151 = load i8*, i8** %__s1202, align 8, !tbaa !1
  %arrayidx227 = getelementptr inbounds i8, i8* %151, i64 2
  %152 = load i8, i8* %arrayidx227, align 1, !tbaa !15
  %conv228 = zext i8 %152 to i32
  %153 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 2), align 1, !tbaa !15
  %conv229 = zext i8 %153 to i32
  %sub230 = sub nsw i32 %conv228, %conv229
  store i32 %sub230, i32* %__result206, align 4, !tbaa !5
  %154 = load i64, i64* %__s2_len195, align 8, !tbaa !32
  %cmp231 = icmp ugt i64 %154, 2
  br i1 %cmp231, label %land.lhs.true.233, label %if.end.241

land.lhs.true.233:                                ; preds = %if.then.226
  %155 = load i32, i32* %__result206, align 4, !tbaa !5
  %cmp234 = icmp eq i32 %155, 0
  br i1 %cmp234, label %if.then.236, label %if.end.241

if.then.236:                                      ; preds = %land.lhs.true.233
  %156 = load i8*, i8** %__s1202, align 8, !tbaa !1
  %arrayidx237 = getelementptr inbounds i8, i8* %156, i64 3
  %157 = load i8, i8* %arrayidx237, align 1, !tbaa !15
  %conv238 = zext i8 %157 to i32
  %158 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 3), align 1, !tbaa !15
  %conv239 = zext i8 %158 to i32
  %sub240 = sub nsw i32 %conv238, %conv239
  store i32 %sub240, i32* %__result206, align 4, !tbaa !5
  br label %if.end.241

if.end.241:                                       ; preds = %if.then.236, %land.lhs.true.233, %if.then.226
  br label %if.end.242

if.end.242:                                       ; preds = %if.end.241, %land.lhs.true.223, %if.then.216
  br label %if.end.243

if.end.243:                                       ; preds = %if.end.242, %land.lhs.true.213, %cond.true.200
  %159 = load i32, i32* %__result206, align 4, !tbaa !5
  store i32 %159, i32* %tmp244, !tbaa !5
  %160 = bitcast i32* %__result206 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %160) #1
  %161 = bitcast i8** %__s1202 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %161) #1
  %162 = load i32, i32* %tmp244, !tbaa !5
  br label %cond.end.249

cond.false.245:                                   ; preds = %land.lhs.true.197, %land.lhs.true.191
  %163 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_argv246 = getelementptr inbounds %struct.mailer, %struct.mailer* %163, i32 0, i32 8
  %164 = load i8**, i8*** %m_argv246, align 8, !tbaa !35
  %arrayidx247 = getelementptr inbounds i8*, i8** %164, i64 0
  %165 = load i8*, i8** %arrayidx247, align 8, !tbaa !1
  %call248 = call i32 @strcmp(i8* %165, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0)) #1
  br label %cond.end.249

cond.end.249:                                     ; preds = %cond.false.245, %if.end.243
  %cond250 = phi i32 [ %162, %if.end.243 ], [ %call248, %cond.false.245 ]
  store i32 %cond250, i32* %tmp196, !tbaa !5
  %166 = bitcast i64* %__s2_len195 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %166) #1
  %167 = bitcast i64* %__s1_len193 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %167) #1
  %168 = load i32, i32* %tmp196, !tbaa !5
  %cmp251 = icmp eq i32 %168, 0
  br i1 %cmp251, label %if.then.253, label %if.end.254

if.then.253:                                      ; preds = %cond.end.249
  %169 = load i8*, i8** %host.addr, align 8, !tbaa !1
  store i8* %169, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.254:                                       ; preds = %cond.end.249, %if.else
  br label %if.end.255

if.end.255:                                       ; preds = %if.end.254
  %call256 = call i64 @curtime()
  store i64 %call256, i64* %now, align 8, !tbaa !32
  %170 = load i8*, i8** %host.addr, align 8, !tbaa !1
  %call257 = call %struct.symtab* @stab(i8* %170, i32 7, i32 1)
  store %struct.symtab* %call257, %struct.symtab** %s, align 8, !tbaa !1
  %171 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value = getelementptr inbounds %struct.symtab, %struct.symtab* %171, i32 0, i32 3
  %sv_hostsig = bitcast %union.anon.6* %s_value to %struct.hostsig_t*
  %hs_sig = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig, i32 0, i32 0
  %172 = load i8*, i8** %hs_sig, align 8, !tbaa !115
  %cmp258 = icmp ne i8* %172, null
  br i1 %cmp258, label %if.then.260, label %if.end.286

if.then.260:                                      ; preds = %if.end.255
  %173 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value261 = getelementptr inbounds %struct.symtab, %struct.symtab* %173, i32 0, i32 3
  %sv_hostsig262 = bitcast %union.anon.6* %s_value261 to %struct.hostsig_t*
  %hs_exp = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig262, i32 0, i32 1
  %174 = load i64, i64* %hs_exp, align 8, !tbaa !117
  %175 = load i64, i64* %now, align 8, !tbaa !32
  %cmp263 = icmp sge i64 %174, %175
  br i1 %cmp263, label %if.then.265, label %if.end.279

if.then.265:                                      ; preds = %if.then.260
  %176 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 17), align 1, !tbaa !15
  %conv266 = zext i8 %176 to i32
  %cmp267 = icmp sge i32 %conv266, 3
  br i1 %cmp267, label %land.lhs.true.269, label %if.end.275

land.lhs.true.269:                                ; preds = %if.then.265
  %177 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool270 = icmp ne i32 %177, 0
  br i1 %tobool270, label %if.end.275, label %if.then.271

if.then.271:                                      ; preds = %land.lhs.true.269
  %178 = load i8*, i8** %host.addr, align 8, !tbaa !1
  %179 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value272 = getelementptr inbounds %struct.symtab, %struct.symtab* %179, i32 0, i32 3
  %sv_hostsig273 = bitcast %union.anon.6* %s_value272 to %struct.hostsig_t*
  %hs_sig274 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig273, i32 0, i32 0
  %180 = load i8*, i8** %hs_sig274, align 8, !tbaa !115
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.148, i32 0, i32 0), i8* %178, i8* %180)
  br label %if.end.275

if.end.275:                                       ; preds = %if.then.271, %land.lhs.true.269, %if.then.265
  %181 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value276 = getelementptr inbounds %struct.symtab, %struct.symtab* %181, i32 0, i32 3
  %sv_hostsig277 = bitcast %union.anon.6* %s_value276 to %struct.hostsig_t*
  %hs_sig278 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig277, i32 0, i32 0
  %182 = load i8*, i8** %hs_sig278, align 8, !tbaa !115
  store i8* %182, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.279:                                       ; preds = %if.then.260
  %183 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value280 = getelementptr inbounds %struct.symtab, %struct.symtab* %183, i32 0, i32 3
  %sv_hostsig281 = bitcast %union.anon.6* %s_value280 to %struct.hostsig_t*
  %hs_sig282 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig281, i32 0, i32 0
  %184 = load i8*, i8** %hs_sig282, align 8, !tbaa !115
  call void @sm_free_tagged(i8* %184, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 5825)
  %185 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value283 = getelementptr inbounds %struct.symtab, %struct.symtab* %185, i32 0, i32 3
  %sv_hostsig284 = bitcast %union.anon.6* %s_value283 to %struct.hostsig_t*
  %hs_sig285 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig284, i32 0, i32 0
  store i8* null, i8** %hs_sig285, align 8, !tbaa !115
  br label %if.end.286

if.end.286:                                       ; preds = %if.end.279, %if.end.255
  %186 = load i64, i64* %now, align 8, !tbaa !32
  %add = add nsw i64 %186, 3600
  %187 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value287 = getelementptr inbounds %struct.symtab, %struct.symtab* %187, i32 0, i32 3
  %sv_hostsig288 = bitcast %union.anon.6* %s_value287 to %struct.hostsig_t*
  %hs_exp289 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig288, i32 0, i32 1
  store i64 %add, i64* %hs_exp289, align 8, !tbaa !117
  %188 = load i32, i32* @ConfigLevel, align 4, !tbaa !5
  %cmp290 = icmp slt i32 %188, 2
  br i1 %cmp290, label %if.then.292, label %if.end.296

if.then.292:                                      ; preds = %if.end.286
  %call293 = call %struct.__res_state* @__res_state() #11
  %options294 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %call293, i32 0, i32 2
  %189 = load i64, i64* %options294, align 8, !tbaa !113
  %and295 = and i64 %189, -641
  store i64 %and295, i64* %options294, align 8, !tbaa !113
  br label %if.end.296

if.end.296:                                       ; preds = %if.then.292, %if.end.286
  %190 = load i8*, i8** %host.addr, align 8, !tbaa !1
  store i8* %190, i8** %hp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc.511, %if.end.296
  %191 = load i8*, i8** %hp, align 8, !tbaa !1
  %cmp297 = icmp ne i8* %191, null
  br i1 %cmp297, label %for.body, label %for.end.512

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start(i64 1, i8* %__a0) #1
  call void @llvm.lifetime.start(i64 1, i8* %__a1) #1
  call void @llvm.lifetime.start(i64 1, i8* %__a2) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 1) to i64), i64 ptrtoint ([3 x i8]* @.str.149 to i64)), i64 1), label %cond.true.303, label %cond.false.342

cond.true.303:                                    ; preds = %for.body
  %192 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), align 1, !tbaa !15
  store i8 %192, i8* %__a0, align 1, !tbaa !15
  %193 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv304 = sext i8 %193 to i32
  %cmp305 = icmp eq i32 %conv304, 0
  br i1 %cmp305, label %cond.true.307, label %cond.false.308

cond.true.307:                                    ; preds = %cond.true.303
  %194 = load i8*, i8** %hp, align 8, !tbaa !1
  br label %cond.end.340

cond.false.308:                                   ; preds = %cond.true.303
  %195 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 1), align 1, !tbaa !15
  store i8 %195, i8* %__a1, align 1, !tbaa !15
  %196 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv309 = sext i8 %196 to i32
  %cmp310 = icmp eq i32 %conv309, 0
  br i1 %cmp310, label %cond.true.312, label %cond.false.315

cond.true.312:                                    ; preds = %cond.false.308
  %197 = load i8*, i8** %hp, align 8, !tbaa !1
  %198 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv313 = sext i8 %198 to i32
  %call314 = call i8* @strchr(i8* %197, i32 %conv313) #1
  br label %cond.end.338

cond.false.315:                                   ; preds = %cond.false.308
  %199 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 2), align 1, !tbaa !15
  store i8 %199, i8* %__a2, align 1, !tbaa !15
  %200 = load i8, i8* %__a2, align 1, !tbaa !15
  %conv316 = sext i8 %200 to i32
  %cmp317 = icmp eq i32 %conv316, 0
  br i1 %cmp317, label %cond.true.319, label %cond.false.323

cond.true.319:                                    ; preds = %cond.false.315
  %201 = load i8*, i8** %hp, align 8, !tbaa !1
  %202 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv320 = sext i8 %202 to i32
  %203 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv321 = sext i8 %203 to i32
  %call322 = call i8* @__strpbrk_c2(i8* %201, i32 %conv320, i32 %conv321)
  br label %cond.end.336

cond.false.323:                                   ; preds = %cond.false.315
  %204 = load i8, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), i64 3), align 1, !tbaa !15
  %conv324 = sext i8 %204 to i32
  %cmp325 = icmp eq i32 %conv324, 0
  br i1 %cmp325, label %cond.true.327, label %cond.false.332

cond.true.327:                                    ; preds = %cond.false.323
  %205 = load i8*, i8** %hp, align 8, !tbaa !1
  %206 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv328 = sext i8 %206 to i32
  %207 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv329 = sext i8 %207 to i32
  %208 = load i8, i8* %__a2, align 1, !tbaa !15
  %conv330 = sext i8 %208 to i32
  %call331 = call i8* @__strpbrk_c3(i8* %205, i32 %conv328, i32 %conv329, i32 %conv330)
  br label %cond.end.334

cond.false.332:                                   ; preds = %cond.false.323
  %209 = load i8*, i8** %hp, align 8, !tbaa !1
  %call333 = call i8* @strpbrk(i8* %209, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0)) #1
  br label %cond.end.334

cond.end.334:                                     ; preds = %cond.false.332, %cond.true.327
  %cond335 = phi i8* [ %call331, %cond.true.327 ], [ %call333, %cond.false.332 ]
  br label %cond.end.336

cond.end.336:                                     ; preds = %cond.end.334, %cond.true.319
  %cond337 = phi i8* [ %call322, %cond.true.319 ], [ %cond335, %cond.end.334 ]
  br label %cond.end.338

cond.end.338:                                     ; preds = %cond.end.336, %cond.true.312
  %cond339 = phi i8* [ %call314, %cond.true.312 ], [ %cond337, %cond.end.336 ]
  br label %cond.end.340

cond.end.340:                                     ; preds = %cond.end.338, %cond.true.307
  %cond341 = phi i8* [ null, %cond.true.307 ], [ %cond339, %cond.end.338 ]
  br label %cond.end.344

cond.false.342:                                   ; preds = %for.body
  %210 = load i8*, i8** %hp, align 8, !tbaa !1
  %call343 = call i8* @strpbrk(i8* %210, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0)) #1
  br label %cond.end.344

cond.end.344:                                     ; preds = %cond.false.342, %cond.end.340
  %cond345 = phi i8* [ %cond341, %cond.end.340 ], [ %call343, %cond.false.342 ]
  store i8* %cond345, i8** %tmp302, !tbaa !1
  call void @llvm.lifetime.end(i64 1, i8* %__a2) #1
  call void @llvm.lifetime.end(i64 1, i8* %__a1) #1
  call void @llvm.lifetime.end(i64 1, i8* %__a0) #1
  %211 = load i8*, i8** %tmp302, !tbaa !1
  store i8* %211, i8** %endp, align 8, !tbaa !1
  %212 = load i8*, i8** %endp, align 8, !tbaa !1
  %cmp346 = icmp ne i8* %212, null
  br i1 %cmp346, label %if.then.348, label %if.end.349

if.then.348:                                      ; preds = %cond.end.344
  %213 = load i8*, i8** %endp, align 8, !tbaa !1
  %214 = load i8, i8* %213, align 1, !tbaa !15
  store i8 %214, i8* %sep, align 1, !tbaa !15
  %215 = load i8*, i8** %endp, align 8, !tbaa !1
  store i8 0, i8* %215, align 1, !tbaa !15
  br label %if.end.349

if.end.349:                                       ; preds = %if.then.348, %cond.end.344
  %216 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %m_flags350 = getelementptr inbounds %struct.mailer, %struct.mailer* %216, i32 0, i32 5
  %arrayidx351 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags350, i32 0, i64 1
  %217 = load i32, i32* %arrayidx351, align 4, !tbaa !5
  %and352 = and i32 %217, 65536
  %tobool353 = icmp ne i32 %and352, 0
  br i1 %tobool353, label %if.then.354, label %if.else.356

if.then.354:                                      ; preds = %if.end.349
  store i32 1, i32* %nmx, align 4, !tbaa !5
  %218 = load i8*, i8** %hp, align 8, !tbaa !1
  %arrayidx355 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 0
  store i8* %218, i8** %arrayidx355, align 8, !tbaa !1
  br label %if.end.397

if.else.356:                                      ; preds = %if.end.349
  %219 = bitcast i32* %rcode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %219) #1
  %220 = bitcast i32* %ttl to i8*
  call void @llvm.lifetime.start(i64 4, i8* %220) #1
  %221 = load i8*, i8** %hp, align 8, !tbaa !1
  %arraydecay = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i32 0
  %arraydecay359 = getelementptr inbounds [101 x i16], [101 x i16]* %mxprefs, i32 0, i32 0
  %call360 = call i32 @getmxrr(i8* %221, i8** %arraydecay, i16* %arraydecay359, i32 1, i32* %rcode, i32 1, i32* %ttl)
  store i32 %call360, i32* %nmx, align 4, !tbaa !5
  %222 = load i32, i32* %nmx, align 4, !tbaa !5
  %cmp361 = icmp sle i32 %222, 0
  br i1 %cmp361, label %if.then.363, label %if.end.377

if.then.363:                                      ; preds = %if.else.356
  %223 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %223) #1
  %224 = bitcast %struct.mailer_con_info** %mci to i8*
  call void @llvm.lifetime.start(i64 8, i8* %224) #1
  %call366 = call i32* @__errno_location() #11
  %225 = load i32, i32* %call366, align 4, !tbaa !5
  store i32 %225, i32* %save_errno, align 4, !tbaa !5
  %226 = load i8*, i8** %hp, align 8, !tbaa !1
  %227 = load %struct.mailer*, %struct.mailer** %m.addr, align 8, !tbaa !1
  %call367 = call %struct.mailer_con_info* @mci_get(i8* %226, %struct.mailer* %227)
  store %struct.mailer_con_info* %call367, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %228 = load i32, i32* %save_errno, align 4, !tbaa !5
  %conv368 = trunc i32 %228 to i16
  %229 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_errno = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %229, i32 0, i32 1
  store i16 %conv368, i16* %mci_errno, align 2, !tbaa !118
  %call369 = call i32* @__h_errno_location() #11
  %230 = load i32, i32* %call369, align 4, !tbaa !5
  %conv370 = trunc i32 %230 to i16
  %231 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_herrno = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %231, i32 0, i32 2
  store i16 %conv370, i16* %mci_herrno, align 2, !tbaa !119
  %232 = load i64, i64* %now, align 8, !tbaa !32
  %233 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_lastuse = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %233, i32 0, i32 15
  store i64 %232, i64* %mci_lastuse, align 8, !tbaa !120
  %234 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp371 = icmp eq i32 %234, 68
  br i1 %cmp371, label %if.then.373, label %if.else.374

if.then.373:                                      ; preds = %if.then.363
  %235 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %236 = load i32, i32* %rcode, align 4, !tbaa !5
  call void @mci_setstat(%struct.mailer_con_info* %235, i32 %236, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.150, i32 0, i32 0))
  br label %if.end.375

if.else.374:                                      ; preds = %if.then.363
  %237 = load %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %238 = load i32, i32* %rcode, align 4, !tbaa !5
  call void @mci_setstat(%struct.mailer_con_info* %237, i32 %238, i8* null, i8* null)
  br label %if.end.375

if.end.375:                                       ; preds = %if.else.374, %if.then.373
  store i32 1, i32* %nmx, align 4, !tbaa !5
  %239 = load i8*, i8** %hp, align 8, !tbaa !1
  %arrayidx376 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 0
  store i8* %239, i8** %arrayidx376, align 8, !tbaa !1
  %240 = bitcast %struct.mailer_con_info** %mci to i8*
  call void @llvm.lifetime.end(i64 8, i8* %240) #1
  %241 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.end(i64 4, i8* %241) #1
  br label %if.end.377

if.end.377:                                       ; preds = %if.end.375, %if.else.356
  %242 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 17), align 1, !tbaa !15
  %conv378 = zext i8 %242 to i32
  %cmp379 = icmp sge i32 %conv378, 3
  br i1 %cmp379, label %land.lhs.true.381, label %if.end.385

land.lhs.true.381:                                ; preds = %if.end.377
  %243 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool382 = icmp ne i32 %243, 0
  br i1 %tobool382, label %if.end.385, label %if.then.383

if.then.383:                                      ; preds = %land.lhs.true.381
  %244 = load i32, i32* %nmx, align 4, !tbaa !5
  %arrayidx384 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 0
  %245 = load i8*, i8** %arrayidx384, align 8, !tbaa !1
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.151, i32 0, i32 0), i32 %244, i8* %245)
  br label %if.end.385

if.end.385:                                       ; preds = %if.then.383, %land.lhs.true.381, %if.end.377
  %246 = load i64, i64* %now, align 8, !tbaa !32
  %247 = load i32, i32* %ttl, align 4, !tbaa !5
  %cmp386 = icmp slt i32 %247, 3600
  br i1 %cmp386, label %cond.true.388, label %cond.false.389

cond.true.388:                                    ; preds = %if.end.385
  %248 = load i32, i32* %ttl, align 4, !tbaa !5
  br label %cond.end.390

cond.false.389:                                   ; preds = %if.end.385
  br label %cond.end.390

cond.end.390:                                     ; preds = %cond.false.389, %cond.true.388
  %cond391 = phi i32 [ %248, %cond.true.388 ], [ 3600, %cond.false.389 ]
  %conv392 = sext i32 %cond391 to i64
  %add393 = add nsw i64 %246, %conv392
  %249 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value394 = getelementptr inbounds %struct.symtab, %struct.symtab* %249, i32 0, i32 3
  %sv_hostsig395 = bitcast %union.anon.6* %s_value394 to %struct.hostsig_t*
  %hs_exp396 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig395, i32 0, i32 1
  store i64 %add393, i64* %hs_exp396, align 8, !tbaa !117
  %250 = bitcast i32* %ttl to i8*
  call void @llvm.lifetime.end(i64 4, i8* %250) #1
  %251 = bitcast i32* %rcode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %251) #1
  br label %if.end.397

if.end.397:                                       ; preds = %cond.end.390, %if.then.354
  store i32 0, i32* %len, align 4, !tbaa !5
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.398

for.cond.398:                                     ; preds = %for.inc, %if.end.397
  %252 = load i32, i32* %i, align 4, !tbaa !5
  %253 = load i32, i32* %nmx, align 4, !tbaa !5
  %cmp399 = icmp slt i32 %252, %253
  br i1 %cmp399, label %for.body.401, label %for.end

for.body.401:                                     ; preds = %for.cond.398
  %254 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom = sext i32 %254 to i64
  %arrayidx402 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom
  %255 = load i8*, i8** %arrayidx402, align 8, !tbaa !1
  %call403 = call i64 @strlen(i8* %255) #12
  %add404 = add i64 %call403, 1
  %256 = load i32, i32* %len, align 4, !tbaa !5
  %conv405 = sext i32 %256 to i64
  %add406 = add i64 %conv405, %add404
  %conv407 = trunc i64 %add406 to i32
  store i32 %conv407, i32* %len, align 4, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.body.401
  %257 = load i32, i32* %i, align 4, !tbaa !5
  %inc = add nsw i32 %257, 1
  store i32 %inc, i32* %i, align 4, !tbaa !5
  br label %for.cond.398

for.end:                                          ; preds = %for.cond.398
  %258 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value408 = getelementptr inbounds %struct.symtab, %struct.symtab* %258, i32 0, i32 3
  %sv_hostsig409 = bitcast %union.anon.6* %s_value408 to %struct.hostsig_t*
  %hs_sig410 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig409, i32 0, i32 0
  %259 = load i8*, i8** %hs_sig410, align 8, !tbaa !115
  %cmp411 = icmp ne i8* %259, null
  br i1 %cmp411, label %if.then.413, label %if.end.422

if.then.413:                                      ; preds = %for.end
  %260 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value414 = getelementptr inbounds %struct.symtab, %struct.symtab* %260, i32 0, i32 3
  %sv_hostsig415 = bitcast %union.anon.6* %s_value414 to %struct.hostsig_t*
  %hs_sig416 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig415, i32 0, i32 0
  %261 = load i8*, i8** %hs_sig416, align 8, !tbaa !115
  %call417 = call i64 @strlen(i8* %261) #12
  %add418 = add i64 %call417, 1
  %262 = load i32, i32* %len, align 4, !tbaa !5
  %conv419 = sext i32 %262 to i64
  %add420 = add i64 %conv419, %add418
  %conv421 = trunc i64 %add420 to i32
  store i32 %conv421, i32* %len, align 4, !tbaa !5
  br label %if.end.422

if.end.422:                                       ; preds = %if.then.413, %for.end
  %263 = load i32, i32* %len, align 4, !tbaa !5
  %cmp423 = icmp slt i32 %263, 0
  br i1 %cmp423, label %if.then.428, label %lor.lhs.false.425

lor.lhs.false.425:                                ; preds = %if.end.422
  %264 = load i32, i32* %len, align 4, !tbaa !5
  %cmp426 = icmp sge i32 %264, 8192
  br i1 %cmp426, label %if.then.428, label %if.end.429

if.then.428:                                      ; preds = %lor.lhs.false.425, %if.end.422
  %265 = load i8*, i8** %host.addr, align 8, !tbaa !1
  %266 = load i32, i32* %len, align 4, !tbaa !5
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.152, i32 0, i32 0), i8* %265, i32 8192, i32 %266)
  store i32 8192, i32* %len, align 4, !tbaa !5
  br label %if.end.429

if.end.429:                                       ; preds = %if.then.428, %lor.lhs.false.425
  %267 = load i32, i32* %len, align 4, !tbaa !5
  %conv430 = sext i32 %267 to i64
  %call431 = call i8* @sm_malloc_tagged_x(i64 %conv430, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 5917, i32 0)
  store i8* %call431, i8** %p, align 8, !tbaa !1
  %268 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value432 = getelementptr inbounds %struct.symtab, %struct.symtab* %268, i32 0, i32 3
  %sv_hostsig433 = bitcast %union.anon.6* %s_value432 to %struct.hostsig_t*
  %hs_sig434 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig433, i32 0, i32 0
  %269 = load i8*, i8** %hs_sig434, align 8, !tbaa !115
  %cmp435 = icmp ne i8* %269, null
  br i1 %cmp435, label %if.then.437, label %if.else.453

if.then.437:                                      ; preds = %if.end.429
  %270 = load i8*, i8** %p, align 8, !tbaa !1
  %271 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value438 = getelementptr inbounds %struct.symtab, %struct.symtab* %271, i32 0, i32 3
  %sv_hostsig439 = bitcast %union.anon.6* %s_value438 to %struct.hostsig_t*
  %hs_sig440 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig439, i32 0, i32 0
  %272 = load i8*, i8** %hs_sig440, align 8, !tbaa !115
  %273 = load i32, i32* %len, align 4, !tbaa !5
  %conv441 = sext i32 %273 to i64
  %call442 = call i64 @sm_strlcpy(i8* %270, i8* %272, i64 %conv441)
  %274 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value443 = getelementptr inbounds %struct.symtab, %struct.symtab* %274, i32 0, i32 3
  %sv_hostsig444 = bitcast %union.anon.6* %s_value443 to %struct.hostsig_t*
  %hs_sig445 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig444, i32 0, i32 0
  %275 = load i8*, i8** %hs_sig445, align 8, !tbaa !115
  call void @sm_free_tagged(i8* %275, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 5921)
  %276 = load i8*, i8** %p, align 8, !tbaa !1
  %277 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value446 = getelementptr inbounds %struct.symtab, %struct.symtab* %277, i32 0, i32 3
  %sv_hostsig447 = bitcast %union.anon.6* %s_value446 to %struct.hostsig_t*
  %hs_sig448 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig447, i32 0, i32 0
  store i8* %276, i8** %hs_sig448, align 8, !tbaa !115
  %278 = load i8*, i8** %p, align 8, !tbaa !1
  %call449 = call i64 @strlen(i8* %278) #12
  %conv450 = trunc i64 %call449 to i32
  store i32 %conv450, i32* %hl, align 4, !tbaa !5
  %279 = load i32, i32* %hl, align 4, !tbaa !5
  %280 = load i8*, i8** %p, align 8, !tbaa !1
  %idx.ext = sext i32 %279 to i64
  %add.ptr = getelementptr inbounds i8, i8* %280, i64 %idx.ext
  store i8* %add.ptr, i8** %p, align 8, !tbaa !1
  %281 = load i8, i8* %prevsep, align 1, !tbaa !15
  %282 = load i8*, i8** %p, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %282, i32 1
  store i8* %incdec.ptr, i8** %p, align 8, !tbaa !1
  store i8 %281, i8* %282, align 1, !tbaa !15
  %283 = load i32, i32* %hl, align 4, !tbaa !5
  %add451 = add nsw i32 %283, 1
  %284 = load i32, i32* %len, align 4, !tbaa !5
  %sub452 = sub nsw i32 %284, %add451
  store i32 %sub452, i32* %len, align 4, !tbaa !5
  br label %if.end.457

if.else.453:                                      ; preds = %if.end.429
  %285 = load i8*, i8** %p, align 8, !tbaa !1
  %286 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value454 = getelementptr inbounds %struct.symtab, %struct.symtab* %286, i32 0, i32 3
  %sv_hostsig455 = bitcast %union.anon.6* %s_value454 to %struct.hostsig_t*
  %hs_sig456 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig455, i32 0, i32 0
  store i8* %285, i8** %hs_sig456, align 8, !tbaa !115
  br label %if.end.457

if.end.457:                                       ; preds = %if.else.453, %if.then.437
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.458

for.cond.458:                                     ; preds = %for.inc.499, %if.end.457
  %287 = load i32, i32* %i, align 4, !tbaa !5
  %288 = load i32, i32* %nmx, align 4, !tbaa !5
  %cmp459 = icmp slt i32 %287, %288
  br i1 %cmp459, label %for.body.461, label %for.end.501

for.body.461:                                     ; preds = %for.cond.458
  %289 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom462 = sext i32 %289 to i64
  %arrayidx463 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom462
  %290 = load i8*, i8** %arrayidx463, align 8, !tbaa !1
  %call464 = call i64 @strlen(i8* %290) #12
  %conv465 = trunc i64 %call464 to i32
  store i32 %conv465, i32* %hl, align 4, !tbaa !5
  %291 = load i32, i32* %len, align 4, !tbaa !5
  %sub466 = sub nsw i32 %291, 1
  %292 = load i32, i32* %hl, align 4, !tbaa !5
  %cmp467 = icmp slt i32 %sub466, %292
  br i1 %cmp467, label %if.then.472, label %lor.lhs.false.469

lor.lhs.false.469:                                ; preds = %for.body.461
  %293 = load i32, i32* %len, align 4, !tbaa !5
  %cmp470 = icmp sle i32 %293, 1
  br i1 %cmp470, label %if.then.472, label %if.end.473

if.then.472:                                      ; preds = %lor.lhs.false.469, %for.body.461
  store i32 -1, i32* %len, align 4, !tbaa !5
  br label %for.end.501

if.end.473:                                       ; preds = %lor.lhs.false.469
  %294 = load i32, i32* %i, align 4, !tbaa !5
  %cmp474 = icmp ne i32 %294, 0
  br i1 %cmp474, label %if.then.476, label %if.end.491

if.then.476:                                      ; preds = %if.end.473
  %295 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom477 = sext i32 %295 to i64
  %arrayidx478 = getelementptr inbounds [101 x i16], [101 x i16]* %mxprefs, i32 0, i64 %idxprom477
  %296 = load i16, i16* %arrayidx478, align 2, !tbaa !40
  %conv479 = zext i16 %296 to i32
  %297 = load i32, i32* %i, align 4, !tbaa !5
  %sub480 = sub nsw i32 %297, 1
  %idxprom481 = sext i32 %sub480 to i64
  %arrayidx482 = getelementptr inbounds [101 x i16], [101 x i16]* %mxprefs, i32 0, i64 %idxprom481
  %298 = load i16, i16* %arrayidx482, align 2, !tbaa !40
  %conv483 = zext i16 %298 to i32
  %cmp484 = icmp eq i32 %conv479, %conv483
  br i1 %cmp484, label %if.then.486, label %if.else.488

if.then.486:                                      ; preds = %if.then.476
  %299 = load i8*, i8** %p, align 8, !tbaa !1
  %incdec.ptr487 = getelementptr inbounds i8, i8* %299, i32 1
  store i8* %incdec.ptr487, i8** %p, align 8, !tbaa !1
  store i8 44, i8* %299, align 1, !tbaa !15
  br label %if.end.490

if.else.488:                                      ; preds = %if.then.476
  %300 = load i8*, i8** %p, align 8, !tbaa !1
  %incdec.ptr489 = getelementptr inbounds i8, i8* %300, i32 1
  store i8* %incdec.ptr489, i8** %p, align 8, !tbaa !1
  store i8 58, i8* %300, align 1, !tbaa !15
  br label %if.end.490

if.end.490:                                       ; preds = %if.else.488, %if.then.486
  %301 = load i32, i32* %len, align 4, !tbaa !5
  %dec = add nsw i32 %301, -1
  store i32 %dec, i32* %len, align 4, !tbaa !5
  br label %if.end.491

if.end.491:                                       ; preds = %if.end.490, %if.end.473
  %302 = load i8*, i8** %p, align 8, !tbaa !1
  %303 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom492 = sext i32 %303 to i64
  %arrayidx493 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom492
  %304 = load i8*, i8** %arrayidx493, align 8, !tbaa !1
  %305 = load i32, i32* %len, align 4, !tbaa !5
  %conv494 = sext i32 %305 to i64
  %call495 = call i64 @sm_strlcpy(i8* %302, i8* %304, i64 %conv494)
  %306 = load i32, i32* %hl, align 4, !tbaa !5
  %307 = load i8*, i8** %p, align 8, !tbaa !1
  %idx.ext496 = sext i32 %306 to i64
  %add.ptr497 = getelementptr inbounds i8, i8* %307, i64 %idx.ext496
  store i8* %add.ptr497, i8** %p, align 8, !tbaa !1
  %308 = load i32, i32* %hl, align 4, !tbaa !5
  %309 = load i32, i32* %len, align 4, !tbaa !5
  %sub498 = sub nsw i32 %309, %308
  store i32 %sub498, i32* %len, align 4, !tbaa !5
  br label %for.inc.499

for.inc.499:                                      ; preds = %if.end.491
  %310 = load i32, i32* %i, align 4, !tbaa !5
  %inc500 = add nsw i32 %310, 1
  store i32 %inc500, i32* %i, align 4, !tbaa !5
  br label %for.cond.458

for.end.501:                                      ; preds = %if.then.472, %for.cond.458
  %311 = load i32, i32* %len, align 4, !tbaa !5
  %cmp502 = icmp slt i32 %311, 0
  br i1 %cmp502, label %if.then.504, label %if.end.505

if.then.504:                                      ; preds = %for.end.501
  br label %for.end.512

if.end.505:                                       ; preds = %for.end.501
  %312 = load i8*, i8** %endp, align 8, !tbaa !1
  %cmp506 = icmp ne i8* %312, null
  br i1 %cmp506, label %if.then.508, label %if.end.510

if.then.508:                                      ; preds = %if.end.505
  %313 = load i8, i8* %sep, align 1, !tbaa !15
  %314 = load i8*, i8** %endp, align 8, !tbaa !1
  %incdec.ptr509 = getelementptr inbounds i8, i8* %314, i32 1
  store i8* %incdec.ptr509, i8** %endp, align 8, !tbaa !1
  store i8 %313, i8* %314, align 1, !tbaa !15
  br label %if.end.510

if.end.510:                                       ; preds = %if.then.508, %if.end.505
  %315 = load i8, i8* %sep, align 1, !tbaa !15
  store i8 %315, i8* %prevsep, align 1, !tbaa !15
  br label %for.inc.511

for.inc.511:                                      ; preds = %if.end.510
  %316 = load i8*, i8** %endp, align 8, !tbaa !1
  store i8* %316, i8** %hp, align 8, !tbaa !1
  br label %for.cond

for.end.512:                                      ; preds = %if.then.504, %for.cond
  %317 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value513 = getelementptr inbounds %struct.symtab, %struct.symtab* %317, i32 0, i32 3
  %sv_hostsig514 = bitcast %union.anon.6* %s_value513 to %struct.hostsig_t*
  %hs_sig515 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig514, i32 0, i32 0
  %318 = load i8*, i8** %hs_sig515, align 8, !tbaa !115
  call void @makelower(i8* %318)
  %319 = load i32, i32* @ConfigLevel, align 4, !tbaa !5
  %cmp516 = icmp slt i32 %319, 2
  br i1 %cmp516, label %if.then.518, label %if.end.522

if.then.518:                                      ; preds = %for.end.512
  %320 = load i32, i32* %oldoptions, align 4, !tbaa !5
  %conv519 = sext i32 %320 to i64
  %call520 = call %struct.__res_state* @__res_state() #11
  %options521 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %call520, i32 0, i32 2
  store i64 %conv519, i64* %options521, align 8, !tbaa !113
  br label %if.end.522

if.end.522:                                       ; preds = %if.then.518, %for.end.512
  %321 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 17), align 1, !tbaa !15
  %conv523 = zext i8 %321 to i32
  %cmp524 = icmp sge i32 %conv523, 1
  br i1 %cmp524, label %land.lhs.true.526, label %if.end.532

land.lhs.true.526:                                ; preds = %if.end.522
  %322 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool527 = icmp ne i32 %322, 0
  br i1 %tobool527, label %if.end.532, label %if.then.528

if.then.528:                                      ; preds = %land.lhs.true.526
  %323 = load i8*, i8** %host.addr, align 8, !tbaa !1
  %324 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value529 = getelementptr inbounds %struct.symtab, %struct.symtab* %324, i32 0, i32 3
  %sv_hostsig530 = bitcast %union.anon.6* %s_value529 to %struct.hostsig_t*
  %hs_sig531 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig530, i32 0, i32 0
  %325 = load i8*, i8** %hs_sig531, align 8, !tbaa !115
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.153, i32 0, i32 0), i8* %323, i8* %325)
  br label %if.end.532

if.end.532:                                       ; preds = %if.then.528, %land.lhs.true.526, %if.end.522
  %326 = load %struct.symtab*, %struct.symtab** %s, align 8, !tbaa !1
  %s_value533 = getelementptr inbounds %struct.symtab, %struct.symtab* %326, i32 0, i32 3
  %sv_hostsig534 = bitcast %union.anon.6* %s_value533 to %struct.hostsig_t*
  %hs_sig535 = getelementptr inbounds %struct.hostsig_t, %struct.hostsig_t* %sv_hostsig534, i32 0, i32 0
  %327 = load i8*, i8** %hs_sig535, align 8, !tbaa !115
  store i8* %327, i8** %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.532, %if.end.275, %if.then.253, %if.then.186, %if.then.122, %if.then.117
  %328 = bitcast [101 x i16]* %mxprefs to i8*
  call void @llvm.lifetime.end(i64 202, i8* %328) #1
  %329 = bitcast [101 x i8*]* %mxhosts to i8*
  call void @llvm.lifetime.end(i64 808, i8* %329) #1
  %330 = bitcast i32* %oldoptions to i8*
  call void @llvm.lifetime.end(i64 4, i8* %330) #1
  %331 = bitcast i8** %endp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %331) #1
  %332 = bitcast i8** %hp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %332) #1
  %333 = bitcast i32* %hl to i8*
  call void @llvm.lifetime.end(i64 4, i8* %333) #1
  %334 = bitcast i32* %nmx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %334) #1
  %335 = bitcast i32* %len to i8*
  call void @llvm.lifetime.end(i64 4, i8* %335) #1
  %336 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %336) #1
  call void @llvm.lifetime.end(i64 1, i8* %prevsep) #1
  call void @llvm.lifetime.end(i64 1, i8* %sep) #1
  %337 = bitcast i64* %now to i8*
  call void @llvm.lifetime.end(i64 8, i8* %337) #1
  %338 = bitcast %struct.symtab** %s to i8*
  call void @llvm.lifetime.end(i64 8, i8* %338) #1
  %339 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %339) #1
  %340 = load i8*, i8** %retval
  ret i8* %340
}

; Function Attrs: nounwind readnone
declare %struct.__res_state* @__res_state() #3

declare %struct.symtab* @stab(i8*, i32, i32) #2

declare void @sm_free_tagged(i8*, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define available_externally i8* @__strpbrk_c2(i8* %__s, i32 %__accept1, i32 %__accept2) #9 {
entry:
  %__s.addr = alloca i8*, align 8
  %__accept1.addr = alloca i32, align 4
  %__accept2.addr = alloca i32, align 4
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !1
  store i32 %__accept1, i32* %__accept1.addr, align 4, !tbaa !5
  store i32 %__accept2, i32* %__accept2.addr, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %1 = load i8, i8* %0, align 1, !tbaa !15
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %2 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %3 = load i8, i8* %2, align 1, !tbaa !15
  %conv2 = sext i8 %3 to i32
  %4 = load i32, i32* %__accept1.addr, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %conv2, %4
  br i1 %cmp3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %5 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %6 = load i8, i8* %5, align 1, !tbaa !15
  %conv5 = sext i8 %6 to i32
  %7 = load i32, i32* %__accept2.addr, align 4, !tbaa !5
  %cmp6 = icmp ne i32 %conv5, %7
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp6, %land.rhs ]
  br i1 %8, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %9 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr, i8** %__s.addr, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %land.end
  %10 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %11 = load i8, i8* %10, align 1, !tbaa !15
  %conv8 = sext i8 %11 to i32
  %cmp9 = icmp eq i32 %conv8, 0
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  br label %cond.end

cond.false:                                       ; preds = %while.end
  %12 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %13 = ptrtoint i8* %12 to i64
  %14 = inttoptr i64 %13 to i8*
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %14, %cond.false ]
  ret i8* %cond
}

; Function Attrs: inlinehint nounwind uwtable
define available_externally i8* @__strpbrk_c3(i8* %__s, i32 %__accept1, i32 %__accept2, i32 %__accept3) #9 {
entry:
  %__s.addr = alloca i8*, align 8
  %__accept1.addr = alloca i32, align 4
  %__accept2.addr = alloca i32, align 4
  %__accept3.addr = alloca i32, align 4
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !1
  store i32 %__accept1, i32* %__accept1.addr, align 4, !tbaa !5
  store i32 %__accept2, i32* %__accept2.addr, align 4, !tbaa !5
  store i32 %__accept3, i32* %__accept3.addr, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %1 = load i8, i8* %0, align 1, !tbaa !15
  %conv = sext i8 %1 to i32
  %cmp = icmp ne i32 %conv, 0
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %2 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %3 = load i8, i8* %2, align 1, !tbaa !15
  %conv2 = sext i8 %3 to i32
  %4 = load i32, i32* %__accept1.addr, align 4, !tbaa !5
  %cmp3 = icmp ne i32 %conv2, %4
  br i1 %cmp3, label %land.lhs.true.5, label %land.end

land.lhs.true.5:                                  ; preds = %land.lhs.true
  %5 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %6 = load i8, i8* %5, align 1, !tbaa !15
  %conv6 = sext i8 %6 to i32
  %7 = load i32, i32* %__accept2.addr, align 4, !tbaa !5
  %cmp7 = icmp ne i32 %conv6, %7
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true.5
  %8 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %9 = load i8, i8* %8, align 1, !tbaa !15
  %conv9 = sext i8 %9 to i32
  %10 = load i32, i32* %__accept3.addr, align 4, !tbaa !5
  %cmp10 = icmp ne i32 %conv9, %10
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.5, %land.lhs.true, %while.cond
  %11 = phi i1 [ false, %land.lhs.true.5 ], [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp10, %land.rhs ]
  br i1 %11, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %12 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1
  store i8* %incdec.ptr, i8** %__s.addr, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %land.end
  %13 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %14 = load i8, i8* %13, align 1, !tbaa !15
  %conv12 = sext i8 %14 to i32
  %cmp13 = icmp eq i32 %conv12, 0
  br i1 %cmp13, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  br label %cond.end

cond.false:                                       ; preds = %while.end
  %15 = load i8*, i8** %__s.addr, align 8, !tbaa !1
  %16 = ptrtoint i8* %15 to i64
  %17 = inttoptr i64 %16 to i8*
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %17, %cond.false ]
  ret i8* %cond
}

; Function Attrs: nounwind
declare i8* @strpbrk(i8*, i8*) #4

declare i32 @getmxrr(i8*, i8**, i16*, i32, i32*, i32, i32*) #2

declare %struct.mailer_con_info* @mci_get(i8*, %struct.mailer*) #2

declare void @mci_setstat(%struct.mailer_con_info*, i32, i8*, i8*) #2

declare i8* @sm_malloc_tagged_x(i64, i8*, i32, i32) #2

declare void @makelower(i8*) #2

declare void @macdefine_tagged(%struct.MACROS_T*, i32, i32, i8*, i8*, i32, i32) #2

declare i32 @macid_parse(i8*, i8**) #2

declare i32 @split_by_recipient(%struct.envelope*) #2

declare void @closexscript(%struct.envelope*) #2

declare void @unlockqueue(%struct.envelope*) #2

declare void @checkfd012(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @deliver(%struct.envelope* %e, %struct.address* %firstto) #0 {
entry:
  %retval = alloca i32, align 4
  %e.addr = alloca %struct.envelope*, align 8
  %firstto.addr = alloca %struct.address*, align 8
  %host = alloca i8*, align 8
  %user = alloca i8*, align 8
  %pvp = alloca i8**, align 8
  %mvp = alloca i8**, align 8
  %p = alloca i8*, align 8
  %m = alloca %struct.mailer*, align 8
  %ctladdr = alloca %struct.address*, align 8
  %mci = alloca %struct.mailer_con_info*, align 8
  %to = alloca %struct.address*, align 8
  %clever = alloca i32, align 4
  %tochain = alloca %struct.address*, align 8
  %rcode = alloca i32, align 4
  %lmtp_rcode = alloca i32, align 4
  %nummxhosts = alloca i32, align 4
  %hostnum = alloca i32, align 4
  %firstsig = alloca i8*, align 8
  %pid = alloca i32, align 4
  %curhost = alloca i8*, align 8
  %port = alloca i16, align 2
  %enough = alloca i64, align 8
  %mux_path = alloca i8*, align 8
  %xstart = alloca i64, align 8
  %suidwarn = alloca i32, align 4
  %anyok = alloca i32, align 4
  %goodmxfound = alloca i32, align 4
  %ovr = alloca i32, align 4
  %quarantine = alloca i32, align 4
  %strsize = alloca i32, align 4
  %rcptcount = alloca i32, align 4
  %ret = alloca i32, align 4
  %rpath = alloca i8*, align 8
  %mpvect = alloca [2 x i32], align 4
  %rpvect = alloca [2 x i32], align 4
  %mxhosts = alloca [101 x i8*], align 16
  %pv = alloca [257 x i8*], align 16
  %buf = alloca [257 x i8], align 16
  %cbuf = alloca [4096 x i8], align 16
  %cleanup.dest.slot = alloca i32
  %_h = alloca %struct.sm_exc_handler, align 8
  %skip_back = alloca %struct.address*, align 8
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__s1 = alloca i8*, align 8
  %__result = alloca i32, align 4
  %tmp407 = alloca i32, align 4
  %notify = alloca [2048 x i8], align 16
  %wbuf = alloca [2048 x i8], align 16
  %__s1_len686 = alloca i64, align 8
  %__s2_len688 = alloca i64, align 8
  %tmp689 = alloca i32, align 4
  %__s1695 = alloca i8*, align 8
  %__result698 = alloca i32, align 4
  %tmp736 = alloca i32, align 4
  %__s1_len778 = alloca i64, align 8
  %__s2_len780 = alloca i64, align 8
  %tmp781 = alloca i32, align 4
  %__s1787 = alloca i8*, align 8
  %__result790 = alloca i32, align 4
  %tmp828 = alloca i32, align 4
  %i = alloca i32, align 4
  %__s1_len855 = alloca i64, align 8
  %__s2_len857 = alloca i64, align 8
  %tmp858 = alloca i32, align 4
  %__s1864 = alloca i8*, align 8
  %__result867 = alloca i32, align 4
  %tmp905 = alloca i32, align 4
  %__v = alloca i16, align 2
  %__x = alloca i16, align 2
  %tmp945 = alloca i16, align 2
  %sp = alloca %struct.servent*, align 8
  %sep = alloca i8, align 1
  %endp = alloca i8*, align 8
  %tried_fallbacksmarthost = alloca i32, align 4
  %__a0 = alloca i8, align 1
  %__a1 = alloca i8, align 1
  %__a2 = alloca i8, align 1
  %tmp980 = alloca i8*, align 8
  %type = alloca i8*, align 8
  %__v1136 = alloca i16, align 2
  %__x1138 = alloca i16, align 2
  %tmp1139 = alloca i16, align 2
  %h = alloca i32, align 4
  %av = alloca i8**, align 8
  %i1392 = alloca i32, align 4
  %save_errno = alloca i32, align 4
  %sff = alloca i32, align 4
  %new_euid = alloca i32, align 4
  %new_ruid = alloca i32, align 4
  %new_gid = alloca i32, align 4
  %user1440 = alloca i8*, align 8
  %stb = alloca %struct.stat, align 8
  %gidset = alloca [1 x i32], align 4
  %gidset1542 = alloca [1 x i32], align 4
  %q = alloca i8*, align 8
  %ok = alloca i32, align 4
  %i2119 = alloca i32, align 4
  %pchain = alloca %struct.address*, align 8
  %wbuf2504 = alloca [2048 x i8], align 16
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.address* %firstto, %struct.address** %firstto.addr, align 8, !tbaa !1
  %0 = bitcast i8** %host to i8*
  call void @llvm.lifetime.start(i64 8, i8* %0) #1
  %1 = bitcast i8** %user to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  %2 = bitcast i8*** %pvp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #1
  %3 = bitcast i8*** %mvp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %3) #1
  %4 = bitcast i8** %p to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast %struct.mailer** %m to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast %struct.address** %ctladdr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %6) #1
  %7 = bitcast %struct.mailer_con_info** %mci to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7) #1
  %8 = bitcast %struct.address** %to to i8*
  call void @llvm.lifetime.start(i64 8, i8* %8) #1
  %9 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  store %struct.address* %9, %struct.address** %to, align 8, !tbaa !1
  %10 = bitcast i32* %clever to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #1
  store volatile i32 0, i32* %clever, align 4, !tbaa !5
  %11 = bitcast %struct.address** %tochain to i8*
  call void @llvm.lifetime.start(i64 8, i8* %11) #1
  store volatile %struct.address* null, %struct.address** %tochain, align 8, !tbaa !1
  %12 = bitcast i32* %rcode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #1
  %13 = bitcast i32* %lmtp_rcode to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #1
  store i32 0, i32* %lmtp_rcode, align 4, !tbaa !5
  %14 = bitcast i32* %nummxhosts to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #1
  store i32 0, i32* %nummxhosts, align 4, !tbaa !5
  %15 = bitcast i32* %hostnum to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #1
  store i32 0, i32* %hostnum, align 4, !tbaa !5
  %16 = bitcast i8** %firstsig to i8*
  call void @llvm.lifetime.start(i64 8, i8* %16) #1
  %17 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #1
  store volatile i32 -1, i32* %pid, align 4, !tbaa !5
  %18 = bitcast i8** %curhost to i8*
  call void @llvm.lifetime.start(i64 8, i8* %18) #1
  %19 = bitcast i16* %port to i8*
  call void @llvm.lifetime.start(i64 2, i8* %19) #1
  store i16 0, i16* %port, align 2, !tbaa !40
  %20 = bitcast i64* %enough to i8*
  call void @llvm.lifetime.start(i64 8, i8* %20) #1
  store i64 0, i64* %enough, align 8, !tbaa !32
  %21 = bitcast i8** %mux_path to i8*
  call void @llvm.lifetime.start(i64 8, i8* %21) #1
  store i8* null, i8** %mux_path, align 8, !tbaa !1
  %22 = bitcast i64* %xstart to i8*
  call void @llvm.lifetime.start(i64 8, i8* %22) #1
  %23 = bitcast i32* %suidwarn to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #1
  %24 = bitcast i32* %anyok to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #1
  %25 = bitcast i32* %goodmxfound to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #1
  store i32 0, i32* %goodmxfound, align 4, !tbaa !5
  %26 = bitcast i32* %ovr to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #1
  %27 = bitcast i32* %quarantine to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #1
  %28 = bitcast i32* %strsize to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #1
  %29 = bitcast i32* %rcptcount to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #1
  %30 = bitcast i32* %ret to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #1
  %31 = bitcast i8** %rpath to i8*
  call void @llvm.lifetime.start(i64 8, i8* %31) #1
  %32 = bitcast [2 x i32]* %mpvect to i8*
  call void @llvm.lifetime.start(i64 8, i8* %32) #1
  %33 = bitcast [2 x i32]* %rpvect to i8*
  call void @llvm.lifetime.start(i64 8, i8* %33) #1
  %34 = bitcast [101 x i8*]* %mxhosts to i8*
  call void @llvm.lifetime.start(i64 808, i8* %34) #1
  %35 = bitcast [257 x i8*]* %pv to i8*
  call void @llvm.lifetime.start(i64 2056, i8* %35) #1
  %36 = bitcast [257 x i8]* %buf to i8*
  call void @llvm.lifetime.start(i64 257, i8* %36) #1
  %37 = bitcast [4096 x i8]* %cbuf to i8*
  call void @llvm.lifetime.start(i64 4096, i8* %37) #1
  %call = call i32* @__errno_location() #11
  store i32 0, i32* %call, align 4, !tbaa !5
  %38 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %cmp = icmp ne %struct.address* %38, null
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1339, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.163, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end

lor.end:                                          ; preds = %39, %entry
  %40 = phi i1 [ true, %entry ], [ false, %39 ]
  %lor.ext = zext i1 %40 to i32
  %41 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state = getelementptr inbounds %struct.address, %struct.address* %41, i32 0, i32 21
  %42 = load i16, i16* %q_state, align 2, !tbaa !24
  %conv = sext i16 %42 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.end
  store i32 0, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.2555

if.end:                                           ; preds = %lor.end
  %call3 = call i32 @geteuid() #1
  %cmp4 = icmp eq i32 %call3, 0
  %conv5 = zext i1 %cmp4 to i32
  store i32 %conv5, i32* %suidwarn, align 4, !tbaa !5
  %43 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %cmp6 = icmp ne %struct.envelope* %43, null
  br i1 %cmp6, label %lor.end.9, label %lor.rhs.8

lor.rhs.8:                                        ; preds = %if.end
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1345, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.164, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.9

lor.end.9:                                        ; preds = %44, %if.end
  %45 = phi i1 [ true, %if.end ], [ false, %44 ]
  %lor.ext10 = zext i1 %45 to i32
  %46 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_mailer = getelementptr inbounds %struct.address, %struct.address* %46, i32 0, i32 4
  %47 = load %struct.mailer*, %struct.mailer** %q_mailer, align 8, !tbaa !31
  store %struct.mailer* %47, %struct.mailer** %m, align 8, !tbaa !1
  %48 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_host = getelementptr inbounds %struct.address, %struct.address* %48, i32 0, i32 3
  %49 = load i8*, i8** %q_host, align 8, !tbaa !37
  store i8* %49, i8** %host, align 8, !tbaa !1
  %50 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  store %struct.envelope* %50, %struct.envelope** @CurEnv, align 8, !tbaa !1
  %51 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_statmsg = getelementptr inbounds %struct.envelope, %struct.envelope* %51, i32 0, i32 35
  store i8* null, i8** %e_statmsg, align 8, !tbaa !51
  store i8 0, i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @SmtpError, i32 0, i64 0), align 1, !tbaa !15
  %call11 = call i64 @curtime()
  store i64 %call11, i64* %xstart, align 8, !tbaa !32
  %52 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 10), align 1, !tbaa !15
  %conv12 = zext i8 %52 to i32
  %cmp13 = icmp sge i32 %conv12, 1
  br i1 %cmp13, label %land.lhs.true, label %if.end.16

land.lhs.true:                                    ; preds = %lor.end.9
  %53 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool = icmp ne i32 %53, 0
  br i1 %tobool, label %if.end.16, label %if.then.15

if.then.15:                                       ; preds = %land.lhs.true
  %54 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id = getelementptr inbounds %struct.envelope, %struct.envelope* %54, i32 0, i32 25
  %55 = load i8*, i8** %e_id, align 8, !tbaa !16
  %56 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name = getelementptr inbounds %struct.mailer, %struct.mailer* %56, i32 0, i32 0
  %57 = load i8*, i8** %m_name, align 8, !tbaa !63
  %58 = load i8*, i8** %host, align 8, !tbaa !1
  %59 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_user = getelementptr inbounds %struct.address, %struct.address* %59, i32 0, i32 1
  %60 = load i8*, i8** %q_user, align 8, !tbaa !64
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.165, i32 0, i32 0), i8* %55, i8* %57, i8* %58, i8* %60)
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.15, %land.lhs.true, %lor.end.9
  %61 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 10), align 1, !tbaa !15
  %conv17 = zext i8 %61 to i32
  %cmp18 = icmp sge i32 %conv17, 100
  br i1 %cmp18, label %land.lhs.true.20, label %if.end.23

land.lhs.true.20:                                 ; preds = %if.end.16
  %62 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool21 = icmp ne i32 %62, 0
  br i1 %tobool21, label %if.end.23, label %if.then.22

if.then.22:                                       ; preds = %land.lhs.true.20
  call void @printopenfds(i32 0)
  br label %if.end.23

if.end.23:                                        ; preds = %if.then.22, %land.lhs.true.20, %if.end.16
  %63 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags = getelementptr inbounds %struct.envelope, %struct.envelope* %63, i32 0, i32 11
  %64 = load i64, i64* %e_flags, align 8, !tbaa !7
  %and = and i64 %64, 128
  %cmp24 = icmp ne i64 %and, 0
  br i1 %cmp24, label %if.then.26, label %if.end.36

if.then.26:                                       ; preds = %if.end.23
  %65 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro = getelementptr inbounds %struct.envelope, %struct.envelope* %65, i32 0, i32 46
  %call27 = call i32 @macid_parse(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.166, i32 0, i32 0), i8** null)
  %66 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro, i32 2, i32 %call27, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1366, i32 %66)
  %67 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro28 = getelementptr inbounds %struct.envelope, %struct.envelope* %67, i32 0, i32 46
  %call29 = call i32 @macid_parse(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.167, i32 0, i32 0), i8** null)
  %68 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro28, i32 2, i32 %call29, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1367, i32 %68)
  %69 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro30 = getelementptr inbounds %struct.envelope, %struct.envelope* %69, i32 0, i32 46
  %call31 = call i32 @macid_parse(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i32 0, i32 0), i8** null)
  %70 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro30, i32 2, i32 %call31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1368, i32 %70)
  %71 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro32 = getelementptr inbounds %struct.envelope, %struct.envelope* %71, i32 0, i32 46
  %call33 = call i32 @macid_parse(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i8** null)
  %72 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro32, i32 2, i32 %call33, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1369, i32 %72)
  %73 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro34 = getelementptr inbounds %struct.envelope, %struct.envelope* %73, i32 0, i32 46
  %call35 = call i32 @macid_parse(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.170, i32 0, i32 0), i8** null)
  %74 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro34, i32 2, i32 %call35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1370, i32 %74)
  br label %if.end.36

if.end.36:                                        ; preds = %if.then.26, %if.end.23
  %75 = bitcast %struct.sm_exc_handler* %_h to i8*
  call void @llvm.lifetime.start(i64 224, i8* %75) #1
  br label %do.body

do.body:                                          ; preds = %if.end.36
  %eh_value = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 0
  store %struct.sm_exc* null, %struct.sm_exc** %eh_value, align 8, !tbaa !121
  %76 = load %struct.sm_exc_handler*, %struct.sm_exc_handler** @SmExcHandler, align 8, !tbaa !1
  %eh_parent = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 2
  store %struct.sm_exc_handler* %76, %struct.sm_exc_handler** %eh_parent, align 8, !tbaa !123
  %eh_state = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 3
  store i32 2, i32* %eh_state, align 4, !tbaa !124
  store %struct.sm_exc_handler* %_h, %struct.sm_exc_handler** @SmExcHandler, align 8, !tbaa !1
  %eh_context = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %eh_context, i32 0, i32 0
  %call37 = call i32 @__sigsetjmp(%struct.__jmp_buf_tag* %arraydecay, i32 0) #14
  %cmp38 = icmp eq i32 %call37, 0
  br i1 %cmp38, label %if.then.40, label %if.end.2496

if.then.40:                                       ; preds = %do.body
  %77 = bitcast %struct.address** %skip_back to i8*
  call void @llvm.lifetime.start(i64 8, i8* %77) #1
  store %struct.address* null, %struct.address** %skip_back, align 8, !tbaa !1
  store i32 0, i32* %rcode, align 4, !tbaa !5
  %78 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from = getelementptr inbounds %struct.envelope, %struct.envelope* %78, i32 0, i32 4
  %q_mailer41 = getelementptr inbounds %struct.address, %struct.address* %e_from, i32 0, i32 4
  %79 = load %struct.mailer*, %struct.mailer** %q_mailer41, align 8, !tbaa !125
  %cmp42 = icmp ne %struct.mailer* %79, null
  br i1 %cmp42, label %lor.end.45, label %lor.rhs.44

lor.rhs.44:                                       ; preds = %if.then.40
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1390, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.171, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.45

lor.end.45:                                       ; preds = %80, %if.then.40
  %81 = phi i1 [ true, %if.then.40 ], [ false, %80 ]
  %lor.ext46 = zext i1 %81 to i32
  %82 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from47 = getelementptr inbounds %struct.envelope, %struct.envelope* %82, i32 0, i32 4
  %q_mailer48 = getelementptr inbounds %struct.address, %struct.address* %e_from47, i32 0, i32 4
  %83 = load %struct.mailer*, %struct.mailer** %q_mailer48, align 8, !tbaa !125
  %m_flags = getelementptr inbounds %struct.mailer, %struct.mailer* %83, i32 0, i32 5
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags, i32 0, i64 3
  %84 = load i32, i32* %arrayidx, align 4, !tbaa !5
  %and49 = and i32 %84, 512
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %if.then.51, label %if.else

if.then.51:                                       ; preds = %lor.end.45
  %85 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_sender = getelementptr inbounds %struct.envelope, %struct.envelope* %85, i32 0, i32 5
  %86 = load i8*, i8** %e_sender, align 8, !tbaa !126
  store i8* %86, i8** %p, align 8, !tbaa !1
  br label %if.end.53

if.else:                                          ; preds = %lor.end.45
  %87 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from52 = getelementptr inbounds %struct.envelope, %struct.envelope* %87, i32 0, i32 4
  %q_paddr = getelementptr inbounds %struct.address, %struct.address* %e_from52, i32 0, i32 0
  %88 = load i8*, i8** %q_paddr, align 8, !tbaa !23
  store i8* %88, i8** %p, align 8, !tbaa !1
  br label %if.end.53

if.end.53:                                        ; preds = %if.else, %if.then.51
  %89 = load i8*, i8** %p, align 8, !tbaa !1
  %90 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %91 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call54 = call i8* @remotename(i8* %89, %struct.mailer* %90, i32 5, i32* %rcode, %struct.envelope* %91)
  store i8* %call54, i8** %rpath, align 8, !tbaa !1
  %92 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp55 = icmp ne i32 %92, 0
  br i1 %cmp55, label %land.lhs.true.57, label %if.end.63

land.lhs.true.57:                                 ; preds = %if.end.53
  %93 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags58 = getelementptr inbounds %struct.mailer, %struct.mailer* %93, i32 0, i32 5
  %arrayidx59 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags58, i32 0, i64 0
  %94 = load i32, i32* %arrayidx59, align 4, !tbaa !5
  %and60 = and i32 %94, 2
  %tobool61 = icmp ne i32 %and60, 0
  br i1 %tobool61, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %land.lhs.true.57
  br label %cleanup.2490

if.end.63:                                        ; preds = %land.lhs.true.57, %if.end.53
  %95 = load i8*, i8** %rpath, align 8, !tbaa !1
  %call64 = call i64 @strlen(i8* %95) #12
  %cmp65 = icmp ugt i64 %call64, 256
  br i1 %cmp65, label %if.then.67, label %if.end.70

if.then.67:                                       ; preds = %if.end.63
  %96 = load i8*, i8** %rpath, align 8, !tbaa !1
  %call68 = call i8* @shortenstring(i8* %96, i64 203)
  store i8* %call68, i8** %rpath, align 8, !tbaa !1
  %call69 = call i32* @__errno_location() #11
  store i32 0, i32* %call69, align 4, !tbaa !5
  %97 = load i8*, i8** %rpath, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.172, i32 0, i32 0), i8* %97)
  br label %if.end.70

if.end.70:                                        ; preds = %if.then.67, %if.end.63
  %98 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool = getelementptr inbounds %struct.envelope, %struct.envelope* %98, i32 0, i32 52
  %99 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool, align 8, !tbaa !36
  %100 = load i8*, i8** %rpath, align 8, !tbaa !1
  %call71 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %99, i8* %100)
  store i8* %call71, i8** %rpath, align 8, !tbaa !1
  %101 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro72 = getelementptr inbounds %struct.envelope, %struct.envelope* %101, i32 0, i32 46
  %102 = load i8*, i8** %rpath, align 8, !tbaa !1
  %103 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro72, i32 2, i32 103, i8* %102, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1407, i32 %103)
  %104 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro73 = getelementptr inbounds %struct.envelope, %struct.envelope* %104, i32 0, i32 46
  %105 = load i8*, i8** %host, align 8, !tbaa !1
  %106 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro73, i32 2, i32 104, i8* %105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1408, i32 %106)
  store i32 0, i32* @Errors, align 4, !tbaa !5
  %arraydecay74 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i32 0
  store i8** %arraydecay74, i8*** %pvp, align 8, !tbaa !1
  %107 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_argv = getelementptr inbounds %struct.mailer, %struct.mailer* %107, i32 0, i32 8
  %108 = load i8**, i8*** %m_argv, align 8, !tbaa !35
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 0
  %109 = load i8*, i8** %arrayidx75, align 8, !tbaa !1
  %110 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8*, i8** %110, i32 1
  store i8** %incdec.ptr, i8*** %pvp, align 8, !tbaa !1
  store i8* %109, i8** %110, align 8, !tbaa !1
  %111 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags76 = getelementptr inbounds %struct.mailer, %struct.mailer* %111, i32 0, i32 5
  %arrayidx77 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags76, i32 0, i64 2
  %112 = load i32, i32* %arrayidx77, align 4, !tbaa !5
  %and78 = and i32 %112, 8388608
  %tobool79 = icmp ne i32 %and78, 0
  br i1 %tobool79, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %if.end.70
  store i32 1, i32* @IgnoreHostStatus, align 4, !tbaa !5
  br label %if.end.81

if.end.81:                                        ; preds = %if.then.80, %if.end.70
  %113 = load i32, i32* @FromFlag, align 4, !tbaa !5
  %tobool82 = icmp ne i32 %113, 0
  br i1 %tobool82, label %land.lhs.true.83, label %if.end.103

land.lhs.true.83:                                 ; preds = %if.end.81
  %114 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags84 = getelementptr inbounds %struct.mailer, %struct.mailer* %114, i32 0, i32 5
  %arrayidx85 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags84, i32 0, i64 3
  %115 = load i32, i32* %arrayidx85, align 4, !tbaa !5
  %and86 = and i32 %115, 64
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then.92, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.83
  %116 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags88 = getelementptr inbounds %struct.mailer, %struct.mailer* %116, i32 0, i32 5
  %arrayidx89 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags88, i32 0, i64 3
  %117 = load i32, i32* %arrayidx89, align 4, !tbaa !5
  %and90 = and i32 %117, 262144
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %if.then.92, label %if.end.103

if.then.92:                                       ; preds = %lor.lhs.false, %land.lhs.true.83
  %118 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags93 = getelementptr inbounds %struct.mailer, %struct.mailer* %118, i32 0, i32 5
  %arrayidx94 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags93, i32 0, i64 3
  %119 = load i32, i32* %arrayidx94, align 4, !tbaa !5
  %and95 = and i32 %119, 64
  %tobool96 = icmp ne i32 %and95, 0
  br i1 %tobool96, label %if.then.97, label %if.else.99

if.then.97:                                       ; preds = %if.then.92
  %120 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr98 = getelementptr inbounds i8*, i8** %120, i32 1
  store i8** %incdec.ptr98, i8*** %pvp, align 8, !tbaa !1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.173, i32 0, i32 0), i8** %120, align 8, !tbaa !1
  br label %if.end.101

if.else.99:                                       ; preds = %if.then.92
  %121 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr100 = getelementptr inbounds i8*, i8** %121, i32 1
  store i8** %incdec.ptr100, i8*** %pvp, align 8, !tbaa !1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i32 0, i32 0), i8** %121, align 8, !tbaa !1
  br label %if.end.101

if.end.101:                                       ; preds = %if.else.99, %if.then.97
  %122 = load i8*, i8** %rpath, align 8, !tbaa !1
  %123 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr102 = getelementptr inbounds i8*, i8** %123, i32 1
  store i8** %incdec.ptr102, i8*** %pvp, align 8, !tbaa !1
  store i8* %122, i8** %123, align 8, !tbaa !1
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.101, %lor.lhs.false, %if.end.81
  %124 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_argv104 = getelementptr inbounds %struct.mailer, %struct.mailer* %124, i32 0, i32 8
  %125 = load i8**, i8*** %m_argv104, align 8, !tbaa !35
  store i8** %125, i8*** %mvp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %if.end.138, %if.end.103
  %126 = load i8**, i8*** %mvp, align 8, !tbaa !1
  %incdec.ptr105 = getelementptr inbounds i8*, i8** %126, i32 1
  store i8** %incdec.ptr105, i8*** %mvp, align 8, !tbaa !1
  %127 = load i8*, i8** %incdec.ptr105, align 8, !tbaa !1
  store i8* %127, i8** %p, align 8, !tbaa !1
  %cmp106 = icmp ne i8* %127, null
  br i1 %cmp106, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %if.end.122, %for.body
  %128 = load i8*, i8** %p, align 8, !tbaa !1
  %129 = load i8, i8* %128, align 1, !tbaa !15
  %conv108 = sext i8 %129 to i32
  %cmp109 = icmp ne i32 %conv108, 0
  br i1 %cmp109, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %130 = load i8*, i8** %p, align 8, !tbaa !1
  %incdec.ptr111 = getelementptr inbounds i8, i8* %130, i32 1
  store i8* %incdec.ptr111, i8** %p, align 8, !tbaa !1
  %131 = load i8, i8* %130, align 1, !tbaa !15
  %conv112 = sext i8 %131 to i32
  %and113 = and i32 %conv112, 255
  %cmp114 = icmp eq i32 %and113, 129
  br i1 %cmp114, label %if.then.116, label %if.end.122

if.then.116:                                      ; preds = %while.body
  %132 = load i8*, i8** %p, align 8, !tbaa !1
  %133 = load i8, i8* %132, align 1, !tbaa !15
  %conv117 = sext i8 %133 to i32
  %cmp118 = icmp eq i32 %conv117, 117
  br i1 %cmp118, label %if.then.120, label %if.end.121

if.then.120:                                      ; preds = %if.then.116
  br label %while.end

if.end.121:                                       ; preds = %if.then.116
  br label %if.end.122

if.end.122:                                       ; preds = %if.end.121, %while.body
  br label %while.cond

while.end:                                        ; preds = %if.then.120, %while.cond
  %134 = load i8*, i8** %p, align 8, !tbaa !1
  %135 = load i8, i8* %134, align 1, !tbaa !15
  %conv123 = sext i8 %135 to i32
  %cmp124 = icmp ne i32 %conv123, 0
  br i1 %cmp124, label %if.then.126, label %if.end.127

if.then.126:                                      ; preds = %while.end
  br label %for.end

if.end.127:                                       ; preds = %while.end
  %136 = load i8**, i8*** %mvp, align 8, !tbaa !1
  %137 = load i8*, i8** %136, align 8, !tbaa !1
  %arraydecay128 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %138 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %137, i8* %arraydecay128, i64 257, %struct.envelope* %138)
  %139 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool129 = getelementptr inbounds %struct.envelope, %struct.envelope* %139, i32 0, i32 52
  %140 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool129, align 8, !tbaa !36
  %arraydecay130 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %call131 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %140, i8* %arraydecay130)
  %141 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr132 = getelementptr inbounds i8*, i8** %141, i32 1
  store i8** %incdec.ptr132, i8*** %pvp, align 8, !tbaa !1
  store i8* %call131, i8** %141, align 8, !tbaa !1
  %142 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %arrayidx133 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 253
  %cmp134 = icmp uge i8** %142, %arrayidx133
  br i1 %cmp134, label %if.then.136, label %if.end.138

if.then.136:                                      ; preds = %if.end.127
  %arrayidx137 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 0
  %143 = load i8*, i8** %arrayidx137, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.175, i32 0, i32 0), i8* %143)
  store i32 -1, i32* %rcode, align 4, !tbaa !5
  br label %cleanup.2490

if.end.138:                                       ; preds = %if.end.127
  br label %for.cond

for.end:                                          ; preds = %if.then.126, %for.cond
  %144 = load i8**, i8*** %mvp, align 8, !tbaa !1
  %145 = load i8*, i8** %144, align 8, !tbaa !1
  %cmp139 = icmp eq i8* %145, null
  br i1 %cmp139, label %if.then.141, label %if.else.144

if.then.141:                                      ; preds = %for.end
  store volatile i32 1, i32* %clever, align 4, !tbaa !5
  %146 = load i8**, i8*** %pvp, align 8, !tbaa !1
  store i8* null, i8** %146, align 8, !tbaa !1
  %147 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags142 = getelementptr inbounds %struct.mailer, %struct.mailer* %147, i32 0, i32 5
  %arrayidx143 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags142, i32 0, i64 0
  %148 = load i32, i32* %arrayidx143, align 4, !tbaa !5
  %or = or i32 %148, 2
  store i32 %or, i32* %arrayidx143, align 4, !tbaa !5
  br label %if.end.155

if.else.144:                                      ; preds = %for.end
  %149 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags145 = getelementptr inbounds %struct.mailer, %struct.mailer* %149, i32 0, i32 5
  %arrayidx146 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags145, i32 0, i64 3
  %150 = load i32, i32* %arrayidx146, align 4, !tbaa !5
  %and147 = and i32 %150, 67108864
  %tobool148 = icmp ne i32 %and147, 0
  br i1 %tobool148, label %if.then.149, label %if.end.154

if.then.149:                                      ; preds = %if.else.144
  %151 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name150 = getelementptr inbounds %struct.mailer, %struct.mailer* %151, i32 0, i32 0
  %152 = load i8*, i8** %m_name150, align 8, !tbaa !63
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 3, i8* null, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.176, i32 0, i32 0), i8* %152)
  %153 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags151 = getelementptr inbounds %struct.mailer, %struct.mailer* %153, i32 0, i32 5
  %arrayidx152 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags151, i32 0, i64 3
  %154 = load i32, i32* %arrayidx152, align 4, !tbaa !5
  %and153 = and i32 %154, -67108865
  store i32 %and153, i32* %arrayidx152, align 4, !tbaa !5
  br label %if.end.154

if.end.154:                                       ; preds = %if.then.149, %if.else.144
  br label %if.end.155

if.end.155:                                       ; preds = %if.end.154, %if.then.141
  %155 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to = getelementptr inbounds %struct.envelope, %struct.envelope* %155, i32 0, i32 3
  store i8* null, i8** %e_to, align 8, !tbaa !62
  store i32 2, i32* %strsize, align 4, !tbaa !5
  store i32 0, i32* %rcptcount, align 4, !tbaa !5
  store volatile %struct.address* null, %struct.address** %ctladdr, align 8, !tbaa !1
  %156 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %q_signature = getelementptr inbounds %struct.address, %struct.address* %156, i32 0, i32 22
  %157 = load i8*, i8** %q_signature, align 8, !tbaa !127
  %cmp156 = icmp eq i8* %157, null
  br i1 %cmp156, label %if.then.158, label %if.end.163

if.then.158:                                      ; preds = %if.end.155
  %158 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %q_mailer159 = getelementptr inbounds %struct.address, %struct.address* %158, i32 0, i32 4
  %159 = load %struct.mailer*, %struct.mailer** %q_mailer159, align 8, !tbaa !31
  %160 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %q_host160 = getelementptr inbounds %struct.address, %struct.address* %160, i32 0, i32 3
  %161 = load i8*, i8** %q_host160, align 8, !tbaa !37
  %call161 = call i8* @hostsignature(%struct.mailer* %159, i8* %161)
  %162 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %q_signature162 = getelementptr inbounds %struct.address, %struct.address* %162, i32 0, i32 22
  store i8* %call161, i8** %q_signature162, align 8, !tbaa !127
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.158, %if.end.155
  %163 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %q_signature164 = getelementptr inbounds %struct.address, %struct.address* %163, i32 0, i32 22
  %164 = load i8*, i8** %q_signature164, align 8, !tbaa !127
  store i8* %164, i8** %firstsig, align 8, !tbaa !1
  br label %for.cond.165

for.cond.165:                                     ; preds = %for.inc, %if.end.163
  %165 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %cmp166 = icmp ne %struct.address* %165, null
  br i1 %cmp166, label %for.body.168, label %for.end.539

for.body.168:                                     ; preds = %for.cond.165
  %166 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  %cmp169 = icmp ne %struct.address* %166, null
  br i1 %cmp169, label %land.lhs.true.171, label %if.end.177

land.lhs.true.171:                                ; preds = %for.body.168
  %167 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags172 = getelementptr inbounds %struct.mailer, %struct.mailer* %167, i32 0, i32 5
  %arrayidx173 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags172, i32 0, i64 3
  %168 = load i32, i32* %arrayidx173, align 4, !tbaa !5
  %and174 = and i32 %168, 8192
  %tobool175 = icmp ne i32 %and174, 0
  br i1 %tobool175, label %if.end.177, label %if.then.176

if.then.176:                                      ; preds = %land.lhs.true.171
  br label %for.end.539

if.end.177:                                       ; preds = %land.lhs.true.171, %for.body.168
  %169 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state178 = getelementptr inbounds %struct.address, %struct.address* %169, i32 0, i32 21
  %170 = load i16, i16* %q_state178, align 2, !tbaa !24
  %conv179 = sext i16 %170 to i32
  %cmp180 = icmp eq i32 %conv179, 0
  br i1 %cmp180, label %if.end.183, label %if.then.182

if.then.182:                                      ; preds = %if.end.177
  br label %for.inc

if.end.183:                                       ; preds = %if.end.177
  %171 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_mailer184 = getelementptr inbounds %struct.address, %struct.address* %171, i32 0, i32 4
  %172 = load %struct.mailer*, %struct.mailer** %q_mailer184, align 8, !tbaa !31
  %173 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %q_mailer185 = getelementptr inbounds %struct.address, %struct.address* %173, i32 0, i32 4
  %174 = load %struct.mailer*, %struct.mailer** %q_mailer185, align 8, !tbaa !31
  %cmp186 = icmp ne %struct.mailer* %172, %174
  br i1 %cmp186, label %if.then.188, label %if.end.189

if.then.188:                                      ; preds = %if.end.183
  br label %for.inc

if.end.189:                                       ; preds = %if.end.183
  %175 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_signature190 = getelementptr inbounds %struct.address, %struct.address* %175, i32 0, i32 22
  %176 = load i8*, i8** %q_signature190, align 8, !tbaa !127
  %cmp191 = icmp eq i8* %176, null
  br i1 %cmp191, label %if.then.193, label %if.end.198

if.then.193:                                      ; preds = %if.end.189
  %177 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_mailer194 = getelementptr inbounds %struct.address, %struct.address* %177, i32 0, i32 4
  %178 = load %struct.mailer*, %struct.mailer** %q_mailer194, align 8, !tbaa !31
  %179 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_host195 = getelementptr inbounds %struct.address, %struct.address* %179, i32 0, i32 3
  %180 = load i8*, i8** %q_host195, align 8, !tbaa !37
  %call196 = call i8* @hostsignature(%struct.mailer* %178, i8* %180)
  %181 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_signature197 = getelementptr inbounds %struct.address, %struct.address* %181, i32 0, i32 22
  store i8* %call196, i8** %q_signature197, align 8, !tbaa !127
  br label %if.end.198

if.end.198:                                       ; preds = %if.then.193, %if.end.189
  %182 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  %183 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %cmp199 = icmp eq %struct.address* %182, %183
  br i1 %cmp199, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.198
  br label %cond.end

cond.false:                                       ; preds = %if.end.198
  %184 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_signature201 = getelementptr inbounds %struct.address, %struct.address* %184, i32 0, i32 22
  %185 = load i8*, i8** %q_signature201, align 8, !tbaa !127
  %186 = load i8*, i8** %firstsig, align 8, !tbaa !1
  %call202 = call i32 @coloncmp(i8* %185, i8* %186)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 2, %cond.true ], [ %call202, %cond.false ]
  store i32 %cond, i32* %ret, align 4, !tbaa !5
  %187 = load i32, i32* %ret, align 4, !tbaa !5
  %cmp203 = icmp eq i32 %187, 2
  br i1 %cmp203, label %if.then.205, label %if.else.206

if.then.205:                                      ; preds = %cond.end
  %188 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  store %struct.address* %188, %struct.address** %skip_back, align 8, !tbaa !1
  br label %if.end.211

if.else.206:                                      ; preds = %cond.end
  %189 = load i32, i32* %ret, align 4, !tbaa !5
  %cmp207 = icmp eq i32 %189, 0
  br i1 %cmp207, label %if.then.209, label %if.end.210

if.then.209:                                      ; preds = %if.else.206
  br label %for.end.539

if.end.210:                                       ; preds = %if.else.206
  br label %if.end.211

if.end.211:                                       ; preds = %if.end.210, %if.then.205
  %190 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool212 = icmp ne i32 %190, 0
  br i1 %tobool212, label %if.end.223, label %if.then.213

if.then.213:                                      ; preds = %if.end.211
  %191 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr214 = getelementptr inbounds %struct.address, %struct.address* %191, i32 0, i32 0
  %192 = load i8*, i8** %q_paddr214, align 8, !tbaa !22
  %call215 = call i64 @strlen(i8* %192) #12
  %add = add i64 %call215, 1
  %193 = load i32, i32* %strsize, align 4, !tbaa !5
  %conv216 = sext i32 %193 to i64
  %add217 = add i64 %conv216, %add
  %conv218 = trunc i64 %add217 to i32
  store i32 %conv218, i32* %strsize, align 4, !tbaa !5
  %194 = load i32, i32* %strsize, align 4, !tbaa !5
  %cmp219 = icmp sgt i32 %194, 4096
  br i1 %cmp219, label %if.then.221, label %if.end.222

if.then.221:                                      ; preds = %if.then.213
  br label %for.end.539

if.end.222:                                       ; preds = %if.then.213
  br label %if.end.223

if.end.223:                                       ; preds = %if.end.222, %if.end.211
  %195 = load i32, i32* %rcptcount, align 4, !tbaa !5
  %inc = add nsw i32 %195, 1
  store i32 %inc, i32* %rcptcount, align 4, !tbaa !5
  %196 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_mailer224 = getelementptr inbounds %struct.address, %struct.address* %196, i32 0, i32 4
  %197 = load %struct.mailer*, %struct.mailer** %q_mailer224, align 8, !tbaa !31
  %m_maxrcpt = getelementptr inbounds %struct.mailer, %struct.mailer* %197, i32 0, i32 23
  %198 = load i32, i32* %m_maxrcpt, align 4, !tbaa !128
  %cmp225 = icmp sgt i32 %inc, %198
  br i1 %cmp225, label %if.then.227, label %if.end.228

if.then.227:                                      ; preds = %if.end.223
  br label %for.end.539

if.end.228:                                       ; preds = %if.end.223
  %199 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 10), align 1, !tbaa !15
  %conv229 = zext i8 %199 to i32
  %cmp230 = icmp sge i32 %conv229, 1
  br i1 %cmp230, label %land.lhs.true.232, label %if.end.236

land.lhs.true.232:                                ; preds = %if.end.228
  %200 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool233 = icmp ne i32 %200, 0
  br i1 %tobool233, label %if.end.236, label %if.then.234

if.then.234:                                      ; preds = %land.lhs.true.232
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.177, i32 0, i32 0))
  %call235 = call %struct.sm_file* @sm_debug_file()
  %201 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @printaddr(%struct.sm_file* %call235, %struct.address* %201, i32 0)
  br label %if.end.236

if.end.236:                                       ; preds = %if.then.234, %land.lhs.true.232, %if.end.228
  %202 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_mailer237 = getelementptr inbounds %struct.address, %struct.address* %202, i32 0, i32 4
  %203 = load %struct.mailer*, %struct.mailer** %q_mailer237, align 8, !tbaa !31
  %m_flags238 = getelementptr inbounds %struct.mailer, %struct.mailer* %203, i32 0, i32 5
  %arrayidx239 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags238, i32 0, i64 3
  %204 = load i32, i32* %arrayidx239, align 4, !tbaa !5
  %and240 = and i32 %204, 32768
  %tobool241 = icmp ne i32 %and240, 0
  br i1 %tobool241, label %if.then.242, label %if.end.244

if.then.242:                                      ; preds = %if.end.236
  %205 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %call243 = call %struct.address* @getctladdr(%struct.address* %205)
  store volatile %struct.address* %call243, %struct.address** %ctladdr, align 8, !tbaa !1
  br label %if.end.244

if.end.244:                                       ; preds = %if.then.242, %if.end.236
  %206 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 10), align 1, !tbaa !15
  %conv245 = zext i8 %206 to i32
  %cmp246 = icmp sge i32 %conv245, 2
  br i1 %cmp246, label %land.lhs.true.248, label %if.end.252

land.lhs.true.248:                                ; preds = %if.end.244
  %207 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool249 = icmp ne i32 %207, 0
  br i1 %tobool249, label %if.end.252, label %if.then.250

if.then.250:                                      ; preds = %land.lhs.true.248
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.178, i32 0, i32 0))
  %call251 = call %struct.sm_file* @sm_debug_file()
  %208 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  call void @printaddr(%struct.sm_file* %call251, %struct.address* %208, i32 0)
  br label %if.end.252

if.end.252:                                       ; preds = %if.then.250, %land.lhs.true.248, %if.end.244
  %209 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_user253 = getelementptr inbounds %struct.address, %struct.address* %209, i32 0, i32 1
  %210 = load i8*, i8** %q_user253, align 8, !tbaa !64
  store i8* %210, i8** %user, align 8, !tbaa !1
  %211 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr254 = getelementptr inbounds %struct.address, %struct.address* %211, i32 0, i32 0
  %212 = load i8*, i8** %q_paddr254, align 8, !tbaa !22
  %213 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to255 = getelementptr inbounds %struct.envelope, %struct.envelope* %213, i32 0, i32 3
  store i8* %212, i8** %e_to255, align 8, !tbaa !62
  %214 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_maxsize = getelementptr inbounds %struct.mailer, %struct.mailer* %214, i32 0, i32 14
  %215 = load i64, i64* %m_maxsize, align 8, !tbaa !129
  %cmp256 = icmp ne i64 %215, 0
  br i1 %cmp256, label %land.lhs.true.258, label %if.end.281

land.lhs.true.258:                                ; preds = %if.end.252
  %216 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_msgsize = getelementptr inbounds %struct.envelope, %struct.envelope* %216, i32 0, i32 9
  %217 = load i64, i64* %e_msgsize, align 8, !tbaa !130
  %218 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_maxsize259 = getelementptr inbounds %struct.mailer, %struct.mailer* %218, i32 0, i32 14
  %219 = load i64, i64* %m_maxsize259, align 8, !tbaa !129
  %cmp260 = icmp sgt i64 %217, %219
  br i1 %cmp260, label %if.then.266, label %lor.lhs.false.262

lor.lhs.false.262:                                ; preds = %land.lhs.true.258
  %220 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_msgsize263 = getelementptr inbounds %struct.envelope, %struct.envelope* %220, i32 0, i32 9
  %221 = load i64, i64* %e_msgsize263, align 8, !tbaa !130
  %cmp264 = icmp slt i64 %221, 0
  br i1 %cmp264, label %if.then.266, label %if.end.281

if.then.266:                                      ; preds = %lor.lhs.false.262, %land.lhs.true.258
  %222 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags267 = getelementptr inbounds %struct.envelope, %struct.envelope* %222, i32 0, i32 11
  %223 = load i64, i64* %e_flags267, align 8, !tbaa !7
  %or268 = or i64 %223, 4
  store i64 %or268, i64* %e_flags267, align 8, !tbaa !7
  %224 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_mailer269 = getelementptr inbounds %struct.address, %struct.address* %224, i32 0, i32 4
  %225 = load %struct.mailer*, %struct.mailer** %q_mailer269, align 8, !tbaa !31
  %m_flags270 = getelementptr inbounds %struct.mailer, %struct.mailer* %225, i32 0, i32 5
  %arrayidx271 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags270, i32 0, i64 3
  %226 = load i32, i32* %arrayidx271, align 4, !tbaa !5
  %and272 = and i32 %226, 4096
  %tobool273 = icmp ne i32 %and272, 0
  br i1 %tobool273, label %if.then.274, label %if.else.275

if.then.274:                                      ; preds = %if.then.266
  %227 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status = getelementptr inbounds %struct.address, %struct.address* %227, i32 0, i32 17
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0), i8** %q_status, align 8, !tbaa !25
  br label %if.end.277

if.else.275:                                      ; preds = %if.then.266
  %228 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status276 = getelementptr inbounds %struct.address, %struct.address* %228, i32 0, i32 17
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i32 0, i32 0), i8** %q_status276, align 8, !tbaa !25
  br label %if.end.277

if.end.277:                                       ; preds = %if.else.275, %if.then.274
  %229 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status278 = getelementptr inbounds %struct.address, %struct.address* %229, i32 0, i32 17
  %230 = load i8*, i8** %q_status278, align 8, !tbaa !25
  %231 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_maxsize279 = getelementptr inbounds %struct.mailer, %struct.mailer* %231, i32 0, i32 14
  %232 = load i64, i64* %m_maxsize279, align 8, !tbaa !129
  call void (i8*, i8*, ...) @usrerrenh(i8* %230, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.181, i32 0, i32 0), i64 %232)
  %233 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %234 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @markfailure(%struct.envelope* %233, %struct.address* %234, %struct.mailer_con_info* null, i32 69, i32 0)
  %235 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status280 = getelementptr inbounds %struct.address, %struct.address* %235, i32 0, i32 17
  %236 = load i8*, i8** %q_status280, align 8, !tbaa !25
  %237 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %238 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %239 = load i64, i64* %xstart, align 8, !tbaa !32
  %240 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %241 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @giveresponse(i32 69, i8* %236, %struct.mailer* %237, %struct.mailer_con_info* null, %struct.address* %238, i64 %239, %struct.envelope* %240, %struct.address* %241)
  br label %for.inc

if.end.281:                                       ; preds = %lor.lhs.false.262, %if.end.252
  %call282 = call i32* @__h_errno_location() #11
  store i32 0, i32* %call282, align 4, !tbaa !5
  store i32 1, i32* %ovr, align 4, !tbaa !5
  %242 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg = getelementptr inbounds %struct.envelope, %struct.envelope* %242, i32 0, i32 36
  %243 = load i8*, i8** %e_quarmsg, align 8, !tbaa !38
  %cmp283 = icmp ne i8* %243, null
  %conv284 = zext i1 %cmp283 to i32
  store i32 %conv284, i32* %quarantine, align 4, !tbaa !5
  %244 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from285 = getelementptr inbounds %struct.envelope, %struct.envelope* %244, i32 0, i32 4
  %q_paddr286 = getelementptr inbounds %struct.address, %struct.address* %e_from285, i32 0, i32 0
  %245 = load i8*, i8** %q_paddr286, align 8, !tbaa !23
  %246 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr287 = getelementptr inbounds %struct.address, %struct.address* %246, i32 0, i32 0
  %247 = load i8*, i8** %q_paddr287, align 8, !tbaa !22
  %248 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %249 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id288 = getelementptr inbounds %struct.envelope, %struct.envelope* %249, i32 0, i32 25
  %250 = load i8*, i8** %e_id288, align 8, !tbaa !16
  %call289 = call i32 @rscheck(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.182, i32 0, i32 0), i8* %245, i8* %247, %struct.envelope* %248, i32 5, i32 3, i8* null, i8* %250, %struct.address* null, i8** null)
  store i32 %call289, i32* %rcode, align 4, !tbaa !5
  %251 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp290 = icmp eq i32 %251, 0
  br i1 %cmp290, label %if.then.292, label %if.end.300

if.then.292:                                      ; preds = %if.end.281
  %252 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags293 = getelementptr inbounds %struct.envelope, %struct.envelope* %252, i32 0, i32 11
  %253 = load i64, i64* %e_flags293, align 8, !tbaa !7
  %and294 = and i64 %253, 16777216
  %cmp295 = icmp ne i64 %and294, 0
  br i1 %cmp295, label %if.end.299, label %if.then.297

if.then.297:                                      ; preds = %if.then.292
  %254 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %255 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call298 = call i32 @checkcompat(%struct.address* %254, %struct.envelope* %255)
  store i32 %call298, i32* %rcode, align 4, !tbaa !5
  store i32 0, i32* %ovr, align 4, !tbaa !5
  br label %if.end.299

if.end.299:                                       ; preds = %if.then.297, %if.then.292
  br label %if.end.300

if.end.300:                                       ; preds = %if.end.299, %if.end.281
  %256 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp301 = icmp ne i32 %256, 0
  br i1 %cmp301, label %if.then.303, label %if.end.305

if.then.303:                                      ; preds = %if.end.300
  %257 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %258 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %259 = load i32, i32* %rcode, align 4, !tbaa !5
  %260 = load i32, i32* %ovr, align 4, !tbaa !5
  call void @markfailure(%struct.envelope* %257, %struct.address* %258, %struct.mailer_con_info* null, i32 %259, i32 %260)
  %261 = load i32, i32* %rcode, align 4, !tbaa !5
  %262 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status304 = getelementptr inbounds %struct.address, %struct.address* %262, i32 0, i32 17
  %263 = load i8*, i8** %q_status304, align 8, !tbaa !25
  %264 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %265 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %266 = load i64, i64* %xstart, align 8, !tbaa !32
  %267 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %268 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @giveresponse(i32 %261, i8* %263, %struct.mailer* %264, %struct.mailer_con_info* null, %struct.address* %265, i64 %266, %struct.envelope* %267, %struct.address* %268)
  br label %for.inc

if.end.305:                                       ; preds = %if.end.300
  %269 = load i32, i32* %quarantine, align 4, !tbaa !5
  %tobool306 = icmp ne i32 %269, 0
  br i1 %tobool306, label %if.end.315, label %land.lhs.true.307

land.lhs.true.307:                                ; preds = %if.end.305
  %270 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg308 = getelementptr inbounds %struct.envelope, %struct.envelope* %270, i32 0, i32 36
  %271 = load i8*, i8** %e_quarmsg308, align 8, !tbaa !38
  %cmp309 = icmp ne i8* %271, null
  br i1 %cmp309, label %if.then.311, label %if.end.315

if.then.311:                                      ; preds = %land.lhs.true.307
  %272 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_quarmsg312 = getelementptr inbounds %struct.envelope, %struct.envelope* %272, i32 0, i32 36
  store i8* null, i8** %e_quarmsg312, align 8, !tbaa !38
  %273 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro313 = getelementptr inbounds %struct.envelope, %struct.envelope* %273, i32 0, i32 46
  %call314 = call i32 @macid_parse(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.183, i32 0, i32 0), i8** null)
  %274 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro313, i32 2, i32 %call314, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1634, i32 %274)
  br label %if.end.315

if.end.315:                                       ; preds = %if.then.311, %land.lhs.true.307, %if.end.305
  %275 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags316 = getelementptr inbounds %struct.envelope, %struct.envelope* %275, i32 0, i32 11
  %276 = load i64, i64* %e_flags316, align 8, !tbaa !7
  %and317 = and i64 %276, 16777216
  %cmp318 = icmp ne i64 %and317, 0
  br i1 %cmp318, label %if.then.320, label %if.end.332

if.then.320:                                      ; preds = %if.end.315
  %277 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 10), align 1, !tbaa !15
  %conv321 = zext i8 %277 to i32
  %cmp322 = icmp sge i32 %conv321, 5
  br i1 %cmp322, label %land.lhs.true.324, label %if.end.328

land.lhs.true.324:                                ; preds = %if.then.320
  %278 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool325 = icmp ne i32 %278, 0
  br i1 %tobool325, label %if.end.328, label %if.then.326

if.then.326:                                      ; preds = %land.lhs.true.324
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.184, i32 0, i32 0))
  %call327 = call %struct.sm_file* @sm_debug_file()
  %279 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @printaddr(%struct.sm_file* %call327, %struct.address* %279, i32 0)
  br label %if.end.328

if.end.328:                                       ; preds = %if.then.326, %land.lhs.true.324, %if.then.320
  %280 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state329 = getelementptr inbounds %struct.address, %struct.address* %280, i32 0, i32 21
  store i16 10, i16* %q_state329, align 2, !tbaa !24
  %281 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags330 = getelementptr inbounds %struct.envelope, %struct.envelope* %281, i32 0, i32 11
  %282 = load i64, i64* %e_flags330, align 8, !tbaa !7
  %and331 = and i64 %282, -16777217
  store i64 %and331, i64* %e_flags330, align 8, !tbaa !7
  br label %for.inc

if.end.332:                                       ; preds = %if.end.315
  %283 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags333 = getelementptr inbounds %struct.mailer, %struct.mailer* %283, i32 0, i32 5
  %arrayidx334 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags333, i32 0, i64 3
  %284 = load i32, i32* %arrayidx334, align 4, !tbaa !5
  %and335 = and i32 %284, 524288
  %tobool336 = icmp ne i32 %and335, 0
  br i1 %tobool336, label %if.then.337, label %if.end.338

if.then.337:                                      ; preds = %if.end.332
  %285 = load i8*, i8** %user, align 8, !tbaa !1
  call void @stripquotes(i8* %285)
  %286 = load i8*, i8** %host, align 8, !tbaa !1
  call void @stripquotes(i8* %286)
  br label %if.end.338

if.end.338:                                       ; preds = %if.then.337, %if.end.332
  %287 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags339 = getelementptr inbounds %struct.mailer, %struct.mailer* %287, i32 0, i32 5
  %arrayidx340 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags339, i32 0, i64 2
  %288 = load i32, i32* %arrayidx340, align 4, !tbaa !5
  %and341 = and i32 %288, 4
  %tobool342 = icmp ne i32 %and341, 0
  br i1 %tobool342, label %land.lhs.true.343, label %if.end.349

land.lhs.true.343:                                ; preds = %if.end.338
  %289 = load i8*, i8** %user, align 8, !tbaa !1
  %arrayidx344 = getelementptr inbounds i8, i8* %289, i64 0
  %290 = load i8, i8* %arrayidx344, align 1, !tbaa !15
  %conv345 = sext i8 %290 to i32
  %cmp346 = icmp eq i32 %conv345, 92
  br i1 %cmp346, label %if.then.348, label %if.end.349

if.then.348:                                      ; preds = %land.lhs.true.343
  %291 = load i8*, i8** %user, align 8, !tbaa !1
  call void @stripbackslash(i8* %291)
  br label %if.end.349

if.end.349:                                       ; preds = %if.then.348, %land.lhs.true.343, %if.end.338
  %292 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %293 = load %struct.mailer*, %struct.mailer** @ProgMailer, align 8, !tbaa !1
  %cmp350 = icmp eq %struct.mailer* %292, %293
  br i1 %cmp350, label %land.lhs.true.352, label %if.end.358

land.lhs.true.352:                                ; preds = %if.end.349
  %294 = load i8*, i8** %user, align 8, !tbaa !1
  %295 = load i8, i8* %294, align 1, !tbaa !15
  %conv353 = sext i8 %295 to i32
  %cmp354 = icmp eq i32 %conv353, 124
  br i1 %cmp354, label %if.then.356, label %if.end.358

if.then.356:                                      ; preds = %land.lhs.true.352
  %296 = load i8*, i8** %user, align 8, !tbaa !1
  %incdec.ptr357 = getelementptr inbounds i8, i8* %296, i32 1
  store i8* %incdec.ptr357, i8** %user, align 8, !tbaa !1
  br label %if.end.358

if.end.358:                                       ; preds = %if.then.356, %land.lhs.true.352, %if.end.349
  %297 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state359 = getelementptr inbounds %struct.address, %struct.address* %297, i32 0, i32 21
  %298 = load i16, i16* %q_state359, align 2, !tbaa !24
  %conv360 = sext i16 %298 to i32
  %cmp361 = icmp eq i32 %conv360, 0
  br i1 %cmp361, label %if.end.364, label %if.then.363

if.then.363:                                      ; preds = %if.end.358
  br label %for.inc

if.end.364:                                       ; preds = %if.end.358
  %299 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %299) #1
  %300 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %300) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i64 1) to i64), i64 ptrtoint ([7 x i8]* @.str.185 to i64)), i64 1), label %land.lhs.true.365, label %cond.false.408

land.lhs.true.365:                                ; preds = %if.end.364
  store i64 6, i64* %__s2_len, align 8, !tbaa !32
  %301 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp366 = icmp ult i64 %301, 4
  br i1 %cmp366, label %cond.true.368, label %cond.false.408

cond.true.368:                                    ; preds = %land.lhs.true.365
  %302 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %302) #1
  %303 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer = getelementptr inbounds %struct.mailer, %struct.mailer* %303, i32 0, i32 1
  %304 = load i8*, i8** %m_mailer, align 8, !tbaa !33
  store i8* %304, i8** %__s1, align 8, !tbaa !1
  %305 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.start(i64 4, i8* %305) #1
  %306 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx371 = getelementptr inbounds i8, i8* %306, i64 0
  %307 = load i8, i8* %arrayidx371, align 1, !tbaa !15
  %conv372 = zext i8 %307 to i32
  %308 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i32 0), align 1, !tbaa !15
  %conv373 = zext i8 %308 to i32
  %sub = sub nsw i32 %conv372, %conv373
  store i32 %sub, i32* %__result, align 4, !tbaa !5
  %309 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp374 = icmp ugt i64 %309, 0
  br i1 %cmp374, label %land.lhs.true.376, label %if.end.406

land.lhs.true.376:                                ; preds = %cond.true.368
  %310 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp377 = icmp eq i32 %310, 0
  br i1 %cmp377, label %if.then.379, label %if.end.406

if.then.379:                                      ; preds = %land.lhs.true.376
  %311 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx380 = getelementptr inbounds i8, i8* %311, i64 1
  %312 = load i8, i8* %arrayidx380, align 1, !tbaa !15
  %conv381 = zext i8 %312 to i32
  %313 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i64 1), align 1, !tbaa !15
  %conv382 = zext i8 %313 to i32
  %sub383 = sub nsw i32 %conv381, %conv382
  store i32 %sub383, i32* %__result, align 4, !tbaa !5
  %314 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp384 = icmp ugt i64 %314, 1
  br i1 %cmp384, label %land.lhs.true.386, label %if.end.405

land.lhs.true.386:                                ; preds = %if.then.379
  %315 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp387 = icmp eq i32 %315, 0
  br i1 %cmp387, label %if.then.389, label %if.end.405

if.then.389:                                      ; preds = %land.lhs.true.386
  %316 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx390 = getelementptr inbounds i8, i8* %316, i64 2
  %317 = load i8, i8* %arrayidx390, align 1, !tbaa !15
  %conv391 = zext i8 %317 to i32
  %318 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i64 2), align 1, !tbaa !15
  %conv392 = zext i8 %318 to i32
  %sub393 = sub nsw i32 %conv391, %conv392
  store i32 %sub393, i32* %__result, align 4, !tbaa !5
  %319 = load i64, i64* %__s2_len, align 8, !tbaa !32
  %cmp394 = icmp ugt i64 %319, 2
  br i1 %cmp394, label %land.lhs.true.396, label %if.end.404

land.lhs.true.396:                                ; preds = %if.then.389
  %320 = load i32, i32* %__result, align 4, !tbaa !5
  %cmp397 = icmp eq i32 %320, 0
  br i1 %cmp397, label %if.then.399, label %if.end.404

if.then.399:                                      ; preds = %land.lhs.true.396
  %321 = load i8*, i8** %__s1, align 8, !tbaa !1
  %arrayidx400 = getelementptr inbounds i8, i8* %321, i64 3
  %322 = load i8, i8* %arrayidx400, align 1, !tbaa !15
  %conv401 = zext i8 %322 to i32
  %323 = load i8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i64 3), align 1, !tbaa !15
  %conv402 = zext i8 %323 to i32
  %sub403 = sub nsw i32 %conv401, %conv402
  store i32 %sub403, i32* %__result, align 4, !tbaa !5
  br label %if.end.404

if.end.404:                                       ; preds = %if.then.399, %land.lhs.true.396, %if.then.389
  br label %if.end.405

if.end.405:                                       ; preds = %if.end.404, %land.lhs.true.386, %if.then.379
  br label %if.end.406

if.end.406:                                       ; preds = %if.end.405, %land.lhs.true.376, %cond.true.368
  %324 = load i32, i32* %__result, align 4, !tbaa !5
  store i32 %324, i32* %tmp407, !tbaa !5
  %325 = bitcast i32* %__result to i8*
  call void @llvm.lifetime.end(i64 4, i8* %325) #1
  %326 = bitcast i8** %__s1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %326) #1
  %327 = load i32, i32* %tmp407, !tbaa !5
  br label %cond.end.411

cond.false.408:                                   ; preds = %land.lhs.true.365, %if.end.364
  %328 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer409 = getelementptr inbounds %struct.mailer, %struct.mailer* %328, i32 0, i32 1
  %329 = load i8*, i8** %m_mailer409, align 8, !tbaa !33
  %call410 = call i32 @strcmp(i8* %329, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.185, i32 0, i32 0)) #1
  br label %cond.end.411

cond.end.411:                                     ; preds = %cond.false.408, %if.end.406
  %cond412 = phi i32 [ %327, %if.end.406 ], [ %call410, %cond.false.408 ]
  store i32 %cond412, i32* %tmp, !tbaa !5
  %330 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %330) #1
  %331 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %331) #1
  %332 = load i32, i32* %tmp, !tbaa !5
  %cmp413 = icmp eq i32 %332, 0
  br i1 %cmp413, label %if.then.415, label %if.end.462

if.then.415:                                      ; preds = %cond.end.411
  %333 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro416 = getelementptr inbounds %struct.envelope, %struct.envelope* %333, i32 0, i32 46
  %334 = load i8*, i8** %user, align 8, !tbaa !1
  %335 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro416, i32 2, i32 117, i8* %334, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1705, i32 %335)
  %336 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_home = getelementptr inbounds %struct.address, %struct.address* %336, i32 0, i32 8
  %337 = load i8*, i8** %q_home, align 8, !tbaa !131
  store i8* %337, i8** %p, align 8, !tbaa !1
  %338 = load i8*, i8** %p, align 8, !tbaa !1
  %cmp417 = icmp eq i8* %338, null
  br i1 %cmp417, label %land.lhs.true.419, label %if.end.424

land.lhs.true.419:                                ; preds = %if.then.415
  %339 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %cmp420 = icmp ne %struct.address* %339, null
  br i1 %cmp420, label %if.then.422, label %if.end.424

if.then.422:                                      ; preds = %land.lhs.true.419
  %340 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_home423 = getelementptr inbounds %struct.address, %struct.address* %340, i32 0, i32 8
  %341 = load i8*, i8** %q_home423, align 8, !tbaa !131
  store i8* %341, i8** %p, align 8, !tbaa !1
  br label %if.end.424

if.end.424:                                       ; preds = %if.then.422, %land.lhs.true.419, %if.then.415
  %342 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro425 = getelementptr inbounds %struct.envelope, %struct.envelope* %342, i32 0, i32 46
  %343 = load i8*, i8** %p, align 8, !tbaa !1
  %344 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro425, i32 2, i32 122, i8* %343, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1709, i32 %344)
  %345 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_argv426 = getelementptr inbounds %struct.mailer, %struct.mailer* %345, i32 0, i32 8
  %346 = load i8**, i8*** %m_argv426, align 8, !tbaa !35
  %arrayidx427 = getelementptr inbounds i8*, i8** %346, i64 1
  %347 = load i8*, i8** %arrayidx427, align 8, !tbaa !1
  %arraydecay428 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %348 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %347, i8* %arraydecay428, i64 257, %struct.envelope* %348)
  %arraydecay429 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %call430 = call i64 @strlen(i8* %arraydecay429) #12
  %cmp431 = icmp ugt i64 %call430, 0
  br i1 %cmp431, label %if.then.433, label %if.else.436

if.then.433:                                      ; preds = %if.end.424
  %arraydecay434 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %349 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %350 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %351 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call435 = call i32 @mailfile(i8* %arraydecay434, %struct.mailer* %349, %struct.address* %350, i64 64, %struct.envelope* %351)
  store i32 %call435, i32* %rcode, align 4, !tbaa !5
  br label %if.end.438

if.else.436:                                      ; preds = %if.end.424
  %352 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name437 = getelementptr inbounds %struct.mailer, %struct.mailer* %352, i32 0, i32 0
  %353 = load i8*, i8** %m_name437, align 8, !tbaa !63
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.186, i32 0, i32 0), i8* %353)
  store i32 78, i32* %rcode, align 4, !tbaa !5
  br label %if.end.438

if.end.438:                                       ; preds = %if.else.436, %if.then.433
  %354 = load i32, i32* %rcode, align 4, !tbaa !5
  %355 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status439 = getelementptr inbounds %struct.address, %struct.address* %355, i32 0, i32 17
  %356 = load i8*, i8** %q_status439, align 8, !tbaa !25
  %357 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %358 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %359 = load i64, i64* %xstart, align 8, !tbaa !32
  %360 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %361 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @giveresponse(i32 %354, i8* %356, %struct.mailer* %357, %struct.mailer_con_info* null, %struct.address* %358, i64 %359, %struct.envelope* %360, %struct.address* %361)
  %362 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %363 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %364 = load i32, i32* %rcode, align 4, !tbaa !5
  call void @markfailure(%struct.envelope* %362, %struct.address* %363, %struct.mailer_con_info* null, i32 %364, i32 1)
  %365 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nsent = getelementptr inbounds %struct.envelope, %struct.envelope* %365, i32 0, i32 15
  %366 = load i16, i16* %e_nsent, align 2, !tbaa !59
  %inc440 = add i16 %366, 1
  store i16 %inc440, i16* %e_nsent, align 2, !tbaa !59
  %367 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp441 = icmp eq i32 %367, 0
  br i1 %cmp441, label %if.then.443, label %if.end.460

if.then.443:                                      ; preds = %if.end.438
  %368 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state444 = getelementptr inbounds %struct.address, %struct.address* %368, i32 0, i32 21
  store i16 1, i16* %q_state444, align 2, !tbaa !24
  %369 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags445 = getelementptr inbounds %struct.mailer, %struct.mailer* %369, i32 0, i32 5
  %arrayidx446 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags445, i32 0, i64 3
  %370 = load i32, i32* %arrayidx446, align 4, !tbaa !5
  %and447 = and i32 %370, 4096
  %tobool448 = icmp ne i32 %and447, 0
  br i1 %tobool448, label %land.lhs.true.449, label %if.end.459

land.lhs.true.449:                                ; preds = %if.then.443
  %371 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags = getelementptr inbounds %struct.address, %struct.address* %371, i32 0, i32 5
  %372 = load i64, i64* %q_flags, align 8, !tbaa !52
  %and450 = and i64 %372, 64
  %cmp451 = icmp ne i64 %and450, 0
  br i1 %cmp451, label %if.then.453, label %if.end.459

if.then.453:                                      ; preds = %land.lhs.true.449
  %373 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags454 = getelementptr inbounds %struct.address, %struct.address* %373, i32 0, i32 5
  %374 = load i64, i64* %q_flags454, align 8, !tbaa !52
  %or455 = or i64 %374, 4096
  store i64 %or455, i64* %q_flags454, align 8, !tbaa !52
  %375 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status456 = getelementptr inbounds %struct.address, %struct.address* %375, i32 0, i32 17
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8** %q_status456, align 8, !tbaa !25
  %376 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp = getelementptr inbounds %struct.envelope, %struct.envelope* %376, i32 0, i32 32
  %377 = load %struct.sm_file*, %struct.sm_file** %e_xfp, align 8, !tbaa !46
  %378 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr457 = getelementptr inbounds %struct.address, %struct.address* %378, i32 0, i32 0
  %379 = load i8*, i8** %q_paddr457, align 8, !tbaa !22
  %call458 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %377, i32 -2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.188, i32 0, i32 0), i8* %379)
  br label %if.end.459

if.end.459:                                       ; preds = %if.then.453, %land.lhs.true.449, %if.then.443
  br label %if.end.460

if.end.460:                                       ; preds = %if.end.459, %if.end.438
  %call461 = call i64 @curtime()
  %380 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_statdate = getelementptr inbounds %struct.address, %struct.address* %380, i32 0, i32 19
  store i64 %call461, i64* %q_statdate, align 8, !tbaa !70
  %381 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %382 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @markstats(%struct.envelope* %381, %struct.address* %382, i32 110)
  br label %for.inc

if.end.462:                                       ; preds = %cond.end.411
  %383 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  %384 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_tchain = getelementptr inbounds %struct.address, %struct.address* %384, i32 0, i32 13
  store %struct.address* %383, %struct.address** %q_tchain, align 8, !tbaa !132
  %385 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  store volatile %struct.address* %385, %struct.address** %tochain, align 8, !tbaa !1
  %386 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to463 = getelementptr inbounds %struct.envelope, %struct.envelope* %386, i32 0, i32 3
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i32 0, i32 0), i8** %e_to463, align 8, !tbaa !62
  %387 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro464 = getelementptr inbounds %struct.envelope, %struct.envelope* %387, i32 0, i32 46
  %388 = load i8*, i8** %user, align 8, !tbaa !1
  %389 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro464, i32 2, i32 117, i8* %388, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1752, i32 %389)
  %390 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_home465 = getelementptr inbounds %struct.address, %struct.address* %390, i32 0, i32 8
  %391 = load i8*, i8** %q_home465, align 8, !tbaa !131
  store i8* %391, i8** %p, align 8, !tbaa !1
  %392 = load i8*, i8** %p, align 8, !tbaa !1
  %cmp466 = icmp eq i8* %392, null
  br i1 %cmp466, label %land.lhs.true.468, label %if.end.473

land.lhs.true.468:                                ; preds = %if.end.462
  %393 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %cmp469 = icmp ne %struct.address* %393, null
  br i1 %cmp469, label %if.then.471, label %if.end.473

if.then.471:                                      ; preds = %land.lhs.true.468
  %394 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_home472 = getelementptr inbounds %struct.address, %struct.address* %394, i32 0, i32 8
  %395 = load i8*, i8** %q_home472, align 8, !tbaa !131
  store i8* %395, i8** %p, align 8, !tbaa !1
  br label %if.end.473

if.end.473:                                       ; preds = %if.then.471, %land.lhs.true.468, %if.end.462
  %396 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro474 = getelementptr inbounds %struct.envelope, %struct.envelope* %396, i32 0, i32 46
  %397 = load i8*, i8** %p, align 8, !tbaa !1
  %398 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro474, i32 2, i32 122, i8* %397, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1756, i32 %398)
  %399 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags475 = getelementptr inbounds %struct.address, %struct.address* %399, i32 0, i32 5
  %400 = load i64, i64* %q_flags475, align 8, !tbaa !52
  %and476 = and i64 %400, 512
  %cmp477 = icmp ne i64 %and476, 0
  br i1 %cmp477, label %if.then.479, label %if.else.522

if.then.479:                                      ; preds = %if.end.473
  %401 = bitcast [2048 x i8]* %notify to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %401) #1
  %arrayidx481 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i64 0
  store i8 0, i8* %arrayidx481, align 1, !tbaa !15
  %402 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags482 = getelementptr inbounds %struct.address, %struct.address* %402, i32 0, i32 5
  %403 = load i64, i64* %q_flags482, align 8, !tbaa !52
  %and483 = and i64 %403, 64
  %cmp484 = icmp ne i64 %and483, 0
  br i1 %cmp484, label %if.then.486, label %if.end.489

if.then.486:                                      ; preds = %if.then.479
  %arraydecay487 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i32 0
  %call488 = call i64 @sm_strlcat(i8* %arraydecay487, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.190, i32 0, i32 0), i64 2048)
  br label %if.end.489

if.end.489:                                       ; preds = %if.then.486, %if.then.479
  %404 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags490 = getelementptr inbounds %struct.address, %struct.address* %404, i32 0, i32 5
  %405 = load i64, i64* %q_flags490, align 8, !tbaa !52
  %and491 = and i64 %405, 128
  %cmp492 = icmp ne i64 %and491, 0
  br i1 %cmp492, label %if.then.494, label %if.end.497

if.then.494:                                      ; preds = %if.end.489
  %arraydecay495 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i32 0
  %call496 = call i64 @sm_strlcat(i8* %arraydecay495, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.191, i32 0, i32 0), i64 2048)
  br label %if.end.497

if.end.497:                                       ; preds = %if.then.494, %if.end.489
  %406 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags498 = getelementptr inbounds %struct.address, %struct.address* %406, i32 0, i32 5
  %407 = load i64, i64* %q_flags498, align 8, !tbaa !52
  %and499 = and i64 %407, 256
  %cmp500 = icmp ne i64 %and499, 0
  br i1 %cmp500, label %if.then.502, label %if.end.505

if.then.502:                                      ; preds = %if.end.497
  %arraydecay503 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i32 0
  %call504 = call i64 @sm_strlcat(i8* %arraydecay503, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.192, i32 0, i32 0), i64 2048)
  br label %if.end.505

if.end.505:                                       ; preds = %if.then.502, %if.end.497
  %arrayidx506 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i64 0
  %408 = load i8, i8* %arrayidx506, align 1, !tbaa !15
  %conv507 = sext i8 %408 to i32
  %cmp508 = icmp eq i32 %conv507, 0
  br i1 %cmp508, label %if.then.510, label %if.else.513

if.then.510:                                      ; preds = %if.end.505
  %arraydecay511 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i32 0
  %call512 = call i64 @sm_strlcat(i8* %arraydecay511, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.193, i32 0, i32 0), i64 2048)
  br label %if.end.518

if.else.513:                                      ; preds = %if.end.505
  %arraydecay514 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i32 0
  %call515 = call i64 @strlen(i8* %arraydecay514) #12
  %sub516 = sub i64 %call515, 1
  %arrayidx517 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i64 %sub516
  store i8 0, i8* %arrayidx517, align 1, !tbaa !15
  br label %if.end.518

if.end.518:                                       ; preds = %if.else.513, %if.then.510
  %409 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro519 = getelementptr inbounds %struct.envelope, %struct.envelope* %409, i32 0, i32 46
  %call520 = call i32 @macid_parse(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.194, i32 0, i32 0), i8** null)
  %arraydecay521 = getelementptr inbounds [2048 x i8], [2048 x i8]* %notify, i32 0, i32 0
  %410 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro519, i32 1, i32 %call520, i8* %arraydecay521, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1782, i32 %410)
  %411 = bitcast [2048 x i8]* %notify to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %411) #1
  br label %if.end.525

if.else.522:                                      ; preds = %if.end.473
  %412 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro523 = getelementptr inbounds %struct.envelope, %struct.envelope* %412, i32 0, i32 46
  %call524 = call i32 @macid_parse(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.194, i32 0, i32 0), i8** null)
  %413 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro523, i32 2, i32 %call524, i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1786, i32 %413)
  br label %if.end.525

if.end.525:                                       ; preds = %if.else.522, %if.end.518
  %414 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool526 = icmp ne i32 %414, 0
  br i1 %tobool526, label %if.end.538, label %if.then.527

if.then.527:                                      ; preds = %if.end.525
  %415 = load i8**, i8*** %mvp, align 8, !tbaa !1
  %416 = load i8*, i8** %415, align 8, !tbaa !1
  %arraydecay528 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %417 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %416, i8* %arraydecay528, i64 257, %struct.envelope* %417)
  %418 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool529 = getelementptr inbounds %struct.envelope, %struct.envelope* %418, i32 0, i32 52
  %419 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool529, align 8, !tbaa !36
  %arraydecay530 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %call531 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %419, i8* %arraydecay530)
  %420 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr532 = getelementptr inbounds i8*, i8** %420, i32 1
  store i8** %incdec.ptr532, i8*** %pvp, align 8, !tbaa !1
  store i8* %call531, i8** %420, align 8, !tbaa !1
  %421 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %arrayidx533 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 254
  %cmp534 = icmp uge i8** %421, %arrayidx533
  br i1 %cmp534, label %if.then.536, label %if.end.537

if.then.536:                                      ; preds = %if.then.527
  br label %for.end.539

if.end.537:                                       ; preds = %if.then.527
  br label %if.end.538

if.end.538:                                       ; preds = %if.end.537, %if.end.525
  br label %for.inc

for.inc:                                          ; preds = %if.end.538, %if.end.460, %if.then.363, %if.end.328, %if.then.303, %if.end.277, %if.then.188, %if.then.182
  %422 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_next = getelementptr inbounds %struct.address, %struct.address* %422, i32 0, i32 10
  %423 = load %struct.address*, %struct.address** %q_next, align 8, !tbaa !27
  store %struct.address* %423, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.165

for.end.539:                                      ; preds = %if.then.536, %if.then.227, %if.then.221, %if.then.209, %if.then.176, %for.cond.165
  %424 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  %cmp540 = icmp eq %struct.address* %424, null
  br i1 %cmp540, label %if.then.542, label %if.end.543

if.then.542:                                      ; preds = %for.end.539
  store i32 0, i32* %rcode, align 4, !tbaa !5
  br label %cleanup.2490

if.end.543:                                       ; preds = %for.end.539
  store i32 1, i32* %strsize, align 4, !tbaa !5
  %425 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  store %struct.address* %425, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.544

for.cond.544:                                     ; preds = %for.inc.554, %if.end.543
  %426 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %cmp545 = icmp ne %struct.address* %426, null
  br i1 %cmp545, label %for.body.547, label %for.end.556

for.body.547:                                     ; preds = %for.cond.544
  %427 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr548 = getelementptr inbounds %struct.address, %struct.address* %427, i32 0, i32 0
  %428 = load i8*, i8** %q_paddr548, align 8, !tbaa !22
  %call549 = call i64 @strlen(i8* %428) #12
  %add550 = add i64 %call549, 1
  %429 = load i32, i32* %strsize, align 4, !tbaa !5
  %conv551 = sext i32 %429 to i64
  %add552 = add i64 %conv551, %add550
  %conv553 = trunc i64 %add552 to i32
  store i32 %conv553, i32* %strsize, align 4, !tbaa !5
  br label %for.inc.554

for.inc.554:                                      ; preds = %for.body.547
  %430 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_tchain555 = getelementptr inbounds %struct.address, %struct.address* %430, i32 0, i32 13
  %431 = load %struct.address*, %struct.address** %q_tchain555, align 8, !tbaa !132
  store %struct.address* %431, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.544

for.end.556:                                      ; preds = %for.cond.544
  %432 = load i32, i32* %strsize, align 4, !tbaa !5
  %cmp557 = icmp slt i32 %432, 4096
  br i1 %cmp557, label %if.then.559, label %if.end.560

if.then.559:                                      ; preds = %for.end.556
  store i32 4096, i32* %strsize, align 4, !tbaa !5
  br label %if.end.560

if.end.560:                                       ; preds = %if.then.559, %for.end.556
  %433 = load i32, i32* %strsize, align 4, !tbaa !5
  %434 = load i32, i32* @deliver.tobufsize, align 4, !tbaa !5
  %cmp561 = icmp sgt i32 %433, %434
  br i1 %cmp561, label %if.then.563, label %if.end.571

if.then.563:                                      ; preds = %if.end.560
  br label %do.body.564

do.body.564:                                      ; preds = %if.then.563
  %435 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %cmp565 = icmp ne i8* %435, null
  br i1 %cmp565, label %if.then.567, label %if.end.568

if.then.567:                                      ; preds = %do.body.564
  %436 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  call void @sm_free_tagged(i8* %436, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1819)
  store i8* null, i8** @deliver.tobuf, align 8, !tbaa !1
  br label %if.end.568

if.end.568:                                       ; preds = %if.then.567, %do.body.564
  br label %do.cond

do.cond:                                          ; preds = %if.end.568
  br label %do.end

do.end:                                           ; preds = %do.cond
  %437 = load i32, i32* %strsize, align 4, !tbaa !5
  %conv569 = sext i32 %437 to i64
  %call570 = call i8* @sm_malloc_tagged_x(i64 %conv569, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 1820, i32 0)
  store i8* %call570, i8** @deliver.tobuf, align 8, !tbaa !1
  %438 = load i32, i32* %strsize, align 4, !tbaa !5
  store i32 %438, i32* @deliver.tobufsize, align 4, !tbaa !5
  br label %if.end.571

if.end.571:                                       ; preds = %do.end, %if.end.560
  %439 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  store i8* %439, i8** %p, align 8, !tbaa !1
  %440 = load i8*, i8** %p, align 8, !tbaa !1
  store i8 0, i8* %440, align 1, !tbaa !15
  %441 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  store %struct.address* %441, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.572

for.cond.572:                                     ; preds = %for.inc.581, %if.end.571
  %442 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %cmp573 = icmp ne %struct.address* %442, null
  br i1 %cmp573, label %for.body.575, label %for.end.583

for.body.575:                                     ; preds = %for.cond.572
  %443 = load i8*, i8** %p, align 8, !tbaa !1
  %444 = load i32, i32* @deliver.tobufsize, align 4, !tbaa !5
  %conv576 = sext i32 %444 to i64
  %445 = load i8*, i8** %p, align 8, !tbaa !1
  %446 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %sub.ptr.lhs.cast = ptrtoint i8* %445 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %446 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub577 = sub nsw i64 %conv576, %sub.ptr.sub
  %447 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr578 = getelementptr inbounds %struct.address, %struct.address* %447, i32 0, i32 0
  %448 = load i8*, i8** %q_paddr578, align 8, !tbaa !22
  %call579 = call i64 (i8*, i64, i32, ...) @sm_strlcpyn(i8* %443, i64 %sub577, i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.195, i32 0, i32 0), i8* %448)
  %449 = load i8*, i8** %p, align 8, !tbaa !1
  %call580 = call i64 @strlen(i8* %449) #12
  %450 = load i8*, i8** %p, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %450, i64 %call580
  store i8* %add.ptr, i8** %p, align 8, !tbaa !1
  br label %for.inc.581

for.inc.581:                                      ; preds = %for.body.575
  %451 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_tchain582 = getelementptr inbounds %struct.address, %struct.address* %451, i32 0, i32 13
  %452 = load %struct.address*, %struct.address** %q_tchain582, align 8, !tbaa !132
  store %struct.address* %452, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.572

for.end.583:                                      ; preds = %for.cond.572
  %453 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %add.ptr584 = getelementptr inbounds i8, i8* %453, i64 1
  %454 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to585 = getelementptr inbounds %struct.envelope, %struct.envelope* %454, i32 0, i32 3
  store i8* %add.ptr584, i8** %e_to585, align 8, !tbaa !62
  %455 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool586 = icmp ne i32 %455, 0
  br i1 %tobool586, label %if.end.605, label %if.then.587

if.then.587:                                      ; preds = %for.end.583
  br label %while.cond.588

while.cond.588:                                   ; preds = %if.end.603, %if.then.587
  %456 = load i8**, i8*** %mvp, align 8, !tbaa !1
  %incdec.ptr589 = getelementptr inbounds i8*, i8** %456, i32 1
  store i8** %incdec.ptr589, i8*** %mvp, align 8, !tbaa !1
  %457 = load i8*, i8** %incdec.ptr589, align 8, !tbaa !1
  %cmp590 = icmp ne i8* %457, null
  br i1 %cmp590, label %while.body.592, label %while.end.604

while.body.592:                                   ; preds = %while.cond.588
  %458 = load i8**, i8*** %mvp, align 8, !tbaa !1
  %459 = load i8*, i8** %458, align 8, !tbaa !1
  %arraydecay593 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %460 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %459, i8* %arraydecay593, i64 257, %struct.envelope* %460)
  %461 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool594 = getelementptr inbounds %struct.envelope, %struct.envelope* %461, i32 0, i32 52
  %462 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool594, align 8, !tbaa !36
  %arraydecay595 = getelementptr inbounds [257 x i8], [257 x i8]* %buf, i32 0, i32 0
  %call596 = call i8* @sm_rpool_strdup_x(%struct.SM_RPOOL_T* %462, i8* %arraydecay595)
  %463 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr597 = getelementptr inbounds i8*, i8** %463, i32 1
  store i8** %incdec.ptr597, i8*** %pvp, align 8, !tbaa !1
  store i8* %call596, i8** %463, align 8, !tbaa !1
  %464 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %arrayidx598 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 256
  %cmp599 = icmp uge i8** %464, %arrayidx598
  br i1 %cmp599, label %if.then.601, label %if.end.603

if.then.601:                                      ; preds = %while.body.592
  %arrayidx602 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 0
  %465 = load i8*, i8** %arrayidx602, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.196, i32 0, i32 0), i8* %465)
  br label %if.end.603

if.end.603:                                       ; preds = %if.then.601, %while.body.592
  br label %while.cond.588

while.end.604:                                    ; preds = %while.cond.588
  br label %if.end.605

if.end.605:                                       ; preds = %while.end.604, %for.end.583
  %466 = load i8**, i8*** %pvp, align 8, !tbaa !1
  %incdec.ptr606 = getelementptr inbounds i8*, i8** %466, i32 1
  store i8** %incdec.ptr606, i8*** %pvp, align 8, !tbaa !1
  store i8* null, i8** %466, align 8, !tbaa !1
  %467 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %cmp607 = icmp eq %struct.address* %467, null
  br i1 %cmp607, label %land.lhs.true.609, label %if.end.623

land.lhs.true.609:                                ; preds = %if.end.605
  %468 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %469 = load %struct.mailer*, %struct.mailer** @ProgMailer, align 8, !tbaa !1
  %cmp610 = icmp ne %struct.mailer* %468, %469
  br i1 %cmp610, label %land.lhs.true.612, label %if.end.623

land.lhs.true.612:                                ; preds = %land.lhs.true.609
  %470 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %471 = load %struct.mailer*, %struct.mailer** @FileMailer, align 8, !tbaa !1
  %cmp613 = icmp ne %struct.mailer* %470, %471
  br i1 %cmp613, label %land.lhs.true.615, label %if.end.623

land.lhs.true.615:                                ; preds = %land.lhs.true.612
  %472 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from616 = getelementptr inbounds %struct.envelope, %struct.envelope* %472, i32 0, i32 4
  %q_flags617 = getelementptr inbounds %struct.address, %struct.address* %e_from616, i32 0, i32 5
  %473 = load i64, i64* %q_flags617, align 8, !tbaa !133
  %and618 = and i64 %473, 1
  %cmp619 = icmp ne i64 %and618, 0
  br i1 %cmp619, label %if.then.621, label %if.end.623

if.then.621:                                      ; preds = %land.lhs.true.615
  %474 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_from622 = getelementptr inbounds %struct.envelope, %struct.envelope* %474, i32 0, i32 4
  store volatile %struct.address* %e_from622, %struct.address** %ctladdr, align 8, !tbaa !1
  br label %if.end.623

if.end.623:                                       ; preds = %if.then.621, %land.lhs.true.615, %land.lhs.true.612, %land.lhs.true.609, %if.end.605
  %475 = load i32, i32* @ConfigLevel, align 4, !tbaa !5
  %cmp624 = icmp slt i32 %475, 2
  br i1 %cmp624, label %if.then.626, label %if.end.629

if.then.626:                                      ; preds = %if.end.623
  %call627 = call %struct.__res_state* @__res_state() #11
  %options = getelementptr inbounds %struct.__res_state, %struct.__res_state* %call627, i32 0, i32 2
  %476 = load i64, i64* %options, align 8, !tbaa !113
  %and628 = and i64 %476, -641
  store i64 %and628, i64* %options, align 8, !tbaa !113
  br label %if.end.629

if.end.629:                                       ; preds = %if.then.626, %if.end.623
  %477 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv630 = zext i8 %477 to i32
  %cmp631 = icmp sge i32 %conv630, 1
  br i1 %cmp631, label %land.lhs.true.633, label %if.end.638

land.lhs.true.633:                                ; preds = %if.end.629
  %478 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool634 = icmp ne i32 %478, 0
  br i1 %tobool634, label %if.end.638, label %if.then.635

if.then.635:                                      ; preds = %land.lhs.true.633
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.197, i32 0, i32 0))
  %call636 = call %struct.sm_file* @sm_debug_file()
  %arraydecay637 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i32 0
  call void @printav(%struct.sm_file* %call636, i8** %arraydecay637)
  br label %if.end.638

if.end.638:                                       ; preds = %if.then.635, %land.lhs.true.633, %if.end.629
  %call639 = call i32* @__errno_location() #11
  store i32 0, i32* %call639, align 4, !tbaa !5
  %call640 = call i32* @__h_errno_location() #11
  store i32 0, i32* %call640, align 4, !tbaa !5
  store i8* null, i8** @CurHostName, align 8, !tbaa !1
  store volatile i8* null, i8** %curhost, align 8, !tbaa !1
  store i8* null, i8** @SmtpPhase, align 8, !tbaa !1
  store volatile %struct.mailer_con_info* null, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %479 = bitcast [2048 x i8]* %wbuf to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %479) #1
  %arraydecay642 = getelementptr inbounds [2048 x i8], [2048 x i8]* %wbuf, i32 0, i32 0
  %480 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to643 = getelementptr inbounds %struct.envelope, %struct.envelope* %480, i32 0, i32 3
  %481 = load i8*, i8** %e_to643, align 8, !tbaa !62
  %call644 = call i8* @shortenstring(i8* %481, i64 203)
  %482 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name645 = getelementptr inbounds %struct.mailer, %struct.mailer* %482, i32 0, i32 0
  %483 = load i8*, i8** %m_name645, align 8, !tbaa !63
  %call646 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay642, i64 2048, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.198, i32 0, i32 0), i8* %call644, i8* %483)
  %arraydecay647 = getelementptr inbounds [2048 x i8], [2048 x i8]* %wbuf, i32 0, i32 0
  call void @checkfd012(i8* %arraydecay647)
  %484 = bitcast [2048 x i8]* %wbuf to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %484) #1
  %485 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags648 = getelementptr inbounds %struct.envelope, %struct.envelope* %485, i32 0, i32 11
  %486 = load i64, i64* %e_flags648, align 8, !tbaa !7
  %and649 = and i64 %486, 131072
  %cmp650 = icmp ne i64 %and649, 0
  br i1 %cmp650, label %land.lhs.true.652, label %if.end.677

land.lhs.true.652:                                ; preds = %if.end.638
  %487 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags653 = getelementptr inbounds %struct.mailer, %struct.mailer* %487, i32 0, i32 5
  %arrayidx654 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags653, i32 0, i64 1
  %488 = load i32, i32* %arrayidx654, align 4, !tbaa !5
  %and655 = and i32 %488, 8388608
  %tobool656 = icmp ne i32 %and655, 0
  br i1 %tobool656, label %land.lhs.true.657, label %if.end.677

land.lhs.true.657:                                ; preds = %land.lhs.true.652
  %489 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags658 = getelementptr inbounds %struct.envelope, %struct.envelope* %489, i32 0, i32 11
  %490 = load i64, i64* %e_flags658, align 8, !tbaa !7
  %and659 = and i64 %490, 8388608
  %cmp660 = icmp ne i64 %and659, 0
  br i1 %cmp660, label %if.then.675, label %lor.lhs.false.662

lor.lhs.false.662:                                ; preds = %land.lhs.true.657
  %491 = load i32, i32* @MimeMode, align 4, !tbaa !5
  %and663 = and i32 %491, 4
  %cmp664 = icmp ne i32 %and663, 0
  br i1 %cmp664, label %if.end.677, label %lor.lhs.false.666

lor.lhs.false.666:                                ; preds = %lor.lhs.false.662
  %492 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags667 = getelementptr inbounds %struct.envelope, %struct.envelope* %492, i32 0, i32 11
  %493 = load i64, i64* %e_flags667, align 8, !tbaa !7
  %and668 = and i64 %493, 4194304
  %cmp669 = icmp ne i64 %and668, 0
  br i1 %cmp669, label %land.lhs.true.671, label %if.then.675

land.lhs.true.671:                                ; preds = %lor.lhs.false.666
  %494 = load i32, i32* @MimeMode, align 4, !tbaa !5
  %and672 = and i32 %494, 1
  %cmp673 = icmp ne i32 %and672, 0
  br i1 %cmp673, label %if.end.677, label %if.then.675

if.then.675:                                      ; preds = %land.lhs.true.671, %lor.lhs.false.666, %land.lhs.true.657
  %495 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status = getelementptr inbounds %struct.envelope, %struct.envelope* %495, i32 0, i32 41
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.116, i32 0, i32 0), i8** %e_status, align 8, !tbaa !68
  %496 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status676 = getelementptr inbounds %struct.envelope, %struct.envelope* %496, i32 0, i32 41
  %497 = load i8*, i8** %e_status676, align 8, !tbaa !68
  call void (i8*, i8*, ...) @usrerrenh(i8* %497, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.117, i32 0, i32 0))
  store i32 65, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.677:                                       ; preds = %land.lhs.true.671, %lor.lhs.false.662, %land.lhs.true.652, %if.end.638
  %498 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 62), align 1, !tbaa !15
  %conv678 = zext i8 %498 to i32
  %cmp679 = icmp sge i32 %conv678, 8
  br i1 %cmp679, label %land.lhs.true.681, label %if.end.684

land.lhs.true.681:                                ; preds = %if.end.677
  %499 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool682 = icmp ne i32 %499, 0
  br i1 %tobool682, label %if.end.684, label %if.then.683

if.then.683:                                      ; preds = %land.lhs.true.681
  call void @checkfds(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.199, i32 0, i32 0))
  br label %if.end.684

if.end.684:                                       ; preds = %if.then.683, %land.lhs.true.681, %if.end.677
  %500 = bitcast i64* %__s1_len686 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %500) #1
  %501 = bitcast i64* %__s2_len688 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %501) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i64 1) to i64), i64 ptrtoint ([6 x i8]* @.str.200 to i64)), i64 1), label %land.lhs.true.690, label %cond.false.737

land.lhs.true.690:                                ; preds = %if.end.684
  store i64 5, i64* %__s2_len688, align 8, !tbaa !32
  %502 = load i64, i64* %__s2_len688, align 8, !tbaa !32
  %cmp691 = icmp ult i64 %502, 4
  br i1 %cmp691, label %cond.true.693, label %cond.false.737

cond.true.693:                                    ; preds = %land.lhs.true.690
  %503 = bitcast i8** %__s1695 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %503) #1
  %504 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer696 = getelementptr inbounds %struct.mailer, %struct.mailer* %504, i32 0, i32 1
  %505 = load i8*, i8** %m_mailer696, align 8, !tbaa !33
  store i8* %505, i8** %__s1695, align 8, !tbaa !1
  %506 = bitcast i32* %__result698 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %506) #1
  %507 = load i8*, i8** %__s1695, align 8, !tbaa !1
  %arrayidx699 = getelementptr inbounds i8, i8* %507, i64 0
  %508 = load i8, i8* %arrayidx699, align 1, !tbaa !15
  %conv700 = zext i8 %508 to i32
  %509 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i32 0), align 1, !tbaa !15
  %conv701 = zext i8 %509 to i32
  %sub702 = sub nsw i32 %conv700, %conv701
  store i32 %sub702, i32* %__result698, align 4, !tbaa !5
  %510 = load i64, i64* %__s2_len688, align 8, !tbaa !32
  %cmp703 = icmp ugt i64 %510, 0
  br i1 %cmp703, label %land.lhs.true.705, label %if.end.735

land.lhs.true.705:                                ; preds = %cond.true.693
  %511 = load i32, i32* %__result698, align 4, !tbaa !5
  %cmp706 = icmp eq i32 %511, 0
  br i1 %cmp706, label %if.then.708, label %if.end.735

if.then.708:                                      ; preds = %land.lhs.true.705
  %512 = load i8*, i8** %__s1695, align 8, !tbaa !1
  %arrayidx709 = getelementptr inbounds i8, i8* %512, i64 1
  %513 = load i8, i8* %arrayidx709, align 1, !tbaa !15
  %conv710 = zext i8 %513 to i32
  %514 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i64 1), align 1, !tbaa !15
  %conv711 = zext i8 %514 to i32
  %sub712 = sub nsw i32 %conv710, %conv711
  store i32 %sub712, i32* %__result698, align 4, !tbaa !5
  %515 = load i64, i64* %__s2_len688, align 8, !tbaa !32
  %cmp713 = icmp ugt i64 %515, 1
  br i1 %cmp713, label %land.lhs.true.715, label %if.end.734

land.lhs.true.715:                                ; preds = %if.then.708
  %516 = load i32, i32* %__result698, align 4, !tbaa !5
  %cmp716 = icmp eq i32 %516, 0
  br i1 %cmp716, label %if.then.718, label %if.end.734

if.then.718:                                      ; preds = %land.lhs.true.715
  %517 = load i8*, i8** %__s1695, align 8, !tbaa !1
  %arrayidx719 = getelementptr inbounds i8, i8* %517, i64 2
  %518 = load i8, i8* %arrayidx719, align 1, !tbaa !15
  %conv720 = zext i8 %518 to i32
  %519 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i64 2), align 1, !tbaa !15
  %conv721 = zext i8 %519 to i32
  %sub722 = sub nsw i32 %conv720, %conv721
  store i32 %sub722, i32* %__result698, align 4, !tbaa !5
  %520 = load i64, i64* %__s2_len688, align 8, !tbaa !32
  %cmp723 = icmp ugt i64 %520, 2
  br i1 %cmp723, label %land.lhs.true.725, label %if.end.733

land.lhs.true.725:                                ; preds = %if.then.718
  %521 = load i32, i32* %__result698, align 4, !tbaa !5
  %cmp726 = icmp eq i32 %521, 0
  br i1 %cmp726, label %if.then.728, label %if.end.733

if.then.728:                                      ; preds = %land.lhs.true.725
  %522 = load i8*, i8** %__s1695, align 8, !tbaa !1
  %arrayidx729 = getelementptr inbounds i8, i8* %522, i64 3
  %523 = load i8, i8* %arrayidx729, align 1, !tbaa !15
  %conv730 = zext i8 %523 to i32
  %524 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i64 3), align 1, !tbaa !15
  %conv731 = zext i8 %524 to i32
  %sub732 = sub nsw i32 %conv730, %conv731
  store i32 %sub732, i32* %__result698, align 4, !tbaa !5
  br label %if.end.733

if.end.733:                                       ; preds = %if.then.728, %land.lhs.true.725, %if.then.718
  br label %if.end.734

if.end.734:                                       ; preds = %if.end.733, %land.lhs.true.715, %if.then.708
  br label %if.end.735

if.end.735:                                       ; preds = %if.end.734, %land.lhs.true.705, %cond.true.693
  %525 = load i32, i32* %__result698, align 4, !tbaa !5
  store i32 %525, i32* %tmp736, !tbaa !5
  %526 = bitcast i32* %__result698 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %526) #1
  %527 = bitcast i8** %__s1695 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %527) #1
  %528 = load i32, i32* %tmp736, !tbaa !5
  br label %cond.end.740

cond.false.737:                                   ; preds = %land.lhs.true.690, %if.end.684
  %529 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer738 = getelementptr inbounds %struct.mailer, %struct.mailer* %529, i32 0, i32 1
  %530 = load i8*, i8** %m_mailer738, align 8, !tbaa !33
  %call739 = call i32 @strcmp(i8* %530, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i32 0)) #1
  br label %cond.end.740

cond.end.740:                                     ; preds = %cond.false.737, %if.end.735
  %cond741 = phi i32 [ %528, %if.end.735 ], [ %call739, %cond.false.737 ]
  store i32 %cond741, i32* %tmp689, !tbaa !5
  %531 = bitcast i64* %__s2_len688 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %531) #1
  %532 = bitcast i64* %__s1_len686 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %532) #1
  %533 = load i32, i32* %tmp689, !tbaa !5
  %cmp742 = icmp eq i32 %533, 0
  br i1 %cmp742, label %if.then.744, label %if.else.776

if.then.744:                                      ; preds = %cond.end.740
  %534 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool745 = icmp ne i32 %534, 0
  br i1 %tobool745, label %if.then.746, label %if.else.764

if.then.746:                                      ; preds = %if.then.744
  %call747 = call %struct.mailer_con_info** @mci_scan(%struct.mailer_con_info* null)
  %535 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name748 = getelementptr inbounds %struct.mailer, %struct.mailer* %535, i32 0, i32 0
  %536 = load i8*, i8** %m_name748, align 8, !tbaa !63
  %537 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %call749 = call %struct.mailer_con_info* @mci_get(i8* %536, %struct.mailer* %537)
  store volatile %struct.mailer_con_info* %call749, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %538 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %538, i32 0, i32 12
  %539 = load i8*, i8** %mci_host, align 8, !tbaa !81
  %cmp750 = icmp eq i8* %539, null
  br i1 %cmp750, label %if.then.752, label %if.end.755

if.then.752:                                      ; preds = %if.then.746
  %540 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name753 = getelementptr inbounds %struct.mailer, %struct.mailer* %540, i32 0, i32 0
  %541 = load i8*, i8** %m_name753, align 8, !tbaa !63
  %542 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host754 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %542, i32 0, i32 12
  store i8* %541, i8** %mci_host754, align 8, !tbaa !81
  br label %if.end.755

if.end.755:                                       ; preds = %if.then.752, %if.then.746
  %543 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host756 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %543, i32 0, i32 12
  %544 = load i8*, i8** %mci_host756, align 8, !tbaa !81
  store i8* %544, i8** @CurHostName, align 8, !tbaa !1
  %545 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %545, i32 0, i32 4
  %546 = load i16, i16* %mci_state, align 2, !tbaa !75
  %conv757 = sext i16 %546 to i32
  %cmp758 = icmp ne i32 %conv757, 0
  br i1 %cmp758, label %if.then.760, label %if.end.763

if.then.760:                                      ; preds = %if.end.755
  %547 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name761 = getelementptr inbounds %struct.mailer, %struct.mailer* %547, i32 0, i32 0
  %548 = load i8*, i8** %m_name761, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.201, i32 0, i32 0), i8* %548)
  %549 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_deliveries = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %549, i32 0, i32 5
  %550 = load i32, i32* %mci_deliveries, align 4, !tbaa !134
  %inc762 = add nsw i32 %550, 1
  store i32 %inc762, i32* %mci_deliveries, align 4, !tbaa !134
  br label %do_transfer

if.end.763:                                       ; preds = %if.end.755
  br label %if.end.767

if.else.764:                                      ; preds = %if.then.744
  %551 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool765 = getelementptr inbounds %struct.envelope, %struct.envelope* %551, i32 0, i32 52
  %552 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool765, align 8, !tbaa !36
  %call766 = call %struct.mailer_con_info* @mci_new(%struct.SM_RPOOL_T* %552)
  store volatile %struct.mailer_con_info* %call766, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  br label %if.end.767

if.end.767:                                       ; preds = %if.else.764, %if.end.763
  %553 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_in = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %553, i32 0, i32 7
  store %struct.sm_file* getelementptr inbounds ([0 x %struct.sm_file], [0 x %struct.sm_file]* @SmIoF, i32 0, i64 0), %struct.sm_file** %mci_in, align 8, !tbaa !74
  %554 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_out = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %554, i32 0, i32 8
  store %struct.sm_file* getelementptr inbounds ([0 x %struct.sm_file], [0 x %struct.sm_file]* @SmIoF, i32 0, i64 1), %struct.sm_file** %mci_out, align 8, !tbaa !73
  %555 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %556 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_mailer = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %556, i32 0, i32 11
  store %struct.mailer* %555, %struct.mailer** %mci_mailer, align 8, !tbaa !79
  %557 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name768 = getelementptr inbounds %struct.mailer, %struct.mailer* %557, i32 0, i32 0
  %558 = load i8*, i8** %m_name768, align 8, !tbaa !63
  %559 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host769 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %559, i32 0, i32 12
  store i8* %558, i8** %mci_host769, align 8, !tbaa !81
  %560 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool770 = icmp ne i32 %560, 0
  br i1 %tobool770, label %if.then.771, label %if.else.773

if.then.771:                                      ; preds = %if.end.767
  %561 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state772 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %561, i32 0, i32 4
  store i16 1, i16* %mci_state772, align 2, !tbaa !75
  %562 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_cache(%struct.mailer_con_info* %562)
  br label %if.end.775

if.else.773:                                      ; preds = %if.end.767
  %563 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state774 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %563, i32 0, i32 4
  store i16 2, i16* %mci_state774, align 2, !tbaa !75
  br label %if.end.775

if.end.775:                                       ; preds = %if.else.773, %if.then.771
  br label %if.end.1896

if.else.776:                                      ; preds = %cond.end.740
  %564 = bitcast i64* %__s1_len778 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %564) #1
  %565 = bitcast i64* %__s2_len780 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %565) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1) to i64), i64 ptrtoint ([6 x i8]* @.str.21 to i64)), i64 1), label %land.lhs.true.782, label %cond.false.829

land.lhs.true.782:                                ; preds = %if.else.776
  store i64 5, i64* %__s2_len780, align 8, !tbaa !32
  %566 = load i64, i64* %__s2_len780, align 8, !tbaa !32
  %cmp783 = icmp ult i64 %566, 4
  br i1 %cmp783, label %cond.true.785, label %cond.false.829

cond.true.785:                                    ; preds = %land.lhs.true.782
  %567 = bitcast i8** %__s1787 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %567) #1
  %568 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer788 = getelementptr inbounds %struct.mailer, %struct.mailer* %568, i32 0, i32 1
  %569 = load i8*, i8** %m_mailer788, align 8, !tbaa !33
  store i8* %569, i8** %__s1787, align 8, !tbaa !1
  %570 = bitcast i32* %__result790 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %570) #1
  %571 = load i8*, i8** %__s1787, align 8, !tbaa !1
  %arrayidx791 = getelementptr inbounds i8, i8* %571, i64 0
  %572 = load i8, i8* %arrayidx791, align 1, !tbaa !15
  %conv792 = zext i8 %572 to i32
  %573 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), align 1, !tbaa !15
  %conv793 = zext i8 %573 to i32
  %sub794 = sub nsw i32 %conv792, %conv793
  store i32 %sub794, i32* %__result790, align 4, !tbaa !5
  %574 = load i64, i64* %__s2_len780, align 8, !tbaa !32
  %cmp795 = icmp ugt i64 %574, 0
  br i1 %cmp795, label %land.lhs.true.797, label %if.end.827

land.lhs.true.797:                                ; preds = %cond.true.785
  %575 = load i32, i32* %__result790, align 4, !tbaa !5
  %cmp798 = icmp eq i32 %575, 0
  br i1 %cmp798, label %if.then.800, label %if.end.827

if.then.800:                                      ; preds = %land.lhs.true.797
  %576 = load i8*, i8** %__s1787, align 8, !tbaa !1
  %arrayidx801 = getelementptr inbounds i8, i8* %576, i64 1
  %577 = load i8, i8* %arrayidx801, align 1, !tbaa !15
  %conv802 = zext i8 %577 to i32
  %578 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 1), align 1, !tbaa !15
  %conv803 = zext i8 %578 to i32
  %sub804 = sub nsw i32 %conv802, %conv803
  store i32 %sub804, i32* %__result790, align 4, !tbaa !5
  %579 = load i64, i64* %__s2_len780, align 8, !tbaa !32
  %cmp805 = icmp ugt i64 %579, 1
  br i1 %cmp805, label %land.lhs.true.807, label %if.end.826

land.lhs.true.807:                                ; preds = %if.then.800
  %580 = load i32, i32* %__result790, align 4, !tbaa !5
  %cmp808 = icmp eq i32 %580, 0
  br i1 %cmp808, label %if.then.810, label %if.end.826

if.then.810:                                      ; preds = %land.lhs.true.807
  %581 = load i8*, i8** %__s1787, align 8, !tbaa !1
  %arrayidx811 = getelementptr inbounds i8, i8* %581, i64 2
  %582 = load i8, i8* %arrayidx811, align 1, !tbaa !15
  %conv812 = zext i8 %582 to i32
  %583 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 2), align 1, !tbaa !15
  %conv813 = zext i8 %583 to i32
  %sub814 = sub nsw i32 %conv812, %conv813
  store i32 %sub814, i32* %__result790, align 4, !tbaa !5
  %584 = load i64, i64* %__s2_len780, align 8, !tbaa !32
  %cmp815 = icmp ugt i64 %584, 2
  br i1 %cmp815, label %land.lhs.true.817, label %if.end.825

land.lhs.true.817:                                ; preds = %if.then.810
  %585 = load i32, i32* %__result790, align 4, !tbaa !5
  %cmp818 = icmp eq i32 %585, 0
  br i1 %cmp818, label %if.then.820, label %if.end.825

if.then.820:                                      ; preds = %land.lhs.true.817
  %586 = load i8*, i8** %__s1787, align 8, !tbaa !1
  %arrayidx821 = getelementptr inbounds i8, i8* %586, i64 3
  %587 = load i8, i8* %arrayidx821, align 1, !tbaa !15
  %conv822 = zext i8 %587 to i32
  %588 = load i8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i64 3), align 1, !tbaa !15
  %conv823 = zext i8 %588 to i32
  %sub824 = sub nsw i32 %conv822, %conv823
  store i32 %sub824, i32* %__result790, align 4, !tbaa !5
  br label %if.end.825

if.end.825:                                       ; preds = %if.then.820, %land.lhs.true.817, %if.then.810
  br label %if.end.826

if.end.826:                                       ; preds = %if.end.825, %land.lhs.true.807, %if.then.800
  br label %if.end.827

if.end.827:                                       ; preds = %if.end.826, %land.lhs.true.797, %cond.true.785
  %589 = load i32, i32* %__result790, align 4, !tbaa !5
  store i32 %589, i32* %tmp828, !tbaa !5
  %590 = bitcast i32* %__result790 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %590) #1
  %591 = bitcast i8** %__s1787 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %591) #1
  %592 = load i32, i32* %tmp828, !tbaa !5
  br label %cond.end.832

cond.false.829:                                   ; preds = %land.lhs.true.782, %if.else.776
  %593 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer830 = getelementptr inbounds %struct.mailer, %struct.mailer* %593, i32 0, i32 1
  %594 = load i8*, i8** %m_mailer830, align 8, !tbaa !33
  %call831 = call i32 @strcmp(i8* %594, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0)) #1
  br label %cond.end.832

cond.end.832:                                     ; preds = %cond.false.829, %if.end.827
  %cond833 = phi i32 [ %592, %if.end.827 ], [ %call831, %cond.false.829 ]
  store i32 %cond833, i32* %tmp781, !tbaa !5
  %595 = bitcast i64* %__s2_len780 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %595) #1
  %596 = bitcast i64* %__s1_len778 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %596) #1
  %597 = load i32, i32* %tmp781, !tbaa !5
  %cmp834 = icmp eq i32 %597, 0
  br i1 %cmp834, label %if.then.836, label %if.else.1227

if.then.836:                                      ; preds = %cond.end.832
  %598 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %598) #1
  %arrayidx838 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 0
  %599 = load i8*, i8** %arrayidx838, align 8, !tbaa !1
  %cmp839 = icmp eq i8* %599, null
  br i1 %cmp839, label %if.then.851, label %lor.lhs.false.841

lor.lhs.false.841:                                ; preds = %if.then.836
  %arrayidx842 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 1
  %600 = load i8*, i8** %arrayidx842, align 8, !tbaa !1
  %cmp843 = icmp eq i8* %600, null
  br i1 %cmp843, label %if.then.851, label %lor.lhs.false.845

lor.lhs.false.845:                                ; preds = %lor.lhs.false.841
  %arrayidx846 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 1
  %601 = load i8*, i8** %arrayidx846, align 8, !tbaa !1
  %arrayidx847 = getelementptr inbounds i8, i8* %601, i64 0
  %602 = load i8, i8* %arrayidx847, align 1, !tbaa !15
  %conv848 = sext i8 %602 to i32
  %cmp849 = icmp eq i32 %conv848, 0
  br i1 %cmp849, label %if.then.851, label %if.end.853

if.then.851:                                      ; preds = %lor.lhs.false.845, %lor.lhs.false.841, %if.then.836
  %603 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer852 = getelementptr inbounds %struct.mailer, %struct.mailer* %603, i32 0, i32 1
  %604 = load i8*, i8** %m_mailer852, align 8, !tbaa !33
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.202, i32 0, i32 0), i8* %604)
  store i32 78, i32* %rcode, align 4, !tbaa !5
  store i32 22, i32* %cleanup.dest.slot
  br label %cleanup.1224

if.end.853:                                       ; preds = %lor.lhs.false.845
  %605 = bitcast i64* %__s1_len855 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %605) #1
  %606 = bitcast i64* %__s2_len857 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %606) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 1) to i64), i64 ptrtoint ([5 x i8]* @.str.147 to i64)), i64 1), label %land.lhs.true.859, label %cond.false.906

land.lhs.true.859:                                ; preds = %if.end.853
  store i64 4, i64* %__s2_len857, align 8, !tbaa !32
  %607 = load i64, i64* %__s2_len857, align 8, !tbaa !32
  %cmp860 = icmp ult i64 %607, 4
  br i1 %cmp860, label %cond.true.862, label %cond.false.906

cond.true.862:                                    ; preds = %land.lhs.true.859
  %608 = bitcast i8** %__s1864 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %608) #1
  %arrayidx865 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 0
  %609 = load i8*, i8** %arrayidx865, align 8, !tbaa !1
  store i8* %609, i8** %__s1864, align 8, !tbaa !1
  %610 = bitcast i32* %__result867 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %610) #1
  %611 = load i8*, i8** %__s1864, align 8, !tbaa !1
  %arrayidx868 = getelementptr inbounds i8, i8* %611, i64 0
  %612 = load i8, i8* %arrayidx868, align 1, !tbaa !15
  %conv869 = zext i8 %612 to i32
  %613 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0), align 1, !tbaa !15
  %conv870 = zext i8 %613 to i32
  %sub871 = sub nsw i32 %conv869, %conv870
  store i32 %sub871, i32* %__result867, align 4, !tbaa !5
  %614 = load i64, i64* %__s2_len857, align 8, !tbaa !32
  %cmp872 = icmp ugt i64 %614, 0
  br i1 %cmp872, label %land.lhs.true.874, label %if.end.904

land.lhs.true.874:                                ; preds = %cond.true.862
  %615 = load i32, i32* %__result867, align 4, !tbaa !5
  %cmp875 = icmp eq i32 %615, 0
  br i1 %cmp875, label %if.then.877, label %if.end.904

if.then.877:                                      ; preds = %land.lhs.true.874
  %616 = load i8*, i8** %__s1864, align 8, !tbaa !1
  %arrayidx878 = getelementptr inbounds i8, i8* %616, i64 1
  %617 = load i8, i8* %arrayidx878, align 1, !tbaa !15
  %conv879 = zext i8 %617 to i32
  %618 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 1), align 1, !tbaa !15
  %conv880 = zext i8 %618 to i32
  %sub881 = sub nsw i32 %conv879, %conv880
  store i32 %sub881, i32* %__result867, align 4, !tbaa !5
  %619 = load i64, i64* %__s2_len857, align 8, !tbaa !32
  %cmp882 = icmp ugt i64 %619, 1
  br i1 %cmp882, label %land.lhs.true.884, label %if.end.903

land.lhs.true.884:                                ; preds = %if.then.877
  %620 = load i32, i32* %__result867, align 4, !tbaa !5
  %cmp885 = icmp eq i32 %620, 0
  br i1 %cmp885, label %if.then.887, label %if.end.903

if.then.887:                                      ; preds = %land.lhs.true.884
  %621 = load i8*, i8** %__s1864, align 8, !tbaa !1
  %arrayidx888 = getelementptr inbounds i8, i8* %621, i64 2
  %622 = load i8, i8* %arrayidx888, align 1, !tbaa !15
  %conv889 = zext i8 %622 to i32
  %623 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 2), align 1, !tbaa !15
  %conv890 = zext i8 %623 to i32
  %sub891 = sub nsw i32 %conv889, %conv890
  store i32 %sub891, i32* %__result867, align 4, !tbaa !5
  %624 = load i64, i64* %__s2_len857, align 8, !tbaa !32
  %cmp892 = icmp ugt i64 %624, 2
  br i1 %cmp892, label %land.lhs.true.894, label %if.end.902

land.lhs.true.894:                                ; preds = %if.then.887
  %625 = load i32, i32* %__result867, align 4, !tbaa !5
  %cmp895 = icmp eq i32 %625, 0
  br i1 %cmp895, label %if.then.897, label %if.end.902

if.then.897:                                      ; preds = %land.lhs.true.894
  %626 = load i8*, i8** %__s1864, align 8, !tbaa !1
  %arrayidx898 = getelementptr inbounds i8, i8* %626, i64 3
  %627 = load i8, i8* %arrayidx898, align 1, !tbaa !15
  %conv899 = zext i8 %627 to i32
  %628 = load i8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i64 3), align 1, !tbaa !15
  %conv900 = zext i8 %628 to i32
  %sub901 = sub nsw i32 %conv899, %conv900
  store i32 %sub901, i32* %__result867, align 4, !tbaa !5
  br label %if.end.902

if.end.902:                                       ; preds = %if.then.897, %land.lhs.true.894, %if.then.887
  br label %if.end.903

if.end.903:                                       ; preds = %if.end.902, %land.lhs.true.884, %if.then.877
  br label %if.end.904

if.end.904:                                       ; preds = %if.end.903, %land.lhs.true.874, %cond.true.862
  %629 = load i32, i32* %__result867, align 4, !tbaa !5
  store i32 %629, i32* %tmp905, !tbaa !5
  %630 = bitcast i32* %__result867 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %630) #1
  %631 = bitcast i8** %__s1864 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %631) #1
  %632 = load i32, i32* %tmp905, !tbaa !5
  br label %cond.end.909

cond.false.906:                                   ; preds = %land.lhs.true.859, %if.end.853
  %arrayidx907 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 0
  %633 = load i8*, i8** %arrayidx907, align 8, !tbaa !1
  %call908 = call i32 @strcmp(i8* %633, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0)) #1
  br label %cond.end.909

cond.end.909:                                     ; preds = %cond.false.906, %if.end.904
  %cond910 = phi i32 [ %632, %if.end.904 ], [ %call908, %cond.false.906 ]
  store i32 %cond910, i32* %tmp858, !tbaa !5
  %634 = bitcast i64* %__s2_len857 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %634) #1
  %635 = bitcast i64* %__s1_len855 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %635) #1
  %636 = load i32, i32* %tmp858, !tbaa !5
  %cmp911 = icmp eq i32 %636, 0
  br i1 %cmp911, label %if.then.913, label %if.else.915

if.then.913:                                      ; preds = %cond.end.909
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8** @CurHostName, align 8, !tbaa !1
  store volatile i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8** %curhost, align 8, !tbaa !1
  %arrayidx914 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 1
  %637 = load i8*, i8** %arrayidx914, align 8, !tbaa !1
  store i8* %637, i8** %mux_path, align 8, !tbaa !1
  br label %if.end.919

if.else.915:                                      ; preds = %cond.end.909
  %arrayidx916 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 1
  %638 = load i8*, i8** %arrayidx916, align 8, !tbaa !1
  store i8* %638, i8** @CurHostName, align 8, !tbaa !1
  %639 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %arrayidx917 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 1
  %640 = load i8*, i8** %arrayidx917, align 8, !tbaa !1
  %call918 = call i8* @hostsignature(%struct.mailer* %639, i8* %640)
  store volatile i8* %call918, i8** %curhost, align 8, !tbaa !1
  br label %if.end.919

if.end.919:                                       ; preds = %if.else.915, %if.then.913
  %641 = load volatile i8*, i8** %curhost, align 8, !tbaa !1
  %cmp920 = icmp eq i8* %641, null
  br i1 %cmp920, label %if.then.927, label %lor.lhs.false.922

lor.lhs.false.922:                                ; preds = %if.end.919
  %642 = load volatile i8*, i8** %curhost, align 8, !tbaa !1
  %arrayidx923 = getelementptr inbounds i8, i8* %642, i64 0
  %643 = load i8, i8* %arrayidx923, align 1, !tbaa !15
  %conv924 = sext i8 %643 to i32
  %cmp925 = icmp eq i32 %conv924, 0
  br i1 %cmp925, label %if.then.927, label %if.end.929

if.then.927:                                      ; preds = %lor.lhs.false.922, %if.end.919
  %arrayidx928 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 1
  %644 = load i8*, i8** %arrayidx928, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.203, i32 0, i32 0), i8* %644)
  store i32 78, i32* %rcode, align 4, !tbaa !5
  store i32 22, i32* %cleanup.dest.slot
  br label %cleanup.1224

if.end.929:                                       ; preds = %lor.lhs.false.922
  %645 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool930 = icmp ne i32 %645, 0
  br i1 %tobool930, label %if.end.932, label %if.then.931

if.then.931:                                      ; preds = %if.end.929
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.204, i32 0, i32 0))
  store i32 78, i32* %rcode, align 4, !tbaa !5
  store i32 22, i32* %cleanup.dest.slot
  br label %cleanup.1224

if.end.932:                                       ; preds = %if.end.929
  %arrayidx933 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 2
  %646 = load i8*, i8** %arrayidx933, align 8, !tbaa !1
  %cmp934 = icmp ne i8* %646, null
  br i1 %cmp934, label %land.lhs.true.936, label %if.end.961

land.lhs.true.936:                                ; preds = %if.end.932
  %647 = load i8*, i8** %mux_path, align 8, !tbaa !1
  %cmp937 = icmp eq i8* %647, null
  br i1 %cmp937, label %if.then.939, label %if.end.961

if.then.939:                                      ; preds = %land.lhs.true.936
  %648 = bitcast i16* %__v to i8*
  call void @llvm.lifetime.start(i64 2, i8* %648) #1
  %649 = bitcast i16* %__x to i8*
  call void @llvm.lifetime.start(i64 2, i8* %649) #1
  %arrayidx942 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 2
  %650 = load i8*, i8** %arrayidx942, align 8, !tbaa !1
  %call943 = call i32 @atoi(i8* %650) #12
  %conv944 = trunc i32 %call943 to i16
  store i16 %conv944, i16* %__x, align 2, !tbaa !40
  %651 = load i16, i16* %__x, align 2, !tbaa !40
  %652 = call i16 asm "rorw $$8, ${0:w}", "=r,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i16 %651) #11, !srcloc !135
  store i16 %652, i16* %__v, align 2, !tbaa !40
  %653 = load i16, i16* %__v, align 2, !tbaa !40
  store i16 %653, i16* %tmp945, !tbaa !40
  %654 = bitcast i16* %__x to i8*
  call void @llvm.lifetime.end(i64 2, i8* %654) #1
  %655 = bitcast i16* %__v to i8*
  call void @llvm.lifetime.end(i64 2, i8* %655) #1
  %656 = load i16, i16* %tmp945, !tbaa !40
  store i16 %656, i16* %port, align 2, !tbaa !40
  %657 = load i16, i16* %port, align 2, !tbaa !40
  %conv946 = zext i16 %657 to i32
  %cmp947 = icmp eq i32 %conv946, 0
  br i1 %cmp947, label %if.then.949, label %if.end.960

if.then.949:                                      ; preds = %if.then.939
  %658 = bitcast %struct.servent** %sp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %658) #1
  %arrayidx951 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 2
  %659 = load i8*, i8** %arrayidx951, align 8, !tbaa !1
  %call952 = call %struct.servent* @getservbyname(i8* %659, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.205, i32 0, i32 0))
  store %struct.servent* %call952, %struct.servent** %sp, align 8, !tbaa !1
  %660 = load %struct.servent*, %struct.servent** %sp, align 8, !tbaa !1
  %cmp953 = icmp eq %struct.servent* %660, null
  br i1 %cmp953, label %if.then.955, label %if.else.957

if.then.955:                                      ; preds = %if.then.949
  %arrayidx956 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i64 2
  %661 = load i8*, i8** %arrayidx956, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.206, i32 0, i32 0), i8* %661)
  br label %if.end.959

if.else.957:                                      ; preds = %if.then.949
  %662 = load %struct.servent*, %struct.servent** %sp, align 8, !tbaa !1
  %s_port = getelementptr inbounds %struct.servent, %struct.servent* %662, i32 0, i32 2
  %663 = load i32, i32* %s_port, align 4, !tbaa !136
  %conv958 = trunc i32 %663 to i16
  store i16 %conv958, i16* %port, align 2, !tbaa !40
  br label %if.end.959

if.end.959:                                       ; preds = %if.else.957, %if.then.955
  %664 = bitcast %struct.servent** %sp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %664) #1
  br label %if.end.960

if.end.960:                                       ; preds = %if.end.959, %if.then.939
  br label %if.end.961

if.end.961:                                       ; preds = %if.end.960, %land.lhs.true.936, %if.end.932
  %665 = load volatile i8*, i8** %curhost, align 8, !tbaa !1
  %arraydecay962 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i32 0
  %666 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %call963 = call i32 @parse_hostsignature(i8* %665, i8** %arraydecay962, %struct.mailer* %666)
  store i32 %call963, i32* %nummxhosts, align 4, !tbaa !5
  %667 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @TimeOuts, i32 0, i32 9), align 8, !tbaa !138
  %cmp964 = icmp sgt i64 %667, 0
  br i1 %cmp964, label %if.then.966, label %if.end.969

if.then.966:                                      ; preds = %if.end.961
  %call967 = call i64 @curtime()
  %668 = load i64, i64* getelementptr inbounds (%struct.anon, %struct.anon* @TimeOuts, i32 0, i32 9), align 8, !tbaa !138
  %add968 = add nsw i64 %call967, %668
  store i64 %add968, i64* %enough, align 8, !tbaa !32
  br label %if.end.969

if.end.969:                                       ; preds = %if.then.966, %if.end.961
  br label %tryhost

tryhost:                                          ; preds = %if.then.2472, %if.then.2208, %if.then.2058, %if.end.969
  br label %while.cond.970

while.cond.970:                                   ; preds = %cleanup.cont, %cleanup, %tryhost
  %669 = load i32, i32* %hostnum, align 4, !tbaa !5
  %670 = load i32, i32* %nummxhosts, align 4, !tbaa !5
  %cmp971 = icmp slt i32 %669, %670
  br i1 %cmp971, label %while.body.973, label %while.end.1219

while.body.973:                                   ; preds = %while.cond.970
  call void @llvm.lifetime.start(i64 1, i8* %sep) #1
  store i8 58, i8* %sep, align 1, !tbaa !15
  %671 = bitcast i8** %endp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %671) #1
  %672 = bitcast i32* %tried_fallbacksmarthost to i8*
  call void @llvm.lifetime.start(i64 4, i8* %672) #1
  store i32 0, i32* %tried_fallbacksmarthost, align 4, !tbaa !5
  call void @llvm.lifetime.start(i64 1, i8* %__a0) #1
  call void @llvm.lifetime.start(i64 1, i8* %__a1) #1
  call void @llvm.lifetime.start(i64 1, i8* %__a2) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 1) to i64), i64 ptrtoint ([3 x i8]* @.str.149 to i64)), i64 1), label %cond.true.981, label %cond.false.1029

cond.true.981:                                    ; preds = %while.body.973
  %673 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), align 1, !tbaa !15
  store i8 %673, i8* %__a0, align 1, !tbaa !15
  %674 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv982 = sext i8 %674 to i32
  %cmp983 = icmp eq i32 %conv982, 0
  br i1 %cmp983, label %cond.true.985, label %cond.false.987

cond.true.985:                                    ; preds = %cond.true.981
  %675 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom = sext i32 %675 to i64
  %arrayidx986 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom
  %676 = load i8*, i8** %arrayidx986, align 8, !tbaa !1
  br label %cond.end.1027

cond.false.987:                                   ; preds = %cond.true.981
  %677 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 1), align 1, !tbaa !15
  store i8 %677, i8* %__a1, align 1, !tbaa !15
  %678 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv988 = sext i8 %678 to i32
  %cmp989 = icmp eq i32 %conv988, 0
  br i1 %cmp989, label %cond.true.991, label %cond.false.996

cond.true.991:                                    ; preds = %cond.false.987
  %679 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom992 = sext i32 %679 to i64
  %arrayidx993 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom992
  %680 = load i8*, i8** %arrayidx993, align 8, !tbaa !1
  %681 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv994 = sext i8 %681 to i32
  %call995 = call i8* @strchr(i8* %680, i32 %conv994) #1
  br label %cond.end.1025

cond.false.996:                                   ; preds = %cond.false.987
  %682 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 2), align 1, !tbaa !15
  store i8 %682, i8* %__a2, align 1, !tbaa !15
  %683 = load i8, i8* %__a2, align 1, !tbaa !15
  %conv997 = sext i8 %683 to i32
  %cmp998 = icmp eq i32 %conv997, 0
  br i1 %cmp998, label %cond.true.1000, label %cond.false.1006

cond.true.1000:                                   ; preds = %cond.false.996
  %684 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom1001 = sext i32 %684 to i64
  %arrayidx1002 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom1001
  %685 = load i8*, i8** %arrayidx1002, align 8, !tbaa !1
  %686 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv1003 = sext i8 %686 to i32
  %687 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv1004 = sext i8 %687 to i32
  %call1005 = call i8* @__strpbrk_c2(i8* %685, i32 %conv1003, i32 %conv1004)
  br label %cond.end.1023

cond.false.1006:                                  ; preds = %cond.false.996
  %688 = load i8, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), i64 3), align 1, !tbaa !15
  %conv1007 = sext i8 %688 to i32
  %cmp1008 = icmp eq i32 %conv1007, 0
  br i1 %cmp1008, label %cond.true.1010, label %cond.false.1017

cond.true.1010:                                   ; preds = %cond.false.1006
  %689 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom1011 = sext i32 %689 to i64
  %arrayidx1012 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom1011
  %690 = load i8*, i8** %arrayidx1012, align 8, !tbaa !1
  %691 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv1013 = sext i8 %691 to i32
  %692 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv1014 = sext i8 %692 to i32
  %693 = load i8, i8* %__a2, align 1, !tbaa !15
  %conv1015 = sext i8 %693 to i32
  %call1016 = call i8* @__strpbrk_c3(i8* %690, i32 %conv1013, i32 %conv1014, i32 %conv1015)
  br label %cond.end.1021

cond.false.1017:                                  ; preds = %cond.false.1006
  %694 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom1018 = sext i32 %694 to i64
  %arrayidx1019 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom1018
  %695 = load i8*, i8** %arrayidx1019, align 8, !tbaa !1
  %call1020 = call i8* @strpbrk(i8* %695, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0)) #1
  br label %cond.end.1021

cond.end.1021:                                    ; preds = %cond.false.1017, %cond.true.1010
  %cond1022 = phi i8* [ %call1016, %cond.true.1010 ], [ %call1020, %cond.false.1017 ]
  br label %cond.end.1023

cond.end.1023:                                    ; preds = %cond.end.1021, %cond.true.1000
  %cond1024 = phi i8* [ %call1005, %cond.true.1000 ], [ %cond1022, %cond.end.1021 ]
  br label %cond.end.1025

cond.end.1025:                                    ; preds = %cond.end.1023, %cond.true.991
  %cond1026 = phi i8* [ %call995, %cond.true.991 ], [ %cond1024, %cond.end.1023 ]
  br label %cond.end.1027

cond.end.1027:                                    ; preds = %cond.end.1025, %cond.true.985
  %cond1028 = phi i8* [ null, %cond.true.985 ], [ %cond1026, %cond.end.1025 ]
  br label %cond.end.1033

cond.false.1029:                                  ; preds = %while.body.973
  %696 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom1030 = sext i32 %696 to i64
  %arrayidx1031 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom1030
  %697 = load i8*, i8** %arrayidx1031, align 8, !tbaa !1
  %call1032 = call i8* @strpbrk(i8* %697, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0)) #1
  br label %cond.end.1033

cond.end.1033:                                    ; preds = %cond.false.1029, %cond.end.1027
  %cond1034 = phi i8* [ %cond1028, %cond.end.1027 ], [ %call1032, %cond.false.1029 ]
  store i8* %cond1034, i8** %tmp980, !tbaa !1
  call void @llvm.lifetime.end(i64 1, i8* %__a2) #1
  call void @llvm.lifetime.end(i64 1, i8* %__a1) #1
  call void @llvm.lifetime.end(i64 1, i8* %__a0) #1
  %698 = load i8*, i8** %tmp980, !tbaa !1
  store i8* %698, i8** %endp, align 8, !tbaa !1
  %699 = load i8*, i8** %endp, align 8, !tbaa !1
  %cmp1035 = icmp ne i8* %699, null
  br i1 %cmp1035, label %if.then.1037, label %if.end.1038

if.then.1037:                                     ; preds = %cond.end.1033
  %700 = load i8*, i8** %endp, align 8, !tbaa !1
  %701 = load i8, i8* %700, align 1, !tbaa !15
  store i8 %701, i8* %sep, align 1, !tbaa !15
  %702 = load i8*, i8** %endp, align 8, !tbaa !1
  store i8 0, i8* %702, align 1, !tbaa !15
  br label %if.end.1038

if.end.1038:                                      ; preds = %if.then.1037, %cond.end.1033
  %703 = load i32, i32* %hostnum, align 4, !tbaa !5
  %cmp1039 = icmp eq i32 %703, 1
  br i1 %cmp1039, label %land.lhs.true.1041, label %if.end.1045

land.lhs.true.1041:                               ; preds = %if.end.1038
  %704 = load %struct.address*, %struct.address** %skip_back, align 8, !tbaa !1
  %cmp1042 = icmp ne %struct.address* %704, null
  br i1 %cmp1042, label %if.then.1044, label %if.end.1045

if.then.1044:                                     ; preds = %land.lhs.true.1041
  %705 = load %struct.address*, %struct.address** %skip_back, align 8, !tbaa !1
  store volatile %struct.address* %705, %struct.address** %tochain, align 8, !tbaa !1
  br label %if.end.1045

if.end.1045:                                      ; preds = %if.then.1044, %land.lhs.true.1041, %if.end.1038
  %706 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom1046 = sext i32 %706 to i64
  %arrayidx1047 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom1046
  %707 = load i8*, i8** %arrayidx1047, align 8, !tbaa !1
  %708 = load i8, i8* %707, align 1, !tbaa !15
  %conv1048 = sext i8 %708 to i32
  %cmp1049 = icmp eq i32 %conv1048, 0
  br i1 %cmp1049, label %if.then.1051, label %if.end.1057

if.then.1051:                                     ; preds = %if.end.1045
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.207, i32 0, i32 0))
  %709 = load i32, i32* %hostnum, align 4, !tbaa !5
  %inc1052 = add nsw i32 %709, 1
  store i32 %inc1052, i32* %hostnum, align 4, !tbaa !5
  %710 = load i8*, i8** %endp, align 8, !tbaa !1
  %cmp1053 = icmp ne i8* %710, null
  br i1 %cmp1053, label %if.then.1055, label %if.end.1056

if.then.1055:                                     ; preds = %if.then.1051
  %711 = load i8, i8* %sep, align 1, !tbaa !15
  %712 = load i8*, i8** %endp, align 8, !tbaa !1
  store i8 %711, i8* %712, align 1, !tbaa !15
  br label %if.end.1056

if.end.1056:                                      ; preds = %if.then.1055, %if.then.1051
  store i32 25, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1057:                                      ; preds = %if.end.1045
  %713 = load i32, i32* %hostnum, align 4, !tbaa !5
  %idxprom1058 = sext i32 %713 to i64
  %arrayidx1059 = getelementptr inbounds [101 x i8*], [101 x i8*]* %mxhosts, i32 0, i64 %idxprom1058
  %714 = load i8*, i8** %arrayidx1059, align 8, !tbaa !1
  %call1060 = call i64 @sm_strlcpy(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i8* %714, i64 257)
  %715 = load i32, i32* %hostnum, align 4, !tbaa !5
  %inc1061 = add nsw i32 %715, 1
  store i32 %inc1061, i32* %hostnum, align 4, !tbaa !5
  %716 = load i8*, i8** %endp, align 8, !tbaa !1
  %cmp1062 = icmp ne i8* %716, null
  br i1 %cmp1062, label %if.then.1064, label %if.end.1065

if.then.1064:                                     ; preds = %if.end.1057
  %717 = load i8, i8* %sep, align 1, !tbaa !15
  %718 = load i8*, i8** %endp, align 8, !tbaa !1
  store i8 %717, i8* %718, align 1, !tbaa !15
  br label %if.end.1065

if.end.1065:                                      ; preds = %if.then.1064, %if.end.1057
  br label %one_last_try

one_last_try:                                     ; preds = %if.then.1192, %if.then.1114, %if.end.1065
  store i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i8** @CurHostName, align 8, !tbaa !1
  %719 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %call1066 = call %struct.mailer_con_info* @mci_get(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), %struct.mailer* %719)
  store volatile %struct.mailer_con_info* %call1066, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %720 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state1067 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %720, i32 0, i32 4
  %721 = load i16, i16* %mci_state1067, align 2, !tbaa !75
  %conv1068 = sext i16 %721 to i32
  %cmp1069 = icmp ne i32 %conv1068, 0
  br i1 %cmp1069, label %if.then.1071, label %if.end.1098

if.then.1071:                                     ; preds = %one_last_try
  %722 = bitcast i8** %type to i8*
  call void @llvm.lifetime.start(i64 8, i8* %722) #1
  %723 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1073 = zext i8 %723 to i32
  %cmp1074 = icmp sge i32 %conv1073, 1
  br i1 %cmp1074, label %land.lhs.true.1076, label %if.end.1080

land.lhs.true.1076:                               ; preds = %if.then.1071
  %724 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1077 = icmp ne i32 %724, 0
  br i1 %tobool1077, label %if.end.1080, label %if.then.1078

if.then.1078:                                     ; preds = %land.lhs.true.1076
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.208, i32 0, i32 0))
  %call1079 = call %struct.sm_file* @sm_debug_file()
  %725 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_dump(%struct.sm_file* %call1079, %struct.mailer_con_info* %725, i32 0)
  br label %if.end.1080

if.end.1080:                                      ; preds = %if.then.1078, %land.lhs.true.1076, %if.then.1071
  %726 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host1081 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %726, i32 0, i32 12
  %727 = load i8*, i8** %mci_host1081, align 8, !tbaa !81
  store i8* %727, i8** @CurHostName, align 8, !tbaa !1
  %728 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1082 = getelementptr inbounds %struct.mailer, %struct.mailer* %728, i32 0, i32 5
  %arrayidx1083 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1082, i32 0, i64 3
  %729 = load i32, i32* %arrayidx1083, align 4, !tbaa !5
  %and1084 = and i32 %729, 67108864
  %tobool1085 = icmp ne i32 %and1084, 0
  br i1 %tobool1085, label %if.then.1086, label %if.else.1087

if.then.1086:                                     ; preds = %if.end.1080
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i8** %type, align 8, !tbaa !1
  br label %if.end.1094

if.else.1087:                                     ; preds = %if.end.1080
  %730 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %730, i32 0, i32 0
  %731 = load i64, i64* %mci_flags, align 8, !tbaa !71
  %and1088 = and i64 %731, 8
  %cmp1089 = icmp ne i64 %and1088, 0
  br i1 %cmp1089, label %if.then.1091, label %if.else.1092

if.then.1091:                                     ; preds = %if.else.1087
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.210, i32 0, i32 0), i8** %type, align 8, !tbaa !1
  br label %if.end.1093

if.else.1092:                                     ; preds = %if.else.1087
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.211, i32 0, i32 0), i8** %type, align 8, !tbaa !1
  br label %if.end.1093

if.end.1093:                                      ; preds = %if.else.1092, %if.then.1091
  br label %if.end.1094

if.end.1094:                                      ; preds = %if.end.1093, %if.then.1086
  %732 = load i8*, i8** %type, align 8, !tbaa !1
  %733 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1095 = getelementptr inbounds %struct.mailer, %struct.mailer* %733, i32 0, i32 0
  %734 = load i8*, i8** %m_name1095, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.212, i32 0, i32 0), i8* %732, i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i8* %734)
  %735 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_deliveries1096 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %735, i32 0, i32 5
  %736 = load i32, i32* %mci_deliveries1096, align 4, !tbaa !134
  %inc1097 = add nsw i32 %736, 1
  store i32 %inc1097, i32* %mci_deliveries1096, align 4, !tbaa !134
  store i32 26, i32* %cleanup.dest.slot
  %737 = bitcast i8** %type to i8*
  call void @llvm.lifetime.end(i64 8, i8* %737) #1
  br label %cleanup

if.end.1098:                                      ; preds = %one_last_try
  %738 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %739 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_mailer1099 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %739, i32 0, i32 11
  store %struct.mailer* %738, %struct.mailer** %mci_mailer1099, align 8, !tbaa !79
  %740 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_exitstat = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %740, i32 0, i32 3
  %741 = load i16, i16* %mci_exitstat, align 2, !tbaa !139
  %conv1100 = sext i16 %741 to i32
  %cmp1101 = icmp ne i32 %conv1100, 0
  br i1 %cmp1101, label %if.then.1103, label %if.end.1116

if.then.1103:                                     ; preds = %if.end.1098
  %742 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_exitstat1104 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %742, i32 0, i32 3
  %743 = load i16, i16* %mci_exitstat1104, align 2, !tbaa !139
  %conv1105 = sext i16 %743 to i32
  %cmp1106 = icmp eq i32 %conv1105, 75
  br i1 %cmp1106, label %if.then.1108, label %if.end.1109

if.then.1108:                                     ; preds = %if.then.1103
  store i32 1, i32* %goodmxfound, align 4, !tbaa !5
  br label %if.end.1109

if.end.1109:                                      ; preds = %if.then.1108, %if.then.1103
  %744 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %745 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_exitstat1110 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %745, i32 0, i32 3
  %746 = load i16, i16* %mci_exitstat1110, align 2, !tbaa !139
  %conv1111 = sext i16 %746 to i32
  %call1112 = call i32 @should_try_fbsh(%struct.envelope* %744, i32* %tried_fallbacksmarthost, i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i64 257, i32 %conv1111)
  %tobool1113 = icmp ne i32 %call1112, 0
  br i1 %tobool1113, label %if.then.1114, label %if.end.1115

if.then.1114:                                     ; preds = %if.end.1109
  br label %one_last_try

if.end.1115:                                      ; preds = %if.end.1109
  store i32 25, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1116:                                      ; preds = %if.end.1098
  %747 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %call1117 = call i32 @mci_lock_host(%struct.mailer_con_info* %747)
  %cmp1118 = icmp ne i32 %call1117, 0
  br i1 %cmp1118, label %if.then.1120, label %if.end.1121

if.then.1120:                                     ; preds = %if.end.1116
  %748 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_setstat(%struct.mailer_con_info* %748, i32 75, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.213, i32 0, i32 0), i8* null)
  store i32 1, i32* %goodmxfound, align 4, !tbaa !5
  store i32 25, i32* %cleanup.dest.slot
  br label %cleanup

if.end.1121:                                      ; preds = %if.end.1116
  %749 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %750 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call1122 = call i8* @qid_printname(%struct.envelope* %750)
  call void (i32, %struct.envelope*, i8*, ...) @sm_setproctitle(i32 1, %struct.envelope* %749, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.214, i32 0, i32 0), i8* %call1122, i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.215, i32 0, i32 0))
  %751 = load i8*, i8** %mux_path, align 8, !tbaa !1
  %cmp1123 = icmp ne i8* %751, null
  br i1 %cmp1123, label %if.then.1125, label %if.else.1128

if.then.1125:                                     ; preds = %if.end.1121
  %752 = load i8*, i8** %mux_path, align 8, !tbaa !1
  %753 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1126 = getelementptr inbounds %struct.mailer, %struct.mailer* %753, i32 0, i32 0
  %754 = load i8*, i8** %m_name1126, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.216, i32 0, i32 0), i8* %752, i8* %754)
  %755 = load i8*, i8** %mux_path, align 8, !tbaa !1
  %756 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %call1127 = call i32 @makeconnection_ds(i8* %755, %struct.mailer_con_info* %756)
  store i32 %call1127, i32* %i, align 4, !tbaa !5
  br label %if.end.1145

if.else.1128:                                     ; preds = %if.end.1121
  %757 = load i16, i16* %port, align 2, !tbaa !40
  %conv1129 = zext i16 %757 to i32
  %cmp1130 = icmp eq i32 %conv1129, 0
  br i1 %cmp1130, label %if.then.1132, label %if.else.1134

if.then.1132:                                     ; preds = %if.else.1128
  %758 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1133 = getelementptr inbounds %struct.mailer, %struct.mailer* %758, i32 0, i32 0
  %759 = load i8*, i8** %m_name1133, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i8* %759)
  br label %if.end.1142

if.else.1134:                                     ; preds = %if.else.1128
  %760 = bitcast i16* %__v1136 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %760) #1
  %761 = bitcast i16* %__x1138 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %761) #1
  %762 = load i16, i16* %port, align 2, !tbaa !40
  store i16 %762, i16* %__x1138, align 2, !tbaa !40
  %763 = load i16, i16* %__x1138, align 2, !tbaa !40
  %764 = call i16 asm "rorw $$8, ${0:w}", "=r,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i16 %763) #11, !srcloc !140
  store i16 %764, i16* %__v1136, align 2, !tbaa !40
  %765 = load i16, i16* %__v1136, align 2, !tbaa !40
  store i16 %765, i16* %tmp1139, !tbaa !40
  %766 = bitcast i16* %__x1138 to i8*
  call void @llvm.lifetime.end(i64 2, i8* %766) #1
  %767 = bitcast i16* %__v1136 to i8*
  call void @llvm.lifetime.end(i64 2, i8* %767) #1
  %768 = load i16, i16* %tmp1139, !tbaa !40
  %conv1140 = zext i16 %768 to i32
  %769 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1141 = getelementptr inbounds %struct.mailer, %struct.mailer* %769, i32 0, i32 0
  %770 = load i8*, i8** %m_name1141, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i32 %conv1140, i8* %770)
  br label %if.end.1142

if.end.1142:                                      ; preds = %if.else.1134, %if.then.1132
  %771 = load i16, i16* %port, align 2, !tbaa !40
  %conv1143 = zext i16 %771 to i32
  %772 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %773 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %774 = load i64, i64* %enough, align 8, !tbaa !32
  %call1144 = call i32 @makeconnection(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i32 %conv1143, %struct.mailer_con_info* %772, %struct.envelope* %773, i64 %774)
  store i32 %call1144, i32* %i, align 4, !tbaa !5
  br label %if.end.1145

if.end.1145:                                      ; preds = %if.end.1142, %if.then.1125
  %call1146 = call i32* @__errno_location() #11
  %775 = load i32, i32* %call1146, align 4, !tbaa !5
  %conv1147 = trunc i32 %775 to i16
  %776 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_errno = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %776, i32 0, i32 1
  store i16 %conv1147, i16* %mci_errno, align 2, !tbaa !118
  %call1148 = call i64 @curtime()
  %777 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_lastuse = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %777, i32 0, i32 15
  store i64 %call1148, i64* %mci_lastuse, align 8, !tbaa !120
  %778 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_deliveries1149 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %778, i32 0, i32 5
  store i32 0, i32* %mci_deliveries1149, align 4, !tbaa !134
  %779 = load i32, i32* %i, align 4, !tbaa !5
  %conv1150 = trunc i32 %779 to i16
  %780 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_exitstat1151 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %780, i32 0, i32 3
  store i16 %conv1150, i16* %mci_exitstat1151, align 2, !tbaa !139
  %781 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_clr_extensions(%struct.mailer_con_info* %781)
  %call1152 = call i32* @__h_errno_location() #11
  %782 = load i32, i32* %call1152, align 4, !tbaa !5
  %conv1153 = trunc i32 %782 to i16
  %783 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_herrno = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %783, i32 0, i32 2
  store i16 %conv1153, i16* %mci_herrno, align 2, !tbaa !119
  %784 = load i64, i64* %enough, align 8, !tbaa !32
  %cmp1154 = icmp sgt i64 %784, 0
  br i1 %cmp1154, label %land.lhs.true.1156, label %if.end.1179

land.lhs.true.1156:                               ; preds = %if.end.1145
  %785 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_lastuse1157 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %785, i32 0, i32 15
  %786 = load i64, i64* %mci_lastuse1157, align 8, !tbaa !120
  %787 = load i64, i64* %enough, align 8, !tbaa !32
  %cmp1158 = icmp sge i64 %786, %787
  br i1 %cmp1158, label %if.then.1160, label %if.end.1179

if.then.1160:                                     ; preds = %land.lhs.true.1156
  %788 = bitcast i32* %h to i8*
  call void @llvm.lifetime.start(i64 4, i8* %788) #1
  %789 = load i32, i32* %hostnum, align 4, !tbaa !5
  %790 = load i32, i32* %nummxhosts, align 4, !tbaa !5
  %cmp1162 = icmp slt i32 %789, %790
  br i1 %cmp1162, label %land.lhs.true.1164, label %if.end.1169

land.lhs.true.1164:                               ; preds = %if.then.1160
  %791 = load i32, i32* @LogLevel, align 4, !tbaa !5
  %cmp1165 = icmp sgt i32 %791, 9
  br i1 %cmp1165, label %if.then.1167, label %if.end.1169

if.then.1167:                                     ; preds = %land.lhs.true.1164
  %792 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id1168 = getelementptr inbounds %struct.envelope, %struct.envelope* %792, i32 0, i32 25
  %793 = load i8*, i8** %e_id1168, align 8, !tbaa !16
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 6, i8* %793, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.218, i32 0, i32 0))
  br label %if.end.1169

if.end.1169:                                      ; preds = %if.then.1167, %land.lhs.true.1164, %if.then.1160
  %794 = load i32, i32* @NumFallbackMXHosts, align 4, !tbaa !5
  %cmp1170 = icmp sgt i32 %794, 0
  br i1 %cmp1170, label %if.then.1172, label %if.end.1173

if.then.1172:                                     ; preds = %if.end.1169
  store i64 0, i64* %enough, align 8, !tbaa !32
  br label %if.end.1173

if.end.1173:                                      ; preds = %if.then.1172, %if.end.1169
  %795 = load i32, i32* %nummxhosts, align 4, !tbaa !5
  %796 = load i32, i32* @NumFallbackMXHosts, align 4, !tbaa !5
  %sub1174 = sub nsw i32 %795, %796
  store i32 %sub1174, i32* %h, align 4, !tbaa !5
  %797 = load i32, i32* %hostnum, align 4, !tbaa !5
  %798 = load i32, i32* %h, align 4, !tbaa !5
  %cmp1175 = icmp slt i32 %797, %798
  br i1 %cmp1175, label %if.then.1177, label %if.end.1178

if.then.1177:                                     ; preds = %if.end.1173
  %799 = load i32, i32* %h, align 4, !tbaa !5
  store i32 %799, i32* %hostnum, align 4, !tbaa !5
  br label %if.end.1178

if.end.1178:                                      ; preds = %if.then.1177, %if.end.1173
  %800 = bitcast i32* %h to i8*
  call void @llvm.lifetime.end(i64 4, i8* %800) #1
  br label %if.end.1179

if.end.1179:                                      ; preds = %if.end.1178, %land.lhs.true.1156, %if.end.1145
  %801 = load i32, i32* %i, align 4, !tbaa !5
  %cmp1180 = icmp eq i32 %801, 0
  br i1 %cmp1180, label %if.then.1182, label %if.else.1189

if.then.1182:                                     ; preds = %if.end.1179
  store i32 1, i32* %goodmxfound, align 4, !tbaa !5
  %802 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %803 = load %struct.address*, %struct.address** %firstto.addr, align 8, !tbaa !1
  call void @markstats(%struct.envelope* %802, %struct.address* %803, i32 99)
  %804 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state1183 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %804, i32 0, i32 4
  store i16 1, i16* %mci_state1183, align 2, !tbaa !75
  %805 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_cache(%struct.mailer_con_info* %805)
  %806 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp1184 = icmp ne %struct.sm_file* %806, null
  br i1 %cmp1184, label %if.then.1186, label %if.end.1188

if.then.1186:                                     ; preds = %if.then.1182
  %807 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %808 = load i32, i32* @CurrentPid, align 4, !tbaa !5
  %call1187 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %807, i32 -2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.219, i32 0, i32 0), i32 %808, i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0))
  br label %if.end.1188

if.end.1188:                                      ; preds = %if.then.1186, %if.then.1182
  store i32 26, i32* %cleanup.dest.slot
  br label %cleanup

if.else.1189:                                     ; preds = %if.end.1179
  %809 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %810 = load i32, i32* %i, align 4, !tbaa !5
  %call1190 = call i32 @should_try_fbsh(%struct.envelope* %809, i32* %tried_fallbacksmarthost, i8* getelementptr inbounds ([257 x i8], [257 x i8]* @deliver.hostbuf, i32 0, i32 0), i64 257, i32 %810)
  %tobool1191 = icmp ne i32 %call1190, 0
  br i1 %tobool1191, label %if.then.1192, label %if.end.1193

if.then.1192:                                     ; preds = %if.else.1189
  br label %one_last_try

if.end.1193:                                      ; preds = %if.else.1189
  %811 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1194 = zext i8 %811 to i32
  %cmp1195 = icmp sge i32 %conv1194, 1
  br i1 %cmp1195, label %land.lhs.true.1197, label %if.end.1201

land.lhs.true.1197:                               ; preds = %if.end.1193
  %812 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1198 = icmp ne i32 %812, 0
  br i1 %tobool1198, label %if.end.1201, label %if.then.1199

if.then.1199:                                     ; preds = %land.lhs.true.1197
  %813 = load i32, i32* %i, align 4, !tbaa !5
  %call1200 = call i32* @__errno_location() #11
  %814 = load i32, i32* %call1200, align 4, !tbaa !5
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.220, i32 0, i32 0), i32 %813, i32 %814)
  br label %if.end.1201

if.end.1201:                                      ; preds = %if.then.1199, %land.lhs.true.1197, %if.end.1193
  %815 = load i32, i32* %i, align 4, !tbaa !5
  %cmp1202 = icmp eq i32 %815, 75
  br i1 %cmp1202, label %if.then.1204, label %if.end.1205

if.then.1204:                                     ; preds = %if.end.1201
  store i32 1, i32* %goodmxfound, align 4, !tbaa !5
  br label %if.end.1205

if.end.1205:                                      ; preds = %if.then.1204, %if.end.1201
  %816 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_unlock_host(%struct.mailer_con_info* %816)
  br label %if.end.1206

if.end.1206:                                      ; preds = %if.end.1205
  br label %do.body.1207

do.body.1207:                                     ; preds = %if.end.1206
  %817 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp1208 = icmp eq i32 %817, 0
  br i1 %cmp1208, label %if.then.1213, label %lor.lhs.false.1210

lor.lhs.false.1210:                               ; preds = %do.body.1207
  %818 = load i32, i32* @ExitStat, align 4, !tbaa !5
  %cmp1211 = icmp eq i32 %818, 75
  br i1 %cmp1211, label %if.then.1213, label %if.end.1214

if.then.1213:                                     ; preds = %lor.lhs.false.1210, %do.body.1207
  %819 = load i32, i32* %i, align 4, !tbaa !5
  store i32 %819, i32* @ExitStat, align 4, !tbaa !5
  br label %if.end.1214

if.end.1214:                                      ; preds = %if.then.1213, %lor.lhs.false.1210
  br label %do.cond.1215

do.cond.1215:                                     ; preds = %if.end.1214
  br label %do.end.1216

do.end.1216:                                      ; preds = %do.cond.1215
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %do.end.1216, %if.end.1188, %if.then.1120, %if.end.1115, %if.end.1094, %if.end.1056
  %820 = bitcast i32* %tried_fallbacksmarthost to i8*
  call void @llvm.lifetime.end(i64 4, i8* %820) #1
  %821 = bitcast i8** %endp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %821) #1
  call void @llvm.lifetime.end(i64 1, i8* %sep) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 25, label %while.cond.970
    i32 26, label %while.end.1219
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond.970

while.end.1219:                                   ; preds = %cleanup, %while.cond.970
  %822 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %cmp1220 = icmp eq %struct.mailer_con_info* %822, null
  br i1 %cmp1220, label %if.then.1222, label %if.end.1223

if.then.1222:                                     ; preds = %while.end.1219
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.221, i32 0, i32 0))
  store i32 70, i32* %rcode, align 4, !tbaa !5
  store i32 22, i32* %cleanup.dest.slot
  br label %cleanup.1224

if.end.1223:                                      ; preds = %while.end.1219
  %823 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_pid = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %823, i32 0, i32 9
  store i32 0, i32* %mci_pid, align 4, !tbaa !78
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup.1224

cleanup.1224:                                     ; preds = %if.then.1222, %if.then.931, %if.then.927, %if.then.851, %if.end.1223
  %824 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %824) #1
  %cleanup.dest.1225 = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest.1225, label %unreachable [
    i32 0, label %cleanup.cont.1226
    i32 22, label %give_up
  ]

cleanup.cont.1226:                                ; preds = %cleanup.1224
  br label %if.end.1895

if.else.1227:                                     ; preds = %cond.end.832
  %call1228 = call %struct.mailer_con_info** @mci_scan(%struct.mailer_con_info* null)
  store volatile %struct.mailer_con_info* null, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %825 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1229 = getelementptr inbounds %struct.mailer, %struct.mailer* %825, i32 0, i32 5
  %arrayidx1230 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1229, i32 0, i64 3
  %826 = load i32, i32* %arrayidx1230, align 4, !tbaa !5
  %and1231 = and i32 %826, 67108864
  %tobool1232 = icmp ne i32 %and1231, 0
  br i1 %tobool1232, label %if.then.1233, label %if.end.1253

if.then.1233:                                     ; preds = %if.else.1227
  %827 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1234 = getelementptr inbounds %struct.mailer, %struct.mailer* %827, i32 0, i32 0
  %828 = load i8*, i8** %m_name1234, align 8, !tbaa !63
  %829 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %call1235 = call %struct.mailer_con_info* @mci_get(i8* %828, %struct.mailer* %829)
  store volatile %struct.mailer_con_info* %call1235, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %830 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host1236 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %830, i32 0, i32 12
  %831 = load i8*, i8** %mci_host1236, align 8, !tbaa !81
  %cmp1237 = icmp eq i8* %831, null
  br i1 %cmp1237, label %if.then.1239, label %if.end.1242

if.then.1239:                                     ; preds = %if.then.1233
  %832 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1240 = getelementptr inbounds %struct.mailer, %struct.mailer* %832, i32 0, i32 0
  %833 = load i8*, i8** %m_name1240, align 8, !tbaa !63
  %834 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host1241 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %834, i32 0, i32 12
  store i8* %833, i8** %mci_host1241, align 8, !tbaa !81
  br label %if.end.1242

if.end.1242:                                      ; preds = %if.then.1239, %if.then.1233
  %835 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_host1243 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %835, i32 0, i32 12
  %836 = load i8*, i8** %mci_host1243, align 8, !tbaa !81
  store i8* %836, i8** @CurHostName, align 8, !tbaa !1
  %837 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state1244 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %837, i32 0, i32 4
  %838 = load i16, i16* %mci_state1244, align 2, !tbaa !75
  %conv1245 = sext i16 %838 to i32
  %cmp1246 = icmp ne i32 %conv1245, 0
  br i1 %cmp1246, label %if.then.1248, label %if.end.1252

if.then.1248:                                     ; preds = %if.end.1242
  %839 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1249 = getelementptr inbounds %struct.mailer, %struct.mailer* %839, i32 0, i32 0
  %840 = load i8*, i8** %m_name1249, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.222, i32 0, i32 0), i8* %840)
  %841 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_deliveries1250 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %841, i32 0, i32 5
  %842 = load i32, i32* %mci_deliveries1250, align 4, !tbaa !134
  %inc1251 = add nsw i32 %842, 1
  store i32 %inc1251, i32* %mci_deliveries1250, align 4, !tbaa !134
  br label %do_transfer

if.end.1252:                                      ; preds = %if.end.1242
  br label %if.end.1253

if.end.1253:                                      ; preds = %if.end.1252, %if.else.1227
  %843 = load i8*, i8** %host, align 8, !tbaa !1
  %cmp1254 = icmp eq i8* %843, null
  br i1 %cmp1254, label %if.then.1261, label %lor.lhs.false.1256

lor.lhs.false.1256:                               ; preds = %if.end.1253
  %844 = load i8*, i8** %host, align 8, !tbaa !1
  %arrayidx1257 = getelementptr inbounds i8, i8* %844, i64 0
  %845 = load i8, i8* %arrayidx1257, align 1, !tbaa !15
  %conv1258 = sext i8 %845 to i32
  %cmp1259 = icmp eq i32 %conv1258, 0
  br i1 %cmp1259, label %if.then.1261, label %if.else.1263

if.then.1261:                                     ; preds = %lor.lhs.false.1256, %if.end.1253
  %846 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1262 = getelementptr inbounds %struct.mailer, %struct.mailer* %846, i32 0, i32 0
  %847 = load i8*, i8** %m_name1262, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.223, i32 0, i32 0), i8* %847)
  br label %if.end.1265

if.else.1263:                                     ; preds = %lor.lhs.false.1256
  %848 = load i8*, i8** %host, align 8, !tbaa !1
  %849 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1264 = getelementptr inbounds %struct.mailer, %struct.mailer* %849, i32 0, i32 0
  %850 = load i8*, i8** %m_name1264, align 8, !tbaa !63
  call void (i8*, ...) @message(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.216, i32 0, i32 0), i8* %848, i8* %850)
  br label %if.end.1265

if.end.1265:                                      ; preds = %if.else.1263, %if.then.1261
  %851 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %cmp1266 = icmp ne %struct.sm_file* %851, null
  br i1 %cmp1266, label %if.then.1268, label %if.end.1281

if.then.1268:                                     ; preds = %if.end.1265
  %852 = bitcast i8*** %av to i8*
  call void @llvm.lifetime.start(i64 8, i8* %852) #1
  %853 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %854 = load i32, i32* @CurrentPid, align 4, !tbaa !5
  %call1270 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %853, i32 -2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.224, i32 0, i32 0), i32 %854)
  %arraydecay1271 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i32 0
  store i8** %arraydecay1271, i8*** %av, align 8, !tbaa !1
  br label %for.cond.1272

for.cond.1272:                                    ; preds = %for.inc.1277, %if.then.1268
  %855 = load i8**, i8*** %av, align 8, !tbaa !1
  %856 = load i8*, i8** %855, align 8, !tbaa !1
  %cmp1273 = icmp ne i8* %856, null
  br i1 %cmp1273, label %for.body.1275, label %for.end.1279

for.body.1275:                                    ; preds = %for.cond.1272
  %857 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %858 = load i8**, i8*** %av, align 8, !tbaa !1
  %859 = load i8*, i8** %858, align 8, !tbaa !1
  %call1276 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %857, i32 -2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8* %859)
  br label %for.inc.1277

for.inc.1277:                                     ; preds = %for.body.1275
  %860 = load i8**, i8*** %av, align 8, !tbaa !1
  %incdec.ptr1278 = getelementptr inbounds i8*, i8** %860, i32 1
  store i8** %incdec.ptr1278, i8*** %av, align 8, !tbaa !1
  br label %for.cond.1272

for.end.1279:                                     ; preds = %for.cond.1272
  %861 = load %struct.sm_file*, %struct.sm_file** @TrafficLogFile, align 8, !tbaa !1
  %call1280 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %861, i32 -2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0))
  %862 = bitcast i8*** %av to i8*
  call void @llvm.lifetime.end(i64 8, i8* %862) #1
  br label %if.end.1281

if.end.1281:                                      ; preds = %for.end.1279, %if.end.1265
  call void @checkfd012(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.225, i32 0, i32 0))
  %arraydecay1282 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i32 0
  %call1283 = call i32 @pipe(i32* %arraydecay1282) #1
  %cmp1284 = icmp slt i32 %call1283, 0
  br i1 %cmp1284, label %if.then.1286, label %if.end.1297

if.then.1286:                                     ; preds = %if.end.1281
  %863 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1287 = getelementptr inbounds %struct.envelope, %struct.envelope* %863, i32 0, i32 3
  %864 = load i8*, i8** %e_to1287, align 8, !tbaa !62
  %call1288 = call i8* @shortenstring(i8* %864, i64 203)
  %865 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1289 = getelementptr inbounds %struct.mailer, %struct.mailer* %865, i32 0, i32 0
  %866 = load i8*, i8** %m_name1289, align 8, !tbaa !63
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.226, i32 0, i32 0), i8* %call1288, i8* %866)
  %867 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1290 = zext i8 %867 to i32
  %cmp1291 = icmp sge i32 %conv1290, 1
  br i1 %cmp1291, label %land.lhs.true.1293, label %if.end.1296

land.lhs.true.1293:                               ; preds = %if.then.1286
  %868 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1294 = icmp ne i32 %868, 0
  br i1 %tobool1294, label %if.end.1296, label %if.then.1295

if.then.1295:                                     ; preds = %land.lhs.true.1293
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.227, i32 0, i32 0))
  br label %if.end.1296

if.end.1296:                                      ; preds = %if.then.1295, %land.lhs.true.1293, %if.then.1286
  store i32 71, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.1297:                                      ; preds = %if.end.1281
  %arrayidx1298 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %869 = load i32, i32* %arrayidx1298, align 4, !tbaa !5
  %cmp1299 = icmp slt i32 %869, 3
  br i1 %cmp1299, label %if.then.1305, label %lor.lhs.false.1301

lor.lhs.false.1301:                               ; preds = %if.end.1297
  %arrayidx1302 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %870 = load i32, i32* %arrayidx1302, align 4, !tbaa !5
  %cmp1303 = icmp slt i32 %870, 3
  br i1 %cmp1303, label %if.then.1305, label %if.end.1318

if.then.1305:                                     ; preds = %lor.lhs.false.1301, %if.end.1297
  %871 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1306 = getelementptr inbounds %struct.envelope, %struct.envelope* %871, i32 0, i32 3
  %872 = load i8*, i8** %e_to1306, align 8, !tbaa !62
  %call1307 = call i8* @shortenstring(i8* %872, i64 203)
  %873 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1308 = getelementptr inbounds %struct.mailer, %struct.mailer* %873, i32 0, i32 0
  %874 = load i8*, i8** %m_name1308, align 8, !tbaa !63
  %arrayidx1309 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %875 = load i32, i32* %arrayidx1309, align 4, !tbaa !5
  %arrayidx1310 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %876 = load i32, i32* %arrayidx1310, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.228, i32 0, i32 0), i8* %call1307, i8* %874, i32 %875, i32 %876)
  call void @printopenfds(i32 1)
  %877 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1311 = zext i8 %877 to i32
  %cmp1312 = icmp sge i32 %conv1311, 1
  br i1 %cmp1312, label %land.lhs.true.1314, label %if.end.1317

land.lhs.true.1314:                               ; preds = %if.then.1305
  %878 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1315 = icmp ne i32 %878, 0
  br i1 %tobool1315, label %if.end.1317, label %if.then.1316

if.then.1316:                                     ; preds = %land.lhs.true.1314
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.227, i32 0, i32 0))
  br label %if.end.1317

if.end.1317:                                      ; preds = %if.then.1316, %land.lhs.true.1314, %if.then.1305
  store i32 71, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.1318:                                      ; preds = %lor.lhs.false.1301
  %arrayidx1319 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %879 = load i32, i32* %arrayidx1319, align 4, !tbaa !5
  call void @checkfdopen(i32 %879, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.229, i32 0, i32 0))
  %arrayidx1320 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %880 = load i32, i32* %arrayidx1320, align 4, !tbaa !5
  call void @checkfdopen(i32 %880, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.230, i32 0, i32 0))
  %arrayidx1321 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %881 = load i32, i32* %arrayidx1321, align 4, !tbaa !5
  %arrayidx1322 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %882 = load i32, i32* %arrayidx1322, align 4, !tbaa !5
  %cmp1323 = icmp eq i32 %881, %882
  br i1 %cmp1323, label %if.then.1340, label %lor.lhs.false.1325

lor.lhs.false.1325:                               ; preds = %if.end.1318
  %883 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp = getelementptr inbounds %struct.envelope, %struct.envelope* %883, i32 0, i32 33
  %884 = load %struct.sm_file*, %struct.sm_file** %e_lockfp, align 8, !tbaa !45
  %cmp1326 = icmp ne %struct.sm_file* %884, null
  br i1 %cmp1326, label %land.lhs.true.1328, label %if.end.1359

land.lhs.true.1328:                               ; preds = %lor.lhs.false.1325
  %arrayidx1329 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %885 = load i32, i32* %arrayidx1329, align 4, !tbaa !5
  %886 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp1330 = getelementptr inbounds %struct.envelope, %struct.envelope* %886, i32 0, i32 33
  %887 = load %struct.sm_file*, %struct.sm_file** %e_lockfp1330, align 8, !tbaa !45
  %call1331 = call i32 @sm_io_getinfo(%struct.sm_file* %887, i32 3, i8* null)
  %cmp1332 = icmp eq i32 %885, %call1331
  br i1 %cmp1332, label %if.then.1340, label %lor.lhs.false.1334

lor.lhs.false.1334:                               ; preds = %land.lhs.true.1328
  %arrayidx1335 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %888 = load i32, i32* %arrayidx1335, align 4, !tbaa !5
  %889 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp1336 = getelementptr inbounds %struct.envelope, %struct.envelope* %889, i32 0, i32 33
  %890 = load %struct.sm_file*, %struct.sm_file** %e_lockfp1336, align 8, !tbaa !45
  %call1337 = call i32 @sm_io_getinfo(%struct.sm_file* %890, i32 3, i8* null)
  %cmp1338 = icmp eq i32 %888, %call1337
  br i1 %cmp1338, label %if.then.1340, label %if.end.1359

if.then.1340:                                     ; preds = %lor.lhs.false.1334, %land.lhs.true.1328, %if.end.1318
  %891 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp1341 = getelementptr inbounds %struct.envelope, %struct.envelope* %891, i32 0, i32 33
  %892 = load %struct.sm_file*, %struct.sm_file** %e_lockfp1341, align 8, !tbaa !45
  %cmp1342 = icmp eq %struct.sm_file* %892, null
  br i1 %cmp1342, label %if.then.1344, label %if.else.1350

if.then.1344:                                     ; preds = %if.then.1340
  %893 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1345 = getelementptr inbounds %struct.envelope, %struct.envelope* %893, i32 0, i32 3
  %894 = load i8*, i8** %e_to1345, align 8, !tbaa !62
  %call1346 = call i8* @shortenstring(i8* %894, i64 203)
  %895 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1347 = getelementptr inbounds %struct.mailer, %struct.mailer* %895, i32 0, i32 0
  %896 = load i8*, i8** %m_name1347, align 8, !tbaa !63
  %arrayidx1348 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %897 = load i32, i32* %arrayidx1348, align 4, !tbaa !5
  %arrayidx1349 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %898 = load i32, i32* %arrayidx1349, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.231, i32 0, i32 0), i8* %call1346, i8* %896, i32 %897, i32 %898)
  br label %if.end.1358

if.else.1350:                                     ; preds = %if.then.1340
  %899 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1351 = getelementptr inbounds %struct.envelope, %struct.envelope* %899, i32 0, i32 3
  %900 = load i8*, i8** %e_to1351, align 8, !tbaa !62
  %call1352 = call i8* @shortenstring(i8* %900, i64 203)
  %901 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1353 = getelementptr inbounds %struct.mailer, %struct.mailer* %901, i32 0, i32 0
  %902 = load i8*, i8** %m_name1353, align 8, !tbaa !63
  %arrayidx1354 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %903 = load i32, i32* %arrayidx1354, align 4, !tbaa !5
  %arrayidx1355 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %904 = load i32, i32* %arrayidx1355, align 4, !tbaa !5
  %905 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp1356 = getelementptr inbounds %struct.envelope, %struct.envelope* %905, i32 0, i32 33
  %906 = load %struct.sm_file*, %struct.sm_file** %e_lockfp1356, align 8, !tbaa !45
  %call1357 = call i32 @sm_io_getinfo(%struct.sm_file* %906, i32 3, i8* null)
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.232, i32 0, i32 0), i8* %call1352, i8* %902, i32 %903, i32 %904, i32 %call1357)
  br label %if.end.1358

if.end.1358:                                      ; preds = %if.else.1350, %if.then.1344
  br label %if.end.1359

if.end.1359:                                      ; preds = %if.end.1358, %lor.lhs.false.1334, %lor.lhs.false.1325
  %arraydecay1360 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i32 0
  %call1361 = call i32 @pipe(i32* %arraydecay1360) #1
  %cmp1362 = icmp slt i32 %call1361, 0
  br i1 %cmp1362, label %if.then.1364, label %if.end.1379

if.then.1364:                                     ; preds = %if.end.1359
  %907 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1365 = getelementptr inbounds %struct.envelope, %struct.envelope* %907, i32 0, i32 3
  %908 = load i8*, i8** %e_to1365, align 8, !tbaa !62
  %call1366 = call i8* @shortenstring(i8* %908, i64 203)
  %909 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1367 = getelementptr inbounds %struct.mailer, %struct.mailer* %909, i32 0, i32 0
  %910 = load i8*, i8** %m_name1367, align 8, !tbaa !63
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.233, i32 0, i32 0), i8* %call1366, i8* %910)
  %arrayidx1368 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %911 = load i32, i32* %arrayidx1368, align 4, !tbaa !5
  %call1369 = call i32 @close(i32 %911)
  %arrayidx1370 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %912 = load i32, i32* %arrayidx1370, align 4, !tbaa !5
  %call1371 = call i32 @close(i32 %912)
  %913 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1372 = zext i8 %913 to i32
  %cmp1373 = icmp sge i32 %conv1372, 1
  br i1 %cmp1373, label %land.lhs.true.1375, label %if.end.1378

land.lhs.true.1375:                               ; preds = %if.then.1364
  %914 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1376 = icmp ne i32 %914, 0
  br i1 %tobool1376, label %if.end.1378, label %if.then.1377

if.then.1377:                                     ; preds = %land.lhs.true.1375
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.227, i32 0, i32 0))
  br label %if.end.1378

if.end.1378:                                      ; preds = %if.then.1377, %land.lhs.true.1375, %if.then.1364
  store i32 71, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.1379:                                      ; preds = %if.end.1359
  %arrayidx1380 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 0
  %915 = load i32, i32* %arrayidx1380, align 4, !tbaa !5
  call void @checkfdopen(i32 %915, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.234, i32 0, i32 0))
  %arrayidx1381 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 1
  %916 = load i32, i32* %arrayidx1381, align 4, !tbaa !5
  call void @checkfdopen(i32 %916, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.235, i32 0, i32 0))
  %917 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp1382 = getelementptr inbounds %struct.envelope, %struct.envelope* %917, i32 0, i32 32
  %918 = load %struct.sm_file*, %struct.sm_file** %e_xfp1382, align 8, !tbaa !46
  %cmp1383 = icmp ne %struct.sm_file* %918, null
  br i1 %cmp1383, label %if.then.1385, label %if.end.1388

if.then.1385:                                     ; preds = %if.end.1379
  %919 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp1386 = getelementptr inbounds %struct.envelope, %struct.envelope* %919, i32 0, i32 32
  %920 = load %struct.sm_file*, %struct.sm_file** %e_xfp1386, align 8, !tbaa !46
  %call1387 = call i32 @sm_io_flush(%struct.sm_file* %920, i32 -2)
  br label %if.end.1388

if.end.1388:                                      ; preds = %if.then.1385, %if.end.1379
  %call1389 = call i32 @sm_io_flush(%struct.sm_file* getelementptr inbounds ([0 x %struct.sm_file], [0 x %struct.sm_file]* @SmIoF, i32 0, i64 1), i32 -2)
  %call1390 = call void (i32)* @sm_signal(i32 17, void (i32)* null)
  %921 = bitcast i32* %i1392 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %921) #1
  store i32 5, i32* %i1392, align 4, !tbaa !5
  br label %for.cond.1393

for.cond.1393:                                    ; preds = %if.end.1407, %if.end.1388
  %922 = load i32, i32* %i1392, align 4, !tbaa !5
  %dec = add nsw i32 %922, -1
  store i32 %dec, i32* %i1392, align 4, !tbaa !5
  %cmp1394 = icmp sge i32 %dec, 0
  br i1 %cmp1394, label %for.body.1396, label %for.end.1408

for.body.1396:                                    ; preds = %for.cond.1393
  %call1397 = call i32 @fork() #1
  store volatile i32 %call1397, i32* %pid, align 4, !tbaa !5
  %923 = load volatile i32, i32* %pid, align 4, !tbaa !5
  %cmp1398 = icmp sge i32 %923, 0
  br i1 %cmp1398, label %if.then.1400, label %if.end.1401

if.then.1400:                                     ; preds = %for.body.1396
  br label %for.end.1408

if.end.1401:                                      ; preds = %for.body.1396
  %924 = load i32, i32* %i1392, align 4, !tbaa !5
  %cmp1402 = icmp sgt i32 %924, 0
  br i1 %cmp1402, label %if.then.1404, label %if.end.1407

if.then.1404:                                     ; preds = %if.end.1401
  %925 = load i32, i32* %i1392, align 4, !tbaa !5
  %sub1405 = sub i32 5, %925
  %call1406 = call i32 @sleep(i32 %sub1405)
  br label %if.end.1407

if.end.1407:                                      ; preds = %if.then.1404, %if.end.1401
  br label %for.cond.1393

for.end.1408:                                     ; preds = %if.then.1400, %for.cond.1393
  %926 = bitcast i32* %i1392 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %926) #1
  %927 = load volatile i32, i32* %pid, align 4, !tbaa !5
  %cmp1409 = icmp slt i32 %927, 0
  br i1 %cmp1409, label %if.then.1411, label %if.else.1430

if.then.1411:                                     ; preds = %for.end.1408
  %928 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1412 = getelementptr inbounds %struct.envelope, %struct.envelope* %928, i32 0, i32 3
  %929 = load i8*, i8** %e_to1412, align 8, !tbaa !62
  %call1413 = call i8* @shortenstring(i8* %929, i64 203)
  %930 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1414 = getelementptr inbounds %struct.mailer, %struct.mailer* %930, i32 0, i32 0
  %931 = load i8*, i8** %m_name1414, align 8, !tbaa !63
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.236, i32 0, i32 0), i8* %call1413, i8* %931)
  %arrayidx1415 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %932 = load i32, i32* %arrayidx1415, align 4, !tbaa !5
  %call1416 = call i32 @close(i32 %932)
  %arrayidx1417 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %933 = load i32, i32* %arrayidx1417, align 4, !tbaa !5
  %call1418 = call i32 @close(i32 %933)
  %arrayidx1419 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 0
  %934 = load i32, i32* %arrayidx1419, align 4, !tbaa !5
  %call1420 = call i32 @close(i32 %934)
  %arrayidx1421 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 1
  %935 = load i32, i32* %arrayidx1421, align 4, !tbaa !5
  %call1422 = call i32 @close(i32 %935)
  %936 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1423 = zext i8 %936 to i32
  %cmp1424 = icmp sge i32 %conv1423, 1
  br i1 %cmp1424, label %land.lhs.true.1426, label %if.end.1429

land.lhs.true.1426:                               ; preds = %if.then.1411
  %937 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1427 = icmp ne i32 %937, 0
  br i1 %tobool1427, label %if.end.1429, label %if.then.1428

if.then.1428:                                     ; preds = %land.lhs.true.1426
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.227, i32 0, i32 0))
  br label %if.end.1429

if.end.1429:                                      ; preds = %if.then.1428, %land.lhs.true.1426, %if.then.1411
  store i32 71, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.else.1430:                                     ; preds = %for.end.1408
  %938 = load volatile i32, i32* %pid, align 4, !tbaa !5
  %cmp1431 = icmp eq i32 %938, 0
  br i1 %cmp1431, label %if.then.1433, label %if.end.1841

if.then.1433:                                     ; preds = %if.else.1430
  %939 = bitcast i32* %save_errno to i8*
  call void @llvm.lifetime.start(i64 4, i8* %939) #1
  %940 = bitcast i32* %sff to i8*
  call void @llvm.lifetime.start(i64 4, i8* %940) #1
  %941 = bitcast i32* %new_euid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %941) #1
  store i32 -1, i32* %new_euid, align 4, !tbaa !5
  %942 = bitcast i32* %new_ruid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %942) #1
  store i32 -1, i32* %new_ruid, align 4, !tbaa !5
  %943 = bitcast i32* %new_gid to i8*
  call void @llvm.lifetime.start(i64 4, i8* %943) #1
  store i32 -1, i32* %new_gid, align 4, !tbaa !5
  %944 = bitcast i8** %user1440 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %944) #1
  store i8* null, i8** %user1440, align 8, !tbaa !1
  %945 = bitcast %struct.stat* %stb to i8*
  call void @llvm.lifetime.start(i64 144, i8* %945) #1
  %call1442 = call i32 @getpid() #1
  store i32 %call1442, i32* @CurrentPid, align 4, !tbaa !5
  call void @sm_clear_events()
  store volatile i8* null, i8** @RestartRequest, align 8, !tbaa !1
  store volatile i32 0, i32* @RestartWorkGroup, align 4, !tbaa !5
  store volatile i8* null, i8** @ShutdownRequest, align 8, !tbaa !1
  store volatile i32 0, i32* @PendingSignal, align 4, !tbaa !5
  %946 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp1443 = getelementptr inbounds %struct.envelope, %struct.envelope* %946, i32 0, i32 33
  %947 = load %struct.sm_file*, %struct.sm_file** %e_lockfp1443, align 8, !tbaa !45
  %cmp1444 = icmp ne %struct.sm_file* %947, null
  br i1 %cmp1444, label %if.then.1446, label %if.end.1450

if.then.1446:                                     ; preds = %if.then.1433
  %948 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_lockfp1447 = getelementptr inbounds %struct.envelope, %struct.envelope* %948, i32 0, i32 33
  %949 = load %struct.sm_file*, %struct.sm_file** %e_lockfp1447, align 8, !tbaa !45
  %call1448 = call i32 @sm_io_getinfo(%struct.sm_file* %949, i32 3, i8* null)
  %call1449 = call i32 @close(i32 %call1448)
  br label %if.end.1450

if.end.1450:                                      ; preds = %if.then.1446, %if.then.1433
  %call1451 = call void (i32)* @sm_signal(i32 14, void (i32)* @sm_signal_noop)
  %call1452 = call void (i32)* @sm_signal(i32 17, void (i32)* null)
  %call1453 = call void (i32)* @sm_signal(i32 1, void (i32)* inttoptr (i64 1 to void (i32)*))
  %call1454 = call void (i32)* @sm_signal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*))
  %call1455 = call void (i32)* @sm_signal(i32 15, void (i32)* null)
  %call1456 = call void (i32)* @sm_signal(i32 10, void (i32)* @sm_signal_noop)
  %950 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %951 = load %struct.mailer*, %struct.mailer** @FileMailer, align 8, !tbaa !1
  %cmp1457 = icmp ne %struct.mailer* %950, %951
  br i1 %cmp1457, label %if.then.1464, label %lor.lhs.false.1459

lor.lhs.false.1459:                               ; preds = %if.end.1450
  %952 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  %q_user1460 = getelementptr inbounds %struct.address, %struct.address* %952, i32 0, i32 1
  %953 = load i8*, i8** %q_user1460, align 8, !tbaa !64
  %call1461 = call i32 @stat(i8* %953, %struct.stat* %stb) #1
  %cmp1462 = icmp slt i32 %call1461, 0
  br i1 %cmp1462, label %if.then.1464, label %if.end.1465

if.then.1464:                                     ; preds = %lor.lhs.false.1459, %if.end.1450
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 3
  store i32 0, i32* %st_mode, align 4, !tbaa !102
  br label %if.end.1465

if.end.1465:                                      ; preds = %if.then.1464, %lor.lhs.false.1459
  %954 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_nice = getelementptr inbounds %struct.mailer, %struct.mailer* %954, i32 0, i32 7
  %955 = load i16, i16* %m_nice, align 2, !tbaa !141
  %conv1466 = sext i16 %955 to i32
  %cmp1467 = icmp ne i32 %conv1466, 0
  br i1 %cmp1467, label %if.then.1469, label %if.end.1473

if.then.1469:                                     ; preds = %if.end.1465
  %956 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_nice1470 = getelementptr inbounds %struct.mailer, %struct.mailer* %956, i32 0, i32 7
  %957 = load i16, i16* %m_nice1470, align 2, !tbaa !141
  %conv1471 = sext i16 %957 to i32
  %call1472 = call i32 @nice(i32 %conv1471) #1
  br label %if.end.1473

if.end.1473:                                      ; preds = %if.then.1469, %if.end.1465
  %958 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1474 = getelementptr inbounds %struct.mailer, %struct.mailer* %958, i32 0, i32 5
  %arrayidx1475 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1474, i32 0, i64 2
  %959 = load i32, i32* %arrayidx1475, align 4, !tbaa !5
  %and1476 = and i32 %959, 524288
  %tobool1477 = icmp ne i32 %and1476, 0
  br i1 %tobool1477, label %if.then.1478, label %if.else.1485

if.then.1478:                                     ; preds = %if.end.1473
  %960 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_gid = getelementptr inbounds %struct.mailer, %struct.mailer* %960, i32 0, i32 20
  %961 = load i32, i32* %m_gid, align 4, !tbaa !106
  %cmp1479 = icmp eq i32 %961, -1
  br i1 %cmp1479, label %if.then.1481, label %if.else.1482

if.then.1481:                                     ; preds = %if.then.1478
  %962 = load i32, i32* @RunAsGid, align 4, !tbaa !5
  store i32 %962, i32* %new_gid, align 4, !tbaa !5
  br label %if.end.1484

if.else.1482:                                     ; preds = %if.then.1478
  %963 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_gid1483 = getelementptr inbounds %struct.mailer, %struct.mailer* %963, i32 0, i32 20
  %964 = load i32, i32* %m_gid1483, align 4, !tbaa !106
  store i32 %964, i32* %new_gid, align 4, !tbaa !5
  br label %if.end.1484

if.end.1484:                                      ; preds = %if.else.1482, %if.then.1481
  br label %if.end.1562

if.else.1485:                                     ; preds = %if.end.1473
  %st_mode1486 = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 3
  %965 = load i32, i32* %st_mode1486, align 4, !tbaa !102
  %and1487 = and i32 %965, 1024
  %cmp1488 = icmp ne i32 %and1487, 0
  br i1 %cmp1488, label %if.then.1490, label %if.else.1491

if.then.1490:                                     ; preds = %if.else.1485
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 5
  %966 = load i32, i32* %st_gid, align 4, !tbaa !107
  store i32 %966, i32* %new_gid, align 4, !tbaa !5
  br label %if.end.1561

if.else.1491:                                     ; preds = %if.else.1485
  %967 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %cmp1492 = icmp ne %struct.address* %967, null
  br i1 %cmp1492, label %land.lhs.true.1494, label %if.else.1529

land.lhs.true.1494:                               ; preds = %if.else.1491
  %968 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_gid = getelementptr inbounds %struct.address, %struct.address* %968, i32 0, i32 7
  %969 = load i32, i32* %q_gid, align 4, !tbaa !84
  %cmp1495 = icmp ne i32 %969, 0
  br i1 %cmp1495, label %if.then.1497, label %if.else.1529

if.then.1497:                                     ; preds = %land.lhs.true.1494
  %970 = load i32, i32* @DontInitGroups, align 4, !tbaa !5
  %tobool1498 = icmp ne i32 %970, 0
  br i1 %tobool1498, label %if.else.1515, label %if.then.1499

if.then.1499:                                     ; preds = %if.then.1497
  %971 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_ruser = getelementptr inbounds %struct.address, %struct.address* %971, i32 0, i32 2
  %972 = load i8*, i8** %q_ruser, align 8, !tbaa !105
  store i8* %972, i8** %user1440, align 8, !tbaa !1
  %973 = load i8*, i8** %user1440, align 8, !tbaa !1
  %cmp1500 = icmp eq i8* %973, null
  br i1 %cmp1500, label %if.then.1502, label %if.end.1504

if.then.1502:                                     ; preds = %if.then.1499
  %974 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_user1503 = getelementptr inbounds %struct.address, %struct.address* %974, i32 0, i32 1
  %975 = load i8*, i8** %q_user1503, align 8, !tbaa !64
  store i8* %975, i8** %user1440, align 8, !tbaa !1
  br label %if.end.1504

if.end.1504:                                      ; preds = %if.then.1502, %if.then.1499
  %976 = load i8*, i8** %user1440, align 8, !tbaa !1
  %977 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_gid1505 = getelementptr inbounds %struct.address, %struct.address* %977, i32 0, i32 7
  %978 = load i32, i32* %q_gid1505, align 4, !tbaa !84
  %call1506 = call i32 @initgroups(i8* %976, i32 %978)
  %cmp1507 = icmp eq i32 %call1506, -1
  br i1 %cmp1507, label %land.lhs.true.1509, label %if.end.1514

land.lhs.true.1509:                               ; preds = %if.end.1504
  %979 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool1510 = icmp ne i32 %979, 0
  br i1 %tobool1510, label %if.then.1511, label %if.end.1514

if.then.1511:                                     ; preds = %land.lhs.true.1509
  %980 = load i8*, i8** %user1440, align 8, !tbaa !1
  %981 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_gid1512 = getelementptr inbounds %struct.address, %struct.address* %981, i32 0, i32 7
  %982 = load i32, i32* %q_gid1512, align 4, !tbaa !84
  %conv1513 = zext i32 %982 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.237, i32 0, i32 0), i8* %980, i64 %conv1513)
  call void @exit(i32 75) #13
  unreachable

if.end.1514:                                      ; preds = %land.lhs.true.1509, %if.end.1504
  br label %if.end.1527

if.else.1515:                                     ; preds = %if.then.1497
  %983 = bitcast [1 x i32]* %gidset to i8*
  call void @llvm.lifetime.start(i64 4, i8* %983) #1
  %984 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_gid1517 = getelementptr inbounds %struct.address, %struct.address* %984, i32 0, i32 7
  %985 = load i32, i32* %q_gid1517, align 4, !tbaa !84
  %arrayidx1518 = getelementptr inbounds [1 x i32], [1 x i32]* %gidset, i32 0, i64 0
  store i32 %985, i32* %arrayidx1518, align 4, !tbaa !5
  %arraydecay1519 = getelementptr inbounds [1 x i32], [1 x i32]* %gidset, i32 0, i32 0
  %call1520 = call i32 @setgroups(i64 1, i32* %arraydecay1519) #1
  %cmp1521 = icmp eq i32 %call1520, -1
  br i1 %cmp1521, label %land.lhs.true.1523, label %if.end.1526

land.lhs.true.1523:                               ; preds = %if.else.1515
  %986 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool1524 = icmp ne i32 %986, 0
  br i1 %tobool1524, label %if.then.1525, label %if.end.1526

if.then.1525:                                     ; preds = %land.lhs.true.1523
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.238, i32 0, i32 0))
  call void @exit(i32 75) #13
  unreachable

if.end.1526:                                      ; preds = %land.lhs.true.1523, %if.else.1515
  %987 = bitcast [1 x i32]* %gidset to i8*
  call void @llvm.lifetime.end(i64 4, i8* %987) #1
  br label %if.end.1527

if.end.1527:                                      ; preds = %if.end.1526, %if.end.1514
  %988 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_gid1528 = getelementptr inbounds %struct.address, %struct.address* %988, i32 0, i32 7
  %989 = load i32, i32* %q_gid1528, align 4, !tbaa !84
  store i32 %989, i32* %new_gid, align 4, !tbaa !5
  br label %if.end.1560

if.else.1529:                                     ; preds = %land.lhs.true.1494, %if.else.1491
  %990 = load i32, i32* @DontInitGroups, align 4, !tbaa !5
  %tobool1530 = icmp ne i32 %990, 0
  br i1 %tobool1530, label %if.else.1540, label %if.then.1531

if.then.1531:                                     ; preds = %if.else.1529
  %991 = load i8*, i8** @DefUser, align 8, !tbaa !1
  store i8* %991, i8** %user1440, align 8, !tbaa !1
  %992 = load i8*, i8** @DefUser, align 8, !tbaa !1
  %993 = load i32, i32* @DefGid, align 4, !tbaa !5
  %call1532 = call i32 @initgroups(i8* %992, i32 %993)
  %cmp1533 = icmp eq i32 %call1532, -1
  br i1 %cmp1533, label %land.lhs.true.1535, label %if.end.1539

land.lhs.true.1535:                               ; preds = %if.then.1531
  %994 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool1536 = icmp ne i32 %994, 0
  br i1 %tobool1536, label %if.then.1537, label %if.end.1539

if.then.1537:                                     ; preds = %land.lhs.true.1535
  %995 = load i8*, i8** @DefUser, align 8, !tbaa !1
  %996 = load i32, i32* @DefGid, align 4, !tbaa !5
  %conv1538 = zext i32 %996 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.237, i32 0, i32 0), i8* %995, i64 %conv1538)
  call void @exit(i32 75) #13
  unreachable

if.end.1539:                                      ; preds = %land.lhs.true.1535, %if.then.1531
  br label %if.end.1552

if.else.1540:                                     ; preds = %if.else.1529
  %997 = bitcast [1 x i32]* %gidset1542 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %997) #1
  %998 = load i32, i32* @DefGid, align 4, !tbaa !5
  %arrayidx1543 = getelementptr inbounds [1 x i32], [1 x i32]* %gidset1542, i32 0, i64 0
  store i32 %998, i32* %arrayidx1543, align 4, !tbaa !5
  %arraydecay1544 = getelementptr inbounds [1 x i32], [1 x i32]* %gidset1542, i32 0, i32 0
  %call1545 = call i32 @setgroups(i64 1, i32* %arraydecay1544) #1
  %cmp1546 = icmp eq i32 %call1545, -1
  br i1 %cmp1546, label %land.lhs.true.1548, label %if.end.1551

land.lhs.true.1548:                               ; preds = %if.else.1540
  %999 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool1549 = icmp ne i32 %999, 0
  br i1 %tobool1549, label %if.then.1550, label %if.end.1551

if.then.1550:                                     ; preds = %land.lhs.true.1548
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.238, i32 0, i32 0))
  call void @exit(i32 75) #13
  unreachable

if.end.1551:                                      ; preds = %land.lhs.true.1548, %if.else.1540
  %1000 = bitcast [1 x i32]* %gidset1542 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1000) #1
  br label %if.end.1552

if.end.1552:                                      ; preds = %if.end.1551, %if.end.1539
  %1001 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_gid1553 = getelementptr inbounds %struct.mailer, %struct.mailer* %1001, i32 0, i32 20
  %1002 = load i32, i32* %m_gid1553, align 4, !tbaa !106
  %cmp1554 = icmp eq i32 %1002, -1
  br i1 %cmp1554, label %if.then.1556, label %if.else.1557

if.then.1556:                                     ; preds = %if.end.1552
  %1003 = load i32, i32* @DefGid, align 4, !tbaa !5
  store i32 %1003, i32* %new_gid, align 4, !tbaa !5
  br label %if.end.1559

if.else.1557:                                     ; preds = %if.end.1552
  %1004 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_gid1558 = getelementptr inbounds %struct.mailer, %struct.mailer* %1004, i32 0, i32 20
  %1005 = load i32, i32* %m_gid1558, align 4, !tbaa !106
  store i32 %1005, i32* %new_gid, align 4, !tbaa !5
  br label %if.end.1559

if.end.1559:                                      ; preds = %if.else.1557, %if.then.1556
  br label %if.end.1560

if.end.1560:                                      ; preds = %if.end.1559, %if.end.1527
  br label %if.end.1561

if.end.1561:                                      ; preds = %if.end.1560, %if.then.1490
  br label %if.end.1562

if.end.1562:                                      ; preds = %if.end.1561, %if.end.1484
  %1006 = load i32, i32* %new_gid, align 4, !tbaa !5
  %cmp1563 = icmp ne i32 %1006, -1
  br i1 %cmp1563, label %if.then.1565, label %if.end.1597

if.then.1565:                                     ; preds = %if.end.1562
  %1007 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %cmp1566 = icmp ne i32 %1007, 0
  br i1 %cmp1566, label %land.lhs.true.1568, label %if.end.1588

land.lhs.true.1568:                               ; preds = %if.then.1565
  %1008 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1569 = getelementptr inbounds %struct.mailer, %struct.mailer* %1008, i32 0, i32 5
  %arrayidx1570 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1569, i32 0, i64 2
  %1009 = load i32, i32* %arrayidx1570, align 4, !tbaa !5
  %and1571 = and i32 %1009, 524288
  %tobool1572 = icmp ne i32 %and1571, 0
  br i1 %tobool1572, label %land.lhs.true.1573, label %if.end.1588

land.lhs.true.1573:                               ; preds = %land.lhs.true.1568
  %1010 = load i32, i32* %new_gid, align 4, !tbaa !5
  %call1574 = call i32 @getgid() #1
  %cmp1575 = icmp ne i32 %1010, %call1574
  br i1 %cmp1575, label %land.lhs.true.1577, label %if.end.1588

land.lhs.true.1577:                               ; preds = %land.lhs.true.1573
  %1011 = load i32, i32* %new_gid, align 4, !tbaa !5
  %call1578 = call i32 @getegid() #1
  %cmp1579 = icmp ne i32 %1011, %call1578
  br i1 %cmp1579, label %if.then.1581, label %if.end.1588

if.then.1581:                                     ; preds = %land.lhs.true.1577
  %1012 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %conv1582 = zext i32 %1012 to i64
  %1013 = load i32, i32* %new_gid, align 4, !tbaa !5
  %conv1583 = sext i32 %1013 to i64
  %call1584 = call i32 @getgid() #1
  %conv1585 = zext i32 %call1584 to i64
  %call1586 = call i32 @getegid() #1
  %conv1587 = zext i32 %call1586 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.239, i32 0, i32 0), i64 %conv1582, i64 %conv1583, i64 %conv1585, i64 %conv1587)
  call void @exit(i32 75) #13
  unreachable

if.end.1588:                                      ; preds = %land.lhs.true.1577, %land.lhs.true.1573, %land.lhs.true.1568, %if.then.1565
  %1014 = load i32, i32* %new_gid, align 4, !tbaa !5
  %call1589 = call i32 @setgid(i32 %1014) #1
  %cmp1590 = icmp slt i32 %call1589, 0
  br i1 %cmp1590, label %land.lhs.true.1592, label %if.end.1596

land.lhs.true.1592:                               ; preds = %if.end.1588
  %1015 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool1593 = icmp ne i32 %1015, 0
  br i1 %tobool1593, label %if.then.1594, label %if.end.1596

if.then.1594:                                     ; preds = %land.lhs.true.1592
  %1016 = load i32, i32* %new_gid, align 4, !tbaa !5
  %conv1595 = sext i32 %1016 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.240, i32 0, i32 0), i64 %conv1595)
  call void @exit(i32 75) #13
  unreachable

if.end.1596:                                      ; preds = %land.lhs.true.1592, %if.end.1588
  br label %if.end.1597

if.end.1597:                                      ; preds = %if.end.1596, %if.end.1562
  %1017 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_rootdir = getelementptr inbounds %struct.mailer, %struct.mailer* %1017, i32 0, i32 18
  %1018 = load i8*, i8** %m_rootdir, align 8, !tbaa !100
  %cmp1598 = icmp ne i8* %1018, null
  br i1 %cmp1598, label %if.then.1600, label %if.end.1623

if.then.1600:                                     ; preds = %if.end.1597
  %1019 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_rootdir1601 = getelementptr inbounds %struct.mailer, %struct.mailer* %1019, i32 0, i32 18
  %1020 = load i8*, i8** %m_rootdir1601, align 8, !tbaa !100
  %arraydecay1602 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i32 0
  %1021 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %1020, i8* %arraydecay1602, i64 4096, %struct.envelope* %1021)
  %1022 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1603 = zext i8 %1022 to i32
  %cmp1604 = icmp sge i32 %conv1603, 20
  br i1 %cmp1604, label %land.lhs.true.1606, label %if.end.1610

land.lhs.true.1606:                               ; preds = %if.then.1600
  %1023 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1607 = icmp ne i32 %1023, 0
  br i1 %tobool1607, label %if.end.1610, label %if.then.1608

if.then.1608:                                     ; preds = %land.lhs.true.1606
  %arraydecay1609 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i32 0
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.241, i32 0, i32 0), i8* %arraydecay1609)
  br label %if.end.1610

if.end.1610:                                      ; preds = %if.then.1608, %land.lhs.true.1606, %if.then.1600
  %arraydecay1611 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i32 0
  %call1612 = call i32 @chroot(i8* %arraydecay1611) #1
  %cmp1613 = icmp slt i32 %call1612, 0
  br i1 %cmp1613, label %if.then.1615, label %if.end.1617

if.then.1615:                                     ; preds = %if.end.1610
  %arraydecay1616 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i32 0
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.242, i32 0, i32 0), i8* %arraydecay1616)
  call void @exit(i32 75) #13
  unreachable

if.end.1617:                                      ; preds = %if.end.1610
  %call1618 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0)) #1
  %cmp1619 = icmp slt i32 %call1618, 0
  br i1 %cmp1619, label %if.then.1621, label %if.end.1622

if.then.1621:                                     ; preds = %if.end.1617
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.243, i32 0, i32 0))
  call void @exit(i32 75) #13
  unreachable

if.end.1622:                                      ; preds = %if.end.1617
  br label %if.end.1623

if.end.1623:                                      ; preds = %if.end.1622, %if.end.1597
  call void @endpwent()
  call void @sm_mbdb_terminate()
  %1024 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1624 = getelementptr inbounds %struct.mailer, %struct.mailer* %1024, i32 0, i32 5
  %arrayidx1625 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1624, i32 0, i64 2
  %1025 = load i32, i32* %arrayidx1625, align 4, !tbaa !5
  %and1626 = and i32 %1025, 524288
  %tobool1627 = icmp ne i32 %and1626, 0
  br i1 %tobool1627, label %if.then.1628, label %if.else.1643

if.then.1628:                                     ; preds = %if.end.1623
  %1026 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_uid = getelementptr inbounds %struct.mailer, %struct.mailer* %1026, i32 0, i32 19
  %1027 = load i32, i32* %m_uid, align 4, !tbaa !103
  %cmp1629 = icmp eq i32 %1027, -1
  br i1 %cmp1629, label %if.then.1631, label %if.else.1632

if.then.1631:                                     ; preds = %if.then.1628
  %1028 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  store i32 %1028, i32* %new_euid, align 4, !tbaa !5
  br label %if.end.1634

if.else.1632:                                     ; preds = %if.then.1628
  %1029 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_uid1633 = getelementptr inbounds %struct.mailer, %struct.mailer* %1029, i32 0, i32 19
  %1030 = load i32, i32* %m_uid1633, align 4, !tbaa !103
  store i32 %1030, i32* %new_euid, align 4, !tbaa !5
  br label %if.end.1634

if.end.1634:                                      ; preds = %if.else.1632, %if.then.1631
  %1031 = load i32, i32* @RealUid, align 4, !tbaa !5
  %cmp1635 = icmp ne i32 %1031, 0
  br i1 %cmp1635, label %land.lhs.true.1637, label %if.end.1642

land.lhs.true.1637:                               ; preds = %if.end.1634
  %1032 = load i32, i32* @RealUid, align 4, !tbaa !5
  %call1638 = call i32 @getuid() #1
  %cmp1639 = icmp ne i32 %1032, %call1638
  br i1 %cmp1639, label %if.then.1641, label %if.end.1642

if.then.1641:                                     ; preds = %land.lhs.true.1637
  %1033 = load i32, i32* @RealUid, align 4, !tbaa !5
  store i32 %1033, i32* %new_ruid, align 4, !tbaa !5
  br label %if.end.1642

if.end.1642:                                      ; preds = %if.then.1641, %land.lhs.true.1637, %if.end.1634
  br label %if.end.1667

if.else.1643:                                     ; preds = %if.end.1623
  %st_mode1644 = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 3
  %1034 = load i32, i32* %st_mode1644, align 4, !tbaa !102
  %and1645 = and i32 %1034, 2048
  %cmp1646 = icmp ne i32 %and1645, 0
  br i1 %cmp1646, label %if.then.1648, label %if.else.1649

if.then.1648:                                     ; preds = %if.else.1643
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %stb, i32 0, i32 4
  %1035 = load i32, i32* %st_uid, align 4, !tbaa !104
  store i32 %1035, i32* %new_ruid, align 4, !tbaa !5
  br label %if.end.1666

if.else.1649:                                     ; preds = %if.else.1643
  %1036 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %cmp1650 = icmp ne %struct.address* %1036, null
  br i1 %cmp1650, label %land.lhs.true.1652, label %if.else.1657

land.lhs.true.1652:                               ; preds = %if.else.1649
  %1037 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_uid = getelementptr inbounds %struct.address, %struct.address* %1037, i32 0, i32 6
  %1038 = load i32, i32* %q_uid, align 4, !tbaa !83
  %cmp1653 = icmp ne i32 %1038, 0
  br i1 %cmp1653, label %if.then.1655, label %if.else.1657

if.then.1655:                                     ; preds = %land.lhs.true.1652
  %1039 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %q_uid1656 = getelementptr inbounds %struct.address, %struct.address* %1039, i32 0, i32 6
  %1040 = load i32, i32* %q_uid1656, align 4, !tbaa !83
  store i32 %1040, i32* %new_ruid, align 4, !tbaa !5
  br label %if.end.1665

if.else.1657:                                     ; preds = %land.lhs.true.1652, %if.else.1649
  %1041 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_uid1658 = getelementptr inbounds %struct.mailer, %struct.mailer* %1041, i32 0, i32 19
  %1042 = load i32, i32* %m_uid1658, align 4, !tbaa !103
  %cmp1659 = icmp ne i32 %1042, -1
  br i1 %cmp1659, label %if.then.1661, label %if.else.1663

if.then.1661:                                     ; preds = %if.else.1657
  %1043 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_uid1662 = getelementptr inbounds %struct.mailer, %struct.mailer* %1043, i32 0, i32 19
  %1044 = load i32, i32* %m_uid1662, align 4, !tbaa !103
  store i32 %1044, i32* %new_ruid, align 4, !tbaa !5
  br label %if.end.1664

if.else.1663:                                     ; preds = %if.else.1657
  %1045 = load i32, i32* @DefUid, align 4, !tbaa !5
  store i32 %1045, i32* %new_ruid, align 4, !tbaa !5
  br label %if.end.1664

if.end.1664:                                      ; preds = %if.else.1663, %if.then.1661
  br label %if.end.1665

if.end.1665:                                      ; preds = %if.end.1664, %if.then.1655
  br label %if.end.1666

if.end.1666:                                      ; preds = %if.end.1665, %if.then.1648
  br label %if.end.1667

if.end.1667:                                      ; preds = %if.end.1666, %if.end.1642
  %1046 = load i32, i32* %new_euid, align 4, !tbaa !5
  %cmp1668 = icmp ne i32 %1046, -1
  br i1 %cmp1668, label %if.then.1670, label %if.else.1689

if.then.1670:                                     ; preds = %if.end.1667
  %1047 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %cmp1671 = icmp ne i32 %1047, 0
  br i1 %cmp1671, label %land.lhs.true.1673, label %if.end.1679

land.lhs.true.1673:                               ; preds = %if.then.1670
  %1048 = load i32, i32* %new_euid, align 4, !tbaa !5
  %1049 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %cmp1674 = icmp ne i32 %1048, %1049
  br i1 %cmp1674, label %if.then.1676, label %if.end.1679

if.then.1676:                                     ; preds = %land.lhs.true.1673
  %1050 = load i32, i32* %new_euid, align 4, !tbaa !5
  %conv1677 = sext i32 %1050 to i64
  %1051 = load i32, i32* @RunAsUid, align 4, !tbaa !5
  %conv1678 = zext i32 %1051 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.244, i32 0, i32 0), i64 %conv1677, i64 %conv1678)
  call void @exit(i32 75) #13
  unreachable

if.end.1679:                                      ; preds = %land.lhs.true.1673, %if.then.1670
  %1052 = load i32, i32* %new_euid, align 4, !tbaa !5
  call void @vendor_set_uid(i32 %1052)
  %1053 = load i32, i32* %new_ruid, align 4, !tbaa !5
  %1054 = load i32, i32* %new_euid, align 4, !tbaa !5
  %call1680 = call i32 @setreuid(i32 %1053, i32 %1054) #1
  %cmp1681 = icmp slt i32 %call1680, 0
  br i1 %cmp1681, label %land.lhs.true.1683, label %if.end.1688

land.lhs.true.1683:                               ; preds = %if.end.1679
  %1055 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool1684 = icmp ne i32 %1055, 0
  br i1 %tobool1684, label %if.then.1685, label %if.end.1688

if.then.1685:                                     ; preds = %land.lhs.true.1683
  %1056 = load i32, i32* %new_ruid, align 4, !tbaa !5
  %conv1686 = sext i32 %1056 to i64
  %1057 = load i32, i32* %new_euid, align 4, !tbaa !5
  %conv1687 = sext i32 %1057 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.245, i32 0, i32 0), i64 %conv1686, i64 %conv1687)
  call void @exit(i32 75) #13
  unreachable

if.end.1688:                                      ; preds = %land.lhs.true.1683, %if.end.1679
  br label %if.end.1702

if.else.1689:                                     ; preds = %if.end.1667
  %1058 = load i32, i32* %new_ruid, align 4, !tbaa !5
  %cmp1690 = icmp ne i32 %1058, -1
  br i1 %cmp1690, label %if.then.1692, label %if.end.1701

if.then.1692:                                     ; preds = %if.else.1689
  %1059 = load i32, i32* %new_ruid, align 4, !tbaa !5
  call void @vendor_set_uid(i32 %1059)
  %1060 = load i32, i32* %new_ruid, align 4, !tbaa !5
  %call1693 = call i32 @setuid(i32 %1060) #1
  %cmp1694 = icmp slt i32 %call1693, 0
  br i1 %cmp1694, label %land.lhs.true.1696, label %if.end.1700

land.lhs.true.1696:                               ; preds = %if.then.1692
  %1061 = load i32, i32* %suidwarn, align 4, !tbaa !5
  %tobool1697 = icmp ne i32 %1061, 0
  br i1 %tobool1697, label %if.then.1698, label %if.end.1700

if.then.1698:                                     ; preds = %land.lhs.true.1696
  %1062 = load i32, i32* %new_ruid, align 4, !tbaa !5
  %conv1699 = sext i32 %1062 to i64
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.246, i32 0, i32 0), i64 %conv1699)
  call void @exit(i32 75) #13
  unreachable

if.end.1700:                                      ; preds = %land.lhs.true.1696, %if.then.1692
  br label %if.end.1701

if.end.1701:                                      ; preds = %if.end.1700, %if.else.1689
  br label %if.end.1702

if.end.1702:                                      ; preds = %if.end.1701, %if.end.1688
  %1063 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1703 = zext i8 %1063 to i32
  %cmp1704 = icmp sge i32 %conv1703, 2
  br i1 %cmp1704, label %land.lhs.true.1706, label %if.end.1717

land.lhs.true.1706:                               ; preds = %if.end.1702
  %1064 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1707 = icmp ne i32 %1064, 0
  br i1 %tobool1707, label %if.end.1717, label %if.then.1708

if.then.1708:                                     ; preds = %land.lhs.true.1706
  %call1709 = call i32 @getuid() #1
  %conv1710 = zext i32 %call1709 to i64
  %call1711 = call i32 @geteuid() #1
  %conv1712 = zext i32 %call1711 to i64
  %call1713 = call i32 @getgid() #1
  %conv1714 = zext i32 %call1713 to i64
  %call1715 = call i32 @getegid() #1
  %conv1716 = zext i32 %call1715 to i64
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.247, i32 0, i32 0), i64 %conv1710, i64 %conv1712, i64 %conv1714, i64 %conv1716)
  br label %if.end.1717

if.end.1717:                                      ; preds = %if.then.1708, %land.lhs.true.1706, %if.end.1702
  %1065 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_execdir = getelementptr inbounds %struct.mailer, %struct.mailer* %1065, i32 0, i32 17
  %1066 = load i8*, i8** %m_execdir, align 8, !tbaa !108
  %cmp1718 = icmp ne i8* %1066, null
  br i1 %cmp1718, label %if.then.1720, label %if.end.1759

if.then.1720:                                     ; preds = %if.end.1717
  %1067 = bitcast i8** %q to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1067) #1
  %1068 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_execdir1722 = getelementptr inbounds %struct.mailer, %struct.mailer* %1068, i32 0, i32 17
  %1069 = load i8*, i8** %m_execdir1722, align 8, !tbaa !108
  store i8* %1069, i8** %p, align 8, !tbaa !1
  br label %for.cond.1723

for.cond.1723:                                    ; preds = %for.inc.1757, %if.then.1720
  %1070 = load i8*, i8** %p, align 8, !tbaa !1
  %cmp1724 = icmp ne i8* %1070, null
  br i1 %cmp1724, label %for.body.1726, label %for.end.1758

for.body.1726:                                    ; preds = %for.cond.1723
  %1071 = load i8*, i8** %p, align 8, !tbaa !1
  %call1727 = call i8* @strchr(i8* %1071, i32 58) #1
  store i8* %call1727, i8** %q, align 8, !tbaa !1
  %1072 = load i8*, i8** %q, align 8, !tbaa !1
  %cmp1728 = icmp ne i8* %1072, null
  br i1 %cmp1728, label %if.then.1730, label %if.end.1731

if.then.1730:                                     ; preds = %for.body.1726
  %1073 = load i8*, i8** %q, align 8, !tbaa !1
  store i8 0, i8* %1073, align 1, !tbaa !15
  br label %if.end.1731

if.end.1731:                                      ; preds = %if.then.1730, %for.body.1726
  %1074 = load i8*, i8** %p, align 8, !tbaa !1
  %arraydecay1732 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i32 0
  %1075 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %1074, i8* %arraydecay1732, i64 4096, %struct.envelope* %1075)
  %1076 = load i8*, i8** %q, align 8, !tbaa !1
  %cmp1733 = icmp ne i8* %1076, null
  br i1 %cmp1733, label %if.then.1735, label %if.end.1737

if.then.1735:                                     ; preds = %if.end.1731
  %1077 = load i8*, i8** %q, align 8, !tbaa !1
  %incdec.ptr1736 = getelementptr inbounds i8, i8* %1077, i32 1
  store i8* %incdec.ptr1736, i8** %q, align 8, !tbaa !1
  store i8 58, i8* %1077, align 1, !tbaa !15
  br label %if.end.1737

if.end.1737:                                      ; preds = %if.then.1735, %if.end.1731
  %1078 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv1738 = zext i8 %1078 to i32
  %cmp1739 = icmp sge i32 %conv1738, 20
  br i1 %cmp1739, label %land.lhs.true.1741, label %if.end.1745

land.lhs.true.1741:                               ; preds = %if.end.1737
  %1079 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool1742 = icmp ne i32 %1079, 0
  br i1 %tobool1742, label %if.end.1745, label %if.then.1743

if.then.1743:                                     ; preds = %land.lhs.true.1741
  %arraydecay1744 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i32 0
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.248, i32 0, i32 0), i8* %arraydecay1744)
  br label %if.end.1745

if.end.1745:                                      ; preds = %if.then.1743, %land.lhs.true.1741, %if.end.1737
  %arrayidx1746 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i64 0
  %1080 = load i8, i8* %arrayidx1746, align 1, !tbaa !15
  %conv1747 = sext i8 %1080 to i32
  %cmp1748 = icmp ne i32 %conv1747, 0
  br i1 %cmp1748, label %land.lhs.true.1750, label %if.end.1756

land.lhs.true.1750:                               ; preds = %if.end.1745
  %arraydecay1751 = getelementptr inbounds [4096 x i8], [4096 x i8]* %cbuf, i32 0, i32 0
  %call1752 = call i32 @chdir(i8* %arraydecay1751) #1
  %cmp1753 = icmp sge i32 %call1752, 0
  br i1 %cmp1753, label %if.then.1755, label %if.end.1756

if.then.1755:                                     ; preds = %land.lhs.true.1750
  br label %for.end.1758

if.end.1756:                                      ; preds = %land.lhs.true.1750, %if.end.1745
  br label %for.inc.1757

for.inc.1757:                                     ; preds = %if.end.1756
  %1081 = load i8*, i8** %q, align 8, !tbaa !1
  store i8* %1081, i8** %p, align 8, !tbaa !1
  br label %for.cond.1723

for.end.1758:                                     ; preds = %if.then.1755, %for.cond.1723
  %1082 = bitcast i8** %q to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1082) #1
  br label %if.end.1759

if.end.1759:                                      ; preds = %for.end.1758, %if.end.1717
  store i32 262148, i32* %sff, align 4, !tbaa !5
  %1083 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @DontBlameSendmail, i32 0, i64 0), align 4, !tbaa !5
  %and1760 = and i32 %1083, 536870912
  %tobool1761 = icmp ne i32 %and1760, 0
  br i1 %tobool1761, label %if.end.1766, label %if.then.1762

if.then.1762:                                     ; preds = %if.end.1759
  %1084 = load i32, i32* %sff, align 4, !tbaa !5
  %conv1763 = sext i32 %1084 to i64
  %or1764 = or i64 %conv1763, 6144
  %conv1765 = trunc i64 %or1764 to i32
  store i32 %conv1765, i32* %sff, align 4, !tbaa !5
  br label %if.end.1766

if.end.1766:                                      ; preds = %if.then.1762, %if.end.1759
  %1085 = load i32, i32* getelementptr inbounds ([8 x i32], [8 x i32]* @DontBlameSendmail, i32 0, i64 0), align 4, !tbaa !5
  %and1767 = and i32 %1085, 268435456
  %tobool1768 = icmp ne i32 %and1767, 0
  br i1 %tobool1768, label %if.then.1769, label %if.else.1773

if.then.1769:                                     ; preds = %if.end.1766
  %1086 = load i32, i32* %sff, align 4, !tbaa !5
  %conv1770 = sext i32 %1086 to i64
  %or1771 = or i64 %conv1770, 16
  %conv1772 = trunc i64 %or1771 to i32
  store i32 %conv1772, i32* %sff, align 4, !tbaa !5
  br label %if.end.1777

if.else.1773:                                     ; preds = %if.end.1766
  %1087 = load i32, i32* %sff, align 4, !tbaa !5
  %conv1774 = sext i32 %1087 to i64
  %or1775 = or i64 %conv1774, 256
  %conv1776 = trunc i64 %or1775 to i32
  store i32 %conv1776, i32* %sff, align 4, !tbaa !5
  br label %if.end.1777

if.end.1777:                                      ; preds = %if.else.1773, %if.then.1769
  %1088 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer1778 = getelementptr inbounds %struct.mailer, %struct.mailer* %1088, i32 0, i32 1
  %1089 = load i8*, i8** %m_mailer1778, align 8, !tbaa !33
  %call1779 = call i32 @getuid() #1
  %call1780 = call i32 @getgid() #1
  %1090 = load i8*, i8** %user1440, align 8, !tbaa !1
  %1091 = load i32, i32* %sff, align 4, !tbaa !5
  %conv1781 = sext i32 %1091 to i64
  %call1782 = call i32 @safefile(i8* %1089, i32 %call1779, i32 %call1780, i8* %1090, i64 %conv1781, i32 0, %struct.stat* null)
  store i32 %call1782, i32* %ret, align 4, !tbaa !5
  %1092 = load i32, i32* %ret, align 4, !tbaa !5
  %cmp1783 = icmp ne i32 %1092, 0
  br i1 %cmp1783, label %if.then.1785, label %if.end.1789

if.then.1785:                                     ; preds = %if.end.1777
  %1093 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_id1786 = getelementptr inbounds %struct.envelope, %struct.envelope* %1093, i32 0, i32 25
  %1094 = load i8*, i8** %e_id1786, align 8, !tbaa !16
  %1095 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer1787 = getelementptr inbounds %struct.mailer, %struct.mailer* %1095, i32 0, i32 1
  %1096 = load i8*, i8** %m_mailer1787, align 8, !tbaa !33
  %1097 = load i32, i32* %ret, align 4, !tbaa !5
  %call1788 = call i8* @sm_errstring(i32 %1097)
  call void (i32, i8*, i8*, ...) @sm_syslog(i32 6, i8* %1094, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.249, i32 0, i32 0), i8* %1096, i8* %call1788)
  br label %if.end.1789

if.end.1789:                                      ; preds = %if.then.1785, %if.end.1777
  %arrayidx1790 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 0
  %1098 = load i32, i32* %arrayidx1790, align 4, !tbaa !5
  %call1791 = call i32 @close(i32 %1098)
  %arrayidx1792 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 1
  %1099 = load i32, i32* %arrayidx1792, align 4, !tbaa !5
  %call1793 = call i32 @dup2(i32 %1099, i32 1) #1
  %cmp1794 = icmp slt i32 %call1793, 0
  br i1 %cmp1794, label %if.then.1796, label %if.end.1801

if.then.1796:                                     ; preds = %if.end.1789
  %1100 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1797 = getelementptr inbounds %struct.envelope, %struct.envelope* %1100, i32 0, i32 3
  %1101 = load i8*, i8** %e_to1797, align 8, !tbaa !62
  %call1798 = call i8* @shortenstring(i8* %1101, i64 203)
  %1102 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1799 = getelementptr inbounds %struct.mailer, %struct.mailer* %1102, i32 0, i32 0
  %1103 = load i8*, i8** %m_name1799, align 8, !tbaa !63
  %arrayidx1800 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 1
  %1104 = load i32, i32* %arrayidx1800, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.250, i32 0, i32 0), i8* %call1798, i8* %1103, i32 %1104)
  call void @_exit(i32 71) #15
  unreachable

if.end.1801:                                      ; preds = %if.end.1789
  %arrayidx1802 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 1
  %1105 = load i32, i32* %arrayidx1802, align 4, !tbaa !5
  %call1803 = call i32 @close(i32 %1105)
  %call1804 = call i32 @dup2(i32 1, i32 2) #1
  %cmp1805 = icmp slt i32 %call1804, 0
  br i1 %cmp1805, label %if.then.1807, label %if.end.1811

if.then.1807:                                     ; preds = %if.end.1801
  %1106 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1808 = getelementptr inbounds %struct.envelope, %struct.envelope* %1106, i32 0, i32 3
  %1107 = load i8*, i8** %e_to1808, align 8, !tbaa !62
  %call1809 = call i8* @shortenstring(i8* %1107, i64 203)
  %1108 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1810 = getelementptr inbounds %struct.mailer, %struct.mailer* %1108, i32 0, i32 0
  %1109 = load i8*, i8** %m_name1810, align 8, !tbaa !63
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.251, i32 0, i32 0), i8* %call1809, i8* %1109)
  call void @_exit(i32 71) #15
  unreachable

if.end.1811:                                      ; preds = %if.end.1801
  %arrayidx1812 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %1110 = load i32, i32* %arrayidx1812, align 4, !tbaa !5
  %call1813 = call i32 @close(i32 %1110)
  %arrayidx1814 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %1111 = load i32, i32* %arrayidx1814, align 4, !tbaa !5
  %call1815 = call i32 @dup2(i32 %1111, i32 0) #1
  %cmp1816 = icmp slt i32 %call1815, 0
  br i1 %cmp1816, label %if.then.1818, label %if.end.1823

if.then.1818:                                     ; preds = %if.end.1811
  %1112 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to1819 = getelementptr inbounds %struct.envelope, %struct.envelope* %1112, i32 0, i32 3
  %1113 = load i8*, i8** %e_to1819, align 8, !tbaa !62
  %call1820 = call i8* @shortenstring(i8* %1113, i64 203)
  %1114 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name1821 = getelementptr inbounds %struct.mailer, %struct.mailer* %1114, i32 0, i32 0
  %1115 = load i8*, i8** %m_name1821, align 8, !tbaa !63
  %arrayidx1822 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %1116 = load i32, i32* %arrayidx1822, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.252, i32 0, i32 0), i8* %call1820, i8* %1115, i32 %1116)
  call void @_exit(i32 71) #15
  unreachable

if.end.1823:                                      ; preds = %if.end.1811
  %arrayidx1824 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %1117 = load i32, i32* %arrayidx1824, align 4, !tbaa !5
  %call1825 = call i32 @close(i32 %1117)
  %1118 = load i32, i32* @DtableSize, align 4, !tbaa !5
  call void @sm_close_on_exec(i32 3, i32 %1118)
  %call1826 = call i32 @setsid() #1
  %1119 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer1827 = getelementptr inbounds %struct.mailer, %struct.mailer* %1119, i32 0, i32 1
  %1120 = load i8*, i8** %m_mailer1827, align 8, !tbaa !33
  %arraydecay1828 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i32 0
  %call1829 = call i32 @execve(i8* %1120, i8** %arraydecay1828, i8** getelementptr inbounds ([101 x i8*], [101 x i8*]* @UserEnviron, i32 0, i32 0)) #1
  %call1830 = call i32* @__errno_location() #11
  %1121 = load i32, i32* %call1830, align 4, !tbaa !5
  store i32 %1121, i32* %save_errno, align 4, !tbaa !5
  %1122 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer1831 = getelementptr inbounds %struct.mailer, %struct.mailer* %1122, i32 0, i32 1
  %1123 = load i8*, i8** %m_mailer1831, align 8, !tbaa !33
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.253, i32 0, i32 0), i8* %1123)
  %1124 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1832 = getelementptr inbounds %struct.mailer, %struct.mailer* %1124, i32 0, i32 5
  %arrayidx1833 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1832, i32 0, i64 3
  %1125 = load i32, i32* %arrayidx1833, align 4, !tbaa !5
  %and1834 = and i32 %1125, 4096
  %tobool1835 = icmp ne i32 %and1834, 0
  br i1 %tobool1835, label %if.then.1839, label %lor.lhs.false.1836

lor.lhs.false.1836:                               ; preds = %if.end.1823
  %1126 = load i32, i32* %save_errno, align 4, !tbaa !5
  %call1837 = call i32 @transienterror(i32 %1126)
  %tobool1838 = icmp ne i32 %call1837, 0
  br i1 %tobool1838, label %if.then.1839, label %if.end.1840

if.then.1839:                                     ; preds = %lor.lhs.false.1836, %if.end.1823
  call void @_exit(i32 71) #15
  unreachable

if.end.1840:                                      ; preds = %lor.lhs.false.1836
  call void @_exit(i32 69) #15
  unreachable

if.end.1841:                                      ; preds = %if.else.1430
  br label %if.end.1842

if.end.1842:                                      ; preds = %if.end.1841
  %1127 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %cmp1843 = icmp eq %struct.mailer_con_info* %1127, null
  br i1 %cmp1843, label %if.then.1845, label %if.end.1853

if.then.1845:                                     ; preds = %if.end.1842
  %1128 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool1846 = icmp ne i32 %1128, 0
  br i1 %tobool1846, label %if.then.1847, label %if.else.1849

if.then.1847:                                     ; preds = %if.then.1845
  %call1848 = call %struct.mailer_con_info* @mci_new(%struct.SM_RPOOL_T* null)
  store volatile %struct.mailer_con_info* %call1848, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  br label %if.end.1852

if.else.1849:                                     ; preds = %if.then.1845
  %1129 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_rpool1850 = getelementptr inbounds %struct.envelope, %struct.envelope* %1129, i32 0, i32 52
  %1130 = load %struct.SM_RPOOL_T*, %struct.SM_RPOOL_T** %e_rpool1850, align 8, !tbaa !36
  %call1851 = call %struct.mailer_con_info* @mci_new(%struct.SM_RPOOL_T* %1130)
  store volatile %struct.mailer_con_info* %call1851, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  br label %if.end.1852

if.end.1852:                                      ; preds = %if.else.1849, %if.then.1847
  br label %if.end.1853

if.end.1853:                                      ; preds = %if.end.1852, %if.end.1842
  %1131 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1132 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_mailer1854 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1132, i32 0, i32 11
  store %struct.mailer* %1131, %struct.mailer** %mci_mailer1854, align 8, !tbaa !79
  %1133 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool1855 = icmp ne i32 %1133, 0
  br i1 %tobool1855, label %if.then.1856, label %if.else.1858

if.then.1856:                                     ; preds = %if.end.1853
  %1134 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state1857 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1134, i32 0, i32 4
  store i16 1, i16* %mci_state1857, align 2, !tbaa !75
  %1135 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_cache(%struct.mailer_con_info* %1135)
  br label %if.end.1860

if.else.1858:                                     ; preds = %if.end.1853
  %1136 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state1859 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1136, i32 0, i32 4
  store i16 2, i16* %mci_state1859, align 2, !tbaa !75
  br label %if.end.1860

if.end.1860:                                      ; preds = %if.else.1858, %if.then.1856
  %1137 = load volatile i32, i32* %pid, align 4, !tbaa !5
  %1138 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_pid1861 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1138, i32 0, i32 9
  store i32 %1137, i32* %mci_pid1861, align 4, !tbaa !78
  %arrayidx1862 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 0
  %1139 = load i32, i32* %arrayidx1862, align 4, !tbaa !5
  %call1863 = call i32 @close(i32 %1139)
  %arrayidx1864 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %1140 = bitcast i32* %arrayidx1864 to i8*
  %call1865 = call %struct.sm_file* @sm_io_open(%struct.sm_file* @SmFtStdiofd_def, i32 -2, i8* %1140, i32 3, i8* null)
  %1141 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_out1866 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1141, i32 0, i32 8
  store %struct.sm_file* %call1865, %struct.sm_file** %mci_out1866, align 8, !tbaa !73
  %1142 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_out1867 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1142, i32 0, i32 8
  %1143 = load %struct.sm_file*, %struct.sm_file** %mci_out1867, align 8, !tbaa !73
  %cmp1868 = icmp eq %struct.sm_file* %1143, null
  br i1 %cmp1868, label %if.then.1870, label %if.end.1878

if.then.1870:                                     ; preds = %if.end.1860
  %arrayidx1871 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %1144 = load i32, i32* %arrayidx1871, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.254, i32 0, i32 0), i32 %1144)
  %arrayidx1872 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %1145 = load i32, i32* %arrayidx1872, align 4, !tbaa !5
  %call1873 = call i32 @close(i32 %1145)
  %arrayidx1874 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 0
  %1146 = load i32, i32* %arrayidx1874, align 4, !tbaa !5
  %call1875 = call i32 @close(i32 %1146)
  %arrayidx1876 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 1
  %1147 = load i32, i32* %arrayidx1876, align 4, !tbaa !5
  %call1877 = call i32 @close(i32 %1147)
  store i32 71, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.1878:                                      ; preds = %if.end.1860
  %arrayidx1879 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 1
  %1148 = load i32, i32* %arrayidx1879, align 4, !tbaa !5
  %call1880 = call i32 @close(i32 %1148)
  %arrayidx1881 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 0
  %1149 = bitcast i32* %arrayidx1881 to i8*
  %call1882 = call %struct.sm_file* @sm_io_open(%struct.sm_file* @SmFtStdiofd_def, i32 -2, i8* %1149, i32 2, i8* null)
  %1150 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_in1883 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1150, i32 0, i32 7
  store %struct.sm_file* %call1882, %struct.sm_file** %mci_in1883, align 8, !tbaa !74
  %1151 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_in1884 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1151, i32 0, i32 7
  %1152 = load %struct.sm_file*, %struct.sm_file** %mci_in1884, align 8, !tbaa !74
  %cmp1885 = icmp eq %struct.sm_file* %1152, null
  br i1 %cmp1885, label %if.then.1887, label %if.end.1894

if.then.1887:                                     ; preds = %if.end.1878
  %arrayidx1888 = getelementptr inbounds [2 x i32], [2 x i32]* %mpvect, i32 0, i64 1
  %1153 = load i32, i32* %arrayidx1888, align 4, !tbaa !5
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.255, i32 0, i32 0), i32 %1153)
  %arrayidx1889 = getelementptr inbounds [2 x i32], [2 x i32]* %rpvect, i32 0, i64 0
  %1154 = load i32, i32* %arrayidx1889, align 4, !tbaa !5
  %call1890 = call i32 @close(i32 %1154)
  %1155 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_out1891 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1155, i32 0, i32 8
  %1156 = load %struct.sm_file*, %struct.sm_file** %mci_out1891, align 8, !tbaa !73
  %call1892 = call i32 @sm_io_close(%struct.sm_file* %1156, i32 -2)
  %1157 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_out1893 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1157, i32 0, i32 8
  store %struct.sm_file* null, %struct.sm_file** %mci_out1893, align 8, !tbaa !73
  store i32 71, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.1894:                                      ; preds = %if.end.1878
  br label %if.end.1895

if.end.1895:                                      ; preds = %if.end.1894, %cleanup.cont.1226
  br label %if.end.1896

if.end.1896:                                      ; preds = %if.end.1895, %if.end.775
  %1158 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1897 = getelementptr inbounds %struct.mailer, %struct.mailer* %1158, i32 0, i32 5
  %arrayidx1898 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1897, i32 0, i64 1
  %1159 = load i32, i32* %arrayidx1898, align 4, !tbaa !5
  %and1899 = and i32 %1159, 8388608
  %tobool1900 = icmp ne i32 %and1899, 0
  br i1 %tobool1900, label %land.lhs.true.1901, label %if.end.1911

land.lhs.true.1901:                               ; preds = %if.end.1896
  %1160 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool1902 = icmp ne i32 %1160, 0
  br i1 %tobool1902, label %lor.lhs.false.1903, label %if.then.1908

lor.lhs.false.1903:                               ; preds = %land.lhs.true.1901
  %1161 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state1904 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1161, i32 0, i32 4
  %1162 = load i16, i16* %mci_state1904, align 2, !tbaa !75
  %conv1905 = sext i16 %1162 to i32
  %cmp1906 = icmp eq i32 %conv1905, 1
  br i1 %cmp1906, label %if.then.1908, label %if.end.1911

if.then.1908:                                     ; preds = %lor.lhs.false.1903, %land.lhs.true.1901
  %1163 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags1909 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1163, i32 0, i32 0
  %1164 = load i64, i64* %mci_flags1909, align 8, !tbaa !71
  %or1910 = or i64 %1164, 128
  store i64 %or1910, i64* %mci_flags1909, align 8, !tbaa !71
  br label %if.end.1911

if.end.1911:                                      ; preds = %if.then.1908, %lor.lhs.false.1903, %if.end.1896
  %1165 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool1912 = icmp ne i32 %1165, 0
  br i1 %tobool1912, label %land.lhs.true.1913, label %if.end.1957

land.lhs.true.1913:                               ; preds = %if.end.1911
  %1166 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state1914 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1166, i32 0, i32 4
  %1167 = load i16, i16* %mci_state1914, align 2, !tbaa !75
  %conv1915 = sext i16 %1167 to i32
  %cmp1916 = icmp ne i32 %conv1915, 0
  br i1 %cmp1916, label %if.then.1918, label %if.end.1957

if.then.1918:                                     ; preds = %land.lhs.true.1913
  %1168 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1169 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_mci = getelementptr inbounds %struct.envelope, %struct.envelope* %1169, i32 0, i32 47
  store %struct.mailer_con_info* %1168, %struct.mailer_con_info** %e_mci, align 8, !tbaa !142
  %1170 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1171 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1172 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1173 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags1919 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1173, i32 0, i32 0
  %1174 = load i64, i64* %mci_flags1919, align 8, !tbaa !71
  %and1920 = and i64 %1174, 268435456
  %cmp1921 = icmp ne i64 %and1920, 0
  %conv1922 = zext i1 %cmp1921 to i32
  call void @smtpinit(%struct.mailer* %1170, %struct.mailer_con_info* %1171, %struct.envelope* %1172, i32 %conv1922)
  %1175 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags1923 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1175, i32 0, i32 0
  %1176 = load i64, i64* %mci_flags1923, align 8, !tbaa !71
  %and1924 = and i64 %1176, -268435457
  store i64 %and1924, i64* %mci_flags1923, align 8, !tbaa !71
  %1177 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dlvr_flag = getelementptr inbounds %struct.envelope, %struct.envelope* %1177, i32 0, i32 51
  %1178 = load i32, i32* %e_dlvr_flag, align 4, !tbaa !57
  %and1925 = and i32 %1178, 2
  %cmp1926 = icmp ne i32 %and1925, 0
  br i1 %cmp1926, label %if.then.1928, label %if.end.1956

if.then.1928:                                     ; preds = %if.then.1918
  %1179 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags1929 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1179, i32 0, i32 0
  %1180 = load i64, i64* %mci_flags1929, align 8, !tbaa !71
  %and1930 = and i64 %1180, 4194304
  %cmp1931 = icmp ne i64 %and1930, 0
  br i1 %cmp1931, label %if.end.1936, label %if.then.1933

if.then.1933:                                     ; preds = %if.then.1928
  %1181 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status1934 = getelementptr inbounds %struct.envelope, %struct.envelope* %1181, i32 0, i32 41
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.256, i32 0, i32 0), i8** %e_status1934, align 8, !tbaa !68
  %1182 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status1935 = getelementptr inbounds %struct.envelope, %struct.envelope* %1182, i32 0, i32 41
  %1183 = load i8*, i8** %e_status1935, align 8, !tbaa !68
  call void (i8*, i8*, ...) @usrerrenh(i8* %1183, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.257, i32 0, i32 0))
  store i32 69, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.1936:                                      ; preds = %if.then.1928
  %1184 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_deliver_by = getelementptr inbounds %struct.envelope, %struct.envelope* %1184, i32 0, i32 50
  %1185 = load i64, i64* %e_deliver_by, align 8, !tbaa !58
  %cmp1937 = icmp sgt i64 %1185, 0
  br i1 %cmp1937, label %land.lhs.true.1939, label %if.end.1955

land.lhs.true.1939:                               ; preds = %if.end.1936
  %1186 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_deliver_by1940 = getelementptr inbounds %struct.envelope, %struct.envelope* %1186, i32 0, i32 50
  %1187 = load i64, i64* %e_deliver_by1940, align 8, !tbaa !58
  %call1941 = call i64 @curtime()
  %1188 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_ctime = getelementptr inbounds %struct.envelope, %struct.envelope* %1188, i32 0, i32 2
  %1189 = load i64, i64* %e_ctime, align 8, !tbaa !19
  %sub1942 = sub nsw i64 %call1941, %1189
  %sub1943 = sub nsw i64 %1187, %sub1942
  %1190 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_min_by = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1190, i32 0, i32 18
  %1191 = load i64, i64* %mci_min_by, align 8, !tbaa !143
  %cmp1944 = icmp slt i64 %sub1943, %1191
  br i1 %cmp1944, label %if.then.1946, label %if.end.1955

if.then.1946:                                     ; preds = %land.lhs.true.1939
  %1192 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status1947 = getelementptr inbounds %struct.envelope, %struct.envelope* %1192, i32 0, i32 41
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.256, i32 0, i32 0), i8** %e_status1947, align 8, !tbaa !68
  %1193 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_status1948 = getelementptr inbounds %struct.envelope, %struct.envelope* %1193, i32 0, i32 41
  %1194 = load i8*, i8** %e_status1948, align 8, !tbaa !68
  %1195 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_deliver_by1949 = getelementptr inbounds %struct.envelope, %struct.envelope* %1195, i32 0, i32 50
  %1196 = load i64, i64* %e_deliver_by1949, align 8, !tbaa !58
  %call1950 = call i64 @curtime()
  %1197 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_ctime1951 = getelementptr inbounds %struct.envelope, %struct.envelope* %1197, i32 0, i32 2
  %1198 = load i64, i64* %e_ctime1951, align 8, !tbaa !19
  %sub1952 = sub nsw i64 %call1950, %1198
  %sub1953 = sub nsw i64 %1196, %sub1952
  %1199 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_min_by1954 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1199, i32 0, i32 18
  %1200 = load i64, i64* %mci_min_by1954, align 8, !tbaa !143
  call void (i8*, i8*, ...) @usrerrenh(i8* %1194, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.258, i32 0, i32 0), i64 %sub1953, i64 %1200)
  store i32 69, i32* %rcode, align 4, !tbaa !5
  br label %give_up

if.end.1955:                                      ; preds = %land.lhs.true.1939, %if.end.1936
  br label %if.end.1956

if.end.1956:                                      ; preds = %if.end.1955, %if.then.1918
  br label %if.end.1957

if.end.1957:                                      ; preds = %if.end.1956, %land.lhs.true.1913, %if.end.1911
  br label %do_transfer

do_transfer:                                      ; preds = %if.end.1957, %if.then.1248, %if.then.760
  %1201 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags1958 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1201, i32 0, i32 0
  %1202 = load i64, i64* %mci_flags1958, align 8, !tbaa !71
  %and1959 = and i64 %1202, -9217
  store i64 %and1959, i64* %mci_flags1958, align 8, !tbaa !71
  %1203 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags1960 = getelementptr inbounds %struct.envelope, %struct.envelope* %1203, i32 0, i32 11
  %1204 = load i64, i64* %e_flags1960, align 8, !tbaa !7
  %and1961 = and i64 %1204, 131072
  %cmp1962 = icmp ne i64 %and1961, 0
  br i1 %cmp1962, label %land.lhs.true.1964, label %if.end.1977

land.lhs.true.1964:                               ; preds = %do_transfer
  %1205 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_flags1965 = getelementptr inbounds %struct.envelope, %struct.envelope* %1205, i32 0, i32 11
  %1206 = load i64, i64* %e_flags1965, align 8, !tbaa !7
  %and1966 = and i64 %1206, 8388608
  %cmp1967 = icmp ne i64 %and1966, 0
  br i1 %cmp1967, label %if.end.1977, label %land.lhs.true.1969

land.lhs.true.1969:                               ; preds = %land.lhs.true.1964
  %1207 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1970 = getelementptr inbounds %struct.mailer, %struct.mailer* %1207, i32 0, i32 5
  %arrayidx1971 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1970, i32 0, i64 1
  %1208 = load i32, i32* %arrayidx1971, align 4, !tbaa !5
  %and1972 = and i32 %1208, 8388608
  %tobool1973 = icmp ne i32 %and1972, 0
  br i1 %tobool1973, label %if.then.1974, label %if.end.1977

if.then.1974:                                     ; preds = %land.lhs.true.1969
  %1209 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags1975 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1209, i32 0, i32 0
  %1210 = load i64, i64* %mci_flags1975, align 8, !tbaa !71
  %or1976 = or i64 %1210, 1024
  store i64 %or1976, i64* %mci_flags1975, align 8, !tbaa !71
  br label %if.end.1977

if.end.1977:                                      ; preds = %if.then.1974, %land.lhs.true.1969, %land.lhs.true.1964, %do_transfer
  %1211 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags1978 = getelementptr inbounds %struct.mailer, %struct.mailer* %1211, i32 0, i32 5
  %arrayidx1979 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags1978, i32 0, i64 1
  %1212 = load i32, i32* %arrayidx1979, align 4, !tbaa !5
  %and1980 = and i32 %1212, 33554432
  %tobool1981 = icmp ne i32 %and1980, 0
  br i1 %tobool1981, label %land.lhs.true.1982, label %if.end.2027

land.lhs.true.1982:                               ; preds = %if.end.1977
  %1213 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags1983 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1213, i32 0, i32 0
  %1214 = load i64, i64* %mci_flags1983, align 8, !tbaa !71
  %and1984 = and i64 %1214, 128
  %cmp1985 = icmp ne i64 %and1984, 0
  br i1 %cmp1985, label %if.end.2027, label %land.lhs.true.1987

land.lhs.true.1987:                               ; preds = %land.lhs.true.1982
  %1215 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header = getelementptr inbounds %struct.envelope, %struct.envelope* %1215, i32 0, i32 0
  %1216 = load %struct.header*, %struct.header** %e_header, align 8, !tbaa !42
  %call1988 = call i8* @hvalue(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.139, i32 0, i32 0), %struct.header* %1216)
  store i8* %call1988, i8** %p, align 8, !tbaa !1
  %cmp1989 = icmp ne i8* %call1988, null
  br i1 %cmp1989, label %land.lhs.true.1991, label %if.end.2027

land.lhs.true.1991:                               ; preds = %land.lhs.true.1987
  %1217 = load i8*, i8** %p, align 8, !tbaa !1
  %call1992 = call i32 @sm_strcasecmp(i8* %1217, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.140, i32 0, i32 0))
  %cmp1993 = icmp eq i32 %call1992, 0
  br i1 %cmp1993, label %land.lhs.true.1999, label %lor.lhs.false.1995

lor.lhs.false.1995:                               ; preds = %land.lhs.true.1991
  %1218 = load i8*, i8** %p, align 8, !tbaa !1
  %call1996 = call i32 @sm_strcasecmp(i8* %1218, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.141, i32 0, i32 0))
  %cmp1997 = icmp eq i32 %call1996, 0
  br i1 %cmp1997, label %land.lhs.true.1999, label %if.end.2027

land.lhs.true.1999:                               ; preds = %lor.lhs.false.1995, %land.lhs.true.1991
  %1219 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header2000 = getelementptr inbounds %struct.envelope, %struct.envelope* %1219, i32 0, i32 0
  %1220 = load %struct.header*, %struct.header** %e_header2000, align 8, !tbaa !42
  %call2001 = call i8* @hvalue(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i32 0, i32 0), %struct.header* %1220)
  store i8* %call2001, i8** %p, align 8, !tbaa !1
  %cmp2002 = icmp ne i8* %call2001, null
  br i1 %cmp2002, label %if.then.2004, label %if.end.2027

if.then.2004:                                     ; preds = %land.lhs.true.1999
  %1221 = load i8*, i8** %p, align 8, !tbaa !1
  %call2005 = call i32 @sm_strncasecmp(i8* %1221, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i32 0, i32 0), i64 10)
  %cmp2006 = icmp eq i32 %call2005, 0
  br i1 %cmp2006, label %land.lhs.true.2008, label %if.end.2026

land.lhs.true.2008:                               ; preds = %if.then.2004
  %1222 = load i8*, i8** %p, align 8, !tbaa !1
  %arrayidx2009 = getelementptr inbounds i8, i8* %1222, i64 10
  %1223 = load i8, i8* %arrayidx2009, align 1, !tbaa !15
  %conv2010 = sext i8 %1223 to i32
  %cmp2011 = icmp eq i32 %conv2010, 0
  br i1 %cmp2011, label %if.then.2023, label %lor.lhs.false.2013

lor.lhs.false.2013:                               ; preds = %land.lhs.true.2008
  %1224 = load i8*, i8** %p, align 8, !tbaa !1
  %arrayidx2014 = getelementptr inbounds i8, i8* %1224, i64 10
  %1225 = load i8, i8* %arrayidx2014, align 1, !tbaa !15
  %conv2015 = sext i8 %1225 to i32
  %cmp2016 = icmp eq i32 %conv2015, 32
  br i1 %cmp2016, label %if.then.2023, label %lor.lhs.false.2018

lor.lhs.false.2018:                               ; preds = %lor.lhs.false.2013
  %1226 = load i8*, i8** %p, align 8, !tbaa !1
  %arrayidx2019 = getelementptr inbounds i8, i8* %1226, i64 10
  %1227 = load i8, i8* %arrayidx2019, align 1, !tbaa !15
  %conv2020 = sext i8 %1227 to i32
  %cmp2021 = icmp eq i32 %conv2020, 59
  br i1 %cmp2021, label %if.then.2023, label %if.end.2026

if.then.2023:                                     ; preds = %lor.lhs.false.2018, %lor.lhs.false.2013, %land.lhs.true.2008
  %1228 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2024 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1228, i32 0, i32 0
  %1229 = load i64, i64* %mci_flags2024, align 8, !tbaa !71
  %or2025 = or i64 %1229, 8192
  store i64 %or2025, i64* %mci_flags2024, align 8, !tbaa !71
  br label %if.end.2026

if.end.2026:                                      ; preds = %if.then.2023, %lor.lhs.false.2018, %if.then.2004
  br label %if.end.2027

if.end.2027:                                      ; preds = %if.end.2026, %land.lhs.true.1999, %lor.lhs.false.1995, %land.lhs.true.1987, %land.lhs.true.1982, %if.end.1977
  %1230 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv2028 = zext i8 %1230 to i32
  %cmp2029 = icmp sge i32 %conv2028, 1
  br i1 %cmp2029, label %land.lhs.true.2031, label %if.end.2035

land.lhs.true.2031:                               ; preds = %if.end.2027
  %1231 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool2032 = icmp ne i32 %1231, 0
  br i1 %tobool2032, label %if.end.2035, label %if.then.2033

if.then.2033:                                     ; preds = %land.lhs.true.2031
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.208, i32 0, i32 0))
  %call2034 = call %struct.sm_file* @sm_debug_file()
  %1232 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_dump(%struct.sm_file* %call2034, %struct.mailer_con_info* %1232, i32 0)
  br label %if.end.2035

if.end.2035:                                      ; preds = %if.then.2033, %land.lhs.true.2031, %if.end.2027
  %1233 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state2036 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1233, i32 0, i32 4
  %1234 = load i16, i16* %mci_state2036, align 2, !tbaa !75
  %conv2037 = sext i16 %1234 to i32
  %cmp2038 = icmp ne i32 %conv2037, 2
  br i1 %cmp2038, label %if.then.2040, label %if.else.2061

if.then.2040:                                     ; preds = %if.end.2035
  %1235 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_exitstat2041 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1235, i32 0, i32 3
  %1236 = load i16, i16* %mci_exitstat2041, align 2, !tbaa !139
  %conv2042 = sext i16 %1236 to i32
  store i32 %conv2042, i32* %rcode, align 4, !tbaa !5
  %1237 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_errno2043 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1237, i32 0, i32 1
  %1238 = load i16, i16* %mci_errno2043, align 2, !tbaa !118
  %conv2044 = sext i16 %1238 to i32
  %call2045 = call i32* @__errno_location() #11
  store i32 %conv2044, i32* %call2045, align 4, !tbaa !5
  %1239 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_herrno2046 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1239, i32 0, i32 2
  %1240 = load i16, i16* %mci_herrno2046, align 2, !tbaa !119
  %conv2047 = sext i16 %1240 to i32
  %call2048 = call i32* @__h_errno_location() #11
  store i32 %conv2047, i32* %call2048, align 4, !tbaa !5
  %1241 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2049 = icmp eq i32 %1241, 0
  br i1 %cmp2049, label %if.then.2051, label %if.else.2055

if.then.2051:                                     ; preds = %if.then.2040
  %1242 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1243 = ptrtoint %struct.mailer_con_info* %1242 to i64
  %1244 = load i32, i32* %rcode, align 4, !tbaa !5
  %call2052 = call i32* @__errno_location() #11
  %1245 = load i32, i32* %call2052, align 4, !tbaa !5
  %1246 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state2053 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1246, i32 0, i32 4
  %1247 = load i16, i16* %mci_state2053, align 2, !tbaa !75
  %conv2054 = sext i16 %1247 to i32
  %1248 = load i8*, i8** %firstsig, align 8, !tbaa !1
  call void (i8*, ...) @syserr(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.259, i32 0, i32 0), i64 %1243, i32 %1244, i32 %1245, i32 %conv2054, i8* %1248)
  call void @mci_dump_all(%struct.sm_file* getelementptr inbounds ([0 x %struct.sm_file], [0 x %struct.sm_file]* @SmIoF, i32 0, i64 1), i32 1)
  store i32 70, i32* %rcode, align 4, !tbaa !5
  br label %if.end.2060

if.else.2055:                                     ; preds = %if.then.2040
  %1249 = load i32, i32* %nummxhosts, align 4, !tbaa !5
  %1250 = load i32, i32* %hostnum, align 4, !tbaa !5
  %cmp2056 = icmp sgt i32 %1249, %1250
  br i1 %cmp2056, label %if.then.2058, label %if.end.2059

if.then.2058:                                     ; preds = %if.else.2055
  br label %tryhost

if.end.2059:                                      ; preds = %if.else.2055
  br label %if.end.2060

if.end.2060:                                      ; preds = %if.end.2059, %if.then.2051
  br label %if.end.2211

if.else.2061:                                     ; preds = %if.end.2035
  %1251 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool2062 = icmp ne i32 %1251, 0
  br i1 %tobool2062, label %if.else.2113, label %if.then.2063

if.then.2063:                                     ; preds = %if.else.2061
  %1252 = bitcast i32* %ok to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1252) #1
  store i32 0, i32* %rcode, align 4, !tbaa !5
  %call2065 = call i32* @__errno_location() #11
  store i32 0, i32* %call2065, align 4, !tbaa !5
  %1253 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1254 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call2066 = call i32 @putfromline(%struct.mailer_con_info* %1253, %struct.envelope* %1254)
  store i32 %call2066, i32* %ok, align 4, !tbaa !5
  %1255 = load i32, i32* %ok, align 4, !tbaa !5
  %tobool2067 = icmp ne i32 %1255, 0
  br i1 %tobool2067, label %if.then.2068, label %if.end.2071

if.then.2068:                                     ; preds = %if.then.2063
  %1256 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_puthdr = getelementptr inbounds %struct.envelope, %struct.envelope* %1256, i32 0, i32 19
  %1257 = load i32 (%struct.mailer_con_info*, %struct.header*, %struct.envelope*, i32)*, i32 (%struct.mailer_con_info*, %struct.header*, %struct.envelope*, i32)** %e_puthdr, align 8, !tbaa !111
  %1258 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1259 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_header2069 = getelementptr inbounds %struct.envelope, %struct.envelope* %1259, i32 0, i32 0
  %1260 = load %struct.header*, %struct.header** %e_header2069, align 8, !tbaa !42
  %1261 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call2070 = call i32 %1257(%struct.mailer_con_info* %1258, %struct.header* %1260, %struct.envelope* %1261, i32 0)
  store i32 %call2070, i32* %ok, align 4, !tbaa !5
  br label %if.end.2071

if.end.2071:                                      ; preds = %if.then.2068, %if.then.2063
  %1262 = load i32, i32* %ok, align 4, !tbaa !5
  %tobool2072 = icmp ne i32 %1262, 0
  br i1 %tobool2072, label %if.then.2073, label %if.end.2075

if.then.2073:                                     ; preds = %if.end.2071
  %1263 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_putbody = getelementptr inbounds %struct.envelope, %struct.envelope* %1263, i32 0, i32 20
  %1264 = load i32 (%struct.mailer_con_info*, %struct.envelope*, i8*)*, i32 (%struct.mailer_con_info*, %struct.envelope*, i8*)** %e_putbody, align 8, !tbaa !112
  %1265 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1266 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call2074 = call i32 %1264(%struct.mailer_con_info* %1265, %struct.envelope* %1266, i8* null)
  store i32 %call2074, i32* %ok, align 4, !tbaa !5
  br label %if.end.2075

if.end.2075:                                      ; preds = %if.then.2073, %if.end.2071
  %1267 = load i32, i32* %ok, align 4, !tbaa !5
  %tobool2076 = icmp ne i32 %1267, 0
  br i1 %tobool2076, label %land.lhs.true.2077, label %if.end.2084

land.lhs.true.2077:                               ; preds = %if.end.2075
  %1268 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2078 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1268, i32 0, i32 0
  %1269 = load i64, i64* %mci_flags2078, align 8, !tbaa !71
  %and2079 = and i64 %1269, 16777216
  %cmp2080 = icmp ne i64 %and2079, 0
  br i1 %cmp2080, label %if.then.2082, label %if.end.2084

if.then.2082:                                     ; preds = %land.lhs.true.2077
  %1270 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %call2083 = call i32 @putline(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i32 0, i32 0), %struct.mailer_con_info* %1270)
  store i32 %call2083, i32* %ok, align 4, !tbaa !5
  br label %if.end.2084

if.end.2084:                                      ; preds = %if.then.2082, %land.lhs.true.2077, %if.end.2075
  %1271 = load i32, i32* %ok, align 4, !tbaa !5
  %tobool2085 = icmp ne i32 %1271, 0
  br i1 %tobool2085, label %if.end.2096, label %land.lhs.true.2086

land.lhs.true.2086:                               ; preds = %if.end.2084
  %1272 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_out2087 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1272, i32 0, i32 8
  %1273 = load %struct.sm_file*, %struct.sm_file** %mci_out2087, align 8, !tbaa !73
  %f_flags = getelementptr inbounds %struct.sm_file, %struct.sm_file* %1273, i32 0, i32 4
  %1274 = load i64, i64* %f_flags, align 8, !tbaa !94
  %and2088 = and i64 %1274, 256
  %cmp2089 = icmp ne i64 %and2088, 0
  br i1 %cmp2089, label %land.lhs.true.2091, label %if.end.2096

land.lhs.true.2091:                               ; preds = %land.lhs.true.2086
  %call2092 = call i32* @__errno_location() #11
  %1275 = load i32, i32* %call2092, align 4, !tbaa !5
  %cmp2093 = icmp eq i32 %1275, 32
  br i1 %cmp2093, label %if.then.2095, label %if.end.2096

if.then.2095:                                     ; preds = %land.lhs.true.2091
  store i32 1, i32* %ok, align 4, !tbaa !5
  br label %if.end.2096

if.end.2096:                                      ; preds = %if.then.2095, %land.lhs.true.2091, %land.lhs.true.2086, %if.end.2084
  %1276 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1277 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %arraydecay2097 = getelementptr inbounds [257 x i8*], [257 x i8*]* %pv, i32 0, i32 0
  %call2098 = call i32 @endmailer(%struct.mailer_con_info* %1276, %struct.envelope* %1277, i8** %arraydecay2097)
  store i32 %call2098, i32* %rcode, align 4, !tbaa !5
  %1278 = load i32, i32* %ok, align 4, !tbaa !5
  %tobool2099 = icmp ne i32 %1278, 0
  br i1 %tobool2099, label %if.end.2101, label %if.then.2100

if.then.2100:                                     ; preds = %if.end.2096
  store i32 75, i32* %rcode, align 4, !tbaa !5
  br label %if.end.2101

if.end.2101:                                      ; preds = %if.then.2100, %if.end.2096
  %1279 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2102 = icmp eq i32 %1279, 75
  br i1 %cmp2102, label %land.lhs.true.2104, label %if.end.2112

land.lhs.true.2104:                               ; preds = %if.end.2101
  %1280 = load i8, i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @SmtpError, i32 0, i64 0), align 1, !tbaa !15
  %conv2105 = sext i8 %1280 to i32
  %cmp2106 = icmp eq i32 %conv2105, 0
  br i1 %cmp2106, label %if.then.2108, label %if.end.2112

if.then.2108:                                     ; preds = %land.lhs.true.2104
  %1281 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name2109 = getelementptr inbounds %struct.mailer, %struct.mailer* %1281, i32 0, i32 0
  %1282 = load i8*, i8** %m_name2109, align 8, !tbaa !63
  %1283 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_mailer2110 = getelementptr inbounds %struct.mailer, %struct.mailer* %1283, i32 0, i32 1
  %1284 = load i8*, i8** %m_mailer2110, align 8, !tbaa !33
  %call2111 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* getelementptr inbounds ([2048 x i8], [2048 x i8]* @SmtpError, i32 0, i32 0), i64 2048, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.260, i32 0, i32 0), i8* %1282, i8* %1284)
  br label %if.end.2112

if.end.2112:                                      ; preds = %if.then.2108, %land.lhs.true.2104, %if.end.2101
  %1285 = bitcast i32* %ok to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1285) #1
  br label %if.end.2210

if.else.2113:                                     ; preds = %if.else.2061
  %1286 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1287 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1288 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call2114 = call i32 @smtpmailfrom(%struct.mailer* %1286, %struct.mailer_con_info* %1287, %struct.envelope* %1288)
  store i32 %call2114, i32* %rcode, align 4, !tbaa !5
  %1289 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2115 = icmp eq i32 %1289, 0
  br i1 %cmp2115, label %if.then.2117, label %if.end.2202

if.then.2117:                                     ; preds = %if.else.2113
  %1290 = bitcast i32* %i2119 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1290) #1
  %1291 = bitcast %struct.address** %pchain to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1291) #1
  %1292 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %arrayidx2121 = getelementptr inbounds i8, i8* %1292, i64 0
  store i8 0, i8* %arrayidx2121, align 1, !tbaa !15
  %1293 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_retryrcpt = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1293, i32 0, i32 19
  store i32 0, i32* %mci_retryrcpt, align 4, !tbaa !144
  %1294 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %1295 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_tolist = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1295, i32 0, i32 20
  store i8* %1294, i8** %mci_tolist, align 8, !tbaa !145
  store volatile %struct.address* null, %struct.address** %pchain, align 8, !tbaa !1
  %1296 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_nextaddr = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1296, i32 0, i32 23
  store %struct.address* null, %struct.address** %mci_nextaddr, align 8, !tbaa !146
  %1297 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  store %struct.address* %1297, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.2122

for.cond.2122:                                    ; preds = %for.inc.2173, %if.then.2117
  %1298 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %cmp2123 = icmp ne %struct.address* %1298, null
  br i1 %cmp2123, label %for.body.2125, label %for.end.2175

for.body.2125:                                    ; preds = %for.cond.2122
  %1299 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state2126 = getelementptr inbounds %struct.address, %struct.address* %1299, i32 0, i32 21
  %1300 = load i16, i16* %q_state2126, align 2, !tbaa !24
  %conv2127 = sext i16 %1300 to i32
  %cmp2128 = icmp eq i32 %conv2127, 0
  br i1 %cmp2128, label %if.end.2136, label %lor.lhs.false.2130

lor.lhs.false.2130:                               ; preds = %for.body.2125
  %1301 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state2131 = getelementptr inbounds %struct.address, %struct.address* %1301, i32 0, i32 21
  %1302 = load i16, i16* %q_state2131, align 2, !tbaa !24
  %conv2132 = sext i16 %1302 to i32
  %cmp2133 = icmp eq i32 %conv2132, 4
  br i1 %cmp2133, label %if.end.2136, label %if.then.2135

if.then.2135:                                     ; preds = %lor.lhs.false.2130
  br label %for.inc.2173

if.end.2136:                                      ; preds = %lor.lhs.false.2130, %for.body.2125
  %1303 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state2137 = getelementptr inbounds %struct.address, %struct.address* %1303, i32 0, i32 21
  store i16 0, i16* %q_state2137, align 2, !tbaa !24
  %1304 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr2138 = getelementptr inbounds %struct.address, %struct.address* %1304, i32 0, i32 0
  %1305 = load i8*, i8** %q_paddr2138, align 8, !tbaa !22
  %1306 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2139 = getelementptr inbounds %struct.envelope, %struct.envelope* %1306, i32 0, i32 3
  store i8* %1305, i8** %e_to2139, align 8, !tbaa !62
  %1307 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %1308 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1309 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1310 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1311 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %1312 = load i64, i64* %xstart, align 8, !tbaa !32
  %call2140 = call i32 @smtprcpt(%struct.address* %1307, %struct.mailer* %1308, %struct.mailer_con_info* %1309, %struct.envelope* %1310, %struct.address* %1311, i64 %1312)
  store i32 %call2140, i32* %i2119, align 4, !tbaa !5
  %1313 = load i32, i32* %i2119, align 4, !tbaa !5
  %cmp2141 = icmp eq i32 %1313, 0
  br i1 %cmp2141, label %land.lhs.true.2143, label %if.end.2162

land.lhs.true.2143:                               ; preds = %if.end.2136
  %1314 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2144 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1314, i32 0, i32 0
  %1315 = load i64, i64* %mci_flags2144, align 8, !tbaa !71
  %and2145 = and i64 %1315, 262144
  %cmp2146 = icmp ne i64 %and2145, 0
  br i1 %cmp2146, label %if.then.2148, label %if.end.2162

if.then.2148:                                     ; preds = %land.lhs.true.2143
  %1316 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_pchain = getelementptr inbounds %struct.address, %struct.address* %1316, i32 0, i32 14
  store %struct.address* null, %struct.address** %q_pchain, align 8, !tbaa !147
  %1317 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_nextaddr2149 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1317, i32 0, i32 23
  %1318 = load %struct.address*, %struct.address** %mci_nextaddr2149, align 8, !tbaa !146
  %cmp2150 = icmp eq %struct.address* %1318, null
  br i1 %cmp2150, label %if.then.2152, label %if.end.2154

if.then.2152:                                     ; preds = %if.then.2148
  %1319 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %1320 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_nextaddr2153 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1320, i32 0, i32 23
  store %struct.address* %1319, %struct.address** %mci_nextaddr2153, align 8, !tbaa !146
  br label %if.end.2154

if.end.2154:                                      ; preds = %if.then.2152, %if.then.2148
  %1321 = load volatile %struct.address*, %struct.address** %pchain, align 8, !tbaa !1
  %cmp2155 = icmp eq %struct.address* %1321, null
  br i1 %cmp2155, label %if.then.2157, label %if.else.2158

if.then.2157:                                     ; preds = %if.end.2154
  %1322 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  store volatile %struct.address* %1322, %struct.address** %pchain, align 8, !tbaa !1
  br label %if.end.2161

if.else.2158:                                     ; preds = %if.end.2154
  %1323 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %1324 = load volatile %struct.address*, %struct.address** %pchain, align 8, !tbaa !1
  %q_pchain2159 = getelementptr inbounds %struct.address, %struct.address* %1324, i32 0, i32 14
  store %struct.address* %1323, %struct.address** %q_pchain2159, align 8, !tbaa !147
  %1325 = load volatile %struct.address*, %struct.address** %pchain, align 8, !tbaa !1
  %q_pchain2160 = getelementptr inbounds %struct.address, %struct.address* %1325, i32 0, i32 14
  %1326 = load %struct.address*, %struct.address** %q_pchain2160, align 8, !tbaa !147
  store volatile %struct.address* %1326, %struct.address** %pchain, align 8, !tbaa !1
  br label %if.end.2161

if.end.2161:                                      ; preds = %if.else.2158, %if.then.2157
  br label %if.end.2162

if.end.2162:                                      ; preds = %if.end.2161, %land.lhs.true.2143, %if.end.2136
  %1327 = load i32, i32* %i2119, align 4, !tbaa !5
  %cmp2163 = icmp ne i32 %1327, 0
  br i1 %cmp2163, label %if.then.2165, label %if.end.2172

if.then.2165:                                     ; preds = %if.end.2162
  %1328 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1329 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %1330 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1331 = load i32, i32* %i2119, align 4, !tbaa !5
  call void @markfailure(%struct.envelope* %1328, %struct.address* %1329, %struct.mailer_con_info* %1330, i32 %1331, i32 0)
  %1332 = load i32, i32* %i2119, align 4, !tbaa !5
  %1333 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status2166 = getelementptr inbounds %struct.address, %struct.address* %1333, i32 0, i32 17
  %1334 = load i8*, i8** %q_status2166, align 8, !tbaa !25
  %1335 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1336 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1337 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %1338 = load i64, i64* %xstart, align 8, !tbaa !32
  %1339 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1340 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @giveresponse(i32 %1332, i8* %1334, %struct.mailer* %1335, %struct.mailer_con_info* %1336, %struct.address* %1337, i64 %1338, %struct.envelope* %1339, %struct.address* %1340)
  %1341 = load i32, i32* %i2119, align 4, !tbaa !5
  %cmp2167 = icmp eq i32 %1341, 75
  br i1 %cmp2167, label %if.then.2169, label %if.end.2171

if.then.2169:                                     ; preds = %if.then.2165
  %1342 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state2170 = getelementptr inbounds %struct.address, %struct.address* %1342, i32 0, i32 21
  store i16 4, i16* %q_state2170, align 2, !tbaa !24
  br label %if.end.2171

if.end.2171:                                      ; preds = %if.then.2169, %if.then.2165
  br label %if.end.2172

if.end.2172:                                      ; preds = %if.end.2171, %if.end.2162
  br label %for.inc.2173

for.inc.2173:                                     ; preds = %if.end.2172, %if.then.2135
  %1343 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_tchain2174 = getelementptr inbounds %struct.address, %struct.address* %1343, i32 0, i32 13
  %1344 = load %struct.address*, %struct.address** %q_tchain2174, align 8, !tbaa !132
  store %struct.address* %1344, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.2122

for.end.2175:                                     ; preds = %for.cond.2122
  %1345 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %arrayidx2176 = getelementptr inbounds i8, i8* %1345, i64 0
  %1346 = load i8, i8* %arrayidx2176, align 1, !tbaa !15
  %conv2177 = sext i8 %1346 to i32
  %cmp2178 = icmp eq i32 %conv2177, 0
  br i1 %cmp2178, label %land.lhs.true.2180, label %if.else.2197

land.lhs.true.2180:                               ; preds = %for.end.2175
  %1347 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2181 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1347, i32 0, i32 0
  %1348 = load i64, i64* %mci_flags2181, align 8, !tbaa !71
  %and2182 = and i64 %1348, 262144
  %cmp2183 = icmp ne i64 %and2182, 0
  br i1 %cmp2183, label %land.lhs.true.2185, label %if.else.2197

land.lhs.true.2185:                               ; preds = %land.lhs.true.2180
  %1349 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_nextaddr2186 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1349, i32 0, i32 23
  %1350 = load %struct.address*, %struct.address** %mci_nextaddr2186, align 8, !tbaa !146
  %cmp2187 = icmp eq %struct.address* %1350, null
  br i1 %cmp2187, label %if.then.2189, label %if.else.2197

if.then.2189:                                     ; preds = %land.lhs.true.2185
  store i32 0, i32* %rcode, align 4, !tbaa !5
  %1351 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2190 = getelementptr inbounds %struct.envelope, %struct.envelope* %1351, i32 0, i32 3
  store i8* null, i8** %e_to2190, align 8, !tbaa !62
  %1352 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2191 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1352, i32 0, i32 0
  %1353 = load i64, i64* %mci_flags2191, align 8, !tbaa !71
  %and2192 = and i64 %1353, 4
  %cmp2193 = icmp ne i64 %and2192, 0
  br i1 %cmp2193, label %if.then.2195, label %if.end.2196

if.then.2195:                                     ; preds = %if.then.2189
  %1354 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1355 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1356 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @smtprset(%struct.mailer* %1354, %struct.mailer_con_info* %1355, %struct.envelope* %1356)
  br label %if.end.2196

if.end.2196:                                      ; preds = %if.then.2195, %if.then.2189
  br label %if.end.2201

if.else.2197:                                     ; preds = %land.lhs.true.2185, %land.lhs.true.2180, %for.end.2175
  %1357 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %add.ptr2198 = getelementptr inbounds i8, i8* %1357, i64 1
  %1358 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2199 = getelementptr inbounds %struct.envelope, %struct.envelope* %1358, i32 0, i32 3
  store i8* %add.ptr2198, i8** %e_to2199, align 8, !tbaa !62
  %1359 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1360 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1361 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1362 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %1363 = load i64, i64* %xstart, align 8, !tbaa !32
  %call2200 = call i32 @smtpdata(%struct.mailer* %1359, %struct.mailer_con_info* %1360, %struct.envelope* %1361, %struct.address* %1362, i64 %1363)
  store i32 %call2200, i32* %rcode, align 4, !tbaa !5
  br label %if.end.2201

if.end.2201:                                      ; preds = %if.else.2197, %if.end.2196
  %1364 = bitcast %struct.address** %pchain to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1364) #1
  %1365 = bitcast i32* %i2119 to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1365) #1
  br label %if.end.2202

if.end.2202:                                      ; preds = %if.end.2201, %if.else.2113
  %1366 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2203 = icmp eq i32 %1366, 75
  br i1 %cmp2203, label %land.lhs.true.2205, label %if.end.2209

land.lhs.true.2205:                               ; preds = %if.end.2202
  %1367 = load i32, i32* %nummxhosts, align 4, !tbaa !5
  %1368 = load i32, i32* %hostnum, align 4, !tbaa !5
  %cmp2206 = icmp sgt i32 %1367, %1368
  br i1 %cmp2206, label %if.then.2208, label %if.end.2209

if.then.2208:                                     ; preds = %land.lhs.true.2205
  br label %tryhost

if.end.2209:                                      ; preds = %land.lhs.true.2205, %if.end.2202
  br label %if.end.2210

if.end.2210:                                      ; preds = %if.end.2209, %if.end.2112
  br label %if.end.2211

if.end.2211:                                      ; preds = %if.end.2210, %if.end.2060
  %1369 = load i32, i32* @ConfigLevel, align 4, !tbaa !5
  %cmp2212 = icmp slt i32 %1369, 2
  br i1 %cmp2212, label %if.then.2214, label %if.end.2218

if.then.2214:                                     ; preds = %if.end.2211
  %call2215 = call %struct.__res_state* @__res_state() #11
  %options2216 = getelementptr inbounds %struct.__res_state, %struct.__res_state* %call2215, i32 0, i32 2
  %1370 = load i64, i64* %options2216, align 8, !tbaa !113
  %or2217 = or i64 %1370, 640
  store i64 %or2217, i64* %options2216, align 8, !tbaa !113
  br label %if.end.2218

if.end.2218:                                      ; preds = %if.then.2214, %if.end.2211
  %1371 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 62), align 1, !tbaa !15
  %conv2219 = zext i8 %1371 to i32
  %cmp2220 = icmp sge i32 %conv2219, 1
  br i1 %cmp2220, label %land.lhs.true.2222, label %if.end.2225

land.lhs.true.2222:                               ; preds = %if.end.2218
  %1372 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool2223 = icmp ne i32 %1372, 0
  br i1 %tobool2223, label %if.end.2225, label %if.then.2224

if.then.2224:                                     ; preds = %land.lhs.true.2222
  call void @checkfds(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.261, i32 0, i32 0))
  br label %if.end.2225

if.end.2225:                                      ; preds = %if.then.2224, %land.lhs.true.2222, %if.end.2218
  br label %give_up

give_up:                                          ; preds = %if.end.2225, %cleanup.1224, %if.then.1946, %if.then.1933, %if.then.1887, %if.then.1870, %if.end.1429, %if.end.1378, %if.end.1317, %if.end.1296, %if.then.675
  %1373 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags2226 = getelementptr inbounds %struct.mailer, %struct.mailer* %1373, i32 0, i32 5
  %arrayidx2227 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags2226, i32 0, i64 3
  %1374 = load i32, i32* %arrayidx2227, align 4, !tbaa !5
  %and2228 = and i32 %1374, 67108864
  %tobool2229 = icmp ne i32 %and2228, 0
  br i1 %tobool2229, label %if.then.2230, label %if.else.2232

if.then.2230:                                     ; preds = %give_up
  %1375 = load i32, i32* %rcode, align 4, !tbaa !5
  store i32 %1375, i32* %lmtp_rcode, align 4, !tbaa !5
  %1376 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %arrayidx2231 = getelementptr inbounds i8, i8* %1376, i64 0
  store i8 0, i8* %arrayidx2231, align 1, !tbaa !15
  store i32 0, i32* %anyok, align 4, !tbaa !5
  store i32 0, i32* %strsize, align 4, !tbaa !5
  br label %if.end.2235

if.else.2232:                                     ; preds = %give_up
  %1377 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2233 = icmp eq i32 %1377, 0
  %conv2234 = zext i1 %cmp2233 to i32
  store i32 %conv2234, i32* %anyok, align 4, !tbaa !5
  br label %if.end.2235

if.end.2235:                                      ; preds = %if.else.2232, %if.then.2230
  %1378 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  store %struct.address* %1378, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.2236

for.cond.2236:                                    ; preds = %for.inc.2424, %if.end.2235
  %1379 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %cmp2237 = icmp ne %struct.address* %1379, null
  br i1 %cmp2237, label %for.body.2239, label %for.end.2426

for.body.2239:                                    ; preds = %for.cond.2236
  %1380 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state2240 = getelementptr inbounds %struct.address, %struct.address* %1380, i32 0, i32 21
  %1381 = load i16, i16* %q_state2240, align 2, !tbaa !24
  %conv2241 = sext i16 %1381 to i32
  %cmp2242 = icmp eq i32 %conv2241, 0
  br i1 %cmp2242, label %if.end.2245, label %if.then.2244

if.then.2244:                                     ; preds = %for.body.2239
  br label %for.inc.2424

if.end.2245:                                      ; preds = %for.body.2239
  %1382 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags2246 = getelementptr inbounds %struct.mailer, %struct.mailer* %1382, i32 0, i32 5
  %arrayidx2247 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags2246, i32 0, i64 3
  %1383 = load i32, i32* %arrayidx2247, align 4, !tbaa !5
  %and2248 = and i32 %1383, 67108864
  %tobool2249 = icmp ne i32 %and2248, 0
  br i1 %tobool2249, label %if.then.2250, label %if.else.2279

if.then.2250:                                     ; preds = %if.end.2245
  %1384 = load i32, i32* %lmtp_rcode, align 4, !tbaa !5
  %cmp2251 = icmp eq i32 %1384, 0
  br i1 %cmp2251, label %if.then.2253, label %if.end.2255

if.then.2253:                                     ; preds = %if.then.2250
  %1385 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1386 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1387 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %call2254 = call i32 @smtpgetstat(%struct.mailer* %1385, %struct.mailer_con_info* %1386, %struct.envelope* %1387)
  store i32 %call2254, i32* %rcode, align 4, !tbaa !5
  br label %if.end.2255

if.end.2255:                                      ; preds = %if.then.2253, %if.then.2250
  %1388 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2256 = icmp eq i32 %1388, 0
  br i1 %cmp2256, label %if.then.2258, label %if.else.2272

if.then.2258:                                     ; preds = %if.end.2255
  %1389 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %1390 = load i32, i32* %strsize, align 4, !tbaa !5
  %idx.ext = sext i32 %1390 to i64
  %add.ptr2259 = getelementptr inbounds i8, i8* %1389, i64 %idx.ext
  %1391 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr2260 = getelementptr inbounds %struct.address, %struct.address* %1391, i32 0, i32 0
  %1392 = load i8*, i8** %q_paddr2260, align 8, !tbaa !22
  %1393 = load i32, i32* @deliver.tobufsize, align 4, !tbaa !5
  %1394 = load i32, i32* %strsize, align 4, !tbaa !5
  %sub2261 = sub nsw i32 %1393, %1394
  %conv2262 = sext i32 %sub2261 to i64
  %call2263 = call i64 @sm_strlcat2(i8* %add.ptr2259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.195, i32 0, i32 0), i8* %1392, i64 %conv2262)
  %1395 = load i32, i32* %strsize, align 4, !tbaa !5
  %conv2264 = sext i32 %1395 to i64
  %add2265 = add i64 %conv2264, %call2263
  %conv2266 = trunc i64 %add2265 to i32
  store i32 %conv2266, i32* %strsize, align 4, !tbaa !5
  %1396 = load i32, i32* %strsize, align 4, !tbaa !5
  %1397 = load i32, i32* @deliver.tobufsize, align 4, !tbaa !5
  %cmp2267 = icmp slt i32 %1396, %1397
  br i1 %cmp2267, label %lor.end.2270, label %lor.rhs.2269

lor.rhs.2269:                                     ; preds = %if.then.2258
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 3485, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.262, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.2270

lor.end.2270:                                     ; preds = %1398, %if.then.2258
  %1399 = phi i1 [ true, %if.then.2258 ], [ false, %1398 ]
  %lor.ext2271 = zext i1 %1399 to i32
  store i32 1, i32* %anyok, align 4, !tbaa !5
  br label %if.end.2278

if.else.2272:                                     ; preds = %if.end.2255
  %1400 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr2273 = getelementptr inbounds %struct.address, %struct.address* %1400, i32 0, i32 0
  %1401 = load i8*, i8** %q_paddr2273, align 8, !tbaa !22
  %1402 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2274 = getelementptr inbounds %struct.envelope, %struct.envelope* %1402, i32 0, i32 3
  store i8* %1401, i8** %e_to2274, align 8, !tbaa !62
  %1403 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1404 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %1405 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1406 = load i32, i32* %rcode, align 4, !tbaa !5
  call void @markfailure(%struct.envelope* %1403, %struct.address* %1404, %struct.mailer_con_info* %1405, i32 %1406, i32 1)
  %1407 = load i32, i32* %rcode, align 4, !tbaa !5
  %1408 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status2275 = getelementptr inbounds %struct.address, %struct.address* %1408, i32 0, i32 17
  %1409 = load i8*, i8** %q_status2275, align 8, !tbaa !25
  %1410 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1411 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1412 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %1413 = load i64, i64* %xstart, align 8, !tbaa !32
  %1414 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1415 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  call void @giveresponse(i32 %1407, i8* %1409, %struct.mailer* %1410, %struct.mailer_con_info* %1411, %struct.address* %1412, i64 %1413, %struct.envelope* %1414, %struct.address* %1415)
  %1416 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %add.ptr2276 = getelementptr inbounds i8, i8* %1416, i64 1
  %1417 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2277 = getelementptr inbounds %struct.envelope, %struct.envelope* %1417, i32 0, i32 3
  store i8* %add.ptr2276, i8** %e_to2277, align 8, !tbaa !62
  br label %for.inc.2424

if.end.2278:                                      ; preds = %lor.end.2270
  br label %if.end.2290

if.else.2279:                                     ; preds = %if.end.2245
  %1418 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2280 = icmp ne i32 %1418, 0
  br i1 %cmp2280, label %if.then.2282, label %if.end.2289

if.then.2282:                                     ; preds = %if.else.2279
  %1419 = load i32, i32* %goodmxfound, align 4, !tbaa !5
  %tobool2283 = icmp ne i32 %1419, 0
  br i1 %tobool2283, label %land.lhs.true.2284, label %if.end.2288

land.lhs.true.2284:                               ; preds = %if.then.2282
  %1420 = load i32, i32* %rcode, align 4, !tbaa !5
  %cmp2285 = icmp eq i32 %1420, 68
  br i1 %cmp2285, label %if.then.2287, label %if.end.2288

if.then.2287:                                     ; preds = %land.lhs.true.2284
  store i32 75, i32* %rcode, align 4, !tbaa !5
  br label %if.end.2288

if.end.2288:                                      ; preds = %if.then.2287, %land.lhs.true.2284, %if.then.2282
  %1421 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1422 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %1423 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1424 = load i32, i32* %rcode, align 4, !tbaa !5
  call void @markfailure(%struct.envelope* %1421, %struct.address* %1422, %struct.mailer_con_info* %1423, i32 %1424, i32 1)
  br label %for.inc.2424

if.end.2289:                                      ; preds = %if.else.2279
  br label %if.end.2290

if.end.2290:                                      ; preds = %if.end.2289, %if.end.2278
  %1425 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_state2291 = getelementptr inbounds %struct.address, %struct.address* %1425, i32 0, i32 21
  store i16 1, i16* %q_state2291, align 2, !tbaa !24
  %call2292 = call i64 @curtime()
  %1426 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_statdate2293 = getelementptr inbounds %struct.address, %struct.address* %1426, i32 0, i32 19
  store i64 %call2292, i64* %q_statdate2293, align 8, !tbaa !70
  %1427 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nsent2294 = getelementptr inbounds %struct.envelope, %struct.envelope* %1427, i32 0, i32 15
  %1428 = load i16, i16* %e_nsent2294, align 2, !tbaa !59
  %inc2295 = add i16 %1428, 1
  store i16 %inc2295, i16* %e_nsent2294, align 2, !tbaa !59
  %1429 = load i32, i32* @CheckpointInterval, align 4, !tbaa !5
  %cmp2296 = icmp sgt i32 %1429, 0
  br i1 %cmp2296, label %land.lhs.true.2298, label %if.end.2305

land.lhs.true.2298:                               ; preds = %if.end.2290
  %1430 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nsent2299 = getelementptr inbounds %struct.envelope, %struct.envelope* %1430, i32 0, i32 15
  %1431 = load i16, i16* %e_nsent2299, align 2, !tbaa !59
  %conv2300 = sext i16 %1431 to i32
  %1432 = load i32, i32* @CheckpointInterval, align 4, !tbaa !5
  %cmp2301 = icmp sge i32 %conv2300, %1432
  br i1 %cmp2301, label %if.then.2303, label %if.end.2305

if.then.2303:                                     ; preds = %land.lhs.true.2298
  %1433 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @queueup(%struct.envelope* %1433, i32 0, i32 0)
  %1434 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_nsent2304 = getelementptr inbounds %struct.envelope, %struct.envelope* %1434, i32 0, i32 15
  store i16 0, i16* %e_nsent2304, align 2, !tbaa !59
  br label %if.end.2305

if.end.2305:                                      ; preds = %if.then.2303, %land.lhs.true.2298, %if.end.2290
  %1435 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags2306 = getelementptr inbounds %struct.mailer, %struct.mailer* %1435, i32 0, i32 5
  %arrayidx2307 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags2306, i32 0, i64 3
  %1436 = load i32, i32* %arrayidx2307, align 4, !tbaa !5
  %and2308 = and i32 %1436, 4096
  %tobool2309 = icmp ne i32 %and2308, 0
  br i1 %tobool2309, label %land.lhs.true.2310, label %if.else.2322

land.lhs.true.2310:                               ; preds = %if.end.2305
  %1437 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2311 = getelementptr inbounds %struct.address, %struct.address* %1437, i32 0, i32 5
  %1438 = load i64, i64* %q_flags2311, align 8, !tbaa !52
  %and2312 = and i64 %1438, 64
  %cmp2313 = icmp ne i64 %and2312, 0
  br i1 %cmp2313, label %if.then.2315, label %if.else.2322

if.then.2315:                                     ; preds = %land.lhs.true.2310
  %1439 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2316 = getelementptr inbounds %struct.address, %struct.address* %1439, i32 0, i32 5
  %1440 = load i64, i64* %q_flags2316, align 8, !tbaa !52
  %or2317 = or i64 %1440, 4096
  store i64 %or2317, i64* %q_flags2316, align 8, !tbaa !52
  %1441 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_status2318 = getelementptr inbounds %struct.address, %struct.address* %1441, i32 0, i32 17
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), i8** %q_status2318, align 8, !tbaa !25
  %1442 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp2319 = getelementptr inbounds %struct.envelope, %struct.envelope* %1442, i32 0, i32 32
  %1443 = load %struct.sm_file*, %struct.sm_file** %e_xfp2319, align 8, !tbaa !46
  %1444 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr2320 = getelementptr inbounds %struct.address, %struct.address* %1444, i32 0, i32 0
  %1445 = load i8*, i8** %q_paddr2320, align 8, !tbaa !22
  %call2321 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %1443, i32 -2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.188, i32 0, i32 0), i8* %1445)
  br label %if.end.2423

if.else.2322:                                     ; preds = %land.lhs.true.2310, %if.end.2305
  %1446 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2323 = getelementptr inbounds %struct.address, %struct.address* %1446, i32 0, i32 5
  %1447 = load i64, i64* %q_flags2323, align 8, !tbaa !52
  %and2324 = and i64 %1447, 64
  %cmp2325 = icmp ne i64 %and2324, 0
  br i1 %cmp2325, label %land.lhs.true.2327, label %if.else.2343

land.lhs.true.2327:                               ; preds = %if.else.2322
  %1448 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2328 = getelementptr inbounds %struct.address, %struct.address* %1448, i32 0, i32 5
  %1449 = load i64, i64* %q_flags2328, align 8, !tbaa !52
  %and2329 = and i64 %1449, 2
  %cmp2330 = icmp ne i64 %and2329, 0
  br i1 %cmp2330, label %land.lhs.true.2332, label %if.else.2343

land.lhs.true.2332:                               ; preds = %land.lhs.true.2327
  %1450 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2333 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1450, i32 0, i32 0
  %1451 = load i64, i64* %mci_flags2333, align 8, !tbaa !71
  %and2334 = and i64 %1451, 2048
  %cmp2335 = icmp ne i64 %and2334, 0
  br i1 %cmp2335, label %if.else.2343, label %if.then.2337

if.then.2337:                                     ; preds = %land.lhs.true.2332
  %1452 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2338 = getelementptr inbounds %struct.address, %struct.address* %1452, i32 0, i32 5
  %1453 = load i64, i64* %q_flags2338, align 8, !tbaa !52
  %or2339 = or i64 %1453, 1024
  store i64 %or2339, i64* %q_flags2338, align 8, !tbaa !52
  %1454 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp2340 = getelementptr inbounds %struct.envelope, %struct.envelope* %1454, i32 0, i32 32
  %1455 = load %struct.sm_file*, %struct.sm_file** %e_xfp2340, align 8, !tbaa !46
  %1456 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr2341 = getelementptr inbounds %struct.address, %struct.address* %1456, i32 0, i32 0
  %1457 = load i8*, i8** %q_paddr2341, align 8, !tbaa !22
  %call2342 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %1455, i32 -2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.263, i32 0, i32 0), i8* %1457)
  br label %if.end.2422

if.else.2343:                                     ; preds = %land.lhs.true.2332, %land.lhs.true.2327, %if.else.2322
  %1458 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dlvr_flag2344 = getelementptr inbounds %struct.envelope, %struct.envelope* %1458, i32 0, i32 51
  %1459 = load i32, i32* %e_dlvr_flag2344, align 4, !tbaa !57
  %and2345 = and i32 %1459, 1
  %cmp2346 = icmp ne i32 %and2345, 0
  br i1 %cmp2346, label %land.lhs.true.2348, label %if.else.2384

land.lhs.true.2348:                               ; preds = %if.else.2343
  %1460 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2349 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1460, i32 0, i32 0
  %1461 = load i64, i64* %mci_flags2349, align 8, !tbaa !71
  %and2350 = and i64 %1461, 4194304
  %cmp2351 = icmp ne i64 %and2350, 0
  br i1 %cmp2351, label %if.else.2384, label %land.lhs.true.2353

land.lhs.true.2353:                               ; preds = %land.lhs.true.2348
  %1462 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2354 = getelementptr inbounds %struct.address, %struct.address* %1462, i32 0, i32 5
  %1463 = load i64, i64* %q_flags2354, align 8, !tbaa !52
  %and2355 = and i64 %1463, 2
  %cmp2356 = icmp ne i64 %and2355, 0
  br i1 %cmp2356, label %land.lhs.true.2358, label %if.else.2384

land.lhs.true.2358:                               ; preds = %land.lhs.true.2353
  %1464 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2359 = getelementptr inbounds %struct.address, %struct.address* %1464, i32 0, i32 5
  %1465 = load i64, i64* %q_flags2359, align 8, !tbaa !52
  %and2360 = and i64 %1465, 512
  %cmp2361 = icmp ne i64 %and2360, 0
  br i1 %cmp2361, label %lor.lhs.false.2363, label %if.then.2378

lor.lhs.false.2363:                               ; preds = %land.lhs.true.2358
  %1466 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2364 = getelementptr inbounds %struct.address, %struct.address* %1466, i32 0, i32 5
  %1467 = load i64, i64* %q_flags2364, align 8, !tbaa !52
  %and2365 = and i64 %1467, 64
  %cmp2366 = icmp ne i64 %and2365, 0
  br i1 %cmp2366, label %if.then.2378, label %lor.lhs.false.2368

lor.lhs.false.2368:                               ; preds = %lor.lhs.false.2363
  %1468 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2369 = getelementptr inbounds %struct.address, %struct.address* %1468, i32 0, i32 5
  %1469 = load i64, i64* %q_flags2369, align 8, !tbaa !52
  %and2370 = and i64 %1469, 128
  %cmp2371 = icmp ne i64 %and2370, 0
  br i1 %cmp2371, label %if.then.2378, label %lor.lhs.false.2373

lor.lhs.false.2373:                               ; preds = %lor.lhs.false.2368
  %1470 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2374 = getelementptr inbounds %struct.address, %struct.address* %1470, i32 0, i32 5
  %1471 = load i64, i64* %q_flags2374, align 8, !tbaa !52
  %and2375 = and i64 %1471, 256
  %cmp2376 = icmp ne i64 %and2375, 0
  br i1 %cmp2376, label %if.then.2378, label %if.else.2384

if.then.2378:                                     ; preds = %lor.lhs.false.2373, %lor.lhs.false.2368, %lor.lhs.false.2363, %land.lhs.true.2358
  %1472 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2379 = getelementptr inbounds %struct.address, %struct.address* %1472, i32 0, i32 5
  %1473 = load i64, i64* %q_flags2379, align 8, !tbaa !52
  %or2380 = or i64 %1473, 131072
  store i64 %or2380, i64* %q_flags2379, align 8, !tbaa !52
  %1474 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp2381 = getelementptr inbounds %struct.envelope, %struct.envelope* %1474, i32 0, i32 32
  %1475 = load %struct.sm_file*, %struct.sm_file** %e_xfp2381, align 8, !tbaa !46
  %1476 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr2382 = getelementptr inbounds %struct.address, %struct.address* %1476, i32 0, i32 0
  %1477 = load i8*, i8** %q_paddr2382, align 8, !tbaa !22
  %call2383 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %1475, i32 -2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.264, i32 0, i32 0), i8* %1477)
  br label %if.end.2421

if.else.2384:                                     ; preds = %lor.lhs.false.2373, %land.lhs.true.2353, %land.lhs.true.2348, %if.else.2343
  %1478 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_dlvr_flag2385 = getelementptr inbounds %struct.envelope, %struct.envelope* %1478, i32 0, i32 51
  %1479 = load i32, i32* %e_dlvr_flag2385, align 4, !tbaa !57
  %and2386 = and i32 %1479, 16
  %cmp2387 = icmp ne i32 %and2386, 0
  br i1 %cmp2387, label %land.lhs.true.2389, label %if.end.2420

land.lhs.true.2389:                               ; preds = %if.else.2384
  %1480 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2390 = getelementptr inbounds %struct.address, %struct.address* %1480, i32 0, i32 5
  %1481 = load i64, i64* %q_flags2390, align 8, !tbaa !52
  %and2391 = and i64 %1481, 512
  %cmp2392 = icmp ne i64 %and2391, 0
  br i1 %cmp2392, label %lor.lhs.false.2394, label %land.lhs.true.2409

lor.lhs.false.2394:                               ; preds = %land.lhs.true.2389
  %1482 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2395 = getelementptr inbounds %struct.address, %struct.address* %1482, i32 0, i32 5
  %1483 = load i64, i64* %q_flags2395, align 8, !tbaa !52
  %and2396 = and i64 %1483, 64
  %cmp2397 = icmp ne i64 %and2396, 0
  br i1 %cmp2397, label %land.lhs.true.2409, label %lor.lhs.false.2399

lor.lhs.false.2399:                               ; preds = %lor.lhs.false.2394
  %1484 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2400 = getelementptr inbounds %struct.address, %struct.address* %1484, i32 0, i32 5
  %1485 = load i64, i64* %q_flags2400, align 8, !tbaa !52
  %and2401 = and i64 %1485, 128
  %cmp2402 = icmp ne i64 %and2401, 0
  br i1 %cmp2402, label %land.lhs.true.2409, label %lor.lhs.false.2404

lor.lhs.false.2404:                               ; preds = %lor.lhs.false.2399
  %1486 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2405 = getelementptr inbounds %struct.address, %struct.address* %1486, i32 0, i32 5
  %1487 = load i64, i64* %q_flags2405, align 8, !tbaa !52
  %and2406 = and i64 %1487, 256
  %cmp2407 = icmp ne i64 %and2406, 0
  br i1 %cmp2407, label %land.lhs.true.2409, label %if.end.2420

land.lhs.true.2409:                               ; preds = %lor.lhs.false.2404, %lor.lhs.false.2399, %lor.lhs.false.2394, %land.lhs.true.2389
  %1488 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2410 = getelementptr inbounds %struct.address, %struct.address* %1488, i32 0, i32 5
  %1489 = load i64, i64* %q_flags2410, align 8, !tbaa !52
  %and2411 = and i64 %1489, 2
  %cmp2412 = icmp ne i64 %and2411, 0
  br i1 %cmp2412, label %if.then.2414, label %if.end.2420

if.then.2414:                                     ; preds = %land.lhs.true.2409
  %1490 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_flags2415 = getelementptr inbounds %struct.address, %struct.address* %1490, i32 0, i32 5
  %1491 = load i64, i64* %q_flags2415, align 8, !tbaa !52
  %or2416 = or i64 %1491, 32768
  store i64 %or2416, i64* %q_flags2415, align 8, !tbaa !52
  %1492 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_xfp2417 = getelementptr inbounds %struct.envelope, %struct.envelope* %1492, i32 0, i32 32
  %1493 = load %struct.sm_file*, %struct.sm_file** %e_xfp2417, align 8, !tbaa !46
  %1494 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_paddr2418 = getelementptr inbounds %struct.address, %struct.address* %1494, i32 0, i32 0
  %1495 = load i8*, i8** %q_paddr2418, align 8, !tbaa !22
  %call2419 = call i32 (%struct.sm_file*, i32, i8*, ...) @sm_io_fprintf(%struct.sm_file* %1493, i32 -2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.265, i32 0, i32 0), i8* %1495)
  br label %if.end.2420

if.end.2420:                                      ; preds = %if.then.2414, %land.lhs.true.2409, %lor.lhs.false.2404, %if.else.2384
  br label %if.end.2421

if.end.2421:                                      ; preds = %if.end.2420, %if.then.2378
  br label %if.end.2422

if.end.2422:                                      ; preds = %if.end.2421, %if.then.2337
  br label %if.end.2423

if.end.2423:                                      ; preds = %if.end.2422, %if.then.2315
  br label %for.inc.2424

for.inc.2424:                                     ; preds = %if.end.2423, %if.end.2288, %if.else.2272, %if.then.2244
  %1496 = load %struct.address*, %struct.address** %to, align 8, !tbaa !1
  %q_tchain2425 = getelementptr inbounds %struct.address, %struct.address* %1496, i32 0, i32 13
  %1497 = load %struct.address*, %struct.address** %q_tchain2425, align 8, !tbaa !132
  store %struct.address* %1497, %struct.address** %to, align 8, !tbaa !1
  br label %for.cond.2236

for.end.2426:                                     ; preds = %for.cond.2236
  %1498 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_flags2427 = getelementptr inbounds %struct.mailer, %struct.mailer* %1498, i32 0, i32 5
  %arrayidx2428 = getelementptr inbounds [8 x i32], [8 x i32]* %m_flags2427, i32 0, i64 3
  %1499 = load i32, i32* %arrayidx2428, align 4, !tbaa !5
  %and2429 = and i32 %1499, 67108864
  %tobool2430 = icmp ne i32 %and2429, 0
  br i1 %tobool2430, label %if.then.2431, label %if.end.2454

if.then.2431:                                     ; preds = %for.end.2426
  store i32 0, i32* %rcode, align 4, !tbaa !5
  %1500 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_statmsg2432 = getelementptr inbounds %struct.envelope, %struct.envelope* %1500, i32 0, i32 35
  store i8* null, i8** %e_statmsg2432, align 8, !tbaa !51
  %1501 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %cmp2433 = icmp ne %struct.mailer_con_info* %1501, null
  br i1 %cmp2433, label %land.lhs.true.2435, label %if.end.2453

land.lhs.true.2435:                               ; preds = %if.then.2431
  %1502 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state2436 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1502, i32 0, i32 4
  %1503 = load i16, i16* %mci_state2436, align 2, !tbaa !75
  %conv2437 = sext i16 %1503 to i32
  %cmp2438 = icmp eq i32 %conv2437, 3
  br i1 %cmp2438, label %if.then.2450, label %lor.lhs.false.2440

lor.lhs.false.2440:                               ; preds = %land.lhs.true.2435
  %1504 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state2441 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1504, i32 0, i32 4
  %1505 = load i16, i16* %mci_state2441, align 2, !tbaa !75
  %conv2442 = sext i16 %1505 to i32
  %cmp2443 = icmp eq i32 %conv2442, 4
  br i1 %cmp2443, label %if.then.2450, label %lor.lhs.false.2445

lor.lhs.false.2445:                               ; preds = %lor.lhs.false.2440
  %1506 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state2446 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1506, i32 0, i32 4
  %1507 = load i16, i16* %mci_state2446, align 2, !tbaa !75
  %conv2447 = sext i16 %1507 to i32
  %cmp2448 = icmp eq i32 %conv2447, 5
  br i1 %cmp2448, label %if.then.2450, label %if.end.2453

if.then.2450:                                     ; preds = %lor.lhs.false.2445, %lor.lhs.false.2440, %land.lhs.true.2435
  %1508 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state2451 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1508, i32 0, i32 4
  store i16 2, i16* %mci_state2451, align 2, !tbaa !75
  %1509 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_phase = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1509, i32 0, i32 10
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.266, i32 0, i32 0), i8** %mci_phase, align 8, !tbaa !148
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.266, i32 0, i32 0), i8** @SmtpPhase, align 8, !tbaa !1
  %1510 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1511 = load i8*, i8** @CurHostName, align 8, !tbaa !1
  %1512 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_phase2452 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1512, i32 0, i32 10
  %1513 = load i8*, i8** %mci_phase2452, align 8, !tbaa !148
  call void (i32, %struct.envelope*, i8*, ...) @sm_setproctitle(i32 1, %struct.envelope* %1510, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i32 0, i32 0), i8* %1511, i8* %1513)
  br label %if.end.2453

if.end.2453:                                      ; preds = %if.then.2450, %lor.lhs.false.2445, %if.then.2431
  br label %if.end.2454

if.end.2454:                                      ; preds = %if.end.2453, %for.end.2426
  %1514 = load i8*, i8** @deliver.tobuf, align 8, !tbaa !1
  %arrayidx2455 = getelementptr inbounds i8, i8* %1514, i64 0
  %1515 = load i8, i8* %arrayidx2455, align 1, !tbaa !15
  %conv2456 = sext i8 %1515 to i32
  %cmp2457 = icmp ne i32 %conv2456, 0
  br i1 %cmp2457, label %if.then.2459, label %if.end.2460

if.then.2459:                                     ; preds = %if.end.2454
  %1516 = load i32, i32* %rcode, align 4, !tbaa !5
  %1517 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1518 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1519 = load volatile %struct.address*, %struct.address** %ctladdr, align 8, !tbaa !1
  %1520 = load i64, i64* %xstart, align 8, !tbaa !32
  %1521 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @giveresponse(i32 %1516, i8* null, %struct.mailer* %1517, %struct.mailer_con_info* %1518, %struct.address* %1519, i64 %1520, %struct.envelope* %1521, %struct.address* null)
  br label %if.end.2460

if.end.2460:                                      ; preds = %if.then.2459, %if.end.2454
  %1522 = load i32, i32* %anyok, align 4, !tbaa !5
  %tobool2461 = icmp ne i32 %1522, 0
  br i1 %tobool2461, label %if.then.2462, label %if.end.2463

if.then.2462:                                     ; preds = %if.end.2460
  %1523 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %1524 = load volatile %struct.address*, %struct.address** %tochain, align 8, !tbaa !1
  call void @markstats(%struct.envelope* %1523, %struct.address* %1524, i32 110)
  br label %if.end.2463

if.end.2463:                                      ; preds = %if.then.2462, %if.end.2460
  %1525 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  call void @mci_store_persistent(%struct.mailer_con_info* %1525)
  %1526 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %cmp2464 = icmp ne %struct.mailer_con_info* %1526, null
  br i1 %cmp2464, label %land.lhs.true.2466, label %if.end.2473

land.lhs.true.2466:                               ; preds = %if.end.2463
  %1527 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_retryrcpt2467 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1527, i32 0, i32 19
  %1528 = load i32, i32* %mci_retryrcpt2467, align 4, !tbaa !144
  %tobool2468 = icmp ne i32 %1528, 0
  br i1 %tobool2468, label %land.lhs.true.2469, label %if.end.2473

land.lhs.true.2469:                               ; preds = %land.lhs.true.2466
  %1529 = load i32, i32* %nummxhosts, align 4, !tbaa !5
  %1530 = load i32, i32* %hostnum, align 4, !tbaa !5
  %cmp2470 = icmp sgt i32 %1529, %1530
  br i1 %cmp2470, label %if.then.2472, label %if.end.2473

if.then.2472:                                     ; preds = %land.lhs.true.2469
  br label %tryhost

if.end.2473:                                      ; preds = %land.lhs.true.2469, %land.lhs.true.2466, %if.end.2463
  %1531 = load volatile i32, i32* %clever, align 4, !tbaa !5
  %tobool2474 = icmp ne i32 %1531, 0
  br i1 %tobool2474, label %land.lhs.true.2475, label %if.end.2489

land.lhs.true.2475:                               ; preds = %if.end.2473
  %1532 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %cmp2476 = icmp ne %struct.mailer_con_info* %1532, null
  br i1 %cmp2476, label %land.lhs.true.2478, label %if.end.2489

land.lhs.true.2478:                               ; preds = %land.lhs.true.2475
  %1533 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_state2479 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1533, i32 0, i32 4
  %1534 = load i16, i16* %mci_state2479, align 2, !tbaa !75
  %conv2480 = sext i16 %1534 to i32
  %cmp2481 = icmp ne i32 %conv2480, 0
  br i1 %cmp2481, label %land.lhs.true.2483, label %if.end.2489

land.lhs.true.2483:                               ; preds = %land.lhs.true.2478
  %1535 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %mci_flags2484 = getelementptr inbounds %struct.mailer_con_info, %struct.mailer_con_info* %1535, i32 0, i32 0
  %1536 = load i64, i64* %mci_flags2484, align 8, !tbaa !71
  %and2485 = and i64 %1536, 4
  %cmp2486 = icmp ne i64 %and2485, 0
  br i1 %cmp2486, label %if.end.2489, label %if.then.2488

if.then.2488:                                     ; preds = %land.lhs.true.2483
  %1537 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %1538 = load volatile %struct.mailer_con_info*, %struct.mailer_con_info** %mci, align 8, !tbaa !1
  %1539 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @smtpquit(%struct.mailer* %1537, %struct.mailer_con_info* %1538, %struct.envelope* %1539)
  br label %if.end.2489

if.end.2489:                                      ; preds = %if.then.2488, %land.lhs.true.2483, %land.lhs.true.2478, %land.lhs.true.2475, %if.end.2473
  br label %cleanup.2490

cleanup.2490:                                     ; preds = %if.end.2489, %if.then.542, %if.then.136, %if.then.62
  %1540 = bitcast %struct.address** %skip_back to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1540) #1
  %1541 = load %struct.sm_exc_handler*, %struct.sm_exc_handler** @SmExcHandler, align 8, !tbaa !1
  %cmp2491 = icmp eq %struct.sm_exc_handler* %1541, %_h
  br i1 %cmp2491, label %lor.end.2494, label %lor.rhs.2493

lor.rhs.2493:                                     ; preds = %cleanup.2490
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 3638, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.267, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.2494

lor.end.2494:                                     ; preds = %1542, %cleanup.2490
  %1543 = phi i1 [ true, %cleanup.2490 ], [ false, %1542 ]
  %lor.ext2495 = zext i1 %1543 to i32
  br label %if.end.2496

if.end.2496:                                      ; preds = %lor.end.2494, %do.body
  %eh_context2497 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 1
  %arraydecay2498 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %eh_context2497, i32 0, i32 0
  %call2499 = call i32 @__sigsetjmp(%struct.__jmp_buf_tag* %arraydecay2498, i32 0) #14
  %cmp2500 = icmp eq i32 %call2499, 0
  br i1 %cmp2500, label %if.then.2502, label %if.end.2521

if.then.2502:                                     ; preds = %if.end.2496
  %1544 = bitcast [2048 x i8]* %wbuf2504 to i8*
  call void @llvm.lifetime.start(i64 2048, i8* %1544) #1
  %arraydecay2505 = getelementptr inbounds [2048 x i8], [2048 x i8]* %wbuf2504, i32 0, i32 0
  %1545 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2506 = getelementptr inbounds %struct.envelope, %struct.envelope* %1545, i32 0, i32 3
  %1546 = load i8*, i8** %e_to2506, align 8, !tbaa !62
  %cmp2507 = icmp eq i8* %1546, null
  br i1 %cmp2507, label %cond.true.2509, label %cond.false.2510

cond.true.2509:                                   ; preds = %if.then.2502
  br label %cond.end.2513

cond.false.2510:                                  ; preds = %if.then.2502
  %1547 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2511 = getelementptr inbounds %struct.envelope, %struct.envelope* %1547, i32 0, i32 3
  %1548 = load i8*, i8** %e_to2511, align 8, !tbaa !62
  %call2512 = call i8* @shortenstring(i8* %1548, i64 203)
  br label %cond.end.2513

cond.end.2513:                                    ; preds = %cond.false.2510, %cond.true.2509
  %cond2514 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.96, i32 0, i32 0), %cond.true.2509 ], [ %call2512, %cond.false.2510 ]
  %1549 = load %struct.mailer*, %struct.mailer** %m, align 8, !tbaa !1
  %m_name2515 = getelementptr inbounds %struct.mailer, %struct.mailer* %1549, i32 0, i32 0
  %1550 = load i8*, i8** %m_name2515, align 8, !tbaa !63
  %call2516 = call i32 (i8*, i64, i8*, ...) @sm_snprintf(i8* %arraydecay2505, i64 2048, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.268, i32 0, i32 0), i8* %cond2514, i8* %1550)
  %arraydecay2517 = getelementptr inbounds [2048 x i8], [2048 x i8]* %wbuf2504, i32 0, i32 0
  call void @checkfd012(i8* %arraydecay2517)
  %call2518 = call i32* @__errno_location() #11
  store i32 0, i32* %call2518, align 4, !tbaa !5
  %1551 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_macro2519 = getelementptr inbounds %struct.envelope, %struct.envelope* %1551, i32 0, i32 46
  %1552 = load i32, i32* @SmHeapGroup, align 4, !tbaa !5
  call void @macdefine_tagged(%struct.MACROS_T* %e_macro2519, i32 2, i32 103, i8* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 3664, i32 %1552)
  %1553 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  %e_to2520 = getelementptr inbounds %struct.envelope, %struct.envelope* %1553, i32 0, i32 3
  store i8* null, i8** %e_to2520, align 8, !tbaa !62
  %1554 = bitcast [2048 x i8]* %wbuf2504 to i8*
  call void @llvm.lifetime.end(i64 2048, i8* %1554) #1
  br label %if.end.2521

if.end.2521:                                      ; preds = %cond.end.2513, %if.end.2496
  br label %do.cond.2522

do.cond.2522:                                     ; preds = %if.end.2521
  br label %do.end.2523

do.end.2523:                                      ; preds = %do.cond.2522
  %eh_state2524 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 3
  %1555 = load i32, i32* %eh_state2524, align 4, !tbaa !124
  %cmp2525 = icmp eq i32 %1555, 2
  br i1 %cmp2525, label %if.then.2527, label %if.else.2540

if.then.2527:                                     ; preds = %do.end.2523
  %1556 = load %struct.sm_exc_handler*, %struct.sm_exc_handler** @SmExcHandler, align 8, !tbaa !1
  %cmp2528 = icmp eq %struct.sm_exc_handler* %1556, %_h
  br i1 %cmp2528, label %lor.end.2531, label %lor.rhs.2530

lor.rhs.2530:                                     ; preds = %if.then.2527
  call void @sm_abort_at(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 3667, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.267, i32 0, i32 0)) #15
  unreachable
                                                  ; No predecessors!
  br label %lor.end.2531

lor.end.2531:                                     ; preds = %1557, %if.then.2527
  %1558 = phi i1 [ true, %if.then.2527 ], [ false, %1557 ]
  %lor.ext2532 = zext i1 %1558 to i32
  %eh_parent2533 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 2
  %1559 = load %struct.sm_exc_handler*, %struct.sm_exc_handler** %eh_parent2533, align 8, !tbaa !123
  store %struct.sm_exc_handler* %1559, %struct.sm_exc_handler** @SmExcHandler, align 8, !tbaa !1
  %eh_value2534 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 0
  %1560 = load %struct.sm_exc*, %struct.sm_exc** %eh_value2534, align 8, !tbaa !121
  %cmp2535 = icmp ne %struct.sm_exc* %1560, null
  br i1 %cmp2535, label %if.then.2537, label %if.end.2539

if.then.2537:                                     ; preds = %lor.end.2531
  %eh_value2538 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 0
  %1561 = load %struct.sm_exc*, %struct.sm_exc** %eh_value2538, align 8, !tbaa !121
  call void @sm_exc_raise_x(%struct.sm_exc* %1561) #15
  unreachable

if.end.2539:                                      ; preds = %lor.end.2531
  br label %if.end.2554

if.else.2540:                                     ; preds = %do.end.2523
  %eh_state2541 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 3
  %1562 = load i32, i32* %eh_state2541, align 4, !tbaa !124
  %cmp2542 = icmp eq i32 %1562, 0
  br i1 %cmp2542, label %if.then.2544, label %if.else.2551

if.then.2544:                                     ; preds = %if.else.2540
  %eh_value2545 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 0
  %1563 = load %struct.sm_exc*, %struct.sm_exc** %eh_value2545, align 8, !tbaa !121
  %cmp2546 = icmp ne %struct.sm_exc* %1563, null
  br i1 %cmp2546, label %if.then.2548, label %if.end.2550

if.then.2548:                                     ; preds = %if.then.2544
  %eh_value2549 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 0
  %1564 = load %struct.sm_exc*, %struct.sm_exc** %eh_value2549, align 8, !tbaa !121
  call void @sm_exc_raise_x(%struct.sm_exc* %1564) #15
  unreachable

if.end.2550:                                      ; preds = %if.then.2544
  br label %if.end.2553

if.else.2551:                                     ; preds = %if.else.2540
  %eh_value2552 = getelementptr inbounds %struct.sm_exc_handler, %struct.sm_exc_handler* %_h, i32 0, i32 0
  %1565 = load %struct.sm_exc*, %struct.sm_exc** %eh_value2552, align 8, !tbaa !121
  call void @sm_exc_free(%struct.sm_exc* %1565)
  br label %if.end.2553

if.end.2553:                                      ; preds = %if.else.2551, %if.end.2550
  br label %if.end.2554

if.end.2554:                                      ; preds = %if.end.2553, %if.end.2539
  %1566 = bitcast %struct.sm_exc_handler* %_h to i8*
  call void @llvm.lifetime.end(i64 224, i8* %1566) #1
  %1567 = load i32, i32* %rcode, align 4, !tbaa !5
  store i32 %1567, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup.2555

cleanup.2555:                                     ; preds = %if.end.2554, %if.then
  %1568 = bitcast [4096 x i8]* %cbuf to i8*
  call void @llvm.lifetime.end(i64 4096, i8* %1568) #1
  %1569 = bitcast [257 x i8]* %buf to i8*
  call void @llvm.lifetime.end(i64 257, i8* %1569) #1
  %1570 = bitcast [257 x i8*]* %pv to i8*
  call void @llvm.lifetime.end(i64 2056, i8* %1570) #1
  %1571 = bitcast [101 x i8*]* %mxhosts to i8*
  call void @llvm.lifetime.end(i64 808, i8* %1571) #1
  %1572 = bitcast [2 x i32]* %rpvect to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1572) #1
  %1573 = bitcast [2 x i32]* %mpvect to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1573) #1
  %1574 = bitcast i8** %rpath to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1574) #1
  %1575 = bitcast i32* %ret to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1575) #1
  %1576 = bitcast i32* %rcptcount to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1576) #1
  %1577 = bitcast i32* %strsize to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1577) #1
  %1578 = bitcast i32* %quarantine to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1578) #1
  %1579 = bitcast i32* %ovr to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1579) #1
  %1580 = bitcast i32* %goodmxfound to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1580) #1
  %1581 = bitcast i32* %anyok to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1581) #1
  %1582 = bitcast i32* %suidwarn to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1582) #1
  %1583 = bitcast i64* %xstart to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1583) #1
  %1584 = bitcast i8** %mux_path to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1584) #1
  %1585 = bitcast i64* %enough to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1585) #1
  %1586 = bitcast i16* %port to i8*
  call void @llvm.lifetime.end(i64 2, i8* %1586) #1
  %1587 = bitcast i8** %curhost to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1587) #1
  %1588 = bitcast i32* %pid to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1588) #1
  %1589 = bitcast i8** %firstsig to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1589) #1
  %1590 = bitcast i32* %hostnum to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1590) #1
  %1591 = bitcast i32* %nummxhosts to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1591) #1
  %1592 = bitcast i32* %lmtp_rcode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1592) #1
  %1593 = bitcast i32* %rcode to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1593) #1
  %1594 = bitcast %struct.address** %tochain to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1594) #1
  %1595 = bitcast i32* %clever to i8*
  call void @llvm.lifetime.end(i64 4, i8* %1595) #1
  %1596 = bitcast %struct.address** %to to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1596) #1
  %1597 = bitcast %struct.mailer_con_info** %mci to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1597) #1
  %1598 = bitcast %struct.address** %ctladdr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1598) #1
  %1599 = bitcast %struct.mailer** %m to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1599) #1
  %1600 = bitcast i8** %p to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1600) #1
  %1601 = bitcast i8*** %mvp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1601) #1
  %1602 = bitcast i8*** %pvp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1602) #1
  %1603 = bitcast i8** %user to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1603) #1
  %1604 = bitcast i8** %host to i8*
  call void @llvm.lifetime.end(i64 8, i8* %1604) #1
  %1605 = load i32, i32* %retval
  ret i32 %1605

unreachable:                                      ; preds = %cleanup.1224, %cleanup
  unreachable
}

declare void @printopenfds(i32) #2

declare i8* @remotename(i8*, %struct.mailer*, i32, i32*, %struct.envelope*) #2

; Function Attrs: nounwind uwtable
define internal i32 @coloncmp(i8* %a, i8* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %braclev = alloca i32, align 4
  %cleanup.dest.slot = alloca i32
  %__s1_len = alloca i64, align 8
  %__s2_len = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i8* %a, i8** %a.addr, align 8, !tbaa !1
  store i8* %b, i8** %b.addr, align 8, !tbaa !1
  %0 = bitcast i32* %ret to i8*
  call void @llvm.lifetime.start(i64 4, i8* %0) #1
  store i32 0, i32* %ret, align 4, !tbaa !5
  %1 = bitcast i32* %braclev to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %braclev, align 4, !tbaa !5
  br label %while.cond

while.cond:                                       ; preds = %if.end.28, %entry
  %2 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %3 = load i8, i8* %2, align 1, !tbaa !15
  %conv = sext i8 %3 to i32
  %4 = load i8*, i8** %b.addr, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1
  store i8* %incdec.ptr, i8** %b.addr, align 8, !tbaa !1
  %5 = load i8, i8* %4, align 1, !tbaa !15
  %conv1 = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, %conv1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %7 = load i8, i8* %6, align 1, !tbaa !15
  %conv3 = sext i8 %7 to i32
  %cmp4 = icmp eq i32 %conv3, 91
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %8 = load i32, i32* %braclev, align 4, !tbaa !5
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %braclev, align 4, !tbaa !5
  br label %if.end.28

if.else:                                          ; preds = %while.body
  %9 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %10 = load i8, i8* %9, align 1, !tbaa !15
  %conv6 = sext i8 %10 to i32
  %cmp7 = icmp eq i32 %conv6, 93
  br i1 %cmp7, label %land.lhs.true, label %if.else.12

land.lhs.true:                                    ; preds = %if.else
  %11 = load i32, i32* %braclev, align 4, !tbaa !5
  %cmp9 = icmp sgt i32 %11, 0
  br i1 %cmp9, label %if.then.11, label %if.else.12

if.then.11:                                       ; preds = %land.lhs.true
  %12 = load i32, i32* %braclev, align 4, !tbaa !5
  %dec = add nsw i32 %12, -1
  store i32 %dec, i32* %braclev, align 4, !tbaa !5
  br label %if.end.27

if.else.12:                                       ; preds = %land.lhs.true, %if.else
  %13 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %14 = load i8, i8* %13, align 1, !tbaa !15
  %conv13 = sext i8 %14 to i32
  %cmp14 = icmp eq i32 %conv13, 58
  br i1 %cmp14, label %land.lhs.true.16, label %if.else.21

land.lhs.true.16:                                 ; preds = %if.else.12
  %15 = load i32, i32* %braclev, align 4, !tbaa !5
  %cmp17 = icmp sle i32 %15, 0
  br i1 %cmp17, label %if.then.19, label %if.else.21

if.then.19:                                       ; preds = %land.lhs.true.16
  store i32 1, i32* %ret, align 4, !tbaa !5
  %16 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %incdec.ptr20 = getelementptr inbounds i8, i8* %16, i32 1
  store i8* %incdec.ptr20, i8** %a.addr, align 8, !tbaa !1
  br label %while.end

if.else.21:                                       ; preds = %land.lhs.true.16, %if.else.12
  %17 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %18 = load i8, i8* %17, align 1, !tbaa !15
  %conv22 = sext i8 %18 to i32
  %cmp23 = icmp eq i32 %conv22, 0
  br i1 %cmp23, label %if.then.25, label %if.end

if.then.25:                                       ; preds = %if.else.21
  store i32 2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end:                                           ; preds = %if.else.21
  br label %if.end.26

if.end.26:                                        ; preds = %if.end
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then.11
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then
  %19 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %incdec.ptr29 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr29, i8** %a.addr, align 8, !tbaa !1
  br label %while.cond

while.end:                                        ; preds = %if.then.19, %while.cond
  %20 = load i32, i32* %ret, align 4, !tbaa !5
  %cmp30 = icmp eq i32 %20, 0
  br i1 %cmp30, label %land.lhs.true.32, label %if.end.52

land.lhs.true.32:                                 ; preds = %while.end
  %21 = load i32, i32* %braclev, align 4, !tbaa !5
  %cmp33 = icmp sle i32 %21, 0
  br i1 %cmp33, label %land.lhs.true.35, label %if.end.52

land.lhs.true.35:                                 ; preds = %land.lhs.true.32
  %22 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %23 = load i8, i8* %22, align 1, !tbaa !15
  %conv36 = sext i8 %23 to i32
  %cmp37 = icmp eq i32 %conv36, 0
  br i1 %cmp37, label %land.lhs.true.39, label %lor.lhs.false

land.lhs.true.39:                                 ; preds = %land.lhs.true.35
  %24 = load i8*, i8** %b.addr, align 8, !tbaa !1
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 -1
  %25 = load i8, i8* %add.ptr, align 1, !tbaa !15
  %conv40 = sext i8 %25 to i32
  %cmp41 = icmp eq i32 %conv40, 58
  br i1 %cmp41, label %if.then.51, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.39, %land.lhs.true.35
  %26 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %27 = load i8, i8* %26, align 1, !tbaa !15
  %conv43 = sext i8 %27 to i32
  %cmp44 = icmp eq i32 %conv43, 58
  br i1 %cmp44, label %land.lhs.true.46, label %if.end.52

land.lhs.true.46:                                 ; preds = %lor.lhs.false
  %28 = load i8*, i8** %b.addr, align 8, !tbaa !1
  %add.ptr47 = getelementptr inbounds i8, i8* %28, i64 -1
  %29 = load i8, i8* %add.ptr47, align 1, !tbaa !15
  %conv48 = sext i8 %29 to i32
  %cmp49 = icmp eq i32 %conv48, 0
  br i1 %cmp49, label %if.then.51, label %if.end.52

if.then.51:                                       ; preds = %land.lhs.true.46, %land.lhs.true.39
  store i32 1, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.52:                                        ; preds = %land.lhs.true.46, %lor.lhs.false, %land.lhs.true.32, %while.end
  %30 = load i32, i32* %ret, align 4, !tbaa !5
  %cmp53 = icmp eq i32 %30, 1
  br i1 %cmp53, label %land.lhs.true.55, label %if.end.59

land.lhs.true.55:                                 ; preds = %if.end.52
  %31 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %31) #1
  %32 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.start(i64 8, i8* %32) #1
  %33 = load i8*, i8** %a.addr, align 8, !tbaa !1
  %34 = load i8*, i8** %b.addr, align 8, !tbaa !1
  %call = call i32 @strcmp(i8* %33, i8* %34) #1
  store i32 %call, i32* %tmp, !tbaa !5
  %35 = bitcast i64* %__s2_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %35) #1
  %36 = bitcast i64* %__s1_len to i8*
  call void @llvm.lifetime.end(i64 8, i8* %36) #1
  %37 = load i32, i32* %tmp, !tbaa !5
  %cmp56 = icmp eq i32 %37, 0
  br i1 %cmp56, label %if.then.58, label %if.end.59

if.then.58:                                       ; preds = %land.lhs.true.55
  store i32 2, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

if.end.59:                                        ; preds = %land.lhs.true.55, %if.end.52
  %38 = load i32, i32* %ret, align 4, !tbaa !5
  store i32 %38, i32* %retval
  store i32 1, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.59, %if.then.58, %if.then.51, %if.then.25
  %39 = bitcast i32* %braclev to i8*
  call void @llvm.lifetime.end(i64 4, i8* %39) #1
  %40 = bitcast i32* %ret to i8*
  call void @llvm.lifetime.end(i64 4, i8* %40) #1
  %41 = load i32, i32* %retval
  ret i32 %41
}

declare %struct.address* @getctladdr(%struct.address*) #2

declare i32 @rscheck(i8*, i8*, i8*, %struct.envelope*, i32, i32, i8*, i8*, %struct.address*, i8**) #2

declare i32 @checkcompat(%struct.address*, %struct.envelope*) #2

declare void @stripquotes(i8*) #2

declare void @stripbackslash(i8*) #2

declare void @printav(%struct.sm_file*, i8**) #2

declare %struct.mailer_con_info** @mci_scan(%struct.mailer_con_info*) #2

declare %struct.mailer_con_info* @mci_new(%struct.SM_RPOOL_T*) #2

declare void @mci_cache(%struct.mailer_con_info*) #2

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally i32 @atoi(i8* nonnull %__nptr) #10 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8, !tbaa !1
  %0 = load i8*, i8** %__nptr.addr, align 8, !tbaa !1
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #1
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare %struct.servent* @getservbyname(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @parse_hostsignature(i8* %sig, i8** %mxhosts, %struct.mailer* %mailer) #0 {
entry:
  %sig.addr = alloca i8*, align 8
  %mxhosts.addr = alloca i8**, align 8
  %mailer.addr = alloca %struct.mailer*, align 8
  %curpref = alloca i16, align 2
  %nmx = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %hp = alloca i8*, align 8
  %endp = alloca i8*, align 8
  %prefer = alloca [100 x i16], align 16
  %rndm = alloca [100 x i64], align 16
  %sep = alloca i8, align 1
  %__a0 = alloca i8, align 1
  %__a1 = alloca i8, align 1
  %__a2 = alloca i8, align 1
  %tmp = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32
  %tempp = alloca i16, align 2
  %tempr = alloca i64, align 8
  %temp1 = alloca i8*, align 8
  store i8* %sig, i8** %sig.addr, align 8, !tbaa !1
  store i8** %mxhosts, i8*** %mxhosts.addr, align 8, !tbaa !1
  store %struct.mailer* %mailer, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %0 = bitcast i16* %curpref to i8*
  call void @llvm.lifetime.start(i64 2, i8* %0) #1
  store i16 0, i16* %curpref, align 2, !tbaa !40
  %1 = bitcast i32* %nmx to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #1
  store i32 0, i32* %nmx, align 4, !tbaa !5
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #1
  %3 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #1
  %4 = bitcast i8** %hp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %4) #1
  %5 = bitcast i8** %endp to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5) #1
  %6 = bitcast [100 x i16]* %prefer to i8*
  call void @llvm.lifetime.start(i64 200, i8* %6) #1
  %7 = bitcast [100 x i64]* %rndm to i8*
  call void @llvm.lifetime.start(i64 800, i8* %7) #1
  %8 = load i8*, i8** %sig.addr, align 8, !tbaa !1
  store i8* %8, i8** %hp, align 8, !tbaa !1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i8*, i8** %hp, align 8, !tbaa !1
  %cmp = icmp ne i8* %9, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start(i64 1, i8* %sep) #1
  store i8 58, i8* %sep, align 1, !tbaa !15
  call void @llvm.lifetime.start(i64 1, i8* %__a0) #1
  call void @llvm.lifetime.start(i64 1, i8* %__a1) #1
  call void @llvm.lifetime.start(i64 1, i8* %__a2) #1
  br i1 icmp eq (i64 sub (i64 ptrtoint (i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 1) to i64), i64 ptrtoint ([3 x i8]* @.str.149 to i64)), i64 1), label %cond.true, label %cond.false.34

cond.true:                                        ; preds = %for.body
  %10 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), align 1, !tbaa !15
  store i8 %10, i8* %__a0, align 1, !tbaa !15
  %11 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv = sext i8 %11 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %cond.true.3, label %cond.false

cond.true.3:                                      ; preds = %cond.true
  %12 = load i8*, i8** %hp, align 8, !tbaa !1
  br label %cond.end.32

cond.false:                                       ; preds = %cond.true
  %13 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 1), align 1, !tbaa !15
  store i8 %13, i8* %__a1, align 1, !tbaa !15
  %14 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv4 = sext i8 %14 to i32
  %cmp5 = icmp eq i32 %conv4, 0
  br i1 %cmp5, label %cond.true.7, label %cond.false.9

cond.true.7:                                      ; preds = %cond.false
  %15 = load i8*, i8** %hp, align 8, !tbaa !1
  %16 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv8 = sext i8 %16 to i32
  %call = call i8* @strchr(i8* %15, i32 %conv8) #1
  br label %cond.end.30

cond.false.9:                                     ; preds = %cond.false
  %17 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i64 2), align 1, !tbaa !15
  store i8 %17, i8* %__a2, align 1, !tbaa !15
  %18 = load i8, i8* %__a2, align 1, !tbaa !15
  %conv10 = sext i8 %18 to i32
  %cmp11 = icmp eq i32 %conv10, 0
  br i1 %cmp11, label %cond.true.13, label %cond.false.17

cond.true.13:                                     ; preds = %cond.false.9
  %19 = load i8*, i8** %hp, align 8, !tbaa !1
  %20 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv14 = sext i8 %20 to i32
  %21 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv15 = sext i8 %21 to i32
  %call16 = call i8* @__strpbrk_c2(i8* %19, i32 %conv14, i32 %conv15)
  br label %cond.end.28

cond.false.17:                                    ; preds = %cond.false.9
  %22 = load i8, i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0), i64 3), align 1, !tbaa !15
  %conv18 = sext i8 %22 to i32
  %cmp19 = icmp eq i32 %conv18, 0
  br i1 %cmp19, label %cond.true.21, label %cond.false.26

cond.true.21:                                     ; preds = %cond.false.17
  %23 = load i8*, i8** %hp, align 8, !tbaa !1
  %24 = load i8, i8* %__a0, align 1, !tbaa !15
  %conv22 = sext i8 %24 to i32
  %25 = load i8, i8* %__a1, align 1, !tbaa !15
  %conv23 = sext i8 %25 to i32
  %26 = load i8, i8* %__a2, align 1, !tbaa !15
  %conv24 = sext i8 %26 to i32
  %call25 = call i8* @__strpbrk_c3(i8* %23, i32 %conv22, i32 %conv23, i32 %conv24)
  br label %cond.end

cond.false.26:                                    ; preds = %cond.false.17
  %27 = load i8*, i8** %hp, align 8, !tbaa !1
  %call27 = call i8* @strpbrk(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0)) #1
  br label %cond.end

cond.end:                                         ; preds = %cond.false.26, %cond.true.21
  %cond = phi i8* [ %call25, %cond.true.21 ], [ %call27, %cond.false.26 ]
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.end, %cond.true.13
  %cond29 = phi i8* [ %call16, %cond.true.13 ], [ %cond, %cond.end ]
  br label %cond.end.30

cond.end.30:                                      ; preds = %cond.end.28, %cond.true.7
  %cond31 = phi i8* [ %call, %cond.true.7 ], [ %cond29, %cond.end.28 ]
  br label %cond.end.32

cond.end.32:                                      ; preds = %cond.end.30, %cond.true.3
  %cond33 = phi i8* [ null, %cond.true.3 ], [ %cond31, %cond.end.30 ]
  br label %cond.end.36

cond.false.34:                                    ; preds = %for.body
  %28 = load i8*, i8** %hp, align 8, !tbaa !1
  %call35 = call i8* @strpbrk(i8* %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.149, i32 0, i32 0)) #1
  br label %cond.end.36

cond.end.36:                                      ; preds = %cond.false.34, %cond.end.32
  %cond37 = phi i8* [ %cond33, %cond.end.32 ], [ %call35, %cond.false.34 ]
  store i8* %cond37, i8** %tmp, !tbaa !1
  call void @llvm.lifetime.end(i64 1, i8* %__a2) #1
  call void @llvm.lifetime.end(i64 1, i8* %__a1) #1
  call void @llvm.lifetime.end(i64 1, i8* %__a0) #1
  %29 = load i8*, i8** %tmp, !tbaa !1
  store i8* %29, i8** %endp, align 8, !tbaa !1
  %30 = load i8*, i8** %endp, align 8, !tbaa !1
  %cmp38 = icmp ne i8* %30, null
  br i1 %cmp38, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.36
  %31 = load i8*, i8** %endp, align 8, !tbaa !1
  %32 = load i8, i8* %31, align 1, !tbaa !15
  store i8 %32, i8* %sep, align 1, !tbaa !15
  %33 = load i8*, i8** %endp, align 8, !tbaa !1
  store i8 0, i8* %33, align 1, !tbaa !15
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.36
  %34 = load i8*, i8** %hp, align 8, !tbaa !1
  %35 = load i32, i32* %nmx, align 4, !tbaa !5
  %idxprom = sext i32 %35 to i64
  %36 = load i8**, i8*** %mxhosts.addr, align 8, !tbaa !1
  %arrayidx = getelementptr inbounds i8*, i8** %36, i64 %idxprom
  store i8* %34, i8** %arrayidx, align 8, !tbaa !1
  %37 = load i16, i16* %curpref, align 2, !tbaa !40
  %38 = load i32, i32* %nmx, align 4, !tbaa !5
  %idxprom40 = sext i32 %38 to i64
  %arrayidx41 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom40
  store i16 %37, i16* %arrayidx41, align 2, !tbaa !40
  %39 = load i8*, i8** %hp, align 8, !tbaa !1
  %40 = load %struct.mailer*, %struct.mailer** %mailer.addr, align 8, !tbaa !1
  %call42 = call i32 @mci_match(i8* %39, %struct.mailer* %40)
  %tobool = icmp ne i32 %call42, 0
  br i1 %tobool, label %if.then.43, label %if.else

if.then.43:                                       ; preds = %if.end
  %41 = load i32, i32* %nmx, align 4, !tbaa !5
  %idxprom44 = sext i32 %41 to i64
  %arrayidx45 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom44
  store i64 0, i64* %arrayidx45, align 8, !tbaa !32
  br label %if.end.49

if.else:                                          ; preds = %if.end
  %call46 = call i64 @random() #1
  %42 = load i32, i32* %nmx, align 4, !tbaa !5
  %idxprom47 = sext i32 %42 to i64
  %arrayidx48 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom47
  store i64 %call46, i64* %arrayidx48, align 8, !tbaa !32
  br label %if.end.49

if.end.49:                                        ; preds = %if.else, %if.then.43
  %43 = load i8*, i8** %endp, align 8, !tbaa !1
  %cmp50 = icmp ne i8* %43, null
  br i1 %cmp50, label %if.then.52, label %if.end.58

if.then.52:                                       ; preds = %if.end.49
  %44 = load i8, i8* %sep, align 1, !tbaa !15
  %conv53 = sext i8 %44 to i32
  %cmp54 = icmp eq i32 %conv53, 58
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.then.52
  %45 = load i16, i16* %curpref, align 2, !tbaa !40
  %inc = add i16 %45, 1
  store i16 %inc, i16* %curpref, align 2, !tbaa !40
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.56, %if.then.52
  %46 = load i8, i8* %sep, align 1, !tbaa !15
  %47 = load i8*, i8** %endp, align 8, !tbaa !1
  %incdec.ptr = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %incdec.ptr, i8** %endp, align 8, !tbaa !1
  store i8 %46, i8* %47, align 1, !tbaa !15
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.end.49
  %48 = load i32, i32* %nmx, align 4, !tbaa !5
  %inc59 = add nsw i32 %48, 1
  store i32 %inc59, i32* %nmx, align 4, !tbaa !5
  %cmp60 = icmp sge i32 %inc59, 100
  br i1 %cmp60, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %if.end.58
  store i32 2, i32* %cleanup.dest.slot
  br label %cleanup

if.end.63:                                        ; preds = %if.end.58
  store i32 0, i32* %cleanup.dest.slot
  br label %cleanup

cleanup:                                          ; preds = %if.end.63, %if.then.62
  call void @llvm.lifetime.end(i64 1, i8* %sep) #1
  %cleanup.dest = load i32, i32* %cleanup.dest.slot
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %for.end
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %49 = load i8*, i8** %endp, align 8, !tbaa !1
  store i8* %49, i8** %hp, align 8, !tbaa !1
  br label %for.cond

for.end:                                          ; preds = %cleanup, %for.cond
  store i32 0, i32* %i, align 4, !tbaa !5
  br label %for.cond.64

for.cond.64:                                      ; preds = %for.inc.136, %for.end
  %50 = load i32, i32* %i, align 4, !tbaa !5
  %51 = load i32, i32* %nmx, align 4, !tbaa !5
  %cmp65 = icmp slt i32 %50, %51
  br i1 %cmp65, label %for.body.67, label %for.end.138

for.body.67:                                      ; preds = %for.cond.64
  %52 = load i32, i32* %i, align 4, !tbaa !5
  %add = add nsw i32 %52, 1
  store i32 %add, i32* %j, align 4, !tbaa !5
  br label %for.cond.68

for.cond.68:                                      ; preds = %for.inc.133, %for.body.67
  %53 = load i32, i32* %j, align 4, !tbaa !5
  %54 = load i32, i32* %nmx, align 4, !tbaa !5
  %cmp69 = icmp slt i32 %53, %54
  br i1 %cmp69, label %for.body.71, label %for.end.135

for.body.71:                                      ; preds = %for.cond.68
  %55 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom72 = sext i32 %55 to i64
  %arrayidx73 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom72
  %56 = load i16, i16* %arrayidx73, align 2, !tbaa !40
  %conv74 = zext i16 %56 to i32
  %57 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom75 = sext i32 %57 to i64
  %arrayidx76 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom75
  %58 = load i16, i16* %arrayidx76, align 2, !tbaa !40
  %conv77 = zext i16 %58 to i32
  %cmp78 = icmp slt i32 %conv74, %conv77
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %for.body.71
  br label %for.end.135

if.end.81:                                        ; preds = %for.body.71
  %59 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom82 = sext i32 %59 to i64
  %arrayidx83 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom82
  %60 = load i16, i16* %arrayidx83, align 2, !tbaa !40
  %conv84 = zext i16 %60 to i32
  %61 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom85 = sext i32 %61 to i64
  %arrayidx86 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom85
  %62 = load i16, i16* %arrayidx86, align 2, !tbaa !40
  %conv87 = zext i16 %62 to i32
  %cmp88 = icmp sgt i32 %conv84, %conv87
  br i1 %cmp88, label %if.then.104, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.81
  %63 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom90 = sext i32 %63 to i64
  %arrayidx91 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom90
  %64 = load i16, i16* %arrayidx91, align 2, !tbaa !40
  %conv92 = zext i16 %64 to i32
  %65 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom93 = sext i32 %65 to i64
  %arrayidx94 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom93
  %66 = load i16, i16* %arrayidx94, align 2, !tbaa !40
  %conv95 = zext i16 %66 to i32
  %cmp96 = icmp eq i32 %conv92, %conv95
  br i1 %cmp96, label %land.lhs.true, label %if.end.132

land.lhs.true:                                    ; preds = %lor.lhs.false
  %67 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom98 = sext i32 %67 to i64
  %arrayidx99 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom98
  %68 = load i64, i64* %arrayidx99, align 8, !tbaa !32
  %69 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom100 = sext i32 %69 to i64
  %arrayidx101 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom100
  %70 = load i64, i64* %arrayidx101, align 8, !tbaa !32
  %cmp102 = icmp sgt i64 %68, %70
  br i1 %cmp102, label %if.then.104, label %if.end.132

if.then.104:                                      ; preds = %land.lhs.true, %if.end.81
  %71 = bitcast i16* %tempp to i8*
  call void @llvm.lifetime.start(i64 2, i8* %71) #1
  %72 = bitcast i64* %tempr to i8*
  call void @llvm.lifetime.start(i64 8, i8* %72) #1
  %73 = bitcast i8** %temp1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %73) #1
  %74 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom108 = sext i32 %74 to i64
  %arrayidx109 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom108
  %75 = load i16, i16* %arrayidx109, align 2, !tbaa !40
  store i16 %75, i16* %tempp, align 2, !tbaa !40
  %76 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom110 = sext i32 %76 to i64
  %arrayidx111 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom110
  %77 = load i16, i16* %arrayidx111, align 2, !tbaa !40
  %78 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom112 = sext i32 %78 to i64
  %arrayidx113 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom112
  store i16 %77, i16* %arrayidx113, align 2, !tbaa !40
  %79 = load i16, i16* %tempp, align 2, !tbaa !40
  %80 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom114 = sext i32 %80 to i64
  %arrayidx115 = getelementptr inbounds [100 x i16], [100 x i16]* %prefer, i32 0, i64 %idxprom114
  store i16 %79, i16* %arrayidx115, align 2, !tbaa !40
  %81 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom116 = sext i32 %81 to i64
  %82 = load i8**, i8*** %mxhosts.addr, align 8, !tbaa !1
  %arrayidx117 = getelementptr inbounds i8*, i8** %82, i64 %idxprom116
  %83 = load i8*, i8** %arrayidx117, align 8, !tbaa !1
  store i8* %83, i8** %temp1, align 8, !tbaa !1
  %84 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom118 = sext i32 %84 to i64
  %85 = load i8**, i8*** %mxhosts.addr, align 8, !tbaa !1
  %arrayidx119 = getelementptr inbounds i8*, i8** %85, i64 %idxprom118
  %86 = load i8*, i8** %arrayidx119, align 8, !tbaa !1
  %87 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom120 = sext i32 %87 to i64
  %88 = load i8**, i8*** %mxhosts.addr, align 8, !tbaa !1
  %arrayidx121 = getelementptr inbounds i8*, i8** %88, i64 %idxprom120
  store i8* %86, i8** %arrayidx121, align 8, !tbaa !1
  %89 = load i8*, i8** %temp1, align 8, !tbaa !1
  %90 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom122 = sext i32 %90 to i64
  %91 = load i8**, i8*** %mxhosts.addr, align 8, !tbaa !1
  %arrayidx123 = getelementptr inbounds i8*, i8** %91, i64 %idxprom122
  store i8* %89, i8** %arrayidx123, align 8, !tbaa !1
  %92 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom124 = sext i32 %92 to i64
  %arrayidx125 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom124
  %93 = load i64, i64* %arrayidx125, align 8, !tbaa !32
  store i64 %93, i64* %tempr, align 8, !tbaa !32
  %94 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom126 = sext i32 %94 to i64
  %arrayidx127 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom126
  %95 = load i64, i64* %arrayidx127, align 8, !tbaa !32
  %96 = load i32, i32* %i, align 4, !tbaa !5
  %idxprom128 = sext i32 %96 to i64
  %arrayidx129 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom128
  store i64 %95, i64* %arrayidx129, align 8, !tbaa !32
  %97 = load i64, i64* %tempr, align 8, !tbaa !32
  %98 = load i32, i32* %j, align 4, !tbaa !5
  %idxprom130 = sext i32 %98 to i64
  %arrayidx131 = getelementptr inbounds [100 x i64], [100 x i64]* %rndm, i32 0, i64 %idxprom130
  store i64 %97, i64* %arrayidx131, align 8, !tbaa !32
  %99 = bitcast i8** %temp1 to i8*
  call void @llvm.lifetime.end(i64 8, i8* %99) #1
  %100 = bitcast i64* %tempr to i8*
  call void @llvm.lifetime.end(i64 8, i8* %100) #1
  %101 = bitcast i16* %tempp to i8*
  call void @llvm.lifetime.end(i64 2, i8* %101) #1
  br label %if.end.132

if.end.132:                                       ; preds = %if.then.104, %land.lhs.true, %lor.lhs.false
  br label %for.inc.133

for.inc.133:                                      ; preds = %if.end.132
  %102 = load i32, i32* %j, align 4, !tbaa !5
  %inc134 = add nsw i32 %102, 1
  store i32 %inc134, i32* %j, align 4, !tbaa !5
  br label %for.cond.68

for.end.135:                                      ; preds = %if.then.80, %for.cond.68
  br label %for.inc.136

for.inc.136:                                      ; preds = %for.end.135
  %103 = load i32, i32* %i, align 4, !tbaa !5
  %inc137 = add nsw i32 %103, 1
  store i32 %inc137, i32* %i, align 4, !tbaa !5
  br label %for.cond.64

for.end.138:                                      ; preds = %for.cond.64
  %104 = load i32, i32* %nmx, align 4, !tbaa !5
  store i32 1, i32* %cleanup.dest.slot
  %105 = bitcast [100 x i64]* %rndm to i8*
  call void @llvm.lifetime.end(i64 800, i8* %105) #1
  %106 = bitcast [100 x i16]* %prefer to i8*
  call void @llvm.lifetime.end(i64 200, i8* %106) #1
  %107 = bitcast i8** %endp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %107) #1
  %108 = bitcast i8** %hp to i8*
  call void @llvm.lifetime.end(i64 8, i8* %108) #1
  %109 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end(i64 4, i8* %109) #1
  %110 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end(i64 4, i8* %110) #1
  %111 = bitcast i32* %nmx to i8*
  call void @llvm.lifetime.end(i64 4, i8* %111) #1
  %112 = bitcast i16* %curpref to i8*
  call void @llvm.lifetime.end(i64 2, i8* %112) #1
  ret i32 %104

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare void @mci_dump(%struct.sm_file*, %struct.mailer_con_info*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @should_try_fbsh(%struct.envelope* %e, i32* %tried_fallbacksmarthost, i8* %hostbuf, i64 %hbsz, i32 %status) #0 {
entry:
  %retval = alloca i32, align 4
  %e.addr = alloca %struct.envelope*, align 8
  %tried_fallbacksmarthost.addr = alloca i32*, align 8
  %hostbuf.addr = alloca i8*, align 8
  %hbsz.addr = alloca i64, align 8
  %status.addr = alloca i32, align 4
  store %struct.envelope* %e, %struct.envelope** %e.addr, align 8, !tbaa !1
  store i32* %tried_fallbacksmarthost, i32** %tried_fallbacksmarthost.addr, align 8, !tbaa !1
  store i8* %hostbuf, i8** %hostbuf.addr, align 8, !tbaa !1
  store i64 %hbsz, i64* %hbsz.addr, align 8, !tbaa !32
  store i32 %status, i32* %status.addr, align 4, !tbaa !5
  %0 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp = icmp eq i32 %0, 68
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !tbaa !5
  %cmp1 = icmp eq i32 %1, 75
  br i1 %cmp1, label %land.lhs.true, label %if.end.12

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** @FallbackSmartHost, align 8, !tbaa !1
  %cmp2 = icmp ne i8* %2, null
  br i1 %cmp2, label %land.lhs.true.3, label %if.end.12

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %3 = load i32*, i32** %tried_fallbacksmarthost.addr, align 8, !tbaa !1
  %4 = load i32, i32* %3, align 4, !tbaa !5
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end.12, label %if.then

if.then:                                          ; preds = %land.lhs.true.3
  %5 = load i32*, i32** %tried_fallbacksmarthost.addr, align 8, !tbaa !1
  store i32 1, i32* %5, align 4, !tbaa !5
  %6 = load i8*, i8** @FallbackSmartHost, align 8, !tbaa !1
  %7 = load i8*, i8** %hostbuf.addr, align 8, !tbaa !1
  %8 = load i64, i64* %hbsz.addr, align 8, !tbaa !32
  %9 = load %struct.envelope*, %struct.envelope** %e.addr, align 8, !tbaa !1
  call void @expand(i8* %6, i8* %7, i64 %8, %struct.envelope* %9)
  %10 = load i8*, i8** %hostbuf.addr, align 8, !tbaa !1
  %call = call i32 @wordinclass(i8* %10, i32 119)
  %tobool4 = icmp ne i32 %call, 0
  br i1 %tobool4, label %if.end.11, label %if.then.5

if.then.5:                                        ; preds = %if.then
  %11 = load i8, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @tTdvect, i32 0, i64 11), align 1, !tbaa !15
  %conv = zext i8 %11 to i32
  %cmp6 = icmp sge i32 %conv, 1
  br i1 %cmp6, label %land.lhs.true.8, label %if.end

land.lhs.true.8:                                  ; preds = %if.then.5
  %12 = load volatile i32, i32* @IntSig, align 4, !tbaa !5
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %if.end, label %if.then.10

if.then.10:                                       ; preds = %land.lhs.true.8
  %13 = load i8*, i8** %hostbuf.addr, align 8, !tbaa !1
  call void (i8*, ...) @sm_dprintf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.269, i32 0, i32 0), i8* %13)
  br label %if.end

if.end:                                           ; preds = %if.then.10, %land.lhs.true.8, %if.then.5
  store i32 1, i32* %retval
  br label %return

if.end.11:                                        ; preds = %if.then
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %land.lhs.true.3, %land.lhs.true, %lor.lhs.false
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.12, %if.end
  %14 = load i32, i32* %retval
  ret i32 %14
}

declare i32 @mci_lock_host(%struct.mailer_con_info*) #2

declare void @sm_setproctitle(i32, %struct.envelope*, i8*, ...) #2

declare i8* @qid_printname(%struct.envelope*) #2

declare i32 @makeconnection_ds(i8*, %struct.mailer_con_info*) #2

declare i32 @makeconnection(i8*, i32, %struct.mailer_con_info*, %struct.envelope*, i64) #2

declare void @mci_clr_extensions(%struct.mailer_con_info*) #2

; Function Attrs: nounwind
declare i32 @pipe(i32*) #4

declare void @checkfdopen(i32, i8*) #2

declare void @sm_clear_events() #2

declare void @sm_signal_noop(i32) #2

; Function Attrs: nounwind
declare i32 @nice(i32) #4

; Function Attrs: nounwind
declare i32 @setreuid(i32, i32) #4

declare i32 @safefile(i8*, i32, i32, i8*, i64, i32, %struct.stat*) #2

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #4

; Function Attrs: noreturn
declare void @_exit(i32) #8

declare void @sm_close_on_exec(i32, i32) #2

; Function Attrs: nounwind
declare i32 @setsid() #4

; Function Attrs: nounwind
declare i32 @execve(i8*, i8**, i8**) #4

declare void @smtpinit(%struct.mailer*, %struct.mailer_con_info*, %struct.envelope*, i32) #2

declare void @mci_dump_all(%struct.sm_file*, i32) #2

declare i32 @smtpmailfrom(%struct.mailer*, %struct.mailer_con_info*, %struct.envelope*) #2

declare i32 @smtprcpt(%struct.address*, %struct.mailer*, %struct.mailer_con_info*, %struct.envelope*, %struct.address*, i64) #2

declare void @smtprset(%struct.mailer*, %struct.mailer_con_info*, %struct.envelope*) #2

declare i32 @smtpdata(%struct.mailer*, %struct.mailer_con_info*, %struct.envelope*, %struct.address*, i64) #2

declare i32 @smtpgetstat(%struct.mailer*, %struct.mailer_con_info*, %struct.envelope*) #2

declare i64 @sm_strlcat2(i8*, i8*, i8*, i64) #2

declare void @mci_store_persistent(%struct.mailer_con_info*) #2

declare void @smtpquit(%struct.mailer*, %struct.mailer_con_info*, %struct.envelope*) #2

; Function Attrs: noreturn
declare void @sm_exc_raise_x(%struct.sm_exc*) #8

declare void @sm_exc_free(%struct.sm_exc*) #2

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #4

declare i32 @mci_match(i8*, %struct.mailer*) #2

; Function Attrs: nounwind
declare i64 @random() #4

declare i32 @sm_io_setinfo(%struct.sm_file*, i32, i8*) #2

; Function Attrs: nounwind
declare i32 @link(i8*, i8*) #4

; Function Attrs: nounwind
declare i32 @unlink(i8*) #4

; Function Attrs: noreturn nounwind
declare void @siglongjmp(%struct.__jmp_buf_tag*, i32) #6

; Function Attrs: nounwind
declare i32 @__fxstat(i32, i32, %struct.stat*) #4

; Function Attrs: nounwind
declare i32 @__xstat(i32, i8*, %struct.stat*) #4

; Function Attrs: nounwind
declare i32 @__lxstat(i32, i8*, %struct.stat*) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind returns_twice "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind returns_twice }
attributes #15 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"int", !3, i64 0}
!7 = !{!8, !9, i64 272}
!8 = !{!"envelope", !2, i64 0, !9, i64 8, !9, i64 16, !2, i64 24, !10, i64 32, !2, i64 224, !2, i64 232, !2, i64 240, !2, i64 248, !9, i64 256, !2, i64 264, !9, i64 272, !6, i64 280, !11, i64 284, !11, i64 286, !11, i64 288, !11, i64 290, !11, i64 292, !11, i64 294, !2, i64 296, !2, i64 304, !2, i64 312, !2, i64 320, !2, i64 328, !2, i64 336, !2, i64 344, !6, i64 352, !6, i64 356, !6, i64 360, !6, i64 364, !6, i64 368, !6, i64 372, !2, i64 376, !2, i64 384, !2, i64 392, !2, i64 400, !2, i64 408, !3, i64 416, !2, i64 424, !2, i64 432, !2, i64 440, !2, i64 448, !9, i64 456, !6, i64 464, !9, i64 472, !9, i64 480, !12, i64 488, !2, i64 2576, !2, i64 2584, !13, i64 2592, !9, i64 2624, !6, i64 2632, !2, i64 2640, !6, i64 2648}
!9 = !{!"long", !3, i64 0}
!10 = !{!"address", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !9, i64 40, !6, i64 48, !6, i64 52, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !2, i64 136, !9, i64 144, !2, i64 152, !11, i64 160, !2, i64 168, !6, i64 176, !6, i64 180, !2, i64 184}
!11 = !{!"short", !3, i64 0}
!12 = !{!"", !2, i64 0, !3, i64 8, !3, i64 40}
!13 = !{!"sm_timers", !14, i64 0}
!14 = !{!"_timer", !9, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!15 = !{!3, !3, i64 0}
!16 = !{!8, !2, i64 344}
!17 = !{!8, !11, i64 290}
!18 = !{!8, !9, i64 8}
!19 = !{!8, !9, i64 16}
!20 = !{!8, !2, i64 240}
!21 = !{!8, !11, i64 286}
!22 = !{!10, !2, i64 0}
!23 = !{!8, !2, i64 32}
!24 = !{!10, !11, i64 160}
!25 = !{!10, !2, i64 128}
!26 = !{!10, !2, i64 136}
!27 = !{!10, !2, i64 72}
!28 = !{!8, !11, i64 192}
!29 = !{!10, !2, i64 88}
!30 = !{!10, !2, i64 80}
!31 = !{!10, !2, i64 32}
!32 = !{!9, !9, i64 0}
!33 = !{!34, !2, i64 8}
!34 = !{!"mailer", !2, i64 0, !2, i64 8, !2, i64 16, !2, i64 24, !2, i64 32, !3, i64 40, !11, i64 72, !11, i64 74, !2, i64 80, !11, i64 88, !11, i64 90, !11, i64 92, !11, i64 94, !2, i64 96, !9, i64 104, !6, i64 112, !6, i64 116, !2, i64 120, !2, i64 128, !6, i64 136, !6, i64 140, !2, i64 144, !9, i64 152, !6, i64 160, !11, i64 164}
!35 = !{!34, !2, i64 80}
!36 = !{!8, !2, i64 2640}
!37 = !{!10, !2, i64 24}
!38 = !{!8, !2, i64 408}
!39 = !{i64 0, i64 8, !1, i64 8, i64 8, !32, i64 16, i64 8, !32, i64 24, i64 8, !1, i64 32, i64 8, !1, i64 40, i64 8, !1, i64 48, i64 8, !1, i64 56, i64 8, !1, i64 64, i64 8, !1, i64 72, i64 8, !32, i64 80, i64 4, !5, i64 84, i64 4, !5, i64 88, i64 8, !1, i64 96, i64 8, !1, i64 104, i64 8, !1, i64 112, i64 8, !1, i64 120, i64 8, !1, i64 128, i64 8, !1, i64 136, i64 8, !1, i64 144, i64 8, !1, i64 152, i64 8, !1, i64 160, i64 8, !1, i64 168, i64 8, !1, i64 176, i64 8, !32, i64 184, i64 8, !1, i64 192, i64 2, !40, i64 200, i64 8, !1, i64 208, i64 4, !5, i64 212, i64 4, !5, i64 216, i64 8, !1, i64 224, i64 8, !1, i64 232, i64 8, !1, i64 240, i64 8, !1, i64 248, i64 8, !1, i64 256, i64 8, !32, i64 264, i64 8, !1, i64 272, i64 8, !32, i64 280, i64 4, !5, i64 284, i64 2, !40, i64 286, i64 2, !40, i64 288, i64 2, !40, i64 290, i64 2, !40, i64 292, i64 2, !40, i64 294, i64 2, !40, i64 296, i64 8, !1, i64 304, i64 8, !1, i64 312, i64 8, !1, i64 320, i64 8, !1, i64 328, i64 8, !1, i64 336, i64 8, !1, i64 344, i64 8, !1, i64 352, i64 4, !5, i64 356, i64 4, !5, i64 360, i64 4, !5, i64 364, i64 4, !5, i64 368, i64 4, !5, i64 372, i64 4, !5, i64 376, i64 8, !1, i64 384, i64 8, !1, i64 392, i64 8, !1, i64 400, i64 8, !1, i64 408, i64 8, !1, i64 416, i64 1, !15, i64 424, i64 8, !1, i64 432, i64 8, !1, i64 440, i64 8, !1, i64 448, i64 8, !1, i64 456, i64 8, !32, i64 464, i64 4, !5, i64 472, i64 8, !32, i64 480, i64 8, !32, i64 488, i64 8, !1, i64 496, i64 32, !15, i64 528, i64 2048, !15, i64 2576, i64 8, !1, i64 2584, i64 8, !1, i64 2592, i64 8, !32, i64 2600, i64 8, !32, i64 2608, i64 8, !32, i64 2616, i64 8, !32, i64 2624, i64 8, !32, i64 2632, i64 4, !5, i64 2640, i64 8, !1, i64 2648, i64 4, !5}
!40 = !{!11, !11, i64 0}
!41 = !{!8, !2, i64 392}
!42 = !{!8, !2, i64 0}
!43 = !{!8, !2, i64 248}
!44 = !{!8, !2, i64 336}
!45 = !{!8, !2, i64 384}
!46 = !{!8, !2, i64 376}
!47 = !{!8, !6, i64 352}
!48 = !{!8, !6, i64 356}
!49 = !{!8, !11, i64 292}
!50 = !{!8, !2, i64 320}
!51 = !{!8, !2, i64 400}
!52 = !{!10, !9, i64 40}
!53 = !{!8, !9, i64 456}
!54 = !{!8, !6, i64 464}
!55 = !{!8, !6, i64 280}
!56 = !{!8, !11, i64 294}
!57 = !{!8, !6, i64 2632}
!58 = !{!8, !9, i64 2624}
!59 = !{!8, !11, i64 288}
!60 = !{!8, !2, i64 440}
!61 = !{!8, !2, i64 328}
!62 = !{!8, !2, i64 24}
!63 = !{!34, !2, i64 0}
!64 = !{!10, !2, i64 8}
!65 = !{!66, !2, i64 80}
!66 = !{!"mailer_con_info", !9, i64 0, !11, i64 8, !11, i64 10, !11, i64 12, !11, i64 14, !6, i64 16, !9, i64 24, !2, i64 32, !2, i64 40, !6, i64 48, !2, i64 56, !2, i64 64, !2, i64 72, !2, i64 80, !2, i64 88, !9, i64 96, !2, i64 104, !2, i64 112, !9, i64 120, !6, i64 128, !2, i64 136, !2, i64 144, !6, i64 152, !2, i64 160, !12, i64 168}
!67 = !{!66, !2, i64 88}
!68 = !{!8, !2, i64 448}
!69 = !{!34, !2, i64 32}
!70 = !{!10, !9, i64 144}
!71 = !{!66, !9, i64 0}
!72 = !{!10, !2, i64 152}
!73 = !{!66, !2, i64 40}
!74 = !{!66, !2, i64 32}
!75 = !{!66, !11, i64 14}
!76 = !{!77, !9, i64 96}
!77 = !{!"", !9, i64 0, !9, i64 8, !9, i64 16, !9, i64 24, !9, i64 32, !9, i64 40, !9, i64 48, !9, i64 56, !9, i64 64, !9, i64 72, !9, i64 80, !9, i64 88, !9, i64 96, !9, i64 104, !9, i64 112, !9, i64 120, !9, i64 128, !9, i64 136, !3, i64 144, !3, i64 208, !3, i64 272, !3, i64 296}
!78 = !{!66, !6, i64 48}
!79 = !{!66, !2, i64 64}
!80 = !{!34, !9, i64 152}
!81 = !{!66, !2, i64 72}
!82 = !{!10, !2, i64 184}
!83 = !{!10, !6, i64 48}
!84 = !{!10, !6, i64 52}
!85 = !{!86, !11, i64 0}
!86 = !{!"sockaddr", !11, i64 0, !3, i64 2}
!87 = !{!8, !9, i64 480}
!88 = !{!89, !9, i64 0}
!89 = !{!"stat", !9, i64 0, !9, i64 8, !9, i64 16, !6, i64 24, !6, i64 28, !6, i64 32, !6, i64 36, !9, i64 40, !9, i64 48, !9, i64 56, !9, i64 64, !90, i64 72, !90, i64 88, !90, i64 104, !3, i64 120}
!90 = !{!"timespec", !9, i64 0, !9, i64 8}
!91 = !{!8, !9, i64 472}
!92 = !{!89, !9, i64 8}
!93 = !{!34, !6, i64 112}
!94 = !{!95, !9, i64 24}
!95 = !{!"sm_file", !2, i64 0, !2, i64 8, !6, i64 16, !6, i64 20, !9, i64 24, !11, i64 32, !96, i64 40, !6, i64 56, !2, i64 64, !6, i64 72, !2, i64 80, !2, i64 88, !2, i64 96, !2, i64 104, !2, i64 112, !2, i64 120, !2, i64 128, !6, i64 136, !6, i64 140, !2, i64 144, !2, i64 152, !2, i64 160, !96, i64 168, !2, i64 184, !6, i64 192, !3, i64 196, !3, i64 199, !6, i64 200, !9, i64 208, !6, i64 216}
!96 = !{!"smbuf", !2, i64 0, !6, i64 8}
!97 = !{!34, !2, i64 96}
!98 = !{!8, !6, i64 360}
!99 = !{!8, !6, i64 364}
!100 = !{!34, !2, i64 128}
!101 = !{!77, !9, i64 120}
!102 = !{!89, !6, i64 24}
!103 = !{!34, !6, i64 136}
!104 = !{!89, !6, i64 28}
!105 = !{!10, !2, i64 16}
!106 = !{!34, !6, i64 140}
!107 = !{!89, !6, i64 32}
!108 = !{!34, !2, i64 120}
!109 = !{!89, !9, i64 16}
!110 = !{!89, !9, i64 48}
!111 = !{!8, !2, i64 296}
!112 = !{!8, !2, i64 304}
!113 = !{!114, !9, i64 8}
!114 = !{!"__res_state", !6, i64 0, !6, i64 4, !9, i64 8, !6, i64 16, !3, i64 20, !11, i64 68, !3, i64 72, !3, i64 128, !9, i64 384, !6, i64 392, !6, i64 392, !6, i64 393, !6, i64 393, !3, i64 396, !2, i64 480, !2, i64 488, !6, i64 496, !6, i64 500, !6, i64 504, !3, i64 512}
!115 = !{!116, !2, i64 0}
!116 = !{!"hostsig_t", !2, i64 0, !9, i64 8}
!117 = !{!116, !9, i64 8}
!118 = !{!66, !11, i64 8}
!119 = !{!66, !11, i64 10}
!120 = !{!66, !9, i64 96}
!121 = !{!122, !2, i64 0}
!122 = !{!"sm_exc_handler", !2, i64 0, !3, i64 8, !2, i64 208, !6, i64 216}
!123 = !{!122, !2, i64 208}
!124 = !{!122, !6, i64 216}
!125 = !{!8, !2, i64 64}
!126 = !{!8, !2, i64 224}
!127 = !{!10, !2, i64 168}
!128 = !{!34, !6, i64 160}
!129 = !{!34, !9, i64 104}
!130 = !{!8, !9, i64 256}
!131 = !{!10, !2, i64 56}
!132 = !{!10, !2, i64 96}
!133 = !{!8, !9, i64 72}
!134 = !{!66, !6, i64 16}
!135 = !{i32 260233}
!136 = !{!137, !6, i64 16}
!137 = !{!"servent", !2, i64 0, !2, i64 8, !6, i64 16, !2, i64 24}
!138 = !{!77, !9, i64 72}
!139 = !{!66, !11, i64 12}
!140 = !{i32 263869}
!141 = !{!34, !11, i64 74}
!142 = !{!8, !2, i64 2576}
!143 = !{!66, !9, i64 120}
!144 = !{!66, !6, i64 128}
!145 = !{!66, !2, i64 136}
!146 = !{!66, !2, i64 160}
!147 = !{!10, !2, i64 104}
!148 = !{!66, !2, i64 56}
