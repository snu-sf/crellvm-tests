; ModuleID = './longobject.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._typeobject = type { %struct.PyVarObject, i8*, i64, i64, void (%struct._object*)*, i32 (%struct._object*, %struct._IO_FILE*, i32)*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, i8*, %struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct.PyNumberMethods*, %struct.PySequenceMethods*, %struct.PyMappingMethods*, i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct.PyBufferProcs*, i64, i8*, i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*, i32)*, i64, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct.PyMethodDef*, %struct.PyMemberDef*, %struct.PyGetSetDef*, %struct._typeobject*, %struct._object*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)*, i64, i32 (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)*, void (i8*)*, i32 (%struct._object*)*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, %struct._object*, void (%struct._object*)*, i32, void (%struct._object*)* }
%struct.PyVarObject = type { %struct._object, i64 }
%struct._object = type { i64, %struct._typeobject* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.PyNumberMethods = type { %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)*, i32 (%struct._object*)*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)*, i8*, %struct._object* (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*)* }
%struct.PySequenceMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)*, %struct._object* (%struct._object*, i64)*, i8*, i32 (%struct._object*, i64, %struct._object*)*, i8*, i32 (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, %struct._object* (%struct._object*, i64)* }
%struct.PyMappingMethods = type { i64 (%struct._object*)*, %struct._object* (%struct._object*, %struct._object*)*, i32 (%struct._object*, %struct._object*, %struct._object*)* }
%struct.PyBufferProcs = type { i32 (%struct._object*, %struct.bufferinfo*, i32)*, void (%struct._object*, %struct.bufferinfo*)* }
%struct.bufferinfo = type { i8*, %struct._object*, i64, i64, i32, i32, i8*, i64*, i64*, i64*, i8* }
%struct.PyMethodDef = type { i8*, %struct._object* (%struct._object*, %struct._object*)*, i32, i8* }
%struct.PyMemberDef = type opaque
%struct.PyGetSetDef = type { i8*, %struct._object* (%struct._object*, i8*)*, i32 (%struct._object*, %struct._object*, i8*)*, i8*, i8* }
%struct._longobject = type { %struct.PyVarObject, [1 x i32] }
%struct.PyStructSequence_Desc = type { i8*, i8*, %struct.PyStructSequence_Field*, i32 }
%struct.PyStructSequence_Field = type { i8*, i8* }
%struct._PyUnicodeWriter = type { %struct._object*, i8*, i32, i32, i64, i64, i64, i32, i8, i8 }
%struct.PyASCIIObject = type { %struct._object, i64, i64, %struct.anon, i32* }
%struct.anon = type { i32 }
%struct.PyCompactUnicodeObject = type { %struct.PyASCIIObject, i64, i8*, i64 }
%struct.PyUnicodeObject = type { %struct.PyCompactUnicodeObject, %union.anon }
%union.anon = type { i8* }
%struct.PyTupleObject = type { %struct.PyVarObject, [1 x %struct._object*] }
%struct.PyByteArrayObject = type { %struct.PyVarObject, i64, i8*, i8*, i32 }
%struct.PyBytesObject = type { %struct.PyVarObject, i64, [1 x i8] }

@PyLong_Type = global %struct._typeobject { %struct.PyVarObject { %struct._object { i64 1, %struct._typeobject* @PyType_Type }, i64 0 }, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i64 24, i64 4, void (%struct._object*)* @long_dealloc, i32 (%struct._object*, %struct._IO_FILE*, i32)* null, %struct._object* (%struct._object*, i8*)* null, i32 (%struct._object*, i8*, %struct._object*)* null, i8* null, %struct._object* (%struct._object*)* @long_to_decimal_string, %struct.PyNumberMethods* @long_as_number, %struct.PySequenceMethods* null, %struct.PyMappingMethods* null, i64 (%struct._object*)* bitcast (i64 (%struct._longobject*)* @long_hash to i64 (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @long_to_decimal_string, %struct._object* (%struct._object*, %struct._object*)* @PyObject_GenericGetAttr, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct.PyBufferProcs* null, i64 17040384, i8* getelementptr inbounds ([606 x i8], [606 x i8]* @long_doc, i32 0, i32 0), i32 (%struct._object*, i32 (%struct._object*, i8*)*, i8*)* null, i32 (%struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, i32)* @long_richcompare, i64 0, %struct._object* (%struct._object*)* null, %struct._object* (%struct._object*)* null, %struct.PyMethodDef* getelementptr inbounds ([12 x %struct.PyMethodDef], [12 x %struct.PyMethodDef]* @long_methods, i32 0, i32 0), %struct.PyMemberDef* null, %struct.PyGetSetDef* getelementptr inbounds ([5 x %struct.PyGetSetDef], [5 x %struct.PyGetSetDef]* @long_getset, i32 0, i32 0), %struct._typeobject* null, %struct._object* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, i32 (%struct._object*, %struct._object*, %struct._object*)* null, i64 0, i32 (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._typeobject*, i64)* null, %struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @long_new, void (i8*)* @PyObject_Free, i32 (%struct._object*)* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, %struct._object* null, void (%struct._object*)* null, i32 0, void (%struct._object*)* null }, align 8
@PyExc_TypeError = external global %struct._object*, align 8
@.str = private unnamed_addr constant [41 x i8] c"an integer is required (got type %.200s)\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"__int__ returned non-int (type %.200s)\00", align 1
@PyExc_DeprecationWarning = external global %struct._object*, align 8
@.str.2 = private unnamed_addr constant [168 x i8] c"__int__ returned non-int (type %.200s).  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.\00", align 1
@PyExc_OverflowError = external global %struct._object*, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"too many digits in integer\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"cannot convert float infinity to integer\00", align 1
@PyExc_ValueError = external global %struct._object*, align 8
@.str.5 = private unnamed_addr constant [36 x i8] c"cannot convert float NaN to integer\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"Objects/longobject.c\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"Python int too large to convert to C long\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"Python int too large to convert to C int\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"an integer is required\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"Python int too large to convert to C ssize_t\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"can't convert negative value to unsigned int\00", align 1
@.str.12 = private unnamed_addr constant [51 x i8] c"Python int too large to convert to C unsigned long\00", align 1
@.str.13 = private unnamed_addr constant [39 x i8] c"can't convert negative value to size_t\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"Python int too large to convert to C size_t\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"int has too many bits to express in a platform size_t\00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"byte array too long to convert to int\00", align 1
@.str.17 = private unnamed_addr constant [39 x i8] c"can't convert negative int to unsigned\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"int too big to convert\00", align 1
@_PyLong_DigitValue = global [256 x i8] c"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\00\01\02\03\04\05\06\07\08\09%%%%%%%\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#%%%%%%\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%", align 16
@.str.19 = private unnamed_addr constant [35 x i8] c"int() arg 2 must be >= 2 and <= 36\00", align 1
@_Py_ctype_table = external constant [256 x i32], align 16
@PyLong_FromString.log_base_BASE = internal global [37 x double] zeroinitializer, align 16
@PyLong_FromString.convwidth_base = internal global [37 x i32] zeroinitializer, align 16
@PyLong_FromString.convmultmax_base = internal global [37 x i64] zeroinitializer, align 16
@.str.20 = private unnamed_addr constant [47 x i8] c"invalid literal for int() with base %d: %.200R\00", align 1
@PyExc_UnicodeEncodeError = external global %struct._object*, align 8
@_PyLong_Frexp.half_even_correction = internal constant [8 x i32] [i32 0, i32 -1, i32 -2, i32 1, i32 0, i32 -1, i32 2, i32 1], align 16
@.str.21 = private unnamed_addr constant [52 x i8] c"huge integer: number of bits overflows a Py_ssize_t\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"int too large to convert to float\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"non-integer arguments in division\00", align 1
@PyType_Type = external global %struct._typeobject, align 8
@.str.24 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@long_as_number = internal global %struct.PyNumberMethods { %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*, %struct._longobject*)* @long_add to %struct._object* (%struct._object*, %struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*, %struct._longobject*)* @long_sub to %struct._object* (%struct._object*, %struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*, %struct._longobject*)* @long_mul to %struct._object* (%struct._object*, %struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @long_mod, %struct._object* (%struct._object*, %struct._object*)* @long_divmod, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* @long_pow, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct._longobject*)* @long_neg to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*)* @long_long, %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct._longobject*)* @long_abs to %struct._object* (%struct._object*)*), i32 (%struct._object*)* bitcast (i32 (%struct._longobject*)* @long_bool to i32 (%struct._object*)*), %struct._object* (%struct._object*)* bitcast (%struct._object* (%struct._longobject*)* @long_invert to %struct._object* (%struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @long_lshift, %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*, %struct._longobject*)* @long_rshift to %struct._object* (%struct._object*, %struct._object*)*), %struct._object* (%struct._object*, %struct._object*)* @long_and, %struct._object* (%struct._object*, %struct._object*)* @long_xor, %struct._object* (%struct._object*, %struct._object*)* @long_or, %struct._object* (%struct._object*)* @long_long, i8* null, %struct._object* (%struct._object*)* @long_float, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* @long_div, %struct._object* (%struct._object*, %struct._object*)* @long_true_divide, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*, %struct._object*)* null, %struct._object* (%struct._object*)* @long_long }, align 8
@long_doc = internal global [606 x i8] c"int(x=0) -> integer\0Aint(x, base=10) -> integer\0A\0AConvert a number or string to an integer, or return 0 if no arguments\0Aare given.  If x is a number, return x.__int__().  For floating point\0Anumbers, this truncates towards zero.\0A\0AIf x is not a number or if base is given, then x must be a string,\0Abytes, or bytearray instance representing an integer literal in the\0Agiven base.  The literal can be preceded by '+' or '-' and be surrounded\0Aby whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\0ABase 0 means to interpret the base from the string as an integer literal.\0A>>> int('0b100', base=0)\0A4\00", align 16
@long_methods = internal global [12 x %struct.PyMethodDef] [%struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @long_long to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.35, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*)* @long_bit_length to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([126 x i8], [126 x i8]* @long_bit_length_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*, %struct._object*, %struct._object*)* @long_to_bytes to %struct._object* (%struct._object*, %struct._object*)*), i32 3, i8* getelementptr inbounds ([793 x i8], [793 x i8]* @long_to_bytes_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._typeobject*, %struct._object*, %struct._object*)* @long_from_bytes to %struct._object* (%struct._object*, %struct._object*)*), i32 19, i8* getelementptr inbounds ([766 x i8], [766 x i8]* @long_from_bytes_doc, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @long_long to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @long_long to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.42, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._object*)* @long_long to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.44, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @long_round, i32 1, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.46, i32 0, i32 0) }, %struct.PyMethodDef { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*)* @long_getnewargs to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* @long__format__, i32 1, i8* null }, %struct.PyMethodDef { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i32 0, i32 0), %struct._object* (%struct._object*, %struct._object*)* bitcast (%struct._object* (%struct._longobject*)* @long_sizeof to %struct._object* (%struct._object*, %struct._object*)*), i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50, i32 0, i32 0) }, %struct.PyMethodDef zeroinitializer], align 16
@long_getset = internal global [5 x %struct.PyGetSetDef] [%struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*)* @long_long to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.66, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._longobject*, i8*)* @long_get0 to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.68, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._object*)* @long_long to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.70, i32 0, i32 0), i8* null }, %struct.PyGetSetDef { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), %struct._object* (%struct._object*, i8*)* bitcast (%struct._object* (%struct._longobject*, i8*)* @long_get1 to %struct._object* (%struct._object*, i8*)*), i32 (%struct._object*, %struct._object*, i8*)* null, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.72, i32 0, i32 0), i8* null }, %struct.PyGetSetDef zeroinitializer], align 16
@Int_InfoType = internal global %struct._typeobject zeroinitializer, align 8
@small_ints = internal global [262 x %struct._longobject] zeroinitializer, align 16
@int_info_desc = internal global %struct.PyStructSequence_Desc { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([138 x i8], [138 x i8]* @int_info__doc__, i32 0, i32 0), %struct.PyStructSequence_Field* getelementptr inbounds ([3 x %struct.PyStructSequence_Field], [3 x %struct.PyStructSequence_Field]* @int_info_fields, i32 0, i32 0), i32 2 }, align 8
@.str.25 = private unnamed_addr constant [24 x i8] c"int too large to format\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"int string too large to convert\00", align 1
@BitLengthTable = internal constant [32 x i8] c"\00\01\02\02\03\03\03\03\04\04\04\04\04\04\04\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05", align 16
@PyExc_ZeroDivisionError = external global %struct._object*, align 8
@.str.27 = private unnamed_addr constant [35 x i8] c"integer division or modulo by zero\00", align 1
@_Py_NotImplementedStruct = external global %struct._object, align 8
@.str.28 = private unnamed_addr constant [21 x i8] c"negative shift count\00", align 1
@_Py_NoneStruct = external global %struct._object, align 8
@.str.29 = private unnamed_addr constant [66 x i8] c"pow() 2nd argument cannot be negative when 3rd argument specified\00", align 1
@PyFloat_Type = external global %struct._typeobject, align 8
@.str.30 = private unnamed_addr constant [31 x i8] c"pow() 3rd argument cannot be 0\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"division by zero\00", align 1
@.str.32 = private unnamed_addr constant [38 x i8] c"intermediate overflow during division\00", align 1
@.str.33 = private unnamed_addr constant [46 x i8] c"integer division result too large for a float\00", align 1
@_Py_TrueStruct = external global %struct._longobject, align 8
@_Py_FalseStruct = external global %struct._longobject, align 8
@.str.34 = private unnamed_addr constant [10 x i8] c"conjugate\00", align 1
@.str.35 = private unnamed_addr constant [48 x i8] c"Returns self, the complex conjugate of any int.\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"bit_length\00", align 1
@long_bit_length_doc = internal global [126 x i8] c"int.bit_length() -> int\0A\0ANumber of bits necessary to represent self in binary.\0A>>> bin(37)\0A'0b100101'\0A>>> (37).bit_length()\0A6\00", align 16
@.str.37 = private unnamed_addr constant [9 x i8] c"to_bytes\00", align 1
@long_to_bytes_doc = internal global [793 x i8] c"int.to_bytes(length, byteorder, *, signed=False) -> bytes\0A\0AReturn an array of bytes representing an integer.\0A\0AThe integer is represented using length bytes.  An OverflowError is\0Araised if the integer is not representable with the given number of\0Abytes.\0A\0AThe byteorder argument determines the byte order used to represent the\0Ainteger.  If byteorder is 'big', the most significant byte is at the\0Abeginning of the byte array.  If byteorder is 'little', the most\0Asignificant byte is at the end of the byte array.  To request the native\0Abyte order of the host system, use `sys.byteorder' as the byte order value.\0A\0AThe signed keyword-only argument determines whether two's complement is\0Aused to represent the integer.  If signed is False and a negative integer\0Ais given, an OverflowError is raised.\00", align 16
@.str.38 = private unnamed_addr constant [11 x i8] c"from_bytes\00", align 1
@long_from_bytes_doc = internal global [766 x i8] c"int.from_bytes(bytes, byteorder, *, signed=False) -> int\0A\0AReturn the integer represented by the given array of bytes.\0A\0AThe bytes argument must either support the buffer protocol or be an\0Aiterable object producing bytes.  Bytes and bytearray are examples of\0Abuilt-in objects that support the buffer protocol.\0A\0AThe byteorder argument determines the byte order used to represent the\0Ainteger.  If byteorder is 'big', the most significant byte is at the\0Abeginning of the byte array.  If byteorder is 'little', the most\0Asignificant byte is at the end of the byte array.  To request the native\0Abyte order of the host system, use `sys.byteorder' as the byte order value.\0A\0AThe signed keyword-only argument indicates whether two's complement is\0Aused to represent the integer.\00", align 16
@.str.39 = private unnamed_addr constant [10 x i8] c"__trunc__\00", align 1
@.str.40 = private unnamed_addr constant [39 x i8] c"Truncating an Integral returns itself.\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"__floor__\00", align 1
@.str.42 = private unnamed_addr constant [37 x i8] c"Flooring an Integral returns itself.\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"__ceil__\00", align 1
@.str.44 = private unnamed_addr constant [39 x i8] c"Ceiling of an Integral returns itself.\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"__round__\00", align 1
@.str.46 = private unnamed_addr constant [96 x i8] c"Rounding an Integral returns itself.\0ARounding with an ndigits argument also returns an integer.\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"__getnewargs__\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"__format__\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"__sizeof__\00", align 1
@.str.50 = private unnamed_addr constant [33 x i8] c"Returns size in memory, in bytes\00", align 1
@long_to_bytes.kwlist = internal global [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8* null], align 16
@.str.51 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"byteorder\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"signed\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"nU|O:to_bytes\00", align 1
@.str.55 = private unnamed_addr constant [36 x i8] c"'signed' is a keyword-only argument\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"little\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"big\00", align 1
@.str.58 = private unnamed_addr constant [43 x i8] c"byteorder must be either 'little' or 'big'\00", align 1
@.str.59 = private unnamed_addr constant [37 x i8] c"length argument must be non-negative\00", align 1
@long_from_bytes.kwlist = internal global [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8* null], align 16
@.str.60 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"OU|O:from_bytes\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"|O\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"(N)\00", align 1
@.str.64 = private unnamed_addr constant [13 x i8] c"U:__format__\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"real\00", align 1
@.str.66 = private unnamed_addr constant [34 x i8] c"the real part of a complex number\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"imag\00", align 1
@.str.68 = private unnamed_addr constant [39 x i8] c"the imaginary part of a complex number\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"numerator\00", align 1
@.str.70 = private unnamed_addr constant [51 x i8] c"the numerator of a rational number in lowest terms\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"denominator\00", align 1
@.str.72 = private unnamed_addr constant [53 x i8] c"the denominator of a rational number in lowest terms\00", align 1
@long_new.kwlist = internal global [3 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i8* null], align 16
@.str.73 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c"|OO:int\00", align 1
@.str.76 = private unnamed_addr constant [30 x i8] c"int() missing string argument\00", align 1
@.str.77 = private unnamed_addr constant [34 x i8] c"int() base must be >= 2 and <= 36\00", align 1
@PyByteArray_Type = external global %struct._typeobject, align 8
@_PyByteArray_empty_string = external global [0 x i8], align 1
@.str.78 = private unnamed_addr constant [50 x i8] c"int() can't convert non-string with explicit base\00", align 1
@.str.79 = private unnamed_addr constant [13 x i8] c"sys.int_info\00", align 1
@int_info__doc__ = internal global [138 x i8] c"sys.int_info\0A\0AA struct sequence that holds information about Python's\0Ainternal representation of integers.  The attributes are read only.\00", align 16
@int_info_fields = internal global [3 x %struct.PyStructSequence_Field] [%struct.PyStructSequence_Field { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.81, i32 0, i32 0) }, %struct.PyStructSequence_Field { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.83, i32 0, i32 0) }, %struct.PyStructSequence_Field zeroinitializer], align 16
@.str.80 = private unnamed_addr constant [15 x i8] c"bits_per_digit\00", align 1
@.str.81 = private unnamed_addr constant [24 x i8] c"size of a digit in bits\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"sizeof_digit\00", align 1
@.str.83 = private unnamed_addr constant [54 x i8] c"size in bytes of the C type used to represent a digit\00", align 1

; Function Attrs: nounwind uwtable
define %struct._longobject* @_PyLong_FromNbInt(%struct._object* %integral) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %integral.addr = alloca %struct._object*, align 8
  %nb = alloca %struct.PyNumberMethods*, align 8
  %result = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp32 = alloca %struct._object*, align 8
  store %struct._object* %integral, %struct._object** %integral.addr, align 8
  %0 = load %struct._object*, %struct._object** %integral.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @PyLong_Type
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %integral.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0
  %3 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %4 = load %struct._object*, %struct._object** %integral.addr, align 8
  %5 = bitcast %struct._object* %4 to %struct._longobject*
  store %struct._longobject* %5, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %struct._object*, %struct._object** %integral.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 1
  %7 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_as_number = getelementptr inbounds %struct._typeobject, %struct._typeobject* %7, i32 0, i32 10
  %8 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %tp_as_number, align 8
  store %struct.PyNumberMethods* %8, %struct.PyNumberMethods** %nb, align 8
  %9 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %nb, align 8
  %cmp2 = icmp eq %struct.PyNumberMethods* %9, null
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %10 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %nb, align 8
  %nb_int = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %10, i32 0, i32 16
  %11 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_int, align 8
  %cmp3 = icmp eq %struct._object* (%struct._object*)* %11, null
  br i1 %cmp3, label %if.then.4, label %if.end.6

if.then.4:                                        ; preds = %lor.lhs.false, %if.end
  %12 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %13 = load %struct._object*, %struct._object** %integral.addr, align 8
  %ob_type5 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type5, align 8
  %tp_name = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 1
  %15 = load i8*, i8** %tp_name, align 8
  %call = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %12, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i32 0, i32 0), i8* %15)
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.6:                                         ; preds = %lor.lhs.false
  %16 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** %nb, align 8
  %nb_int7 = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %16, i32 0, i32 16
  %17 = load %struct._object* (%struct._object*)*, %struct._object* (%struct._object*)** %nb_int7, align 8
  %18 = load %struct._object*, %struct._object** %integral.addr, align 8
  %call8 = call %struct._object* %17(%struct._object* %18)
  store %struct._object* %call8, %struct._object** %result, align 8
  %19 = load %struct._object*, %struct._object** %result, align 8
  %tobool = icmp ne %struct._object* %19, null
  br i1 %tobool, label %lor.lhs.false.9, label %if.then.12

lor.lhs.false.9:                                  ; preds = %if.end.6
  %20 = load %struct._object*, %struct._object** %result, align 8
  %ob_type10 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 1
  %21 = load %struct._typeobject*, %struct._typeobject** %ob_type10, align 8
  %cmp11 = icmp eq %struct._typeobject* %21, @PyLong_Type
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %lor.lhs.false.9, %if.end.6
  %22 = load %struct._object*, %struct._object** %result, align 8
  %23 = bitcast %struct._object* %22 to %struct._longobject*
  store %struct._longobject* %23, %struct._longobject** %retval
  br label %return

if.end.13:                                        ; preds = %lor.lhs.false.9
  %24 = load %struct._object*, %struct._object** %result, align 8
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %25, i32 0, i32 19
  %26 = load i64, i64* %tp_flags, align 8
  %and = and i64 %26, 16777216
  %cmp15 = icmp ne i64 %and, 0
  br i1 %cmp15, label %if.end.25, label %if.then.16

if.then.16:                                       ; preds = %if.end.13
  %27 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  %28 = load %struct._object*, %struct._object** %result, align 8
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8
  %tp_name18 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 1
  %30 = load i8*, i8** %tp_name18, align 8
  %call19 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %27, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i32 0, i32 0), i8* %30)
  br label %do.body

do.body:                                          ; preds = %if.then.16
  %31 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt20 = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt20, align 8
  %dec = add i64 %33, -1
  store i64 %dec, i64* %ob_refcnt20, align 8
  %cmp21 = icmp ne i64 %dec, 0
  br i1 %cmp21, label %if.then.22, label %if.else

if.then.22:                                       ; preds = %do.body
  br label %if.end.24

if.else:                                          ; preds = %do.body
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %36(%struct._object* %37)
  br label %if.end.24

if.end.24:                                        ; preds = %if.else, %if.then.22
  br label %do.end

do.end:                                           ; preds = %if.end.24
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.25:                                        ; preds = %if.end.13
  %38 = load %struct._object*, %struct._object** @PyExc_DeprecationWarning, align 8
  %39 = load %struct._object*, %struct._object** %result, align 8
  %ob_type26 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type26, align 8
  %tp_name27 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 1
  %41 = load i8*, i8** %tp_name27, align 8
  %call28 = call i32 (%struct._object*, i64, i8*, ...) @PyErr_WarnFormat(%struct._object* %38, i64 1, i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.2, i32 0, i32 0), i8* %41)
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %if.then.30, label %if.end.42

if.then.30:                                       ; preds = %if.end.25
  br label %do.body.31

do.body.31:                                       ; preds = %if.then.30
  %42 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %42, %struct._object** %_py_decref_tmp32, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_refcnt33 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 0
  %44 = load i64, i64* %ob_refcnt33, align 8
  %dec34 = add i64 %44, -1
  store i64 %dec34, i64* %ob_refcnt33, align 8
  %cmp35 = icmp ne i64 %dec34, 0
  br i1 %cmp35, label %if.then.36, label %if.else.37

if.then.36:                                       ; preds = %do.body.31
  br label %if.end.40

if.else.37:                                       ; preds = %do.body.31
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 1
  %46 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8
  %tp_dealloc39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %46, i32 0, i32 4
  %47 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc39, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp32, align 8
  call void %47(%struct._object* %48)
  br label %if.end.40

if.end.40:                                        ; preds = %if.else.37, %if.then.36
  br label %do.end.41

do.end.41:                                        ; preds = %if.end.40
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.42:                                        ; preds = %if.end.25
  %49 = load %struct._object*, %struct._object** %result, align 8
  %50 = bitcast %struct._object* %49 to %struct._longobject*
  store %struct._longobject* %50, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %if.end.42, %do.end.41, %do.end, %if.then.12, %if.then.4, %if.then
  %51 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %51
}

declare %struct._object* @PyErr_Format(%struct._object*, i8*, ...) #1

declare i32 @PyErr_WarnFormat(%struct._object*, i64, i8*, ...) #1

; Function Attrs: nounwind uwtable
define %struct._longobject* @_PyLong_New(i64 %size) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %size.addr = alloca i64, align 8
  %result = alloca %struct._longobject*, align 8
  store i64 %size, i64* %size.addr, align 8
  %0 = load i64, i64* %size.addr, align 8
  %cmp = icmp sgt i64 %0, 2305843009213693945
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0))
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8
  %mul = mul i64 %2, 4
  %add = add i64 24, %mul
  %call = call i8* @PyObject_Malloc(i64 %add)
  %3 = bitcast i8* %call to %struct._longobject*
  store %struct._longobject* %3, %struct._longobject** %result, align 8
  %4 = load %struct._longobject*, %struct._longobject** %result, align 8
  %tobool = icmp ne %struct._longobject* %4, null
  br i1 %tobool, label %if.end.3, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %call2 = call %struct._object* @PyErr_NoMemory()
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load i64, i64* %size.addr, align 8
  %6 = load %struct._longobject*, %struct._longobject** %result, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  store i64 %5, i64* %ob_size, align 8
  %8 = load %struct._longobject*, %struct._longobject** %result, align 8
  %9 = bitcast %struct._longobject* %8 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  store %struct._typeobject* @PyLong_Type, %struct._typeobject** %ob_type, align 8
  %10 = load %struct._longobject*, %struct._longobject** %result, align 8
  %11 = bitcast %struct._longobject* %10 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  store i64 1, i64* %ob_refcnt, align 8
  %12 = load %struct._longobject*, %struct._longobject** %result, align 8
  store %struct._longobject* %12, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.1, %if.then
  %13 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %13
}

declare void @PyErr_SetString(%struct._object*, i8*) #1

declare i8* @PyObject_Malloc(i64) #1

declare %struct._object* @PyErr_NoMemory() #1

; Function Attrs: nounwind uwtable
define %struct._object* @_PyLong_Copy(%struct._longobject* %src) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %src.addr = alloca %struct._longobject*, align 8
  %result = alloca %struct._longobject*, align 8
  %i = alloca i64, align 8
  %ival = alloca i32, align 4
  store %struct._longobject* %src, %struct._longobject** %src.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %src.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  store i64 %2, i64* %i, align 8
  %3 = load i64, i64* %i, align 8
  %cmp = icmp slt i64 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %i, align 8
  %sub = sub i64 0, %4
  store i64 %sub, i64* %i, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i64, i64* %i, align 8
  %cmp1 = icmp slt i64 %5, 2
  br i1 %cmp1, label %if.then.2, label %if.end.18

if.then.2:                                        ; preds = %if.end
  %6 = load %struct._longobject*, %struct._longobject** %src.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %8, 0
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.2
  %9 = load %struct._longobject*, %struct._longobject** %src.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %9, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %10 = load i32, i32* %arrayidx, align 4
  %sub5 = sub i32 0, %10
  br label %cond.end.12

cond.false:                                       ; preds = %if.then.2
  %11 = load %struct._longobject*, %struct._longobject** %src.addr, align 8
  %12 = bitcast %struct._longobject* %11 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1
  %13 = load i64, i64* %ob_size6, align 8
  %cmp7 = icmp eq i64 %13, 0
  br i1 %cmp7, label %cond.true.8, label %cond.false.9

cond.true.8:                                      ; preds = %cond.false
  br label %cond.end

cond.false.9:                                     ; preds = %cond.false
  %14 = load %struct._longobject*, %struct._longobject** %src.addr, align 8
  %ob_digit10 = getelementptr inbounds %struct._longobject, %struct._longobject* %14, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x i32], [1 x i32]* %ob_digit10, i32 0, i64 0
  %15 = load i32, i32* %arrayidx11, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.9, %cond.true.8
  %cond = phi i32 [ 0, %cond.true.8 ], [ %15, %cond.false.9 ]
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.end, %cond.true
  %cond13 = phi i32 [ %sub5, %cond.true ], [ %cond, %cond.end ]
  store i32 %cond13, i32* %ival, align 4
  br label %do.body

do.body:                                          ; preds = %cond.end.12
  %16 = load i32, i32* %ival, align 4
  %cmp14 = icmp sle i32 -5, %16
  br i1 %cmp14, label %land.lhs.true, label %if.end.17

land.lhs.true:                                    ; preds = %do.body
  %17 = load i32, i32* %ival, align 4
  %cmp15 = icmp slt i32 %17, 257
  br i1 %cmp15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %land.lhs.true
  %18 = load i32, i32* %ival, align 4
  %call = call %struct._object* @get_small_int(i32 %18)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end.17:                                        ; preds = %land.lhs.true, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end.17
  br label %if.end.18

if.end.18:                                        ; preds = %do.end, %if.end
  %19 = load i64, i64* %i, align 8
  %call19 = call %struct._longobject* @_PyLong_New(i64 %19)
  store %struct._longobject* %call19, %struct._longobject** %result, align 8
  %20 = load %struct._longobject*, %struct._longobject** %result, align 8
  %cmp20 = icmp ne %struct._longobject* %20, null
  br i1 %cmp20, label %if.then.21, label %if.end.29

if.then.21:                                       ; preds = %if.end.18
  %21 = load %struct._longobject*, %struct._longobject** %src.addr, align 8
  %22 = bitcast %struct._longobject* %21 to %struct.PyVarObject*
  %ob_size22 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1
  %23 = load i64, i64* %ob_size22, align 8
  %24 = load %struct._longobject*, %struct._longobject** %result, align 8
  %25 = bitcast %struct._longobject* %24 to %struct.PyVarObject*
  %ob_size23 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1
  store i64 %23, i64* %ob_size23, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.21
  %26 = load i64, i64* %i, align 8
  %dec = add i64 %26, -1
  store i64 %dec, i64* %i, align 8
  %cmp24 = icmp sge i64 %dec, 0
  br i1 %cmp24, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %27 = load i64, i64* %i, align 8
  %28 = load %struct._longobject*, %struct._longobject** %src.addr, align 8
  %ob_digit25 = getelementptr inbounds %struct._longobject, %struct._longobject* %28, i32 0, i32 1
  %arrayidx26 = getelementptr [1 x i32], [1 x i32]* %ob_digit25, i32 0, i64 %27
  %29 = load i32, i32* %arrayidx26, align 4
  %30 = load i64, i64* %i, align 8
  %31 = load %struct._longobject*, %struct._longobject** %result, align 8
  %ob_digit27 = getelementptr inbounds %struct._longobject, %struct._longobject* %31, i32 0, i32 1
  %arrayidx28 = getelementptr [1 x i32], [1 x i32]* %ob_digit27, i32 0, i64 %30
  store i32 %29, i32* %arrayidx28, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.29

if.end.29:                                        ; preds = %while.end, %if.end.18
  %32 = load %struct._longobject*, %struct._longobject** %result, align 8
  %33 = bitcast %struct._longobject* %32 to %struct._object*
  store %struct._object* %33, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.29, %if.then.16
  %34 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %34
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @get_small_int(i32 %ival) #0 {
entry:
  %ival.addr = alloca i32, align 4
  %v = alloca %struct._object*, align 8
  store i32 %ival, i32* %ival.addr, align 4
  %0 = load i32, i32* %ival.addr, align 4
  %add = add i32 %0, 5
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr [262 x %struct._longobject], [262 x %struct._longobject]* @small_ints, i32 0, i64 %idxprom
  %1 = bitcast %struct._longobject* %arrayidx to %struct._object*
  store %struct._object* %1, %struct._object** %v, align 8
  %2 = load %struct._object*, %struct._object** %v, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0
  %3 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %4 = load %struct._object*, %struct._object** %v, align 8
  ret %struct._object* %4
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromLong(i64 %ival) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ival.addr = alloca i64, align 8
  %v = alloca %struct._longobject*, align 8
  %abs_ival = alloca i64, align 8
  %t = alloca i64, align 8
  %ndigits = alloca i32, align 4
  %sign = alloca i32, align 4
  %p = alloca i32*, align 8
  store i64 %ival, i64* %ival.addr, align 8
  store i32 0, i32* %ndigits, align 4
  store i32 1, i32* %sign, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load i64, i64* %ival.addr, align 8
  %cmp = icmp sle i64 -5, %0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %do.body
  %1 = load i64, i64* %ival.addr, align 8
  %cmp1 = icmp slt i64 %1, 257
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, i64* %ival.addr, align 8
  %conv = trunc i64 %2 to i32
  %call = call %struct._object* @get_small_int(i32 %conv)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %3 = load i64, i64* %ival.addr, align 8
  %cmp2 = icmp slt i64 %3, 0
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.end
  %4 = load i64, i64* %ival.addr, align 8
  %sub = sub i64 0, %4
  store i64 %sub, i64* %abs_ival, align 8
  store i32 -1, i32* %sign, align 4
  br label %if.end.5

if.else:                                          ; preds = %do.end
  %5 = load i64, i64* %ival.addr, align 8
  store i64 %5, i64* %abs_ival, align 8
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.4
  %6 = load i64, i64* %abs_ival, align 8
  %shr = lshr i64 %6, 30
  %tobool = icmp ne i64 %shr, 0
  br i1 %tobool, label %if.end.13, label %if.then.6

if.then.6:                                        ; preds = %if.end.5
  %call7 = call %struct._longobject* @_PyLong_New(i64 1)
  store %struct._longobject* %call7, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %tobool8 = icmp ne %struct._longobject* %7, null
  br i1 %tobool8, label %if.then.9, label %if.end.12

if.then.9:                                        ; preds = %if.then.6
  %8 = load i32, i32* %sign, align 4
  %conv10 = sext i32 %8 to i64
  %9 = load %struct._longobject*, %struct._longobject** %v, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  store i64 %conv10, i64* %ob_size, align 8
  %11 = load i64, i64* %abs_ival, align 8
  %conv11 = trunc i64 %11 to i32
  %12 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  store i32 %conv11, i32* %arrayidx, align 4
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.9, %if.then.6
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %14 = bitcast %struct._longobject* %13 to %struct._object*
  store %struct._object* %14, %struct._object** %retval
  br label %return

if.end.13:                                        ; preds = %if.end.5
  %15 = load i64, i64* %abs_ival, align 8
  store i64 %15, i64* %t, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.13
  %16 = load i64, i64* %t, align 8
  %tobool14 = icmp ne i64 %16, 0
  br i1 %tobool14, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i32, i32* %ndigits, align 4
  %inc = add i32 %17, 1
  store i32 %inc, i32* %ndigits, align 4
  %18 = load i64, i64* %t, align 8
  %shr15 = lshr i64 %18, 30
  store i64 %shr15, i64* %t, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %19 = load i32, i32* %ndigits, align 4
  %conv16 = sext i32 %19 to i64
  %call17 = call %struct._longobject* @_PyLong_New(i64 %conv16)
  store %struct._longobject* %call17, %struct._longobject** %v, align 8
  %20 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp18 = icmp ne %struct._longobject* %20, null
  br i1 %cmp18, label %if.then.20, label %if.end.30

if.then.20:                                       ; preds = %while.end
  %21 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit21 = getelementptr inbounds %struct._longobject, %struct._longobject* %21, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit21, i32 0, i32 0
  store i32* %arraydecay, i32** %p, align 8
  %22 = load i32, i32* %ndigits, align 4
  %23 = load i32, i32* %sign, align 4
  %mul = mul i32 %22, %23
  %conv22 = sext i32 %mul to i64
  %24 = load %struct._longobject*, %struct._longobject** %v, align 8
  %25 = bitcast %struct._longobject* %24 to %struct.PyVarObject*
  %ob_size23 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1
  store i64 %conv22, i64* %ob_size23, align 8
  %26 = load i64, i64* %abs_ival, align 8
  store i64 %26, i64* %t, align 8
  br label %while.cond.24

while.cond.24:                                    ; preds = %while.body.26, %if.then.20
  %27 = load i64, i64* %t, align 8
  %tobool25 = icmp ne i64 %27, 0
  br i1 %tobool25, label %while.body.26, label %while.end.29

while.body.26:                                    ; preds = %while.cond.24
  %28 = load i64, i64* %t, align 8
  %and = and i64 %28, 1073741823
  %conv27 = trunc i64 %and to i32
  %29 = load i32*, i32** %p, align 8
  %incdec.ptr = getelementptr i32, i32* %29, i32 1
  store i32* %incdec.ptr, i32** %p, align 8
  store i32 %conv27, i32* %29, align 4
  %30 = load i64, i64* %t, align 8
  %shr28 = lshr i64 %30, 30
  store i64 %shr28, i64* %t, align 8
  br label %while.cond.24

while.end.29:                                     ; preds = %while.cond.24
  br label %if.end.30

if.end.30:                                        ; preds = %while.end.29, %while.end
  %31 = load %struct._longobject*, %struct._longobject** %v, align 8
  %32 = bitcast %struct._longobject* %31 to %struct._object*
  store %struct._object* %32, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.30, %if.end.12, %if.then
  %33 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %33
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromUnsignedLong(i64 %ival) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ival.addr = alloca i64, align 8
  %v = alloca %struct._longobject*, align 8
  %t = alloca i64, align 8
  %ndigits = alloca i32, align 4
  %p = alloca i32*, align 8
  store i64 %ival, i64* %ival.addr, align 8
  store i32 0, i32* %ndigits, align 4
  %0 = load i64, i64* %ival.addr, align 8
  %cmp = icmp ult i64 %0, 1073741824
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %ival.addr, align 8
  %call = call %struct._object* @PyLong_FromLong(i64 %1)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %ival.addr, align 8
  store i64 %2, i64* %t, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load i64, i64* %t, align 8
  %tobool = icmp ne i64 %3, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %ndigits, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* %ndigits, align 4
  %5 = load i64, i64* %t, align 8
  %shr = lshr i64 %5, 30
  store i64 %shr, i64* %t, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %ndigits, align 4
  %conv = sext i32 %6 to i64
  %call1 = call %struct._longobject* @_PyLong_New(i64 %conv)
  store %struct._longobject* %call1, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp2 = icmp ne %struct._longobject* %7, null
  br i1 %cmp2, label %if.then.4, label %if.end.12

if.then.4:                                        ; preds = %while.end
  %8 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %8, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %p, align 8
  %9 = load i32, i32* %ndigits, align 4
  %conv5 = sext i32 %9 to i64
  %10 = load %struct._longobject*, %struct._longobject** %v, align 8
  %11 = bitcast %struct._longobject* %10 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  store i64 %conv5, i64* %ob_size, align 8
  br label %while.cond.6

while.cond.6:                                     ; preds = %while.body.8, %if.then.4
  %12 = load i64, i64* %ival.addr, align 8
  %tobool7 = icmp ne i64 %12, 0
  br i1 %tobool7, label %while.body.8, label %while.end.11

while.body.8:                                     ; preds = %while.cond.6
  %13 = load i64, i64* %ival.addr, align 8
  %and = and i64 %13, 1073741823
  %conv9 = trunc i64 %and to i32
  %14 = load i32*, i32** %p, align 8
  %incdec.ptr = getelementptr i32, i32* %14, i32 1
  store i32* %incdec.ptr, i32** %p, align 8
  store i32 %conv9, i32* %14, align 4
  %15 = load i64, i64* %ival.addr, align 8
  %shr10 = lshr i64 %15, 30
  store i64 %shr10, i64* %ival.addr, align 8
  br label %while.cond.6

while.end.11:                                     ; preds = %while.cond.6
  br label %if.end.12

if.end.12:                                        ; preds = %while.end.11, %while.end
  %16 = load %struct._longobject*, %struct._longobject** %v, align 8
  %17 = bitcast %struct._longobject* %16 to %struct._object*
  store %struct._object* %17, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.12, %if.then
  %18 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %18
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromDouble(double %dval) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %dval.addr = alloca double, align 8
  %v = alloca %struct._longobject*, align 8
  %frac = alloca double, align 8
  %i = alloca i32, align 4
  %ndig = alloca i32, align 4
  %expo = alloca i32, align 4
  %neg = alloca i32, align 4
  %bits = alloca i32, align 4
  store double %dval, double* %dval.addr, align 8
  store i32 0, i32* %neg, align 4
  br i1 false, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %0 = load double, double* %dval.addr, align 8
  %conv = fptrunc double %0 to float
  %call = call i32 @__isinff(float %conv) #7
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

cond.false:                                       ; preds = %entry
  br i1 true, label %cond.true.1, label %cond.false.4

cond.true.1:                                      ; preds = %cond.false
  %1 = load double, double* %dval.addr, align 8
  %call2 = call i32 @__isinf(double %1) #7
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.then, label %if.end

cond.false.4:                                     ; preds = %cond.false
  %2 = load double, double* %dval.addr, align 8
  %conv5 = fpext double %2 to x86_fp80
  %call6 = call i32 @__isinfl(x86_fp80 %conv5) #7
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.then, label %if.end

if.then:                                          ; preds = %cond.false.4, %cond.true.1, %cond.true
  %3 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %cond.false.4, %cond.true.1, %cond.true
  br i1 false, label %cond.true.8, label %cond.false.12

cond.true.8:                                      ; preds = %if.end
  %4 = load double, double* %dval.addr, align 8
  %conv9 = fptrunc double %4 to float
  %call10 = call i32 @__isnanf(float %conv9) #7
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.then.20, label %if.end.21

cond.false.12:                                    ; preds = %if.end
  br i1 true, label %cond.true.13, label %cond.false.16

cond.true.13:                                     ; preds = %cond.false.12
  %5 = load double, double* %dval.addr, align 8
  %call14 = call i32 @__isnan(double %5) #7
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then.20, label %if.end.21

cond.false.16:                                    ; preds = %cond.false.12
  %6 = load double, double* %dval.addr, align 8
  %conv17 = fpext double %6 to x86_fp80
  %call18 = call i32 @__isnanl(x86_fp80 %conv17) #7
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %cond.false.16, %cond.true.13, %cond.true.8
  %7 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.21:                                        ; preds = %cond.false.16, %cond.true.13, %cond.true.8
  %8 = load double, double* %dval.addr, align 8
  %cmp = fcmp olt double %8, 0.000000e+00
  br i1 %cmp, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end.21
  store i32 1, i32* %neg, align 4
  %9 = load double, double* %dval.addr, align 8
  %sub = fsub double -0.000000e+00, %9
  store double %sub, double* %dval.addr, align 8
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.23, %if.end.21
  %10 = load double, double* %dval.addr, align 8
  %call25 = call double @frexp(double %10, i32* %expo) #4
  store double %call25, double* %frac, align 8
  %11 = load i32, i32* %expo, align 4
  %cmp26 = icmp sle i32 %11, 0
  br i1 %cmp26, label %if.then.28, label %if.end.30

if.then.28:                                       ; preds = %if.end.24
  %call29 = call %struct._object* @PyLong_FromLong(i64 0)
  store %struct._object* %call29, %struct._object** %retval
  br label %return

if.end.30:                                        ; preds = %if.end.24
  %12 = load i32, i32* %expo, align 4
  %sub31 = sub i32 %12, 1
  %div = sdiv i32 %sub31, 30
  %add = add i32 %div, 1
  store i32 %add, i32* %ndig, align 4
  %13 = load i32, i32* %ndig, align 4
  %conv32 = sext i32 %13 to i64
  %call33 = call %struct._longobject* @_PyLong_New(i64 %conv32)
  store %struct._longobject* %call33, %struct._longobject** %v, align 8
  %14 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp34 = icmp eq %struct._longobject* %14, null
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.30
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.37:                                        ; preds = %if.end.30
  %15 = load double, double* %frac, align 8
  %16 = load i32, i32* %expo, align 4
  %sub38 = sub i32 %16, 1
  %rem = srem i32 %sub38, 30
  %add39 = add i32 %rem, 1
  %call40 = call double @ldexp(double %15, i32 %add39) #4
  store double %call40, double* %frac, align 8
  %17 = load i32, i32* %ndig, align 4
  store i32 %17, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end.37
  %18 = load i32, i32* %i, align 4
  %dec = add i32 %18, -1
  store i32 %dec, i32* %i, align 4
  %cmp41 = icmp sge i32 %dec, 0
  br i1 %cmp41, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load double, double* %frac, align 8
  %conv43 = fptoui double %19 to i32
  store i32 %conv43, i32* %bits, align 4
  %20 = load i32, i32* %bits, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom = sext i32 %21 to i64
  %22 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %22, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %idxprom
  store i32 %20, i32* %arrayidx, align 4
  %23 = load double, double* %frac, align 8
  %24 = load i32, i32* %bits, align 4
  %conv44 = uitofp i32 %24 to double
  %sub45 = fsub double %23, %conv44
  store double %sub45, double* %frac, align 8
  %25 = load double, double* %frac, align 8
  %call46 = call double @ldexp(double %25, i32 30) #4
  store double %call46, double* %frac, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %neg, align 4
  %tobool47 = icmp ne i32 %26, 0
  br i1 %tobool47, label %if.then.48, label %if.end.51

if.then.48:                                       ; preds = %for.end
  %27 = load %struct._longobject*, %struct._longobject** %v, align 8
  %28 = bitcast %struct._longobject* %27 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %28, i32 0, i32 1
  %29 = load i64, i64* %ob_size, align 8
  %sub49 = sub i64 0, %29
  %30 = load %struct._longobject*, %struct._longobject** %v, align 8
  %31 = bitcast %struct._longobject* %30 to %struct.PyVarObject*
  %ob_size50 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %31, i32 0, i32 1
  store i64 %sub49, i64* %ob_size50, align 8
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.48, %for.end
  %32 = load %struct._longobject*, %struct._longobject** %v, align 8
  %33 = bitcast %struct._longobject* %32 to %struct._object*
  store %struct._object* %33, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.51, %if.then.36, %if.then.28, %if.then.20, %if.then
  %34 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %34
}

; Function Attrs: nounwind readnone
declare i32 @__isinff(float) #2

; Function Attrs: nounwind readnone
declare i32 @__isinf(double) #2

; Function Attrs: nounwind readnone
declare i32 @__isinfl(x86_fp80) #2

; Function Attrs: nounwind readnone
declare i32 @__isnanf(float) #2

; Function Attrs: nounwind readnone
declare i32 @__isnan(double) #2

; Function Attrs: nounwind readnone
declare i32 @__isnanl(x86_fp80) #2

; Function Attrs: nounwind
declare double @frexp(double, i32*) #3

; Function Attrs: nounwind
declare double @ldexp(double, i32) #3

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsLongAndOverflow(%struct._object* %vv, i32* %overflow) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %overflow.addr = alloca i32*, align 8
  %v = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %prev = alloca i64, align 8
  %res = alloca i64, align 8
  %i = alloca i64, align 8
  %sign = alloca i32, align 4
  %do_decref = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  store i32* %overflow, i32** %overflow.addr, align 8
  store i32 0, i32* %do_decref, align 4
  %0 = load i32*, i32** %overflow.addr, align 8
  store i32 0, i32* %0, align 4
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 404)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19
  %4 = load i64, i64* %tp_flags, align 8
  %and = and i64 %4, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %vv.addr, align 8
  %6 = bitcast %struct._object* %5 to %struct._longobject*
  store %struct._longobject* %6, %struct._longobject** %v, align 8
  br label %if.end.6

if.else:                                          ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %vv.addr, align 8
  %call = call %struct._longobject* @_PyLong_FromNbInt(%struct._object* %7)
  store %struct._longobject* %call, %struct._longobject** %v, align 8
  %8 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp3 = icmp eq %struct._longobject* %8, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.else
  store i64 -1, i64* %retval
  br label %return

if.end.5:                                         ; preds = %if.else
  store i32 1, i32* %do_decref, align 4
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.then.2
  store i64 -1, i64* %res, align 8
  %9 = load %struct._longobject*, %struct._longobject** %v, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size, align 8
  store i64 %11, i64* %i, align 8
  %12 = load i64, i64* %i, align 8
  switch i64 %12, label %sw.default [
    i64 -1, label %sw.bb
    i64 0, label %sw.bb.7
    i64 1, label %sw.bb.8
  ]

sw.bb:                                            ; preds = %if.end.6
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %14 = load i32, i32* %arrayidx, align 4
  %sub = sub i32 0, %14
  %conv = sext i32 %sub to i64
  store i64 %conv, i64* %res, align 8
  br label %sw.epilog

sw.bb.7:                                          ; preds = %if.end.6
  store i64 0, i64* %res, align 8
  br label %sw.epilog

sw.bb.8:                                          ; preds = %if.end.6
  %15 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit9 = getelementptr inbounds %struct._longobject, %struct._longobject* %15, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x i32], [1 x i32]* %ob_digit9, i32 0, i64 0
  %16 = load i32, i32* %arrayidx10, align 4
  %conv11 = zext i32 %16 to i64
  store i64 %conv11, i64* %res, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.6
  store i32 1, i32* %sign, align 4
  store i64 0, i64* %x, align 8
  %17 = load i64, i64* %i, align 8
  %cmp12 = icmp slt i64 %17, 0
  br i1 %cmp12, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %sw.default
  store i32 -1, i32* %sign, align 4
  %18 = load i64, i64* %i, align 8
  %sub15 = sub i64 0, %18
  store i64 %sub15, i64* %i, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %sw.default
  br label %while.cond

while.cond:                                       ; preds = %if.end.25, %if.end.16
  %19 = load i64, i64* %i, align 8
  %dec = add i64 %19, -1
  store i64 %dec, i64* %i, align 8
  %cmp17 = icmp sge i64 %dec, 0
  br i1 %cmp17, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %20 = load i64, i64* %x, align 8
  store i64 %20, i64* %prev, align 8
  %21 = load i64, i64* %x, align 8
  %shl = shl i64 %21, 30
  %22 = load i64, i64* %i, align 8
  %23 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit19 = getelementptr inbounds %struct._longobject, %struct._longobject* %23, i32 0, i32 1
  %arrayidx20 = getelementptr [1 x i32], [1 x i32]* %ob_digit19, i32 0, i64 %22
  %24 = load i32, i32* %arrayidx20, align 4
  %conv21 = zext i32 %24 to i64
  %or = or i64 %shl, %conv21
  store i64 %or, i64* %x, align 8
  %25 = load i64, i64* %x, align 8
  %shr = lshr i64 %25, 30
  %26 = load i64, i64* %prev, align 8
  %cmp22 = icmp ne i64 %shr, %26
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %while.body
  %27 = load i32, i32* %sign, align 4
  %28 = load i32*, i32** %overflow.addr, align 8
  store i32 %27, i32* %28, align 4
  br label %exit

if.end.25:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %29 = load i64, i64* %x, align 8
  %cmp26 = icmp ule i64 %29, 9223372036854775807
  br i1 %cmp26, label %if.then.28, label %if.else.30

if.then.28:                                       ; preds = %while.end
  %30 = load i64, i64* %x, align 8
  %31 = load i32, i32* %sign, align 4
  %conv29 = sext i32 %31 to i64
  %mul = mul i64 %30, %conv29
  store i64 %mul, i64* %res, align 8
  br label %if.end.38

if.else.30:                                       ; preds = %while.end
  %32 = load i32, i32* %sign, align 4
  %cmp31 = icmp slt i32 %32, 0
  br i1 %cmp31, label %land.lhs.true, label %if.else.36

land.lhs.true:                                    ; preds = %if.else.30
  %33 = load i64, i64* %x, align 8
  %cmp33 = icmp eq i64 %33, -9223372036854775808
  br i1 %cmp33, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %land.lhs.true
  store i64 -9223372036854775808, i64* %res, align 8
  br label %if.end.37

if.else.36:                                       ; preds = %land.lhs.true, %if.else.30
  %34 = load i32, i32* %sign, align 4
  %35 = load i32*, i32** %overflow.addr, align 8
  store i32 %34, i32* %35, align 4
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.36, %if.then.35
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.then.28
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.38, %sw.bb.8, %sw.bb.7, %sw.bb
  br label %exit

exit:                                             ; preds = %sw.epilog, %if.then.24
  %36 = load i32, i32* %do_decref, align 4
  %tobool = icmp ne i32 %36, 0
  br i1 %tobool, label %if.then.39, label %if.end.47

if.then.39:                                       ; preds = %exit
  br label %do.body

do.body:                                          ; preds = %if.then.39
  %37 = load %struct._longobject*, %struct._longobject** %v, align 8
  %38 = bitcast %struct._longobject* %37 to %struct._object*
  store %struct._object* %38, %struct._object** %_py_decref_tmp, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0
  %40 = load i64, i64* %ob_refcnt, align 8
  %dec40 = add i64 %40, -1
  store i64 %dec40, i64* %ob_refcnt, align 8
  %cmp41 = icmp ne i64 %dec40, 0
  br i1 %cmp41, label %if.then.43, label %if.else.44

if.then.43:                                       ; preds = %do.body
  br label %if.end.46

if.else.44:                                       ; preds = %do.body
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %43(%struct._object* %44)
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.44, %if.then.43
  br label %do.end

do.end:                                           ; preds = %if.end.46
  br label %if.end.47

if.end.47:                                        ; preds = %do.end, %exit
  %45 = load i64, i64* %res, align 8
  store i64 %45, i64* %retval
  br label %return

return:                                           ; preds = %if.end.47, %if.then.4, %if.then
  %46 = load i64, i64* %retval
  ret i64 %46
}

declare void @_PyErr_BadInternalCall(i8*, i32) #1

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsLong(%struct._object* %obj) #0 {
entry:
  %obj.addr = alloca %struct._object*, align 8
  %overflow = alloca i32, align 4
  %result = alloca i64, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i64 @PyLong_AsLongAndOverflow(%struct._object* %0, i32* %overflow)
  store i64 %call, i64* %result, align 8
  %1 = load i32, i32* %overflow, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i64, i64* %result, align 8
  ret i64 %3
}

; Function Attrs: nounwind uwtable
define i32 @_PyLong_AsInt(%struct._object* %obj) #0 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct._object*, align 8
  %overflow = alloca i32, align 4
  %result = alloca i64, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  %0 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i64 @PyLong_AsLongAndOverflow(%struct._object* %0, i32* %overflow)
  store i64 %call, i64* %result, align 8
  %1 = load i32, i32* %overflow, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %result, align 8
  %cmp = icmp sgt i64 %2, 2147483647
  br i1 %cmp, label %if.then, label %lor.lhs.false.1

lor.lhs.false.1:                                  ; preds = %lor.lhs.false
  %3 = load i64, i64* %result, align 8
  %cmp2 = icmp slt i64 %3, -2147483648
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.1, %lor.lhs.false, %entry
  %4 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.1
  %5 = load i64, i64* %result, align 8
  %conv = trunc i64 %5 to i32
  store i32 %conv, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsSsize_t(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %prev = alloca i64, align 8
  %i = alloca i64, align 8
  %sign = alloca i32, align 4
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 513)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %vv.addr, align 8
  %6 = bitcast %struct._object* %5 to %struct._longobject*
  store %struct._longobject* %6, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %8 = bitcast %struct._longobject* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  store i64 %9, i64* %i, align 8
  %10 = load i64, i64* %i, align 8
  switch i64 %10, label %sw.epilog [
    i64 -1, label %sw.bb
    i64 0, label %sw.bb.4
    i64 1, label %sw.bb.5
  ]

sw.bb:                                            ; preds = %if.end.3
  %11 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %11, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %12 = load i32, i32* %arrayidx, align 4
  %sub = sub i32 0, %12
  %conv = sext i32 %sub to i64
  store i64 %conv, i64* %retval
  br label %return

sw.bb.4:                                          ; preds = %if.end.3
  store i64 0, i64* %retval
  br label %return

sw.bb.5:                                          ; preds = %if.end.3
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit6 = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx7 = getelementptr [1 x i32], [1 x i32]* %ob_digit6, i32 0, i64 0
  %14 = load i32, i32* %arrayidx7, align 4
  %conv8 = zext i32 %14 to i64
  store i64 %conv8, i64* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.3
  store i32 1, i32* %sign, align 4
  store i64 0, i64* %x, align 8
  %15 = load i64, i64* %i, align 8
  %cmp9 = icmp slt i64 %15, 0
  br i1 %cmp9, label %if.then.11, label %if.end.13

if.then.11:                                       ; preds = %sw.epilog
  store i32 -1, i32* %sign, align 4
  %16 = load i64, i64* %i, align 8
  %sub12 = sub i64 0, %16
  store i64 %sub12, i64* %i, align 8
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.11, %sw.epilog
  br label %while.cond

while.cond:                                       ; preds = %if.end.22, %if.end.13
  %17 = load i64, i64* %i, align 8
  %dec = add i64 %17, -1
  store i64 %dec, i64* %i, align 8
  %cmp14 = icmp sge i64 %dec, 0
  br i1 %cmp14, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %18 = load i64, i64* %x, align 8
  store i64 %18, i64* %prev, align 8
  %19 = load i64, i64* %x, align 8
  %shl = shl i64 %19, 30
  %20 = load i64, i64* %i, align 8
  %21 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit16 = getelementptr inbounds %struct._longobject, %struct._longobject* %21, i32 0, i32 1
  %arrayidx17 = getelementptr [1 x i32], [1 x i32]* %ob_digit16, i32 0, i64 %20
  %22 = load i32, i32* %arrayidx17, align 4
  %conv18 = zext i32 %22 to i64
  %or = or i64 %shl, %conv18
  store i64 %or, i64* %x, align 8
  %23 = load i64, i64* %x, align 8
  %shr = lshr i64 %23, 30
  %24 = load i64, i64* %prev, align 8
  %cmp19 = icmp ne i64 %shr, %24
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %while.body
  br label %overflow

if.end.22:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %25 = load i64, i64* %x, align 8
  %cmp23 = icmp ule i64 %25, 9223372036854775807
  br i1 %cmp23, label %if.then.25, label %if.else

if.then.25:                                       ; preds = %while.end
  %26 = load i64, i64* %x, align 8
  %27 = load i32, i32* %sign, align 4
  %conv26 = sext i32 %27 to i64
  %mul = mul i64 %26, %conv26
  store i64 %mul, i64* %retval
  br label %return

if.else:                                          ; preds = %while.end
  %28 = load i32, i32* %sign, align 4
  %cmp27 = icmp slt i32 %28, 0
  br i1 %cmp27, label %land.lhs.true, label %if.end.32

land.lhs.true:                                    ; preds = %if.else
  %29 = load i64, i64* %x, align 8
  %cmp29 = icmp eq i64 %29, -9223372036854775808
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %land.lhs.true
  store i64 -9223372036854775808, i64* %retval
  br label %return

if.end.32:                                        ; preds = %land.lhs.true, %if.else
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32
  br label %overflow

overflow:                                         ; preds = %if.end.33, %if.then.21
  %30 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %30, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

return:                                           ; preds = %overflow, %if.then.31, %if.then.25, %sw.bb.5, %sw.bb.4, %sw.bb, %if.then.2, %if.then
  %31 = load i64, i64* %retval
  ret i64 %31
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsUnsignedLong(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %prev = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 568)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %vv.addr, align 8
  %6 = bitcast %struct._object* %5 to %struct._longobject*
  store %struct._longobject* %6, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %8 = bitcast %struct._longobject* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  store i64 %9, i64* %i, align 8
  store i64 0, i64* %x, align 8
  %10 = load i64, i64* %i, align 8
  %cmp4 = icmp slt i64 %10, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.3
  %11 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %12 = load i64, i64* %i, align 8
  switch i64 %12, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb.7
  ]

sw.bb:                                            ; preds = %if.end.6
  store i64 0, i64* %retval
  br label %return

sw.bb.7:                                          ; preds = %if.end.6
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %14 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %14 to i64
  store i64 %conv, i64* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.6
  br label %while.cond

while.cond:                                       ; preds = %if.end.16, %sw.epilog
  %15 = load i64, i64* %i, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %i, align 8
  %cmp8 = icmp sge i64 %dec, 0
  br i1 %cmp8, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %16 = load i64, i64* %x, align 8
  store i64 %16, i64* %prev, align 8
  %17 = load i64, i64* %x, align 8
  %shl = shl i64 %17, 30
  %18 = load i64, i64* %i, align 8
  %19 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit10 = getelementptr inbounds %struct._longobject, %struct._longobject* %19, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x i32], [1 x i32]* %ob_digit10, i32 0, i64 %18
  %20 = load i32, i32* %arrayidx11, align 4
  %conv12 = zext i32 %20 to i64
  %or = or i64 %shl, %conv12
  store i64 %or, i64* %x, align 8
  %21 = load i64, i64* %x, align 8
  %shr = lshr i64 %21, 30
  %22 = load i64, i64* %prev, align 8
  %cmp13 = icmp ne i64 %shr, %22
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %while.body
  %23 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.12, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.16:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %24 = load i64, i64* %x, align 8
  store i64 %24, i64* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then.15, %sw.bb.7, %sw.bb, %if.then.5, %if.then.2, %if.then
  %25 = load i64, i64* %retval
  ret i64 %25
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsSize_t(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %prev = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 612)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %vv.addr, align 8
  %6 = bitcast %struct._object* %5 to %struct._longobject*
  store %struct._longobject* %6, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %8 = bitcast %struct._longobject* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  store i64 %9, i64* %i, align 8
  store i64 0, i64* %x, align 8
  %10 = load i64, i64* %i, align 8
  %cmp4 = icmp slt i64 %10, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.3
  %11 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %11, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.6:                                         ; preds = %if.end.3
  %12 = load i64, i64* %i, align 8
  switch i64 %12, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb.7
  ]

sw.bb:                                            ; preds = %if.end.6
  store i64 0, i64* %retval
  br label %return

sw.bb.7:                                          ; preds = %if.end.6
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %14 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %14 to i64
  store i64 %conv, i64* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.6
  br label %while.cond

while.cond:                                       ; preds = %if.end.16, %sw.epilog
  %15 = load i64, i64* %i, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %i, align 8
  %cmp8 = icmp sge i64 %dec, 0
  br i1 %cmp8, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %16 = load i64, i64* %x, align 8
  store i64 %16, i64* %prev, align 8
  %17 = load i64, i64* %x, align 8
  %shl = shl i64 %17, 30
  %18 = load i64, i64* %i, align 8
  %19 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit10 = getelementptr inbounds %struct._longobject, %struct._longobject* %19, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x i32], [1 x i32]* %ob_digit10, i32 0, i64 %18
  %20 = load i32, i32* %arrayidx11, align 4
  %conv12 = zext i32 %20 to i64
  %or = or i64 %shl, %conv12
  store i64 %or, i64* %x, align 8
  %21 = load i64, i64* %x, align 8
  %shr = lshr i64 %21, 30
  %22 = load i64, i64* %prev, align 8
  %cmp13 = icmp ne i64 %shr, %22
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %while.body
  %23 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %23, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.16:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %24 = load i64, i64* %x, align 8
  store i64 %24, i64* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then.15, %sw.bb.7, %sw.bb, %if.then.5, %if.then.2, %if.then
  %25 = load i64, i64* %retval
  ret i64 %25
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsUnsignedLongMask(%struct._object* %op) #0 {
entry:
  %retval = alloca i64, align 8
  %op.addr = alloca %struct._object*, align 8
  %lo = alloca %struct._longobject*, align 8
  %val = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %op, %struct._object** %op.addr, align 8
  %0 = load %struct._object*, %struct._object** %op.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 684)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %op.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %op.addr, align 8
  %call = call i64 @_PyLong_AsUnsignedLongMask(%struct._object* %4)
  store i64 %call, i64* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %op.addr, align 8
  %call4 = call %struct._longobject* @_PyLong_FromNbInt(%struct._object* %5)
  store %struct._longobject* %call4, %struct._longobject** %lo, align 8
  %6 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %cmp5 = icmp eq %struct._longobject* %6, null
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.3
  store i64 -1, i64* %retval
  br label %return

if.end.7:                                         ; preds = %if.end.3
  %7 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %8 = bitcast %struct._longobject* %7 to %struct._object*
  %call8 = call i64 @_PyLong_AsUnsignedLongMask(%struct._object* %8)
  store i64 %call8, i64* %val, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.7
  %9 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %10 = bitcast %struct._longobject* %9 to %struct._object*
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp9 = icmp ne i64 %dec, 0
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %do.body
  br label %if.end.12

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  br label %do.end

do.end:                                           ; preds = %if.end.12
  %17 = load i64, i64* %val, align 8
  store i64 %17, i64* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.6, %if.then.2, %if.then
  %18 = load i64, i64* %retval
  ret i64 %18
}

; Function Attrs: nounwind uwtable
define internal i64 @_PyLong_AsUnsignedLongMask(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %i = alloca i64, align 8
  %sign = alloca i32, align 4
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 656)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct._object*, %struct._object** %vv.addr, align 8
  %5 = bitcast %struct._object* %4 to %struct._longobject*
  store %struct._longobject* %5, %struct._longobject** %v, align 8
  %6 = load %struct._longobject*, %struct._longobject** %v, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size, align 8
  store i64 %8, i64* %i, align 8
  %9 = load i64, i64* %i, align 8
  switch i64 %9, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb.2
  ]

sw.bb:                                            ; preds = %if.end
  store i64 0, i64* %retval
  br label %return

sw.bb.2:                                          ; preds = %if.end
  %10 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %10, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %11 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %11 to i64
  store i64 %conv, i64* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end
  store i32 1, i32* %sign, align 4
  store i64 0, i64* %x, align 8
  %12 = load i64, i64* %i, align 8
  %cmp3 = icmp slt i64 %12, 0
  br i1 %cmp3, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %sw.epilog
  store i32 -1, i32* %sign, align 4
  %13 = load i64, i64* %i, align 8
  %sub = sub i64 0, %13
  store i64 %sub, i64* %i, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %sw.epilog
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.6
  %14 = load i64, i64* %i, align 8
  %dec = add i64 %14, -1
  store i64 %dec, i64* %i, align 8
  %cmp7 = icmp sge i64 %dec, 0
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %15 = load i64, i64* %x, align 8
  %shl = shl i64 %15, 30
  %16 = load i64, i64* %i, align 8
  %17 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit9 = getelementptr inbounds %struct._longobject, %struct._longobject* %17, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x i32], [1 x i32]* %ob_digit9, i32 0, i64 %16
  %18 = load i32, i32* %arrayidx10, align 4
  %conv11 = zext i32 %18 to i64
  %or = or i64 %shl, %conv11
  store i64 %or, i64* %x, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %19 = load i64, i64* %x, align 8
  %20 = load i32, i32* %sign, align 4
  %conv12 = sext i32 %20 to i64
  %mul = mul i64 %19, %conv12
  store i64 %mul, i64* %retval
  br label %return

return:                                           ; preds = %while.end, %sw.bb.2, %sw.bb, %if.then
  %21 = load i64, i64* %retval
  ret i64 %21
}

; Function Attrs: nounwind uwtable
define i32 @_PyLong_Sign(%struct._object* %vv) #0 {
entry:
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct._longobject*
  store %struct._longobject* %1, %struct._longobject** %v, align 8
  %2 = load %struct._longobject*, %struct._longobject** %v, align 8
  %3 = bitcast %struct._longobject* %2 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %3, i32 0, i32 1
  %4 = load i64, i64* %ob_size, align 8
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %struct._longobject*, %struct._longobject** %v, align 8
  %6 = bitcast %struct._longobject* %5 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1
  %7 = load i64, i64* %ob_size1, align 8
  %cmp2 = icmp slt i64 %7, 0
  %cond = select i1 %cmp2, i32 -1, i32 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ]
  ret i32 %cond3
}

; Function Attrs: nounwind uwtable
define i64 @_PyLong_NumBits(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %result = alloca i64, align 8
  %ndigits = alloca i64, align 8
  %msd = alloca i32, align 4
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct._longobject*
  store %struct._longobject* %1, %struct._longobject** %v, align 8
  store i64 0, i64* %result, align 8
  %2 = load %struct._longobject*, %struct._longobject** %v, align 8
  %3 = bitcast %struct._longobject* %2 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %3, i32 0, i32 1
  %4 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %4, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct._longobject*, %struct._longobject** %v, align 8
  %6 = bitcast %struct._longobject* %5 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1
  %7 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %7
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct._longobject*, %struct._longobject** %v, align 8
  %9 = bitcast %struct._longobject* %8 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %9, i32 0, i32 1
  %10 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %10, %cond.false ]
  store i64 %cond, i64* %ndigits, align 8
  %11 = load i64, i64* %ndigits, align 8
  %cmp3 = icmp sgt i64 %11, 0
  br i1 %cmp3, label %if.then, label %if.end.12

if.then:                                          ; preds = %cond.end
  %12 = load i64, i64* %ndigits, align 8
  %sub4 = sub i64 %12, 1
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %sub4
  %14 = load i32, i32* %arrayidx, align 4
  store i32 %14, i32* %msd, align 4
  %15 = load i64, i64* %ndigits, align 8
  %sub5 = sub i64 %15, 1
  %cmp6 = icmp ugt i64 %sub5, 614891469123651720
  br i1 %cmp6, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %if.then
  br label %Overflow

if.end:                                           ; preds = %if.then
  %16 = load i64, i64* %ndigits, align 8
  %sub8 = sub i64 %16, 1
  %mul = mul i64 %sub8, 30
  store i64 %mul, i64* %result, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end
  %17 = load i64, i64* %result, align 8
  %inc = add i64 %17, 1
  store i64 %inc, i64* %result, align 8
  %18 = load i64, i64* %result, align 8
  %cmp9 = icmp eq i64 %18, 0
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %do.body
  br label %Overflow

if.end.11:                                        ; preds = %do.body
  %19 = load i32, i32* %msd, align 4
  %shr = lshr i32 %19, 1
  store i32 %shr, i32* %msd, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end.11
  %20 = load i32, i32* %msd, align 4
  %tobool = icmp ne i32 %20, 0
  br i1 %tobool, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end.12

if.end.12:                                        ; preds = %do.end, %cond.end
  %21 = load i64, i64* %result, align 8
  store i64 %21, i64* %retval
  br label %return

Overflow:                                         ; preds = %if.then.10, %if.then.7
  %22 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

return:                                           ; preds = %Overflow, %if.end.12
  %23 = load i64, i64* %retval
  ret i64 %23
}

; Function Attrs: nounwind uwtable
define %struct._object* @_PyLong_FromByteArray(i8* %bytes, i64 %n, i32 %little_endian, i32 %is_signed) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %bytes.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %little_endian.addr = alloca i32, align 4
  %is_signed.addr = alloca i32, align 4
  %pstartbyte = alloca i8*, align 8
  %incr = alloca i32, align 4
  %pendbyte = alloca i8*, align 8
  %numsignificantbytes = alloca i64, align 8
  %ndigits = alloca i64, align 8
  %v = alloca %struct._longobject*, align 8
  %idigit = alloca i64, align 8
  %i = alloca i64, align 8
  %p = alloca i8*, align 8
  %pincr = alloca i32, align 4
  %insignficant = alloca i8, align 1
  %i39 = alloca i64, align 8
  %carry = alloca i64, align 8
  %accum = alloca i64, align 8
  %accumbits = alloca i32, align 4
  %p40 = alloca i8*, align 8
  %thisbyte = alloca i64, align 8
  store i8* %bytes, i8** %bytes.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  store i32 %little_endian, i32* %little_endian.addr, align 4
  store i32 %is_signed, i32* %is_signed.addr, align 4
  store i64 0, i64* %idigit, align 8
  %0 = load i64, i64* %n.addr, align 8
  %cmp = icmp eq i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call %struct._object* @PyLong_FromLong(i64 0)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %little_endian.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then.1, label %if.else

if.then.1:                                        ; preds = %if.end
  %2 = load i8*, i8** %bytes.addr, align 8
  store i8* %2, i8** %pstartbyte, align 8
  %3 = load i8*, i8** %bytes.addr, align 8
  %4 = load i64, i64* %n.addr, align 8
  %add.ptr = getelementptr i8, i8* %3, i64 %4
  %add.ptr2 = getelementptr i8, i8* %add.ptr, i64 -1
  store i8* %add.ptr2, i8** %pendbyte, align 8
  store i32 1, i32* %incr, align 4
  br label %if.end.5

if.else:                                          ; preds = %if.end
  %5 = load i8*, i8** %bytes.addr, align 8
  %6 = load i64, i64* %n.addr, align 8
  %add.ptr3 = getelementptr i8, i8* %5, i64 %6
  %add.ptr4 = getelementptr i8, i8* %add.ptr3, i64 -1
  store i8* %add.ptr4, i8** %pstartbyte, align 8
  %7 = load i8*, i8** %bytes.addr, align 8
  store i8* %7, i8** %pendbyte, align 8
  store i32 -1, i32* %incr, align 4
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.1
  %8 = load i32, i32* %is_signed.addr, align 4
  %tobool6 = icmp ne i32 %8, 0
  br i1 %tobool6, label %if.then.7, label %if.end.10

if.then.7:                                        ; preds = %if.end.5
  %9 = load i8*, i8** %pendbyte, align 8
  %10 = load i8, i8* %9, align 1
  %conv = zext i8 %10 to i32
  %cmp8 = icmp sge i32 %conv, 128
  %conv9 = zext i1 %cmp8 to i32
  store i32 %conv9, i32* %is_signed.addr, align 4
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.7, %if.end.5
  %11 = load i8*, i8** %pendbyte, align 8
  store i8* %11, i8** %p, align 8
  %12 = load i32, i32* %incr, align 4
  %sub = sub i32 0, %12
  store i32 %sub, i32* %pincr, align 4
  %13 = load i32, i32* %is_signed.addr, align 4
  %tobool11 = icmp ne i32 %13, 0
  %cond = select i1 %tobool11, i32 255, i32 0
  %conv12 = trunc i32 %cond to i8
  store i8 %conv12, i8* %insignficant, align 1
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.10
  %14 = load i64, i64* %i, align 8
  %15 = load i64, i64* %n.addr, align 8
  %cmp13 = icmp ult i64 %14, %15
  br i1 %cmp13, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load i8*, i8** %p, align 8
  %17 = load i8, i8* %16, align 1
  %conv15 = zext i8 %17 to i32
  %18 = load i8, i8* %insignficant, align 1
  %conv16 = zext i8 %18 to i32
  %cmp17 = icmp ne i32 %conv15, %conv16
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %for.body
  br label %for.end

if.end.20:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.20
  %19 = load i64, i64* %i, align 8
  %inc = add i64 %19, 1
  store i64 %inc, i64* %i, align 8
  %20 = load i32, i32* %pincr, align 4
  %21 = load i8*, i8** %p, align 8
  %idx.ext = sext i32 %20 to i64
  %add.ptr21 = getelementptr i8, i8* %21, i64 %idx.ext
  store i8* %add.ptr21, i8** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.19, %for.cond
  %22 = load i64, i64* %n.addr, align 8
  %23 = load i64, i64* %i, align 8
  %sub22 = sub i64 %22, %23
  store i64 %sub22, i64* %numsignificantbytes, align 8
  %24 = load i32, i32* %is_signed.addr, align 4
  %tobool23 = icmp ne i32 %24, 0
  br i1 %tobool23, label %land.lhs.true, label %if.end.28

land.lhs.true:                                    ; preds = %for.end
  %25 = load i64, i64* %numsignificantbytes, align 8
  %26 = load i64, i64* %n.addr, align 8
  %cmp24 = icmp ult i64 %25, %26
  br i1 %cmp24, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %land.lhs.true
  %27 = load i64, i64* %numsignificantbytes, align 8
  %inc27 = add i64 %27, 1
  store i64 %inc27, i64* %numsignificantbytes, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %land.lhs.true, %for.end
  %28 = load i64, i64* %numsignificantbytes, align 8
  %cmp29 = icmp ugt i64 %28, 1152921504606846972
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.28
  %29 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %29, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.32:                                        ; preds = %if.end.28
  %30 = load i64, i64* %numsignificantbytes, align 8
  %mul = mul i64 %30, 8
  %add = add i64 %mul, 30
  %sub33 = sub i64 %add, 1
  %div = udiv i64 %sub33, 30
  store i64 %div, i64* %ndigits, align 8
  %31 = load i64, i64* %ndigits, align 8
  %call34 = call %struct._longobject* @_PyLong_New(i64 %31)
  store %struct._longobject* %call34, %struct._longobject** %v, align 8
  %32 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp35 = icmp eq %struct._longobject* %32, null
  br i1 %cmp35, label %if.then.37, label %if.end.38

if.then.37:                                       ; preds = %if.end.32
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.38:                                        ; preds = %if.end.32
  store i64 1, i64* %carry, align 8
  store i64 0, i64* %accum, align 8
  store i32 0, i32* %accumbits, align 4
  %33 = load i8*, i8** %pstartbyte, align 8
  store i8* %33, i8** %p40, align 8
  store i64 0, i64* %i39, align 8
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.60, %if.end.38
  %34 = load i64, i64* %i39, align 8
  %35 = load i64, i64* %numsignificantbytes, align 8
  %cmp42 = icmp ult i64 %34, %35
  br i1 %cmp42, label %for.body.44, label %for.end.64

for.body.44:                                      ; preds = %for.cond.41
  %36 = load i8*, i8** %p40, align 8
  %37 = load i8, i8* %36, align 1
  %conv45 = zext i8 %37 to i64
  store i64 %conv45, i64* %thisbyte, align 8
  %38 = load i32, i32* %is_signed.addr, align 4
  %tobool46 = icmp ne i32 %38, 0
  br i1 %tobool46, label %if.then.47, label %if.end.49

if.then.47:                                       ; preds = %for.body.44
  %39 = load i64, i64* %thisbyte, align 8
  %xor = xor i64 255, %39
  %40 = load i64, i64* %carry, align 8
  %add48 = add i64 %xor, %40
  store i64 %add48, i64* %thisbyte, align 8
  %41 = load i64, i64* %thisbyte, align 8
  %shr = lshr i64 %41, 8
  store i64 %shr, i64* %carry, align 8
  %42 = load i64, i64* %thisbyte, align 8
  %and = and i64 %42, 255
  store i64 %and, i64* %thisbyte, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.47, %for.body.44
  %43 = load i64, i64* %thisbyte, align 8
  %44 = load i32, i32* %accumbits, align 4
  %sh_prom = zext i32 %44 to i64
  %shl = shl i64 %43, %sh_prom
  %45 = load i64, i64* %accum, align 8
  %or = or i64 %45, %shl
  store i64 %or, i64* %accum, align 8
  %46 = load i32, i32* %accumbits, align 4
  %add50 = add i32 %46, 8
  store i32 %add50, i32* %accumbits, align 4
  %47 = load i32, i32* %accumbits, align 4
  %cmp51 = icmp uge i32 %47, 30
  br i1 %cmp51, label %if.then.53, label %if.end.59

if.then.53:                                       ; preds = %if.end.49
  %48 = load i64, i64* %accum, align 8
  %and54 = and i64 %48, 1073741823
  %conv55 = trunc i64 %and54 to i32
  %49 = load i64, i64* %idigit, align 8
  %50 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %50, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %49
  store i32 %conv55, i32* %arrayidx, align 4
  %51 = load i64, i64* %idigit, align 8
  %inc56 = add i64 %51, 1
  store i64 %inc56, i64* %idigit, align 8
  %52 = load i64, i64* %accum, align 8
  %shr57 = lshr i64 %52, 30
  store i64 %shr57, i64* %accum, align 8
  %53 = load i32, i32* %accumbits, align 4
  %sub58 = sub i32 %53, 30
  store i32 %sub58, i32* %accumbits, align 4
  br label %if.end.59

if.end.59:                                        ; preds = %if.then.53, %if.end.49
  br label %for.inc.60

for.inc.60:                                       ; preds = %if.end.59
  %54 = load i64, i64* %i39, align 8
  %inc61 = add i64 %54, 1
  store i64 %inc61, i64* %i39, align 8
  %55 = load i32, i32* %incr, align 4
  %56 = load i8*, i8** %p40, align 8
  %idx.ext62 = sext i32 %55 to i64
  %add.ptr63 = getelementptr i8, i8* %56, i64 %idx.ext62
  store i8* %add.ptr63, i8** %p40, align 8
  br label %for.cond.41

for.end.64:                                       ; preds = %for.cond.41
  %57 = load i32, i32* %accumbits, align 4
  %tobool65 = icmp ne i32 %57, 0
  br i1 %tobool65, label %if.then.66, label %if.end.71

if.then.66:                                       ; preds = %for.end.64
  %58 = load i64, i64* %accum, align 8
  %conv67 = trunc i64 %58 to i32
  %59 = load i64, i64* %idigit, align 8
  %60 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit68 = getelementptr inbounds %struct._longobject, %struct._longobject* %60, i32 0, i32 1
  %arrayidx69 = getelementptr [1 x i32], [1 x i32]* %ob_digit68, i32 0, i64 %59
  store i32 %conv67, i32* %arrayidx69, align 4
  %61 = load i64, i64* %idigit, align 8
  %inc70 = add i64 %61, 1
  store i64 %inc70, i64* %idigit, align 8
  br label %if.end.71

if.end.71:                                        ; preds = %if.then.66, %for.end.64
  %62 = load i32, i32* %is_signed.addr, align 4
  %tobool72 = icmp ne i32 %62, 0
  br i1 %tobool72, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.71
  %63 = load i64, i64* %idigit, align 8
  %sub73 = sub i64 0, %63
  br label %cond.end

cond.false:                                       ; preds = %if.end.71
  %64 = load i64, i64* %idigit, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond74 = phi i64 [ %sub73, %cond.true ], [ %64, %cond.false ]
  %65 = load %struct._longobject*, %struct._longobject** %v, align 8
  %66 = bitcast %struct._longobject* %65 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %66, i32 0, i32 1
  store i64 %cond74, i64* %ob_size, align 8
  %67 = load %struct._longobject*, %struct._longobject** %v, align 8
  %call75 = call %struct._longobject* @long_normalize(%struct._longobject* %67)
  %68 = bitcast %struct._longobject* %call75 to %struct._object*
  store %struct._object* %68, %struct._object** %retval
  br label %return

return:                                           ; preds = %cond.end, %if.then.37, %if.then.31, %if.then
  %69 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %69
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @long_normalize(%struct._longobject* %v) #0 {
entry:
  %v.addr = alloca %struct._longobject*, align 8
  %j = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %j, align 8
  %9 = load i64, i64* %j, align 8
  store i64 %9, i64* %i, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end
  %10 = load i64, i64* %i, align 8
  %cmp3 = icmp sgt i64 %10, 0
  br i1 %cmp3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %11 = load i64, i64* %i, align 8
  %sub4 = sub i64 %11, 1
  %12 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %sub4
  %13 = load i32, i32* %arrayidx, align 4
  %cmp5 = icmp eq i32 %13, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ]
  br i1 %14, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %15 = load i64, i64* %i, align 8
  %dec = add i64 %15, -1
  store i64 %dec, i64* %i, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %16 = load i64, i64* %i, align 8
  %17 = load i64, i64* %j, align 8
  %cmp6 = icmp ne i64 %16, %17
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  %18 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %19 = bitcast %struct._longobject* %18 to %struct.PyVarObject*
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1
  %20 = load i64, i64* %ob_size7, align 8
  %cmp8 = icmp slt i64 %20, 0
  br i1 %cmp8, label %cond.true.9, label %cond.false.11

cond.true.9:                                      ; preds = %if.then
  %21 = load i64, i64* %i, align 8
  %sub10 = sub i64 0, %21
  br label %cond.end.12

cond.false.11:                                    ; preds = %if.then
  %22 = load i64, i64* %i, align 8
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.false.11, %cond.true.9
  %cond13 = phi i64 [ %sub10, %cond.true.9 ], [ %22, %cond.false.11 ]
  %23 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %24 = bitcast %struct._longobject* %23 to %struct.PyVarObject*
  %ob_size14 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %24, i32 0, i32 1
  store i64 %cond13, i64* %ob_size14, align 8
  br label %if.end

if.end:                                           ; preds = %cond.end.12, %while.end
  %25 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  ret %struct._longobject* %25
}

; Function Attrs: nounwind uwtable
define i32 @_PyLong_AsByteArray(%struct._longobject* %v, i8* %bytes, i64 %n, i32 %little_endian, i32 %is_signed) #0 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca %struct._longobject*, align 8
  %bytes.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %little_endian.addr = alloca i32, align 4
  %is_signed.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %ndigits = alloca i64, align 8
  %accum = alloca i64, align 8
  %accumbits = alloca i32, align 4
  %do_twos_comp = alloca i32, align 4
  %carry = alloca i32, align 4
  %j = alloca i64, align 8
  %p = alloca i8*, align 8
  %pincr = alloca i32, align 4
  %thisdigit = alloca i32, align 4
  %s = alloca i32, align 4
  %msb = alloca i8, align 1
  %sign_bit_set = alloca i32, align 4
  %signbyte = alloca i8, align 1
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  store i8* %bytes, i8** %bytes.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  store i32 %little_endian, i32* %little_endian.addr, align 4
  store i32 %is_signed, i32* %is_signed.addr, align 4
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  store i64 %sub, i64* %ndigits, align 8
  %6 = load i32, i32* %is_signed.addr, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end, label %if.then.2

if.then.2:                                        ; preds = %if.then
  %7 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  store i32 1, i32* %do_twos_comp, align 4
  br label %if.end.4

if.else:                                          ; preds = %entry
  %8 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %9 = bitcast %struct._longobject* %8 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %9, i32 0, i32 1
  %10 = load i64, i64* %ob_size3, align 8
  store i64 %10, i64* %ndigits, align 8
  store i32 0, i32* %do_twos_comp, align 4
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.end
  %11 = load i32, i32* %little_endian.addr, align 4
  %tobool5 = icmp ne i32 %11, 0
  br i1 %tobool5, label %if.then.6, label %if.else.7

if.then.6:                                        ; preds = %if.end.4
  %12 = load i8*, i8** %bytes.addr, align 8
  store i8* %12, i8** %p, align 8
  store i32 1, i32* %pincr, align 4
  br label %if.end.9

if.else.7:                                        ; preds = %if.end.4
  %13 = load i8*, i8** %bytes.addr, align 8
  %14 = load i64, i64* %n.addr, align 8
  %add.ptr = getelementptr i8, i8* %13, i64 %14
  %add.ptr8 = getelementptr i8, i8* %add.ptr, i64 -1
  store i8* %add.ptr8, i8** %p, align 8
  store i32 -1, i32* %pincr, align 4
  br label %if.end.9

if.end.9:                                         ; preds = %if.else.7, %if.then.6
  store i64 0, i64* %j, align 8
  store i64 0, i64* %accum, align 8
  store i32 0, i32* %accumbits, align 4
  %15 = load i32, i32* %do_twos_comp, align 4
  %tobool10 = icmp ne i32 %15, 0
  %cond = select i1 %tobool10, i32 1, i32 0
  store i32 %cond, i32* %carry, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.9
  %16 = load i64, i64* %i, align 8
  %17 = load i64, i64* %ndigits, align 8
  %cmp11 = icmp slt i64 %16, %17
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load i64, i64* %i, align 8
  %19 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %19, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %18
  %20 = load i32, i32* %arrayidx, align 4
  store i32 %20, i32* %thisdigit, align 4
  %21 = load i32, i32* %do_twos_comp, align 4
  %tobool12 = icmp ne i32 %21, 0
  br i1 %tobool12, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %for.body
  %22 = load i32, i32* %thisdigit, align 4
  %xor = xor i32 %22, 1073741823
  %23 = load i32, i32* %carry, align 4
  %add = add i32 %xor, %23
  store i32 %add, i32* %thisdigit, align 4
  %24 = load i32, i32* %thisdigit, align 4
  %shr = lshr i32 %24, 30
  store i32 %shr, i32* %carry, align 4
  %25 = load i32, i32* %thisdigit, align 4
  %and = and i32 %25, 1073741823
  store i32 %and, i32* %thisdigit, align 4
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.13, %for.body
  %26 = load i32, i32* %thisdigit, align 4
  %conv = zext i32 %26 to i64
  %27 = load i32, i32* %accumbits, align 4
  %sh_prom = zext i32 %27 to i64
  %shl = shl i64 %conv, %sh_prom
  %28 = load i64, i64* %accum, align 8
  %or = or i64 %28, %shl
  store i64 %or, i64* %accum, align 8
  %29 = load i64, i64* %i, align 8
  %30 = load i64, i64* %ndigits, align 8
  %sub15 = sub i64 %30, 1
  %cmp16 = icmp eq i64 %29, %sub15
  br i1 %cmp16, label %if.then.18, label %if.else.25

if.then.18:                                       ; preds = %if.end.14
  %31 = load i32, i32* %do_twos_comp, align 4
  %tobool19 = icmp ne i32 %31, 0
  br i1 %tobool19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.18
  %32 = load i32, i32* %thisdigit, align 4
  %xor20 = xor i32 %32, 1073741823
  br label %cond.end

cond.false:                                       ; preds = %if.then.18
  %33 = load i32, i32* %thisdigit, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond21 = phi i32 [ %xor20, %cond.true ], [ %33, %cond.false ]
  store i32 %cond21, i32* %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end
  %34 = load i32, i32* %s, align 4
  %cmp22 = icmp ne i32 %34, 0
  br i1 %cmp22, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %35 = load i32, i32* %s, align 4
  %shr24 = lshr i32 %35, 1
  store i32 %shr24, i32* %s, align 4
  %36 = load i32, i32* %accumbits, align 4
  %inc = add i32 %36, 1
  store i32 %inc, i32* %accumbits, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end.27

if.else.25:                                       ; preds = %if.end.14
  %37 = load i32, i32* %accumbits, align 4
  %add26 = add i32 %37, 30
  store i32 %add26, i32* %accumbits, align 4
  br label %if.end.27

if.end.27:                                        ; preds = %if.else.25, %while.end
  br label %while.cond.28

while.cond.28:                                    ; preds = %if.end.35, %if.end.27
  %38 = load i32, i32* %accumbits, align 4
  %cmp29 = icmp uge i32 %38, 8
  br i1 %cmp29, label %while.body.31, label %while.end.42

while.body.31:                                    ; preds = %while.cond.28
  %39 = load i64, i64* %j, align 8
  %40 = load i64, i64* %n.addr, align 8
  %cmp32 = icmp uge i64 %39, %40
  br i1 %cmp32, label %if.then.34, label %if.end.35

if.then.34:                                       ; preds = %while.body.31
  br label %Overflow

if.end.35:                                        ; preds = %while.body.31
  %41 = load i64, i64* %j, align 8
  %inc36 = add i64 %41, 1
  store i64 %inc36, i64* %j, align 8
  %42 = load i64, i64* %accum, align 8
  %and37 = and i64 %42, 255
  %conv38 = trunc i64 %and37 to i8
  %43 = load i8*, i8** %p, align 8
  store i8 %conv38, i8* %43, align 1
  %44 = load i32, i32* %pincr, align 4
  %45 = load i8*, i8** %p, align 8
  %idx.ext = sext i32 %44 to i64
  %add.ptr39 = getelementptr i8, i8* %45, i64 %idx.ext
  store i8* %add.ptr39, i8** %p, align 8
  %46 = load i32, i32* %accumbits, align 4
  %sub40 = sub i32 %46, 8
  store i32 %sub40, i32* %accumbits, align 4
  %47 = load i64, i64* %accum, align 8
  %shr41 = lshr i64 %47, 8
  store i64 %shr41, i64* %accum, align 8
  br label %while.cond.28

while.end.42:                                     ; preds = %while.cond.28
  br label %for.inc

for.inc:                                          ; preds = %while.end.42
  %48 = load i64, i64* %i, align 8
  %inc43 = add i64 %48, 1
  store i64 %inc43, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %49 = load i32, i32* %accumbits, align 4
  %cmp44 = icmp ugt i32 %49, 0
  br i1 %cmp44, label %if.then.46, label %if.else.62

if.then.46:                                       ; preds = %for.end
  %50 = load i64, i64* %j, align 8
  %51 = load i64, i64* %n.addr, align 8
  %cmp47 = icmp uge i64 %50, %51
  br i1 %cmp47, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %if.then.46
  br label %Overflow

if.end.50:                                        ; preds = %if.then.46
  %52 = load i64, i64* %j, align 8
  %inc51 = add i64 %52, 1
  store i64 %inc51, i64* %j, align 8
  %53 = load i32, i32* %do_twos_comp, align 4
  %tobool52 = icmp ne i32 %53, 0
  br i1 %tobool52, label %if.then.53, label %if.end.57

if.then.53:                                       ; preds = %if.end.50
  %54 = load i32, i32* %accumbits, align 4
  %sh_prom54 = zext i32 %54 to i64
  %shl55 = shl i64 -1, %sh_prom54
  %55 = load i64, i64* %accum, align 8
  %or56 = or i64 %55, %shl55
  store i64 %or56, i64* %accum, align 8
  br label %if.end.57

if.end.57:                                        ; preds = %if.then.53, %if.end.50
  %56 = load i64, i64* %accum, align 8
  %and58 = and i64 %56, 255
  %conv59 = trunc i64 %and58 to i8
  %57 = load i8*, i8** %p, align 8
  store i8 %conv59, i8* %57, align 1
  %58 = load i32, i32* %pincr, align 4
  %59 = load i8*, i8** %p, align 8
  %idx.ext60 = sext i32 %58 to i64
  %add.ptr61 = getelementptr i8, i8* %59, i64 %idx.ext60
  store i8* %add.ptr61, i8** %p, align 8
  br label %if.end.80

if.else.62:                                       ; preds = %for.end
  %60 = load i64, i64* %j, align 8
  %61 = load i64, i64* %n.addr, align 8
  %cmp63 = icmp eq i64 %60, %61
  br i1 %cmp63, label %land.lhs.true, label %if.end.79

land.lhs.true:                                    ; preds = %if.else.62
  %62 = load i64, i64* %n.addr, align 8
  %cmp65 = icmp ugt i64 %62, 0
  br i1 %cmp65, label %land.lhs.true.67, label %if.end.79

land.lhs.true.67:                                 ; preds = %land.lhs.true
  %63 = load i32, i32* %is_signed.addr, align 4
  %tobool68 = icmp ne i32 %63, 0
  br i1 %tobool68, label %if.then.69, label %if.end.79

if.then.69:                                       ; preds = %land.lhs.true.67
  %64 = load i8*, i8** %p, align 8
  %65 = load i32, i32* %pincr, align 4
  %idx.ext70 = sext i32 %65 to i64
  %idx.neg = sub i64 0, %idx.ext70
  %add.ptr71 = getelementptr i8, i8* %64, i64 %idx.neg
  %66 = load i8, i8* %add.ptr71, align 1
  store i8 %66, i8* %msb, align 1
  %67 = load i8, i8* %msb, align 1
  %conv72 = zext i8 %67 to i32
  %cmp73 = icmp sge i32 %conv72, 128
  %conv74 = zext i1 %cmp73 to i32
  store i32 %conv74, i32* %sign_bit_set, align 4
  %68 = load i32, i32* %sign_bit_set, align 4
  %69 = load i32, i32* %do_twos_comp, align 4
  %cmp75 = icmp eq i32 %68, %69
  br i1 %cmp75, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %if.then.69
  store i32 0, i32* %retval
  br label %return

if.else.78:                                       ; preds = %if.then.69
  br label %Overflow

if.end.79:                                        ; preds = %land.lhs.true.67, %land.lhs.true, %if.else.62
  br label %if.end.80

if.end.80:                                        ; preds = %if.end.79, %if.end.57
  %70 = load i32, i32* %do_twos_comp, align 4
  %tobool81 = icmp ne i32 %70, 0
  %cond82 = select i1 %tobool81, i32 255, i32 0
  %conv83 = trunc i32 %cond82 to i8
  store i8 %conv83, i8* %signbyte, align 1
  br label %for.cond.84

for.cond.84:                                      ; preds = %for.inc.88, %if.end.80
  %71 = load i64, i64* %j, align 8
  %72 = load i64, i64* %n.addr, align 8
  %cmp85 = icmp ult i64 %71, %72
  br i1 %cmp85, label %for.body.87, label %for.end.92

for.body.87:                                      ; preds = %for.cond.84
  %73 = load i8, i8* %signbyte, align 1
  %74 = load i8*, i8** %p, align 8
  store i8 %73, i8* %74, align 1
  br label %for.inc.88

for.inc.88:                                       ; preds = %for.body.87
  %75 = load i64, i64* %j, align 8
  %inc89 = add i64 %75, 1
  store i64 %inc89, i64* %j, align 8
  %76 = load i32, i32* %pincr, align 4
  %77 = load i8*, i8** %p, align 8
  %idx.ext90 = sext i32 %76 to i64
  %add.ptr91 = getelementptr i8, i8* %77, i64 %idx.ext90
  store i8* %add.ptr91, i8** %p, align 8
  br label %for.cond.84

for.end.92:                                       ; preds = %for.cond.84
  store i32 0, i32* %retval
  br label %return

Overflow:                                         ; preds = %if.else.78, %if.then.49, %if.then.34
  %78 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %78, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %Overflow, %for.end.92, %if.then.77, %if.then.2
  %79 = load i32, i32* %retval
  ret i32 %79
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromVoidPtr(i8* %p) #0 {
entry:
  %p.addr = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  %0 = load i8*, i8** %p.addr, align 8
  %1 = ptrtoint i8* %0 to i64
  %call = call %struct._object* @PyLong_FromUnsignedLong(i64 %1)
  ret %struct._object* %call
}

; Function Attrs: nounwind uwtable
define i8* @PyLong_AsVoidPtr(%struct._object* %vv) #0 {
entry:
  %retval = alloca i8*, align 8
  %vv.addr = alloca %struct._object*, align 8
  %x = alloca i64, align 8
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %vv.addr, align 8
  %call = call i32 @_PyLong_Sign(%struct._object* %3)
  %cmp1 = icmp slt i32 %call, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct._object*, %struct._object** %vv.addr, align 8
  %call2 = call i64 @PyLong_AsLong(%struct._object* %4)
  store i64 %call2, i64* %x, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %5 = load %struct._object*, %struct._object** %vv.addr, align 8
  %call3 = call i64 @PyLong_AsUnsignedLong(%struct._object* %5)
  store i64 %call3, i64* %x, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i64, i64* %x, align 8
  %cmp4 = icmp eq i64 %6, -1
  br i1 %cmp4, label %land.lhs.true.5, label %if.end.8

land.lhs.true.5:                                  ; preds = %if.end
  %call6 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call6, null
  br i1 %tobool, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %land.lhs.true.5
  store i8* null, i8** %retval
  br label %return

if.end.8:                                         ; preds = %land.lhs.true.5, %if.end
  %7 = load i64, i64* %x, align 8
  %8 = inttoptr i64 %7 to i8*
  store i8* %8, i8** %retval
  br label %return

return:                                           ; preds = %if.end.8, %if.then.7
  %9 = load i8*, i8** %retval
  ret i8* %9
}

declare %struct._object* @PyErr_Occurred() #1

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromLongLong(i64 %ival) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ival.addr = alloca i64, align 8
  %v = alloca %struct._longobject*, align 8
  %abs_ival = alloca i64, align 8
  %t = alloca i64, align 8
  %ndigits = alloca i32, align 4
  %negative = alloca i32, align 4
  %p = alloca i32*, align 8
  store i64 %ival, i64* %ival.addr, align 8
  store i32 0, i32* %ndigits, align 4
  store i32 0, i32* %negative, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load i64, i64* %ival.addr, align 8
  %cmp = icmp sle i64 -5, %0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %do.body
  %1 = load i64, i64* %ival.addr, align 8
  %cmp1 = icmp slt i64 %1, 257
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, i64* %ival.addr, align 8
  %conv = trunc i64 %2 to i32
  %call = call %struct._object* @get_small_int(i32 %conv)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %3 = load i64, i64* %ival.addr, align 8
  %cmp2 = icmp slt i64 %3, 0
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.end
  %4 = load i64, i64* %ival.addr, align 8
  %sub = sub i64 -1, %4
  %add = add i64 %sub, 1
  store i64 %add, i64* %abs_ival, align 8
  store i32 1, i32* %negative, align 4
  br label %if.end.5

if.else:                                          ; preds = %do.end
  %5 = load i64, i64* %ival.addr, align 8
  store i64 %5, i64* %abs_ival, align 8
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.4
  %6 = load i64, i64* %abs_ival, align 8
  store i64 %6, i64* %t, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.5
  %7 = load i64, i64* %t, align 8
  %tobool = icmp ne i64 %7, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %ndigits, align 4
  %inc = add i32 %8, 1
  store i32 %inc, i32* %ndigits, align 4
  %9 = load i64, i64* %t, align 8
  %shr = lshr i64 %9, 30
  store i64 %shr, i64* %t, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %ndigits, align 4
  %conv6 = sext i32 %10 to i64
  %call7 = call %struct._longobject* @_PyLong_New(i64 %conv6)
  store %struct._longobject* %call7, %struct._longobject** %v, align 8
  %11 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp8 = icmp ne %struct._longobject* %11, null
  br i1 %cmp8, label %if.then.10, label %if.end.20

if.then.10:                                       ; preds = %while.end
  %12 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %p, align 8
  %13 = load i32, i32* %negative, align 4
  %tobool11 = icmp ne i32 %13, 0
  br i1 %tobool11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.10
  %14 = load i32, i32* %ndigits, align 4
  %sub12 = sub i32 0, %14
  br label %cond.end

cond.false:                                       ; preds = %if.then.10
  %15 = load i32, i32* %ndigits, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub12, %cond.true ], [ %15, %cond.false ]
  %conv13 = sext i32 %cond to i64
  %16 = load %struct._longobject*, %struct._longobject** %v, align 8
  %17 = bitcast %struct._longobject* %16 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %17, i32 0, i32 1
  store i64 %conv13, i64* %ob_size, align 8
  %18 = load i64, i64* %abs_ival, align 8
  store i64 %18, i64* %t, align 8
  br label %while.cond.14

while.cond.14:                                    ; preds = %while.body.16, %cond.end
  %19 = load i64, i64* %t, align 8
  %tobool15 = icmp ne i64 %19, 0
  br i1 %tobool15, label %while.body.16, label %while.end.19

while.body.16:                                    ; preds = %while.cond.14
  %20 = load i64, i64* %t, align 8
  %and = and i64 %20, 1073741823
  %conv17 = trunc i64 %and to i32
  %21 = load i32*, i32** %p, align 8
  %incdec.ptr = getelementptr i32, i32* %21, i32 1
  store i32* %incdec.ptr, i32** %p, align 8
  store i32 %conv17, i32* %21, align 4
  %22 = load i64, i64* %t, align 8
  %shr18 = lshr i64 %22, 30
  store i64 %shr18, i64* %t, align 8
  br label %while.cond.14

while.end.19:                                     ; preds = %while.cond.14
  br label %if.end.20

if.end.20:                                        ; preds = %while.end.19, %while.end
  %23 = load %struct._longobject*, %struct._longobject** %v, align 8
  %24 = bitcast %struct._longobject* %23 to %struct._object*
  store %struct._object* %24, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.20, %if.then
  %25 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %25
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromUnsignedLongLong(i64 %ival) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ival.addr = alloca i64, align 8
  %v = alloca %struct._longobject*, align 8
  %t = alloca i64, align 8
  %ndigits = alloca i32, align 4
  %p = alloca i32*, align 8
  store i64 %ival, i64* %ival.addr, align 8
  store i32 0, i32* %ndigits, align 4
  %0 = load i64, i64* %ival.addr, align 8
  %cmp = icmp ult i64 %0, 1073741824
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %ival.addr, align 8
  %call = call %struct._object* @PyLong_FromLong(i64 %1)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %ival.addr, align 8
  store i64 %2, i64* %t, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load i64, i64* %t, align 8
  %tobool = icmp ne i64 %3, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %ndigits, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* %ndigits, align 4
  %5 = load i64, i64* %t, align 8
  %shr = lshr i64 %5, 30
  store i64 %shr, i64* %t, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %ndigits, align 4
  %conv = sext i32 %6 to i64
  %call1 = call %struct._longobject* @_PyLong_New(i64 %conv)
  store %struct._longobject* %call1, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp2 = icmp ne %struct._longobject* %7, null
  br i1 %cmp2, label %if.then.4, label %if.end.12

if.then.4:                                        ; preds = %while.end
  %8 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %8, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %p, align 8
  %9 = load i32, i32* %ndigits, align 4
  %conv5 = sext i32 %9 to i64
  %10 = load %struct._longobject*, %struct._longobject** %v, align 8
  %11 = bitcast %struct._longobject* %10 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  store i64 %conv5, i64* %ob_size, align 8
  br label %while.cond.6

while.cond.6:                                     ; preds = %while.body.8, %if.then.4
  %12 = load i64, i64* %ival.addr, align 8
  %tobool7 = icmp ne i64 %12, 0
  br i1 %tobool7, label %while.body.8, label %while.end.11

while.body.8:                                     ; preds = %while.cond.6
  %13 = load i64, i64* %ival.addr, align 8
  %and = and i64 %13, 1073741823
  %conv9 = trunc i64 %and to i32
  %14 = load i32*, i32** %p, align 8
  %incdec.ptr = getelementptr i32, i32* %14, i32 1
  store i32* %incdec.ptr, i32** %p, align 8
  store i32 %conv9, i32* %14, align 4
  %15 = load i64, i64* %ival.addr, align 8
  %shr10 = lshr i64 %15, 30
  store i64 %shr10, i64* %ival.addr, align 8
  br label %while.cond.6

while.end.11:                                     ; preds = %while.cond.6
  br label %if.end.12

if.end.12:                                        ; preds = %while.end.11, %while.end
  %16 = load %struct._longobject*, %struct._longobject** %v, align 8
  %17 = bitcast %struct._longobject* %16 to %struct._object*
  store %struct._object* %17, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.12, %if.then
  %18 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %18
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromSsize_t(i64 %ival) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ival.addr = alloca i64, align 8
  %v = alloca %struct._longobject*, align 8
  %abs_ival = alloca i64, align 8
  %t = alloca i64, align 8
  %ndigits = alloca i32, align 4
  %negative = alloca i32, align 4
  %p = alloca i32*, align 8
  store i64 %ival, i64* %ival.addr, align 8
  store i32 0, i32* %ndigits, align 4
  store i32 0, i32* %negative, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load i64, i64* %ival.addr, align 8
  %cmp = icmp sle i64 -5, %0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %do.body
  %1 = load i64, i64* %ival.addr, align 8
  %cmp1 = icmp slt i64 %1, 257
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load i64, i64* %ival.addr, align 8
  %conv = trunc i64 %2 to i32
  %call = call %struct._object* @get_small_int(i32 %conv)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %3 = load i64, i64* %ival.addr, align 8
  %cmp2 = icmp slt i64 %3, 0
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %do.end
  %4 = load i64, i64* %ival.addr, align 8
  %sub = sub i64 -1, %4
  %add = add i64 %sub, 1
  store i64 %add, i64* %abs_ival, align 8
  store i32 1, i32* %negative, align 4
  br label %if.end.5

if.else:                                          ; preds = %do.end
  %5 = load i64, i64* %ival.addr, align 8
  store i64 %5, i64* %abs_ival, align 8
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.then.4
  %6 = load i64, i64* %abs_ival, align 8
  store i64 %6, i64* %t, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.5
  %7 = load i64, i64* %t, align 8
  %tobool = icmp ne i64 %7, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %ndigits, align 4
  %inc = add i32 %8, 1
  store i32 %inc, i32* %ndigits, align 4
  %9 = load i64, i64* %t, align 8
  %shr = lshr i64 %9, 30
  store i64 %shr, i64* %t, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %ndigits, align 4
  %conv6 = sext i32 %10 to i64
  %call7 = call %struct._longobject* @_PyLong_New(i64 %conv6)
  store %struct._longobject* %call7, %struct._longobject** %v, align 8
  %11 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp8 = icmp ne %struct._longobject* %11, null
  br i1 %cmp8, label %if.then.10, label %if.end.20

if.then.10:                                       ; preds = %while.end
  %12 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %p, align 8
  %13 = load i32, i32* %negative, align 4
  %tobool11 = icmp ne i32 %13, 0
  br i1 %tobool11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.10
  %14 = load i32, i32* %ndigits, align 4
  %sub12 = sub i32 0, %14
  br label %cond.end

cond.false:                                       ; preds = %if.then.10
  %15 = load i32, i32* %ndigits, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub12, %cond.true ], [ %15, %cond.false ]
  %conv13 = sext i32 %cond to i64
  %16 = load %struct._longobject*, %struct._longobject** %v, align 8
  %17 = bitcast %struct._longobject* %16 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %17, i32 0, i32 1
  store i64 %conv13, i64* %ob_size, align 8
  %18 = load i64, i64* %abs_ival, align 8
  store i64 %18, i64* %t, align 8
  br label %while.cond.14

while.cond.14:                                    ; preds = %while.body.16, %cond.end
  %19 = load i64, i64* %t, align 8
  %tobool15 = icmp ne i64 %19, 0
  br i1 %tobool15, label %while.body.16, label %while.end.19

while.body.16:                                    ; preds = %while.cond.14
  %20 = load i64, i64* %t, align 8
  %and = and i64 %20, 1073741823
  %conv17 = trunc i64 %and to i32
  %21 = load i32*, i32** %p, align 8
  %incdec.ptr = getelementptr i32, i32* %21, i32 1
  store i32* %incdec.ptr, i32** %p, align 8
  store i32 %conv17, i32* %21, align 4
  %22 = load i64, i64* %t, align 8
  %shr18 = lshr i64 %22, 30
  store i64 %shr18, i64* %t, align 8
  br label %while.cond.14

while.end.19:                                     ; preds = %while.cond.14
  br label %if.end.20

if.end.20:                                        ; preds = %while.end.19, %while.end
  %23 = load %struct._longobject*, %struct._longobject** %v, align 8
  %24 = bitcast %struct._longobject* %23 to %struct._object*
  store %struct._object* %24, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.20, %if.then
  %25 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %25
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromSize_t(i64 %ival) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %ival.addr = alloca i64, align 8
  %v = alloca %struct._longobject*, align 8
  %t = alloca i64, align 8
  %ndigits = alloca i32, align 4
  %p = alloca i32*, align 8
  store i64 %ival, i64* %ival.addr, align 8
  store i32 0, i32* %ndigits, align 4
  %0 = load i64, i64* %ival.addr, align 8
  %cmp = icmp ult i64 %0, 1073741824
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %ival.addr, align 8
  %call = call %struct._object* @PyLong_FromLong(i64 %1)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %ival.addr, align 8
  store i64 %2, i64* %t, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load i64, i64* %t, align 8
  %tobool = icmp ne i64 %3, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %ndigits, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* %ndigits, align 4
  %5 = load i64, i64* %t, align 8
  %shr = lshr i64 %5, 30
  store i64 %shr, i64* %t, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %ndigits, align 4
  %conv = sext i32 %6 to i64
  %call1 = call %struct._longobject* @_PyLong_New(i64 %conv)
  store %struct._longobject* %call1, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp2 = icmp ne %struct._longobject* %7, null
  br i1 %cmp2, label %if.then.4, label %if.end.12

if.then.4:                                        ; preds = %while.end
  %8 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %8, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %p, align 8
  %9 = load i32, i32* %ndigits, align 4
  %conv5 = sext i32 %9 to i64
  %10 = load %struct._longobject*, %struct._longobject** %v, align 8
  %11 = bitcast %struct._longobject* %10 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  store i64 %conv5, i64* %ob_size, align 8
  br label %while.cond.6

while.cond.6:                                     ; preds = %while.body.8, %if.then.4
  %12 = load i64, i64* %ival.addr, align 8
  %tobool7 = icmp ne i64 %12, 0
  br i1 %tobool7, label %while.body.8, label %while.end.11

while.body.8:                                     ; preds = %while.cond.6
  %13 = load i64, i64* %ival.addr, align 8
  %and = and i64 %13, 1073741823
  %conv9 = trunc i64 %and to i32
  %14 = load i32*, i32** %p, align 8
  %incdec.ptr = getelementptr i32, i32* %14, i32 1
  store i32* %incdec.ptr, i32** %p, align 8
  store i32 %conv9, i32* %14, align 4
  %15 = load i64, i64* %ival.addr, align 8
  %shr10 = lshr i64 %15, 30
  store i64 %shr10, i64* %ival.addr, align 8
  br label %while.cond.6

while.end.11:                                     ; preds = %while.cond.6
  br label %if.end.12

if.end.12:                                        ; preds = %while.end.11, %while.end
  %16 = load %struct._longobject*, %struct._longobject** %v, align 8
  %17 = bitcast %struct._longobject* %16 to %struct._object*
  store %struct._object* %17, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.12, %if.then
  %18 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %18
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsLongLong(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %bytes = alloca i64, align 8
  %res = alloca i32, align 4
  %do_decref = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  store i32 0, i32* %do_decref, align 4
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 1203)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %vv.addr, align 8
  %5 = bitcast %struct._object* %4 to %struct._longobject*
  store %struct._longobject* %5, %struct._longobject** %v, align 8
  br label %if.end.6

if.else:                                          ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %vv.addr, align 8
  %call = call %struct._longobject* @_PyLong_FromNbInt(%struct._object* %6)
  store %struct._longobject* %call, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp3 = icmp eq %struct._longobject* %7, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.else
  store i64 -1, i64* %retval
  br label %return

if.end.5:                                         ; preds = %if.else
  store i32 1, i32* %do_decref, align 4
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.then.2
  store i32 0, i32* %res, align 4
  %8 = load %struct._longobject*, %struct._longobject** %v, align 8
  %9 = bitcast %struct._longobject* %8 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %9, i32 0, i32 1
  %10 = load i64, i64* %ob_size, align 8
  switch i64 %10, label %sw.default [
    i64 -1, label %sw.bb
    i64 0, label %sw.bb.7
    i64 1, label %sw.bb.8
  ]

sw.bb:                                            ; preds = %if.end.6
  %11 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %11, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %12 = load i32, i32* %arrayidx, align 4
  %sub = sub i32 0, %12
  %conv = sext i32 %sub to i64
  store i64 %conv, i64* %bytes, align 8
  br label %sw.epilog

sw.bb.7:                                          ; preds = %if.end.6
  store i64 0, i64* %bytes, align 8
  br label %sw.epilog

sw.bb.8:                                          ; preds = %if.end.6
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit9 = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x i32], [1 x i32]* %ob_digit9, i32 0, i64 0
  %14 = load i32, i32* %arrayidx10, align 4
  %conv11 = zext i32 %14 to i64
  store i64 %conv11, i64* %bytes, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.6
  %15 = load %struct._longobject*, %struct._longobject** %v, align 8
  %16 = bitcast i64* %bytes to i8*
  %call12 = call i32 @_PyLong_AsByteArray(%struct._longobject* %15, i8* %16, i64 8, i32 1, i32 1)
  store i32 %call12, i32* %res, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.8, %sw.bb.7, %sw.bb
  %17 = load i32, i32* %do_decref, align 4
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then.13, label %if.end.20

if.then.13:                                       ; preds = %sw.epilog
  br label %do.body

do.body:                                          ; preds = %if.then.13
  %18 = load %struct._longobject*, %struct._longobject** %v, align 8
  %19 = bitcast %struct._longobject* %18 to %struct._object*
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %21, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp14 = icmp ne i64 %dec, 0
  br i1 %cmp14, label %if.then.16, label %if.else.17

if.then.16:                                       ; preds = %do.body
  br label %if.end.19

if.else.17:                                       ; preds = %do.body
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type18 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type18, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %24(%struct._object* %25)
  br label %if.end.19

if.end.19:                                        ; preds = %if.else.17, %if.then.16
  br label %do.end

do.end:                                           ; preds = %if.end.19
  br label %if.end.20

if.end.20:                                        ; preds = %do.end, %sw.epilog
  %26 = load i32, i32* %res, align 4
  %cmp21 = icmp slt i32 %26, 0
  br i1 %cmp21, label %if.then.23, label %if.else.24

if.then.23:                                       ; preds = %if.end.20
  store i64 -1, i64* %retval
  br label %return

if.else.24:                                       ; preds = %if.end.20
  %27 = load i64, i64* %bytes, align 8
  store i64 %27, i64* %retval
  br label %return

return:                                           ; preds = %if.else.24, %if.then.23, %if.then.4, %if.then
  %28 = load i64, i64* %retval
  ret i64 %28
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsUnsignedLongLong(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %bytes = alloca i64, align 8
  %res = alloca i32, align 4
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 1254)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0))
  store i64 -1, i64* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %vv.addr, align 8
  %6 = bitcast %struct._object* %5 to %struct._longobject*
  store %struct._longobject* %6, %struct._longobject** %v, align 8
  %7 = load %struct._longobject*, %struct._longobject** %v, align 8
  %8 = bitcast %struct._longobject* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  switch i64 %9, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb.4
  ]

sw.bb:                                            ; preds = %if.end.3
  store i64 0, i64* %retval
  br label %return

sw.bb.4:                                          ; preds = %if.end.3
  %10 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %10, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %11 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %11 to i64
  store i64 %conv, i64* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end.3
  %12 = load %struct._object*, %struct._object** %vv.addr, align 8
  %13 = bitcast %struct._object* %12 to %struct._longobject*
  %14 = bitcast i64* %bytes to i8*
  %call = call i32 @_PyLong_AsByteArray(%struct._longobject* %13, i8* %14, i64 8, i32 1, i32 0)
  store i32 %call, i32* %res, align 4
  %15 = load i32, i32* %res, align 4
  %cmp5 = icmp slt i32 %15, 0
  br i1 %cmp5, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %sw.epilog
  %16 = load i32, i32* %res, align 4
  %conv8 = sext i32 %16 to i64
  store i64 %conv8, i64* %retval
  br label %return

if.else:                                          ; preds = %sw.epilog
  %17 = load i64, i64* %bytes, align 8
  store i64 %17, i64* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then.7, %sw.bb.4, %sw.bb, %if.then.2, %if.then
  %18 = load i64, i64* %retval
  ret i64 %18
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsUnsignedLongLongMask(%struct._object* %op) #0 {
entry:
  %retval = alloca i64, align 8
  %op.addr = alloca %struct._object*, align 8
  %lo = alloca %struct._longobject*, align 8
  %val = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %op, %struct._object** %op.addr, align 8
  %0 = load %struct._object*, %struct._object** %op.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 1318)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %op.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** %op.addr, align 8
  %call = call i64 @_PyLong_AsUnsignedLongLongMask(%struct._object* %4)
  store i64 %call, i64* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %op.addr, align 8
  %call4 = call %struct._longobject* @_PyLong_FromNbInt(%struct._object* %5)
  store %struct._longobject* %call4, %struct._longobject** %lo, align 8
  %6 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %cmp5 = icmp eq %struct._longobject* %6, null
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.3
  store i64 -1, i64* %retval
  br label %return

if.end.7:                                         ; preds = %if.end.3
  %7 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %8 = bitcast %struct._longobject* %7 to %struct._object*
  %call8 = call i64 @_PyLong_AsUnsignedLongLongMask(%struct._object* %8)
  store i64 %call8, i64* %val, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.7
  %9 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %10 = bitcast %struct._longobject* %9 to %struct._object*
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp9 = icmp ne i64 %dec, 0
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %do.body
  br label %if.end.12

if.else:                                          ; preds = %do.body
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type11 = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type11, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.10
  br label %do.end

do.end:                                           ; preds = %if.end.12
  %17 = load i64, i64* %val, align 8
  store i64 %17, i64* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.6, %if.then.2, %if.then
  %18 = load i64, i64* %retval
  ret i64 %18
}

; Function Attrs: nounwind uwtable
define internal i64 @_PyLong_AsUnsignedLongLongMask(%struct._object* %vv) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %v = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %i = alloca i64, align 8
  %sign = alloca i32, align 4
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  %0 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 1290)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct._object*, %struct._object** %vv.addr, align 8
  %5 = bitcast %struct._object* %4 to %struct._longobject*
  store %struct._longobject* %5, %struct._longobject** %v, align 8
  %6 = load %struct._longobject*, %struct._longobject** %v, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size, align 8
  switch i64 %8, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb.2
  ]

sw.bb:                                            ; preds = %if.end
  store i64 0, i64* %retval
  br label %return

sw.bb.2:                                          ; preds = %if.end
  %9 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %9, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %10 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %10 to i64
  store i64 %conv, i64* %retval
  br label %return

sw.epilog:                                        ; preds = %if.end
  %11 = load %struct._longobject*, %struct._longobject** %v, align 8
  %12 = bitcast %struct._longobject* %11 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1
  %13 = load i64, i64* %ob_size3, align 8
  store i64 %13, i64* %i, align 8
  store i32 1, i32* %sign, align 4
  store i64 0, i64* %x, align 8
  %14 = load i64, i64* %i, align 8
  %cmp4 = icmp slt i64 %14, 0
  br i1 %cmp4, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %sw.epilog
  store i32 -1, i32* %sign, align 4
  %15 = load i64, i64* %i, align 8
  %sub = sub i64 0, %15
  store i64 %sub, i64* %i, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %sw.epilog
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.7
  %16 = load i64, i64* %i, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %i, align 8
  %cmp8 = icmp sge i64 %dec, 0
  br i1 %cmp8, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i64, i64* %x, align 8
  %shl = shl i64 %17, 30
  %18 = load i64, i64* %i, align 8
  %19 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit10 = getelementptr inbounds %struct._longobject, %struct._longobject* %19, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x i32], [1 x i32]* %ob_digit10, i32 0, i64 %18
  %20 = load i32, i32* %arrayidx11, align 4
  %conv12 = zext i32 %20 to i64
  %or = or i64 %shl, %conv12
  store i64 %or, i64* %x, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %21 = load i64, i64* %x, align 8
  %22 = load i32, i32* %sign, align 4
  %conv13 = sext i32 %22 to i64
  %mul = mul i64 %21, %conv13
  store i64 %mul, i64* %retval
  br label %return

return:                                           ; preds = %while.end, %sw.bb.2, %sw.bb, %if.then
  %23 = load i64, i64* %retval
  ret i64 %23
}

; Function Attrs: nounwind uwtable
define i64 @PyLong_AsLongLongAndOverflow(%struct._object* %vv, i32* %overflow) #0 {
entry:
  %retval = alloca i64, align 8
  %vv.addr = alloca %struct._object*, align 8
  %overflow.addr = alloca i32*, align 8
  %v = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %prev = alloca i64, align 8
  %res = alloca i64, align 8
  %i = alloca i64, align 8
  %sign = alloca i32, align 4
  %do_decref = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._object* %vv, %struct._object** %vv.addr, align 8
  store i32* %overflow, i32** %overflow.addr, align 8
  store i32 0, i32* %do_decref, align 4
  %0 = load i32*, i32** %overflow.addr, align 8
  store i32 0, i32* %0, align 4
  %1 = load %struct._object*, %struct._object** %vv.addr, align 8
  %cmp = icmp eq %struct._object* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 1358)
  store i64 -1, i64* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %vv.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 1
  %3 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %3, i32 0, i32 19
  %4 = load i64, i64* %tp_flags, align 8
  %and = and i64 %4, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %vv.addr, align 8
  %6 = bitcast %struct._object* %5 to %struct._longobject*
  store %struct._longobject* %6, %struct._longobject** %v, align 8
  br label %if.end.6

if.else:                                          ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %vv.addr, align 8
  %call = call %struct._longobject* @_PyLong_FromNbInt(%struct._object* %7)
  store %struct._longobject* %call, %struct._longobject** %v, align 8
  %8 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp3 = icmp eq %struct._longobject* %8, null
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.else
  store i64 -1, i64* %retval
  br label %return

if.end.5:                                         ; preds = %if.else
  store i32 1, i32* %do_decref, align 4
  br label %if.end.6

if.end.6:                                         ; preds = %if.end.5, %if.then.2
  store i64 -1, i64* %res, align 8
  %9 = load %struct._longobject*, %struct._longobject** %v, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size, align 8
  store i64 %11, i64* %i, align 8
  %12 = load i64, i64* %i, align 8
  switch i64 %12, label %sw.default [
    i64 -1, label %sw.bb
    i64 0, label %sw.bb.7
    i64 1, label %sw.bb.8
  ]

sw.bb:                                            ; preds = %if.end.6
  %13 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %14 = load i32, i32* %arrayidx, align 4
  %sub = sub i32 0, %14
  %conv = sext i32 %sub to i64
  store i64 %conv, i64* %res, align 8
  br label %sw.epilog

sw.bb.7:                                          ; preds = %if.end.6
  store i64 0, i64* %res, align 8
  br label %sw.epilog

sw.bb.8:                                          ; preds = %if.end.6
  %15 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit9 = getelementptr inbounds %struct._longobject, %struct._longobject* %15, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x i32], [1 x i32]* %ob_digit9, i32 0, i64 0
  %16 = load i32, i32* %arrayidx10, align 4
  %conv11 = zext i32 %16 to i64
  store i64 %conv11, i64* %res, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.6
  store i32 1, i32* %sign, align 4
  store i64 0, i64* %x, align 8
  %17 = load i64, i64* %i, align 8
  %cmp12 = icmp slt i64 %17, 0
  br i1 %cmp12, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %sw.default
  store i32 -1, i32* %sign, align 4
  %18 = load i64, i64* %i, align 8
  %sub15 = sub i64 0, %18
  store i64 %sub15, i64* %i, align 8
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %sw.default
  br label %while.cond

while.cond:                                       ; preds = %if.end.25, %if.end.16
  %19 = load i64, i64* %i, align 8
  %dec = add i64 %19, -1
  store i64 %dec, i64* %i, align 8
  %cmp17 = icmp sge i64 %dec, 0
  br i1 %cmp17, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %20 = load i64, i64* %x, align 8
  store i64 %20, i64* %prev, align 8
  %21 = load i64, i64* %x, align 8
  %shl = shl i64 %21, 30
  %22 = load i64, i64* %i, align 8
  %23 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit19 = getelementptr inbounds %struct._longobject, %struct._longobject* %23, i32 0, i32 1
  %arrayidx20 = getelementptr [1 x i32], [1 x i32]* %ob_digit19, i32 0, i64 %22
  %24 = load i32, i32* %arrayidx20, align 4
  %conv21 = zext i32 %24 to i64
  %add = add i64 %shl, %conv21
  store i64 %add, i64* %x, align 8
  %25 = load i64, i64* %x, align 8
  %shr = lshr i64 %25, 30
  %26 = load i64, i64* %prev, align 8
  %cmp22 = icmp ne i64 %shr, %26
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %while.body
  %27 = load i32, i32* %sign, align 4
  %28 = load i32*, i32** %overflow.addr, align 8
  store i32 %27, i32* %28, align 4
  br label %exit

if.end.25:                                        ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %29 = load i64, i64* %x, align 8
  %cmp26 = icmp ule i64 %29, 9223372036854775807
  br i1 %cmp26, label %if.then.28, label %if.else.30

if.then.28:                                       ; preds = %while.end
  %30 = load i64, i64* %x, align 8
  %31 = load i32, i32* %sign, align 4
  %conv29 = sext i32 %31 to i64
  %mul = mul i64 %30, %conv29
  store i64 %mul, i64* %res, align 8
  br label %if.end.38

if.else.30:                                       ; preds = %while.end
  %32 = load i32, i32* %sign, align 4
  %cmp31 = icmp slt i32 %32, 0
  br i1 %cmp31, label %land.lhs.true, label %if.else.36

land.lhs.true:                                    ; preds = %if.else.30
  %33 = load i64, i64* %x, align 8
  %cmp33 = icmp eq i64 %33, -9223372036854775808
  br i1 %cmp33, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %land.lhs.true
  store i64 -9223372036854775808, i64* %res, align 8
  br label %if.end.37

if.else.36:                                       ; preds = %land.lhs.true, %if.else.30
  %34 = load i32, i32* %sign, align 4
  %35 = load i32*, i32** %overflow.addr, align 8
  store i32 %34, i32* %35, align 4
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.36, %if.then.35
  br label %if.end.38

if.end.38:                                        ; preds = %if.end.37, %if.then.28
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.38, %sw.bb.8, %sw.bb.7, %sw.bb
  br label %exit

exit:                                             ; preds = %sw.epilog, %if.then.24
  %36 = load i32, i32* %do_decref, align 4
  %tobool = icmp ne i32 %36, 0
  br i1 %tobool, label %if.then.39, label %if.end.47

if.then.39:                                       ; preds = %exit
  br label %do.body

do.body:                                          ; preds = %if.then.39
  %37 = load %struct._longobject*, %struct._longobject** %v, align 8
  %38 = bitcast %struct._longobject* %37 to %struct._object*
  store %struct._object* %38, %struct._object** %_py_decref_tmp, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0
  %40 = load i64, i64* %ob_refcnt, align 8
  %dec40 = add i64 %40, -1
  store i64 %dec40, i64* %ob_refcnt, align 8
  %cmp41 = icmp ne i64 %dec40, 0
  br i1 %cmp41, label %if.then.43, label %if.else.44

if.then.43:                                       ; preds = %do.body
  br label %if.end.46

if.else.44:                                       ; preds = %do.body
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %43(%struct._object* %44)
  br label %if.end.46

if.end.46:                                        ; preds = %if.else.44, %if.then.43
  br label %do.end

do.end:                                           ; preds = %if.end.46
  br label %if.end.47

if.end.47:                                        ; preds = %do.end, %exit
  %45 = load i64, i64* %res, align 8
  store i64 %45, i64* %retval
  br label %return

return:                                           ; preds = %if.end.47, %if.then.4, %if.then
  %46 = load i64, i64* %retval
  ret i64 %46
}

; Function Attrs: nounwind uwtable
define %struct._object* @_PyLong_Format(%struct._object* %obj, i32 %base) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %obj.addr = alloca %struct._object*, align 8
  %base.addr = alloca i32, align 4
  %str = alloca %struct._object*, align 8
  %err = alloca i32, align 4
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  %0 = load i32, i32* %base.addr, align 4
  %cmp = icmp eq i32 %0, 10
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %call = call i32 @long_to_decimal_string_internal(%struct._object* %1, %struct._object** %str, %struct._PyUnicodeWriter* null)
  store i32 %call, i32* %err, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %obj.addr, align 8
  %3 = load i32, i32* %base.addr, align 4
  %call1 = call i32 @long_format_binary(%struct._object* %2, i32 %3, i32 1, %struct._object** %str, %struct._PyUnicodeWriter* null)
  store i32 %call1, i32* %err, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %err, align 4
  %cmp2 = icmp eq i32 %4, -1
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %str, align 8
  store %struct._object* %5, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.4, %if.then.3
  %6 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %6
}

; Function Attrs: nounwind uwtable
define internal i32 @long_to_decimal_string_internal(%struct._object* %aa, %struct._object** %p_output, %struct._PyUnicodeWriter* %writer) #0 {
entry:
  %retval = alloca i32, align 4
  %aa.addr = alloca %struct._object*, align 8
  %p_output.addr = alloca %struct._object**, align 8
  %writer.addr = alloca %struct._PyUnicodeWriter*, align 8
  %scratch = alloca %struct._longobject*, align 8
  %a = alloca %struct._longobject*, align 8
  %str = alloca %struct._object*, align 8
  %size = alloca i64, align 8
  %strlen = alloca i64, align 8
  %size_a = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %pout = alloca i32*, align 8
  %pin = alloca i32*, align 8
  %rem = alloca i32, align 4
  %tenpow = alloca i32, align 4
  %negative = alloca i32, align 4
  %kind = alloca i32, align 4
  %hi = alloca i32, align 4
  %z = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp93 = alloca %struct._object*, align 8
  %_py_decref_tmp112 = alloca %struct._object*, align 8
  %p = alloca i8*, align 8
  %p226 = alloca i16*, align 8
  %p328 = alloca i32*, align 8
  %_py_decref_tmp430 = alloca %struct._object*, align 8
  store %struct._object* %aa, %struct._object** %aa.addr, align 8
  store %struct._object** %p_output, %struct._object*** %p_output.addr, align 8
  store %struct._PyUnicodeWriter* %writer, %struct._PyUnicodeWriter** %writer.addr, align 8
  %0 = load %struct._object*, %struct._object** %aa.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct._longobject*
  store %struct._longobject* %1, %struct._longobject** %a, align 8
  %2 = load %struct._longobject*, %struct._longobject** %a, align 8
  %cmp = icmp eq %struct._longobject* %2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a, align 8
  %4 = bitcast %struct._longobject* %3 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19
  %6 = load i64, i64* %tp_flags, align 8
  %and = and i64 %6, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 1597)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct._longobject*, %struct._longobject** %a, align 8
  %8 = bitcast %struct._longobject* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  %cmp2 = icmp slt i64 %9, 0
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %10 = load %struct._longobject*, %struct._longobject** %a, align 8
  %11 = bitcast %struct._longobject* %10 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  %12 = load i64, i64* %ob_size3, align 8
  %sub = sub i64 0, %12
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %13 = load %struct._longobject*, %struct._longobject** %a, align 8
  %14 = bitcast %struct._longobject* %13 to %struct.PyVarObject*
  %ob_size4 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1
  %15 = load i64, i64* %ob_size4, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %15, %cond.false ]
  store i64 %cond, i64* %size_a, align 8
  %16 = load %struct._longobject*, %struct._longobject** %a, align 8
  %17 = bitcast %struct._longobject* %16 to %struct.PyVarObject*
  %ob_size5 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %17, i32 0, i32 1
  %18 = load i64, i64* %ob_size5, align 8
  %cmp6 = icmp slt i64 %18, 0
  %conv = zext i1 %cmp6 to i32
  store i32 %conv, i32* %negative, align 4
  %19 = load i64, i64* %size_a, align 8
  %cmp7 = icmp sgt i64 %19, 307445734561825860
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %cond.end
  %20 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.10:                                        ; preds = %cond.end
  %21 = load i64, i64* %size_a, align 8
  %mul = mul i64 %21, 30
  %div = sdiv i64 %mul, 27
  %add = add i64 1, %div
  store i64 %add, i64* %size, align 8
  %22 = load i64, i64* %size, align 8
  %call = call %struct._longobject* @_PyLong_New(i64 %22)
  store %struct._longobject* %call, %struct._longobject** %scratch, align 8
  %23 = load %struct._longobject*, %struct._longobject** %scratch, align 8
  %cmp11 = icmp eq %struct._longobject* %23, null
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.10
  store i32 -1, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.end.10
  %24 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %24, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %pin, align 8
  %25 = load %struct._longobject*, %struct._longobject** %scratch, align 8
  %ob_digit15 = getelementptr inbounds %struct._longobject, %struct._longobject* %25, i32 0, i32 1
  %arraydecay16 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit15, i32 0, i32 0
  store i32* %arraydecay16, i32** %pout, align 8
  store i64 0, i64* %size, align 8
  %26 = load i64, i64* %size_a, align 8
  store i64 %26, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %do.end.48, %if.end.14
  %27 = load i64, i64* %i, align 8
  %dec = add i64 %27, -1
  store i64 %dec, i64* %i, align 8
  %cmp17 = icmp sge i64 %dec, 0
  br i1 %cmp17, label %for.body, label %for.end.49

for.body:                                         ; preds = %for.cond
  %28 = load i64, i64* %i, align 8
  %29 = load i32*, i32** %pin, align 8
  %arrayidx = getelementptr i32, i32* %29, i64 %28
  %30 = load i32, i32* %arrayidx, align 4
  store i32 %30, i32* %hi, align 4
  store i64 0, i64* %j, align 8
  br label %for.cond.19

for.cond.19:                                      ; preds = %for.inc, %for.body
  %31 = load i64, i64* %j, align 8
  %32 = load i64, i64* %size, align 8
  %cmp20 = icmp slt i64 %31, %32
  br i1 %cmp20, label %for.body.22, label %for.end

for.body.22:                                      ; preds = %for.cond.19
  %33 = load i64, i64* %j, align 8
  %34 = load i32*, i32** %pout, align 8
  %arrayidx23 = getelementptr i32, i32* %34, i64 %33
  %35 = load i32, i32* %arrayidx23, align 4
  %conv24 = zext i32 %35 to i64
  %shl = shl i64 %conv24, 30
  %36 = load i32, i32* %hi, align 4
  %conv25 = zext i32 %36 to i64
  %or = or i64 %shl, %conv25
  store i64 %or, i64* %z, align 8
  %37 = load i64, i64* %z, align 8
  %div26 = udiv i64 %37, 1000000000
  %conv27 = trunc i64 %div26 to i32
  store i32 %conv27, i32* %hi, align 4
  %38 = load i64, i64* %z, align 8
  %39 = load i32, i32* %hi, align 4
  %conv28 = zext i32 %39 to i64
  %mul29 = mul i64 %conv28, 1000000000
  %sub30 = sub i64 %38, %mul29
  %conv31 = trunc i64 %sub30 to i32
  %40 = load i64, i64* %j, align 8
  %41 = load i32*, i32** %pout, align 8
  %arrayidx32 = getelementptr i32, i32* %41, i64 %40
  store i32 %conv31, i32* %arrayidx32, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.22
  %42 = load i64, i64* %j, align 8
  %inc = add i64 %42, 1
  store i64 %inc, i64* %j, align 8
  br label %for.cond.19

for.end:                                          ; preds = %for.cond.19
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end
  %43 = load i32, i32* %hi, align 4
  %tobool = icmp ne i32 %43, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %44 = load i32, i32* %hi, align 4
  %rem33 = urem i32 %44, 1000000000
  %45 = load i64, i64* %size, align 8
  %inc34 = add i64 %45, 1
  store i64 %inc34, i64* %size, align 8
  %46 = load i32*, i32** %pout, align 8
  %arrayidx35 = getelementptr i32, i32* %46, i64 %45
  store i32 %rem33, i32* %arrayidx35, align 4
  %47 = load i32, i32* %hi, align 4
  %div36 = udiv i32 %47, 1000000000
  store i32 %div36, i32* %hi, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body

do.body:                                          ; preds = %while.end
  %call37 = call i32 @PyErr_CheckSignals()
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.then.39, label %if.end.47

if.then.39:                                       ; preds = %do.body
  br label %do.body.40

do.body.40:                                       ; preds = %if.then.39
  %48 = load %struct._longobject*, %struct._longobject** %scratch, align 8
  %49 = bitcast %struct._longobject* %48 to %struct._object*
  store %struct._object* %49, %struct._object** %_py_decref_tmp, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0
  %51 = load i64, i64* %ob_refcnt, align 8
  %dec41 = add i64 %51, -1
  store i64 %dec41, i64* %ob_refcnt, align 8
  %cmp42 = icmp ne i64 %dec41, 0
  br i1 %cmp42, label %if.then.44, label %if.else

if.then.44:                                       ; preds = %do.body.40
  br label %if.end.46

if.else:                                          ; preds = %do.body.40
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type45 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type45, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %54(%struct._object* %55)
  br label %if.end.46

if.end.46:                                        ; preds = %if.else, %if.then.44
  br label %do.end

do.end:                                           ; preds = %if.end.46
  store i32 -1, i32* %retval
  br label %return

if.end.47:                                        ; preds = %do.body
  br label %do.end.48

do.end.48:                                        ; preds = %if.end.47
  br label %for.cond

for.end.49:                                       ; preds = %for.cond
  %56 = load i64, i64* %size, align 8
  %cmp50 = icmp eq i64 %56, 0
  br i1 %cmp50, label %if.then.52, label %if.end.55

if.then.52:                                       ; preds = %for.end.49
  %57 = load i64, i64* %size, align 8
  %inc53 = add i64 %57, 1
  store i64 %inc53, i64* %size, align 8
  %58 = load i32*, i32** %pout, align 8
  %arrayidx54 = getelementptr i32, i32* %58, i64 %57
  store i32 0, i32* %arrayidx54, align 4
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.52, %for.end.49
  %59 = load i32, i32* %negative, align 4
  %add56 = add i32 %59, 1
  %conv57 = sext i32 %add56 to i64
  %60 = load i64, i64* %size, align 8
  %sub58 = sub i64 %60, 1
  %mul59 = mul i64 %sub58, 9
  %add60 = add i64 %conv57, %mul59
  store i64 %add60, i64* %strlen, align 8
  store i32 10, i32* %tenpow, align 4
  %61 = load i64, i64* %size, align 8
  %sub61 = sub i64 %61, 1
  %62 = load i32*, i32** %pout, align 8
  %arrayidx62 = getelementptr i32, i32* %62, i64 %sub61
  %63 = load i32, i32* %arrayidx62, align 4
  store i32 %63, i32* %rem, align 4
  br label %while.cond.63

while.cond.63:                                    ; preds = %while.body.66, %if.end.55
  %64 = load i32, i32* %rem, align 4
  %65 = load i32, i32* %tenpow, align 4
  %cmp64 = icmp uge i32 %64, %65
  br i1 %cmp64, label %while.body.66, label %while.end.69

while.body.66:                                    ; preds = %while.cond.63
  %66 = load i32, i32* %tenpow, align 4
  %mul67 = mul i32 %66, 10
  store i32 %mul67, i32* %tenpow, align 4
  %67 = load i64, i64* %strlen, align 8
  %inc68 = add i64 %67, 1
  store i64 %inc68, i64* %strlen, align 8
  br label %while.cond.63

while.end.69:                                     ; preds = %while.cond.63
  %68 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool70 = icmp ne %struct._PyUnicodeWriter* %68, null
  br i1 %tobool70, label %if.then.71, label %if.else.106

if.then.71:                                       ; preds = %while.end.69
  %69 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %maxchar = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %69, i32 0, i32 3
  %70 = load i32, i32* %maxchar, align 4
  %cmp72 = icmp ule i32 57, %70
  br i1 %cmp72, label %land.lhs.true, label %cond.false.79

land.lhs.true:                                    ; preds = %if.then.71
  %71 = load i64, i64* %strlen, align 8
  %72 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %size74 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %72, i32 0, i32 4
  %73 = load i64, i64* %size74, align 8
  %74 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %74, i32 0, i32 5
  %75 = load i64, i64* %pos, align 8
  %sub75 = sub i64 %73, %75
  %cmp76 = icmp sle i64 %71, %sub75
  br i1 %cmp76, label %cond.true.78, label %cond.false.79

cond.true.78:                                     ; preds = %land.lhs.true
  br label %cond.end.87

cond.false.79:                                    ; preds = %land.lhs.true, %if.then.71
  %76 = load i64, i64* %strlen, align 8
  %cmp80 = icmp eq i64 %76, 0
  br i1 %cmp80, label %cond.true.82, label %cond.false.83

cond.true.82:                                     ; preds = %cond.false.79
  br label %cond.end.85

cond.false.83:                                    ; preds = %cond.false.79
  %77 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %78 = load i64, i64* %strlen, align 8
  %call84 = call i32 @_PyUnicodeWriter_PrepareInternal(%struct._PyUnicodeWriter* %77, i64 %78, i32 57)
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.83, %cond.true.82
  %cond86 = phi i32 [ 0, %cond.true.82 ], [ %call84, %cond.false.83 ]
  br label %cond.end.87

cond.end.87:                                      ; preds = %cond.end.85, %cond.true.78
  %cond88 = phi i32 [ 0, %cond.true.78 ], [ %cond86, %cond.end.85 ]
  %cmp89 = icmp eq i32 %cond88, -1
  br i1 %cmp89, label %if.then.91, label %if.end.104

if.then.91:                                       ; preds = %cond.end.87
  br label %do.body.92

do.body.92:                                       ; preds = %if.then.91
  %79 = load %struct._longobject*, %struct._longobject** %scratch, align 8
  %80 = bitcast %struct._longobject* %79 to %struct._object*
  store %struct._object* %80, %struct._object** %_py_decref_tmp93, align 8
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  %ob_refcnt94 = getelementptr inbounds %struct._object, %struct._object* %81, i32 0, i32 0
  %82 = load i64, i64* %ob_refcnt94, align 8
  %dec95 = add i64 %82, -1
  store i64 %dec95, i64* %ob_refcnt94, align 8
  %cmp96 = icmp ne i64 %dec95, 0
  br i1 %cmp96, label %if.then.98, label %if.else.99

if.then.98:                                       ; preds = %do.body.92
  br label %if.end.102

if.else.99:                                       ; preds = %do.body.92
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  %ob_type100 = getelementptr inbounds %struct._object, %struct._object* %83, i32 0, i32 1
  %84 = load %struct._typeobject*, %struct._typeobject** %ob_type100, align 8
  %tp_dealloc101 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %84, i32 0, i32 4
  %85 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc101, align 8
  %86 = load %struct._object*, %struct._object** %_py_decref_tmp93, align 8
  call void %85(%struct._object* %86)
  br label %if.end.102

if.end.102:                                       ; preds = %if.else.99, %if.then.98
  br label %do.end.103

do.end.103:                                       ; preds = %if.end.102
  store i32 -1, i32* %retval
  br label %return

if.end.104:                                       ; preds = %cond.end.87
  %87 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %kind105 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %87, i32 0, i32 2
  %88 = load i32, i32* %kind105, align 4
  store i32 %88, i32* %kind, align 4
  store %struct._object* null, %struct._object** %str, align 8
  br label %if.end.124

if.else.106:                                      ; preds = %while.end.69
  %89 = load i64, i64* %strlen, align 8
  %call107 = call %struct._object* @PyUnicode_New(i64 %89, i32 57)
  store %struct._object* %call107, %struct._object** %str, align 8
  %90 = load %struct._object*, %struct._object** %str, align 8
  %cmp108 = icmp eq %struct._object* %90, null
  br i1 %cmp108, label %if.then.110, label %if.end.123

if.then.110:                                      ; preds = %if.else.106
  br label %do.body.111

do.body.111:                                      ; preds = %if.then.110
  %91 = load %struct._longobject*, %struct._longobject** %scratch, align 8
  %92 = bitcast %struct._longobject* %91 to %struct._object*
  store %struct._object* %92, %struct._object** %_py_decref_tmp112, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp112, align 8
  %ob_refcnt113 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 0
  %94 = load i64, i64* %ob_refcnt113, align 8
  %dec114 = add i64 %94, -1
  store i64 %dec114, i64* %ob_refcnt113, align 8
  %cmp115 = icmp ne i64 %dec114, 0
  br i1 %cmp115, label %if.then.117, label %if.else.118

if.then.117:                                      ; preds = %do.body.111
  br label %if.end.121

if.else.118:                                      ; preds = %do.body.111
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp112, align 8
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %95, i32 0, i32 1
  %96 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8
  %tp_dealloc120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %96, i32 0, i32 4
  %97 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120, align 8
  %98 = load %struct._object*, %struct._object** %_py_decref_tmp112, align 8
  call void %97(%struct._object* %98)
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.118, %if.then.117
  br label %do.end.122

do.end.122:                                       ; preds = %if.end.121
  store i32 -1, i32* %retval
  br label %return

if.end.123:                                       ; preds = %if.else.106
  %99 = load %struct._object*, %struct._object** %str, align 8
  %100 = bitcast %struct._object* %99 to %struct.PyASCIIObject*
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %100, i32 0, i32 3
  %101 = bitcast %struct.anon* %state to i32*
  %bf.load = load i32, i32* %101, align 4
  %bf.lshr = lshr i32 %bf.load, 2
  %bf.clear = and i32 %bf.lshr, 7
  store i32 %bf.clear, i32* %kind, align 4
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123, %if.end.104
  %102 = load i32, i32* %kind, align 4
  %cmp125 = icmp eq i32 %102, 1
  br i1 %cmp125, label %if.then.127, label %if.else.222

if.then.127:                                      ; preds = %if.end.124
  br label %do.body.128

do.body.128:                                      ; preds = %if.then.127
  %103 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool129 = icmp ne %struct._PyUnicodeWriter* %103, null
  br i1 %tobool129, label %if.then.130, label %if.else.157

if.then.130:                                      ; preds = %do.body.128
  %104 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %104, i32 0, i32 0
  %105 = load %struct._object*, %struct._object** %buffer, align 8
  %106 = bitcast %struct._object* %105 to %struct.PyASCIIObject*
  %state131 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %106, i32 0, i32 3
  %107 = bitcast %struct.anon* %state131 to i32*
  %bf.load132 = load i32, i32* %107, align 4
  %bf.lshr133 = lshr i32 %bf.load132, 5
  %bf.clear134 = and i32 %bf.lshr133, 1
  %tobool135 = icmp ne i32 %bf.clear134, 0
  br i1 %tobool135, label %cond.true.136, label %cond.false.150

cond.true.136:                                    ; preds = %if.then.130
  %108 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer137 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %108, i32 0, i32 0
  %109 = load %struct._object*, %struct._object** %buffer137, align 8
  %110 = bitcast %struct._object* %109 to %struct.PyASCIIObject*
  %state138 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %110, i32 0, i32 3
  %111 = bitcast %struct.anon* %state138 to i32*
  %bf.load139 = load i32, i32* %111, align 4
  %bf.lshr140 = lshr i32 %bf.load139, 6
  %bf.clear141 = and i32 %bf.lshr140, 1
  %tobool142 = icmp ne i32 %bf.clear141, 0
  br i1 %tobool142, label %cond.true.143, label %cond.false.145

cond.true.143:                                    ; preds = %cond.true.136
  %112 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer144 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %112, i32 0, i32 0
  %113 = load %struct._object*, %struct._object** %buffer144, align 8
  %114 = bitcast %struct._object* %113 to %struct.PyASCIIObject*
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %114, i64 1
  %115 = bitcast %struct.PyASCIIObject* %add.ptr to i8*
  br label %cond.end.148

cond.false.145:                                   ; preds = %cond.true.136
  %116 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer146 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %116, i32 0, i32 0
  %117 = load %struct._object*, %struct._object** %buffer146, align 8
  %118 = bitcast %struct._object* %117 to %struct.PyCompactUnicodeObject*
  %add.ptr147 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %118, i64 1
  %119 = bitcast %struct.PyCompactUnicodeObject* %add.ptr147 to i8*
  br label %cond.end.148

cond.end.148:                                     ; preds = %cond.false.145, %cond.true.143
  %cond149 = phi i8* [ %115, %cond.true.143 ], [ %119, %cond.false.145 ]
  br label %cond.end.152

cond.false.150:                                   ; preds = %if.then.130
  %120 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer151 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %120, i32 0, i32 0
  %121 = load %struct._object*, %struct._object** %buffer151, align 8
  %122 = bitcast %struct._object* %121 to %struct.PyUnicodeObject*
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %122, i32 0, i32 1
  %any = bitcast %union.anon* %data to i8**
  %123 = load i8*, i8** %any, align 8
  br label %cond.end.152

cond.end.152:                                     ; preds = %cond.false.150, %cond.end.148
  %cond153 = phi i8* [ %cond149, %cond.end.148 ], [ %123, %cond.false.150 ]
  %124 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos154 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %124, i32 0, i32 5
  %125 = load i64, i64* %pos154, align 8
  %add.ptr155 = getelementptr i8, i8* %cond153, i64 %125
  %126 = load i64, i64* %strlen, align 8
  %add.ptr156 = getelementptr i8, i8* %add.ptr155, i64 %126
  store i8* %add.ptr156, i8** %p, align 8
  br label %if.end.181

if.else.157:                                      ; preds = %do.body.128
  %127 = load %struct._object*, %struct._object** %str, align 8
  %128 = bitcast %struct._object* %127 to %struct.PyASCIIObject*
  %state158 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %128, i32 0, i32 3
  %129 = bitcast %struct.anon* %state158 to i32*
  %bf.load159 = load i32, i32* %129, align 4
  %bf.lshr160 = lshr i32 %bf.load159, 5
  %bf.clear161 = and i32 %bf.lshr160, 1
  %tobool162 = icmp ne i32 %bf.clear161, 0
  br i1 %tobool162, label %cond.true.163, label %cond.false.175

cond.true.163:                                    ; preds = %if.else.157
  %130 = load %struct._object*, %struct._object** %str, align 8
  %131 = bitcast %struct._object* %130 to %struct.PyASCIIObject*
  %state164 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %131, i32 0, i32 3
  %132 = bitcast %struct.anon* %state164 to i32*
  %bf.load165 = load i32, i32* %132, align 4
  %bf.lshr166 = lshr i32 %bf.load165, 6
  %bf.clear167 = and i32 %bf.lshr166, 1
  %tobool168 = icmp ne i32 %bf.clear167, 0
  br i1 %tobool168, label %cond.true.169, label %cond.false.171

cond.true.169:                                    ; preds = %cond.true.163
  %133 = load %struct._object*, %struct._object** %str, align 8
  %134 = bitcast %struct._object* %133 to %struct.PyASCIIObject*
  %add.ptr170 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %134, i64 1
  %135 = bitcast %struct.PyASCIIObject* %add.ptr170 to i8*
  br label %cond.end.173

cond.false.171:                                   ; preds = %cond.true.163
  %136 = load %struct._object*, %struct._object** %str, align 8
  %137 = bitcast %struct._object* %136 to %struct.PyCompactUnicodeObject*
  %add.ptr172 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %137, i64 1
  %138 = bitcast %struct.PyCompactUnicodeObject* %add.ptr172 to i8*
  br label %cond.end.173

cond.end.173:                                     ; preds = %cond.false.171, %cond.true.169
  %cond174 = phi i8* [ %135, %cond.true.169 ], [ %138, %cond.false.171 ]
  br label %cond.end.178

cond.false.175:                                   ; preds = %if.else.157
  %139 = load %struct._object*, %struct._object** %str, align 8
  %140 = bitcast %struct._object* %139 to %struct.PyUnicodeObject*
  %data176 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %140, i32 0, i32 1
  %any177 = bitcast %union.anon* %data176 to i8**
  %141 = load i8*, i8** %any177, align 8
  br label %cond.end.178

cond.end.178:                                     ; preds = %cond.false.175, %cond.end.173
  %cond179 = phi i8* [ %cond174, %cond.end.173 ], [ %141, %cond.false.175 ]
  %142 = load i64, i64* %strlen, align 8
  %add.ptr180 = getelementptr i8, i8* %cond179, i64 %142
  store i8* %add.ptr180, i8** %p, align 8
  br label %if.end.181

if.end.181:                                       ; preds = %cond.end.178, %cond.end.152
  store i64 0, i64* %i, align 8
  br label %for.cond.182

for.cond.182:                                     ; preds = %for.inc.199, %if.end.181
  %143 = load i64, i64* %i, align 8
  %144 = load i64, i64* %size, align 8
  %sub183 = sub i64 %144, 1
  %cmp184 = icmp slt i64 %143, %sub183
  br i1 %cmp184, label %for.body.186, label %for.end.201

for.body.186:                                     ; preds = %for.cond.182
  %145 = load i64, i64* %i, align 8
  %146 = load i32*, i32** %pout, align 8
  %arrayidx187 = getelementptr i32, i32* %146, i64 %145
  %147 = load i32, i32* %arrayidx187, align 4
  store i32 %147, i32* %rem, align 4
  store i64 0, i64* %j, align 8
  br label %for.cond.188

for.cond.188:                                     ; preds = %for.inc.196, %for.body.186
  %148 = load i64, i64* %j, align 8
  %cmp189 = icmp slt i64 %148, 9
  br i1 %cmp189, label %for.body.191, label %for.end.198

for.body.191:                                     ; preds = %for.cond.188
  %149 = load i32, i32* %rem, align 4
  %rem192 = urem i32 %149, 10
  %add193 = add i32 48, %rem192
  %conv194 = trunc i32 %add193 to i8
  %150 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr i8, i8* %150, i32 -1
  store i8* %incdec.ptr, i8** %p, align 8
  store i8 %conv194, i8* %incdec.ptr, align 1
  %151 = load i32, i32* %rem, align 4
  %div195 = udiv i32 %151, 10
  store i32 %div195, i32* %rem, align 4
  br label %for.inc.196

for.inc.196:                                      ; preds = %for.body.191
  %152 = load i64, i64* %j, align 8
  %inc197 = add i64 %152, 1
  store i64 %inc197, i64* %j, align 8
  br label %for.cond.188

for.end.198:                                      ; preds = %for.cond.188
  br label %for.inc.199

for.inc.199:                                      ; preds = %for.end.198
  %153 = load i64, i64* %i, align 8
  %inc200 = add i64 %153, 1
  store i64 %inc200, i64* %i, align 8
  br label %for.cond.182

for.end.201:                                      ; preds = %for.cond.182
  %154 = load i64, i64* %i, align 8
  %155 = load i32*, i32** %pout, align 8
  %arrayidx202 = getelementptr i32, i32* %155, i64 %154
  %156 = load i32, i32* %arrayidx202, align 4
  store i32 %156, i32* %rem, align 4
  br label %do.body.203

do.body.203:                                      ; preds = %do.cond, %for.end.201
  %157 = load i32, i32* %rem, align 4
  %rem204 = urem i32 %157, 10
  %add205 = add i32 48, %rem204
  %conv206 = trunc i32 %add205 to i8
  %158 = load i8*, i8** %p, align 8
  %incdec.ptr207 = getelementptr i8, i8* %158, i32 -1
  store i8* %incdec.ptr207, i8** %p, align 8
  store i8 %conv206, i8* %incdec.ptr207, align 1
  %159 = load i32, i32* %rem, align 4
  %div208 = udiv i32 %159, 10
  store i32 %div208, i32* %rem, align 4
  br label %do.cond

do.cond:                                          ; preds = %do.body.203
  %160 = load i32, i32* %rem, align 4
  %cmp209 = icmp ne i32 %160, 0
  br i1 %cmp209, label %do.body.203, label %do.end.211

do.end.211:                                       ; preds = %do.cond
  %161 = load i32, i32* %negative, align 4
  %tobool212 = icmp ne i32 %161, 0
  br i1 %tobool212, label %if.then.213, label %if.end.215

if.then.213:                                      ; preds = %do.end.211
  %162 = load i8*, i8** %p, align 8
  %incdec.ptr214 = getelementptr i8, i8* %162, i32 -1
  store i8* %incdec.ptr214, i8** %p, align 8
  store i8 45, i8* %incdec.ptr214, align 1
  br label %if.end.215

if.end.215:                                       ; preds = %if.then.213, %do.end.211
  %163 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool216 = icmp ne %struct._PyUnicodeWriter* %163, null
  br i1 %tobool216, label %if.then.217, label %if.else.218

if.then.217:                                      ; preds = %if.end.215
  br label %if.end.219

if.else.218:                                      ; preds = %if.end.215
  br label %if.end.219

if.end.219:                                       ; preds = %if.else.218, %if.then.217
  br label %do.end.221

do.end.221:                                       ; preds = %if.end.219
  br label %if.end.428

if.else.222:                                      ; preds = %if.end.124
  %164 = load i32, i32* %kind, align 4
  %cmp223 = icmp eq i32 %164, 2
  br i1 %cmp223, label %if.then.225, label %if.else.327

if.then.225:                                      ; preds = %if.else.222
  br label %do.body.227

do.body.227:                                      ; preds = %if.then.225
  %165 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool228 = icmp ne %struct._PyUnicodeWriter* %165, null
  br i1 %tobool228, label %if.then.229, label %if.else.260

if.then.229:                                      ; preds = %do.body.227
  %166 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer230 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %166, i32 0, i32 0
  %167 = load %struct._object*, %struct._object** %buffer230, align 8
  %168 = bitcast %struct._object* %167 to %struct.PyASCIIObject*
  %state231 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %168, i32 0, i32 3
  %169 = bitcast %struct.anon* %state231 to i32*
  %bf.load232 = load i32, i32* %169, align 4
  %bf.lshr233 = lshr i32 %bf.load232, 5
  %bf.clear234 = and i32 %bf.lshr233, 1
  %tobool235 = icmp ne i32 %bf.clear234, 0
  br i1 %tobool235, label %cond.true.236, label %cond.false.251

cond.true.236:                                    ; preds = %if.then.229
  %170 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer237 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %170, i32 0, i32 0
  %171 = load %struct._object*, %struct._object** %buffer237, align 8
  %172 = bitcast %struct._object* %171 to %struct.PyASCIIObject*
  %state238 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %172, i32 0, i32 3
  %173 = bitcast %struct.anon* %state238 to i32*
  %bf.load239 = load i32, i32* %173, align 4
  %bf.lshr240 = lshr i32 %bf.load239, 6
  %bf.clear241 = and i32 %bf.lshr240, 1
  %tobool242 = icmp ne i32 %bf.clear241, 0
  br i1 %tobool242, label %cond.true.243, label %cond.false.246

cond.true.243:                                    ; preds = %cond.true.236
  %174 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer244 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %174, i32 0, i32 0
  %175 = load %struct._object*, %struct._object** %buffer244, align 8
  %176 = bitcast %struct._object* %175 to %struct.PyASCIIObject*
  %add.ptr245 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %176, i64 1
  %177 = bitcast %struct.PyASCIIObject* %add.ptr245 to i8*
  br label %cond.end.249

cond.false.246:                                   ; preds = %cond.true.236
  %178 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer247 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %178, i32 0, i32 0
  %179 = load %struct._object*, %struct._object** %buffer247, align 8
  %180 = bitcast %struct._object* %179 to %struct.PyCompactUnicodeObject*
  %add.ptr248 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %180, i64 1
  %181 = bitcast %struct.PyCompactUnicodeObject* %add.ptr248 to i8*
  br label %cond.end.249

cond.end.249:                                     ; preds = %cond.false.246, %cond.true.243
  %cond250 = phi i8* [ %177, %cond.true.243 ], [ %181, %cond.false.246 ]
  br label %cond.end.255

cond.false.251:                                   ; preds = %if.then.229
  %182 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer252 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %182, i32 0, i32 0
  %183 = load %struct._object*, %struct._object** %buffer252, align 8
  %184 = bitcast %struct._object* %183 to %struct.PyUnicodeObject*
  %data253 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %184, i32 0, i32 1
  %any254 = bitcast %union.anon* %data253 to i8**
  %185 = load i8*, i8** %any254, align 8
  br label %cond.end.255

cond.end.255:                                     ; preds = %cond.false.251, %cond.end.249
  %cond256 = phi i8* [ %cond250, %cond.end.249 ], [ %185, %cond.false.251 ]
  %186 = bitcast i8* %cond256 to i16*
  %187 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos257 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %187, i32 0, i32 5
  %188 = load i64, i64* %pos257, align 8
  %add.ptr258 = getelementptr i16, i16* %186, i64 %188
  %189 = load i64, i64* %strlen, align 8
  %add.ptr259 = getelementptr i16, i16* %add.ptr258, i64 %189
  store i16* %add.ptr259, i16** %p226, align 8
  br label %if.end.284

if.else.260:                                      ; preds = %do.body.227
  %190 = load %struct._object*, %struct._object** %str, align 8
  %191 = bitcast %struct._object* %190 to %struct.PyASCIIObject*
  %state261 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %191, i32 0, i32 3
  %192 = bitcast %struct.anon* %state261 to i32*
  %bf.load262 = load i32, i32* %192, align 4
  %bf.lshr263 = lshr i32 %bf.load262, 5
  %bf.clear264 = and i32 %bf.lshr263, 1
  %tobool265 = icmp ne i32 %bf.clear264, 0
  br i1 %tobool265, label %cond.true.266, label %cond.false.278

cond.true.266:                                    ; preds = %if.else.260
  %193 = load %struct._object*, %struct._object** %str, align 8
  %194 = bitcast %struct._object* %193 to %struct.PyASCIIObject*
  %state267 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %194, i32 0, i32 3
  %195 = bitcast %struct.anon* %state267 to i32*
  %bf.load268 = load i32, i32* %195, align 4
  %bf.lshr269 = lshr i32 %bf.load268, 6
  %bf.clear270 = and i32 %bf.lshr269, 1
  %tobool271 = icmp ne i32 %bf.clear270, 0
  br i1 %tobool271, label %cond.true.272, label %cond.false.274

cond.true.272:                                    ; preds = %cond.true.266
  %196 = load %struct._object*, %struct._object** %str, align 8
  %197 = bitcast %struct._object* %196 to %struct.PyASCIIObject*
  %add.ptr273 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %197, i64 1
  %198 = bitcast %struct.PyASCIIObject* %add.ptr273 to i8*
  br label %cond.end.276

cond.false.274:                                   ; preds = %cond.true.266
  %199 = load %struct._object*, %struct._object** %str, align 8
  %200 = bitcast %struct._object* %199 to %struct.PyCompactUnicodeObject*
  %add.ptr275 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %200, i64 1
  %201 = bitcast %struct.PyCompactUnicodeObject* %add.ptr275 to i8*
  br label %cond.end.276

cond.end.276:                                     ; preds = %cond.false.274, %cond.true.272
  %cond277 = phi i8* [ %198, %cond.true.272 ], [ %201, %cond.false.274 ]
  br label %cond.end.281

cond.false.278:                                   ; preds = %if.else.260
  %202 = load %struct._object*, %struct._object** %str, align 8
  %203 = bitcast %struct._object* %202 to %struct.PyUnicodeObject*
  %data279 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %203, i32 0, i32 1
  %any280 = bitcast %union.anon* %data279 to i8**
  %204 = load i8*, i8** %any280, align 8
  br label %cond.end.281

cond.end.281:                                     ; preds = %cond.false.278, %cond.end.276
  %cond282 = phi i8* [ %cond277, %cond.end.276 ], [ %204, %cond.false.278 ]
  %205 = bitcast i8* %cond282 to i16*
  %206 = load i64, i64* %strlen, align 8
  %add.ptr283 = getelementptr i16, i16* %205, i64 %206
  store i16* %add.ptr283, i16** %p226, align 8
  br label %if.end.284

if.end.284:                                       ; preds = %cond.end.281, %cond.end.255
  store i64 0, i64* %i, align 8
  br label %for.cond.285

for.cond.285:                                     ; preds = %for.inc.303, %if.end.284
  %207 = load i64, i64* %i, align 8
  %208 = load i64, i64* %size, align 8
  %sub286 = sub i64 %208, 1
  %cmp287 = icmp slt i64 %207, %sub286
  br i1 %cmp287, label %for.body.289, label %for.end.305

for.body.289:                                     ; preds = %for.cond.285
  %209 = load i64, i64* %i, align 8
  %210 = load i32*, i32** %pout, align 8
  %arrayidx290 = getelementptr i32, i32* %210, i64 %209
  %211 = load i32, i32* %arrayidx290, align 4
  store i32 %211, i32* %rem, align 4
  store i64 0, i64* %j, align 8
  br label %for.cond.291

for.cond.291:                                     ; preds = %for.inc.300, %for.body.289
  %212 = load i64, i64* %j, align 8
  %cmp292 = icmp slt i64 %212, 9
  br i1 %cmp292, label %for.body.294, label %for.end.302

for.body.294:                                     ; preds = %for.cond.291
  %213 = load i32, i32* %rem, align 4
  %rem295 = urem i32 %213, 10
  %add296 = add i32 48, %rem295
  %conv297 = trunc i32 %add296 to i16
  %214 = load i16*, i16** %p226, align 8
  %incdec.ptr298 = getelementptr i16, i16* %214, i32 -1
  store i16* %incdec.ptr298, i16** %p226, align 8
  store i16 %conv297, i16* %incdec.ptr298, align 2
  %215 = load i32, i32* %rem, align 4
  %div299 = udiv i32 %215, 10
  store i32 %div299, i32* %rem, align 4
  br label %for.inc.300

for.inc.300:                                      ; preds = %for.body.294
  %216 = load i64, i64* %j, align 8
  %inc301 = add i64 %216, 1
  store i64 %inc301, i64* %j, align 8
  br label %for.cond.291

for.end.302:                                      ; preds = %for.cond.291
  br label %for.inc.303

for.inc.303:                                      ; preds = %for.end.302
  %217 = load i64, i64* %i, align 8
  %inc304 = add i64 %217, 1
  store i64 %inc304, i64* %i, align 8
  br label %for.cond.285

for.end.305:                                      ; preds = %for.cond.285
  %218 = load i64, i64* %i, align 8
  %219 = load i32*, i32** %pout, align 8
  %arrayidx306 = getelementptr i32, i32* %219, i64 %218
  %220 = load i32, i32* %arrayidx306, align 4
  store i32 %220, i32* %rem, align 4
  br label %do.body.307

do.body.307:                                      ; preds = %do.cond.313, %for.end.305
  %221 = load i32, i32* %rem, align 4
  %rem308 = urem i32 %221, 10
  %add309 = add i32 48, %rem308
  %conv310 = trunc i32 %add309 to i16
  %222 = load i16*, i16** %p226, align 8
  %incdec.ptr311 = getelementptr i16, i16* %222, i32 -1
  store i16* %incdec.ptr311, i16** %p226, align 8
  store i16 %conv310, i16* %incdec.ptr311, align 2
  %223 = load i32, i32* %rem, align 4
  %div312 = udiv i32 %223, 10
  store i32 %div312, i32* %rem, align 4
  br label %do.cond.313

do.cond.313:                                      ; preds = %do.body.307
  %224 = load i32, i32* %rem, align 4
  %cmp314 = icmp ne i32 %224, 0
  br i1 %cmp314, label %do.body.307, label %do.end.316

do.end.316:                                       ; preds = %do.cond.313
  %225 = load i32, i32* %negative, align 4
  %tobool317 = icmp ne i32 %225, 0
  br i1 %tobool317, label %if.then.318, label %if.end.320

if.then.318:                                      ; preds = %do.end.316
  %226 = load i16*, i16** %p226, align 8
  %incdec.ptr319 = getelementptr i16, i16* %226, i32 -1
  store i16* %incdec.ptr319, i16** %p226, align 8
  store i16 45, i16* %incdec.ptr319, align 2
  br label %if.end.320

if.end.320:                                       ; preds = %if.then.318, %do.end.316
  %227 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool321 = icmp ne %struct._PyUnicodeWriter* %227, null
  br i1 %tobool321, label %if.then.322, label %if.else.323

if.then.322:                                      ; preds = %if.end.320
  br label %if.end.324

if.else.323:                                      ; preds = %if.end.320
  br label %if.end.324

if.end.324:                                       ; preds = %if.else.323, %if.then.322
  br label %do.end.326

do.end.326:                                       ; preds = %if.end.324
  br label %if.end.427

if.else.327:                                      ; preds = %if.else.222
  br label %do.body.329

do.body.329:                                      ; preds = %if.else.327
  %228 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool330 = icmp ne %struct._PyUnicodeWriter* %228, null
  br i1 %tobool330, label %if.then.331, label %if.else.362

if.then.331:                                      ; preds = %do.body.329
  %229 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer332 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %229, i32 0, i32 0
  %230 = load %struct._object*, %struct._object** %buffer332, align 8
  %231 = bitcast %struct._object* %230 to %struct.PyASCIIObject*
  %state333 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %231, i32 0, i32 3
  %232 = bitcast %struct.anon* %state333 to i32*
  %bf.load334 = load i32, i32* %232, align 4
  %bf.lshr335 = lshr i32 %bf.load334, 5
  %bf.clear336 = and i32 %bf.lshr335, 1
  %tobool337 = icmp ne i32 %bf.clear336, 0
  br i1 %tobool337, label %cond.true.338, label %cond.false.353

cond.true.338:                                    ; preds = %if.then.331
  %233 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer339 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %233, i32 0, i32 0
  %234 = load %struct._object*, %struct._object** %buffer339, align 8
  %235 = bitcast %struct._object* %234 to %struct.PyASCIIObject*
  %state340 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %235, i32 0, i32 3
  %236 = bitcast %struct.anon* %state340 to i32*
  %bf.load341 = load i32, i32* %236, align 4
  %bf.lshr342 = lshr i32 %bf.load341, 6
  %bf.clear343 = and i32 %bf.lshr342, 1
  %tobool344 = icmp ne i32 %bf.clear343, 0
  br i1 %tobool344, label %cond.true.345, label %cond.false.348

cond.true.345:                                    ; preds = %cond.true.338
  %237 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer346 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %237, i32 0, i32 0
  %238 = load %struct._object*, %struct._object** %buffer346, align 8
  %239 = bitcast %struct._object* %238 to %struct.PyASCIIObject*
  %add.ptr347 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %239, i64 1
  %240 = bitcast %struct.PyASCIIObject* %add.ptr347 to i8*
  br label %cond.end.351

cond.false.348:                                   ; preds = %cond.true.338
  %241 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer349 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %241, i32 0, i32 0
  %242 = load %struct._object*, %struct._object** %buffer349, align 8
  %243 = bitcast %struct._object* %242 to %struct.PyCompactUnicodeObject*
  %add.ptr350 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %243, i64 1
  %244 = bitcast %struct.PyCompactUnicodeObject* %add.ptr350 to i8*
  br label %cond.end.351

cond.end.351:                                     ; preds = %cond.false.348, %cond.true.345
  %cond352 = phi i8* [ %240, %cond.true.345 ], [ %244, %cond.false.348 ]
  br label %cond.end.357

cond.false.353:                                   ; preds = %if.then.331
  %245 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer354 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %245, i32 0, i32 0
  %246 = load %struct._object*, %struct._object** %buffer354, align 8
  %247 = bitcast %struct._object* %246 to %struct.PyUnicodeObject*
  %data355 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %247, i32 0, i32 1
  %any356 = bitcast %union.anon* %data355 to i8**
  %248 = load i8*, i8** %any356, align 8
  br label %cond.end.357

cond.end.357:                                     ; preds = %cond.false.353, %cond.end.351
  %cond358 = phi i8* [ %cond352, %cond.end.351 ], [ %248, %cond.false.353 ]
  %249 = bitcast i8* %cond358 to i32*
  %250 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos359 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %250, i32 0, i32 5
  %251 = load i64, i64* %pos359, align 8
  %add.ptr360 = getelementptr i32, i32* %249, i64 %251
  %252 = load i64, i64* %strlen, align 8
  %add.ptr361 = getelementptr i32, i32* %add.ptr360, i64 %252
  store i32* %add.ptr361, i32** %p328, align 8
  br label %if.end.386

if.else.362:                                      ; preds = %do.body.329
  %253 = load %struct._object*, %struct._object** %str, align 8
  %254 = bitcast %struct._object* %253 to %struct.PyASCIIObject*
  %state363 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %254, i32 0, i32 3
  %255 = bitcast %struct.anon* %state363 to i32*
  %bf.load364 = load i32, i32* %255, align 4
  %bf.lshr365 = lshr i32 %bf.load364, 5
  %bf.clear366 = and i32 %bf.lshr365, 1
  %tobool367 = icmp ne i32 %bf.clear366, 0
  br i1 %tobool367, label %cond.true.368, label %cond.false.380

cond.true.368:                                    ; preds = %if.else.362
  %256 = load %struct._object*, %struct._object** %str, align 8
  %257 = bitcast %struct._object* %256 to %struct.PyASCIIObject*
  %state369 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %257, i32 0, i32 3
  %258 = bitcast %struct.anon* %state369 to i32*
  %bf.load370 = load i32, i32* %258, align 4
  %bf.lshr371 = lshr i32 %bf.load370, 6
  %bf.clear372 = and i32 %bf.lshr371, 1
  %tobool373 = icmp ne i32 %bf.clear372, 0
  br i1 %tobool373, label %cond.true.374, label %cond.false.376

cond.true.374:                                    ; preds = %cond.true.368
  %259 = load %struct._object*, %struct._object** %str, align 8
  %260 = bitcast %struct._object* %259 to %struct.PyASCIIObject*
  %add.ptr375 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %260, i64 1
  %261 = bitcast %struct.PyASCIIObject* %add.ptr375 to i8*
  br label %cond.end.378

cond.false.376:                                   ; preds = %cond.true.368
  %262 = load %struct._object*, %struct._object** %str, align 8
  %263 = bitcast %struct._object* %262 to %struct.PyCompactUnicodeObject*
  %add.ptr377 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %263, i64 1
  %264 = bitcast %struct.PyCompactUnicodeObject* %add.ptr377 to i8*
  br label %cond.end.378

cond.end.378:                                     ; preds = %cond.false.376, %cond.true.374
  %cond379 = phi i8* [ %261, %cond.true.374 ], [ %264, %cond.false.376 ]
  br label %cond.end.383

cond.false.380:                                   ; preds = %if.else.362
  %265 = load %struct._object*, %struct._object** %str, align 8
  %266 = bitcast %struct._object* %265 to %struct.PyUnicodeObject*
  %data381 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %266, i32 0, i32 1
  %any382 = bitcast %union.anon* %data381 to i8**
  %267 = load i8*, i8** %any382, align 8
  br label %cond.end.383

cond.end.383:                                     ; preds = %cond.false.380, %cond.end.378
  %cond384 = phi i8* [ %cond379, %cond.end.378 ], [ %267, %cond.false.380 ]
  %268 = bitcast i8* %cond384 to i32*
  %269 = load i64, i64* %strlen, align 8
  %add.ptr385 = getelementptr i32, i32* %268, i64 %269
  store i32* %add.ptr385, i32** %p328, align 8
  br label %if.end.386

if.end.386:                                       ; preds = %cond.end.383, %cond.end.357
  store i64 0, i64* %i, align 8
  br label %for.cond.387

for.cond.387:                                     ; preds = %for.inc.404, %if.end.386
  %270 = load i64, i64* %i, align 8
  %271 = load i64, i64* %size, align 8
  %sub388 = sub i64 %271, 1
  %cmp389 = icmp slt i64 %270, %sub388
  br i1 %cmp389, label %for.body.391, label %for.end.406

for.body.391:                                     ; preds = %for.cond.387
  %272 = load i64, i64* %i, align 8
  %273 = load i32*, i32** %pout, align 8
  %arrayidx392 = getelementptr i32, i32* %273, i64 %272
  %274 = load i32, i32* %arrayidx392, align 4
  store i32 %274, i32* %rem, align 4
  store i64 0, i64* %j, align 8
  br label %for.cond.393

for.cond.393:                                     ; preds = %for.inc.401, %for.body.391
  %275 = load i64, i64* %j, align 8
  %cmp394 = icmp slt i64 %275, 9
  br i1 %cmp394, label %for.body.396, label %for.end.403

for.body.396:                                     ; preds = %for.cond.393
  %276 = load i32, i32* %rem, align 4
  %rem397 = urem i32 %276, 10
  %add398 = add i32 48, %rem397
  %277 = load i32*, i32** %p328, align 8
  %incdec.ptr399 = getelementptr i32, i32* %277, i32 -1
  store i32* %incdec.ptr399, i32** %p328, align 8
  store i32 %add398, i32* %incdec.ptr399, align 4
  %278 = load i32, i32* %rem, align 4
  %div400 = udiv i32 %278, 10
  store i32 %div400, i32* %rem, align 4
  br label %for.inc.401

for.inc.401:                                      ; preds = %for.body.396
  %279 = load i64, i64* %j, align 8
  %inc402 = add i64 %279, 1
  store i64 %inc402, i64* %j, align 8
  br label %for.cond.393

for.end.403:                                      ; preds = %for.cond.393
  br label %for.inc.404

for.inc.404:                                      ; preds = %for.end.403
  %280 = load i64, i64* %i, align 8
  %inc405 = add i64 %280, 1
  store i64 %inc405, i64* %i, align 8
  br label %for.cond.387

for.end.406:                                      ; preds = %for.cond.387
  %281 = load i64, i64* %i, align 8
  %282 = load i32*, i32** %pout, align 8
  %arrayidx407 = getelementptr i32, i32* %282, i64 %281
  %283 = load i32, i32* %arrayidx407, align 4
  store i32 %283, i32* %rem, align 4
  br label %do.body.408

do.body.408:                                      ; preds = %do.cond.413, %for.end.406
  %284 = load i32, i32* %rem, align 4
  %rem409 = urem i32 %284, 10
  %add410 = add i32 48, %rem409
  %285 = load i32*, i32** %p328, align 8
  %incdec.ptr411 = getelementptr i32, i32* %285, i32 -1
  store i32* %incdec.ptr411, i32** %p328, align 8
  store i32 %add410, i32* %incdec.ptr411, align 4
  %286 = load i32, i32* %rem, align 4
  %div412 = udiv i32 %286, 10
  store i32 %div412, i32* %rem, align 4
  br label %do.cond.413

do.cond.413:                                      ; preds = %do.body.408
  %287 = load i32, i32* %rem, align 4
  %cmp414 = icmp ne i32 %287, 0
  br i1 %cmp414, label %do.body.408, label %do.end.416

do.end.416:                                       ; preds = %do.cond.413
  %288 = load i32, i32* %negative, align 4
  %tobool417 = icmp ne i32 %288, 0
  br i1 %tobool417, label %if.then.418, label %if.end.420

if.then.418:                                      ; preds = %do.end.416
  %289 = load i32*, i32** %p328, align 8
  %incdec.ptr419 = getelementptr i32, i32* %289, i32 -1
  store i32* %incdec.ptr419, i32** %p328, align 8
  store i32 45, i32* %incdec.ptr419, align 4
  br label %if.end.420

if.end.420:                                       ; preds = %if.then.418, %do.end.416
  %290 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool421 = icmp ne %struct._PyUnicodeWriter* %290, null
  br i1 %tobool421, label %if.then.422, label %if.else.423

if.then.422:                                      ; preds = %if.end.420
  br label %if.end.424

if.else.423:                                      ; preds = %if.end.420
  br label %if.end.424

if.end.424:                                       ; preds = %if.else.423, %if.then.422
  br label %do.end.426

do.end.426:                                       ; preds = %if.end.424
  br label %if.end.427

if.end.427:                                       ; preds = %do.end.426, %do.end.326
  br label %if.end.428

if.end.428:                                       ; preds = %if.end.427, %do.end.221
  br label %do.body.429

do.body.429:                                      ; preds = %if.end.428
  %291 = load %struct._longobject*, %struct._longobject** %scratch, align 8
  %292 = bitcast %struct._longobject* %291 to %struct._object*
  store %struct._object* %292, %struct._object** %_py_decref_tmp430, align 8
  %293 = load %struct._object*, %struct._object** %_py_decref_tmp430, align 8
  %ob_refcnt431 = getelementptr inbounds %struct._object, %struct._object* %293, i32 0, i32 0
  %294 = load i64, i64* %ob_refcnt431, align 8
  %dec432 = add i64 %294, -1
  store i64 %dec432, i64* %ob_refcnt431, align 8
  %cmp433 = icmp ne i64 %dec432, 0
  br i1 %cmp433, label %if.then.435, label %if.else.436

if.then.435:                                      ; preds = %do.body.429
  br label %if.end.439

if.else.436:                                      ; preds = %do.body.429
  %295 = load %struct._object*, %struct._object** %_py_decref_tmp430, align 8
  %ob_type437 = getelementptr inbounds %struct._object, %struct._object* %295, i32 0, i32 1
  %296 = load %struct._typeobject*, %struct._typeobject** %ob_type437, align 8
  %tp_dealloc438 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %296, i32 0, i32 4
  %297 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc438, align 8
  %298 = load %struct._object*, %struct._object** %_py_decref_tmp430, align 8
  call void %297(%struct._object* %298)
  br label %if.end.439

if.end.439:                                       ; preds = %if.else.436, %if.then.435
  br label %do.end.441

do.end.441:                                       ; preds = %if.end.439
  %299 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool442 = icmp ne %struct._PyUnicodeWriter* %299, null
  br i1 %tobool442, label %if.then.443, label %if.else.446

if.then.443:                                      ; preds = %do.end.441
  %300 = load i64, i64* %strlen, align 8
  %301 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos444 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %301, i32 0, i32 5
  %302 = load i64, i64* %pos444, align 8
  %add445 = add i64 %302, %300
  store i64 %add445, i64* %pos444, align 8
  br label %if.end.447

if.else.446:                                      ; preds = %do.end.441
  %303 = load %struct._object*, %struct._object** %str, align 8
  %304 = load %struct._object**, %struct._object*** %p_output.addr, align 8
  store %struct._object* %303, %struct._object** %304, align 8
  br label %if.end.447

if.end.447:                                       ; preds = %if.else.446, %if.then.443
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.447, %do.end.122, %do.end.103, %do.end, %if.then.13, %if.then.9, %if.then
  %305 = load i32, i32* %retval
  ret i32 %305
}

; Function Attrs: nounwind uwtable
define internal i32 @long_format_binary(%struct._object* %aa, i32 %base, i32 %alternate, %struct._object** %p_output, %struct._PyUnicodeWriter* %writer) #0 {
entry:
  %retval = alloca i32, align 4
  %aa.addr = alloca %struct._object*, align 8
  %base.addr = alloca i32, align 4
  %alternate.addr = alloca i32, align 4
  %p_output.addr = alloca %struct._object**, align 8
  %writer.addr = alloca %struct._PyUnicodeWriter*, align 8
  %a = alloca %struct._longobject*, align 8
  %v = alloca %struct._object*, align 8
  %sz = alloca i64, align 8
  %size_a = alloca i64, align 8
  %kind = alloca i32, align 4
  %negative = alloca i32, align 4
  %bits = alloca i32, align 4
  %size_a_in_bits = alloca i64, align 8
  %p = alloca i8*, align 8
  %accum = alloca i64, align 8
  %accumbits = alloca i32, align 4
  %i = alloca i64, align 8
  %cdigit = alloca i8, align 1
  %p184 = alloca i16*, align 8
  %accum248 = alloca i64, align 8
  %accumbits249 = alloca i32, align 4
  %i250 = alloca i64, align 8
  %cdigit263 = alloca i8, align 1
  %p326 = alloca i32*, align 8
  %accum390 = alloca i64, align 8
  %accumbits391 = alloca i32, align 4
  %i392 = alloca i64, align 8
  %cdigit405 = alloca i8, align 1
  store %struct._object* %aa, %struct._object** %aa.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  store i32 %alternate, i32* %alternate.addr, align 4
  store %struct._object** %p_output, %struct._object*** %p_output.addr, align 8
  store %struct._PyUnicodeWriter* %writer, %struct._PyUnicodeWriter** %writer.addr, align 8
  %0 = load %struct._object*, %struct._object** %aa.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct._longobject*
  store %struct._longobject* %1, %struct._longobject** %a, align 8
  %2 = load %struct._longobject*, %struct._longobject** %a, align 8
  %cmp = icmp eq %struct._longobject* %2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a, align 8
  %4 = bitcast %struct._longobject* %3 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19
  %6 = load i64, i64* %tp_flags, align 8
  %and = and i64 %6, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 1766)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct._longobject*, %struct._longobject** %a, align 8
  %8 = bitcast %struct._longobject* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  %cmp2 = icmp slt i64 %9, 0
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %10 = load %struct._longobject*, %struct._longobject** %a, align 8
  %11 = bitcast %struct._longobject* %10 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  %12 = load i64, i64* %ob_size3, align 8
  %sub = sub i64 0, %12
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %13 = load %struct._longobject*, %struct._longobject** %a, align 8
  %14 = bitcast %struct._longobject* %13 to %struct.PyVarObject*
  %ob_size4 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %14, i32 0, i32 1
  %15 = load i64, i64* %ob_size4, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %15, %cond.false ]
  store i64 %cond, i64* %size_a, align 8
  %16 = load %struct._longobject*, %struct._longobject** %a, align 8
  %17 = bitcast %struct._longobject* %16 to %struct.PyVarObject*
  %ob_size5 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %17, i32 0, i32 1
  %18 = load i64, i64* %ob_size5, align 8
  %cmp6 = icmp slt i64 %18, 0
  %conv = zext i1 %cmp6 to i32
  store i32 %conv, i32* %negative, align 4
  %19 = load i32, i32* %base.addr, align 4
  switch i32 %19, label %sw.default [
    i32 16, label %sw.bb
    i32 8, label %sw.bb.7
    i32 2, label %sw.bb.8
  ]

sw.bb:                                            ; preds = %cond.end
  store i32 4, i32* %bits, align 4
  br label %sw.epilog

sw.bb.7:                                          ; preds = %cond.end
  store i32 3, i32* %bits, align 4
  br label %sw.epilog

sw.bb.8:                                          ; preds = %cond.end
  store i32 1, i32* %bits, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end
  store i32 0, i32* %bits, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.8, %sw.bb.7, %sw.bb
  %20 = load i64, i64* %size_a, align 8
  %cmp9 = icmp eq i64 %20, 0
  br i1 %cmp9, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %sw.epilog
  store i64 1, i64* %sz, align 8
  br label %if.end.25

if.else:                                          ; preds = %sw.epilog
  %21 = load i64, i64* %size_a, align 8
  %cmp12 = icmp sgt i64 %21, 307445734561825860
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.else
  %22 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %22, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.15:                                        ; preds = %if.else
  %23 = load i64, i64* %size_a, align 8
  %sub16 = sub i64 %23, 1
  %mul = mul i64 %sub16, 30
  %24 = load i64, i64* %size_a, align 8
  %sub17 = sub i64 %24, 1
  %25 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %25, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %sub17
  %26 = load i32, i32* %arrayidx, align 4
  %call = call i32 @bits_in_digit(i32 %26)
  %conv18 = sext i32 %call to i64
  %add = add i64 %mul, %conv18
  store i64 %add, i64* %size_a_in_bits, align 8
  %27 = load i32, i32* %negative, align 4
  %conv19 = sext i32 %27 to i64
  %28 = load i64, i64* %size_a_in_bits, align 8
  %29 = load i32, i32* %bits, align 4
  %sub20 = sub i32 %29, 1
  %conv21 = sext i32 %sub20 to i64
  %add22 = add i64 %28, %conv21
  %30 = load i32, i32* %bits, align 4
  %conv23 = sext i32 %30 to i64
  %div = sdiv i64 %add22, %conv23
  %add24 = add i64 %conv19, %div
  store i64 %add24, i64* %sz, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.end.15, %if.then.11
  %31 = load i32, i32* %alternate.addr, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %if.end.25
  %32 = load i64, i64* %sz, align 8
  %add27 = add i64 %32, 2
  store i64 %add27, i64* %sz, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %if.end.25
  %33 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool29 = icmp ne %struct._PyUnicodeWriter* %33, null
  br i1 %tobool29, label %if.then.30, label %if.else.52

if.then.30:                                       ; preds = %if.end.28
  %34 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %maxchar = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %34, i32 0, i32 3
  %35 = load i32, i32* %maxchar, align 4
  %cmp31 = icmp ule i32 120, %35
  br i1 %cmp31, label %land.lhs.true, label %cond.false.37

land.lhs.true:                                    ; preds = %if.then.30
  %36 = load i64, i64* %sz, align 8
  %37 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %size = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %37, i32 0, i32 4
  %38 = load i64, i64* %size, align 8
  %39 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %39, i32 0, i32 5
  %40 = load i64, i64* %pos, align 8
  %sub33 = sub i64 %38, %40
  %cmp34 = icmp sle i64 %36, %sub33
  br i1 %cmp34, label %cond.true.36, label %cond.false.37

cond.true.36:                                     ; preds = %land.lhs.true
  br label %cond.end.45

cond.false.37:                                    ; preds = %land.lhs.true, %if.then.30
  %41 = load i64, i64* %sz, align 8
  %cmp38 = icmp eq i64 %41, 0
  br i1 %cmp38, label %cond.true.40, label %cond.false.41

cond.true.40:                                     ; preds = %cond.false.37
  br label %cond.end.43

cond.false.41:                                    ; preds = %cond.false.37
  %42 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %43 = load i64, i64* %sz, align 8
  %call42 = call i32 @_PyUnicodeWriter_PrepareInternal(%struct._PyUnicodeWriter* %42, i64 %43, i32 120)
  br label %cond.end.43

cond.end.43:                                      ; preds = %cond.false.41, %cond.true.40
  %cond44 = phi i32 [ 0, %cond.true.40 ], [ %call42, %cond.false.41 ]
  br label %cond.end.45

cond.end.45:                                      ; preds = %cond.end.43, %cond.true.36
  %cond46 = phi i32 [ 0, %cond.true.36 ], [ %cond44, %cond.end.43 ]
  %cmp47 = icmp eq i32 %cond46, -1
  br i1 %cmp47, label %if.then.49, label %if.end.50

if.then.49:                                       ; preds = %cond.end.45
  store i32 -1, i32* %retval
  br label %return

if.end.50:                                        ; preds = %cond.end.45
  %44 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %kind51 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %44, i32 0, i32 2
  %45 = load i32, i32* %kind51, align 4
  store i32 %45, i32* %kind, align 4
  store %struct._object* null, %struct._object** %v, align 8
  br label %if.end.58

if.else.52:                                       ; preds = %if.end.28
  %46 = load i64, i64* %sz, align 8
  %call53 = call %struct._object* @PyUnicode_New(i64 %46, i32 120)
  store %struct._object* %call53, %struct._object** %v, align 8
  %47 = load %struct._object*, %struct._object** %v, align 8
  %cmp54 = icmp eq %struct._object* %47, null
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.else.52
  store i32 -1, i32* %retval
  br label %return

if.end.57:                                        ; preds = %if.else.52
  %48 = load %struct._object*, %struct._object** %v, align 8
  %49 = bitcast %struct._object* %48 to %struct.PyASCIIObject*
  %state = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %49, i32 0, i32 3
  %50 = bitcast %struct.anon* %state to i32*
  %bf.load = load i32, i32* %50, align 4
  %bf.lshr = lshr i32 %bf.load, 2
  %bf.clear = and i32 %bf.lshr, 7
  store i32 %bf.clear, i32* %kind, align 4
  br label %if.end.58

if.end.58:                                        ; preds = %if.end.57, %if.end.50
  %51 = load i32, i32* %kind, align 4
  %cmp59 = icmp eq i32 %51, 1
  br i1 %cmp59, label %if.then.61, label %if.else.180

if.then.61:                                       ; preds = %if.end.58
  br label %do.body

do.body:                                          ; preds = %if.then.61
  %52 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool62 = icmp ne %struct._PyUnicodeWriter* %52, null
  br i1 %tobool62, label %if.then.63, label %if.else.90

if.then.63:                                       ; preds = %do.body
  %53 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %53, i32 0, i32 0
  %54 = load %struct._object*, %struct._object** %buffer, align 8
  %55 = bitcast %struct._object* %54 to %struct.PyASCIIObject*
  %state64 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %55, i32 0, i32 3
  %56 = bitcast %struct.anon* %state64 to i32*
  %bf.load65 = load i32, i32* %56, align 4
  %bf.lshr66 = lshr i32 %bf.load65, 5
  %bf.clear67 = and i32 %bf.lshr66, 1
  %tobool68 = icmp ne i32 %bf.clear67, 0
  br i1 %tobool68, label %cond.true.69, label %cond.false.83

cond.true.69:                                     ; preds = %if.then.63
  %57 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer70 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %57, i32 0, i32 0
  %58 = load %struct._object*, %struct._object** %buffer70, align 8
  %59 = bitcast %struct._object* %58 to %struct.PyASCIIObject*
  %state71 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %59, i32 0, i32 3
  %60 = bitcast %struct.anon* %state71 to i32*
  %bf.load72 = load i32, i32* %60, align 4
  %bf.lshr73 = lshr i32 %bf.load72, 6
  %bf.clear74 = and i32 %bf.lshr73, 1
  %tobool75 = icmp ne i32 %bf.clear74, 0
  br i1 %tobool75, label %cond.true.76, label %cond.false.78

cond.true.76:                                     ; preds = %cond.true.69
  %61 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer77 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %61, i32 0, i32 0
  %62 = load %struct._object*, %struct._object** %buffer77, align 8
  %63 = bitcast %struct._object* %62 to %struct.PyASCIIObject*
  %add.ptr = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %63, i64 1
  %64 = bitcast %struct.PyASCIIObject* %add.ptr to i8*
  br label %cond.end.81

cond.false.78:                                    ; preds = %cond.true.69
  %65 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer79 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %65, i32 0, i32 0
  %66 = load %struct._object*, %struct._object** %buffer79, align 8
  %67 = bitcast %struct._object* %66 to %struct.PyCompactUnicodeObject*
  %add.ptr80 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %67, i64 1
  %68 = bitcast %struct.PyCompactUnicodeObject* %add.ptr80 to i8*
  br label %cond.end.81

cond.end.81:                                      ; preds = %cond.false.78, %cond.true.76
  %cond82 = phi i8* [ %64, %cond.true.76 ], [ %68, %cond.false.78 ]
  br label %cond.end.85

cond.false.83:                                    ; preds = %if.then.63
  %69 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer84 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %69, i32 0, i32 0
  %70 = load %struct._object*, %struct._object** %buffer84, align 8
  %71 = bitcast %struct._object* %70 to %struct.PyUnicodeObject*
  %data = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %71, i32 0, i32 1
  %any = bitcast %union.anon* %data to i8**
  %72 = load i8*, i8** %any, align 8
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.83, %cond.end.81
  %cond86 = phi i8* [ %cond82, %cond.end.81 ], [ %72, %cond.false.83 ]
  %73 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos87 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %73, i32 0, i32 5
  %74 = load i64, i64* %pos87, align 8
  %add.ptr88 = getelementptr i8, i8* %cond86, i64 %74
  %75 = load i64, i64* %sz, align 8
  %add.ptr89 = getelementptr i8, i8* %add.ptr88, i64 %75
  store i8* %add.ptr89, i8** %p, align 8
  br label %if.end.114

if.else.90:                                       ; preds = %do.body
  %76 = load %struct._object*, %struct._object** %v, align 8
  %77 = bitcast %struct._object* %76 to %struct.PyASCIIObject*
  %state91 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %77, i32 0, i32 3
  %78 = bitcast %struct.anon* %state91 to i32*
  %bf.load92 = load i32, i32* %78, align 4
  %bf.lshr93 = lshr i32 %bf.load92, 5
  %bf.clear94 = and i32 %bf.lshr93, 1
  %tobool95 = icmp ne i32 %bf.clear94, 0
  br i1 %tobool95, label %cond.true.96, label %cond.false.108

cond.true.96:                                     ; preds = %if.else.90
  %79 = load %struct._object*, %struct._object** %v, align 8
  %80 = bitcast %struct._object* %79 to %struct.PyASCIIObject*
  %state97 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %80, i32 0, i32 3
  %81 = bitcast %struct.anon* %state97 to i32*
  %bf.load98 = load i32, i32* %81, align 4
  %bf.lshr99 = lshr i32 %bf.load98, 6
  %bf.clear100 = and i32 %bf.lshr99, 1
  %tobool101 = icmp ne i32 %bf.clear100, 0
  br i1 %tobool101, label %cond.true.102, label %cond.false.104

cond.true.102:                                    ; preds = %cond.true.96
  %82 = load %struct._object*, %struct._object** %v, align 8
  %83 = bitcast %struct._object* %82 to %struct.PyASCIIObject*
  %add.ptr103 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %83, i64 1
  %84 = bitcast %struct.PyASCIIObject* %add.ptr103 to i8*
  br label %cond.end.106

cond.false.104:                                   ; preds = %cond.true.96
  %85 = load %struct._object*, %struct._object** %v, align 8
  %86 = bitcast %struct._object* %85 to %struct.PyCompactUnicodeObject*
  %add.ptr105 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %86, i64 1
  %87 = bitcast %struct.PyCompactUnicodeObject* %add.ptr105 to i8*
  br label %cond.end.106

cond.end.106:                                     ; preds = %cond.false.104, %cond.true.102
  %cond107 = phi i8* [ %84, %cond.true.102 ], [ %87, %cond.false.104 ]
  br label %cond.end.111

cond.false.108:                                   ; preds = %if.else.90
  %88 = load %struct._object*, %struct._object** %v, align 8
  %89 = bitcast %struct._object* %88 to %struct.PyUnicodeObject*
  %data109 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %89, i32 0, i32 1
  %any110 = bitcast %union.anon* %data109 to i8**
  %90 = load i8*, i8** %any110, align 8
  br label %cond.end.111

cond.end.111:                                     ; preds = %cond.false.108, %cond.end.106
  %cond112 = phi i8* [ %cond107, %cond.end.106 ], [ %90, %cond.false.108 ]
  %91 = load i64, i64* %sz, align 8
  %add.ptr113 = getelementptr i8, i8* %cond112, i64 %91
  store i8* %add.ptr113, i8** %p, align 8
  br label %if.end.114

if.end.114:                                       ; preds = %cond.end.111, %cond.end.85
  %92 = load i64, i64* %size_a, align 8
  %cmp115 = icmp eq i64 %92, 0
  br i1 %cmp115, label %if.then.117, label %if.else.118

if.then.117:                                      ; preds = %if.end.114
  %93 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr i8, i8* %93, i32 -1
  store i8* %incdec.ptr, i8** %p, align 8
  store i8 48, i8* %incdec.ptr, align 1
  br label %if.end.152

if.else.118:                                      ; preds = %if.end.114
  store i64 0, i64* %accum, align 8
  store i32 0, i32* %accumbits, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else.118
  %94 = load i64, i64* %i, align 8
  %95 = load i64, i64* %size_a, align 8
  %cmp119 = icmp slt i64 %94, %95
  br i1 %cmp119, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %96 = load i64, i64* %i, align 8
  %97 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit121 = getelementptr inbounds %struct._longobject, %struct._longobject* %97, i32 0, i32 1
  %arrayidx122 = getelementptr [1 x i32], [1 x i32]* %ob_digit121, i32 0, i64 %96
  %98 = load i32, i32* %arrayidx122, align 4
  %conv123 = zext i32 %98 to i64
  %99 = load i32, i32* %accumbits, align 4
  %sh_prom = zext i32 %99 to i64
  %shl = shl i64 %conv123, %sh_prom
  %100 = load i64, i64* %accum, align 8
  %or = or i64 %100, %shl
  store i64 %or, i64* %accum, align 8
  %101 = load i32, i32* %accumbits, align 4
  %add124 = add i32 %101, 30
  store i32 %add124, i32* %accumbits, align 4
  br label %do.body.125

do.body.125:                                      ; preds = %cond.end.149, %for.body
  %102 = load i64, i64* %accum, align 8
  %103 = load i32, i32* %base.addr, align 4
  %sub126 = sub i32 %103, 1
  %conv127 = sext i32 %sub126 to i64
  %and128 = and i64 %102, %conv127
  %conv129 = trunc i64 %and128 to i8
  store i8 %conv129, i8* %cdigit, align 1
  %104 = load i8, i8* %cdigit, align 1
  %conv130 = sext i8 %104 to i32
  %cmp131 = icmp slt i32 %conv130, 10
  %cond133 = select i1 %cmp131, i32 48, i32 87
  %105 = load i8, i8* %cdigit, align 1
  %conv134 = sext i8 %105 to i32
  %add135 = add i32 %conv134, %cond133
  %conv136 = trunc i32 %add135 to i8
  store i8 %conv136, i8* %cdigit, align 1
  %106 = load i8, i8* %cdigit, align 1
  %107 = load i8*, i8** %p, align 8
  %incdec.ptr137 = getelementptr i8, i8* %107, i32 -1
  store i8* %incdec.ptr137, i8** %p, align 8
  store i8 %106, i8* %incdec.ptr137, align 1
  %108 = load i32, i32* %bits, align 4
  %109 = load i32, i32* %accumbits, align 4
  %sub138 = sub i32 %109, %108
  store i32 %sub138, i32* %accumbits, align 4
  %110 = load i32, i32* %bits, align 4
  %111 = load i64, i64* %accum, align 8
  %sh_prom139 = zext i32 %110 to i64
  %shr = lshr i64 %111, %sh_prom139
  store i64 %shr, i64* %accum, align 8
  br label %do.cond

do.cond:                                          ; preds = %do.body.125
  %112 = load i64, i64* %i, align 8
  %113 = load i64, i64* %size_a, align 8
  %sub140 = sub i64 %113, 1
  %cmp141 = icmp slt i64 %112, %sub140
  br i1 %cmp141, label %cond.true.143, label %cond.false.146

cond.true.143:                                    ; preds = %do.cond
  %114 = load i32, i32* %accumbits, align 4
  %115 = load i32, i32* %bits, align 4
  %cmp144 = icmp sge i32 %114, %115
  %conv145 = zext i1 %cmp144 to i32
  br label %cond.end.149

cond.false.146:                                   ; preds = %do.cond
  %116 = load i64, i64* %accum, align 8
  %cmp147 = icmp ugt i64 %116, 0
  %conv148 = zext i1 %cmp147 to i32
  br label %cond.end.149

cond.end.149:                                     ; preds = %cond.false.146, %cond.true.143
  %cond150 = phi i32 [ %conv145, %cond.true.143 ], [ %conv148, %cond.false.146 ]
  %tobool151 = icmp ne i32 %cond150, 0
  br i1 %tobool151, label %do.body.125, label %do.end

do.end:                                           ; preds = %cond.end.149
  br label %for.inc

for.inc:                                          ; preds = %do.end
  %117 = load i64, i64* %i, align 8
  %inc = add i64 %117, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.152

if.end.152:                                       ; preds = %for.end, %if.then.117
  %118 = load i32, i32* %alternate.addr, align 4
  %tobool153 = icmp ne i32 %118, 0
  br i1 %tobool153, label %if.then.154, label %if.end.169

if.then.154:                                      ; preds = %if.end.152
  %119 = load i32, i32* %base.addr, align 4
  %cmp155 = icmp eq i32 %119, 16
  br i1 %cmp155, label %if.then.157, label %if.else.159

if.then.157:                                      ; preds = %if.then.154
  %120 = load i8*, i8** %p, align 8
  %incdec.ptr158 = getelementptr i8, i8* %120, i32 -1
  store i8* %incdec.ptr158, i8** %p, align 8
  store i8 120, i8* %incdec.ptr158, align 1
  br label %if.end.167

if.else.159:                                      ; preds = %if.then.154
  %121 = load i32, i32* %base.addr, align 4
  %cmp160 = icmp eq i32 %121, 8
  br i1 %cmp160, label %if.then.162, label %if.else.164

if.then.162:                                      ; preds = %if.else.159
  %122 = load i8*, i8** %p, align 8
  %incdec.ptr163 = getelementptr i8, i8* %122, i32 -1
  store i8* %incdec.ptr163, i8** %p, align 8
  store i8 111, i8* %incdec.ptr163, align 1
  br label %if.end.166

if.else.164:                                      ; preds = %if.else.159
  %123 = load i8*, i8** %p, align 8
  %incdec.ptr165 = getelementptr i8, i8* %123, i32 -1
  store i8* %incdec.ptr165, i8** %p, align 8
  store i8 98, i8* %incdec.ptr165, align 1
  br label %if.end.166

if.end.166:                                       ; preds = %if.else.164, %if.then.162
  br label %if.end.167

if.end.167:                                       ; preds = %if.end.166, %if.then.157
  %124 = load i8*, i8** %p, align 8
  %incdec.ptr168 = getelementptr i8, i8* %124, i32 -1
  store i8* %incdec.ptr168, i8** %p, align 8
  store i8 48, i8* %incdec.ptr168, align 1
  br label %if.end.169

if.end.169:                                       ; preds = %if.end.167, %if.end.152
  %125 = load i32, i32* %negative, align 4
  %tobool170 = icmp ne i32 %125, 0
  br i1 %tobool170, label %if.then.171, label %if.end.173

if.then.171:                                      ; preds = %if.end.169
  %126 = load i8*, i8** %p, align 8
  %incdec.ptr172 = getelementptr i8, i8* %126, i32 -1
  store i8* %incdec.ptr172, i8** %p, align 8
  store i8 45, i8* %incdec.ptr172, align 1
  br label %if.end.173

if.end.173:                                       ; preds = %if.then.171, %if.end.169
  %127 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool174 = icmp ne %struct._PyUnicodeWriter* %127, null
  br i1 %tobool174, label %if.then.175, label %if.else.176

if.then.175:                                      ; preds = %if.end.173
  br label %if.end.177

if.else.176:                                      ; preds = %if.end.173
  br label %if.end.177

if.end.177:                                       ; preds = %if.else.176, %if.then.175
  br label %do.end.179

do.end.179:                                       ; preds = %if.end.177
  br label %if.end.468

if.else.180:                                      ; preds = %if.end.58
  %128 = load i32, i32* %kind, align 4
  %cmp181 = icmp eq i32 %128, 2
  br i1 %cmp181, label %if.then.183, label %if.else.325

if.then.183:                                      ; preds = %if.else.180
  br label %do.body.185

do.body.185:                                      ; preds = %if.then.183
  %129 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool186 = icmp ne %struct._PyUnicodeWriter* %129, null
  br i1 %tobool186, label %if.then.187, label %if.else.218

if.then.187:                                      ; preds = %do.body.185
  %130 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer188 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %130, i32 0, i32 0
  %131 = load %struct._object*, %struct._object** %buffer188, align 8
  %132 = bitcast %struct._object* %131 to %struct.PyASCIIObject*
  %state189 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %132, i32 0, i32 3
  %133 = bitcast %struct.anon* %state189 to i32*
  %bf.load190 = load i32, i32* %133, align 4
  %bf.lshr191 = lshr i32 %bf.load190, 5
  %bf.clear192 = and i32 %bf.lshr191, 1
  %tobool193 = icmp ne i32 %bf.clear192, 0
  br i1 %tobool193, label %cond.true.194, label %cond.false.209

cond.true.194:                                    ; preds = %if.then.187
  %134 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer195 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %134, i32 0, i32 0
  %135 = load %struct._object*, %struct._object** %buffer195, align 8
  %136 = bitcast %struct._object* %135 to %struct.PyASCIIObject*
  %state196 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %136, i32 0, i32 3
  %137 = bitcast %struct.anon* %state196 to i32*
  %bf.load197 = load i32, i32* %137, align 4
  %bf.lshr198 = lshr i32 %bf.load197, 6
  %bf.clear199 = and i32 %bf.lshr198, 1
  %tobool200 = icmp ne i32 %bf.clear199, 0
  br i1 %tobool200, label %cond.true.201, label %cond.false.204

cond.true.201:                                    ; preds = %cond.true.194
  %138 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer202 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %138, i32 0, i32 0
  %139 = load %struct._object*, %struct._object** %buffer202, align 8
  %140 = bitcast %struct._object* %139 to %struct.PyASCIIObject*
  %add.ptr203 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %140, i64 1
  %141 = bitcast %struct.PyASCIIObject* %add.ptr203 to i8*
  br label %cond.end.207

cond.false.204:                                   ; preds = %cond.true.194
  %142 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer205 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %142, i32 0, i32 0
  %143 = load %struct._object*, %struct._object** %buffer205, align 8
  %144 = bitcast %struct._object* %143 to %struct.PyCompactUnicodeObject*
  %add.ptr206 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %144, i64 1
  %145 = bitcast %struct.PyCompactUnicodeObject* %add.ptr206 to i8*
  br label %cond.end.207

cond.end.207:                                     ; preds = %cond.false.204, %cond.true.201
  %cond208 = phi i8* [ %141, %cond.true.201 ], [ %145, %cond.false.204 ]
  br label %cond.end.213

cond.false.209:                                   ; preds = %if.then.187
  %146 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer210 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %146, i32 0, i32 0
  %147 = load %struct._object*, %struct._object** %buffer210, align 8
  %148 = bitcast %struct._object* %147 to %struct.PyUnicodeObject*
  %data211 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %148, i32 0, i32 1
  %any212 = bitcast %union.anon* %data211 to i8**
  %149 = load i8*, i8** %any212, align 8
  br label %cond.end.213

cond.end.213:                                     ; preds = %cond.false.209, %cond.end.207
  %cond214 = phi i8* [ %cond208, %cond.end.207 ], [ %149, %cond.false.209 ]
  %150 = bitcast i8* %cond214 to i16*
  %151 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos215 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %151, i32 0, i32 5
  %152 = load i64, i64* %pos215, align 8
  %add.ptr216 = getelementptr i16, i16* %150, i64 %152
  %153 = load i64, i64* %sz, align 8
  %add.ptr217 = getelementptr i16, i16* %add.ptr216, i64 %153
  store i16* %add.ptr217, i16** %p184, align 8
  br label %if.end.242

if.else.218:                                      ; preds = %do.body.185
  %154 = load %struct._object*, %struct._object** %v, align 8
  %155 = bitcast %struct._object* %154 to %struct.PyASCIIObject*
  %state219 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %155, i32 0, i32 3
  %156 = bitcast %struct.anon* %state219 to i32*
  %bf.load220 = load i32, i32* %156, align 4
  %bf.lshr221 = lshr i32 %bf.load220, 5
  %bf.clear222 = and i32 %bf.lshr221, 1
  %tobool223 = icmp ne i32 %bf.clear222, 0
  br i1 %tobool223, label %cond.true.224, label %cond.false.236

cond.true.224:                                    ; preds = %if.else.218
  %157 = load %struct._object*, %struct._object** %v, align 8
  %158 = bitcast %struct._object* %157 to %struct.PyASCIIObject*
  %state225 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %158, i32 0, i32 3
  %159 = bitcast %struct.anon* %state225 to i32*
  %bf.load226 = load i32, i32* %159, align 4
  %bf.lshr227 = lshr i32 %bf.load226, 6
  %bf.clear228 = and i32 %bf.lshr227, 1
  %tobool229 = icmp ne i32 %bf.clear228, 0
  br i1 %tobool229, label %cond.true.230, label %cond.false.232

cond.true.230:                                    ; preds = %cond.true.224
  %160 = load %struct._object*, %struct._object** %v, align 8
  %161 = bitcast %struct._object* %160 to %struct.PyASCIIObject*
  %add.ptr231 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %161, i64 1
  %162 = bitcast %struct.PyASCIIObject* %add.ptr231 to i8*
  br label %cond.end.234

cond.false.232:                                   ; preds = %cond.true.224
  %163 = load %struct._object*, %struct._object** %v, align 8
  %164 = bitcast %struct._object* %163 to %struct.PyCompactUnicodeObject*
  %add.ptr233 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %164, i64 1
  %165 = bitcast %struct.PyCompactUnicodeObject* %add.ptr233 to i8*
  br label %cond.end.234

cond.end.234:                                     ; preds = %cond.false.232, %cond.true.230
  %cond235 = phi i8* [ %162, %cond.true.230 ], [ %165, %cond.false.232 ]
  br label %cond.end.239

cond.false.236:                                   ; preds = %if.else.218
  %166 = load %struct._object*, %struct._object** %v, align 8
  %167 = bitcast %struct._object* %166 to %struct.PyUnicodeObject*
  %data237 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %167, i32 0, i32 1
  %any238 = bitcast %union.anon* %data237 to i8**
  %168 = load i8*, i8** %any238, align 8
  br label %cond.end.239

cond.end.239:                                     ; preds = %cond.false.236, %cond.end.234
  %cond240 = phi i8* [ %cond235, %cond.end.234 ], [ %168, %cond.false.236 ]
  %169 = bitcast i8* %cond240 to i16*
  %170 = load i64, i64* %sz, align 8
  %add.ptr241 = getelementptr i16, i16* %169, i64 %170
  store i16* %add.ptr241, i16** %p184, align 8
  br label %if.end.242

if.end.242:                                       ; preds = %cond.end.239, %cond.end.213
  %171 = load i64, i64* %size_a, align 8
  %cmp243 = icmp eq i64 %171, 0
  br i1 %cmp243, label %if.then.245, label %if.else.247

if.then.245:                                      ; preds = %if.end.242
  %172 = load i16*, i16** %p184, align 8
  %incdec.ptr246 = getelementptr i16, i16* %172, i32 -1
  store i16* %incdec.ptr246, i16** %p184, align 8
  store i16 48, i16* %incdec.ptr246, align 2
  br label %if.end.297

if.else.247:                                      ; preds = %if.end.242
  store i64 0, i64* %accum248, align 8
  store i32 0, i32* %accumbits249, align 4
  store i64 0, i64* %i250, align 8
  br label %for.cond.251

for.cond.251:                                     ; preds = %for.inc.294, %if.else.247
  %173 = load i64, i64* %i250, align 8
  %174 = load i64, i64* %size_a, align 8
  %cmp252 = icmp slt i64 %173, %174
  br i1 %cmp252, label %for.body.254, label %for.end.296

for.body.254:                                     ; preds = %for.cond.251
  %175 = load i64, i64* %i250, align 8
  %176 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit255 = getelementptr inbounds %struct._longobject, %struct._longobject* %176, i32 0, i32 1
  %arrayidx256 = getelementptr [1 x i32], [1 x i32]* %ob_digit255, i32 0, i64 %175
  %177 = load i32, i32* %arrayidx256, align 4
  %conv257 = zext i32 %177 to i64
  %178 = load i32, i32* %accumbits249, align 4
  %sh_prom258 = zext i32 %178 to i64
  %shl259 = shl i64 %conv257, %sh_prom258
  %179 = load i64, i64* %accum248, align 8
  %or260 = or i64 %179, %shl259
  store i64 %or260, i64* %accum248, align 8
  %180 = load i32, i32* %accumbits249, align 4
  %add261 = add i32 %180, 30
  store i32 %add261, i32* %accumbits249, align 4
  br label %do.body.262

do.body.262:                                      ; preds = %cond.end.290, %for.body.254
  %181 = load i64, i64* %accum248, align 8
  %182 = load i32, i32* %base.addr, align 4
  %sub264 = sub i32 %182, 1
  %conv265 = sext i32 %sub264 to i64
  %and266 = and i64 %181, %conv265
  %conv267 = trunc i64 %and266 to i8
  store i8 %conv267, i8* %cdigit263, align 1
  %183 = load i8, i8* %cdigit263, align 1
  %conv268 = sext i8 %183 to i32
  %cmp269 = icmp slt i32 %conv268, 10
  %cond271 = select i1 %cmp269, i32 48, i32 87
  %184 = load i8, i8* %cdigit263, align 1
  %conv272 = sext i8 %184 to i32
  %add273 = add i32 %conv272, %cond271
  %conv274 = trunc i32 %add273 to i8
  store i8 %conv274, i8* %cdigit263, align 1
  %185 = load i8, i8* %cdigit263, align 1
  %conv275 = sext i8 %185 to i16
  %186 = load i16*, i16** %p184, align 8
  %incdec.ptr276 = getelementptr i16, i16* %186, i32 -1
  store i16* %incdec.ptr276, i16** %p184, align 8
  store i16 %conv275, i16* %incdec.ptr276, align 2
  %187 = load i32, i32* %bits, align 4
  %188 = load i32, i32* %accumbits249, align 4
  %sub277 = sub i32 %188, %187
  store i32 %sub277, i32* %accumbits249, align 4
  %189 = load i32, i32* %bits, align 4
  %190 = load i64, i64* %accum248, align 8
  %sh_prom278 = zext i32 %189 to i64
  %shr279 = lshr i64 %190, %sh_prom278
  store i64 %shr279, i64* %accum248, align 8
  br label %do.cond.280

do.cond.280:                                      ; preds = %do.body.262
  %191 = load i64, i64* %i250, align 8
  %192 = load i64, i64* %size_a, align 8
  %sub281 = sub i64 %192, 1
  %cmp282 = icmp slt i64 %191, %sub281
  br i1 %cmp282, label %cond.true.284, label %cond.false.287

cond.true.284:                                    ; preds = %do.cond.280
  %193 = load i32, i32* %accumbits249, align 4
  %194 = load i32, i32* %bits, align 4
  %cmp285 = icmp sge i32 %193, %194
  %conv286 = zext i1 %cmp285 to i32
  br label %cond.end.290

cond.false.287:                                   ; preds = %do.cond.280
  %195 = load i64, i64* %accum248, align 8
  %cmp288 = icmp ugt i64 %195, 0
  %conv289 = zext i1 %cmp288 to i32
  br label %cond.end.290

cond.end.290:                                     ; preds = %cond.false.287, %cond.true.284
  %cond291 = phi i32 [ %conv286, %cond.true.284 ], [ %conv289, %cond.false.287 ]
  %tobool292 = icmp ne i32 %cond291, 0
  br i1 %tobool292, label %do.body.262, label %do.end.293

do.end.293:                                       ; preds = %cond.end.290
  br label %for.inc.294

for.inc.294:                                      ; preds = %do.end.293
  %196 = load i64, i64* %i250, align 8
  %inc295 = add i64 %196, 1
  store i64 %inc295, i64* %i250, align 8
  br label %for.cond.251

for.end.296:                                      ; preds = %for.cond.251
  br label %if.end.297

if.end.297:                                       ; preds = %for.end.296, %if.then.245
  %197 = load i32, i32* %alternate.addr, align 4
  %tobool298 = icmp ne i32 %197, 0
  br i1 %tobool298, label %if.then.299, label %if.end.314

if.then.299:                                      ; preds = %if.end.297
  %198 = load i32, i32* %base.addr, align 4
  %cmp300 = icmp eq i32 %198, 16
  br i1 %cmp300, label %if.then.302, label %if.else.304

if.then.302:                                      ; preds = %if.then.299
  %199 = load i16*, i16** %p184, align 8
  %incdec.ptr303 = getelementptr i16, i16* %199, i32 -1
  store i16* %incdec.ptr303, i16** %p184, align 8
  store i16 120, i16* %incdec.ptr303, align 2
  br label %if.end.312

if.else.304:                                      ; preds = %if.then.299
  %200 = load i32, i32* %base.addr, align 4
  %cmp305 = icmp eq i32 %200, 8
  br i1 %cmp305, label %if.then.307, label %if.else.309

if.then.307:                                      ; preds = %if.else.304
  %201 = load i16*, i16** %p184, align 8
  %incdec.ptr308 = getelementptr i16, i16* %201, i32 -1
  store i16* %incdec.ptr308, i16** %p184, align 8
  store i16 111, i16* %incdec.ptr308, align 2
  br label %if.end.311

if.else.309:                                      ; preds = %if.else.304
  %202 = load i16*, i16** %p184, align 8
  %incdec.ptr310 = getelementptr i16, i16* %202, i32 -1
  store i16* %incdec.ptr310, i16** %p184, align 8
  store i16 98, i16* %incdec.ptr310, align 2
  br label %if.end.311

if.end.311:                                       ; preds = %if.else.309, %if.then.307
  br label %if.end.312

if.end.312:                                       ; preds = %if.end.311, %if.then.302
  %203 = load i16*, i16** %p184, align 8
  %incdec.ptr313 = getelementptr i16, i16* %203, i32 -1
  store i16* %incdec.ptr313, i16** %p184, align 8
  store i16 48, i16* %incdec.ptr313, align 2
  br label %if.end.314

if.end.314:                                       ; preds = %if.end.312, %if.end.297
  %204 = load i32, i32* %negative, align 4
  %tobool315 = icmp ne i32 %204, 0
  br i1 %tobool315, label %if.then.316, label %if.end.318

if.then.316:                                      ; preds = %if.end.314
  %205 = load i16*, i16** %p184, align 8
  %incdec.ptr317 = getelementptr i16, i16* %205, i32 -1
  store i16* %incdec.ptr317, i16** %p184, align 8
  store i16 45, i16* %incdec.ptr317, align 2
  br label %if.end.318

if.end.318:                                       ; preds = %if.then.316, %if.end.314
  %206 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool319 = icmp ne %struct._PyUnicodeWriter* %206, null
  br i1 %tobool319, label %if.then.320, label %if.else.321

if.then.320:                                      ; preds = %if.end.318
  br label %if.end.322

if.else.321:                                      ; preds = %if.end.318
  br label %if.end.322

if.end.322:                                       ; preds = %if.else.321, %if.then.320
  br label %do.end.324

do.end.324:                                       ; preds = %if.end.322
  br label %if.end.467

if.else.325:                                      ; preds = %if.else.180
  br label %do.body.327

do.body.327:                                      ; preds = %if.else.325
  %207 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool328 = icmp ne %struct._PyUnicodeWriter* %207, null
  br i1 %tobool328, label %if.then.329, label %if.else.360

if.then.329:                                      ; preds = %do.body.327
  %208 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer330 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %208, i32 0, i32 0
  %209 = load %struct._object*, %struct._object** %buffer330, align 8
  %210 = bitcast %struct._object* %209 to %struct.PyASCIIObject*
  %state331 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %210, i32 0, i32 3
  %211 = bitcast %struct.anon* %state331 to i32*
  %bf.load332 = load i32, i32* %211, align 4
  %bf.lshr333 = lshr i32 %bf.load332, 5
  %bf.clear334 = and i32 %bf.lshr333, 1
  %tobool335 = icmp ne i32 %bf.clear334, 0
  br i1 %tobool335, label %cond.true.336, label %cond.false.351

cond.true.336:                                    ; preds = %if.then.329
  %212 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer337 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %212, i32 0, i32 0
  %213 = load %struct._object*, %struct._object** %buffer337, align 8
  %214 = bitcast %struct._object* %213 to %struct.PyASCIIObject*
  %state338 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %214, i32 0, i32 3
  %215 = bitcast %struct.anon* %state338 to i32*
  %bf.load339 = load i32, i32* %215, align 4
  %bf.lshr340 = lshr i32 %bf.load339, 6
  %bf.clear341 = and i32 %bf.lshr340, 1
  %tobool342 = icmp ne i32 %bf.clear341, 0
  br i1 %tobool342, label %cond.true.343, label %cond.false.346

cond.true.343:                                    ; preds = %cond.true.336
  %216 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer344 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %216, i32 0, i32 0
  %217 = load %struct._object*, %struct._object** %buffer344, align 8
  %218 = bitcast %struct._object* %217 to %struct.PyASCIIObject*
  %add.ptr345 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %218, i64 1
  %219 = bitcast %struct.PyASCIIObject* %add.ptr345 to i8*
  br label %cond.end.349

cond.false.346:                                   ; preds = %cond.true.336
  %220 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer347 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %220, i32 0, i32 0
  %221 = load %struct._object*, %struct._object** %buffer347, align 8
  %222 = bitcast %struct._object* %221 to %struct.PyCompactUnicodeObject*
  %add.ptr348 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %222, i64 1
  %223 = bitcast %struct.PyCompactUnicodeObject* %add.ptr348 to i8*
  br label %cond.end.349

cond.end.349:                                     ; preds = %cond.false.346, %cond.true.343
  %cond350 = phi i8* [ %219, %cond.true.343 ], [ %223, %cond.false.346 ]
  br label %cond.end.355

cond.false.351:                                   ; preds = %if.then.329
  %224 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %buffer352 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %224, i32 0, i32 0
  %225 = load %struct._object*, %struct._object** %buffer352, align 8
  %226 = bitcast %struct._object* %225 to %struct.PyUnicodeObject*
  %data353 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %226, i32 0, i32 1
  %any354 = bitcast %union.anon* %data353 to i8**
  %227 = load i8*, i8** %any354, align 8
  br label %cond.end.355

cond.end.355:                                     ; preds = %cond.false.351, %cond.end.349
  %cond356 = phi i8* [ %cond350, %cond.end.349 ], [ %227, %cond.false.351 ]
  %228 = bitcast i8* %cond356 to i32*
  %229 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos357 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %229, i32 0, i32 5
  %230 = load i64, i64* %pos357, align 8
  %add.ptr358 = getelementptr i32, i32* %228, i64 %230
  %231 = load i64, i64* %sz, align 8
  %add.ptr359 = getelementptr i32, i32* %add.ptr358, i64 %231
  store i32* %add.ptr359, i32** %p326, align 8
  br label %if.end.384

if.else.360:                                      ; preds = %do.body.327
  %232 = load %struct._object*, %struct._object** %v, align 8
  %233 = bitcast %struct._object* %232 to %struct.PyASCIIObject*
  %state361 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %233, i32 0, i32 3
  %234 = bitcast %struct.anon* %state361 to i32*
  %bf.load362 = load i32, i32* %234, align 4
  %bf.lshr363 = lshr i32 %bf.load362, 5
  %bf.clear364 = and i32 %bf.lshr363, 1
  %tobool365 = icmp ne i32 %bf.clear364, 0
  br i1 %tobool365, label %cond.true.366, label %cond.false.378

cond.true.366:                                    ; preds = %if.else.360
  %235 = load %struct._object*, %struct._object** %v, align 8
  %236 = bitcast %struct._object* %235 to %struct.PyASCIIObject*
  %state367 = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %236, i32 0, i32 3
  %237 = bitcast %struct.anon* %state367 to i32*
  %bf.load368 = load i32, i32* %237, align 4
  %bf.lshr369 = lshr i32 %bf.load368, 6
  %bf.clear370 = and i32 %bf.lshr369, 1
  %tobool371 = icmp ne i32 %bf.clear370, 0
  br i1 %tobool371, label %cond.true.372, label %cond.false.374

cond.true.372:                                    ; preds = %cond.true.366
  %238 = load %struct._object*, %struct._object** %v, align 8
  %239 = bitcast %struct._object* %238 to %struct.PyASCIIObject*
  %add.ptr373 = getelementptr %struct.PyASCIIObject, %struct.PyASCIIObject* %239, i64 1
  %240 = bitcast %struct.PyASCIIObject* %add.ptr373 to i8*
  br label %cond.end.376

cond.false.374:                                   ; preds = %cond.true.366
  %241 = load %struct._object*, %struct._object** %v, align 8
  %242 = bitcast %struct._object* %241 to %struct.PyCompactUnicodeObject*
  %add.ptr375 = getelementptr %struct.PyCompactUnicodeObject, %struct.PyCompactUnicodeObject* %242, i64 1
  %243 = bitcast %struct.PyCompactUnicodeObject* %add.ptr375 to i8*
  br label %cond.end.376

cond.end.376:                                     ; preds = %cond.false.374, %cond.true.372
  %cond377 = phi i8* [ %240, %cond.true.372 ], [ %243, %cond.false.374 ]
  br label %cond.end.381

cond.false.378:                                   ; preds = %if.else.360
  %244 = load %struct._object*, %struct._object** %v, align 8
  %245 = bitcast %struct._object* %244 to %struct.PyUnicodeObject*
  %data379 = getelementptr inbounds %struct.PyUnicodeObject, %struct.PyUnicodeObject* %245, i32 0, i32 1
  %any380 = bitcast %union.anon* %data379 to i8**
  %246 = load i8*, i8** %any380, align 8
  br label %cond.end.381

cond.end.381:                                     ; preds = %cond.false.378, %cond.end.376
  %cond382 = phi i8* [ %cond377, %cond.end.376 ], [ %246, %cond.false.378 ]
  %247 = bitcast i8* %cond382 to i32*
  %248 = load i64, i64* %sz, align 8
  %add.ptr383 = getelementptr i32, i32* %247, i64 %248
  store i32* %add.ptr383, i32** %p326, align 8
  br label %if.end.384

if.end.384:                                       ; preds = %cond.end.381, %cond.end.355
  %249 = load i64, i64* %size_a, align 8
  %cmp385 = icmp eq i64 %249, 0
  br i1 %cmp385, label %if.then.387, label %if.else.389

if.then.387:                                      ; preds = %if.end.384
  %250 = load i32*, i32** %p326, align 8
  %incdec.ptr388 = getelementptr i32, i32* %250, i32 -1
  store i32* %incdec.ptr388, i32** %p326, align 8
  store i32 48, i32* %incdec.ptr388, align 4
  br label %if.end.439

if.else.389:                                      ; preds = %if.end.384
  store i64 0, i64* %accum390, align 8
  store i32 0, i32* %accumbits391, align 4
  store i64 0, i64* %i392, align 8
  br label %for.cond.393

for.cond.393:                                     ; preds = %for.inc.436, %if.else.389
  %251 = load i64, i64* %i392, align 8
  %252 = load i64, i64* %size_a, align 8
  %cmp394 = icmp slt i64 %251, %252
  br i1 %cmp394, label %for.body.396, label %for.end.438

for.body.396:                                     ; preds = %for.cond.393
  %253 = load i64, i64* %i392, align 8
  %254 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit397 = getelementptr inbounds %struct._longobject, %struct._longobject* %254, i32 0, i32 1
  %arrayidx398 = getelementptr [1 x i32], [1 x i32]* %ob_digit397, i32 0, i64 %253
  %255 = load i32, i32* %arrayidx398, align 4
  %conv399 = zext i32 %255 to i64
  %256 = load i32, i32* %accumbits391, align 4
  %sh_prom400 = zext i32 %256 to i64
  %shl401 = shl i64 %conv399, %sh_prom400
  %257 = load i64, i64* %accum390, align 8
  %or402 = or i64 %257, %shl401
  store i64 %or402, i64* %accum390, align 8
  %258 = load i32, i32* %accumbits391, align 4
  %add403 = add i32 %258, 30
  store i32 %add403, i32* %accumbits391, align 4
  br label %do.body.404

do.body.404:                                      ; preds = %cond.end.432, %for.body.396
  %259 = load i64, i64* %accum390, align 8
  %260 = load i32, i32* %base.addr, align 4
  %sub406 = sub i32 %260, 1
  %conv407 = sext i32 %sub406 to i64
  %and408 = and i64 %259, %conv407
  %conv409 = trunc i64 %and408 to i8
  store i8 %conv409, i8* %cdigit405, align 1
  %261 = load i8, i8* %cdigit405, align 1
  %conv410 = sext i8 %261 to i32
  %cmp411 = icmp slt i32 %conv410, 10
  %cond413 = select i1 %cmp411, i32 48, i32 87
  %262 = load i8, i8* %cdigit405, align 1
  %conv414 = sext i8 %262 to i32
  %add415 = add i32 %conv414, %cond413
  %conv416 = trunc i32 %add415 to i8
  store i8 %conv416, i8* %cdigit405, align 1
  %263 = load i8, i8* %cdigit405, align 1
  %conv417 = sext i8 %263 to i32
  %264 = load i32*, i32** %p326, align 8
  %incdec.ptr418 = getelementptr i32, i32* %264, i32 -1
  store i32* %incdec.ptr418, i32** %p326, align 8
  store i32 %conv417, i32* %incdec.ptr418, align 4
  %265 = load i32, i32* %bits, align 4
  %266 = load i32, i32* %accumbits391, align 4
  %sub419 = sub i32 %266, %265
  store i32 %sub419, i32* %accumbits391, align 4
  %267 = load i32, i32* %bits, align 4
  %268 = load i64, i64* %accum390, align 8
  %sh_prom420 = zext i32 %267 to i64
  %shr421 = lshr i64 %268, %sh_prom420
  store i64 %shr421, i64* %accum390, align 8
  br label %do.cond.422

do.cond.422:                                      ; preds = %do.body.404
  %269 = load i64, i64* %i392, align 8
  %270 = load i64, i64* %size_a, align 8
  %sub423 = sub i64 %270, 1
  %cmp424 = icmp slt i64 %269, %sub423
  br i1 %cmp424, label %cond.true.426, label %cond.false.429

cond.true.426:                                    ; preds = %do.cond.422
  %271 = load i32, i32* %accumbits391, align 4
  %272 = load i32, i32* %bits, align 4
  %cmp427 = icmp sge i32 %271, %272
  %conv428 = zext i1 %cmp427 to i32
  br label %cond.end.432

cond.false.429:                                   ; preds = %do.cond.422
  %273 = load i64, i64* %accum390, align 8
  %cmp430 = icmp ugt i64 %273, 0
  %conv431 = zext i1 %cmp430 to i32
  br label %cond.end.432

cond.end.432:                                     ; preds = %cond.false.429, %cond.true.426
  %cond433 = phi i32 [ %conv428, %cond.true.426 ], [ %conv431, %cond.false.429 ]
  %tobool434 = icmp ne i32 %cond433, 0
  br i1 %tobool434, label %do.body.404, label %do.end.435

do.end.435:                                       ; preds = %cond.end.432
  br label %for.inc.436

for.inc.436:                                      ; preds = %do.end.435
  %274 = load i64, i64* %i392, align 8
  %inc437 = add i64 %274, 1
  store i64 %inc437, i64* %i392, align 8
  br label %for.cond.393

for.end.438:                                      ; preds = %for.cond.393
  br label %if.end.439

if.end.439:                                       ; preds = %for.end.438, %if.then.387
  %275 = load i32, i32* %alternate.addr, align 4
  %tobool440 = icmp ne i32 %275, 0
  br i1 %tobool440, label %if.then.441, label %if.end.456

if.then.441:                                      ; preds = %if.end.439
  %276 = load i32, i32* %base.addr, align 4
  %cmp442 = icmp eq i32 %276, 16
  br i1 %cmp442, label %if.then.444, label %if.else.446

if.then.444:                                      ; preds = %if.then.441
  %277 = load i32*, i32** %p326, align 8
  %incdec.ptr445 = getelementptr i32, i32* %277, i32 -1
  store i32* %incdec.ptr445, i32** %p326, align 8
  store i32 120, i32* %incdec.ptr445, align 4
  br label %if.end.454

if.else.446:                                      ; preds = %if.then.441
  %278 = load i32, i32* %base.addr, align 4
  %cmp447 = icmp eq i32 %278, 8
  br i1 %cmp447, label %if.then.449, label %if.else.451

if.then.449:                                      ; preds = %if.else.446
  %279 = load i32*, i32** %p326, align 8
  %incdec.ptr450 = getelementptr i32, i32* %279, i32 -1
  store i32* %incdec.ptr450, i32** %p326, align 8
  store i32 111, i32* %incdec.ptr450, align 4
  br label %if.end.453

if.else.451:                                      ; preds = %if.else.446
  %280 = load i32*, i32** %p326, align 8
  %incdec.ptr452 = getelementptr i32, i32* %280, i32 -1
  store i32* %incdec.ptr452, i32** %p326, align 8
  store i32 98, i32* %incdec.ptr452, align 4
  br label %if.end.453

if.end.453:                                       ; preds = %if.else.451, %if.then.449
  br label %if.end.454

if.end.454:                                       ; preds = %if.end.453, %if.then.444
  %281 = load i32*, i32** %p326, align 8
  %incdec.ptr455 = getelementptr i32, i32* %281, i32 -1
  store i32* %incdec.ptr455, i32** %p326, align 8
  store i32 48, i32* %incdec.ptr455, align 4
  br label %if.end.456

if.end.456:                                       ; preds = %if.end.454, %if.end.439
  %282 = load i32, i32* %negative, align 4
  %tobool457 = icmp ne i32 %282, 0
  br i1 %tobool457, label %if.then.458, label %if.end.460

if.then.458:                                      ; preds = %if.end.456
  %283 = load i32*, i32** %p326, align 8
  %incdec.ptr459 = getelementptr i32, i32* %283, i32 -1
  store i32* %incdec.ptr459, i32** %p326, align 8
  store i32 45, i32* %incdec.ptr459, align 4
  br label %if.end.460

if.end.460:                                       ; preds = %if.then.458, %if.end.456
  %284 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool461 = icmp ne %struct._PyUnicodeWriter* %284, null
  br i1 %tobool461, label %if.then.462, label %if.else.463

if.then.462:                                      ; preds = %if.end.460
  br label %if.end.464

if.else.463:                                      ; preds = %if.end.460
  br label %if.end.464

if.end.464:                                       ; preds = %if.else.463, %if.then.462
  br label %do.end.466

do.end.466:                                       ; preds = %if.end.464
  br label %if.end.467

if.end.467:                                       ; preds = %do.end.466, %do.end.324
  br label %if.end.468

if.end.468:                                       ; preds = %if.end.467, %do.end.179
  %285 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %tobool469 = icmp ne %struct._PyUnicodeWriter* %285, null
  br i1 %tobool469, label %if.then.470, label %if.else.473

if.then.470:                                      ; preds = %if.end.468
  %286 = load i64, i64* %sz, align 8
  %287 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %pos471 = getelementptr inbounds %struct._PyUnicodeWriter, %struct._PyUnicodeWriter* %287, i32 0, i32 5
  %288 = load i64, i64* %pos471, align 8
  %add472 = add i64 %288, %286
  store i64 %add472, i64* %pos471, align 8
  br label %if.end.474

if.else.473:                                      ; preds = %if.end.468
  %289 = load %struct._object*, %struct._object** %v, align 8
  %290 = load %struct._object**, %struct._object*** %p_output.addr, align 8
  store %struct._object* %289, %struct._object** %290, align 8
  br label %if.end.474

if.end.474:                                       ; preds = %if.else.473, %if.then.470
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.474, %if.then.56, %if.then.49, %if.then.14, %if.then
  %291 = load i32, i32* %retval
  ret i32 %291
}

; Function Attrs: nounwind uwtable
define i32 @_PyLong_FormatWriter(%struct._PyUnicodeWriter* %writer, %struct._object* %obj, i32 %base, i32 %alternate) #0 {
entry:
  %retval = alloca i32, align 4
  %writer.addr = alloca %struct._PyUnicodeWriter*, align 8
  %obj.addr = alloca %struct._object*, align 8
  %base.addr = alloca i32, align 4
  %alternate.addr = alloca i32, align 4
  store %struct._PyUnicodeWriter* %writer, %struct._PyUnicodeWriter** %writer.addr, align 8
  store %struct._object* %obj, %struct._object** %obj.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  store i32 %alternate, i32* %alternate.addr, align 4
  %0 = load i32, i32* %base.addr, align 4
  %cmp = icmp eq i32 %0, 10
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %obj.addr, align 8
  %2 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %call = call i32 @long_to_decimal_string_internal(%struct._object* %1, %struct._object** null, %struct._PyUnicodeWriter* %2)
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %3 = load %struct._object*, %struct._object** %obj.addr, align 8
  %4 = load i32, i32* %base.addr, align 4
  %5 = load i32, i32* %alternate.addr, align 4
  %6 = load %struct._PyUnicodeWriter*, %struct._PyUnicodeWriter** %writer.addr, align 8
  %call1 = call i32 @long_format_binary(%struct._object* %3, i32 %4, i32 %5, %struct._object** null, %struct._PyUnicodeWriter* %6)
  store i32 %call1, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromString(i8* %str, i8** %pend, i32 %base) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %str.addr = alloca i8*, align 8
  %pend.addr = alloca i8**, align 8
  %base.addr = alloca i32, align 4
  %sign = alloca i32, align 4
  %error_if_nonzero = alloca i32, align 4
  %start = alloca i8*, align 8
  %orig_str = alloca i8*, align 8
  %z = alloca %struct._longobject*, align 8
  %strobj = alloca %struct._object*, align 8
  %slen = alloca i64, align 8
  %c = alloca i64, align 8
  %size_z = alloca i64, align 8
  %i = alloca i32, align 4
  %convwidth = alloca i32, align 4
  %convmultmax = alloca i64, align 8
  %convmult = alloca i64, align 8
  %pz = alloca i32*, align 8
  %pzstop = alloca i32*, align 8
  %scan = alloca i8*, align 8
  %convmax = alloca i64, align 8
  %i126 = alloca i32, align 4
  %next = alloca i64, align 8
  %tmp = alloca %struct._longobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp255 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp341 = alloca %struct._object*, align 8
  %_py_decref_tmp366 = alloca %struct._object*, align 8
  store i8* %str, i8** %str.addr, align 8
  store i8** %pend, i8*** %pend.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  store i32 1, i32* %sign, align 4
  store i32 0, i32* %error_if_nonzero, align 4
  %0 = load i8*, i8** %str.addr, align 8
  store i8* %0, i8** %orig_str, align 8
  store %struct._longobject* null, %struct._longobject** %z, align 8
  %1 = load i32, i32* %base.addr, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %base.addr, align 4
  %cmp1 = icmp slt i32 %2, 2
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* %base.addr, align 4
  %cmp2 = icmp sgt i32 %3, 36
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %4 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %5 = load i8*, i8** %str.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp3 = icmp ne i32 %conv, 0
  br i1 %cmp3, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %7 = load i8*, i8** %str.addr, align 8
  %8 = load i8, i8* %7, align 1
  %conv5 = sext i8 %8 to i32
  %and = and i32 %conv5, 255
  %conv6 = trunc i32 %and to i8
  %conv7 = zext i8 %conv6 to i32
  %and8 = and i32 %conv7, 255
  %conv9 = trunc i32 %and8 to i8
  %idxprom = zext i8 %conv9 to i64
  %arrayidx = getelementptr [256 x i32], [256 x i32]* @_Py_ctype_table, i32 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  %and10 = and i32 %9, 8
  %tobool = icmp ne i32 %and10, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %10 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %10, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %11 = load i8*, i8** %str.addr, align 8
  %incdec.ptr = getelementptr i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %str.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %12 = load i8*, i8** %str.addr, align 8
  %13 = load i8, i8* %12, align 1
  %conv11 = sext i8 %13 to i32
  %cmp12 = icmp eq i32 %conv11, 43
  br i1 %cmp12, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %while.end
  %14 = load i8*, i8** %str.addr, align 8
  %incdec.ptr15 = getelementptr i8, i8* %14, i32 1
  store i8* %incdec.ptr15, i8** %str.addr, align 8
  br label %if.end.22

if.else:                                          ; preds = %while.end
  %15 = load i8*, i8** %str.addr, align 8
  %16 = load i8, i8* %15, align 1
  %conv16 = sext i8 %16 to i32
  %cmp17 = icmp eq i32 %conv16, 45
  br i1 %cmp17, label %if.then.19, label %if.end.21

if.then.19:                                       ; preds = %if.else
  %17 = load i8*, i8** %str.addr, align 8
  %incdec.ptr20 = getelementptr i8, i8* %17, i32 1
  store i8* %incdec.ptr20, i8** %str.addr, align 8
  store i32 -1, i32* %sign, align 4
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.19, %if.else
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.then.14
  %18 = load i32, i32* %base.addr, align 4
  %cmp23 = icmp eq i32 %18, 0
  br i1 %cmp23, label %if.then.25, label %if.end.69

if.then.25:                                       ; preds = %if.end.22
  %19 = load i8*, i8** %str.addr, align 8
  %arrayidx26 = getelementptr i8, i8* %19, i64 0
  %20 = load i8, i8* %arrayidx26, align 1
  %conv27 = sext i8 %20 to i32
  %cmp28 = icmp ne i32 %conv27, 48
  br i1 %cmp28, label %if.then.30, label %if.else.31

if.then.30:                                       ; preds = %if.then.25
  store i32 10, i32* %base.addr, align 4
  br label %if.end.68

if.else.31:                                       ; preds = %if.then.25
  %21 = load i8*, i8** %str.addr, align 8
  %arrayidx32 = getelementptr i8, i8* %21, i64 1
  %22 = load i8, i8* %arrayidx32, align 1
  %conv33 = sext i8 %22 to i32
  %cmp34 = icmp eq i32 %conv33, 120
  br i1 %cmp34, label %if.then.41, label %lor.lhs.false.36

lor.lhs.false.36:                                 ; preds = %if.else.31
  %23 = load i8*, i8** %str.addr, align 8
  %arrayidx37 = getelementptr i8, i8* %23, i64 1
  %24 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %24 to i32
  %cmp39 = icmp eq i32 %conv38, 88
  br i1 %cmp39, label %if.then.41, label %if.else.42

if.then.41:                                       ; preds = %lor.lhs.false.36, %if.else.31
  store i32 16, i32* %base.addr, align 4
  br label %if.end.67

if.else.42:                                       ; preds = %lor.lhs.false.36
  %25 = load i8*, i8** %str.addr, align 8
  %arrayidx43 = getelementptr i8, i8* %25, i64 1
  %26 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %26 to i32
  %cmp45 = icmp eq i32 %conv44, 111
  br i1 %cmp45, label %if.then.52, label %lor.lhs.false.47

lor.lhs.false.47:                                 ; preds = %if.else.42
  %27 = load i8*, i8** %str.addr, align 8
  %arrayidx48 = getelementptr i8, i8* %27, i64 1
  %28 = load i8, i8* %arrayidx48, align 1
  %conv49 = sext i8 %28 to i32
  %cmp50 = icmp eq i32 %conv49, 79
  br i1 %cmp50, label %if.then.52, label %if.else.53

if.then.52:                                       ; preds = %lor.lhs.false.47, %if.else.42
  store i32 8, i32* %base.addr, align 4
  br label %if.end.66

if.else.53:                                       ; preds = %lor.lhs.false.47
  %29 = load i8*, i8** %str.addr, align 8
  %arrayidx54 = getelementptr i8, i8* %29, i64 1
  %30 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %30 to i32
  %cmp56 = icmp eq i32 %conv55, 98
  br i1 %cmp56, label %if.then.63, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %if.else.53
  %31 = load i8*, i8** %str.addr, align 8
  %arrayidx59 = getelementptr i8, i8* %31, i64 1
  %32 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %32 to i32
  %cmp61 = icmp eq i32 %conv60, 66
  br i1 %cmp61, label %if.then.63, label %if.else.64

if.then.63:                                       ; preds = %lor.lhs.false.58, %if.else.53
  store i32 2, i32* %base.addr, align 4
  br label %if.end.65

if.else.64:                                       ; preds = %lor.lhs.false.58
  store i32 1, i32* %error_if_nonzero, align 4
  store i32 10, i32* %base.addr, align 4
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.64, %if.then.63
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.then.52
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %if.then.41
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.then.30
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.68, %if.end.22
  %33 = load i8*, i8** %str.addr, align 8
  %arrayidx70 = getelementptr i8, i8* %33, i64 0
  %34 = load i8, i8* %arrayidx70, align 1
  %conv71 = sext i8 %34 to i32
  %cmp72 = icmp eq i32 %conv71, 48
  br i1 %cmp72, label %land.lhs.true.74, label %if.end.114

land.lhs.true.74:                                 ; preds = %if.end.69
  %35 = load i32, i32* %base.addr, align 4
  %cmp75 = icmp eq i32 %35, 16
  br i1 %cmp75, label %land.lhs.true.77, label %lor.lhs.false.87

land.lhs.true.77:                                 ; preds = %land.lhs.true.74
  %36 = load i8*, i8** %str.addr, align 8
  %arrayidx78 = getelementptr i8, i8* %36, i64 1
  %37 = load i8, i8* %arrayidx78, align 1
  %conv79 = sext i8 %37 to i32
  %cmp80 = icmp eq i32 %conv79, 120
  br i1 %cmp80, label %if.then.113, label %lor.lhs.false.82

lor.lhs.false.82:                                 ; preds = %land.lhs.true.77
  %38 = load i8*, i8** %str.addr, align 8
  %arrayidx83 = getelementptr i8, i8* %38, i64 1
  %39 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %39 to i32
  %cmp85 = icmp eq i32 %conv84, 88
  br i1 %cmp85, label %if.then.113, label %lor.lhs.false.87

lor.lhs.false.87:                                 ; preds = %lor.lhs.false.82, %land.lhs.true.74
  %40 = load i32, i32* %base.addr, align 4
  %cmp88 = icmp eq i32 %40, 8
  br i1 %cmp88, label %land.lhs.true.90, label %lor.lhs.false.100

land.lhs.true.90:                                 ; preds = %lor.lhs.false.87
  %41 = load i8*, i8** %str.addr, align 8
  %arrayidx91 = getelementptr i8, i8* %41, i64 1
  %42 = load i8, i8* %arrayidx91, align 1
  %conv92 = sext i8 %42 to i32
  %cmp93 = icmp eq i32 %conv92, 111
  br i1 %cmp93, label %if.then.113, label %lor.lhs.false.95

lor.lhs.false.95:                                 ; preds = %land.lhs.true.90
  %43 = load i8*, i8** %str.addr, align 8
  %arrayidx96 = getelementptr i8, i8* %43, i64 1
  %44 = load i8, i8* %arrayidx96, align 1
  %conv97 = sext i8 %44 to i32
  %cmp98 = icmp eq i32 %conv97, 79
  br i1 %cmp98, label %if.then.113, label %lor.lhs.false.100

lor.lhs.false.100:                                ; preds = %lor.lhs.false.95, %lor.lhs.false.87
  %45 = load i32, i32* %base.addr, align 4
  %cmp101 = icmp eq i32 %45, 2
  br i1 %cmp101, label %land.lhs.true.103, label %if.end.114

land.lhs.true.103:                                ; preds = %lor.lhs.false.100
  %46 = load i8*, i8** %str.addr, align 8
  %arrayidx104 = getelementptr i8, i8* %46, i64 1
  %47 = load i8, i8* %arrayidx104, align 1
  %conv105 = sext i8 %47 to i32
  %cmp106 = icmp eq i32 %conv105, 98
  br i1 %cmp106, label %if.then.113, label %lor.lhs.false.108

lor.lhs.false.108:                                ; preds = %land.lhs.true.103
  %48 = load i8*, i8** %str.addr, align 8
  %arrayidx109 = getelementptr i8, i8* %48, i64 1
  %49 = load i8, i8* %arrayidx109, align 1
  %conv110 = sext i8 %49 to i32
  %cmp111 = icmp eq i32 %conv110, 66
  br i1 %cmp111, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %lor.lhs.false.108, %land.lhs.true.103, %lor.lhs.false.95, %land.lhs.true.90, %lor.lhs.false.82, %land.lhs.true.77
  %50 = load i8*, i8** %str.addr, align 8
  %add.ptr = getelementptr i8, i8* %50, i64 2
  store i8* %add.ptr, i8** %str.addr, align 8
  br label %if.end.114

if.end.114:                                       ; preds = %if.then.113, %lor.lhs.false.108, %lor.lhs.false.100, %if.end.69
  %51 = load i8*, i8** %str.addr, align 8
  store i8* %51, i8** %start, align 8
  %52 = load i32, i32* %base.addr, align 4
  %53 = load i32, i32* %base.addr, align 4
  %sub = sub i32 %53, 1
  %and115 = and i32 %52, %sub
  %cmp116 = icmp eq i32 %and115, 0
  br i1 %cmp116, label %if.then.118, label %if.else.119

if.then.118:                                      ; preds = %if.end.114
  %54 = load i32, i32* %base.addr, align 4
  %call = call %struct._longobject* @long_from_binary_base(i8** %str.addr, i32 %54)
  store %struct._longobject* %call, %struct._longobject** %z, align 8
  br label %if.end.273

if.else.119:                                      ; preds = %if.end.114
  %55 = load i32, i32* %base.addr, align 4
  %idxprom120 = sext i32 %55 to i64
  %arrayidx121 = getelementptr [37 x double], [37 x double]* @PyLong_FromString.log_base_BASE, i32 0, i64 %idxprom120
  %56 = load double, double* %arrayidx121, align 8
  %cmp122 = fcmp oeq double %56, 0.000000e+00
  br i1 %cmp122, label %if.then.124, label %if.end.141

if.then.124:                                      ; preds = %if.else.119
  %57 = load i32, i32* %base.addr, align 4
  %conv125 = sext i32 %57 to i64
  store i64 %conv125, i64* %convmax, align 8
  store i32 1, i32* %i126, align 4
  %58 = load i32, i32* %base.addr, align 4
  %conv127 = sitofp i32 %58 to double
  %call128 = call double @log(double %conv127) #4
  %call129 = call double @log(double 0x41D0000000000000) #4
  %div = fdiv double %call128, %call129
  %59 = load i32, i32* %base.addr, align 4
  %idxprom130 = sext i32 %59 to i64
  %arrayidx131 = getelementptr [37 x double], [37 x double]* @PyLong_FromString.log_base_BASE, i32 0, i64 %idxprom130
  store double %div, double* %arrayidx131, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.136, %if.then.124
  %60 = load i64, i64* %convmax, align 8
  %61 = load i32, i32* %base.addr, align 4
  %conv132 = sext i32 %61 to i64
  %mul = mul i64 %60, %conv132
  store i64 %mul, i64* %next, align 8
  %62 = load i64, i64* %next, align 8
  %cmp133 = icmp ugt i64 %62, 1073741824
  br i1 %cmp133, label %if.then.135, label %if.end.136

if.then.135:                                      ; preds = %for.cond
  br label %for.end

if.end.136:                                       ; preds = %for.cond
  %63 = load i64, i64* %next, align 8
  store i64 %63, i64* %convmax, align 8
  %64 = load i32, i32* %i126, align 4
  %inc = add i32 %64, 1
  store i32 %inc, i32* %i126, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.135
  %65 = load i64, i64* %convmax, align 8
  %66 = load i32, i32* %base.addr, align 4
  %idxprom137 = sext i32 %66 to i64
  %arrayidx138 = getelementptr [37 x i64], [37 x i64]* @PyLong_FromString.convmultmax_base, i32 0, i64 %idxprom137
  store i64 %65, i64* %arrayidx138, align 8
  %67 = load i32, i32* %i126, align 4
  %68 = load i32, i32* %base.addr, align 4
  %idxprom139 = sext i32 %68 to i64
  %arrayidx140 = getelementptr [37 x i32], [37 x i32]* @PyLong_FromString.convwidth_base, i32 0, i64 %idxprom139
  store i32 %67, i32* %arrayidx140, align 4
  br label %if.end.141

if.end.141:                                       ; preds = %for.end, %if.else.119
  %69 = load i8*, i8** %str.addr, align 8
  store i8* %69, i8** %scan, align 8
  br label %while.cond.142

while.cond.142:                                   ; preds = %while.body.151, %if.end.141
  %70 = load i8*, i8** %scan, align 8
  %71 = load i8, i8* %70, align 1
  %conv143 = sext i8 %71 to i32
  %and144 = and i32 %conv143, 255
  %conv145 = trunc i32 %and144 to i8
  %idxprom146 = zext i8 %conv145 to i64
  %arrayidx147 = getelementptr [256 x i8], [256 x i8]* @_PyLong_DigitValue, i32 0, i64 %idxprom146
  %72 = load i8, i8* %arrayidx147, align 1
  %conv148 = zext i8 %72 to i32
  %73 = load i32, i32* %base.addr, align 4
  %cmp149 = icmp slt i32 %conv148, %73
  br i1 %cmp149, label %while.body.151, label %while.end.153

while.body.151:                                   ; preds = %while.cond.142
  %74 = load i8*, i8** %scan, align 8
  %incdec.ptr152 = getelementptr i8, i8* %74, i32 1
  store i8* %incdec.ptr152, i8** %scan, align 8
  br label %while.cond.142

while.end.153:                                    ; preds = %while.cond.142
  %75 = load i8*, i8** %scan, align 8
  %76 = load i8*, i8** %str.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %75 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %76 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv154 = sitofp i64 %sub.ptr.sub to double
  %77 = load i32, i32* %base.addr, align 4
  %idxprom155 = sext i32 %77 to i64
  %arrayidx156 = getelementptr [37 x double], [37 x double]* @PyLong_FromString.log_base_BASE, i32 0, i64 %idxprom155
  %78 = load double, double* %arrayidx156, align 8
  %mul157 = fmul double %conv154, %78
  %conv158 = fptosi double %mul157 to i64
  %add = add i64 %conv158, 1
  store i64 %add, i64* %size_z, align 8
  %79 = load i64, i64* %size_z, align 8
  %call159 = call %struct._longobject* @_PyLong_New(i64 %79)
  store %struct._longobject* %call159, %struct._longobject** %z, align 8
  %80 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp160 = icmp eq %struct._longobject* %80, null
  br i1 %cmp160, label %if.then.162, label %if.end.163

if.then.162:                                      ; preds = %while.end.153
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.163:                                       ; preds = %while.end.153
  %81 = load %struct._longobject*, %struct._longobject** %z, align 8
  %82 = bitcast %struct._longobject* %81 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %82, i32 0, i32 1
  store i64 0, i64* %ob_size, align 8
  %83 = load i32, i32* %base.addr, align 4
  %idxprom164 = sext i32 %83 to i64
  %arrayidx165 = getelementptr [37 x i32], [37 x i32]* @PyLong_FromString.convwidth_base, i32 0, i64 %idxprom164
  %84 = load i32, i32* %arrayidx165, align 4
  store i32 %84, i32* %convwidth, align 4
  %85 = load i32, i32* %base.addr, align 4
  %idxprom166 = sext i32 %85 to i64
  %arrayidx167 = getelementptr [37 x i64], [37 x i64]* @PyLong_FromString.convmultmax_base, i32 0, i64 %idxprom166
  %86 = load i64, i64* %arrayidx167, align 8
  store i64 %86, i64* %convmultmax, align 8
  br label %while.cond.168

while.cond.168:                                   ; preds = %if.end.271, %if.end.163
  %87 = load i8*, i8** %str.addr, align 8
  %88 = load i8*, i8** %scan, align 8
  %cmp169 = icmp ult i8* %87, %88
  br i1 %cmp169, label %while.body.171, label %while.end.272

while.body.171:                                   ; preds = %while.cond.168
  %89 = load i8*, i8** %str.addr, align 8
  %incdec.ptr172 = getelementptr i8, i8* %89, i32 1
  store i8* %incdec.ptr172, i8** %str.addr, align 8
  %90 = load i8, i8* %89, align 1
  %conv173 = sext i8 %90 to i32
  %and174 = and i32 %conv173, 255
  %conv175 = trunc i32 %and174 to i8
  %idxprom176 = zext i8 %conv175 to i64
  %arrayidx177 = getelementptr [256 x i8], [256 x i8]* @_PyLong_DigitValue, i32 0, i64 %idxprom176
  %91 = load i8, i8* %arrayidx177, align 1
  %conv178 = zext i8 %91 to i32
  %conv179 = zext i32 %conv178 to i64
  store i64 %conv179, i64* %c, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond.180

for.cond.180:                                     ; preds = %for.inc, %while.body.171
  %92 = load i32, i32* %i, align 4
  %93 = load i32, i32* %convwidth, align 4
  %cmp181 = icmp slt i32 %92, %93
  br i1 %cmp181, label %land.rhs.183, label %land.end.186

land.rhs.183:                                     ; preds = %for.cond.180
  %94 = load i8*, i8** %str.addr, align 8
  %95 = load i8*, i8** %scan, align 8
  %cmp184 = icmp ne i8* %94, %95
  br label %land.end.186

land.end.186:                                     ; preds = %land.rhs.183, %for.cond.180
  %96 = phi i1 [ false, %for.cond.180 ], [ %cmp184, %land.rhs.183 ]
  br i1 %96, label %for.body, label %for.end.199

for.body:                                         ; preds = %land.end.186
  %97 = load i64, i64* %c, align 8
  %98 = load i32, i32* %base.addr, align 4
  %conv187 = sext i32 %98 to i64
  %mul188 = mul i64 %97, %conv187
  %99 = load i8*, i8** %str.addr, align 8
  %100 = load i8, i8* %99, align 1
  %conv189 = sext i8 %100 to i32
  %and190 = and i32 %conv189, 255
  %conv191 = trunc i32 %and190 to i8
  %idxprom192 = zext i8 %conv191 to i64
  %arrayidx193 = getelementptr [256 x i8], [256 x i8]* @_PyLong_DigitValue, i32 0, i64 %idxprom192
  %101 = load i8, i8* %arrayidx193, align 1
  %conv194 = zext i8 %101 to i32
  %conv195 = sext i32 %conv194 to i64
  %add196 = add i64 %mul188, %conv195
  store i64 %add196, i64* %c, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %102 = load i32, i32* %i, align 4
  %inc197 = add i32 %102, 1
  store i32 %inc197, i32* %i, align 4
  %103 = load i8*, i8** %str.addr, align 8
  %incdec.ptr198 = getelementptr i8, i8* %103, i32 1
  store i8* %incdec.ptr198, i8** %str.addr, align 8
  br label %for.cond.180

for.end.199:                                      ; preds = %land.end.186
  %104 = load i64, i64* %convmultmax, align 8
  store i64 %104, i64* %convmult, align 8
  %105 = load i32, i32* %i, align 4
  %106 = load i32, i32* %convwidth, align 4
  %cmp200 = icmp ne i32 %105, %106
  br i1 %cmp200, label %if.then.202, label %if.end.212

if.then.202:                                      ; preds = %for.end.199
  %107 = load i32, i32* %base.addr, align 4
  %conv203 = sext i32 %107 to i64
  store i64 %conv203, i64* %convmult, align 8
  br label %for.cond.204

for.cond.204:                                     ; preds = %for.inc.210, %if.then.202
  %108 = load i32, i32* %i, align 4
  %cmp205 = icmp sgt i32 %108, 1
  br i1 %cmp205, label %for.body.207, label %for.end.211

for.body.207:                                     ; preds = %for.cond.204
  %109 = load i32, i32* %base.addr, align 4
  %conv208 = sext i32 %109 to i64
  %110 = load i64, i64* %convmult, align 8
  %mul209 = mul i64 %110, %conv208
  store i64 %mul209, i64* %convmult, align 8
  br label %for.inc.210

for.inc.210:                                      ; preds = %for.body.207
  %111 = load i32, i32* %i, align 4
  %dec = add i32 %111, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond.204

for.end.211:                                      ; preds = %for.cond.204
  br label %if.end.212

if.end.212:                                       ; preds = %for.end.211, %for.end.199
  %112 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %112, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %pz, align 8
  %113 = load i32*, i32** %pz, align 8
  %114 = load %struct._longobject*, %struct._longobject** %z, align 8
  %115 = bitcast %struct._longobject* %114 to %struct.PyVarObject*
  %ob_size213 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %115, i32 0, i32 1
  %116 = load i64, i64* %ob_size213, align 8
  %add.ptr214 = getelementptr i32, i32* %113, i64 %116
  store i32* %add.ptr214, i32** %pzstop, align 8
  br label %for.cond.215

for.cond.215:                                     ; preds = %for.inc.224, %if.end.212
  %117 = load i32*, i32** %pz, align 8
  %118 = load i32*, i32** %pzstop, align 8
  %cmp216 = icmp ult i32* %117, %118
  br i1 %cmp216, label %for.body.218, label %for.end.226

for.body.218:                                     ; preds = %for.cond.215
  %119 = load i32*, i32** %pz, align 8
  %120 = load i32, i32* %119, align 4
  %conv219 = zext i32 %120 to i64
  %121 = load i64, i64* %convmult, align 8
  %mul220 = mul i64 %conv219, %121
  %122 = load i64, i64* %c, align 8
  %add221 = add i64 %122, %mul220
  store i64 %add221, i64* %c, align 8
  %123 = load i64, i64* %c, align 8
  %and222 = and i64 %123, 1073741823
  %conv223 = trunc i64 %and222 to i32
  %124 = load i32*, i32** %pz, align 8
  store i32 %conv223, i32* %124, align 4
  %125 = load i64, i64* %c, align 8
  %shr = lshr i64 %125, 30
  store i64 %shr, i64* %c, align 8
  br label %for.inc.224

for.inc.224:                                      ; preds = %for.body.218
  %126 = load i32*, i32** %pz, align 8
  %incdec.ptr225 = getelementptr i32, i32* %126, i32 1
  store i32* %incdec.ptr225, i32** %pz, align 8
  br label %for.cond.215

for.end.226:                                      ; preds = %for.cond.215
  %127 = load i64, i64* %c, align 8
  %tobool227 = icmp ne i64 %127, 0
  br i1 %tobool227, label %if.then.228, label %if.end.271

if.then.228:                                      ; preds = %for.end.226
  %128 = load %struct._longobject*, %struct._longobject** %z, align 8
  %129 = bitcast %struct._longobject* %128 to %struct.PyVarObject*
  %ob_size229 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %129, i32 0, i32 1
  %130 = load i64, i64* %ob_size229, align 8
  %131 = load i64, i64* %size_z, align 8
  %cmp230 = icmp slt i64 %130, %131
  br i1 %cmp230, label %if.then.232, label %if.else.236

if.then.232:                                      ; preds = %if.then.228
  %132 = load i64, i64* %c, align 8
  %conv233 = trunc i64 %132 to i32
  %133 = load i32*, i32** %pz, align 8
  store i32 %conv233, i32* %133, align 4
  %134 = load %struct._longobject*, %struct._longobject** %z, align 8
  %135 = bitcast %struct._longobject* %134 to %struct.PyVarObject*
  %ob_size234 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %135, i32 0, i32 1
  %136 = load i64, i64* %ob_size234, align 8
  %inc235 = add i64 %136, 1
  store i64 %inc235, i64* %ob_size234, align 8
  br label %if.end.270

if.else.236:                                      ; preds = %if.then.228
  %137 = load i64, i64* %size_z, align 8
  %add237 = add i64 %137, 1
  %call238 = call %struct._longobject* @_PyLong_New(i64 %add237)
  store %struct._longobject* %call238, %struct._longobject** %tmp, align 8
  %138 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %cmp239 = icmp eq %struct._longobject* %138, null
  br i1 %cmp239, label %if.then.241, label %if.end.249

if.then.241:                                      ; preds = %if.else.236
  br label %do.body

do.body:                                          ; preds = %if.then.241
  %139 = load %struct._longobject*, %struct._longobject** %z, align 8
  %140 = bitcast %struct._longobject* %139 to %struct._object*
  store %struct._object* %140, %struct._object** %_py_decref_tmp, align 8
  %141 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %141, i32 0, i32 0
  %142 = load i64, i64* %ob_refcnt, align 8
  %dec243 = add i64 %142, -1
  store i64 %dec243, i64* %ob_refcnt, align 8
  %cmp244 = icmp ne i64 %dec243, 0
  br i1 %cmp244, label %if.then.246, label %if.else.247

if.then.246:                                      ; preds = %do.body
  br label %if.end.248

if.else.247:                                      ; preds = %do.body
  %143 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %143, i32 0, i32 1
  %144 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %144, i32 0, i32 4
  %145 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %146 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %145(%struct._object* %146)
  br label %if.end.248

if.end.248:                                       ; preds = %if.else.247, %if.then.246
  br label %do.end

do.end:                                           ; preds = %if.end.248
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.249:                                       ; preds = %if.else.236
  %147 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %ob_digit250 = getelementptr inbounds %struct._longobject, %struct._longobject* %147, i32 0, i32 1
  %148 = bitcast [1 x i32]* %ob_digit250 to i8*
  %149 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit251 = getelementptr inbounds %struct._longobject, %struct._longobject* %149, i32 0, i32 1
  %150 = bitcast [1 x i32]* %ob_digit251 to i8*
  %151 = load i64, i64* %size_z, align 8
  %mul252 = mul i64 4, %151
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %148, i8* %150, i64 %mul252, i32 4, i1 false)
  br label %do.body.253

do.body.253:                                      ; preds = %if.end.249
  %152 = load %struct._longobject*, %struct._longobject** %z, align 8
  %153 = bitcast %struct._longobject* %152 to %struct._object*
  store %struct._object* %153, %struct._object** %_py_decref_tmp255, align 8
  %154 = load %struct._object*, %struct._object** %_py_decref_tmp255, align 8
  %ob_refcnt256 = getelementptr inbounds %struct._object, %struct._object* %154, i32 0, i32 0
  %155 = load i64, i64* %ob_refcnt256, align 8
  %dec257 = add i64 %155, -1
  store i64 %dec257, i64* %ob_refcnt256, align 8
  %cmp258 = icmp ne i64 %dec257, 0
  br i1 %cmp258, label %if.then.260, label %if.else.261

if.then.260:                                      ; preds = %do.body.253
  br label %if.end.264

if.else.261:                                      ; preds = %do.body.253
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp255, align 8
  %ob_type262 = getelementptr inbounds %struct._object, %struct._object* %156, i32 0, i32 1
  %157 = load %struct._typeobject*, %struct._typeobject** %ob_type262, align 8
  %tp_dealloc263 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %157, i32 0, i32 4
  %158 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc263, align 8
  %159 = load %struct._object*, %struct._object** %_py_decref_tmp255, align 8
  call void %158(%struct._object* %159)
  br label %if.end.264

if.end.264:                                       ; preds = %if.else.261, %if.then.260
  br label %do.end.265

do.end.265:                                       ; preds = %if.end.264
  %160 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  store %struct._longobject* %160, %struct._longobject** %z, align 8
  %161 = load i64, i64* %c, align 8
  %conv266 = trunc i64 %161 to i32
  %162 = load i64, i64* %size_z, align 8
  %163 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit267 = getelementptr inbounds %struct._longobject, %struct._longobject* %163, i32 0, i32 1
  %arrayidx268 = getelementptr [1 x i32], [1 x i32]* %ob_digit267, i32 0, i64 %162
  store i32 %conv266, i32* %arrayidx268, align 4
  %164 = load i64, i64* %size_z, align 8
  %inc269 = add i64 %164, 1
  store i64 %inc269, i64* %size_z, align 8
  br label %if.end.270

if.end.270:                                       ; preds = %do.end.265, %if.then.232
  br label %if.end.271

if.end.271:                                       ; preds = %if.end.270, %for.end.226
  br label %while.cond.168

while.end.272:                                    ; preds = %while.cond.168
  br label %if.end.273

if.end.273:                                       ; preds = %while.end.272, %if.then.118
  %165 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp274 = icmp eq %struct._longobject* %165, null
  br i1 %cmp274, label %if.then.276, label %if.end.277

if.then.276:                                      ; preds = %if.end.273
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.277:                                       ; preds = %if.end.273
  %166 = load i32, i32* %error_if_nonzero, align 4
  %tobool278 = icmp ne i32 %166, 0
  br i1 %tobool278, label %if.then.279, label %if.end.285

if.then.279:                                      ; preds = %if.end.277
  store i32 0, i32* %base.addr, align 4
  %167 = load %struct._longobject*, %struct._longobject** %z, align 8
  %168 = bitcast %struct._longobject* %167 to %struct.PyVarObject*
  %ob_size280 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %168, i32 0, i32 1
  %169 = load i64, i64* %ob_size280, align 8
  %cmp281 = icmp ne i64 %169, 0
  br i1 %cmp281, label %if.then.283, label %if.end.284

if.then.283:                                      ; preds = %if.then.279
  br label %onError

if.end.284:                                       ; preds = %if.then.279
  br label %if.end.285

if.end.285:                                       ; preds = %if.end.284, %if.end.277
  %170 = load i8*, i8** %str.addr, align 8
  %171 = load i8*, i8** %start, align 8
  %cmp286 = icmp eq i8* %170, %171
  br i1 %cmp286, label %if.then.288, label %if.end.289

if.then.288:                                      ; preds = %if.end.285
  br label %onError

if.end.289:                                       ; preds = %if.end.285
  %172 = load i32, i32* %sign, align 4
  %cmp290 = icmp slt i32 %172, 0
  br i1 %cmp290, label %if.then.292, label %if.end.296

if.then.292:                                      ; preds = %if.end.289
  %173 = load %struct._longobject*, %struct._longobject** %z, align 8
  %174 = bitcast %struct._longobject* %173 to %struct.PyVarObject*
  %ob_size293 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %174, i32 0, i32 1
  %175 = load i64, i64* %ob_size293, align 8
  %sub294 = sub i64 0, %175
  %176 = load %struct._longobject*, %struct._longobject** %z, align 8
  %177 = bitcast %struct._longobject* %176 to %struct.PyVarObject*
  %ob_size295 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %177, i32 0, i32 1
  store i64 %sub294, i64* %ob_size295, align 8
  br label %if.end.296

if.end.296:                                       ; preds = %if.then.292, %if.end.289
  br label %while.cond.297

while.cond.297:                                   ; preds = %while.body.312, %if.end.296
  %178 = load i8*, i8** %str.addr, align 8
  %179 = load i8, i8* %178, align 1
  %conv298 = sext i8 %179 to i32
  %tobool299 = icmp ne i32 %conv298, 0
  br i1 %tobool299, label %land.rhs.300, label %land.end.311

land.rhs.300:                                     ; preds = %while.cond.297
  %180 = load i8*, i8** %str.addr, align 8
  %181 = load i8, i8* %180, align 1
  %conv301 = sext i8 %181 to i32
  %and302 = and i32 %conv301, 255
  %conv303 = trunc i32 %and302 to i8
  %conv304 = zext i8 %conv303 to i32
  %and305 = and i32 %conv304, 255
  %conv306 = trunc i32 %and305 to i8
  %idxprom307 = zext i8 %conv306 to i64
  %arrayidx308 = getelementptr [256 x i32], [256 x i32]* @_Py_ctype_table, i32 0, i64 %idxprom307
  %182 = load i32, i32* %arrayidx308, align 4
  %and309 = and i32 %182, 8
  %tobool310 = icmp ne i32 %and309, 0
  br label %land.end.311

land.end.311:                                     ; preds = %land.rhs.300, %while.cond.297
  %183 = phi i1 [ false, %while.cond.297 ], [ %tobool310, %land.rhs.300 ]
  br i1 %183, label %while.body.312, label %while.end.314

while.body.312:                                   ; preds = %land.end.311
  %184 = load i8*, i8** %str.addr, align 8
  %incdec.ptr313 = getelementptr i8, i8* %184, i32 1
  store i8* %incdec.ptr313, i8** %str.addr, align 8
  br label %while.cond.297

while.end.314:                                    ; preds = %land.end.311
  %185 = load i8*, i8** %str.addr, align 8
  %186 = load i8, i8* %185, align 1
  %conv315 = sext i8 %186 to i32
  %cmp316 = icmp ne i32 %conv315, 0
  br i1 %cmp316, label %if.then.318, label %if.end.319

if.then.318:                                      ; preds = %while.end.314
  br label %onError

if.end.319:                                       ; preds = %while.end.314
  %187 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call320 = call %struct._longobject* @long_normalize(%struct._longobject* %187)
  %188 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call321 = call %struct._longobject* @maybe_small_long(%struct._longobject* %188)
  store %struct._longobject* %call321, %struct._longobject** %z, align 8
  %189 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp322 = icmp eq %struct._longobject* %189, null
  br i1 %cmp322, label %if.then.324, label %if.end.325

if.then.324:                                      ; preds = %if.end.319
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.325:                                       ; preds = %if.end.319
  %190 = load i8**, i8*** %pend.addr, align 8
  %cmp326 = icmp ne i8** %190, null
  br i1 %cmp326, label %if.then.328, label %if.end.329

if.then.328:                                      ; preds = %if.end.325
  %191 = load i8*, i8** %str.addr, align 8
  %192 = load i8**, i8*** %pend.addr, align 8
  store i8* %191, i8** %192, align 8
  br label %if.end.329

if.end.329:                                       ; preds = %if.then.328, %if.end.325
  %193 = load %struct._longobject*, %struct._longobject** %z, align 8
  %194 = bitcast %struct._longobject* %193 to %struct._object*
  store %struct._object* %194, %struct._object** %retval
  br label %return

onError:                                          ; preds = %if.then.318, %if.then.288, %if.then.283
  %195 = load i8**, i8*** %pend.addr, align 8
  %cmp330 = icmp ne i8** %195, null
  br i1 %cmp330, label %if.then.332, label %if.end.333

if.then.332:                                      ; preds = %onError
  %196 = load i8*, i8** %str.addr, align 8
  %197 = load i8**, i8*** %pend.addr, align 8
  store i8* %196, i8** %197, align 8
  br label %if.end.333

if.end.333:                                       ; preds = %if.then.332, %onError
  br label %do.body.334

do.body.334:                                      ; preds = %if.end.333
  %198 = load %struct._longobject*, %struct._longobject** %z, align 8
  %199 = bitcast %struct._longobject* %198 to %struct._object*
  store %struct._object* %199, %struct._object** %_py_xdecref_tmp, align 8
  %200 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp336 = icmp ne %struct._object* %200, null
  br i1 %cmp336, label %if.then.338, label %if.end.352

if.then.338:                                      ; preds = %do.body.334
  br label %do.body.339

do.body.339:                                      ; preds = %if.then.338
  %201 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %201, %struct._object** %_py_decref_tmp341, align 8
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8
  %ob_refcnt342 = getelementptr inbounds %struct._object, %struct._object* %202, i32 0, i32 0
  %203 = load i64, i64* %ob_refcnt342, align 8
  %dec343 = add i64 %203, -1
  store i64 %dec343, i64* %ob_refcnt342, align 8
  %cmp344 = icmp ne i64 %dec343, 0
  br i1 %cmp344, label %if.then.346, label %if.else.347

if.then.346:                                      ; preds = %do.body.339
  br label %if.end.350

if.else.347:                                      ; preds = %do.body.339
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8
  %ob_type348 = getelementptr inbounds %struct._object, %struct._object* %204, i32 0, i32 1
  %205 = load %struct._typeobject*, %struct._typeobject** %ob_type348, align 8
  %tp_dealloc349 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %205, i32 0, i32 4
  %206 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc349, align 8
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp341, align 8
  call void %206(%struct._object* %207)
  br label %if.end.350

if.end.350:                                       ; preds = %if.else.347, %if.then.346
  br label %do.end.351

do.end.351:                                       ; preds = %if.end.350
  br label %if.end.352

if.end.352:                                       ; preds = %do.end.351, %do.body.334
  br label %do.end.353

do.end.353:                                       ; preds = %if.end.352
  %208 = load i8*, i8** %orig_str, align 8
  %call354 = call i64 @strlen(i8* %208) #8
  %cmp355 = icmp ult i64 %call354, 200
  br i1 %cmp355, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end.353
  %209 = load i8*, i8** %orig_str, align 8
  %call357 = call i64 @strlen(i8* %209) #8
  br label %cond.end

cond.false:                                       ; preds = %do.end.353
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call357, %cond.true ], [ 200, %cond.false ]
  store i64 %cond, i64* %slen, align 8
  %210 = load i8*, i8** %orig_str, align 8
  %211 = load i64, i64* %slen, align 8
  %call358 = call %struct._object* @PyUnicode_FromStringAndSize(i8* %210, i64 %211)
  store %struct._object* %call358, %struct._object** %strobj, align 8
  %212 = load %struct._object*, %struct._object** %strobj, align 8
  %cmp359 = icmp eq %struct._object* %212, null
  br i1 %cmp359, label %if.then.361, label %if.end.362

if.then.361:                                      ; preds = %cond.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.362:                                       ; preds = %cond.end
  %213 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  %214 = load i32, i32* %base.addr, align 4
  %215 = load %struct._object*, %struct._object** %strobj, align 8
  %call363 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %213, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i32 0, i32 0), i32 %214, %struct._object* %215)
  br label %do.body.364

do.body.364:                                      ; preds = %if.end.362
  %216 = load %struct._object*, %struct._object** %strobj, align 8
  store %struct._object* %216, %struct._object** %_py_decref_tmp366, align 8
  %217 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8
  %ob_refcnt367 = getelementptr inbounds %struct._object, %struct._object* %217, i32 0, i32 0
  %218 = load i64, i64* %ob_refcnt367, align 8
  %dec368 = add i64 %218, -1
  store i64 %dec368, i64* %ob_refcnt367, align 8
  %cmp369 = icmp ne i64 %dec368, 0
  br i1 %cmp369, label %if.then.371, label %if.else.372

if.then.371:                                      ; preds = %do.body.364
  br label %if.end.375

if.else.372:                                      ; preds = %do.body.364
  %219 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8
  %ob_type373 = getelementptr inbounds %struct._object, %struct._object* %219, i32 0, i32 1
  %220 = load %struct._typeobject*, %struct._typeobject** %ob_type373, align 8
  %tp_dealloc374 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %220, i32 0, i32 4
  %221 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc374, align 8
  %222 = load %struct._object*, %struct._object** %_py_decref_tmp366, align 8
  call void %221(%struct._object* %222)
  br label %if.end.375

if.end.375:                                       ; preds = %if.else.372, %if.then.371
  br label %do.end.376

do.end.376:                                       ; preds = %if.end.375
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.376, %if.then.361, %if.end.329, %if.then.324, %if.then.276, %do.end, %if.then.162, %if.then
  %223 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %223
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @long_from_binary_base(i8** %str, i32 %base) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %str.addr = alloca i8**, align 8
  %base.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %start = alloca i8*, align 8
  %bits_per_char = alloca i32, align 4
  %n = alloca i64, align 8
  %z = alloca %struct._longobject*, align 8
  %accum = alloca i64, align 8
  %bits_in_accum = alloca i32, align 4
  %pdigit = alloca i32*, align 8
  %k = alloca i32, align 4
  store i8** %str, i8*** %str.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  %0 = load i8**, i8*** %str.addr, align 8
  %1 = load i8*, i8** %0, align 8
  store i8* %1, i8** %p, align 8
  %2 = load i8*, i8** %p, align 8
  store i8* %2, i8** %start, align 8
  %3 = load i32, i32* %base.addr, align 4
  %conv = sext i32 %3 to i64
  store i64 %conv, i64* %n, align 8
  store i32 -1, i32* %bits_per_char, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %n, align 8
  %tobool = icmp ne i64 %4, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i64, i64* %n, align 8
  %shr = ashr i64 %5, 1
  store i64 %shr, i64* %n, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %bits_per_char, align 4
  %inc = add i32 %6, 1
  store i32 %inc, i32* %bits_per_char, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end
  %7 = load i8*, i8** %p, align 8
  %8 = load i8, i8* %7, align 1
  %conv1 = sext i8 %8 to i32
  %and = and i32 %conv1, 255
  %conv2 = trunc i32 %and to i8
  %idxprom = zext i8 %conv2 to i64
  %arrayidx = getelementptr [256 x i8], [256 x i8]* @_PyLong_DigitValue, i32 0, i64 %idxprom
  %9 = load i8, i8* %arrayidx, align 1
  %conv3 = zext i8 %9 to i32
  %10 = load i32, i32* %base.addr, align 4
  %cmp = icmp slt i32 %conv3, %10
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr i8, i8* %11, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %12 = load i8*, i8** %p, align 8
  %13 = load i8**, i8*** %str.addr, align 8
  store i8* %12, i8** %13, align 8
  %14 = load i8*, i8** %p, align 8
  %15 = load i8*, i8** %start, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %15 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %16 = load i32, i32* %bits_per_char, align 4
  %conv5 = sext i32 %16 to i64
  %mul = mul i64 %sub.ptr.sub, %conv5
  %add = add i64 %mul, 30
  %sub = sub i64 %add, 1
  store i64 %sub, i64* %n, align 8
  %17 = load i64, i64* %n, align 8
  %18 = load i32, i32* %bits_per_char, align 4
  %conv6 = sext i32 %18 to i64
  %div = sdiv i64 %17, %conv6
  %19 = load i8*, i8** %p, align 8
  %20 = load i8*, i8** %start, align 8
  %sub.ptr.lhs.cast7 = ptrtoint i8* %19 to i64
  %sub.ptr.rhs.cast8 = ptrtoint i8* %20 to i64
  %sub.ptr.sub9 = sub i64 %sub.ptr.lhs.cast7, %sub.ptr.rhs.cast8
  %cmp10 = icmp slt i64 %div, %sub.ptr.sub9
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  %21 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %21, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0))
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %while.end
  %22 = load i64, i64* %n, align 8
  %div12 = sdiv i64 %22, 30
  store i64 %div12, i64* %n, align 8
  %23 = load i64, i64* %n, align 8
  %call = call %struct._longobject* @_PyLong_New(i64 %23)
  store %struct._longobject* %call, %struct._longobject** %z, align 8
  %24 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp13 = icmp eq %struct._longobject* %24, null
  br i1 %cmp13, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.16:                                        ; preds = %if.end
  store i64 0, i64* %accum, align 8
  store i32 0, i32* %bits_in_accum, align 4
  %25 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %25, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  store i32* %arraydecay, i32** %pdigit, align 8
  br label %while.cond.17

while.cond.17:                                    ; preds = %if.end.38, %if.end.16
  %26 = load i8*, i8** %p, align 8
  %incdec.ptr18 = getelementptr i8, i8* %26, i32 -1
  store i8* %incdec.ptr18, i8** %p, align 8
  %27 = load i8*, i8** %start, align 8
  %cmp19 = icmp uge i8* %incdec.ptr18, %27
  br i1 %cmp19, label %while.body.21, label %while.end.39

while.body.21:                                    ; preds = %while.cond.17
  %28 = load i8*, i8** %p, align 8
  %29 = load i8, i8* %28, align 1
  %conv22 = sext i8 %29 to i32
  %and23 = and i32 %conv22, 255
  %conv24 = trunc i32 %and23 to i8
  %idxprom25 = zext i8 %conv24 to i64
  %arrayidx26 = getelementptr [256 x i8], [256 x i8]* @_PyLong_DigitValue, i32 0, i64 %idxprom25
  %30 = load i8, i8* %arrayidx26, align 1
  %conv27 = zext i8 %30 to i32
  store i32 %conv27, i32* %k, align 4
  %31 = load i32, i32* %k, align 4
  %conv28 = sext i32 %31 to i64
  %32 = load i32, i32* %bits_in_accum, align 4
  %sh_prom = zext i32 %32 to i64
  %shl = shl i64 %conv28, %sh_prom
  %33 = load i64, i64* %accum, align 8
  %or = or i64 %33, %shl
  store i64 %or, i64* %accum, align 8
  %34 = load i32, i32* %bits_per_char, align 4
  %35 = load i32, i32* %bits_in_accum, align 4
  %add29 = add i32 %35, %34
  store i32 %add29, i32* %bits_in_accum, align 4
  %36 = load i32, i32* %bits_in_accum, align 4
  %cmp30 = icmp sge i32 %36, 30
  br i1 %cmp30, label %if.then.32, label %if.end.38

if.then.32:                                       ; preds = %while.body.21
  %37 = load i64, i64* %accum, align 8
  %and33 = and i64 %37, 1073741823
  %conv34 = trunc i64 %and33 to i32
  %38 = load i32*, i32** %pdigit, align 8
  %incdec.ptr35 = getelementptr i32, i32* %38, i32 1
  store i32* %incdec.ptr35, i32** %pdigit, align 8
  store i32 %conv34, i32* %38, align 4
  %39 = load i64, i64* %accum, align 8
  %shr36 = lshr i64 %39, 30
  store i64 %shr36, i64* %accum, align 8
  %40 = load i32, i32* %bits_in_accum, align 4
  %sub37 = sub i32 %40, 30
  store i32 %sub37, i32* %bits_in_accum, align 4
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.32, %while.body.21
  br label %while.cond.17

while.end.39:                                     ; preds = %while.cond.17
  %41 = load i32, i32* %bits_in_accum, align 4
  %tobool40 = icmp ne i32 %41, 0
  br i1 %tobool40, label %if.then.41, label %if.end.44

if.then.41:                                       ; preds = %while.end.39
  %42 = load i64, i64* %accum, align 8
  %conv42 = trunc i64 %42 to i32
  %43 = load i32*, i32** %pdigit, align 8
  %incdec.ptr43 = getelementptr i32, i32* %43, i32 1
  store i32* %incdec.ptr43, i32** %pdigit, align 8
  store i32 %conv42, i32* %43, align 4
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.41, %while.end.39
  br label %while.cond.45

while.cond.45:                                    ; preds = %while.body.53, %if.end.44
  %44 = load i32*, i32** %pdigit, align 8
  %45 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit46 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arraydecay47 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit46, i32 0, i32 0
  %sub.ptr.lhs.cast48 = ptrtoint i32* %44 to i64
  %sub.ptr.rhs.cast49 = ptrtoint i32* %arraydecay47 to i64
  %sub.ptr.sub50 = sub i64 %sub.ptr.lhs.cast48, %sub.ptr.rhs.cast49
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub50, 4
  %46 = load i64, i64* %n, align 8
  %cmp51 = icmp slt i64 %sub.ptr.div, %46
  br i1 %cmp51, label %while.body.53, label %while.end.55

while.body.53:                                    ; preds = %while.cond.45
  %47 = load i32*, i32** %pdigit, align 8
  %incdec.ptr54 = getelementptr i32, i32* %47, i32 1
  store i32* %incdec.ptr54, i32** %pdigit, align 8
  store i32 0, i32* %47, align 4
  br label %while.cond.45

while.end.55:                                     ; preds = %while.cond.45
  %48 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call56 = call %struct._longobject* @long_normalize(%struct._longobject* %48)
  store %struct._longobject* %call56, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %while.end.55, %if.then.15, %if.then
  %49 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %49
}

; Function Attrs: nounwind
declare double @log(double) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @maybe_small_long(%struct._longobject* %v) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %v.addr = alloca %struct._longobject*, align 8
  %ival = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %tobool = icmp ne %struct._longobject* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.end.26

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %2 = bitcast %struct._longobject* %1 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %2, i32 0, i32 1
  %3 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %3, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %4 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %5 = bitcast %struct._longobject* %4 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1
  %6 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %6
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true
  %7 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %8 = bitcast %struct._longobject* %7 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %9, %cond.false ]
  %cmp3 = icmp sle i64 %cond, 1
  br i1 %cmp3, label %if.then, label %if.end.26

if.then:                                          ; preds = %cond.end
  %10 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %11 = bitcast %struct._longobject* %10 to %struct.PyVarObject*
  %ob_size4 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  %12 = load i64, i64* %ob_size4, align 8
  %cmp5 = icmp slt i64 %12, 0
  br i1 %cmp5, label %cond.true.6, label %cond.false.8

cond.true.6:                                      ; preds = %if.then
  %13 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %14 = load i32, i32* %arrayidx, align 4
  %sub7 = sub i32 0, %14
  br label %cond.end.17

cond.false.8:                                     ; preds = %if.then
  %15 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  %cmp10 = icmp eq i64 %17, 0
  br i1 %cmp10, label %cond.true.11, label %cond.false.12

cond.true.11:                                     ; preds = %cond.false.8
  br label %cond.end.15

cond.false.12:                                    ; preds = %cond.false.8
  %18 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit13 = getelementptr inbounds %struct._longobject, %struct._longobject* %18, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x i32], [1 x i32]* %ob_digit13, i32 0, i64 0
  %19 = load i32, i32* %arrayidx14, align 4
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.12, %cond.true.11
  %cond16 = phi i32 [ 0, %cond.true.11 ], [ %19, %cond.false.12 ]
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.end.15, %cond.true.6
  %cond18 = phi i32 [ %sub7, %cond.true.6 ], [ %cond16, %cond.end.15 ]
  store i32 %cond18, i32* %ival, align 4
  %20 = load i32, i32* %ival, align 4
  %cmp19 = icmp sle i32 -5, %20
  br i1 %cmp19, label %land.lhs.true.20, label %if.end.25

land.lhs.true.20:                                 ; preds = %cond.end.17
  %21 = load i32, i32* %ival, align 4
  %cmp21 = icmp slt i32 %21, 257
  br i1 %cmp21, label %if.then.22, label %if.end.25

if.then.22:                                       ; preds = %land.lhs.true.20
  br label %do.body

do.body:                                          ; preds = %if.then.22
  %22 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %23 = bitcast %struct._longobject* %22 to %struct._object*
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %25, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp23 = icmp ne i64 %dec, 0
  br i1 %cmp23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %do.body
  br label %if.end

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %28(%struct._object* %29)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.24
  br label %do.end

do.end:                                           ; preds = %if.end
  %30 = load i32, i32* %ival, align 4
  %call = call %struct._object* @get_small_int(i32 %30)
  %31 = bitcast %struct._object* %call to %struct._longobject*
  store %struct._longobject* %31, %struct._longobject** %retval
  br label %return

if.end.25:                                        ; preds = %land.lhs.true.20, %cond.end.17
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %cond.end, %entry
  %32 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  store %struct._longobject* %32, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %if.end.26, %do.end
  %33 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %33
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

declare %struct._object* @PyUnicode_FromStringAndSize(i8*, i64) #1

; Function Attrs: nounwind uwtable
define %struct._object* @_PyLong_FromBytes(i8* %s, i64 %len, i32 %base) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %base.addr = alloca i32, align 4
  %result = alloca %struct._object*, align 8
  %strobj = alloca %struct._object*, align 8
  %end = alloca i8*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i64 %len, i64* %len.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  store i8* null, i8** %end, align 8
  %0 = load i8*, i8** %s.addr, align 8
  %1 = load i32, i32* %base.addr, align 4
  %call = call %struct._object* @PyLong_FromString(i8* %0, i8** %end, i32 %1)
  store %struct._object* %call, %struct._object** %result, align 8
  %2 = load i8*, i8** %end, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %result, align 8
  %cmp1 = icmp ne %struct._object* %3, null
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %4 = load i8*, i8** %end, align 8
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i64, i64* %len.addr, align 8
  %add.ptr = getelementptr i8, i8* %5, i64 %6
  %cmp2 = icmp eq i8* %4, %add.ptr
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %7, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  br label %do.body

do.body:                                          ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %8, %struct._object** %_py_xdecref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp3 = icmp ne %struct._object* %9, null
  br i1 %cmp3, label %if.then.4, label %if.end.9

if.then.4:                                        ; preds = %do.body
  br label %do.body.5

do.body.5:                                        ; preds = %if.then.4
  %10 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %10, %struct._object** %_py_decref_tmp, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp6 = icmp ne i64 %dec, 0
  br i1 %cmp6, label %if.then.7, label %if.else

if.then.7:                                        ; preds = %do.body.5
  br label %if.end.8

if.else:                                          ; preds = %do.body.5
  %13 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %13, i32 0, i32 1
  %14 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %14, i32 0, i32 4
  %15 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %16 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %15(%struct._object* %16)
  br label %if.end.8

if.end.8:                                         ; preds = %if.else, %if.then.7
  br label %do.end

do.end:                                           ; preds = %if.end.8
  br label %if.end.9

if.end.9:                                         ; preds = %do.end, %do.body
  br label %do.end.10

do.end.10:                                        ; preds = %if.end.9
  %17 = load i8*, i8** %s.addr, align 8
  %18 = load i64, i64* %len.addr, align 8
  %cmp11 = icmp sgt i64 %18, 200
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end.10
  br label %cond.end

cond.false:                                       ; preds = %do.end.10
  %19 = load i64, i64* %len.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 200, %cond.true ], [ %19, %cond.false ]
  %call12 = call %struct._object* @PyBytes_FromStringAndSize(i8* %17, i64 %cond)
  store %struct._object* %call12, %struct._object** %strobj, align 8
  %20 = load %struct._object*, %struct._object** %strobj, align 8
  %cmp13 = icmp ne %struct._object* %20, null
  br i1 %cmp13, label %if.then.14, label %if.end.27

if.then.14:                                       ; preds = %cond.end
  %21 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  %22 = load i32, i32* %base.addr, align 4
  %23 = load %struct._object*, %struct._object** %strobj, align 8
  %call15 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %21, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i32 0, i32 0), i32 %22, %struct._object* %23)
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.14
  %24 = load %struct._object*, %struct._object** %strobj, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp17, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt18, align 8
  %dec19 = add i64 %26, -1
  store i64 %dec19, i64* %ob_refcnt18, align 8
  %cmp20 = icmp ne i64 %dec19, 0
  br i1 %cmp20, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25

if.else.22:                                       ; preds = %do.body.16
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  call void %29(%struct._object* %30)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  br label %if.end.27

if.end.27:                                        ; preds = %do.end.26, %cond.end
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.27, %if.then
  %31 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %31
}

declare %struct._object* @PyBytes_FromStringAndSize(i8*, i64) #1

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromUnicode(i32* %u, i64 %length, i32 %base) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %u.addr = alloca i32*, align 8
  %length.addr = alloca i64, align 8
  %base.addr = alloca i32, align 4
  %v = alloca %struct._object*, align 8
  %unicode = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i32* %u, i32** %u.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  %0 = load i32*, i32** %u.addr, align 8
  %1 = load i64, i64* %length.addr, align 8
  %call = call %struct._object* @PyUnicode_FromUnicode(i32* %0, i64 %1)
  store %struct._object* %call, %struct._object** %unicode, align 8
  %2 = load %struct._object*, %struct._object** %unicode, align 8
  %cmp = icmp eq %struct._object* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct._object*, %struct._object** %unicode, align 8
  %4 = load i32, i32* %base.addr, align 4
  %call1 = call %struct._object* @PyLong_FromUnicodeObject(%struct._object* %3, i32 %4)
  store %struct._object* %call1, %struct._object** %v, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %unicode, align 8
  store %struct._object* %5, %struct._object** %_py_decref_tmp, align 8
  %6 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %6, i32 0, i32 0
  %7 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %7, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp2 = icmp ne i64 %dec, 0
  br i1 %cmp2, label %if.then.3, label %if.else

if.then.3:                                        ; preds = %do.body
  br label %if.end.4

if.else:                                          ; preds = %do.body
  %8 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 1
  %9 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 4
  %10 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %10(%struct._object* %11)
  br label %if.end.4

if.end.4:                                         ; preds = %if.else, %if.then.3
  br label %do.end

do.end:                                           ; preds = %if.end.4
  %12 = load %struct._object*, %struct._object** %v, align 8
  store %struct._object* %12, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %13 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %13
}

declare %struct._object* @PyUnicode_FromUnicode(i32*, i64) #1

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_FromUnicodeObject(%struct._object* %u, i32 %base) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %u.addr = alloca %struct._object*, align 8
  %base.addr = alloca i32, align 4
  %result = alloca %struct._object*, align 8
  %asciidig = alloca %struct._object*, align 8
  %buffer = alloca i8*, align 8
  %end = alloca i8*, align 8
  %buflen = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp29 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp43 = alloca %struct._object*, align 8
  store %struct._object* %u, %struct._object** %u.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  store i8* null, i8** %end, align 8
  %0 = load %struct._object*, %struct._object** %u.addr, align 8
  %call = call %struct._object* @_PyUnicode_TransformDecimalAndSpaceToASCII(%struct._object* %0)
  store %struct._object* %call, %struct._object** %asciidig, align 8
  %1 = load %struct._object*, %struct._object** %asciidig, align 8
  %cmp = icmp eq %struct._object* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %asciidig, align 8
  %call1 = call i8* @PyUnicode_AsUTF8AndSize(%struct._object* %2, i64* %buflen)
  store i8* %call1, i8** %buffer, align 8
  %3 = load i8*, i8** %buffer, align 8
  %cmp2 = icmp eq i8* %3, null
  br i1 %cmp2, label %if.then.3, label %if.else.10

if.then.3:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.3
  %4 = load %struct._object*, %struct._object** %asciidig, align 8
  store %struct._object* %4, %struct._object** %_py_decref_tmp, align 8
  %5 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 0
  %6 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %6, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp4 = icmp ne i64 %dec, 0
  br i1 %cmp4, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %do.body
  br label %if.end.6

if.else:                                          ; preds = %do.body
  %7 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %7, i32 0, i32 1
  %8 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %8, i32 0, i32 4
  %9 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %9(%struct._object* %10)
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.then.5
  br label %do.end

do.end:                                           ; preds = %if.end.6
  %11 = load %struct._object*, %struct._object** @PyExc_UnicodeEncodeError, align 8
  %call7 = call i32 @PyErr_ExceptionMatches(%struct._object* %11)
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.end.9, label %if.then.8

if.then.8:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.9:                                         ; preds = %do.end
  br label %if.end.55

if.else.10:                                       ; preds = %if.end
  %12 = load i8*, i8** %buffer, align 8
  %13 = load i32, i32* %base.addr, align 4
  %call11 = call %struct._object* @PyLong_FromString(i8* %12, i8** %end, i32 %13)
  store %struct._object* %call11, %struct._object** %result, align 8
  %14 = load i8*, i8** %end, align 8
  %cmp12 = icmp eq i8* %14, null
  br i1 %cmp12, label %if.then.15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else.10
  %15 = load %struct._object*, %struct._object** %result, align 8
  %cmp13 = icmp ne %struct._object* %15, null
  br i1 %cmp13, label %land.lhs.true, label %if.end.27

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load i8*, i8** %end, align 8
  %17 = load i8*, i8** %buffer, align 8
  %18 = load i64, i64* %buflen, align 8
  %add.ptr = getelementptr i8, i8* %17, i64 %18
  %cmp14 = icmp eq i8* %16, %add.ptr
  br i1 %cmp14, label %if.then.15, label %if.end.27

if.then.15:                                       ; preds = %land.lhs.true, %if.else.10
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.15
  %19 = load %struct._object*, %struct._object** %asciidig, align 8
  store %struct._object* %19, %struct._object** %_py_decref_tmp17, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt18, align 8
  %dec19 = add i64 %21, -1
  store i64 %dec19, i64* %ob_refcnt18, align 8
  %cmp20 = icmp ne i64 %dec19, 0
  br i1 %cmp20, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25

if.else.22:                                       ; preds = %do.body.16
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  call void %24(%struct._object* %25)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  %26 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %26, %struct._object** %retval
  br label %return

if.end.27:                                        ; preds = %land.lhs.true, %lor.lhs.false
  br label %do.body.28

do.body.28:                                       ; preds = %if.end.27
  %27 = load %struct._object*, %struct._object** %asciidig, align 8
  store %struct._object* %27, %struct._object** %_py_decref_tmp29, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt30, align 8
  %dec31 = add i64 %29, -1
  store i64 %dec31, i64* %ob_refcnt30, align 8
  %cmp32 = icmp ne i64 %dec31, 0
  br i1 %cmp32, label %if.then.33, label %if.else.34

if.then.33:                                       ; preds = %do.body.28
  br label %if.end.37

if.else.34:                                       ; preds = %do.body.28
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8
  %ob_type35 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type35, align 8
  %tp_dealloc36 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc36, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp29, align 8
  call void %32(%struct._object* %33)
  br label %if.end.37

if.end.37:                                        ; preds = %if.else.34, %if.then.33
  br label %do.end.38

do.end.38:                                        ; preds = %if.end.37
  br label %do.body.39

do.body.39:                                       ; preds = %do.end.38
  %34 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %34, %struct._object** %_py_xdecref_tmp, align 8
  %35 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp40 = icmp ne %struct._object* %35, null
  br i1 %cmp40, label %if.then.41, label %if.end.53

if.then.41:                                       ; preds = %do.body.39
  br label %do.body.42

do.body.42:                                       ; preds = %if.then.41
  %36 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %36, %struct._object** %_py_decref_tmp43, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_refcnt44 = getelementptr inbounds %struct._object, %struct._object* %37, i32 0, i32 0
  %38 = load i64, i64* %ob_refcnt44, align 8
  %dec45 = add i64 %38, -1
  store i64 %dec45, i64* %ob_refcnt44, align 8
  %cmp46 = icmp ne i64 %dec45, 0
  br i1 %cmp46, label %if.then.47, label %if.else.48

if.then.47:                                       ; preds = %do.body.42
  br label %if.end.51

if.else.48:                                       ; preds = %do.body.42
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  %ob_type49 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 1
  %40 = load %struct._typeobject*, %struct._typeobject** %ob_type49, align 8
  %tp_dealloc50 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %40, i32 0, i32 4
  %41 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc50, align 8
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp43, align 8
  call void %41(%struct._object* %42)
  br label %if.end.51

if.end.51:                                        ; preds = %if.else.48, %if.then.47
  br label %do.end.52

do.end.52:                                        ; preds = %if.end.51
  br label %if.end.53

if.end.53:                                        ; preds = %do.end.52, %do.body.39
  br label %do.end.54

do.end.54:                                        ; preds = %if.end.53
  br label %if.end.55

if.end.55:                                        ; preds = %do.end.54, %if.end.9
  %43 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  %44 = load i32, i32* %base.addr, align 4
  %45 = load %struct._object*, %struct._object** %u.addr, align 8
  %call56 = call %struct._object* (%struct._object*, i8*, ...) @PyErr_Format(%struct._object* %43, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i32 0, i32 0), i32 %44, %struct._object* %45)
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.55, %do.end.26, %if.then.8, %if.then
  %46 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %46
}

declare %struct._object* @_PyUnicode_TransformDecimalAndSpaceToASCII(%struct._object*) #1

declare i8* @PyUnicode_AsUTF8AndSize(%struct._object*, i64*) #1

declare i32 @PyErr_ExceptionMatches(%struct._object*) #1

; Function Attrs: nounwind uwtable
define double @_PyLong_Frexp(%struct._longobject* %a, i64* %e) #0 {
entry:
  %retval = alloca double, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %e.addr = alloca i64*, align 8
  %a_size = alloca i64, align 8
  %a_bits = alloca i64, align 8
  %shift_digits = alloca i64, align 8
  %shift_bits = alloca i64, align 8
  %x_size = alloca i64, align 8
  %rem = alloca i32, align 4
  %x_digits = alloca [3 x i32], align 4
  %dx = alloca double, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store i64* %e, i64** %e.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %a_size, align 8
  %9 = load i64, i64* %a_size, align 8
  %cmp3 = icmp eq i64 %9, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %10 = load i64*, i64** %e.addr, align 8
  store i64 0, i64* %10, align 8
  store double 0.000000e+00, double* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %11 = load i64, i64* %a_size, align 8
  %sub4 = sub i64 %11, 1
  %12 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %sub4
  %13 = load i32, i32* %arrayidx, align 4
  %call = call i32 @bits_in_digit(i32 %13)
  %conv = sext i32 %call to i64
  store i64 %conv, i64* %a_bits, align 8
  %14 = load i64, i64* %a_size, align 8
  %cmp5 = icmp sge i64 %14, 307445734561825861
  br i1 %cmp5, label %land.lhs.true, label %if.end.12

land.lhs.true:                                    ; preds = %if.end
  %15 = load i64, i64* %a_size, align 8
  %cmp7 = icmp sgt i64 %15, 307445734561825861
  br i1 %cmp7, label %if.then.11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %16 = load i64, i64* %a_bits, align 8
  %cmp9 = icmp sgt i64 %16, 7
  br i1 %cmp9, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %lor.lhs.false, %land.lhs.true
  br label %overflow

if.end.12:                                        ; preds = %lor.lhs.false, %if.end
  %17 = load i64, i64* %a_size, align 8
  %sub13 = sub i64 %17, 1
  %mul = mul i64 %sub13, 30
  %18 = load i64, i64* %a_bits, align 8
  %add = add i64 %mul, %18
  store i64 %add, i64* %a_bits, align 8
  %19 = load i64, i64* %a_bits, align 8
  %cmp14 = icmp sle i64 %19, 55
  br i1 %cmp14, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %if.end.12
  %20 = load i64, i64* %a_bits, align 8
  %sub17 = sub i64 55, %20
  %div = sdiv i64 %sub17, 30
  store i64 %div, i64* %shift_digits, align 8
  %21 = load i64, i64* %a_bits, align 8
  %sub18 = sub i64 55, %21
  %rem19 = srem i64 %sub18, 30
  store i64 %rem19, i64* %shift_bits, align 8
  store i64 0, i64* %x_size, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.16
  %22 = load i64, i64* %x_size, align 8
  %23 = load i64, i64* %shift_digits, align 8
  %cmp20 = icmp slt i64 %22, %23
  br i1 %cmp20, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %24 = load i64, i64* %x_size, align 8
  %inc = add i64 %24, 1
  store i64 %inc, i64* %x_size, align 8
  %arrayidx22 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 %24
  store i32 0, i32* %arrayidx22, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %arraydecay = getelementptr inbounds [3 x i32], [3 x i32]* %x_digits, i32 0, i32 0
  %25 = load i64, i64* %x_size, align 8
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 %25
  %26 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit23 = getelementptr inbounds %struct._longobject, %struct._longobject* %26, i32 0, i32 1
  %arraydecay24 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit23, i32 0, i32 0
  %27 = load i64, i64* %a_size, align 8
  %28 = load i64, i64* %shift_bits, align 8
  %conv25 = trunc i64 %28 to i32
  %call26 = call i32 @v_lshift(i32* %add.ptr, i32* %arraydecay24, i64 %27, i32 %conv25)
  store i32 %call26, i32* %rem, align 4
  %29 = load i64, i64* %a_size, align 8
  %30 = load i64, i64* %x_size, align 8
  %add27 = add i64 %30, %29
  store i64 %add27, i64* %x_size, align 8
  %31 = load i32, i32* %rem, align 4
  %32 = load i64, i64* %x_size, align 8
  %inc28 = add i64 %32, 1
  store i64 %inc28, i64* %x_size, align 8
  %arrayidx29 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 %32
  store i32 %31, i32* %arrayidx29, align 4
  br label %if.end.60

if.else:                                          ; preds = %if.end.12
  %33 = load i64, i64* %a_bits, align 8
  %sub30 = sub i64 %33, 53
  %sub31 = sub i64 %sub30, 2
  %div32 = sdiv i64 %sub31, 30
  store i64 %div32, i64* %shift_digits, align 8
  %34 = load i64, i64* %a_bits, align 8
  %sub33 = sub i64 %34, 53
  %sub34 = sub i64 %sub33, 2
  %rem35 = srem i64 %sub34, 30
  store i64 %rem35, i64* %shift_bits, align 8
  %arraydecay36 = getelementptr inbounds [3 x i32], [3 x i32]* %x_digits, i32 0, i32 0
  %35 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit37 = getelementptr inbounds %struct._longobject, %struct._longobject* %35, i32 0, i32 1
  %arraydecay38 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit37, i32 0, i32 0
  %36 = load i64, i64* %shift_digits, align 8
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 %36
  %37 = load i64, i64* %a_size, align 8
  %38 = load i64, i64* %shift_digits, align 8
  %sub40 = sub i64 %37, %38
  %39 = load i64, i64* %shift_bits, align 8
  %conv41 = trunc i64 %39 to i32
  %call42 = call i32 @v_rshift(i32* %arraydecay36, i32* %add.ptr39, i64 %sub40, i32 %conv41)
  store i32 %call42, i32* %rem, align 4
  %40 = load i64, i64* %a_size, align 8
  %41 = load i64, i64* %shift_digits, align 8
  %sub43 = sub i64 %40, %41
  store i64 %sub43, i64* %x_size, align 8
  %42 = load i32, i32* %rem, align 4
  %tobool = icmp ne i32 %42, 0
  br i1 %tobool, label %if.then.44, label %if.else.46

if.then.44:                                       ; preds = %if.else
  %arrayidx45 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 0
  %43 = load i32, i32* %arrayidx45, align 4
  %or = or i32 %43, 1
  store i32 %or, i32* %arrayidx45, align 4
  br label %if.end.59

if.else.46:                                       ; preds = %if.else
  br label %while.cond.47

while.cond.47:                                    ; preds = %if.end.57, %if.else.46
  %44 = load i64, i64* %shift_digits, align 8
  %cmp48 = icmp sgt i64 %44, 0
  br i1 %cmp48, label %while.body.50, label %while.end.58

while.body.50:                                    ; preds = %while.cond.47
  %45 = load i64, i64* %shift_digits, align 8
  %dec = add i64 %45, -1
  store i64 %dec, i64* %shift_digits, align 8
  %46 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit51 = getelementptr inbounds %struct._longobject, %struct._longobject* %46, i32 0, i32 1
  %arrayidx52 = getelementptr [1 x i32], [1 x i32]* %ob_digit51, i32 0, i64 %dec
  %47 = load i32, i32* %arrayidx52, align 4
  %tobool53 = icmp ne i32 %47, 0
  br i1 %tobool53, label %if.then.54, label %if.end.57

if.then.54:                                       ; preds = %while.body.50
  %arrayidx55 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 0
  %48 = load i32, i32* %arrayidx55, align 4
  %or56 = or i32 %48, 1
  store i32 %or56, i32* %arrayidx55, align 4
  br label %while.end.58

if.end.57:                                        ; preds = %while.body.50
  br label %while.cond.47

while.end.58:                                     ; preds = %if.then.54, %while.cond.47
  br label %if.end.59

if.end.59:                                        ; preds = %while.end.58, %if.then.44
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %while.end
  %arrayidx61 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 0
  %49 = load i32, i32* %arrayidx61, align 4
  %and = and i32 %49, 7
  %idxprom = zext i32 %and to i64
  %arrayidx62 = getelementptr [8 x i32], [8 x i32]* @_PyLong_Frexp.half_even_correction, i32 0, i64 %idxprom
  %50 = load i32, i32* %arrayidx62, align 4
  %arrayidx63 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 0
  %51 = load i32, i32* %arrayidx63, align 4
  %add64 = add i32 %51, %50
  store i32 %add64, i32* %arrayidx63, align 4
  %52 = load i64, i64* %x_size, align 8
  %dec65 = add i64 %52, -1
  store i64 %dec65, i64* %x_size, align 8
  %arrayidx66 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 %dec65
  %53 = load i32, i32* %arrayidx66, align 4
  %conv67 = uitofp i32 %53 to double
  store double %conv67, double* %dx, align 8
  br label %while.cond.68

while.cond.68:                                    ; preds = %while.body.71, %if.end.60
  %54 = load i64, i64* %x_size, align 8
  %cmp69 = icmp sgt i64 %54, 0
  br i1 %cmp69, label %while.body.71, label %while.end.77

while.body.71:                                    ; preds = %while.cond.68
  %55 = load double, double* %dx, align 8
  %mul72 = fmul double %55, 0x41D0000000000000
  %56 = load i64, i64* %x_size, align 8
  %dec73 = add i64 %56, -1
  store i64 %dec73, i64* %x_size, align 8
  %arrayidx74 = getelementptr [3 x i32], [3 x i32]* %x_digits, i32 0, i64 %dec73
  %57 = load i32, i32* %arrayidx74, align 4
  %conv75 = uitofp i32 %57 to double
  %add76 = fadd double %mul72, %conv75
  store double %add76, double* %dx, align 8
  br label %while.cond.68

while.end.77:                                     ; preds = %while.cond.68
  %58 = load double, double* %dx, align 8
  %div78 = fdiv double %58, 0x4360000000000000
  store double %div78, double* %dx, align 8
  %59 = load double, double* %dx, align 8
  %cmp79 = fcmp oeq double %59, 1.000000e+00
  br i1 %cmp79, label %if.then.81, label %if.end.87

if.then.81:                                       ; preds = %while.end.77
  %60 = load i64, i64* %a_bits, align 8
  %cmp82 = icmp eq i64 %60, 9223372036854775807
  br i1 %cmp82, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %if.then.81
  br label %overflow

if.end.85:                                        ; preds = %if.then.81
  store double 5.000000e-01, double* %dx, align 8
  %61 = load i64, i64* %a_bits, align 8
  %add86 = add i64 %61, 1
  store i64 %add86, i64* %a_bits, align 8
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.85, %while.end.77
  %62 = load i64, i64* %a_bits, align 8
  %63 = load i64*, i64** %e.addr, align 8
  store i64 %62, i64* %63, align 8
  %64 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %65 = bitcast %struct._longobject* %64 to %struct.PyVarObject*
  %ob_size88 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %65, i32 0, i32 1
  %66 = load i64, i64* %ob_size88, align 8
  %cmp89 = icmp slt i64 %66, 0
  br i1 %cmp89, label %cond.true.91, label %cond.false.93

cond.true.91:                                     ; preds = %if.end.87
  %67 = load double, double* %dx, align 8
  %sub92 = fsub double -0.000000e+00, %67
  br label %cond.end.94

cond.false.93:                                    ; preds = %if.end.87
  %68 = load double, double* %dx, align 8
  br label %cond.end.94

cond.end.94:                                      ; preds = %cond.false.93, %cond.true.91
  %cond95 = phi double [ %sub92, %cond.true.91 ], [ %68, %cond.false.93 ]
  store double %cond95, double* %retval
  br label %return

overflow:                                         ; preds = %if.then.84, %if.then.11
  %69 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %69, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21, i32 0, i32 0))
  %70 = load i64*, i64** %e.addr, align 8
  store i64 0, i64* %70, align 8
  store double -1.000000e+00, double* %retval
  br label %return

return:                                           ; preds = %overflow, %cond.end.94, %if.then
  %71 = load double, double* %retval
  ret double %71
}

; Function Attrs: nounwind uwtable
define internal i32 @bits_in_digit(i32 %d) #0 {
entry:
  %d.addr = alloca i32, align 4
  %d_bits = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4
  store i32 0, i32* %d_bits, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %d.addr, align 4
  %cmp = icmp uge i32 %0, 32
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* %d_bits, align 4
  %add = add i32 %1, 6
  store i32 %add, i32* %d_bits, align 4
  %2 = load i32, i32* %d.addr, align 4
  %shr = lshr i32 %2, 6
  store i32 %shr, i32* %d.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %3 = load i32, i32* %d.addr, align 4
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr [32 x i8], [32 x i8]* @BitLengthTable, i32 0, i64 %idxprom
  %4 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %4 to i32
  %5 = load i32, i32* %d_bits, align 4
  %add1 = add i32 %5, %conv
  store i32 %add1, i32* %d_bits, align 4
  %6 = load i32, i32* %d_bits, align 4
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @v_lshift(i32* %z, i32* %a, i64 %m, i32 %d) #0 {
entry:
  %z.addr = alloca i32*, align 8
  %a.addr = alloca i32*, align 8
  %m.addr = alloca i64, align 8
  %d.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %carry = alloca i32, align 4
  %acc = alloca i64, align 8
  store i32* %z, i32** %z.addr, align 8
  store i32* %a, i32** %a.addr, align 8
  store i64 %m, i64* %m.addr, align 8
  store i32 %d, i32* %d.addr, align 4
  store i32 0, i32* %carry, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8
  %1 = load i64, i64* %m.addr, align 8
  %cmp = icmp slt i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %i, align 8
  %3 = load i32*, i32** %a.addr, align 8
  %arrayidx = getelementptr i32, i32* %3, i64 %2
  %4 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %4 to i64
  %5 = load i32, i32* %d.addr, align 4
  %sh_prom = zext i32 %5 to i64
  %shl = shl i64 %conv, %sh_prom
  %6 = load i32, i32* %carry, align 4
  %conv1 = zext i32 %6 to i64
  %or = or i64 %shl, %conv1
  store i64 %or, i64* %acc, align 8
  %7 = load i64, i64* %acc, align 8
  %conv2 = trunc i64 %7 to i32
  %and = and i32 %conv2, 1073741823
  %8 = load i64, i64* %i, align 8
  %9 = load i32*, i32** %z.addr, align 8
  %arrayidx3 = getelementptr i32, i32* %9, i64 %8
  store i32 %and, i32* %arrayidx3, align 4
  %10 = load i64, i64* %acc, align 8
  %shr = lshr i64 %10, 30
  %conv4 = trunc i64 %shr to i32
  store i32 %conv4, i32* %carry, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %i, align 8
  %inc = add i64 %11, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load i32, i32* %carry, align 4
  ret i32 %12
}

; Function Attrs: nounwind uwtable
define internal i32 @v_rshift(i32* %z, i32* %a, i64 %m, i32 %d) #0 {
entry:
  %z.addr = alloca i32*, align 8
  %a.addr = alloca i32*, align 8
  %m.addr = alloca i64, align 8
  %d.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %carry = alloca i32, align 4
  %mask = alloca i32, align 4
  %acc = alloca i64, align 8
  store i32* %z, i32** %z.addr, align 8
  store i32* %a, i32** %a.addr, align 8
  store i64 %m, i64* %m.addr, align 8
  store i32 %d, i32* %d.addr, align 4
  store i32 0, i32* %carry, align 4
  %0 = load i32, i32* %d.addr, align 4
  %shl = shl i32 1, %0
  %sub = sub i32 %shl, 1
  store i32 %sub, i32* %mask, align 4
  %1 = load i64, i64* %m.addr, align 8
  store i64 %1, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %2 = load i64, i64* %i, align 8
  %dec = add i64 %2, -1
  store i64 %dec, i64* %i, align 8
  %cmp = icmp sgt i64 %2, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %carry, align 4
  %conv = zext i32 %3 to i64
  %shl1 = shl i64 %conv, 30
  %4 = load i64, i64* %i, align 8
  %5 = load i32*, i32** %a.addr, align 8
  %arrayidx = getelementptr i32, i32* %5, i64 %4
  %6 = load i32, i32* %arrayidx, align 4
  %conv2 = zext i32 %6 to i64
  %or = or i64 %shl1, %conv2
  store i64 %or, i64* %acc, align 8
  %7 = load i64, i64* %acc, align 8
  %conv3 = trunc i64 %7 to i32
  %8 = load i32, i32* %mask, align 4
  %and = and i32 %conv3, %8
  store i32 %and, i32* %carry, align 4
  %9 = load i64, i64* %acc, align 8
  %10 = load i32, i32* %d.addr, align 4
  %sh_prom = zext i32 %10 to i64
  %shr = lshr i64 %9, %sh_prom
  %conv4 = trunc i64 %shr to i32
  %11 = load i64, i64* %i, align 8
  %12 = load i32*, i32** %z.addr, align 8
  %arrayidx5 = getelementptr i32, i32* %12, i64 %11
  store i32 %conv4, i32* %arrayidx5, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %carry, align 4
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define double @PyLong_AsDouble(%struct._object* %v) #0 {
entry:
  %retval = alloca double, align 8
  %v.addr = alloca %struct._object*, align 8
  %exponent = alloca i64, align 8
  %x = alloca double, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8
  %0 = load %struct._object*, %struct._object** %v.addr, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_PyErr_BadInternalCall(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 2702)
  store double -1.000000e+00, double* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %v.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  %4 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0))
  store double -1.000000e+00, double* %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load %struct._object*, %struct._object** %v.addr, align 8
  %6 = bitcast %struct._object* %5 to %struct._longobject*
  %call = call double @_PyLong_Frexp(%struct._longobject* %6, i64* %exponent)
  store double %call, double* %x, align 8
  %7 = load double, double* %x, align 8
  %cmp4 = fcmp oeq double %7, -1.000000e+00
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end.3
  %call5 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call5, null
  br i1 %tobool, label %if.then.7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end.3
  %8 = load i64, i64* %exponent, align 8
  %cmp6 = icmp sgt i64 %8, 1024
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %9 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i32 0, i32 0))
  store double -1.000000e+00, double* %retval
  br label %return

if.end.8:                                         ; preds = %lor.lhs.false
  %10 = load double, double* %x, align 8
  %11 = load i64, i64* %exponent, align 8
  %conv = trunc i64 %11 to i32
  %call9 = call double @ldexp(double %10, i32 %conv) #4
  store double %call9, double* %retval
  br label %return

return:                                           ; preds = %if.end.8, %if.then.7, %if.then.2, %if.then
  %12 = load double, double* %retval
  ret double %12
}

; Function Attrs: nounwind uwtable
define %struct._object* @_PyLong_DivmodNear(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  %quo = alloca %struct._longobject*, align 8
  %rem = alloca %struct._longobject*, align 8
  %one = alloca %struct._object*, align 8
  %twice_rem = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %cmp = alloca i32, align 4
  %quo_is_odd = alloca i32, align 4
  %quo_is_neg = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp40 = alloca %struct._object*, align 8
  %_py_decref_tmp76 = alloca %struct._object*, align 8
  %_py_decref_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp123 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp139 = alloca %struct._object*, align 8
  %_py_xdecref_tmp153 = alloca %struct._object*, align 8
  %_py_decref_tmp158 = alloca %struct._object*, align 8
  %_py_xdecref_tmp172 = alloca %struct._object*, align 8
  %_py_decref_tmp177 = alloca %struct._object*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8
  store %struct._object* %b, %struct._object** %b.addr, align 8
  store %struct._longobject* null, %struct._longobject** %quo, align 8
  store %struct._longobject* null, %struct._longobject** %rem, align 8
  store %struct._object* null, %struct._object** %one, align 8
  %0 = load %struct._object*, %struct._object** %a.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp1 = icmp ne i64 %and, 0
  br i1 %cmp1, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct._object*, %struct._object** %b.addr, align 8
  %ob_type2 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type2, align 8
  %tp_flags3 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags3, align 8
  %and4 = and i64 %5, 16777216
  %cmp5 = icmp ne i64 %and4, 0
  br i1 %cmp5, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct._object*, %struct._object** %a.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %8, i32 0, i32 1
  %9 = load i64, i64* %ob_size, align 8
  %cmp6 = icmp slt i64 %9, 0
  %conv = zext i1 %cmp6 to i32
  %10 = load %struct._object*, %struct._object** %b.addr, align 8
  %11 = bitcast %struct._object* %10 to %struct.PyVarObject*
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  %12 = load i64, i64* %ob_size7, align 8
  %cmp8 = icmp slt i64 %12, 0
  %conv9 = zext i1 %cmp8 to i32
  %cmp10 = icmp ne i32 %conv, %conv9
  %conv11 = zext i1 %cmp10 to i32
  store i32 %conv11, i32* %quo_is_neg, align 4
  %call = call %struct._object* @PyLong_FromLong(i64 1)
  store %struct._object* %call, %struct._object** %one, align 8
  %13 = load %struct._object*, %struct._object** %one, align 8
  %cmp12 = icmp eq %struct._object* %13, null
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.15:                                        ; preds = %if.end
  %14 = load %struct._object*, %struct._object** %a.addr, align 8
  %15 = bitcast %struct._object* %14 to %struct._longobject*
  %16 = load %struct._object*, %struct._object** %b.addr, align 8
  %17 = bitcast %struct._object* %16 to %struct._longobject*
  %call16 = call i32 @long_divrem(%struct._longobject* %15, %struct._longobject* %17, %struct._longobject** %quo, %struct._longobject** %rem)
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.15
  br label %error

if.end.20:                                        ; preds = %if.end.15
  %18 = load %struct._longobject*, %struct._longobject** %rem, align 8
  %19 = bitcast %struct._longobject* %18 to %struct._object*
  %20 = load %struct._object*, %struct._object** %one, align 8
  %call21 = call %struct._object* @long_lshift(%struct._object* %19, %struct._object* %20)
  store %struct._object* %call21, %struct._object** %twice_rem, align 8
  %21 = load %struct._object*, %struct._object** %twice_rem, align 8
  %cmp22 = icmp eq %struct._object* %21, null
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.20
  br label %error

if.end.25:                                        ; preds = %if.end.20
  %22 = load i32, i32* %quo_is_neg, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then.26, label %if.end.37

if.then.26:                                       ; preds = %if.end.25
  %23 = load %struct._object*, %struct._object** %twice_rem, align 8
  %24 = bitcast %struct._object* %23 to %struct._longobject*
  %call27 = call %struct._object* @long_neg(%struct._longobject* %24)
  store %struct._object* %call27, %struct._object** %temp, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.26
  %25 = load %struct._object*, %struct._object** %twice_rem, align 8
  store %struct._object* %25, %struct._object** %_py_decref_tmp, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %27, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp28 = icmp ne i64 %dec, 0
  br i1 %cmp28, label %if.then.30, label %if.else

if.then.30:                                       ; preds = %do.body
  br label %if.end.32

if.else:                                          ; preds = %do.body
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type31 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type31, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %30(%struct._object* %31)
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.30
  br label %do.end

do.end:                                           ; preds = %if.end.32
  %32 = load %struct._object*, %struct._object** %temp, align 8
  store %struct._object* %32, %struct._object** %twice_rem, align 8
  %33 = load %struct._object*, %struct._object** %twice_rem, align 8
  %cmp33 = icmp eq %struct._object* %33, null
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %do.end
  br label %error

if.end.36:                                        ; preds = %do.end
  br label %if.end.37

if.end.37:                                        ; preds = %if.end.36, %if.end.25
  %34 = load %struct._object*, %struct._object** %twice_rem, align 8
  %35 = bitcast %struct._object* %34 to %struct._longobject*
  %36 = load %struct._object*, %struct._object** %b.addr, align 8
  %37 = bitcast %struct._object* %36 to %struct._longobject*
  %call38 = call i32 @long_compare(%struct._longobject* %35, %struct._longobject* %37)
  store i32 %call38, i32* %cmp, align 4
  br label %do.body.39

do.body.39:                                       ; preds = %if.end.37
  %38 = load %struct._object*, %struct._object** %twice_rem, align 8
  store %struct._object* %38, %struct._object** %_py_decref_tmp40, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8
  %ob_refcnt41 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0
  %40 = load i64, i64* %ob_refcnt41, align 8
  %dec42 = add i64 %40, -1
  store i64 %dec42, i64* %ob_refcnt41, align 8
  %cmp43 = icmp ne i64 %dec42, 0
  br i1 %cmp43, label %if.then.45, label %if.else.46

if.then.45:                                       ; preds = %do.body.39
  br label %if.end.49

if.else.46:                                       ; preds = %do.body.39
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8
  %ob_type47 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type47, align 8
  %tp_dealloc48 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc48, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp40, align 8
  call void %43(%struct._object* %44)
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.46, %if.then.45
  br label %do.end.50

do.end.50:                                        ; preds = %if.end.49
  %45 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %46 = bitcast %struct._longobject* %45 to %struct.PyVarObject*
  %ob_size51 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %46, i32 0, i32 1
  %47 = load i64, i64* %ob_size51, align 8
  %cmp52 = icmp ne i64 %47, 0
  br i1 %cmp52, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.end.50
  %48 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %48, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %49 = load i32, i32* %arrayidx, align 4
  %and54 = and i32 %49, 1
  %cmp55 = icmp ne i32 %and54, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end.50
  %50 = phi i1 [ false, %do.end.50 ], [ %cmp55, %land.rhs ]
  %land.ext = zext i1 %50 to i32
  store i32 %land.ext, i32* %quo_is_odd, align 4
  %51 = load %struct._object*, %struct._object** %b.addr, align 8
  %52 = bitcast %struct._object* %51 to %struct.PyVarObject*
  %ob_size57 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %52, i32 0, i32 1
  %53 = load i64, i64* %ob_size57, align 8
  %cmp58 = icmp slt i64 %53, 0
  br i1 %cmp58, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.end
  %54 = load i32, i32* %cmp, align 4
  %cmp60 = icmp slt i32 %54, 0
  br i1 %cmp60, label %if.then.68, label %lor.lhs.false.64

cond.false:                                       ; preds = %land.end
  %55 = load i32, i32* %cmp, align 4
  %cmp62 = icmp sgt i32 %55, 0
  br i1 %cmp62, label %if.then.68, label %lor.lhs.false.64

lor.lhs.false.64:                                 ; preds = %cond.false, %cond.true
  %56 = load i32, i32* %cmp, align 4
  %cmp65 = icmp eq i32 %56, 0
  br i1 %cmp65, label %land.lhs.true, label %if.end.113

land.lhs.true:                                    ; preds = %lor.lhs.false.64
  %57 = load i32, i32* %quo_is_odd, align 4
  %tobool67 = icmp ne i32 %57, 0
  br i1 %tobool67, label %if.then.68, label %if.end.113

if.then.68:                                       ; preds = %land.lhs.true, %cond.false, %cond.true
  %58 = load i32, i32* %quo_is_neg, align 4
  %tobool69 = icmp ne i32 %58, 0
  br i1 %tobool69, label %if.then.70, label %if.else.72

if.then.70:                                       ; preds = %if.then.68
  %59 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %60 = load %struct._object*, %struct._object** %one, align 8
  %61 = bitcast %struct._object* %60 to %struct._longobject*
  %call71 = call %struct._object* @long_sub(%struct._longobject* %59, %struct._longobject* %61)
  store %struct._object* %call71, %struct._object** %temp, align 8
  br label %if.end.74

if.else.72:                                       ; preds = %if.then.68
  %62 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %63 = load %struct._object*, %struct._object** %one, align 8
  %64 = bitcast %struct._object* %63 to %struct._longobject*
  %call73 = call %struct._object* @long_add(%struct._longobject* %62, %struct._longobject* %64)
  store %struct._object* %call73, %struct._object** %temp, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.else.72, %if.then.70
  br label %do.body.75

do.body.75:                                       ; preds = %if.end.74
  %65 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %66 = bitcast %struct._longobject* %65 to %struct._object*
  store %struct._object* %66, %struct._object** %_py_decref_tmp76, align 8
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 0
  %68 = load i64, i64* %ob_refcnt77, align 8
  %dec78 = add i64 %68, -1
  store i64 %dec78, i64* %ob_refcnt77, align 8
  %cmp79 = icmp ne i64 %dec78, 0
  br i1 %cmp79, label %if.then.81, label %if.else.82

if.then.81:                                       ; preds = %do.body.75
  br label %if.end.85

if.else.82:                                       ; preds = %do.body.75
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8
  %ob_type83 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 1
  %70 = load %struct._typeobject*, %struct._typeobject** %ob_type83, align 8
  %tp_dealloc84 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %70, i32 0, i32 4
  %71 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc84, align 8
  %72 = load %struct._object*, %struct._object** %_py_decref_tmp76, align 8
  call void %71(%struct._object* %72)
  br label %if.end.85

if.end.85:                                        ; preds = %if.else.82, %if.then.81
  br label %do.end.86

do.end.86:                                        ; preds = %if.end.85
  %73 = load %struct._object*, %struct._object** %temp, align 8
  %74 = bitcast %struct._object* %73 to %struct._longobject*
  store %struct._longobject* %74, %struct._longobject** %quo, align 8
  %75 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %cmp87 = icmp eq %struct._longobject* %75, null
  br i1 %cmp87, label %if.then.89, label %if.end.90

if.then.89:                                       ; preds = %do.end.86
  br label %error

if.end.90:                                        ; preds = %do.end.86
  %76 = load i32, i32* %quo_is_neg, align 4
  %tobool91 = icmp ne i32 %76, 0
  br i1 %tobool91, label %if.then.92, label %if.else.94

if.then.92:                                       ; preds = %if.end.90
  %77 = load %struct._longobject*, %struct._longobject** %rem, align 8
  %78 = load %struct._object*, %struct._object** %b.addr, align 8
  %79 = bitcast %struct._object* %78 to %struct._longobject*
  %call93 = call %struct._object* @long_add(%struct._longobject* %77, %struct._longobject* %79)
  store %struct._object* %call93, %struct._object** %temp, align 8
  br label %if.end.96

if.else.94:                                       ; preds = %if.end.90
  %80 = load %struct._longobject*, %struct._longobject** %rem, align 8
  %81 = load %struct._object*, %struct._object** %b.addr, align 8
  %82 = bitcast %struct._object* %81 to %struct._longobject*
  %call95 = call %struct._object* @long_sub(%struct._longobject* %80, %struct._longobject* %82)
  store %struct._object* %call95, %struct._object** %temp, align 8
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.94, %if.then.92
  br label %do.body.97

do.body.97:                                       ; preds = %if.end.96
  %83 = load %struct._longobject*, %struct._longobject** %rem, align 8
  %84 = bitcast %struct._longobject* %83 to %struct._object*
  store %struct._object* %84, %struct._object** %_py_decref_tmp98, align 8
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0
  %86 = load i64, i64* %ob_refcnt99, align 8
  %dec100 = add i64 %86, -1
  store i64 %dec100, i64* %ob_refcnt99, align 8
  %cmp101 = icmp ne i64 %dec100, 0
  br i1 %cmp101, label %if.then.103, label %if.else.104

if.then.103:                                      ; preds = %do.body.97
  br label %if.end.107

if.else.104:                                      ; preds = %do.body.97
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8
  %ob_type105 = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type105, align 8
  %tp_dealloc106 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc106, align 8
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8
  call void %89(%struct._object* %90)
  br label %if.end.107

if.end.107:                                       ; preds = %if.else.104, %if.then.103
  br label %do.end.108

do.end.108:                                       ; preds = %if.end.107
  %91 = load %struct._object*, %struct._object** %temp, align 8
  %92 = bitcast %struct._object* %91 to %struct._longobject*
  store %struct._longobject* %92, %struct._longobject** %rem, align 8
  %93 = load %struct._longobject*, %struct._longobject** %rem, align 8
  %cmp109 = icmp eq %struct._longobject* %93, null
  br i1 %cmp109, label %if.then.111, label %if.end.112

if.then.111:                                      ; preds = %do.end.108
  br label %error

if.end.112:                                       ; preds = %do.end.108
  br label %if.end.113

if.end.113:                                       ; preds = %if.end.112, %land.lhs.true, %lor.lhs.false.64
  %call114 = call %struct._object* @PyTuple_New(i64 2)
  store %struct._object* %call114, %struct._object** %result, align 8
  %94 = load %struct._object*, %struct._object** %result, align 8
  %cmp115 = icmp eq %struct._object* %94, null
  br i1 %cmp115, label %if.then.117, label %if.end.118

if.then.117:                                      ; preds = %if.end.113
  br label %error

if.end.118:                                       ; preds = %if.end.113
  %95 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %96 = bitcast %struct._longobject* %95 to %struct._object*
  %97 = load %struct._object*, %struct._object** %result, align 8
  %98 = bitcast %struct._object* %97 to %struct.PyTupleObject*
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %98, i32 0, i32 1
  %arrayidx119 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 0
  store %struct._object* %96, %struct._object** %arrayidx119, align 8
  %99 = load %struct._longobject*, %struct._longobject** %rem, align 8
  %100 = bitcast %struct._longobject* %99 to %struct._object*
  %101 = load %struct._object*, %struct._object** %result, align 8
  %102 = bitcast %struct._object* %101 to %struct.PyTupleObject*
  %ob_item120 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %102, i32 0, i32 1
  %arrayidx121 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item120, i32 0, i64 1
  store %struct._object* %100, %struct._object** %arrayidx121, align 8
  br label %do.body.122

do.body.122:                                      ; preds = %if.end.118
  %103 = load %struct._object*, %struct._object** %one, align 8
  store %struct._object* %103, %struct._object** %_py_decref_tmp123, align 8
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp123, align 8
  %ob_refcnt124 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0
  %105 = load i64, i64* %ob_refcnt124, align 8
  %dec125 = add i64 %105, -1
  store i64 %dec125, i64* %ob_refcnt124, align 8
  %cmp126 = icmp ne i64 %dec125, 0
  br i1 %cmp126, label %if.then.128, label %if.else.129

if.then.128:                                      ; preds = %do.body.122
  br label %if.end.132

if.else.129:                                      ; preds = %do.body.122
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp123, align 8
  %ob_type130 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type130, align 8
  %tp_dealloc131 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc131, align 8
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp123, align 8
  call void %108(%struct._object* %109)
  br label %if.end.132

if.end.132:                                       ; preds = %if.else.129, %if.then.128
  br label %do.end.133

do.end.133:                                       ; preds = %if.end.132
  %110 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %110, %struct._object** %retval
  br label %return

error:                                            ; preds = %if.then.117, %if.then.111, %if.then.89, %if.then.35, %if.then.24, %if.then.19
  br label %do.body.134

do.body.134:                                      ; preds = %error
  %111 = load %struct._longobject*, %struct._longobject** %quo, align 8
  %112 = bitcast %struct._longobject* %111 to %struct._object*
  store %struct._object* %112, %struct._object** %_py_xdecref_tmp, align 8
  %113 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp135 = icmp ne %struct._object* %113, null
  br i1 %cmp135, label %if.then.137, label %if.end.150

if.then.137:                                      ; preds = %do.body.134
  br label %do.body.138

do.body.138:                                      ; preds = %if.then.137
  %114 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %114, %struct._object** %_py_decref_tmp139, align 8
  %115 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  %ob_refcnt140 = getelementptr inbounds %struct._object, %struct._object* %115, i32 0, i32 0
  %116 = load i64, i64* %ob_refcnt140, align 8
  %dec141 = add i64 %116, -1
  store i64 %dec141, i64* %ob_refcnt140, align 8
  %cmp142 = icmp ne i64 %dec141, 0
  br i1 %cmp142, label %if.then.144, label %if.else.145

if.then.144:                                      ; preds = %do.body.138
  br label %if.end.148

if.else.145:                                      ; preds = %do.body.138
  %117 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  %ob_type146 = getelementptr inbounds %struct._object, %struct._object* %117, i32 0, i32 1
  %118 = load %struct._typeobject*, %struct._typeobject** %ob_type146, align 8
  %tp_dealloc147 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %118, i32 0, i32 4
  %119 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc147, align 8
  %120 = load %struct._object*, %struct._object** %_py_decref_tmp139, align 8
  call void %119(%struct._object* %120)
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.145, %if.then.144
  br label %do.end.149

do.end.149:                                       ; preds = %if.end.148
  br label %if.end.150

if.end.150:                                       ; preds = %do.end.149, %do.body.134
  br label %do.end.151

do.end.151:                                       ; preds = %if.end.150
  br label %do.body.152

do.body.152:                                      ; preds = %do.end.151
  %121 = load %struct._longobject*, %struct._longobject** %rem, align 8
  %122 = bitcast %struct._longobject* %121 to %struct._object*
  store %struct._object* %122, %struct._object** %_py_xdecref_tmp153, align 8
  %123 = load %struct._object*, %struct._object** %_py_xdecref_tmp153, align 8
  %cmp154 = icmp ne %struct._object* %123, null
  br i1 %cmp154, label %if.then.156, label %if.end.169

if.then.156:                                      ; preds = %do.body.152
  br label %do.body.157

do.body.157:                                      ; preds = %if.then.156
  %124 = load %struct._object*, %struct._object** %_py_xdecref_tmp153, align 8
  store %struct._object* %124, %struct._object** %_py_decref_tmp158, align 8
  %125 = load %struct._object*, %struct._object** %_py_decref_tmp158, align 8
  %ob_refcnt159 = getelementptr inbounds %struct._object, %struct._object* %125, i32 0, i32 0
  %126 = load i64, i64* %ob_refcnt159, align 8
  %dec160 = add i64 %126, -1
  store i64 %dec160, i64* %ob_refcnt159, align 8
  %cmp161 = icmp ne i64 %dec160, 0
  br i1 %cmp161, label %if.then.163, label %if.else.164

if.then.163:                                      ; preds = %do.body.157
  br label %if.end.167

if.else.164:                                      ; preds = %do.body.157
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp158, align 8
  %ob_type165 = getelementptr inbounds %struct._object, %struct._object* %127, i32 0, i32 1
  %128 = load %struct._typeobject*, %struct._typeobject** %ob_type165, align 8
  %tp_dealloc166 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %128, i32 0, i32 4
  %129 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc166, align 8
  %130 = load %struct._object*, %struct._object** %_py_decref_tmp158, align 8
  call void %129(%struct._object* %130)
  br label %if.end.167

if.end.167:                                       ; preds = %if.else.164, %if.then.163
  br label %do.end.168

do.end.168:                                       ; preds = %if.end.167
  br label %if.end.169

if.end.169:                                       ; preds = %do.end.168, %do.body.152
  br label %do.end.170

do.end.170:                                       ; preds = %if.end.169
  br label %do.body.171

do.body.171:                                      ; preds = %do.end.170
  %131 = load %struct._object*, %struct._object** %one, align 8
  store %struct._object* %131, %struct._object** %_py_xdecref_tmp172, align 8
  %132 = load %struct._object*, %struct._object** %_py_xdecref_tmp172, align 8
  %cmp173 = icmp ne %struct._object* %132, null
  br i1 %cmp173, label %if.then.175, label %if.end.188

if.then.175:                                      ; preds = %do.body.171
  br label %do.body.176

do.body.176:                                      ; preds = %if.then.175
  %133 = load %struct._object*, %struct._object** %_py_xdecref_tmp172, align 8
  store %struct._object* %133, %struct._object** %_py_decref_tmp177, align 8
  %134 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  %ob_refcnt178 = getelementptr inbounds %struct._object, %struct._object* %134, i32 0, i32 0
  %135 = load i64, i64* %ob_refcnt178, align 8
  %dec179 = add i64 %135, -1
  store i64 %dec179, i64* %ob_refcnt178, align 8
  %cmp180 = icmp ne i64 %dec179, 0
  br i1 %cmp180, label %if.then.182, label %if.else.183

if.then.182:                                      ; preds = %do.body.176
  br label %if.end.186

if.else.183:                                      ; preds = %do.body.176
  %136 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  %ob_type184 = getelementptr inbounds %struct._object, %struct._object* %136, i32 0, i32 1
  %137 = load %struct._typeobject*, %struct._typeobject** %ob_type184, align 8
  %tp_dealloc185 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %137, i32 0, i32 4
  %138 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc185, align 8
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp177, align 8
  call void %138(%struct._object* %139)
  br label %if.end.186

if.end.186:                                       ; preds = %if.else.183, %if.then.182
  br label %do.end.187

do.end.187:                                       ; preds = %if.end.186
  br label %if.end.188

if.end.188:                                       ; preds = %do.end.187, %do.body.171
  br label %do.end.189

do.end.189:                                       ; preds = %if.end.188
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.189, %do.end.133, %if.then.14, %if.then
  %140 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %140
}

; Function Attrs: nounwind uwtable
define internal i32 @long_divrem(%struct._longobject* %a, %struct._longobject* %b, %struct._longobject** %pdiv, %struct._longobject** %prem) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %pdiv.addr = alloca %struct._longobject**, align 8
  %prem.addr = alloca %struct._longobject**, align 8
  %size_a = alloca i64, align 8
  %size_b = alloca i64, align 8
  %z = alloca %struct._longobject*, align 8
  %rem = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp67 = alloca %struct._object*, align 8
  %_py_decref_tmp94 = alloca %struct._object*, align 8
  %_py_tmp106 = alloca %struct._object*, align 8
  %_py_decref_tmp111 = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  store %struct._longobject** %pdiv, %struct._longobject*** %pdiv.addr, align 8
  store %struct._longobject** %prem, %struct._longobject*** %prem.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size_a, align 8
  %9 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  br i1 %cmp4, label %cond.true.5, label %cond.false.8

cond.true.5:                                      ; preds = %cond.end
  %12 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %14
  br label %cond.end.10

cond.false.8:                                     ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.5
  %cond11 = phi i64 [ %sub7, %cond.true.5 ], [ %17, %cond.false.8 ]
  store i64 %cond11, i64* %size_b, align 8
  %18 = load i64, i64* %size_b, align 8
  %cmp12 = icmp eq i64 %18, 0
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.10
  %19 = load %struct._object*, %struct._object** @PyExc_ZeroDivisionError, align 8
  call void @PyErr_SetString(%struct._object* %19, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.10
  %20 = load i64, i64* %size_a, align 8
  %21 = load i64, i64* %size_b, align 8
  %cmp13 = icmp slt i64 %20, %21
  br i1 %cmp13, label %if.then.20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %22 = load i64, i64* %size_a, align 8
  %23 = load i64, i64* %size_b, align 8
  %cmp14 = icmp eq i64 %22, %23
  br i1 %cmp14, label %land.lhs.true, label %if.end.24

land.lhs.true:                                    ; preds = %lor.lhs.false
  %24 = load i64, i64* %size_a, align 8
  %sub15 = sub i64 %24, 1
  %25 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %25, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %sub15
  %26 = load i32, i32* %arrayidx, align 4
  %27 = load i64, i64* %size_b, align 8
  %sub16 = sub i64 %27, 1
  %28 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit17 = getelementptr inbounds %struct._longobject, %struct._longobject* %28, i32 0, i32 1
  %arrayidx18 = getelementptr [1 x i32], [1 x i32]* %ob_digit17, i32 0, i64 %sub16
  %29 = load i32, i32* %arrayidx18, align 4
  %cmp19 = icmp ult i32 %26, %29
  br i1 %cmp19, label %if.then.20, label %if.end.24

if.then.20:                                       ; preds = %land.lhs.true, %if.end
  %call = call %struct._object* @PyLong_FromLong(i64 0)
  %30 = bitcast %struct._object* %call to %struct._longobject*
  %31 = load %struct._longobject**, %struct._longobject*** %pdiv.addr, align 8
  store %struct._longobject* %30, %struct._longobject** %31, align 8
  %32 = load %struct._longobject**, %struct._longobject*** %pdiv.addr, align 8
  %33 = load %struct._longobject*, %struct._longobject** %32, align 8
  %cmp21 = icmp eq %struct._longobject* %33, null
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.then.20
  store i32 -1, i32* %retval
  br label %return

if.end.23:                                        ; preds = %if.then.20
  %34 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %35 = bitcast %struct._longobject* %34 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %35, i32 0, i32 0
  %36 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %36, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %37 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %38 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* %37, %struct._longobject** %38, align 8
  store i32 0, i32* %retval
  br label %return

if.end.24:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %39 = load i64, i64* %size_b, align 8
  %cmp25 = icmp eq i64 %39, 1
  br i1 %cmp25, label %if.then.26, label %if.else.43

if.then.26:                                       ; preds = %if.end.24
  store i32 0, i32* %rem, align 4
  %40 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %41 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit27 = getelementptr inbounds %struct._longobject, %struct._longobject* %41, i32 0, i32 1
  %arrayidx28 = getelementptr [1 x i32], [1 x i32]* %ob_digit27, i32 0, i64 0
  %42 = load i32, i32* %arrayidx28, align 4
  %call29 = call %struct._longobject* @divrem1(%struct._longobject* %40, i32 %42, i32* %rem)
  store %struct._longobject* %call29, %struct._longobject** %z, align 8
  %43 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp30 = icmp eq %struct._longobject* %43, null
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.then.26
  store i32 -1, i32* %retval
  br label %return

if.end.32:                                        ; preds = %if.then.26
  %44 = load i32, i32* %rem, align 4
  %conv = zext i32 %44 to i64
  %call33 = call %struct._object* @PyLong_FromLong(i64 %conv)
  %45 = bitcast %struct._object* %call33 to %struct._longobject*
  %46 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* %45, %struct._longobject** %46, align 8
  %47 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  %48 = load %struct._longobject*, %struct._longobject** %47, align 8
  %cmp34 = icmp eq %struct._longobject* %48, null
  br i1 %cmp34, label %if.then.36, label %if.end.42

if.then.36:                                       ; preds = %if.end.32
  br label %do.body

do.body:                                          ; preds = %if.then.36
  %49 = load %struct._longobject*, %struct._longobject** %z, align 8
  %50 = bitcast %struct._longobject* %49 to %struct._object*
  store %struct._object* %50, %struct._object** %_py_decref_tmp, align 8
  %51 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %51, i32 0, i32 0
  %52 = load i64, i64* %ob_refcnt37, align 8
  %dec = add i64 %52, -1
  store i64 %dec, i64* %ob_refcnt37, align 8
  %cmp38 = icmp ne i64 %dec, 0
  br i1 %cmp38, label %if.then.40, label %if.else

if.then.40:                                       ; preds = %do.body
  br label %if.end.41

if.else:                                          ; preds = %do.body
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %53, i32 0, i32 1
  %54 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %54, i32 0, i32 4
  %55 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %55(%struct._object* %56)
  br label %if.end.41

if.end.41:                                        ; preds = %if.else, %if.then.40
  br label %do.end

do.end:                                           ; preds = %if.end.41
  store i32 -1, i32* %retval
  br label %return

if.end.42:                                        ; preds = %if.end.32
  br label %if.end.49

if.else.43:                                       ; preds = %if.end.24
  %57 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %58 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %59 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  %call44 = call %struct._longobject* @x_divrem(%struct._longobject* %57, %struct._longobject* %58, %struct._longobject** %59)
  store %struct._longobject* %call44, %struct._longobject** %z, align 8
  %60 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp45 = icmp eq %struct._longobject* %60, null
  br i1 %cmp45, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.else.43
  store i32 -1, i32* %retval
  br label %return

if.end.48:                                        ; preds = %if.else.43
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.end.42
  %61 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %62 = bitcast %struct._longobject* %61 to %struct.PyVarObject*
  %ob_size50 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %62, i32 0, i32 1
  %63 = load i64, i64* %ob_size50, align 8
  %cmp51 = icmp slt i64 %63, 0
  %conv52 = zext i1 %cmp51 to i32
  %64 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %65 = bitcast %struct._longobject* %64 to %struct.PyVarObject*
  %ob_size53 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %65, i32 0, i32 1
  %66 = load i64, i64* %ob_size53, align 8
  %cmp54 = icmp slt i64 %66, 0
  %conv55 = zext i1 %cmp54 to i32
  %cmp56 = icmp ne i32 %conv52, %conv55
  br i1 %cmp56, label %if.then.58, label %if.end.81

if.then.58:                                       ; preds = %if.end.49
  call void @_PyLong_Negate(%struct._longobject** %z)
  %67 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp59 = icmp eq %struct._longobject* %67, null
  br i1 %cmp59, label %if.then.61, label %if.end.80

if.then.61:                                       ; preds = %if.then.58
  br label %do.body.62

do.body.62:                                       ; preds = %if.then.61
  %68 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  %69 = load %struct._longobject*, %struct._longobject** %68, align 8
  %70 = bitcast %struct._longobject* %69 to %struct._object*
  store %struct._object* %70, %struct._object** %_py_tmp, align 8
  %71 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp63 = icmp ne %struct._object* %71, null
  br i1 %cmp63, label %if.then.65, label %if.end.78

if.then.65:                                       ; preds = %do.body.62
  %72 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* null, %struct._longobject** %72, align 8
  br label %do.body.66

do.body.66:                                       ; preds = %if.then.65
  %73 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %73, %struct._object** %_py_decref_tmp67, align 8
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_refcnt68 = getelementptr inbounds %struct._object, %struct._object* %74, i32 0, i32 0
  %75 = load i64, i64* %ob_refcnt68, align 8
  %dec69 = add i64 %75, -1
  store i64 %dec69, i64* %ob_refcnt68, align 8
  %cmp70 = icmp ne i64 %dec69, 0
  br i1 %cmp70, label %if.then.72, label %if.else.73

if.then.72:                                       ; preds = %do.body.66
  br label %if.end.76

if.else.73:                                       ; preds = %do.body.66
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  %ob_type74 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 1
  %77 = load %struct._typeobject*, %struct._typeobject** %ob_type74, align 8
  %tp_dealloc75 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %77, i32 0, i32 4
  %78 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc75, align 8
  %79 = load %struct._object*, %struct._object** %_py_decref_tmp67, align 8
  call void %78(%struct._object* %79)
  br label %if.end.76

if.end.76:                                        ; preds = %if.else.73, %if.then.72
  br label %do.end.77

do.end.77:                                        ; preds = %if.end.76
  br label %if.end.78

if.end.78:                                        ; preds = %do.end.77, %do.body.62
  br label %do.end.79

do.end.79:                                        ; preds = %if.end.78
  store i32 -1, i32* %retval
  br label %return

if.end.80:                                        ; preds = %if.then.58
  br label %if.end.81

if.end.81:                                        ; preds = %if.end.80, %if.end.49
  %80 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %81 = bitcast %struct._longobject* %80 to %struct.PyVarObject*
  %ob_size82 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %81, i32 0, i32 1
  %82 = load i64, i64* %ob_size82, align 8
  %cmp83 = icmp slt i64 %82, 0
  br i1 %cmp83, label %land.lhs.true.85, label %if.end.125

land.lhs.true.85:                                 ; preds = %if.end.81
  %83 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  %84 = load %struct._longobject*, %struct._longobject** %83, align 8
  %85 = bitcast %struct._longobject* %84 to %struct.PyVarObject*
  %ob_size86 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %85, i32 0, i32 1
  %86 = load i64, i64* %ob_size86, align 8
  %cmp87 = icmp ne i64 %86, 0
  br i1 %cmp87, label %if.then.89, label %if.end.125

if.then.89:                                       ; preds = %land.lhs.true.85
  %87 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  call void @_PyLong_Negate(%struct._longobject** %87)
  %88 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  %89 = load %struct._longobject*, %struct._longobject** %88, align 8
  %cmp90 = icmp eq %struct._longobject* %89, null
  br i1 %cmp90, label %if.then.92, label %if.end.124

if.then.92:                                       ; preds = %if.then.89
  br label %do.body.93

do.body.93:                                       ; preds = %if.then.92
  %90 = load %struct._longobject*, %struct._longobject** %z, align 8
  %91 = bitcast %struct._longobject* %90 to %struct._object*
  store %struct._object* %91, %struct._object** %_py_decref_tmp94, align 8
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8
  %ob_refcnt95 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 0
  %93 = load i64, i64* %ob_refcnt95, align 8
  %dec96 = add i64 %93, -1
  store i64 %dec96, i64* %ob_refcnt95, align 8
  %cmp97 = icmp ne i64 %dec96, 0
  br i1 %cmp97, label %if.then.99, label %if.else.100

if.then.99:                                       ; preds = %do.body.93
  br label %if.end.103

if.else.100:                                      ; preds = %do.body.93
  %94 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8
  %ob_type101 = getelementptr inbounds %struct._object, %struct._object* %94, i32 0, i32 1
  %95 = load %struct._typeobject*, %struct._typeobject** %ob_type101, align 8
  %tp_dealloc102 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %95, i32 0, i32 4
  %96 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc102, align 8
  %97 = load %struct._object*, %struct._object** %_py_decref_tmp94, align 8
  call void %96(%struct._object* %97)
  br label %if.end.103

if.end.103:                                       ; preds = %if.else.100, %if.then.99
  br label %do.end.104

do.end.104:                                       ; preds = %if.end.103
  br label %do.body.105

do.body.105:                                      ; preds = %do.end.104
  %98 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  %99 = load %struct._longobject*, %struct._longobject** %98, align 8
  %100 = bitcast %struct._longobject* %99 to %struct._object*
  store %struct._object* %100, %struct._object** %_py_tmp106, align 8
  %101 = load %struct._object*, %struct._object** %_py_tmp106, align 8
  %cmp107 = icmp ne %struct._object* %101, null
  br i1 %cmp107, label %if.then.109, label %if.end.122

if.then.109:                                      ; preds = %do.body.105
  %102 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* null, %struct._longobject** %102, align 8
  br label %do.body.110

do.body.110:                                      ; preds = %if.then.109
  %103 = load %struct._object*, %struct._object** %_py_tmp106, align 8
  store %struct._object* %103, %struct._object** %_py_decref_tmp111, align 8
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp111, align 8
  %ob_refcnt112 = getelementptr inbounds %struct._object, %struct._object* %104, i32 0, i32 0
  %105 = load i64, i64* %ob_refcnt112, align 8
  %dec113 = add i64 %105, -1
  store i64 %dec113, i64* %ob_refcnt112, align 8
  %cmp114 = icmp ne i64 %dec113, 0
  br i1 %cmp114, label %if.then.116, label %if.else.117

if.then.116:                                      ; preds = %do.body.110
  br label %if.end.120

if.else.117:                                      ; preds = %do.body.110
  %106 = load %struct._object*, %struct._object** %_py_decref_tmp111, align 8
  %ob_type118 = getelementptr inbounds %struct._object, %struct._object* %106, i32 0, i32 1
  %107 = load %struct._typeobject*, %struct._typeobject** %ob_type118, align 8
  %tp_dealloc119 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %107, i32 0, i32 4
  %108 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc119, align 8
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp111, align 8
  call void %108(%struct._object* %109)
  br label %if.end.120

if.end.120:                                       ; preds = %if.else.117, %if.then.116
  br label %do.end.121

do.end.121:                                       ; preds = %if.end.120
  br label %if.end.122

if.end.122:                                       ; preds = %do.end.121, %do.body.105
  br label %do.end.123

do.end.123:                                       ; preds = %if.end.122
  store i32 -1, i32* %retval
  br label %return

if.end.124:                                       ; preds = %if.then.89
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %land.lhs.true.85, %if.end.81
  %110 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call126 = call %struct._longobject* @maybe_small_long(%struct._longobject* %110)
  %111 = load %struct._longobject**, %struct._longobject*** %pdiv.addr, align 8
  store %struct._longobject* %call126, %struct._longobject** %111, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.125, %do.end.123, %do.end.79, %if.then.47, %do.end, %if.then.31, %if.end.23, %if.then.22, %if.then
  %112 = load i32, i32* %retval
  ret i32 %112
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_lshift(%struct._object* %v, %struct._object* %w) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._object*, align 8
  %w.addr = alloca %struct._object*, align 8
  %a = alloca %struct._longobject*, align 8
  %b = alloca %struct._longobject*, align 8
  %z = alloca %struct._longobject*, align 8
  %shiftby = alloca i64, align 8
  %oldsize = alloca i64, align 8
  %newsize = alloca i64, align 8
  %wordshift = alloca i64, align 8
  %remshift = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %accum = alloca i64, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8
  store %struct._object* %w, %struct._object** %w.addr, align 8
  %0 = load %struct._object*, %struct._object** %v.addr, align 8
  %1 = bitcast %struct._object* %0 to %struct._longobject*
  store %struct._longobject* %1, %struct._longobject** %a, align 8
  %2 = load %struct._object*, %struct._object** %w.addr, align 8
  %3 = bitcast %struct._object* %2 to %struct._longobject*
  store %struct._longobject* %3, %struct._longobject** %b, align 8
  store %struct._longobject* null, %struct._longobject** %z, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._longobject*, %struct._longobject** %a, align 8
  %5 = bitcast %struct._longobject* %4 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19
  %7 = load i64, i64* %tp_flags, align 8
  %and = and i64 %7, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %8 = load %struct._longobject*, %struct._longobject** %b, align 8
  %9 = bitcast %struct._longobject* %8 to %struct._object*
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 1
  %10 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %10, i32 0, i32 19
  %11 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %11, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %12 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %12, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %13 = load %struct._longobject*, %struct._longobject** %b, align 8
  %14 = bitcast %struct._longobject* %13 to %struct._object*
  %call = call i64 @PyLong_AsSsize_t(%struct._object* %14)
  store i64 %call, i64* %shiftby, align 8
  %15 = load i64, i64* %shiftby, align 8
  %cmp5 = icmp eq i64 %15, -1
  br i1 %cmp5, label %land.lhs.true, label %if.end.8

land.lhs.true:                                    ; preds = %do.end
  %call6 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call6, null
  br i1 %tobool, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.8:                                         ; preds = %land.lhs.true, %do.end
  %16 = load i64, i64* %shiftby, align 8
  %cmp9 = icmp slt i64 %16, 0
  br i1 %cmp9, label %if.then.10, label %if.end.11

if.then.10:                                       ; preds = %if.end.8
  %17 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.end.8
  %18 = load i64, i64* %shiftby, align 8
  %div = sdiv i64 %18, 30
  store i64 %div, i64* %wordshift, align 8
  %19 = load i64, i64* %shiftby, align 8
  %20 = load i64, i64* %wordshift, align 8
  %mul = mul i64 %20, 30
  %sub = sub i64 %19, %mul
  store i64 %sub, i64* %remshift, align 8
  %21 = load %struct._longobject*, %struct._longobject** %a, align 8
  %22 = bitcast %struct._longobject* %21 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1
  %23 = load i64, i64* %ob_size, align 8
  %cmp12 = icmp slt i64 %23, 0
  br i1 %cmp12, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.11
  %24 = load %struct._longobject*, %struct._longobject** %a, align 8
  %25 = bitcast %struct._longobject* %24 to %struct.PyVarObject*
  %ob_size13 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1
  %26 = load i64, i64* %ob_size13, align 8
  %sub14 = sub i64 0, %26
  br label %cond.end

cond.false:                                       ; preds = %if.end.11
  %27 = load %struct._longobject*, %struct._longobject** %a, align 8
  %28 = bitcast %struct._longobject* %27 to %struct.PyVarObject*
  %ob_size15 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %28, i32 0, i32 1
  %29 = load i64, i64* %ob_size15, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub14, %cond.true ], [ %29, %cond.false ]
  store i64 %cond, i64* %oldsize, align 8
  %30 = load i64, i64* %oldsize, align 8
  %31 = load i64, i64* %wordshift, align 8
  %add = add i64 %30, %31
  store i64 %add, i64* %newsize, align 8
  %32 = load i64, i64* %remshift, align 8
  %tobool16 = icmp ne i64 %32, 0
  br i1 %tobool16, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %cond.end
  %33 = load i64, i64* %newsize, align 8
  %inc18 = add i64 %33, 1
  store i64 %inc18, i64* %newsize, align 8
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.17, %cond.end
  %34 = load i64, i64* %newsize, align 8
  %call20 = call %struct._longobject* @_PyLong_New(i64 %34)
  store %struct._longobject* %call20, %struct._longobject** %z, align 8
  %35 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp21 = icmp eq %struct._longobject* %35, null
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.19
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.23:                                        ; preds = %if.end.19
  %36 = load %struct._longobject*, %struct._longobject** %a, align 8
  %37 = bitcast %struct._longobject* %36 to %struct.PyVarObject*
  %ob_size24 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %37, i32 0, i32 1
  %38 = load i64, i64* %ob_size24, align 8
  %cmp25 = icmp slt i64 %38, 0
  br i1 %cmp25, label %if.then.26, label %if.end.30

if.then.26:                                       ; preds = %if.end.23
  %39 = load %struct._longobject*, %struct._longobject** %z, align 8
  %40 = bitcast %struct._longobject* %39 to %struct.PyVarObject*
  %ob_size27 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %40, i32 0, i32 1
  %41 = load i64, i64* %ob_size27, align 8
  %sub28 = sub i64 0, %41
  %42 = load %struct._longobject*, %struct._longobject** %z, align 8
  %43 = bitcast %struct._longobject* %42 to %struct.PyVarObject*
  %ob_size29 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %43, i32 0, i32 1
  store i64 %sub28, i64* %ob_size29, align 8
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.26, %if.end.23
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.30
  %44 = load i64, i64* %i, align 8
  %45 = load i64, i64* %wordshift, align 8
  %cmp31 = icmp slt i64 %44, %45
  br i1 %cmp31, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %46 = load i64, i64* %i, align 8
  %47 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %47, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %46
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %48 = load i64, i64* %i, align 8
  %inc32 = add i64 %48, 1
  store i64 %inc32, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %accum, align 8
  %49 = load i64, i64* %wordshift, align 8
  store i64 %49, i64* %i, align 8
  store i64 0, i64* %j, align 8
  br label %for.cond.33

for.cond.33:                                      ; preds = %for.inc.42, %for.end
  %50 = load i64, i64* %j, align 8
  %51 = load i64, i64* %oldsize, align 8
  %cmp34 = icmp slt i64 %50, %51
  br i1 %cmp34, label %for.body.35, label %for.end.45

for.body.35:                                      ; preds = %for.cond.33
  %52 = load i64, i64* %j, align 8
  %53 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit36 = getelementptr inbounds %struct._longobject, %struct._longobject* %53, i32 0, i32 1
  %arrayidx37 = getelementptr [1 x i32], [1 x i32]* %ob_digit36, i32 0, i64 %52
  %54 = load i32, i32* %arrayidx37, align 4
  %conv = zext i32 %54 to i64
  %55 = load i64, i64* %remshift, align 8
  %shl = shl i64 %conv, %55
  %56 = load i64, i64* %accum, align 8
  %or = or i64 %56, %shl
  store i64 %or, i64* %accum, align 8
  %57 = load i64, i64* %accum, align 8
  %and38 = and i64 %57, 1073741823
  %conv39 = trunc i64 %and38 to i32
  %58 = load i64, i64* %i, align 8
  %59 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit40 = getelementptr inbounds %struct._longobject, %struct._longobject* %59, i32 0, i32 1
  %arrayidx41 = getelementptr [1 x i32], [1 x i32]* %ob_digit40, i32 0, i64 %58
  store i32 %conv39, i32* %arrayidx41, align 4
  %60 = load i64, i64* %accum, align 8
  %shr = lshr i64 %60, 30
  store i64 %shr, i64* %accum, align 8
  br label %for.inc.42

for.inc.42:                                       ; preds = %for.body.35
  %61 = load i64, i64* %i, align 8
  %inc43 = add i64 %61, 1
  store i64 %inc43, i64* %i, align 8
  %62 = load i64, i64* %j, align 8
  %inc44 = add i64 %62, 1
  store i64 %inc44, i64* %j, align 8
  br label %for.cond.33

for.end.45:                                       ; preds = %for.cond.33
  %63 = load i64, i64* %remshift, align 8
  %tobool46 = icmp ne i64 %63, 0
  br i1 %tobool46, label %if.then.47, label %if.else

if.then.47:                                       ; preds = %for.end.45
  %64 = load i64, i64* %accum, align 8
  %conv48 = trunc i64 %64 to i32
  %65 = load i64, i64* %newsize, align 8
  %sub49 = sub i64 %65, 1
  %66 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit50 = getelementptr inbounds %struct._longobject, %struct._longobject* %66, i32 0, i32 1
  %arrayidx51 = getelementptr [1 x i32], [1 x i32]* %ob_digit50, i32 0, i64 %sub49
  store i32 %conv48, i32* %arrayidx51, align 4
  br label %if.end.52

if.else:                                          ; preds = %for.end.45
  br label %if.end.52

if.end.52:                                        ; preds = %if.else, %if.then.47
  %67 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call53 = call %struct._longobject* @long_normalize(%struct._longobject* %67)
  store %struct._longobject* %call53, %struct._longobject** %z, align 8
  %68 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call54 = call %struct._longobject* @maybe_small_long(%struct._longobject* %68)
  %69 = bitcast %struct._longobject* %call54 to %struct._object*
  store %struct._object* %69, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.52, %if.then.22, %if.then.10, %if.then.7, %if.then
  %70 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %70
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_neg(%struct._longobject* %v) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._longobject*, align 8
  %z = alloca %struct._longobject*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  %cmp3 = icmp sle i64 %cond, 1
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %9 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size4 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size4, align 8
  %cmp5 = icmp slt i64 %11, 0
  br i1 %cmp5, label %cond.true.6, label %cond.false.8

cond.true.6:                                      ; preds = %if.then
  %12 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %13 = load i32, i32* %arrayidx, align 4
  %sub7 = sub i32 0, %13
  br label %cond.end.17

cond.false.8:                                     ; preds = %if.then
  %14 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %15 = bitcast %struct._longobject* %14 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %15, i32 0, i32 1
  %16 = load i64, i64* %ob_size9, align 8
  %cmp10 = icmp eq i64 %16, 0
  br i1 %cmp10, label %cond.true.11, label %cond.false.12

cond.true.11:                                     ; preds = %cond.false.8
  br label %cond.end.15

cond.false.12:                                    ; preds = %cond.false.8
  %17 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit13 = getelementptr inbounds %struct._longobject, %struct._longobject* %17, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x i32], [1 x i32]* %ob_digit13, i32 0, i64 0
  %18 = load i32, i32* %arrayidx14, align 4
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.12, %cond.true.11
  %cond16 = phi i32 [ 0, %cond.true.11 ], [ %18, %cond.false.12 ]
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.end.15, %cond.true.6
  %cond18 = phi i32 [ %sub7, %cond.true.6 ], [ %cond16, %cond.end.15 ]
  %sub19 = sub i32 0, %cond18
  %conv = sext i32 %sub19 to i64
  %call = call %struct._object* @PyLong_FromLong(i64 %conv)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %19 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %call20 = call %struct._object* @_PyLong_Copy(%struct._longobject* %19)
  %20 = bitcast %struct._object* %call20 to %struct._longobject*
  store %struct._longobject* %20, %struct._longobject** %z, align 8
  %21 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp21 = icmp ne %struct._longobject* %21, null
  br i1 %cmp21, label %if.then.23, label %if.end.27

if.then.23:                                       ; preds = %if.end
  %22 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %23 = bitcast %struct._longobject* %22 to %struct.PyVarObject*
  %ob_size24 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %23, i32 0, i32 1
  %24 = load i64, i64* %ob_size24, align 8
  %sub25 = sub i64 0, %24
  %25 = load %struct._longobject*, %struct._longobject** %z, align 8
  %26 = bitcast %struct._longobject* %25 to %struct.PyVarObject*
  %ob_size26 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %26, i32 0, i32 1
  store i64 %sub25, i64* %ob_size26, align 8
  br label %if.end.27

if.end.27:                                        ; preds = %if.then.23, %if.end
  %27 = load %struct._longobject*, %struct._longobject** %z, align 8
  %28 = bitcast %struct._longobject* %27 to %struct._object*
  store %struct._object* %28, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.27, %cond.end.17
  %29 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %29
}

; Function Attrs: nounwind uwtable
define internal i32 @long_compare(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %sign = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %3 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %cmp = icmp ne i64 %2, %5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  %9 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %sub = sub i64 %8, %11
  store i64 %sub, i64* %sign, align 8
  br label %if.end.27

if.else:                                          ; preds = %entry
  %12 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size4 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size4, align 8
  %cmp5 = icmp slt i64 %14, 0
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %15 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %17
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %18 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %19 = bitcast %struct._longobject* %18 to %struct.PyVarObject*
  %ob_size8 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1
  %20 = load i64, i64* %ob_size8, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub7, %cond.true ], [ %20, %cond.false ]
  store i64 %cond, i64* %i, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %cond.end
  %21 = load i64, i64* %i, align 8
  %dec = add i64 %21, -1
  store i64 %dec, i64* %i, align 8
  %cmp9 = icmp sge i64 %dec, 0
  br i1 %cmp9, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %22 = load i64, i64* %i, align 8
  %23 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %23, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %22
  %24 = load i32, i32* %arrayidx, align 4
  %25 = load i64, i64* %i, align 8
  %26 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit10 = getelementptr inbounds %struct._longobject, %struct._longobject* %26, i32 0, i32 1
  %arrayidx11 = getelementptr [1 x i32], [1 x i32]* %ob_digit10, i32 0, i64 %25
  %27 = load i32, i32* %arrayidx11, align 4
  %cmp12 = icmp eq i32 %24, %27
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %28 = phi i1 [ false, %while.cond ], [ %cmp12, %land.rhs ]
  br i1 %28, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %while.cond

while.end:                                        ; preds = %land.end
  %29 = load i64, i64* %i, align 8
  %cmp13 = icmp slt i64 %29, 0
  br i1 %cmp13, label %if.then.14, label %if.else.15

if.then.14:                                       ; preds = %while.end
  store i64 0, i64* %sign, align 8
  br label %if.end.26

if.else.15:                                       ; preds = %while.end
  %30 = load i64, i64* %i, align 8
  %31 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit16 = getelementptr inbounds %struct._longobject, %struct._longobject* %31, i32 0, i32 1
  %arrayidx17 = getelementptr [1 x i32], [1 x i32]* %ob_digit16, i32 0, i64 %30
  %32 = load i32, i32* %arrayidx17, align 4
  %33 = load i64, i64* %i, align 8
  %34 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit18 = getelementptr inbounds %struct._longobject, %struct._longobject* %34, i32 0, i32 1
  %arrayidx19 = getelementptr [1 x i32], [1 x i32]* %ob_digit18, i32 0, i64 %33
  %35 = load i32, i32* %arrayidx19, align 4
  %sub20 = sub i32 %32, %35
  %conv = sext i32 %sub20 to i64
  store i64 %conv, i64* %sign, align 8
  %36 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %37 = bitcast %struct._longobject* %36 to %struct.PyVarObject*
  %ob_size21 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %37, i32 0, i32 1
  %38 = load i64, i64* %ob_size21, align 8
  %cmp22 = icmp slt i64 %38, 0
  br i1 %cmp22, label %if.then.24, label %if.end

if.then.24:                                       ; preds = %if.else.15
  %39 = load i64, i64* %sign, align 8
  %sub25 = sub i64 0, %39
  store i64 %sub25, i64* %sign, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.24, %if.else.15
  br label %if.end.26

if.end.26:                                        ; preds = %if.end, %if.then.14
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then
  %40 = load i64, i64* %sign, align 8
  %cmp28 = icmp slt i64 %40, 0
  br i1 %cmp28, label %cond.true.30, label %cond.false.31

cond.true.30:                                     ; preds = %if.end.27
  br label %cond.end.35

cond.false.31:                                    ; preds = %if.end.27
  %41 = load i64, i64* %sign, align 8
  %cmp32 = icmp sgt i64 %41, 0
  %cond34 = select i1 %cmp32, i32 1, i32 0
  br label %cond.end.35

cond.end.35:                                      ; preds = %cond.false.31, %cond.true.30
  %cond36 = phi i32 [ -1, %cond.true.30 ], [ %cond34, %cond.false.31 ]
  ret i32 %cond36
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_sub(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %z = alloca %struct._longobject*, align 8
  %r = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %4 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %5 = bitcast %struct._longobject* %4 to %struct._object*
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19
  %7 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %7, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %8, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size, align 8
  %cmp5 = icmp slt i64 %11, 0
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %12 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub = sub i64 0, %14
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %15 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size7, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %17, %cond.false ]
  %cmp8 = icmp sle i64 %cond, 1
  br i1 %cmp8, label %land.lhs.true, label %if.end.53

land.lhs.true:                                    ; preds = %cond.end
  %18 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %19 = bitcast %struct._longobject* %18 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1
  %20 = load i64, i64* %ob_size9, align 8
  %cmp10 = icmp slt i64 %20, 0
  br i1 %cmp10, label %cond.true.11, label %cond.false.14

cond.true.11:                                     ; preds = %land.lhs.true
  %21 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %22 = bitcast %struct._longobject* %21 to %struct.PyVarObject*
  %ob_size12 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1
  %23 = load i64, i64* %ob_size12, align 8
  %sub13 = sub i64 0, %23
  br label %cond.end.16

cond.false.14:                                    ; preds = %land.lhs.true
  %24 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %25 = bitcast %struct._longobject* %24 to %struct.PyVarObject*
  %ob_size15 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1
  %26 = load i64, i64* %ob_size15, align 8
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.false.14, %cond.true.11
  %cond17 = phi i64 [ %sub13, %cond.true.11 ], [ %26, %cond.false.14 ]
  %cmp18 = icmp sle i64 %cond17, 1
  br i1 %cmp18, label %if.then.19, label %if.end.53

if.then.19:                                       ; preds = %cond.end.16
  %27 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %28 = bitcast %struct._longobject* %27 to %struct.PyVarObject*
  %ob_size20 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %28, i32 0, i32 1
  %29 = load i64, i64* %ob_size20, align 8
  %cmp21 = icmp slt i64 %29, 0
  br i1 %cmp21, label %cond.true.22, label %cond.false.24

cond.true.22:                                     ; preds = %if.then.19
  %30 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %30, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %31 = load i32, i32* %arrayidx, align 4
  %sub23 = sub i32 0, %31
  br label %cond.end.33

cond.false.24:                                    ; preds = %if.then.19
  %32 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %33 = bitcast %struct._longobject* %32 to %struct.PyVarObject*
  %ob_size25 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %33, i32 0, i32 1
  %34 = load i64, i64* %ob_size25, align 8
  %cmp26 = icmp eq i64 %34, 0
  br i1 %cmp26, label %cond.true.27, label %cond.false.28

cond.true.27:                                     ; preds = %cond.false.24
  br label %cond.end.31

cond.false.28:                                    ; preds = %cond.false.24
  %35 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit29 = getelementptr inbounds %struct._longobject, %struct._longobject* %35, i32 0, i32 1
  %arrayidx30 = getelementptr [1 x i32], [1 x i32]* %ob_digit29, i32 0, i64 0
  %36 = load i32, i32* %arrayidx30, align 4
  br label %cond.end.31

cond.end.31:                                      ; preds = %cond.false.28, %cond.true.27
  %cond32 = phi i32 [ 0, %cond.true.27 ], [ %36, %cond.false.28 ]
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.end.31, %cond.true.22
  %cond34 = phi i32 [ %sub23, %cond.true.22 ], [ %cond32, %cond.end.31 ]
  %37 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %38 = bitcast %struct._longobject* %37 to %struct.PyVarObject*
  %ob_size35 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %38, i32 0, i32 1
  %39 = load i64, i64* %ob_size35, align 8
  %cmp36 = icmp slt i64 %39, 0
  br i1 %cmp36, label %cond.true.37, label %cond.false.41

cond.true.37:                                     ; preds = %cond.end.33
  %40 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit38 = getelementptr inbounds %struct._longobject, %struct._longobject* %40, i32 0, i32 1
  %arrayidx39 = getelementptr [1 x i32], [1 x i32]* %ob_digit38, i32 0, i64 0
  %41 = load i32, i32* %arrayidx39, align 4
  %sub40 = sub i32 0, %41
  br label %cond.end.50

cond.false.41:                                    ; preds = %cond.end.33
  %42 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %43 = bitcast %struct._longobject* %42 to %struct.PyVarObject*
  %ob_size42 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %43, i32 0, i32 1
  %44 = load i64, i64* %ob_size42, align 8
  %cmp43 = icmp eq i64 %44, 0
  br i1 %cmp43, label %cond.true.44, label %cond.false.45

cond.true.44:                                     ; preds = %cond.false.41
  br label %cond.end.48

cond.false.45:                                    ; preds = %cond.false.41
  %45 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit46 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arrayidx47 = getelementptr [1 x i32], [1 x i32]* %ob_digit46, i32 0, i64 0
  %46 = load i32, i32* %arrayidx47, align 4
  br label %cond.end.48

cond.end.48:                                      ; preds = %cond.false.45, %cond.true.44
  %cond49 = phi i32 [ 0, %cond.true.44 ], [ %46, %cond.false.45 ]
  br label %cond.end.50

cond.end.50:                                      ; preds = %cond.end.48, %cond.true.37
  %cond51 = phi i32 [ %sub40, %cond.true.37 ], [ %cond49, %cond.end.48 ]
  %sub52 = sub i32 %cond34, %cond51
  %conv = sext i32 %sub52 to i64
  %call = call %struct._object* @PyLong_FromLong(i64 %conv)
  store %struct._object* %call, %struct._object** %r, align 8
  %47 = load %struct._object*, %struct._object** %r, align 8
  store %struct._object* %47, %struct._object** %retval
  br label %return

if.end.53:                                        ; preds = %cond.end.16, %cond.end
  %48 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %49 = bitcast %struct._longobject* %48 to %struct.PyVarObject*
  %ob_size54 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %49, i32 0, i32 1
  %50 = load i64, i64* %ob_size54, align 8
  %cmp55 = icmp slt i64 %50, 0
  br i1 %cmp55, label %if.then.57, label %if.else.76

if.then.57:                                       ; preds = %if.end.53
  %51 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %52 = bitcast %struct._longobject* %51 to %struct.PyVarObject*
  %ob_size58 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %52, i32 0, i32 1
  %53 = load i64, i64* %ob_size58, align 8
  %cmp59 = icmp slt i64 %53, 0
  br i1 %cmp59, label %if.then.61, label %if.else

if.then.61:                                       ; preds = %if.then.57
  %54 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %55 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call62 = call %struct._longobject* @x_sub(%struct._longobject* %54, %struct._longobject* %55)
  store %struct._longobject* %call62, %struct._longobject** %z, align 8
  br label %if.end.64

if.else:                                          ; preds = %if.then.57
  %56 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %57 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call63 = call %struct._longobject* @x_add(%struct._longobject* %56, %struct._longobject* %57)
  store %struct._longobject* %call63, %struct._longobject** %z, align 8
  br label %if.end.64

if.end.64:                                        ; preds = %if.else, %if.then.61
  %58 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp65 = icmp ne %struct._longobject* %58, null
  br i1 %cmp65, label %land.lhs.true.67, label %if.end.75

land.lhs.true.67:                                 ; preds = %if.end.64
  %59 = load %struct._longobject*, %struct._longobject** %z, align 8
  %60 = bitcast %struct._longobject* %59 to %struct.PyVarObject*
  %ob_size68 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %60, i32 0, i32 1
  %61 = load i64, i64* %ob_size68, align 8
  %cmp69 = icmp ne i64 %61, 0
  br i1 %cmp69, label %if.then.71, label %if.end.75

if.then.71:                                       ; preds = %land.lhs.true.67
  %62 = load %struct._longobject*, %struct._longobject** %z, align 8
  %63 = bitcast %struct._longobject* %62 to %struct.PyVarObject*
  %ob_size72 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %63, i32 0, i32 1
  %64 = load i64, i64* %ob_size72, align 8
  %sub73 = sub i64 0, %64
  %65 = load %struct._longobject*, %struct._longobject** %z, align 8
  %66 = bitcast %struct._longobject* %65 to %struct.PyVarObject*
  %ob_size74 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %66, i32 0, i32 1
  store i64 %sub73, i64* %ob_size74, align 8
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.71, %land.lhs.true.67, %if.end.64
  br label %if.end.85

if.else.76:                                       ; preds = %if.end.53
  %67 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %68 = bitcast %struct._longobject* %67 to %struct.PyVarObject*
  %ob_size77 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %68, i32 0, i32 1
  %69 = load i64, i64* %ob_size77, align 8
  %cmp78 = icmp slt i64 %69, 0
  br i1 %cmp78, label %if.then.80, label %if.else.82

if.then.80:                                       ; preds = %if.else.76
  %70 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %71 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call81 = call %struct._longobject* @x_add(%struct._longobject* %70, %struct._longobject* %71)
  store %struct._longobject* %call81, %struct._longobject** %z, align 8
  br label %if.end.84

if.else.82:                                       ; preds = %if.else.76
  %72 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %73 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call83 = call %struct._longobject* @x_sub(%struct._longobject* %72, %struct._longobject* %73)
  store %struct._longobject* %call83, %struct._longobject** %z, align 8
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.82, %if.then.80
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84, %if.end.75
  %74 = load %struct._longobject*, %struct._longobject** %z, align 8
  %75 = bitcast %struct._longobject* %74 to %struct._object*
  store %struct._object* %75, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.85, %cond.end.50, %if.then
  %76 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %76
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_add(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %z = alloca %struct._longobject*, align 8
  %result = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %4 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %5 = bitcast %struct._longobject* %4 to %struct._object*
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19
  %7 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %7, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %8, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size, align 8
  %cmp5 = icmp slt i64 %11, 0
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %12 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub = sub i64 0, %14
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %15 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size7, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %17, %cond.false ]
  %cmp8 = icmp sle i64 %cond, 1
  br i1 %cmp8, label %land.lhs.true, label %if.end.52

land.lhs.true:                                    ; preds = %cond.end
  %18 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %19 = bitcast %struct._longobject* %18 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1
  %20 = load i64, i64* %ob_size9, align 8
  %cmp10 = icmp slt i64 %20, 0
  br i1 %cmp10, label %cond.true.11, label %cond.false.14

cond.true.11:                                     ; preds = %land.lhs.true
  %21 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %22 = bitcast %struct._longobject* %21 to %struct.PyVarObject*
  %ob_size12 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1
  %23 = load i64, i64* %ob_size12, align 8
  %sub13 = sub i64 0, %23
  br label %cond.end.16

cond.false.14:                                    ; preds = %land.lhs.true
  %24 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %25 = bitcast %struct._longobject* %24 to %struct.PyVarObject*
  %ob_size15 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1
  %26 = load i64, i64* %ob_size15, align 8
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.false.14, %cond.true.11
  %cond17 = phi i64 [ %sub13, %cond.true.11 ], [ %26, %cond.false.14 ]
  %cmp18 = icmp sle i64 %cond17, 1
  br i1 %cmp18, label %if.then.19, label %if.end.52

if.then.19:                                       ; preds = %cond.end.16
  %27 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %28 = bitcast %struct._longobject* %27 to %struct.PyVarObject*
  %ob_size20 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %28, i32 0, i32 1
  %29 = load i64, i64* %ob_size20, align 8
  %cmp21 = icmp slt i64 %29, 0
  br i1 %cmp21, label %cond.true.22, label %cond.false.24

cond.true.22:                                     ; preds = %if.then.19
  %30 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %30, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %31 = load i32, i32* %arrayidx, align 4
  %sub23 = sub i32 0, %31
  br label %cond.end.33

cond.false.24:                                    ; preds = %if.then.19
  %32 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %33 = bitcast %struct._longobject* %32 to %struct.PyVarObject*
  %ob_size25 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %33, i32 0, i32 1
  %34 = load i64, i64* %ob_size25, align 8
  %cmp26 = icmp eq i64 %34, 0
  br i1 %cmp26, label %cond.true.27, label %cond.false.28

cond.true.27:                                     ; preds = %cond.false.24
  br label %cond.end.31

cond.false.28:                                    ; preds = %cond.false.24
  %35 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit29 = getelementptr inbounds %struct._longobject, %struct._longobject* %35, i32 0, i32 1
  %arrayidx30 = getelementptr [1 x i32], [1 x i32]* %ob_digit29, i32 0, i64 0
  %36 = load i32, i32* %arrayidx30, align 4
  br label %cond.end.31

cond.end.31:                                      ; preds = %cond.false.28, %cond.true.27
  %cond32 = phi i32 [ 0, %cond.true.27 ], [ %36, %cond.false.28 ]
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.end.31, %cond.true.22
  %cond34 = phi i32 [ %sub23, %cond.true.22 ], [ %cond32, %cond.end.31 ]
  %37 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %38 = bitcast %struct._longobject* %37 to %struct.PyVarObject*
  %ob_size35 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %38, i32 0, i32 1
  %39 = load i64, i64* %ob_size35, align 8
  %cmp36 = icmp slt i64 %39, 0
  br i1 %cmp36, label %cond.true.37, label %cond.false.41

cond.true.37:                                     ; preds = %cond.end.33
  %40 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit38 = getelementptr inbounds %struct._longobject, %struct._longobject* %40, i32 0, i32 1
  %arrayidx39 = getelementptr [1 x i32], [1 x i32]* %ob_digit38, i32 0, i64 0
  %41 = load i32, i32* %arrayidx39, align 4
  %sub40 = sub i32 0, %41
  br label %cond.end.50

cond.false.41:                                    ; preds = %cond.end.33
  %42 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %43 = bitcast %struct._longobject* %42 to %struct.PyVarObject*
  %ob_size42 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %43, i32 0, i32 1
  %44 = load i64, i64* %ob_size42, align 8
  %cmp43 = icmp eq i64 %44, 0
  br i1 %cmp43, label %cond.true.44, label %cond.false.45

cond.true.44:                                     ; preds = %cond.false.41
  br label %cond.end.48

cond.false.45:                                    ; preds = %cond.false.41
  %45 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit46 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arrayidx47 = getelementptr [1 x i32], [1 x i32]* %ob_digit46, i32 0, i64 0
  %46 = load i32, i32* %arrayidx47, align 4
  br label %cond.end.48

cond.end.48:                                      ; preds = %cond.false.45, %cond.true.44
  %cond49 = phi i32 [ 0, %cond.true.44 ], [ %46, %cond.false.45 ]
  br label %cond.end.50

cond.end.50:                                      ; preds = %cond.end.48, %cond.true.37
  %cond51 = phi i32 [ %sub40, %cond.true.37 ], [ %cond49, %cond.end.48 ]
  %add = add i32 %cond34, %cond51
  %conv = sext i32 %add to i64
  %call = call %struct._object* @PyLong_FromLong(i64 %conv)
  store %struct._object* %call, %struct._object** %result, align 8
  %47 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %47, %struct._object** %retval
  br label %return

if.end.52:                                        ; preds = %cond.end.16, %cond.end
  %48 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %49 = bitcast %struct._longobject* %48 to %struct.PyVarObject*
  %ob_size53 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %49, i32 0, i32 1
  %50 = load i64, i64* %ob_size53, align 8
  %cmp54 = icmp slt i64 %50, 0
  br i1 %cmp54, label %if.then.56, label %if.else.75

if.then.56:                                       ; preds = %if.end.52
  %51 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %52 = bitcast %struct._longobject* %51 to %struct.PyVarObject*
  %ob_size57 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %52, i32 0, i32 1
  %53 = load i64, i64* %ob_size57, align 8
  %cmp58 = icmp slt i64 %53, 0
  br i1 %cmp58, label %if.then.60, label %if.else

if.then.60:                                       ; preds = %if.then.56
  %54 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %55 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call61 = call %struct._longobject* @x_add(%struct._longobject* %54, %struct._longobject* %55)
  store %struct._longobject* %call61, %struct._longobject** %z, align 8
  %56 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp62 = icmp ne %struct._longobject* %56, null
  br i1 %cmp62, label %land.lhs.true.64, label %if.end.72

land.lhs.true.64:                                 ; preds = %if.then.60
  %57 = load %struct._longobject*, %struct._longobject** %z, align 8
  %58 = bitcast %struct._longobject* %57 to %struct.PyVarObject*
  %ob_size65 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %58, i32 0, i32 1
  %59 = load i64, i64* %ob_size65, align 8
  %cmp66 = icmp ne i64 %59, 0
  br i1 %cmp66, label %if.then.68, label %if.end.72

if.then.68:                                       ; preds = %land.lhs.true.64
  %60 = load %struct._longobject*, %struct._longobject** %z, align 8
  %61 = bitcast %struct._longobject* %60 to %struct.PyVarObject*
  %ob_size69 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %61, i32 0, i32 1
  %62 = load i64, i64* %ob_size69, align 8
  %sub70 = sub i64 0, %62
  %63 = load %struct._longobject*, %struct._longobject** %z, align 8
  %64 = bitcast %struct._longobject* %63 to %struct.PyVarObject*
  %ob_size71 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %64, i32 0, i32 1
  store i64 %sub70, i64* %ob_size71, align 8
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.68, %land.lhs.true.64, %if.then.60
  br label %if.end.74

if.else:                                          ; preds = %if.then.56
  %65 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %66 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %call73 = call %struct._longobject* @x_sub(%struct._longobject* %65, %struct._longobject* %66)
  store %struct._longobject* %call73, %struct._longobject** %z, align 8
  br label %if.end.74

if.end.74:                                        ; preds = %if.else, %if.end.72
  br label %if.end.84

if.else.75:                                       ; preds = %if.end.52
  %67 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %68 = bitcast %struct._longobject* %67 to %struct.PyVarObject*
  %ob_size76 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %68, i32 0, i32 1
  %69 = load i64, i64* %ob_size76, align 8
  %cmp77 = icmp slt i64 %69, 0
  br i1 %cmp77, label %if.then.79, label %if.else.81

if.then.79:                                       ; preds = %if.else.75
  %70 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %71 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call80 = call %struct._longobject* @x_sub(%struct._longobject* %70, %struct._longobject* %71)
  store %struct._longobject* %call80, %struct._longobject** %z, align 8
  br label %if.end.83

if.else.81:                                       ; preds = %if.else.75
  %72 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %73 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call82 = call %struct._longobject* @x_add(%struct._longobject* %72, %struct._longobject* %73)
  store %struct._longobject* %call82, %struct._longobject** %z, align 8
  br label %if.end.83

if.end.83:                                        ; preds = %if.else.81, %if.then.79
  br label %if.end.84

if.end.84:                                        ; preds = %if.end.83, %if.end.74
  %74 = load %struct._longobject*, %struct._longobject** %z, align 8
  %75 = bitcast %struct._longobject* %74 to %struct._object*
  store %struct._object* %75, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.84, %cond.end.50, %if.then
  %76 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %76
}

declare %struct._object* @PyTuple_New(i64) #1

; Function Attrs: nounwind uwtable
define internal void @long_dealloc(%struct._object* %v) #0 {
entry:
  %v.addr = alloca %struct._object*, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8
  %0 = load %struct._object*, %struct._object** %v.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_free = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 38
  %2 = load void (i8*)*, void (i8*)** %tp_free, align 8
  %3 = load %struct._object*, %struct._object** %v.addr, align 8
  %4 = bitcast %struct._object* %3 to i8*
  call void %2(i8* %4)
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_to_decimal_string(%struct._object* %aa) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %aa.addr = alloca %struct._object*, align 8
  %v = alloca %struct._object*, align 8
  store %struct._object* %aa, %struct._object** %aa.addr, align 8
  %0 = load %struct._object*, %struct._object** %aa.addr, align 8
  %call = call i32 @long_to_decimal_string_internal(%struct._object* %0, %struct._object** %v, %struct._PyUnicodeWriter* null)
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %v, align 8
  store %struct._object* %1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %2
}

; Function Attrs: nounwind uwtable
define internal i64 @long_hash(%struct._longobject* %v) #0 {
entry:
  %retval = alloca i64, align 8
  %v.addr = alloca %struct._longobject*, align 8
  %x = alloca i64, align 8
  %i = alloca i64, align 8
  %sign = alloca i32, align 4
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  store i64 %2, i64* %i, align 8
  %3 = load i64, i64* %i, align 8
  switch i64 %3, label %sw.epilog [
    i64 -1, label %sw.bb
    i64 0, label %sw.bb.3
    i64 1, label %sw.bb.4
  ]

sw.bb:                                            ; preds = %entry
  %4 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %4, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %5 = load i32, i32* %arrayidx, align 4
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  br label %cond.end

cond.false:                                       ; preds = %sw.bb
  %6 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit1 = getelementptr inbounds %struct._longobject, %struct._longobject* %6, i32 0, i32 1
  %arrayidx2 = getelementptr [1 x i32], [1 x i32]* %ob_digit1, i32 0, i64 0
  %7 = load i32, i32* %arrayidx2, align 4
  %sub = sub i32 0, %7
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -2, %cond.true ], [ %sub, %cond.false ]
  %conv = sext i32 %cond to i64
  store i64 %conv, i64* %retval
  br label %return

sw.bb.3:                                          ; preds = %entry
  store i64 0, i64* %retval
  br label %return

sw.bb.4:                                          ; preds = %entry
  %8 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit5 = getelementptr inbounds %struct._longobject, %struct._longobject* %8, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x i32], [1 x i32]* %ob_digit5, i32 0, i64 0
  %9 = load i32, i32* %arrayidx6, align 4
  %conv7 = zext i32 %9 to i64
  store i64 %conv7, i64* %retval
  br label %return

sw.epilog:                                        ; preds = %entry
  store i32 1, i32* %sign, align 4
  store i64 0, i64* %x, align 8
  %10 = load i64, i64* %i, align 8
  %cmp8 = icmp slt i64 %10, 0
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %sw.epilog
  store i32 -1, i32* %sign, align 4
  %11 = load i64, i64* %i, align 8
  %sub10 = sub i64 0, %11
  store i64 %sub10, i64* %i, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  br label %while.cond

while.cond:                                       ; preds = %if.end.20, %if.end
  %12 = load i64, i64* %i, align 8
  %dec = add i64 %12, -1
  store i64 %dec, i64* %i, align 8
  %cmp11 = icmp sge i64 %dec, 0
  br i1 %cmp11, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %x, align 8
  %shl = shl i64 %13, 30
  %and = and i64 %shl, 2305843009213693951
  %14 = load i64, i64* %x, align 8
  %shr = lshr i64 %14, 31
  %or = or i64 %and, %shr
  store i64 %or, i64* %x, align 8
  %15 = load i64, i64* %i, align 8
  %16 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit13 = getelementptr inbounds %struct._longobject, %struct._longobject* %16, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x i32], [1 x i32]* %ob_digit13, i32 0, i64 %15
  %17 = load i32, i32* %arrayidx14, align 4
  %conv15 = zext i32 %17 to i64
  %18 = load i64, i64* %x, align 8
  %add = add i64 %18, %conv15
  store i64 %add, i64* %x, align 8
  %19 = load i64, i64* %x, align 8
  %cmp16 = icmp uge i64 %19, 2305843009213693951
  br i1 %cmp16, label %if.then.18, label %if.end.20

if.then.18:                                       ; preds = %while.body
  %20 = load i64, i64* %x, align 8
  %sub19 = sub i64 %20, 2305843009213693951
  store i64 %sub19, i64* %x, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.18, %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %21 = load i64, i64* %x, align 8
  %22 = load i32, i32* %sign, align 4
  %conv21 = sext i32 %22 to i64
  %mul = mul i64 %21, %conv21
  store i64 %mul, i64* %x, align 8
  %23 = load i64, i64* %x, align 8
  %cmp22 = icmp eq i64 %23, -1
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %while.end
  store i64 -2, i64* %x, align 8
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.24, %while.end
  %24 = load i64, i64* %x, align 8
  store i64 %24, i64* %retval
  br label %return

return:                                           ; preds = %if.end.25, %sw.bb.4, %sw.bb.3, %cond.end
  %25 = load i64, i64* %retval
  ret i64 %25
}

declare %struct._object* @PyObject_GenericGetAttr(%struct._object*, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_richcompare(%struct._object* %self, %struct._object* %other, i32 %op) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %other.addr = alloca %struct._object*, align 8
  %op.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %v = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %other, %struct._object** %other.addr, align 8
  store i32 %op, i32* %op.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %self.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %other.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %self.addr, align 8
  %8 = load %struct._object*, %struct._object** %other.addr, align 8
  %cmp5 = icmp eq %struct._object* %7, %8
  br i1 %cmp5, label %if.then.6, label %if.else

if.then.6:                                        ; preds = %do.end
  store i32 0, i32* %result, align 4
  br label %if.end.7

if.else:                                          ; preds = %do.end
  %9 = load %struct._object*, %struct._object** %self.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  %11 = load %struct._object*, %struct._object** %other.addr, align 8
  %12 = bitcast %struct._object* %11 to %struct._longobject*
  %call = call i32 @long_compare(%struct._longobject* %10, %struct._longobject* %12)
  store i32 %call, i32* %result, align 4
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.6
  %13 = load i32, i32* %op.addr, align 4
  switch i32 %13, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb.9
    i32 1, label %sw.bb.12
    i32 5, label %sw.bb.15
    i32 0, label %sw.bb.18
    i32 4, label %sw.bb.21
  ]

sw.bb:                                            ; preds = %if.end.7
  %14 = load i32, i32* %result, align 4
  %cmp8 = icmp eq i32 %14, 0
  %cond = select i1 %cmp8, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)
  store %struct._object* %cond, %struct._object** %v, align 8
  br label %sw.epilog

sw.bb.9:                                          ; preds = %if.end.7
  %15 = load i32, i32* %result, align 4
  %cmp10 = icmp ne i32 %15, 0
  %cond11 = select i1 %cmp10, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)
  store %struct._object* %cond11, %struct._object** %v, align 8
  br label %sw.epilog

sw.bb.12:                                         ; preds = %if.end.7
  %16 = load i32, i32* %result, align 4
  %cmp13 = icmp sle i32 %16, 0
  %cond14 = select i1 %cmp13, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)
  store %struct._object* %cond14, %struct._object** %v, align 8
  br label %sw.epilog

sw.bb.15:                                         ; preds = %if.end.7
  %17 = load i32, i32* %result, align 4
  %cmp16 = icmp sge i32 %17, 0
  %cond17 = select i1 %cmp16, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)
  store %struct._object* %cond17, %struct._object** %v, align 8
  br label %sw.epilog

sw.bb.18:                                         ; preds = %if.end.7
  %18 = load i32, i32* %result, align 4
  %cmp19 = icmp eq i32 %18, -1
  %cond20 = select i1 %cmp19, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)
  store %struct._object* %cond20, %struct._object** %v, align 8
  br label %sw.epilog

sw.bb.21:                                         ; preds = %if.end.7
  %19 = load i32, i32* %result, align 4
  %cmp22 = icmp eq i32 %19, 1
  %cond23 = select i1 %cmp22, %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_TrueStruct, i32 0, i32 0, i32 0), %struct._object* getelementptr inbounds (%struct._longobject, %struct._longobject* @_Py_FalseStruct, i32 0, i32 0, i32 0)
  store %struct._object* %cond23, %struct._object** %v, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.7
  %call24 = call i32 @PyErr_BadArgument()
  store %struct._object* null, %struct._object** %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb.21, %sw.bb.18, %sw.bb.15, %sw.bb.12, %sw.bb.9, %sw.bb
  %20 = load %struct._object*, %struct._object** %v, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt, align 8
  %inc25 = add i64 %21, 1
  store i64 %inc25, i64* %ob_refcnt, align 8
  %22 = load %struct._object*, %struct._object** %v, align 8
  store %struct._object* %22, %struct._object** %retval
  br label %return

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %23 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %23
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %obase = alloca %struct._object*, align 8
  %x = alloca %struct._object*, align 8
  %base = alloca i64, align 8
  %string = alloca i8*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* null, %struct._object** %obase, align 8
  store %struct._object* null, %struct._object** %x, align 8
  %0 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %cmp = icmp ne %struct._typeobject* %0, @PyLong_Type
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %2 = load %struct._object*, %struct._object** %args.addr, align 8
  %3 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call %struct._object* @long_subtype_new(%struct._typeobject* %1, %struct._object* %2, %struct._object* %3)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._object*, %struct._object** %args.addr, align 8
  %5 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call1 = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %4, %struct._object* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i32 0, i32 0), i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @long_new.kwlist, i32 0, i32 0), %struct._object** %x, %struct._object** %obase)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %6 = load %struct._object*, %struct._object** %x, align 8
  %cmp4 = icmp eq %struct._object* %6, null
  br i1 %cmp4, label %if.then.5, label %if.end.10

if.then.5:                                        ; preds = %if.end.3
  %7 = load %struct._object*, %struct._object** %obase, align 8
  %cmp6 = icmp ne %struct._object* %7, null
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %if.then.5
  %8 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.76, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.8:                                         ; preds = %if.then.5
  %call9 = call %struct._object* @PyLong_FromLong(i64 0)
  store %struct._object* %call9, %struct._object** %retval
  br label %return

if.end.10:                                        ; preds = %if.end.3
  %9 = load %struct._object*, %struct._object** %obase, align 8
  %cmp11 = icmp eq %struct._object* %9, null
  br i1 %cmp11, label %if.then.12, label %if.end.14

if.then.12:                                       ; preds = %if.end.10
  %10 = load %struct._object*, %struct._object** %x, align 8
  %call13 = call %struct._object* @PyNumber_Long(%struct._object* %10)
  store %struct._object* %call13, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %if.end.10
  %11 = load %struct._object*, %struct._object** %obase, align 8
  %call15 = call i64 @PyNumber_AsSsize_t(%struct._object* %11, %struct._object* null)
  store i64 %call15, i64* %base, align 8
  %12 = load i64, i64* %base, align 8
  %cmp16 = icmp eq i64 %12, -1
  br i1 %cmp16, label %land.lhs.true, label %if.end.20

land.lhs.true:                                    ; preds = %if.end.14
  %call17 = call %struct._object* @PyErr_Occurred()
  %tobool18 = icmp ne %struct._object* %call17, null
  br i1 %tobool18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.20:                                        ; preds = %land.lhs.true, %if.end.14
  %13 = load i64, i64* %base, align 8
  %cmp21 = icmp ne i64 %13, 0
  br i1 %cmp21, label %land.lhs.true.22, label %lor.lhs.false

land.lhs.true.22:                                 ; preds = %if.end.20
  %14 = load i64, i64* %base, align 8
  %cmp23 = icmp slt i64 %14, 2
  br i1 %cmp23, label %if.then.25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.22, %if.end.20
  %15 = load i64, i64* %base, align 8
  %cmp24 = icmp sgt i64 %15, 36
  br i1 %cmp24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %lor.lhs.false, %land.lhs.true.22
  %16 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.77, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.26:                                        ; preds = %lor.lhs.false
  %17 = load %struct._object*, %struct._object** %x, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 1
  %18 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %18, i32 0, i32 19
  %19 = load i64, i64* %tp_flags, align 8
  %and = and i64 %19, 268435456
  %cmp27 = icmp ne i64 %and, 0
  br i1 %cmp27, label %if.then.28, label %if.else

if.then.28:                                       ; preds = %if.end.26
  %20 = load %struct._object*, %struct._object** %x, align 8
  %21 = load i64, i64* %base, align 8
  %conv = trunc i64 %21 to i32
  %call29 = call %struct._object* @PyLong_FromUnicodeObject(%struct._object* %20, i32 %conv)
  store %struct._object* %call29, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %if.end.26
  %22 = load %struct._object*, %struct._object** %x, align 8
  %ob_type30 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type30, align 8
  %cmp31 = icmp eq %struct._typeobject* %23, @PyByteArray_Type
  br i1 %cmp31, label %if.then.43, label %lor.lhs.false.33

lor.lhs.false.33:                                 ; preds = %if.else
  %24 = load %struct._object*, %struct._object** %x, align 8
  %ob_type34 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 1
  %25 = load %struct._typeobject*, %struct._typeobject** %ob_type34, align 8
  %call35 = call i32 @PyType_IsSubtype(%struct._typeobject* %25, %struct._typeobject* @PyByteArray_Type)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.then.43, label %lor.lhs.false.37

lor.lhs.false.37:                                 ; preds = %lor.lhs.false.33
  %26 = load %struct._object*, %struct._object** %x, align 8
  %ob_type38 = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type38, align 8
  %tp_flags39 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 19
  %28 = load i64, i64* %tp_flags39, align 8
  %and40 = and i64 %28, 134217728
  %cmp41 = icmp ne i64 %and40, 0
  br i1 %cmp41, label %if.then.43, label %if.else.58

if.then.43:                                       ; preds = %lor.lhs.false.37, %lor.lhs.false.33, %if.else
  %29 = load %struct._object*, %struct._object** %x, align 8
  %ob_type44 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 1
  %30 = load %struct._typeobject*, %struct._typeobject** %ob_type44, align 8
  %cmp45 = icmp eq %struct._typeobject* %30, @PyByteArray_Type
  br i1 %cmp45, label %if.then.51, label %lor.lhs.false.47

lor.lhs.false.47:                                 ; preds = %if.then.43
  %31 = load %struct._object*, %struct._object** %x, align 8
  %ob_type48 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type48, align 8
  %call49 = call i32 @PyType_IsSubtype(%struct._typeobject* %32, %struct._typeobject* @PyByteArray_Type)
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.then.51, label %if.else.53

if.then.51:                                       ; preds = %lor.lhs.false.47, %if.then.43
  %33 = load %struct._object*, %struct._object** %x, align 8
  %34 = bitcast %struct._object* %33 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %34, i32 0, i32 1
  %35 = load i64, i64* %ob_size, align 8
  %tobool52 = icmp ne i64 %35, 0
  br i1 %tobool52, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.51
  %36 = load %struct._object*, %struct._object** %x, align 8
  %37 = bitcast %struct._object* %36 to %struct.PyByteArrayObject*
  %ob_start = getelementptr inbounds %struct.PyByteArrayObject, %struct.PyByteArrayObject* %37, i32 0, i32 3
  %38 = load i8*, i8** %ob_start, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then.51
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %38, %cond.true ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_PyByteArray_empty_string, i32 0, i32 0), %cond.false ]
  store i8* %cond, i8** %string, align 8
  br label %if.end.54

if.else.53:                                       ; preds = %lor.lhs.false.47
  %39 = load %struct._object*, %struct._object** %x, align 8
  %40 = bitcast %struct._object* %39 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %40, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  store i8* %arraydecay, i8** %string, align 8
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.53, %cond.end
  %41 = load i8*, i8** %string, align 8
  %42 = load %struct._object*, %struct._object** %x, align 8
  %43 = bitcast %struct._object* %42 to %struct.PyVarObject*
  %ob_size55 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %43, i32 0, i32 1
  %44 = load i64, i64* %ob_size55, align 8
  %45 = load i64, i64* %base, align 8
  %conv56 = trunc i64 %45 to i32
  %call57 = call %struct._object* @_PyLong_FromBytes(i8* %41, i64 %44, i32 %conv56)
  store %struct._object* %call57, %struct._object** %retval
  br label %return

if.else.58:                                       ; preds = %lor.lhs.false.37
  %46 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %46, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.78, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.else.58, %if.end.54, %if.then.28, %if.then.25, %if.then.19, %if.then.12, %if.end.8, %if.then.7, %if.then.2, %if.then
  %47 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %47
}

declare void @PyObject_Free(i8*) #1

; Function Attrs: nounwind uwtable
define %struct._object* @PyLong_GetInfo() #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %int_info = alloca %struct._object*, align 8
  %field = alloca i32, align 4
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store i32 0, i32* %field, align 4
  %call = call %struct._object* @PyStructSequence_New(%struct._typeobject* @Int_InfoType)
  store %struct._object* %call, %struct._object** %int_info, align 8
  %0 = load %struct._object*, %struct._object** %int_info, align 8
  %cmp = icmp eq %struct._object* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call %struct._object* @PyLong_FromLong(i64 30)
  %1 = load i32, i32* %field, align 4
  %inc = add i32 %1, 1
  store i32 %inc, i32* %field, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct._object*, %struct._object** %int_info, align 8
  %3 = bitcast %struct._object* %2 to %struct.PyTupleObject*
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %3, i32 0, i32 1
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 %idxprom
  store %struct._object* %call1, %struct._object** %arrayidx, align 8
  %call2 = call %struct._object* @PyLong_FromLong(i64 4)
  %4 = load i32, i32* %field, align 4
  %inc3 = add i32 %4, 1
  store i32 %inc3, i32* %field, align 4
  %idxprom4 = sext i32 %4 to i64
  %5 = load %struct._object*, %struct._object** %int_info, align 8
  %6 = bitcast %struct._object* %5 to %struct.PyTupleObject*
  %ob_item5 = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %6, i32 0, i32 1
  %arrayidx6 = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item5, i32 0, i64 %idxprom4
  store %struct._object* %call2, %struct._object** %arrayidx6, align 8
  %call7 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call7, null
  br i1 %tobool, label %if.then.8, label %if.end.17

if.then.8:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.8
  %7 = load %struct._object*, %struct._object** %int_info, align 8
  store %struct._object* %7, %struct._object** %_py_tmp, align 8
  %8 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp9 = icmp ne %struct._object* %8, null
  br i1 %cmp9, label %if.then.10, label %if.end.15

if.then.10:                                       ; preds = %do.body
  store %struct._object* null, %struct._object** %int_info, align 8
  br label %do.body.11

do.body.11:                                       ; preds = %if.then.10
  %9 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %9, %struct._object** %_py_decref_tmp, align 8
  %10 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %11, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp12 = icmp ne i64 %dec, 0
  br i1 %cmp12, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %do.body.11
  br label %if.end.14

if.else:                                          ; preds = %do.body.11
  %12 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 1
  %13 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %13, i32 0, i32 4
  %14 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %15 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %14(%struct._object* %15)
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.13
  br label %do.end

do.end:                                           ; preds = %if.end.14
  br label %if.end.15

if.end.15:                                        ; preds = %do.end, %do.body
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.17:                                        ; preds = %if.end
  %16 = load %struct._object*, %struct._object** %int_info, align 8
  store %struct._object* %16, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.17, %do.end.16, %if.then
  %17 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %17
}

declare %struct._object* @PyStructSequence_New(%struct._typeobject*) #1

; Function Attrs: nounwind uwtable
define i32 @_PyLong_Init() #0 {
entry:
  %retval = alloca i32, align 4
  %ival = alloca i32, align 4
  %size = alloca i32, align 4
  %v = alloca %struct._longobject*, align 8
  %refcnt = alloca i64, align 8
  %op = alloca %struct._object*, align 8
  store %struct._longobject* getelementptr inbounds ([262 x %struct._longobject], [262 x %struct._longobject]* @small_ints, i32 0, i32 0), %struct._longobject** %v, align 8
  store i32 -5, i32* %ival, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %ival, align 4
  %cmp = icmp slt i32 %0, 257
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %ival, align 4
  %cmp1 = icmp slt i32 %1, 0
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %2 = load i32, i32* %ival, align 4
  %cmp2 = icmp eq i32 %2, 0
  %cond = select i1 %cmp2, i32 0, i32 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ -1, %cond.true ], [ %cond, %cond.false ]
  store i32 %cond3, i32* %size, align 4
  %3 = load %struct._longobject*, %struct._longobject** %v, align 8
  %4 = bitcast %struct._longobject* %3 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp4 = icmp eq %struct._typeobject* %5, @PyLong_Type
  br i1 %cmp4, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %6 = load %struct._longobject*, %struct._longobject** %v, align 8
  %7 = bitcast %struct._longobject* %6 to %struct._object*
  store %struct._object* %7, %struct._object** %op, align 8
  %8 = load %struct._object*, %struct._object** %op, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %8, i32 0, i32 0
  %9 = load i64, i64* %ob_refcnt, align 8
  %cmp5 = icmp slt i64 %9, 0
  br i1 %cmp5, label %cond.true.6, label %cond.false.7

cond.true.6:                                      ; preds = %if.then
  br label %cond.end.9

cond.false.7:                                     ; preds = %if.then
  %10 = load %struct._object*, %struct._object** %op, align 8
  %ob_refcnt8 = getelementptr inbounds %struct._object, %struct._object* %10, i32 0, i32 0
  %11 = load i64, i64* %ob_refcnt8, align 8
  br label %cond.end.9

cond.end.9:                                       ; preds = %cond.false.7, %cond.true.6
  %cond10 = phi i64 [ 0, %cond.true.6 ], [ %11, %cond.false.7 ]
  store i64 %cond10, i64* %refcnt, align 8
  %12 = load %struct._object*, %struct._object** %op, align 8
  %ob_refcnt11 = getelementptr inbounds %struct._object, %struct._object* %12, i32 0, i32 0
  store i64 1, i64* %ob_refcnt11, align 8
  %13 = load i64, i64* %refcnt, align 8
  %add = add i64 %13, 1
  %14 = load %struct._object*, %struct._object** %op, align 8
  %ob_refcnt12 = getelementptr inbounds %struct._object, %struct._object* %14, i32 0, i32 0
  store i64 %add, i64* %ob_refcnt12, align 8
  br label %if.end

if.else:                                          ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %v, align 8
  %16 = bitcast %struct._longobject* %15 to %struct._object*
  %ob_type13 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 1
  store %struct._typeobject* @PyLong_Type, %struct._typeobject** %ob_type13, align 8
  %17 = load %struct._longobject*, %struct._longobject** %v, align 8
  %18 = bitcast %struct._longobject* %17 to %struct._object*
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 0
  store i64 1, i64* %ob_refcnt14, align 8
  %19 = load %struct._longobject*, %struct._longobject** %v, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end.9
  %20 = load i32, i32* %size, align 4
  %conv = sext i32 %20 to i64
  %21 = load %struct._longobject*, %struct._longobject** %v, align 8
  %22 = bitcast %struct._longobject* %21 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1
  store i64 %conv, i64* %ob_size, align 8
  %23 = load i32, i32* %ival, align 4
  %call = call i32 @abs(i32 %23) #7
  %24 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %24, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  store i32 %call, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %25 = load i32, i32* %ival, align 4
  %inc = add i32 %25, 1
  store i32 %inc, i32* %ival, align 4
  %26 = load %struct._longobject*, %struct._longobject** %v, align 8
  %incdec.ptr = getelementptr %struct._longobject, %struct._longobject* %26, i32 1
  store %struct._longobject* %incdec.ptr, %struct._longobject** %v, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %27 = load i8*, i8** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @Int_InfoType, i32 0, i32 1), align 8
  %cmp15 = icmp eq i8* %27, null
  br i1 %cmp15, label %if.then.17, label %if.end.23

if.then.17:                                       ; preds = %for.end
  %call18 = call i32 @PyStructSequence_InitType2(%struct._typeobject* @Int_InfoType, %struct.PyStructSequence_Desc* @int_info_desc)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %if.then.21, label %if.end.22

if.then.21:                                       ; preds = %if.then.17
  store i32 0, i32* %retval
  br label %return

if.end.22:                                        ; preds = %if.then.17
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %for.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.23, %if.then.21
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #2

declare i32 @PyStructSequence_InitType2(%struct._typeobject*, %struct.PyStructSequence_Desc*) #1

; Function Attrs: nounwind uwtable
define void @PyLong_Fini() #0 {
entry:
  %i = alloca i32, align 4
  %v = alloca %struct._longobject*, align 8
  store %struct._longobject* getelementptr inbounds ([262 x %struct._longobject], [262 x %struct._longobject]* @small_ints, i32 0, i32 0), %struct._longobject** %v, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 262
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %1 = load i32, i32* %i, align 4
  %inc = add i32 %1, 1
  store i32 %inc, i32* %i, align 4
  %2 = load %struct._longobject*, %struct._longobject** %v, align 8
  %incdec.ptr = getelementptr %struct._longobject, %struct._longobject* %2, i32 1
  store %struct._longobject* %incdec.ptr, %struct._longobject** %v, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @PyErr_CheckSignals() #1

declare i32 @_PyUnicodeWriter_PrepareInternal(%struct._PyUnicodeWriter*, i64, i32) #1

declare %struct._object* @PyUnicode_New(i64, i32) #1

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @divrem1(%struct._longobject* %a, i32 %n, i32* %prem) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %n.addr = alloca i32, align 4
  %prem.addr = alloca i32*, align 8
  %size = alloca i64, align 8
  %z = alloca %struct._longobject*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  store i32* %prem, i32** %prem.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size, align 8
  %9 = load i64, i64* %size, align 8
  %call = call %struct._longobject* @_PyLong_New(i64 %9)
  store %struct._longobject* %call, %struct._longobject** %z, align 8
  %10 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp3 = icmp eq %struct._longobject* %10, null
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %11 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %11, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  %12 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit4 = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arraydecay5 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit4, i32 0, i32 0
  %13 = load i64, i64* %size, align 8
  %14 = load i32, i32* %n.addr, align 4
  %call6 = call i32 @inplace_divrem1(i32* %arraydecay, i32* %arraydecay5, i64 %13, i32 %14)
  %15 = load i32*, i32** %prem.addr, align 8
  store i32 %call6, i32* %15, align 4
  %16 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call7 = call %struct._longobject* @long_normalize(%struct._longobject* %16)
  store %struct._longobject* %call7, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %17 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %17
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @x_divrem(%struct._longobject* %v1, %struct._longobject* %w1, %struct._longobject** %prem) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %v1.addr = alloca %struct._longobject*, align 8
  %w1.addr = alloca %struct._longobject*, align 8
  %prem.addr = alloca %struct._longobject**, align 8
  %v = alloca %struct._longobject*, align 8
  %w = alloca %struct._longobject*, align 8
  %a = alloca %struct._longobject*, align 8
  %i = alloca i64, align 8
  %k = alloca i64, align 8
  %size_v = alloca i64, align 8
  %size_w = alloca i64, align 8
  %d = alloca i32, align 4
  %wm1 = alloca i32, align 4
  %wm2 = alloca i32, align 4
  %carry = alloca i32, align 4
  %q = alloca i32, align 4
  %r = alloca i32, align 4
  %vtop = alloca i32, align 4
  %v0 = alloca i32*, align 8
  %vk = alloca i32*, align 8
  %w0 = alloca i32*, align 8
  %ak = alloca i32*, align 8
  %vv = alloca i64, align 8
  %zhi = alloca i32, align 4
  %z = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp49 = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp87 = alloca %struct._object*, align 8
  %_py_decref_tmp98 = alloca %struct._object*, align 8
  %_py_decref_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp188 = alloca %struct._object*, align 8
  store %struct._longobject* %v1, %struct._longobject** %v1.addr, align 8
  store %struct._longobject* %w1, %struct._longobject** %w1.addr, align 8
  store %struct._longobject** %prem, %struct._longobject*** %prem.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v1.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v1.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %v1.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size_v, align 8
  %9 = load %struct._longobject*, %struct._longobject** %w1.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  br i1 %cmp4, label %cond.true.5, label %cond.false.8

cond.true.5:                                      ; preds = %cond.end
  %12 = load %struct._longobject*, %struct._longobject** %w1.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %14
  br label %cond.end.10

cond.false.8:                                     ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %w1.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.5
  %cond11 = phi i64 [ %sub7, %cond.true.5 ], [ %17, %cond.false.8 ]
  store i64 %cond11, i64* %size_w, align 8
  %18 = load i64, i64* %size_v, align 8
  %add = add i64 %18, 1
  %call = call %struct._longobject* @_PyLong_New(i64 %add)
  store %struct._longobject* %call, %struct._longobject** %v, align 8
  %19 = load %struct._longobject*, %struct._longobject** %v, align 8
  %cmp12 = icmp eq %struct._longobject* %19, null
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.10
  %20 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* null, %struct._longobject** %20, align 8
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %cond.end.10
  %21 = load i64, i64* %size_w, align 8
  %call13 = call %struct._longobject* @_PyLong_New(i64 %21)
  store %struct._longobject* %call13, %struct._longobject** %w, align 8
  %22 = load %struct._longobject*, %struct._longobject** %w, align 8
  %cmp14 = icmp eq %struct._longobject* %22, null
  br i1 %cmp14, label %if.then.15, label %if.end.19

if.then.15:                                       ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.15
  %23 = load %struct._longobject*, %struct._longobject** %v, align 8
  %24 = bitcast %struct._longobject* %23 to %struct._object*
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %26, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp16 = icmp ne i64 %dec, 0
  br i1 %cmp16, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %do.body
  br label %if.end.18

if.else:                                          ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %29(%struct._object* %30)
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.17
  br label %do.end

do.end:                                           ; preds = %if.end.18
  %31 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* null, %struct._longobject** %31, align 8
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.19:                                        ; preds = %if.end
  %32 = load i64, i64* %size_w, align 8
  %sub20 = sub i64 %32, 1
  %33 = load %struct._longobject*, %struct._longobject** %w1.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %33, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %sub20
  %34 = load i32, i32* %arrayidx, align 4
  %call21 = call i32 @bits_in_digit(i32 %34)
  %sub22 = sub i32 30, %call21
  store i32 %sub22, i32* %d, align 4
  %35 = load %struct._longobject*, %struct._longobject** %w, align 8
  %ob_digit23 = getelementptr inbounds %struct._longobject, %struct._longobject* %35, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit23, i32 0, i32 0
  %36 = load %struct._longobject*, %struct._longobject** %w1.addr, align 8
  %ob_digit24 = getelementptr inbounds %struct._longobject, %struct._longobject* %36, i32 0, i32 1
  %arraydecay25 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit24, i32 0, i32 0
  %37 = load i64, i64* %size_w, align 8
  %38 = load i32, i32* %d, align 4
  %call26 = call i32 @v_lshift(i32* %arraydecay, i32* %arraydecay25, i64 %37, i32 %38)
  store i32 %call26, i32* %carry, align 4
  %39 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit27 = getelementptr inbounds %struct._longobject, %struct._longobject* %39, i32 0, i32 1
  %arraydecay28 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit27, i32 0, i32 0
  %40 = load %struct._longobject*, %struct._longobject** %v1.addr, align 8
  %ob_digit29 = getelementptr inbounds %struct._longobject, %struct._longobject* %40, i32 0, i32 1
  %arraydecay30 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit29, i32 0, i32 0
  %41 = load i64, i64* %size_v, align 8
  %42 = load i32, i32* %d, align 4
  %call31 = call i32 @v_lshift(i32* %arraydecay28, i32* %arraydecay30, i64 %41, i32 %42)
  store i32 %call31, i32* %carry, align 4
  %43 = load i32, i32* %carry, align 4
  %cmp32 = icmp ne i32 %43, 0
  br i1 %cmp32, label %if.then.40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.19
  %44 = load i64, i64* %size_v, align 8
  %sub33 = sub i64 %44, 1
  %45 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit34 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arrayidx35 = getelementptr [1 x i32], [1 x i32]* %ob_digit34, i32 0, i64 %sub33
  %46 = load i32, i32* %arrayidx35, align 4
  %47 = load i64, i64* %size_w, align 8
  %sub36 = sub i64 %47, 1
  %48 = load %struct._longobject*, %struct._longobject** %w, align 8
  %ob_digit37 = getelementptr inbounds %struct._longobject, %struct._longobject* %48, i32 0, i32 1
  %arrayidx38 = getelementptr [1 x i32], [1 x i32]* %ob_digit37, i32 0, i64 %sub36
  %49 = load i32, i32* %arrayidx38, align 4
  %cmp39 = icmp uge i32 %46, %49
  br i1 %cmp39, label %if.then.40, label %if.end.43

if.then.40:                                       ; preds = %lor.lhs.false, %if.end.19
  %50 = load i32, i32* %carry, align 4
  %51 = load i64, i64* %size_v, align 8
  %52 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit41 = getelementptr inbounds %struct._longobject, %struct._longobject* %52, i32 0, i32 1
  %arrayidx42 = getelementptr [1 x i32], [1 x i32]* %ob_digit41, i32 0, i64 %51
  store i32 %50, i32* %arrayidx42, align 4
  %53 = load i64, i64* %size_v, align 8
  %inc = add i64 %53, 1
  store i64 %inc, i64* %size_v, align 8
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.40, %lor.lhs.false
  %54 = load i64, i64* %size_v, align 8
  %55 = load i64, i64* %size_w, align 8
  %sub44 = sub i64 %54, %55
  store i64 %sub44, i64* %k, align 8
  %56 = load i64, i64* %k, align 8
  %call45 = call %struct._longobject* @_PyLong_New(i64 %56)
  store %struct._longobject* %call45, %struct._longobject** %a, align 8
  %57 = load %struct._longobject*, %struct._longobject** %a, align 8
  %cmp46 = icmp eq %struct._longobject* %57, null
  br i1 %cmp46, label %if.then.47, label %if.end.70

if.then.47:                                       ; preds = %if.end.43
  br label %do.body.48

do.body.48:                                       ; preds = %if.then.47
  %58 = load %struct._longobject*, %struct._longobject** %w, align 8
  %59 = bitcast %struct._longobject* %58 to %struct._object*
  store %struct._object* %59, %struct._object** %_py_decref_tmp49, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_refcnt50 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0
  %61 = load i64, i64* %ob_refcnt50, align 8
  %dec51 = add i64 %61, -1
  store i64 %dec51, i64* %ob_refcnt50, align 8
  %cmp52 = icmp ne i64 %dec51, 0
  br i1 %cmp52, label %if.then.53, label %if.else.54

if.then.53:                                       ; preds = %do.body.48
  br label %if.end.57

if.else.54:                                       ; preds = %do.body.48
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  %ob_type55 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type55, align 8
  %tp_dealloc56 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc56, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp49, align 8
  call void %64(%struct._object* %65)
  br label %if.end.57

if.end.57:                                        ; preds = %if.else.54, %if.then.53
  br label %do.end.58

do.end.58:                                        ; preds = %if.end.57
  br label %do.body.59

do.body.59:                                       ; preds = %do.end.58
  %66 = load %struct._longobject*, %struct._longobject** %v, align 8
  %67 = bitcast %struct._longobject* %66 to %struct._object*
  store %struct._object* %67, %struct._object** %_py_decref_tmp60, align 8
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0
  %69 = load i64, i64* %ob_refcnt61, align 8
  %dec62 = add i64 %69, -1
  store i64 %dec62, i64* %ob_refcnt61, align 8
  %cmp63 = icmp ne i64 %dec62, 0
  br i1 %cmp63, label %if.then.64, label %if.else.65

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68

if.else.65:                                       ; preds = %do.body.59
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  call void %72(%struct._object* %73)
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  br label %do.end.69

do.end.69:                                        ; preds = %if.end.68
  %74 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* null, %struct._longobject** %74, align 8
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.70:                                        ; preds = %if.end.43
  %75 = load %struct._longobject*, %struct._longobject** %v, align 8
  %ob_digit71 = getelementptr inbounds %struct._longobject, %struct._longobject* %75, i32 0, i32 1
  %arraydecay72 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit71, i32 0, i32 0
  store i32* %arraydecay72, i32** %v0, align 8
  %76 = load %struct._longobject*, %struct._longobject** %w, align 8
  %ob_digit73 = getelementptr inbounds %struct._longobject, %struct._longobject* %76, i32 0, i32 1
  %arraydecay74 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit73, i32 0, i32 0
  store i32* %arraydecay74, i32** %w0, align 8
  %77 = load i64, i64* %size_w, align 8
  %sub75 = sub i64 %77, 1
  %78 = load i32*, i32** %w0, align 8
  %arrayidx76 = getelementptr i32, i32* %78, i64 %sub75
  %79 = load i32, i32* %arrayidx76, align 4
  store i32 %79, i32* %wm1, align 4
  %80 = load i64, i64* %size_w, align 8
  %sub77 = sub i64 %80, 2
  %81 = load i32*, i32** %w0, align 8
  %arrayidx78 = getelementptr i32, i32* %81, i64 %sub77
  %82 = load i32, i32* %arrayidx78, align 4
  store i32 %82, i32* %wm2, align 4
  %83 = load i32*, i32** %v0, align 8
  %84 = load i64, i64* %k, align 8
  %add.ptr = getelementptr i32, i32* %83, i64 %84
  store i32* %add.ptr, i32** %vk, align 8
  %85 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit79 = getelementptr inbounds %struct._longobject, %struct._longobject* %85, i32 0, i32 1
  %arraydecay80 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit79, i32 0, i32 0
  %86 = load i64, i64* %k, align 8
  %add.ptr81 = getelementptr i32, i32* %arraydecay80, i64 %86
  store i32* %add.ptr81, i32** %ak, align 8
  br label %for.cond

for.cond:                                         ; preds = %if.end.183, %if.end.70
  %87 = load i32*, i32** %vk, align 8
  %incdec.ptr = getelementptr i32, i32* %87, i32 -1
  store i32* %incdec.ptr, i32** %vk, align 8
  %88 = load i32*, i32** %v0, align 8
  %cmp82 = icmp ugt i32* %87, %88
  br i1 %cmp82, label %for.body, label %for.end.185

for.body:                                         ; preds = %for.cond
  br label %do.body.83

do.body.83:                                       ; preds = %for.body
  %call84 = call i32 @PyErr_CheckSignals()
  %tobool = icmp ne i32 %call84, 0
  br i1 %tobool, label %if.then.85, label %if.end.119

if.then.85:                                       ; preds = %do.body.83
  br label %do.body.86

do.body.86:                                       ; preds = %if.then.85
  %89 = load %struct._longobject*, %struct._longobject** %a, align 8
  %90 = bitcast %struct._longobject* %89 to %struct._object*
  store %struct._object* %90, %struct._object** %_py_decref_tmp87, align 8
  %91 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8
  %ob_refcnt88 = getelementptr inbounds %struct._object, %struct._object* %91, i32 0, i32 0
  %92 = load i64, i64* %ob_refcnt88, align 8
  %dec89 = add i64 %92, -1
  store i64 %dec89, i64* %ob_refcnt88, align 8
  %cmp90 = icmp ne i64 %dec89, 0
  br i1 %cmp90, label %if.then.91, label %if.else.92

if.then.91:                                       ; preds = %do.body.86
  br label %if.end.95

if.else.92:                                       ; preds = %do.body.86
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8
  %ob_type93 = getelementptr inbounds %struct._object, %struct._object* %93, i32 0, i32 1
  %94 = load %struct._typeobject*, %struct._typeobject** %ob_type93, align 8
  %tp_dealloc94 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %94, i32 0, i32 4
  %95 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc94, align 8
  %96 = load %struct._object*, %struct._object** %_py_decref_tmp87, align 8
  call void %95(%struct._object* %96)
  br label %if.end.95

if.end.95:                                        ; preds = %if.else.92, %if.then.91
  br label %do.end.96

do.end.96:                                        ; preds = %if.end.95
  br label %do.body.97

do.body.97:                                       ; preds = %do.end.96
  %97 = load %struct._longobject*, %struct._longobject** %w, align 8
  %98 = bitcast %struct._longobject* %97 to %struct._object*
  store %struct._object* %98, %struct._object** %_py_decref_tmp98, align 8
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8
  %ob_refcnt99 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 0
  %100 = load i64, i64* %ob_refcnt99, align 8
  %dec100 = add i64 %100, -1
  store i64 %dec100, i64* %ob_refcnt99, align 8
  %cmp101 = icmp ne i64 %dec100, 0
  br i1 %cmp101, label %if.then.102, label %if.else.103

if.then.102:                                      ; preds = %do.body.97
  br label %if.end.106

if.else.103:                                      ; preds = %do.body.97
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8
  %ob_type104 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 1
  %102 = load %struct._typeobject*, %struct._typeobject** %ob_type104, align 8
  %tp_dealloc105 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %102, i32 0, i32 4
  %103 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc105, align 8
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp98, align 8
  call void %103(%struct._object* %104)
  br label %if.end.106

if.end.106:                                       ; preds = %if.else.103, %if.then.102
  br label %do.end.107

do.end.107:                                       ; preds = %if.end.106
  br label %do.body.108

do.body.108:                                      ; preds = %do.end.107
  %105 = load %struct._longobject*, %struct._longobject** %v, align 8
  %106 = bitcast %struct._longobject* %105 to %struct._object*
  store %struct._object* %106, %struct._object** %_py_decref_tmp109, align 8
  %107 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %107, i32 0, i32 0
  %108 = load i64, i64* %ob_refcnt110, align 8
  %dec111 = add i64 %108, -1
  store i64 %dec111, i64* %ob_refcnt110, align 8
  %cmp112 = icmp ne i64 %dec111, 0
  br i1 %cmp112, label %if.then.113, label %if.else.114

if.then.113:                                      ; preds = %do.body.108
  br label %if.end.117

if.else.114:                                      ; preds = %do.body.108
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8
  %ob_type115 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 1
  %110 = load %struct._typeobject*, %struct._typeobject** %ob_type115, align 8
  %tp_dealloc116 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %110, i32 0, i32 4
  %111 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc116, align 8
  %112 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8
  call void %111(%struct._object* %112)
  br label %if.end.117

if.end.117:                                       ; preds = %if.else.114, %if.then.113
  br label %do.end.118

do.end.118:                                       ; preds = %if.end.117
  %113 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* null, %struct._longobject** %113, align 8
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.119:                                       ; preds = %do.body.83
  br label %do.end.120

do.end.120:                                       ; preds = %if.end.119
  %114 = load i64, i64* %size_w, align 8
  %115 = load i32*, i32** %vk, align 8
  %arrayidx121 = getelementptr i32, i32* %115, i64 %114
  %116 = load i32, i32* %arrayidx121, align 4
  store i32 %116, i32* %vtop, align 4
  %117 = load i32, i32* %vtop, align 4
  %conv = zext i32 %117 to i64
  %shl = shl i64 %conv, 30
  %118 = load i64, i64* %size_w, align 8
  %sub122 = sub i64 %118, 1
  %119 = load i32*, i32** %vk, align 8
  %arrayidx123 = getelementptr i32, i32* %119, i64 %sub122
  %120 = load i32, i32* %arrayidx123, align 4
  %conv124 = zext i32 %120 to i64
  %or = or i64 %shl, %conv124
  store i64 %or, i64* %vv, align 8
  %121 = load i64, i64* %vv, align 8
  %122 = load i32, i32* %wm1, align 4
  %conv125 = zext i32 %122 to i64
  %div = udiv i64 %121, %conv125
  %conv126 = trunc i64 %div to i32
  store i32 %conv126, i32* %q, align 4
  %123 = load i64, i64* %vv, align 8
  %124 = load i32, i32* %wm1, align 4
  %conv127 = zext i32 %124 to i64
  %125 = load i32, i32* %q, align 4
  %conv128 = zext i32 %125 to i64
  %mul = mul i64 %conv127, %conv128
  %sub129 = sub i64 %123, %mul
  %conv130 = trunc i64 %sub129 to i32
  store i32 %conv130, i32* %r, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.147, %do.end.120
  %126 = load i32, i32* %wm2, align 4
  %conv131 = zext i32 %126 to i64
  %127 = load i32, i32* %q, align 4
  %conv132 = zext i32 %127 to i64
  %mul133 = mul i64 %conv131, %conv132
  %128 = load i32, i32* %r, align 4
  %conv134 = zext i32 %128 to i64
  %shl135 = shl i64 %conv134, 30
  %129 = load i64, i64* %size_w, align 8
  %sub136 = sub i64 %129, 2
  %130 = load i32*, i32** %vk, align 8
  %arrayidx137 = getelementptr i32, i32* %130, i64 %sub136
  %131 = load i32, i32* %arrayidx137, align 4
  %conv138 = zext i32 %131 to i64
  %or139 = or i64 %shl135, %conv138
  %cmp140 = icmp ugt i64 %mul133, %or139
  br i1 %cmp140, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %132 = load i32, i32* %q, align 4
  %dec142 = add i32 %132, -1
  store i32 %dec142, i32* %q, align 4
  %133 = load i32, i32* %wm1, align 4
  %134 = load i32, i32* %r, align 4
  %add143 = add i32 %134, %133
  store i32 %add143, i32* %r, align 4
  %135 = load i32, i32* %r, align 4
  %cmp144 = icmp uge i32 %135, 1073741824
  br i1 %cmp144, label %if.then.146, label %if.end.147

if.then.146:                                      ; preds = %while.body
  br label %while.end

if.end.147:                                       ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %if.then.146, %while.cond
  store i32 0, i32* %zhi, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond.148

for.cond.148:                                     ; preds = %for.inc, %while.end
  %136 = load i64, i64* %i, align 8
  %137 = load i64, i64* %size_w, align 8
  %cmp149 = icmp slt i64 %136, %137
  br i1 %cmp149, label %for.body.151, label %for.end

for.body.151:                                     ; preds = %for.cond.148
  %138 = load i64, i64* %i, align 8
  %139 = load i32*, i32** %vk, align 8
  %arrayidx152 = getelementptr i32, i32* %139, i64 %138
  %140 = load i32, i32* %arrayidx152, align 4
  %141 = load i32, i32* %zhi, align 4
  %add153 = add i32 %140, %141
  %conv154 = sext i32 %add153 to i64
  %142 = load i32, i32* %q, align 4
  %conv155 = zext i32 %142 to i64
  %143 = load i64, i64* %i, align 8
  %144 = load i32*, i32** %w0, align 8
  %arrayidx156 = getelementptr i32, i32* %144, i64 %143
  %145 = load i32, i32* %arrayidx156, align 4
  %conv157 = zext i32 %145 to i64
  %mul158 = mul i64 %conv155, %conv157
  %sub159 = sub i64 %conv154, %mul158
  store i64 %sub159, i64* %z, align 8
  %146 = load i64, i64* %z, align 8
  %conv160 = trunc i64 %146 to i32
  %and = and i32 %conv160, 1073741823
  %147 = load i64, i64* %i, align 8
  %148 = load i32*, i32** %vk, align 8
  %arrayidx161 = getelementptr i32, i32* %148, i64 %147
  store i32 %and, i32* %arrayidx161, align 4
  %149 = load i64, i64* %z, align 8
  %shr = ashr i64 %149, 30
  %conv162 = trunc i64 %shr to i32
  store i32 %conv162, i32* %zhi, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body.151
  %150 = load i64, i64* %i, align 8
  %inc163 = add i64 %150, 1
  store i64 %inc163, i64* %i, align 8
  br label %for.cond.148

for.end:                                          ; preds = %for.cond.148
  %151 = load i32, i32* %vtop, align 4
  %152 = load i32, i32* %zhi, align 4
  %add164 = add i32 %151, %152
  %cmp165 = icmp slt i32 %add164, 0
  br i1 %cmp165, label %if.then.167, label %if.end.183

if.then.167:                                      ; preds = %for.end
  store i32 0, i32* %carry, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond.168

for.cond.168:                                     ; preds = %for.inc.179, %if.then.167
  %153 = load i64, i64* %i, align 8
  %154 = load i64, i64* %size_w, align 8
  %cmp169 = icmp slt i64 %153, %154
  br i1 %cmp169, label %for.body.171, label %for.end.181

for.body.171:                                     ; preds = %for.cond.168
  %155 = load i64, i64* %i, align 8
  %156 = load i32*, i32** %vk, align 8
  %arrayidx172 = getelementptr i32, i32* %156, i64 %155
  %157 = load i32, i32* %arrayidx172, align 4
  %158 = load i64, i64* %i, align 8
  %159 = load i32*, i32** %w0, align 8
  %arrayidx173 = getelementptr i32, i32* %159, i64 %158
  %160 = load i32, i32* %arrayidx173, align 4
  %add174 = add i32 %157, %160
  %161 = load i32, i32* %carry, align 4
  %add175 = add i32 %161, %add174
  store i32 %add175, i32* %carry, align 4
  %162 = load i32, i32* %carry, align 4
  %and176 = and i32 %162, 1073741823
  %163 = load i64, i64* %i, align 8
  %164 = load i32*, i32** %vk, align 8
  %arrayidx177 = getelementptr i32, i32* %164, i64 %163
  store i32 %and176, i32* %arrayidx177, align 4
  %165 = load i32, i32* %carry, align 4
  %shr178 = lshr i32 %165, 30
  store i32 %shr178, i32* %carry, align 4
  br label %for.inc.179

for.inc.179:                                      ; preds = %for.body.171
  %166 = load i64, i64* %i, align 8
  %inc180 = add i64 %166, 1
  store i64 %inc180, i64* %i, align 8
  br label %for.cond.168

for.end.181:                                      ; preds = %for.cond.168
  %167 = load i32, i32* %q, align 4
  %dec182 = add i32 %167, -1
  store i32 %dec182, i32* %q, align 4
  br label %if.end.183

if.end.183:                                       ; preds = %for.end.181, %for.end
  %168 = load i32, i32* %q, align 4
  %169 = load i32*, i32** %ak, align 8
  %incdec.ptr184 = getelementptr i32, i32* %169, i32 -1
  store i32* %incdec.ptr184, i32** %ak, align 8
  store i32 %168, i32* %incdec.ptr184, align 4
  br label %for.cond

for.end.185:                                      ; preds = %for.cond
  %170 = load i32*, i32** %w0, align 8
  %171 = load i32*, i32** %v0, align 8
  %172 = load i64, i64* %size_w, align 8
  %173 = load i32, i32* %d, align 4
  %call186 = call i32 @v_rshift(i32* %170, i32* %171, i64 %172, i32 %173)
  store i32 %call186, i32* %carry, align 4
  br label %do.body.187

do.body.187:                                      ; preds = %for.end.185
  %174 = load %struct._longobject*, %struct._longobject** %v, align 8
  %175 = bitcast %struct._longobject* %174 to %struct._object*
  store %struct._object* %175, %struct._object** %_py_decref_tmp188, align 8
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp188, align 8
  %ob_refcnt189 = getelementptr inbounds %struct._object, %struct._object* %176, i32 0, i32 0
  %177 = load i64, i64* %ob_refcnt189, align 8
  %dec190 = add i64 %177, -1
  store i64 %dec190, i64* %ob_refcnt189, align 8
  %cmp191 = icmp ne i64 %dec190, 0
  br i1 %cmp191, label %if.then.193, label %if.else.194

if.then.193:                                      ; preds = %do.body.187
  br label %if.end.197

if.else.194:                                      ; preds = %do.body.187
  %178 = load %struct._object*, %struct._object** %_py_decref_tmp188, align 8
  %ob_type195 = getelementptr inbounds %struct._object, %struct._object* %178, i32 0, i32 1
  %179 = load %struct._typeobject*, %struct._typeobject** %ob_type195, align 8
  %tp_dealloc196 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %179, i32 0, i32 4
  %180 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc196, align 8
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp188, align 8
  call void %180(%struct._object* %181)
  br label %if.end.197

if.end.197:                                       ; preds = %if.else.194, %if.then.193
  br label %do.end.198

do.end.198:                                       ; preds = %if.end.197
  %182 = load %struct._longobject*, %struct._longobject** %w, align 8
  %call199 = call %struct._longobject* @long_normalize(%struct._longobject* %182)
  %183 = load %struct._longobject**, %struct._longobject*** %prem.addr, align 8
  store %struct._longobject* %call199, %struct._longobject** %183, align 8
  %184 = load %struct._longobject*, %struct._longobject** %a, align 8
  %call200 = call %struct._longobject* @long_normalize(%struct._longobject* %184)
  store %struct._longobject* %call200, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %do.end.198, %do.end.118, %do.end.69, %do.end, %if.then
  %185 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %185
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @_PyLong_Negate(%struct._longobject** %x_p) #6 {
entry:
  %x_p.addr = alloca %struct._longobject**, align 8
  %x = alloca %struct._longobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._longobject** %x_p, %struct._longobject*** %x_p.addr, align 8
  %0 = load %struct._longobject**, %struct._longobject*** %x_p.addr, align 8
  %1 = load %struct._longobject*, %struct._longobject** %0, align 8
  store %struct._longobject* %1, %struct._longobject** %x, align 8
  %2 = load %struct._longobject*, %struct._longobject** %x, align 8
  %3 = bitcast %struct._longobject* %2 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 0
  %4 = load i64, i64* %ob_refcnt, align 8
  %cmp = icmp eq i64 %4, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct._longobject*, %struct._longobject** %x, align 8
  %6 = bitcast %struct._longobject* %5 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1
  %7 = load i64, i64* %ob_size, align 8
  %sub = sub i64 0, %7
  %8 = load %struct._longobject*, %struct._longobject** %x, align 8
  %9 = bitcast %struct._longobject* %8 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %9, i32 0, i32 1
  store i64 %sub, i64* %ob_size1, align 8
  br label %do.end

if.end:                                           ; preds = %entry
  %10 = load %struct._longobject*, %struct._longobject** %x, align 8
  %11 = bitcast %struct._longobject* %10 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %11, i32 0, i32 1
  %12 = load i64, i64* %ob_size2, align 8
  %cmp3 = icmp slt i64 %12, 0
  br i1 %cmp3, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %13 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %13, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %14 = load i32, i32* %arrayidx, align 4
  %sub4 = sub i32 0, %14
  br label %cond.end.11

cond.false:                                       ; preds = %if.end
  %15 = load %struct._longobject*, %struct._longobject** %x, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size5 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size5, align 8
  %cmp6 = icmp eq i64 %17, 0
  br i1 %cmp6, label %cond.true.7, label %cond.false.8

cond.true.7:                                      ; preds = %cond.false
  br label %cond.end

cond.false.8:                                     ; preds = %cond.false
  %18 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit9 = getelementptr inbounds %struct._longobject, %struct._longobject* %18, i32 0, i32 1
  %arrayidx10 = getelementptr [1 x i32], [1 x i32]* %ob_digit9, i32 0, i64 0
  %19 = load i32, i32* %arrayidx10, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false.8, %cond.true.7
  %cond = phi i32 [ 0, %cond.true.7 ], [ %19, %cond.false.8 ]
  br label %cond.end.11

cond.end.11:                                      ; preds = %cond.end, %cond.true
  %cond12 = phi i32 [ %sub4, %cond.true ], [ %cond, %cond.end ]
  %sub13 = sub i32 0, %cond12
  %conv = sext i32 %sub13 to i64
  %call = call %struct._object* @PyLong_FromLong(i64 %conv)
  %20 = bitcast %struct._object* %call to %struct._longobject*
  %21 = load %struct._longobject**, %struct._longobject*** %x_p.addr, align 8
  store %struct._longobject* %20, %struct._longobject** %21, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end.11
  %22 = load %struct._longobject*, %struct._longobject** %x, align 8
  %23 = bitcast %struct._longobject* %22 to %struct._object*
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt14 = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt14, align 8
  %dec = add i64 %25, -1
  store i64 %dec, i64* %ob_refcnt14, align 8
  %cmp15 = icmp ne i64 %dec, 0
  br i1 %cmp15, label %if.then.17, label %if.else

if.then.17:                                       ; preds = %do.body
  br label %if.end.18

if.else:                                          ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %28(%struct._object* %29)
  br label %if.end.18

if.end.18:                                        ; preds = %if.else, %if.then.17
  br label %do.end

do.end:                                           ; preds = %if.then, %if.end.18
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @inplace_divrem1(i32* %pout, i32* %pin, i64 %size, i32 %n) #0 {
entry:
  %pout.addr = alloca i32*, align 8
  %pin.addr = alloca i32*, align 8
  %size.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  %rem = alloca i64, align 8
  %hi = alloca i32, align 4
  store i32* %pout, i32** %pout.addr, align 8
  store i32* %pin, i32** %pin.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  store i64 0, i64* %rem, align 8
  %0 = load i64, i64* %size.addr, align 8
  %1 = load i32*, i32** %pin.addr, align 8
  %add.ptr = getelementptr i32, i32* %1, i64 %0
  store i32* %add.ptr, i32** %pin.addr, align 8
  %2 = load i64, i64* %size.addr, align 8
  %3 = load i32*, i32** %pout.addr, align 8
  %add.ptr1 = getelementptr i32, i32* %3, i64 %2
  store i32* %add.ptr1, i32** %pout.addr, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i64, i64* %size.addr, align 8
  %dec = add i64 %4, -1
  store i64 %dec, i64* %size.addr, align 8
  %cmp = icmp sge i64 %dec, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load i64, i64* %rem, align 8
  %shl = shl i64 %5, 30
  %6 = load i32*, i32** %pin.addr, align 8
  %incdec.ptr = getelementptr i32, i32* %6, i32 -1
  store i32* %incdec.ptr, i32** %pin.addr, align 8
  %7 = load i32, i32* %incdec.ptr, align 4
  %conv = zext i32 %7 to i64
  %or = or i64 %shl, %conv
  store i64 %or, i64* %rem, align 8
  %8 = load i64, i64* %rem, align 8
  %9 = load i32, i32* %n.addr, align 4
  %conv2 = zext i32 %9 to i64
  %div = udiv i64 %8, %conv2
  %conv3 = trunc i64 %div to i32
  store i32 %conv3, i32* %hi, align 4
  %10 = load i32*, i32** %pout.addr, align 8
  %incdec.ptr4 = getelementptr i32, i32* %10, i32 -1
  store i32* %incdec.ptr4, i32** %pout.addr, align 8
  store i32 %conv3, i32* %incdec.ptr4, align 4
  %11 = load i32, i32* %hi, align 4
  %conv5 = zext i32 %11 to i64
  %12 = load i32, i32* %n.addr, align 4
  %conv6 = zext i32 %12 to i64
  %mul = mul i64 %conv5, %conv6
  %13 = load i64, i64* %rem, align 8
  %sub = sub i64 %13, %mul
  store i64 %sub, i64* %rem, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %14 = load i64, i64* %rem, align 8
  %conv7 = trunc i64 %14 to i32
  ret i32 %conv7
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @x_sub(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %size_a = alloca i64, align 8
  %size_b = alloca i64, align 8
  %z = alloca %struct._longobject*, align 8
  %i = alloca i64, align 8
  %sign = alloca i32, align 4
  %borrow = alloca i32, align 4
  %temp = alloca %struct._longobject*, align 8
  %size_temp = alloca i64, align 8
  %temp27 = alloca %struct._longobject*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size_a, align 8
  %9 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  br i1 %cmp4, label %cond.true.5, label %cond.false.8

cond.true.5:                                      ; preds = %cond.end
  %12 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %14
  br label %cond.end.10

cond.false.8:                                     ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.5
  %cond11 = phi i64 [ %sub7, %cond.true.5 ], [ %17, %cond.false.8 ]
  store i64 %cond11, i64* %size_b, align 8
  store i32 1, i32* %sign, align 4
  store i32 0, i32* %borrow, align 4
  %18 = load i64, i64* %size_a, align 8
  %19 = load i64, i64* %size_b, align 8
  %cmp12 = icmp slt i64 %18, %19
  br i1 %cmp12, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end.10
  store i32 -1, i32* %sign, align 4
  %20 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %20, %struct._longobject** %temp, align 8
  %21 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  store %struct._longobject* %21, %struct._longobject** %a.addr, align 8
  %22 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %22, %struct._longobject** %b.addr, align 8
  %23 = load i64, i64* %size_a, align 8
  store i64 %23, i64* %size_temp, align 8
  %24 = load i64, i64* %size_b, align 8
  store i64 %24, i64* %size_a, align 8
  %25 = load i64, i64* %size_temp, align 8
  store i64 %25, i64* %size_b, align 8
  br label %if.end.30

if.else:                                          ; preds = %cond.end.10
  %26 = load i64, i64* %size_a, align 8
  %27 = load i64, i64* %size_b, align 8
  %cmp13 = icmp eq i64 %26, %27
  br i1 %cmp13, label %if.then.14, label %if.end.29

if.then.14:                                       ; preds = %if.else
  %28 = load i64, i64* %size_a, align 8
  store i64 %28, i64* %i, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.14
  %29 = load i64, i64* %i, align 8
  %dec = add i64 %29, -1
  store i64 %dec, i64* %i, align 8
  %cmp15 = icmp sge i64 %dec, 0
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %30 = load i64, i64* %i, align 8
  %31 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %31, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %30
  %32 = load i32, i32* %arrayidx, align 4
  %33 = load i64, i64* %i, align 8
  %34 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit16 = getelementptr inbounds %struct._longobject, %struct._longobject* %34, i32 0, i32 1
  %arrayidx17 = getelementptr [1 x i32], [1 x i32]* %ob_digit16, i32 0, i64 %33
  %35 = load i32, i32* %arrayidx17, align 4
  %cmp18 = icmp eq i32 %32, %35
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %36 = phi i1 [ false, %while.cond ], [ %cmp18, %land.rhs ]
  br i1 %36, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  br label %while.cond

while.end:                                        ; preds = %land.end
  %37 = load i64, i64* %i, align 8
  %cmp19 = icmp slt i64 %37, 0
  br i1 %cmp19, label %if.then.20, label %if.end

if.then.20:                                       ; preds = %while.end
  %call = call %struct._object* @PyLong_FromLong(i64 0)
  %38 = bitcast %struct._object* %call to %struct._longobject*
  store %struct._longobject* %38, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %while.end
  %39 = load i64, i64* %i, align 8
  %40 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit21 = getelementptr inbounds %struct._longobject, %struct._longobject* %40, i32 0, i32 1
  %arrayidx22 = getelementptr [1 x i32], [1 x i32]* %ob_digit21, i32 0, i64 %39
  %41 = load i32, i32* %arrayidx22, align 4
  %42 = load i64, i64* %i, align 8
  %43 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit23 = getelementptr inbounds %struct._longobject, %struct._longobject* %43, i32 0, i32 1
  %arrayidx24 = getelementptr [1 x i32], [1 x i32]* %ob_digit23, i32 0, i64 %42
  %44 = load i32, i32* %arrayidx24, align 4
  %cmp25 = icmp ult i32 %41, %44
  br i1 %cmp25, label %if.then.26, label %if.end.28

if.then.26:                                       ; preds = %if.end
  store i32 -1, i32* %sign, align 4
  %45 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %45, %struct._longobject** %temp27, align 8
  %46 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  store %struct._longobject* %46, %struct._longobject** %a.addr, align 8
  %47 = load %struct._longobject*, %struct._longobject** %temp27, align 8
  store %struct._longobject* %47, %struct._longobject** %b.addr, align 8
  br label %if.end.28

if.end.28:                                        ; preds = %if.then.26, %if.end
  %48 = load i64, i64* %i, align 8
  %add = add i64 %48, 1
  store i64 %add, i64* %size_b, align 8
  store i64 %add, i64* %size_a, align 8
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %if.else
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.then
  %49 = load i64, i64* %size_a, align 8
  %call31 = call %struct._longobject* @_PyLong_New(i64 %49)
  store %struct._longobject* %call31, %struct._longobject** %z, align 8
  %50 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp32 = icmp eq %struct._longobject* %50, null
  br i1 %cmp32, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.34:                                        ; preds = %if.end.30
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.34
  %51 = load i64, i64* %i, align 8
  %52 = load i64, i64* %size_b, align 8
  %cmp35 = icmp slt i64 %51, %52
  br i1 %cmp35, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %53 = load i64, i64* %i, align 8
  %54 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit36 = getelementptr inbounds %struct._longobject, %struct._longobject* %54, i32 0, i32 1
  %arrayidx37 = getelementptr [1 x i32], [1 x i32]* %ob_digit36, i32 0, i64 %53
  %55 = load i32, i32* %arrayidx37, align 4
  %56 = load i64, i64* %i, align 8
  %57 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit38 = getelementptr inbounds %struct._longobject, %struct._longobject* %57, i32 0, i32 1
  %arrayidx39 = getelementptr [1 x i32], [1 x i32]* %ob_digit38, i32 0, i64 %56
  %58 = load i32, i32* %arrayidx39, align 4
  %sub40 = sub i32 %55, %58
  %59 = load i32, i32* %borrow, align 4
  %sub41 = sub i32 %sub40, %59
  store i32 %sub41, i32* %borrow, align 4
  %60 = load i32, i32* %borrow, align 4
  %and = and i32 %60, 1073741823
  %61 = load i64, i64* %i, align 8
  %62 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit42 = getelementptr inbounds %struct._longobject, %struct._longobject* %62, i32 0, i32 1
  %arrayidx43 = getelementptr [1 x i32], [1 x i32]* %ob_digit42, i32 0, i64 %61
  store i32 %and, i32* %arrayidx43, align 4
  %63 = load i32, i32* %borrow, align 4
  %shr = lshr i32 %63, 30
  store i32 %shr, i32* %borrow, align 4
  %64 = load i32, i32* %borrow, align 4
  %and44 = and i32 %64, 1
  store i32 %and44, i32* %borrow, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %65 = load i64, i64* %i, align 8
  %inc = add i64 %65, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond.45

for.cond.45:                                      ; preds = %for.inc.56, %for.end
  %66 = load i64, i64* %i, align 8
  %67 = load i64, i64* %size_a, align 8
  %cmp46 = icmp slt i64 %66, %67
  br i1 %cmp46, label %for.body.47, label %for.end.58

for.body.47:                                      ; preds = %for.cond.45
  %68 = load i64, i64* %i, align 8
  %69 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit48 = getelementptr inbounds %struct._longobject, %struct._longobject* %69, i32 0, i32 1
  %arrayidx49 = getelementptr [1 x i32], [1 x i32]* %ob_digit48, i32 0, i64 %68
  %70 = load i32, i32* %arrayidx49, align 4
  %71 = load i32, i32* %borrow, align 4
  %sub50 = sub i32 %70, %71
  store i32 %sub50, i32* %borrow, align 4
  %72 = load i32, i32* %borrow, align 4
  %and51 = and i32 %72, 1073741823
  %73 = load i64, i64* %i, align 8
  %74 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit52 = getelementptr inbounds %struct._longobject, %struct._longobject* %74, i32 0, i32 1
  %arrayidx53 = getelementptr [1 x i32], [1 x i32]* %ob_digit52, i32 0, i64 %73
  store i32 %and51, i32* %arrayidx53, align 4
  %75 = load i32, i32* %borrow, align 4
  %shr54 = lshr i32 %75, 30
  store i32 %shr54, i32* %borrow, align 4
  %76 = load i32, i32* %borrow, align 4
  %and55 = and i32 %76, 1
  store i32 %and55, i32* %borrow, align 4
  br label %for.inc.56

for.inc.56:                                       ; preds = %for.body.47
  %77 = load i64, i64* %i, align 8
  %inc57 = add i64 %77, 1
  store i64 %inc57, i64* %i, align 8
  br label %for.cond.45

for.end.58:                                       ; preds = %for.cond.45
  %78 = load i32, i32* %sign, align 4
  %cmp59 = icmp slt i32 %78, 0
  br i1 %cmp59, label %if.then.60, label %if.end.64

if.then.60:                                       ; preds = %for.end.58
  call void @_PyLong_Negate(%struct._longobject** %z)
  %79 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp61 = icmp eq %struct._longobject* %79, null
  br i1 %cmp61, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %if.then.60
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.63:                                        ; preds = %if.then.60
  br label %if.end.64

if.end.64:                                        ; preds = %if.end.63, %for.end.58
  %80 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call65 = call %struct._longobject* @long_normalize(%struct._longobject* %80)
  store %struct._longobject* %call65, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %if.end.64, %if.then.62, %if.then.33, %if.then.20
  %81 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %81
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @x_add(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %size_a = alloca i64, align 8
  %size_b = alloca i64, align 8
  %z = alloca %struct._longobject*, align 8
  %i = alloca i64, align 8
  %carry = alloca i32, align 4
  %temp = alloca %struct._longobject*, align 8
  %size_temp = alloca i64, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size_a, align 8
  %9 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  br i1 %cmp4, label %cond.true.5, label %cond.false.8

cond.true.5:                                      ; preds = %cond.end
  %12 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %14
  br label %cond.end.10

cond.false.8:                                     ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.5
  %cond11 = phi i64 [ %sub7, %cond.true.5 ], [ %17, %cond.false.8 ]
  store i64 %cond11, i64* %size_b, align 8
  store i32 0, i32* %carry, align 4
  %18 = load i64, i64* %size_a, align 8
  %19 = load i64, i64* %size_b, align 8
  %cmp12 = icmp slt i64 %18, %19
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.10
  %20 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %20, %struct._longobject** %temp, align 8
  %21 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  store %struct._longobject* %21, %struct._longobject** %a.addr, align 8
  %22 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %22, %struct._longobject** %b.addr, align 8
  %23 = load i64, i64* %size_a, align 8
  store i64 %23, i64* %size_temp, align 8
  %24 = load i64, i64* %size_b, align 8
  store i64 %24, i64* %size_a, align 8
  %25 = load i64, i64* %size_temp, align 8
  store i64 %25, i64* %size_b, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.10
  %26 = load i64, i64* %size_a, align 8
  %add = add i64 %26, 1
  %call = call %struct._longobject* @_PyLong_New(i64 %add)
  store %struct._longobject* %call, %struct._longobject** %z, align 8
  %27 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp13 = icmp eq %struct._longobject* %27, null
  br i1 %cmp13, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %if.end
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.15:                                        ; preds = %if.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.15
  %28 = load i64, i64* %i, align 8
  %29 = load i64, i64* %size_b, align 8
  %cmp16 = icmp slt i64 %28, %29
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load i64, i64* %i, align 8
  %31 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %31, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %30
  %32 = load i32, i32* %arrayidx, align 4
  %33 = load i64, i64* %i, align 8
  %34 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit17 = getelementptr inbounds %struct._longobject, %struct._longobject* %34, i32 0, i32 1
  %arrayidx18 = getelementptr [1 x i32], [1 x i32]* %ob_digit17, i32 0, i64 %33
  %35 = load i32, i32* %arrayidx18, align 4
  %add19 = add i32 %32, %35
  %36 = load i32, i32* %carry, align 4
  %add20 = add i32 %36, %add19
  store i32 %add20, i32* %carry, align 4
  %37 = load i32, i32* %carry, align 4
  %and = and i32 %37, 1073741823
  %38 = load i64, i64* %i, align 8
  %39 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit21 = getelementptr inbounds %struct._longobject, %struct._longobject* %39, i32 0, i32 1
  %arrayidx22 = getelementptr [1 x i32], [1 x i32]* %ob_digit21, i32 0, i64 %38
  store i32 %and, i32* %arrayidx22, align 4
  %40 = load i32, i32* %carry, align 4
  %shr = lshr i32 %40, 30
  store i32 %shr, i32* %carry, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %41 = load i64, i64* %i, align 8
  %inc = add i64 %41, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond.23

for.cond.23:                                      ; preds = %for.inc.33, %for.end
  %42 = load i64, i64* %i, align 8
  %43 = load i64, i64* %size_a, align 8
  %cmp24 = icmp slt i64 %42, %43
  br i1 %cmp24, label %for.body.25, label %for.end.35

for.body.25:                                      ; preds = %for.cond.23
  %44 = load i64, i64* %i, align 8
  %45 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit26 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arrayidx27 = getelementptr [1 x i32], [1 x i32]* %ob_digit26, i32 0, i64 %44
  %46 = load i32, i32* %arrayidx27, align 4
  %47 = load i32, i32* %carry, align 4
  %add28 = add i32 %47, %46
  store i32 %add28, i32* %carry, align 4
  %48 = load i32, i32* %carry, align 4
  %and29 = and i32 %48, 1073741823
  %49 = load i64, i64* %i, align 8
  %50 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit30 = getelementptr inbounds %struct._longobject, %struct._longobject* %50, i32 0, i32 1
  %arrayidx31 = getelementptr [1 x i32], [1 x i32]* %ob_digit30, i32 0, i64 %49
  store i32 %and29, i32* %arrayidx31, align 4
  %51 = load i32, i32* %carry, align 4
  %shr32 = lshr i32 %51, 30
  store i32 %shr32, i32* %carry, align 4
  br label %for.inc.33

for.inc.33:                                       ; preds = %for.body.25
  %52 = load i64, i64* %i, align 8
  %inc34 = add i64 %52, 1
  store i64 %inc34, i64* %i, align 8
  br label %for.cond.23

for.end.35:                                       ; preds = %for.cond.23
  %53 = load i32, i32* %carry, align 4
  %54 = load i64, i64* %i, align 8
  %55 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit36 = getelementptr inbounds %struct._longobject, %struct._longobject* %55, i32 0, i32 1
  %arrayidx37 = getelementptr [1 x i32], [1 x i32]* %ob_digit36, i32 0, i64 %54
  store i32 %53, i32* %arrayidx37, align 4
  %56 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call38 = call %struct._longobject* @long_normalize(%struct._longobject* %56)
  store %struct._longobject* %call38, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %for.end.35, %if.then.14
  %57 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %57
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_mul(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %z = alloca %struct._longobject*, align 8
  %v = alloca i64, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %4 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %5 = bitcast %struct._longobject* %4 to %struct._object*
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19
  %7 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %7, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %8, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size, align 8
  %cmp5 = icmp slt i64 %11, 0
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %12 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub = sub i64 0, %14
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %15 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size7, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %17, %cond.false ]
  %cmp8 = icmp sle i64 %cond, 1
  br i1 %cmp8, label %land.lhs.true, label %if.end.55

land.lhs.true:                                    ; preds = %cond.end
  %18 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %19 = bitcast %struct._longobject* %18 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1
  %20 = load i64, i64* %ob_size9, align 8
  %cmp10 = icmp slt i64 %20, 0
  br i1 %cmp10, label %cond.true.11, label %cond.false.14

cond.true.11:                                     ; preds = %land.lhs.true
  %21 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %22 = bitcast %struct._longobject* %21 to %struct.PyVarObject*
  %ob_size12 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %22, i32 0, i32 1
  %23 = load i64, i64* %ob_size12, align 8
  %sub13 = sub i64 0, %23
  br label %cond.end.16

cond.false.14:                                    ; preds = %land.lhs.true
  %24 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %25 = bitcast %struct._longobject* %24 to %struct.PyVarObject*
  %ob_size15 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %25, i32 0, i32 1
  %26 = load i64, i64* %ob_size15, align 8
  br label %cond.end.16

cond.end.16:                                      ; preds = %cond.false.14, %cond.true.11
  %cond17 = phi i64 [ %sub13, %cond.true.11 ], [ %26, %cond.false.14 ]
  %cmp18 = icmp sle i64 %cond17, 1
  br i1 %cmp18, label %if.then.19, label %if.end.55

if.then.19:                                       ; preds = %cond.end.16
  %27 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %28 = bitcast %struct._longobject* %27 to %struct.PyVarObject*
  %ob_size20 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %28, i32 0, i32 1
  %29 = load i64, i64* %ob_size20, align 8
  %cmp21 = icmp slt i64 %29, 0
  br i1 %cmp21, label %cond.true.22, label %cond.false.24

cond.true.22:                                     ; preds = %if.then.19
  %30 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %30, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %31 = load i32, i32* %arrayidx, align 4
  %sub23 = sub i32 0, %31
  br label %cond.end.33

cond.false.24:                                    ; preds = %if.then.19
  %32 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %33 = bitcast %struct._longobject* %32 to %struct.PyVarObject*
  %ob_size25 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %33, i32 0, i32 1
  %34 = load i64, i64* %ob_size25, align 8
  %cmp26 = icmp eq i64 %34, 0
  br i1 %cmp26, label %cond.true.27, label %cond.false.28

cond.true.27:                                     ; preds = %cond.false.24
  br label %cond.end.31

cond.false.28:                                    ; preds = %cond.false.24
  %35 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit29 = getelementptr inbounds %struct._longobject, %struct._longobject* %35, i32 0, i32 1
  %arrayidx30 = getelementptr [1 x i32], [1 x i32]* %ob_digit29, i32 0, i64 0
  %36 = load i32, i32* %arrayidx30, align 4
  br label %cond.end.31

cond.end.31:                                      ; preds = %cond.false.28, %cond.true.27
  %cond32 = phi i32 [ 0, %cond.true.27 ], [ %36, %cond.false.28 ]
  br label %cond.end.33

cond.end.33:                                      ; preds = %cond.end.31, %cond.true.22
  %cond34 = phi i32 [ %sub23, %cond.true.22 ], [ %cond32, %cond.end.31 ]
  %conv = sext i32 %cond34 to i64
  %37 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %38 = bitcast %struct._longobject* %37 to %struct.PyVarObject*
  %ob_size35 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %38, i32 0, i32 1
  %39 = load i64, i64* %ob_size35, align 8
  %cmp36 = icmp slt i64 %39, 0
  br i1 %cmp36, label %cond.true.38, label %cond.false.42

cond.true.38:                                     ; preds = %cond.end.33
  %40 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit39 = getelementptr inbounds %struct._longobject, %struct._longobject* %40, i32 0, i32 1
  %arrayidx40 = getelementptr [1 x i32], [1 x i32]* %ob_digit39, i32 0, i64 0
  %41 = load i32, i32* %arrayidx40, align 4
  %sub41 = sub i32 0, %41
  br label %cond.end.52

cond.false.42:                                    ; preds = %cond.end.33
  %42 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %43 = bitcast %struct._longobject* %42 to %struct.PyVarObject*
  %ob_size43 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %43, i32 0, i32 1
  %44 = load i64, i64* %ob_size43, align 8
  %cmp44 = icmp eq i64 %44, 0
  br i1 %cmp44, label %cond.true.46, label %cond.false.47

cond.true.46:                                     ; preds = %cond.false.42
  br label %cond.end.50

cond.false.47:                                    ; preds = %cond.false.42
  %45 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit48 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arrayidx49 = getelementptr [1 x i32], [1 x i32]* %ob_digit48, i32 0, i64 0
  %46 = load i32, i32* %arrayidx49, align 4
  br label %cond.end.50

cond.end.50:                                      ; preds = %cond.false.47, %cond.true.46
  %cond51 = phi i32 [ 0, %cond.true.46 ], [ %46, %cond.false.47 ]
  br label %cond.end.52

cond.end.52:                                      ; preds = %cond.end.50, %cond.true.38
  %cond53 = phi i32 [ %sub41, %cond.true.38 ], [ %cond51, %cond.end.50 ]
  %conv54 = sext i32 %cond53 to i64
  %mul = mul i64 %conv, %conv54
  store i64 %mul, i64* %v, align 8
  %47 = load i64, i64* %v, align 8
  %call = call %struct._object* @PyLong_FromLongLong(i64 %47)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end.55:                                        ; preds = %cond.end.16, %cond.end
  %48 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %49 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call56 = call %struct._longobject* @k_mul(%struct._longobject* %48, %struct._longobject* %49)
  store %struct._longobject* %call56, %struct._longobject** %z, align 8
  %50 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %51 = bitcast %struct._longobject* %50 to %struct.PyVarObject*
  %ob_size57 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %51, i32 0, i32 1
  %52 = load i64, i64* %ob_size57, align 8
  %53 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %54 = bitcast %struct._longobject* %53 to %struct.PyVarObject*
  %ob_size58 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %54, i32 0, i32 1
  %55 = load i64, i64* %ob_size58, align 8
  %xor = xor i64 %52, %55
  %cmp59 = icmp slt i64 %xor, 0
  br i1 %cmp59, label %land.lhs.true.61, label %if.end.67

land.lhs.true.61:                                 ; preds = %if.end.55
  %56 = load %struct._longobject*, %struct._longobject** %z, align 8
  %tobool = icmp ne %struct._longobject* %56, null
  br i1 %tobool, label %if.then.62, label %if.end.67

if.then.62:                                       ; preds = %land.lhs.true.61
  call void @_PyLong_Negate(%struct._longobject** %z)
  %57 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp63 = icmp eq %struct._longobject* %57, null
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.then.62
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.66:                                        ; preds = %if.then.62
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %land.lhs.true.61, %if.end.55
  %58 = load %struct._longobject*, %struct._longobject** %z, align 8
  %59 = bitcast %struct._longobject* %58 to %struct._object*
  store %struct._object* %59, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.67, %if.then.65, %cond.end.52, %if.then
  %60 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %60
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_mod(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  %mod = alloca %struct._longobject*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8
  store %struct._object* %b, %struct._object** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %a.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %b.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %a.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct._longobject*
  %9 = load %struct._object*, %struct._object** %b.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  %call = call i32 @l_divmod(%struct._longobject* %8, %struct._longobject* %10, %struct._longobject** null, %struct._longobject** %mod)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %do.end
  store %struct._longobject* null, %struct._longobject** %mod, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %do.end
  %11 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %12 = bitcast %struct._longobject* %11 to %struct._object*
  store %struct._object* %12, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then
  %13 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %13
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_divmod(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  %div = alloca %struct._longobject*, align 8
  %mod = alloca %struct._longobject*, align 8
  %z = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp21 = alloca %struct._object*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8
  store %struct._object* %b, %struct._object** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %a.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %b.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %a.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct._longobject*
  %9 = load %struct._object*, %struct._object** %b.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  %call = call i32 @l_divmod(%struct._longobject* %8, %struct._longobject* %10, %struct._longobject** %div, %struct._longobject** %mod)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %do.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.7:                                         ; preds = %do.end
  %call8 = call %struct._object* @PyTuple_New(i64 2)
  store %struct._object* %call8, %struct._object** %z, align 8
  %11 = load %struct._object*, %struct._object** %z, align 8
  %cmp9 = icmp ne %struct._object* %11, null
  br i1 %cmp9, label %if.then.10, label %if.else

if.then.10:                                       ; preds = %if.end.7
  %12 = load %struct._object*, %struct._object** %z, align 8
  %13 = load %struct._longobject*, %struct._longobject** %div, align 8
  %14 = bitcast %struct._longobject* %13 to %struct._object*
  %call11 = call i32 @PyTuple_SetItem(%struct._object* %12, i64 0, %struct._object* %14)
  %15 = load %struct._object*, %struct._object** %z, align 8
  %16 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %17 = bitcast %struct._longobject* %16 to %struct._object*
  %call12 = call i32 @PyTuple_SetItem(%struct._object* %15, i64 1, %struct._object* %17)
  br label %if.end.31

if.else:                                          ; preds = %if.end.7
  br label %do.body.13

do.body.13:                                       ; preds = %if.else
  %18 = load %struct._longobject*, %struct._longobject** %div, align 8
  %19 = bitcast %struct._longobject* %18 to %struct._object*
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %21, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp14 = icmp ne i64 %dec, 0
  br i1 %cmp14, label %if.then.15, label %if.else.16

if.then.15:                                       ; preds = %do.body.13
  br label %if.end.18

if.else.16:                                       ; preds = %do.body.13
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type17 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type17, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %24(%struct._object* %25)
  br label %if.end.18

if.end.18:                                        ; preds = %if.else.16, %if.then.15
  br label %do.end.19

do.end.19:                                        ; preds = %if.end.18
  br label %do.body.20

do.body.20:                                       ; preds = %do.end.19
  %26 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %27 = bitcast %struct._longobject* %26 to %struct._object*
  store %struct._object* %27, %struct._object** %_py_decref_tmp21, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_refcnt22 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt22, align 8
  %dec23 = add i64 %29, -1
  store i64 %dec23, i64* %ob_refcnt22, align 8
  %cmp24 = icmp ne i64 %dec23, 0
  br i1 %cmp24, label %if.then.25, label %if.else.26

if.then.25:                                       ; preds = %do.body.20
  br label %if.end.29

if.else.26:                                       ; preds = %do.body.20
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  %ob_type27 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type27, align 8
  %tp_dealloc28 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc28, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp21, align 8
  call void %32(%struct._object* %33)
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.26, %if.then.25
  br label %do.end.30

do.end.30:                                        ; preds = %if.end.29
  br label %if.end.31

if.end.31:                                        ; preds = %do.end.30, %if.then.10
  %34 = load %struct._object*, %struct._object** %z, align 8
  store %struct._object* %34, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.31, %if.then.6, %if.then
  %35 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %35
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_pow(%struct._object* %v, %struct._object* %w, %struct._object* %x) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._object*, align 8
  %w.addr = alloca %struct._object*, align 8
  %x.addr = alloca %struct._object*, align 8
  %a = alloca %struct._longobject*, align 8
  %b = alloca %struct._longobject*, align 8
  %c = alloca %struct._longobject*, align 8
  %negativeOutput = alloca i32, align 4
  %z = alloca %struct._longobject*, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %k = alloca i64, align 8
  %temp = alloca %struct._longobject*, align 8
  %table = alloca [32 x %struct._longobject*], align 16
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp27 = alloca %struct._object*, align 8
  %_py_decref_tmp45 = alloca %struct._object*, align 8
  %_py_decref_tmp56 = alloca %struct._object*, align 8
  %_py_decref_tmp81 = alloca %struct._object*, align 8
  %_py_decref_tmp113 = alloca %struct._object*, align 8
  %bi = alloca i32, align 4
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp148 = alloca %struct._object*, align 8
  %_py_xdecref_tmp168 = alloca %struct._object*, align 8
  %_py_decref_tmp172 = alloca %struct._object*, align 8
  %_py_xdecref_tmp197 = alloca %struct._object*, align 8
  %_py_decref_tmp202 = alloca %struct._object*, align 8
  %_py_xdecref_tmp225 = alloca %struct._object*, align 8
  %_py_decref_tmp230 = alloca %struct._object*, align 8
  %_py_xdecref_tmp267 = alloca %struct._object*, align 8
  %_py_decref_tmp273 = alloca %struct._object*, align 8
  %_py_xdecref_tmp298 = alloca %struct._object*, align 8
  %_py_decref_tmp304 = alloca %struct._object*, align 8
  %bi330 = alloca i32, align 4
  %index = alloca i32, align 4
  %_py_xdecref_tmp350 = alloca %struct._object*, align 8
  %_py_decref_tmp355 = alloca %struct._object*, align 8
  %_py_xdecref_tmp378 = alloca %struct._object*, align 8
  %_py_decref_tmp383 = alloca %struct._object*, align 8
  %_py_xdecref_tmp412 = alloca %struct._object*, align 8
  %_py_decref_tmp417 = alloca %struct._object*, align 8
  %_py_xdecref_tmp440 = alloca %struct._object*, align 8
  %_py_decref_tmp445 = alloca %struct._object*, align 8
  %_py_decref_tmp481 = alloca %struct._object*, align 8
  %_py_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp498 = alloca %struct._object*, align 8
  %_py_xdecref_tmp520 = alloca %struct._object*, align 8
  %_py_decref_tmp526 = alloca %struct._object*, align 8
  %_py_decref_tmp544 = alloca %struct._object*, align 8
  %_py_decref_tmp556 = alloca %struct._object*, align 8
  %_py_xdecref_tmp568 = alloca %struct._object*, align 8
  %_py_decref_tmp573 = alloca %struct._object*, align 8
  %_py_xdecref_tmp587 = alloca %struct._object*, align 8
  %_py_decref_tmp592 = alloca %struct._object*, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8
  store %struct._object* %w, %struct._object** %w.addr, align 8
  store %struct._object* %x, %struct._object** %x.addr, align 8
  store i32 0, i32* %negativeOutput, align 4
  store %struct._longobject* null, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  %0 = bitcast [32 x %struct._longobject*]* %table to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 256, i32 16, i1 false)
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct._object*, %struct._object** %v.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %4 = load %struct._object*, %struct._object** %w.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %4, i32 0, i32 1
  %5 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %5, i32 0, i32 19
  %6 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %6, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %7 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %7, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %8 = load %struct._object*, %struct._object** %v.addr, align 8
  %9 = bitcast %struct._object* %8 to %struct._longobject*
  store %struct._longobject* %9, %struct._longobject** %a, align 8
  %10 = load %struct._longobject*, %struct._longobject** %a, align 8
  %11 = bitcast %struct._longobject* %10 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 0
  %12 = load i64, i64* %ob_refcnt, align 8
  %inc5 = add i64 %12, 1
  store i64 %inc5, i64* %ob_refcnt, align 8
  %13 = load %struct._object*, %struct._object** %w.addr, align 8
  %14 = bitcast %struct._object* %13 to %struct._longobject*
  store %struct._longobject* %14, %struct._longobject** %b, align 8
  %15 = load %struct._longobject*, %struct._longobject** %b, align 8
  %16 = bitcast %struct._longobject* %15 to %struct._object*
  %ob_refcnt6 = getelementptr inbounds %struct._object, %struct._object* %16, i32 0, i32 0
  %17 = load i64, i64* %ob_refcnt6, align 8
  %inc7 = add i64 %17, 1
  store i64 %inc7, i64* %ob_refcnt6, align 8
  %18 = load %struct._object*, %struct._object** %x.addr, align 8
  %ob_type8 = getelementptr inbounds %struct._object, %struct._object* %18, i32 0, i32 1
  %19 = load %struct._typeobject*, %struct._typeobject** %ob_type8, align 8
  %tp_flags9 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %19, i32 0, i32 19
  %20 = load i64, i64* %tp_flags9, align 8
  %and10 = and i64 %20, 16777216
  %cmp11 = icmp ne i64 %and10, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.end
  %21 = load %struct._object*, %struct._object** %x.addr, align 8
  %22 = bitcast %struct._object* %21 to %struct._longobject*
  store %struct._longobject* %22, %struct._longobject** %c, align 8
  %23 = load %struct._object*, %struct._object** %x.addr, align 8
  %ob_refcnt13 = getelementptr inbounds %struct._object, %struct._object* %23, i32 0, i32 0
  %24 = load i64, i64* %ob_refcnt13, align 8
  %inc14 = add i64 %24, 1
  store i64 %inc14, i64* %ob_refcnt13, align 8
  br label %if.end.39

if.else:                                          ; preds = %do.end
  %25 = load %struct._object*, %struct._object** %x.addr, align 8
  %cmp15 = icmp eq %struct._object* %25, @_Py_NoneStruct
  br i1 %cmp15, label %if.then.16, label %if.else.17

if.then.16:                                       ; preds = %if.else
  store %struct._longobject* null, %struct._longobject** %c, align 8
  br label %if.end.38

if.else.17:                                       ; preds = %if.else
  br label %do.body.18

do.body.18:                                       ; preds = %if.else.17
  %26 = load %struct._longobject*, %struct._longobject** %a, align 8
  %27 = bitcast %struct._longobject* %26 to %struct._object*
  store %struct._object* %27, %struct._object** %_py_decref_tmp, align 8
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt19 = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 0
  %29 = load i64, i64* %ob_refcnt19, align 8
  %dec = add i64 %29, -1
  store i64 %dec, i64* %ob_refcnt19, align 8
  %cmp20 = icmp ne i64 %dec, 0
  br i1 %cmp20, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.18
  br label %if.end.24

if.else.22:                                       ; preds = %do.body.18
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %30, i32 0, i32 1
  %31 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %31, i32 0, i32 4
  %32 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %32(%struct._object* %33)
  br label %if.end.24

if.end.24:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.25

do.end.25:                                        ; preds = %if.end.24
  br label %do.body.26

do.body.26:                                       ; preds = %do.end.25
  %34 = load %struct._longobject*, %struct._longobject** %b, align 8
  %35 = bitcast %struct._longobject* %34 to %struct._object*
  store %struct._object* %35, %struct._object** %_py_decref_tmp27, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8
  %ob_refcnt28 = getelementptr inbounds %struct._object, %struct._object* %36, i32 0, i32 0
  %37 = load i64, i64* %ob_refcnt28, align 8
  %dec29 = add i64 %37, -1
  store i64 %dec29, i64* %ob_refcnt28, align 8
  %cmp30 = icmp ne i64 %dec29, 0
  br i1 %cmp30, label %if.then.31, label %if.else.32

if.then.31:                                       ; preds = %do.body.26
  br label %if.end.35

if.else.32:                                       ; preds = %do.body.26
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8
  %ob_type33 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 1
  %39 = load %struct._typeobject*, %struct._typeobject** %ob_type33, align 8
  %tp_dealloc34 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %39, i32 0, i32 4
  %40 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc34, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp27, align 8
  call void %40(%struct._object* %41)
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.32, %if.then.31
  br label %do.end.36

do.end.36:                                        ; preds = %if.end.35
  %42 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc37 = add i64 %42, 1
  store i64 %inc37, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end.38:                                        ; preds = %if.then.16
  br label %if.end.39

if.end.39:                                        ; preds = %if.end.38, %if.then.12
  %43 = load %struct._longobject*, %struct._longobject** %b, align 8
  %44 = bitcast %struct._longobject* %43 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %44, i32 0, i32 1
  %45 = load i64, i64* %ob_size, align 8
  %cmp40 = icmp slt i64 %45, 0
  br i1 %cmp40, label %if.then.41, label %if.end.66

if.then.41:                                       ; preds = %if.end.39
  %46 = load %struct._longobject*, %struct._longobject** %c, align 8
  %tobool = icmp ne %struct._longobject* %46, null
  br i1 %tobool, label %if.then.42, label %if.else.43

if.then.42:                                       ; preds = %if.then.41
  %47 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %47, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.29, i32 0, i32 0))
  br label %Error

if.else.43:                                       ; preds = %if.then.41
  br label %do.body.44

do.body.44:                                       ; preds = %if.else.43
  %48 = load %struct._longobject*, %struct._longobject** %a, align 8
  %49 = bitcast %struct._longobject* %48 to %struct._object*
  store %struct._object* %49, %struct._object** %_py_decref_tmp45, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_refcnt46 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0
  %51 = load i64, i64* %ob_refcnt46, align 8
  %dec47 = add i64 %51, -1
  store i64 %dec47, i64* %ob_refcnt46, align 8
  %cmp48 = icmp ne i64 %dec47, 0
  br i1 %cmp48, label %if.then.49, label %if.else.50

if.then.49:                                       ; preds = %do.body.44
  br label %if.end.53

if.else.50:                                       ; preds = %do.body.44
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  %ob_type51 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type51, align 8
  %tp_dealloc52 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc52, align 8
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp45, align 8
  call void %54(%struct._object* %55)
  br label %if.end.53

if.end.53:                                        ; preds = %if.else.50, %if.then.49
  br label %do.end.54

do.end.54:                                        ; preds = %if.end.53
  br label %do.body.55

do.body.55:                                       ; preds = %do.end.54
  %56 = load %struct._longobject*, %struct._longobject** %b, align 8
  %57 = bitcast %struct._longobject* %56 to %struct._object*
  store %struct._object* %57, %struct._object** %_py_decref_tmp56, align 8
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  %ob_refcnt57 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 0
  %59 = load i64, i64* %ob_refcnt57, align 8
  %dec58 = add i64 %59, -1
  store i64 %dec58, i64* %ob_refcnt57, align 8
  %cmp59 = icmp ne i64 %dec58, 0
  br i1 %cmp59, label %if.then.60, label %if.else.61

if.then.60:                                       ; preds = %do.body.55
  br label %if.end.64

if.else.61:                                       ; preds = %do.body.55
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  %ob_type62 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 1
  %61 = load %struct._typeobject*, %struct._typeobject** %ob_type62, align 8
  %tp_dealloc63 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %61, i32 0, i32 4
  %62 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc63, align 8
  %63 = load %struct._object*, %struct._object** %_py_decref_tmp56, align 8
  call void %62(%struct._object* %63)
  br label %if.end.64

if.end.64:                                        ; preds = %if.else.61, %if.then.60
  br label %do.end.65

do.end.65:                                        ; preds = %if.end.64
  %64 = load %struct.PyNumberMethods*, %struct.PyNumberMethods** getelementptr inbounds (%struct._typeobject, %struct._typeobject* @PyFloat_Type, i32 0, i32 10), align 8
  %nb_power = getelementptr inbounds %struct.PyNumberMethods, %struct.PyNumberMethods* %64, i32 0, i32 5
  %65 = load %struct._object* (%struct._object*, %struct._object*, %struct._object*)*, %struct._object* (%struct._object*, %struct._object*, %struct._object*)** %nb_power, align 8
  %66 = load %struct._object*, %struct._object** %v.addr, align 8
  %67 = load %struct._object*, %struct._object** %w.addr, align 8
  %68 = load %struct._object*, %struct._object** %x.addr, align 8
  %call = call %struct._object* %65(%struct._object* %66, %struct._object* %67, %struct._object* %68)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end.66:                                        ; preds = %if.end.39
  %69 = load %struct._longobject*, %struct._longobject** %c, align 8
  %tobool67 = icmp ne %struct._longobject* %69, null
  br i1 %tobool67, label %if.then.68, label %if.end.124

if.then.68:                                       ; preds = %if.end.66
  %70 = load %struct._longobject*, %struct._longobject** %c, align 8
  %71 = bitcast %struct._longobject* %70 to %struct.PyVarObject*
  %ob_size69 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %71, i32 0, i32 1
  %72 = load i64, i64* %ob_size69, align 8
  %cmp70 = icmp eq i64 %72, 0
  br i1 %cmp70, label %if.then.71, label %if.end.72

if.then.71:                                       ; preds = %if.then.68
  %73 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %73, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0))
  br label %Error

if.end.72:                                        ; preds = %if.then.68
  %74 = load %struct._longobject*, %struct._longobject** %c, align 8
  %75 = bitcast %struct._longobject* %74 to %struct.PyVarObject*
  %ob_size73 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %75, i32 0, i32 1
  %76 = load i64, i64* %ob_size73, align 8
  %cmp74 = icmp slt i64 %76, 0
  br i1 %cmp74, label %if.then.75, label %if.end.94

if.then.75:                                       ; preds = %if.end.72
  store i32 1, i32* %negativeOutput, align 4
  %77 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call76 = call %struct._object* @_PyLong_Copy(%struct._longobject* %77)
  %78 = bitcast %struct._object* %call76 to %struct._longobject*
  store %struct._longobject* %78, %struct._longobject** %temp, align 8
  %79 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %cmp77 = icmp eq %struct._longobject* %79, null
  br i1 %cmp77, label %if.then.78, label %if.end.79

if.then.78:                                       ; preds = %if.then.75
  br label %Error

if.end.79:                                        ; preds = %if.then.75
  br label %do.body.80

do.body.80:                                       ; preds = %if.end.79
  %80 = load %struct._longobject*, %struct._longobject** %c, align 8
  %81 = bitcast %struct._longobject* %80 to %struct._object*
  store %struct._object* %81, %struct._object** %_py_decref_tmp81, align 8
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0
  %83 = load i64, i64* %ob_refcnt82, align 8
  %dec83 = add i64 %83, -1
  store i64 %dec83, i64* %ob_refcnt82, align 8
  %cmp84 = icmp ne i64 %dec83, 0
  br i1 %cmp84, label %if.then.85, label %if.else.86

if.then.85:                                       ; preds = %do.body.80
  br label %if.end.89

if.else.86:                                       ; preds = %do.body.80
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  %ob_type87 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type87, align 8
  %tp_dealloc88 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc88, align 8
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  call void %86(%struct._object* %87)
  br label %if.end.89

if.end.89:                                        ; preds = %if.else.86, %if.then.85
  br label %do.end.90

do.end.90:                                        ; preds = %if.end.89
  %88 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %88, %struct._longobject** %c, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  call void @_PyLong_Negate(%struct._longobject** %c)
  %89 = load %struct._longobject*, %struct._longobject** %c, align 8
  %cmp91 = icmp eq %struct._longobject* %89, null
  br i1 %cmp91, label %if.then.92, label %if.end.93

if.then.92:                                       ; preds = %do.end.90
  br label %Error

if.end.93:                                        ; preds = %do.end.90
  br label %if.end.94

if.end.94:                                        ; preds = %if.end.93, %if.end.72
  %90 = load %struct._longobject*, %struct._longobject** %c, align 8
  %91 = bitcast %struct._longobject* %90 to %struct.PyVarObject*
  %ob_size95 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %91, i32 0, i32 1
  %92 = load i64, i64* %ob_size95, align 8
  %cmp96 = icmp eq i64 %92, 1
  br i1 %cmp96, label %land.lhs.true, label %if.end.100

land.lhs.true:                                    ; preds = %if.end.94
  %93 = load %struct._longobject*, %struct._longobject** %c, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %93, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %94 = load i32, i32* %arrayidx, align 4
  %cmp97 = icmp eq i32 %94, 1
  br i1 %cmp97, label %if.then.98, label %if.end.100

if.then.98:                                       ; preds = %land.lhs.true
  %call99 = call %struct._object* @PyLong_FromLong(i64 0)
  %95 = bitcast %struct._object* %call99 to %struct._longobject*
  store %struct._longobject* %95, %struct._longobject** %z, align 8
  br label %Done

if.end.100:                                       ; preds = %land.lhs.true, %if.end.94
  %96 = load %struct._longobject*, %struct._longobject** %a, align 8
  %97 = bitcast %struct._longobject* %96 to %struct.PyVarObject*
  %ob_size101 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %97, i32 0, i32 1
  %98 = load i64, i64* %ob_size101, align 8
  %cmp102 = icmp slt i64 %98, 0
  br i1 %cmp102, label %if.then.107, label %lor.lhs.false.103

lor.lhs.false.103:                                ; preds = %if.end.100
  %99 = load %struct._longobject*, %struct._longobject** %a, align 8
  %100 = bitcast %struct._longobject* %99 to %struct.PyVarObject*
  %ob_size104 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %100, i32 0, i32 1
  %101 = load i64, i64* %ob_size104, align 8
  %102 = load %struct._longobject*, %struct._longobject** %c, align 8
  %103 = bitcast %struct._longobject* %102 to %struct.PyVarObject*
  %ob_size105 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %103, i32 0, i32 1
  %104 = load i64, i64* %ob_size105, align 8
  %cmp106 = icmp sgt i64 %101, %104
  br i1 %cmp106, label %if.then.107, label %if.end.123

if.then.107:                                      ; preds = %lor.lhs.false.103, %if.end.100
  %105 = load %struct._longobject*, %struct._longobject** %a, align 8
  %106 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call108 = call i32 @l_divmod(%struct._longobject* %105, %struct._longobject* %106, %struct._longobject** null, %struct._longobject** %temp)
  %cmp109 = icmp slt i32 %call108, 0
  br i1 %cmp109, label %if.then.110, label %if.end.111

if.then.110:                                      ; preds = %if.then.107
  br label %Error

if.end.111:                                       ; preds = %if.then.107
  br label %do.body.112

do.body.112:                                      ; preds = %if.end.111
  %107 = load %struct._longobject*, %struct._longobject** %a, align 8
  %108 = bitcast %struct._longobject* %107 to %struct._object*
  store %struct._object* %108, %struct._object** %_py_decref_tmp113, align 8
  %109 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_refcnt114 = getelementptr inbounds %struct._object, %struct._object* %109, i32 0, i32 0
  %110 = load i64, i64* %ob_refcnt114, align 8
  %dec115 = add i64 %110, -1
  store i64 %dec115, i64* %ob_refcnt114, align 8
  %cmp116 = icmp ne i64 %dec115, 0
  br i1 %cmp116, label %if.then.117, label %if.else.118

if.then.117:                                      ; preds = %do.body.112
  br label %if.end.121

if.else.118:                                      ; preds = %do.body.112
  %111 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  %ob_type119 = getelementptr inbounds %struct._object, %struct._object* %111, i32 0, i32 1
  %112 = load %struct._typeobject*, %struct._typeobject** %ob_type119, align 8
  %tp_dealloc120 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %112, i32 0, i32 4
  %113 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc120, align 8
  %114 = load %struct._object*, %struct._object** %_py_decref_tmp113, align 8
  call void %113(%struct._object* %114)
  br label %if.end.121

if.end.121:                                       ; preds = %if.else.118, %if.then.117
  br label %do.end.122

do.end.122:                                       ; preds = %if.end.121
  %115 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %115, %struct._longobject** %a, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %if.end.123

if.end.123:                                       ; preds = %do.end.122, %lor.lhs.false.103
  br label %if.end.124

if.end.124:                                       ; preds = %if.end.123, %if.end.66
  %call125 = call %struct._object* @PyLong_FromLong(i64 1)
  %116 = bitcast %struct._object* %call125 to %struct._longobject*
  store %struct._longobject* %116, %struct._longobject** %z, align 8
  %117 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp126 = icmp eq %struct._longobject* %117, null
  br i1 %cmp126, label %if.then.127, label %if.end.128

if.then.127:                                      ; preds = %if.end.124
  br label %Error

if.end.128:                                       ; preds = %if.end.124
  %118 = load %struct._longobject*, %struct._longobject** %b, align 8
  %119 = bitcast %struct._longobject* %118 to %struct.PyVarObject*
  %ob_size129 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %119, i32 0, i32 1
  %120 = load i64, i64* %ob_size129, align 8
  %cmp130 = icmp sle i64 %120, 8
  br i1 %cmp130, label %if.then.131, label %if.else.250

if.then.131:                                      ; preds = %if.end.128
  %121 = load %struct._longobject*, %struct._longobject** %b, align 8
  %122 = bitcast %struct._longobject* %121 to %struct.PyVarObject*
  %ob_size132 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %122, i32 0, i32 1
  %123 = load i64, i64* %ob_size132, align 8
  %sub = sub i64 %123, 1
  store i64 %sub, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.247, %if.then.131
  %124 = load i64, i64* %i, align 8
  %cmp133 = icmp sge i64 %124, 0
  br i1 %cmp133, label %for.body, label %for.end.249

for.body:                                         ; preds = %for.cond
  %125 = load i64, i64* %i, align 8
  %126 = load %struct._longobject*, %struct._longobject** %b, align 8
  %ob_digit134 = getelementptr inbounds %struct._longobject, %struct._longobject* %126, i32 0, i32 1
  %arrayidx135 = getelementptr [1 x i32], [1 x i32]* %ob_digit134, i32 0, i64 %125
  %127 = load i32, i32* %arrayidx135, align 4
  store i32 %127, i32* %bi, align 4
  store i64 536870912, i64* %j, align 8
  br label %for.cond.136

for.cond.136:                                     ; preds = %for.inc, %for.body
  %128 = load i64, i64* %j, align 8
  %cmp137 = icmp ne i64 %128, 0
  br i1 %cmp137, label %for.body.138, label %for.end

for.body.138:                                     ; preds = %for.cond.136
  br label %do.body.139

do.body.139:                                      ; preds = %for.body.138
  %129 = load %struct._longobject*, %struct._longobject** %z, align 8
  %130 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call140 = call %struct._object* @long_mul(%struct._longobject* %129, %struct._longobject* %130)
  %131 = bitcast %struct._object* %call140 to %struct._longobject*
  store %struct._longobject* %131, %struct._longobject** %temp, align 8
  %132 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %cmp141 = icmp eq %struct._longobject* %132, null
  br i1 %cmp141, label %if.then.142, label %if.end.143

if.then.142:                                      ; preds = %do.body.139
  br label %Error

if.end.143:                                       ; preds = %do.body.139
  br label %do.body.144

do.body.144:                                      ; preds = %if.end.143
  %133 = load %struct._longobject*, %struct._longobject** %z, align 8
  %134 = bitcast %struct._longobject* %133 to %struct._object*
  store %struct._object* %134, %struct._object** %_py_xdecref_tmp, align 8
  %135 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp145 = icmp ne %struct._object* %135, null
  br i1 %cmp145, label %if.then.146, label %if.end.158

if.then.146:                                      ; preds = %do.body.144
  br label %do.body.147

do.body.147:                                      ; preds = %if.then.146
  %136 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %136, %struct._object** %_py_decref_tmp148, align 8
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8
  %ob_refcnt149 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 0
  %138 = load i64, i64* %ob_refcnt149, align 8
  %dec150 = add i64 %138, -1
  store i64 %dec150, i64* %ob_refcnt149, align 8
  %cmp151 = icmp ne i64 %dec150, 0
  br i1 %cmp151, label %if.then.152, label %if.else.153

if.then.152:                                      ; preds = %do.body.147
  br label %if.end.156

if.else.153:                                      ; preds = %do.body.147
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8
  %ob_type154 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 1
  %140 = load %struct._typeobject*, %struct._typeobject** %ob_type154, align 8
  %tp_dealloc155 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %140, i32 0, i32 4
  %141 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc155, align 8
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp148, align 8
  call void %141(%struct._object* %142)
  br label %if.end.156

if.end.156:                                       ; preds = %if.else.153, %if.then.152
  br label %do.end.157

do.end.157:                                       ; preds = %if.end.156
  br label %if.end.158

if.end.158:                                       ; preds = %do.end.157, %do.body.144
  br label %do.end.159

do.end.159:                                       ; preds = %if.end.158
  %143 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %143, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %do.body.160

do.body.160:                                      ; preds = %do.end.159
  %144 = load %struct._longobject*, %struct._longobject** %c, align 8
  %cmp161 = icmp ne %struct._longobject* %144, null
  br i1 %cmp161, label %if.then.162, label %if.end.184

if.then.162:                                      ; preds = %do.body.160
  %145 = load %struct._longobject*, %struct._longobject** %z, align 8
  %146 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call163 = call i32 @l_divmod(%struct._longobject* %145, %struct._longobject* %146, %struct._longobject** null, %struct._longobject** %temp)
  %cmp164 = icmp slt i32 %call163, 0
  br i1 %cmp164, label %if.then.165, label %if.end.166

if.then.165:                                      ; preds = %if.then.162
  br label %Error

if.end.166:                                       ; preds = %if.then.162
  br label %do.body.167

do.body.167:                                      ; preds = %if.end.166
  %147 = load %struct._longobject*, %struct._longobject** %z, align 8
  %148 = bitcast %struct._longobject* %147 to %struct._object*
  store %struct._object* %148, %struct._object** %_py_xdecref_tmp168, align 8
  %149 = load %struct._object*, %struct._object** %_py_xdecref_tmp168, align 8
  %cmp169 = icmp ne %struct._object* %149, null
  br i1 %cmp169, label %if.then.170, label %if.end.182

if.then.170:                                      ; preds = %do.body.167
  br label %do.body.171

do.body.171:                                      ; preds = %if.then.170
  %150 = load %struct._object*, %struct._object** %_py_xdecref_tmp168, align 8
  store %struct._object* %150, %struct._object** %_py_decref_tmp172, align 8
  %151 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8
  %ob_refcnt173 = getelementptr inbounds %struct._object, %struct._object* %151, i32 0, i32 0
  %152 = load i64, i64* %ob_refcnt173, align 8
  %dec174 = add i64 %152, -1
  store i64 %dec174, i64* %ob_refcnt173, align 8
  %cmp175 = icmp ne i64 %dec174, 0
  br i1 %cmp175, label %if.then.176, label %if.else.177

if.then.176:                                      ; preds = %do.body.171
  br label %if.end.180

if.else.177:                                      ; preds = %do.body.171
  %153 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8
  %ob_type178 = getelementptr inbounds %struct._object, %struct._object* %153, i32 0, i32 1
  %154 = load %struct._typeobject*, %struct._typeobject** %ob_type178, align 8
  %tp_dealloc179 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %154, i32 0, i32 4
  %155 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc179, align 8
  %156 = load %struct._object*, %struct._object** %_py_decref_tmp172, align 8
  call void %155(%struct._object* %156)
  br label %if.end.180

if.end.180:                                       ; preds = %if.else.177, %if.then.176
  br label %do.end.181

do.end.181:                                       ; preds = %if.end.180
  br label %if.end.182

if.end.182:                                       ; preds = %do.end.181, %do.body.167
  br label %do.end.183

do.end.183:                                       ; preds = %if.end.182
  %157 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %157, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %if.end.184

if.end.184:                                       ; preds = %do.end.183, %do.body.160
  br label %do.end.185

do.end.185:                                       ; preds = %if.end.184
  br label %do.end.186

do.end.186:                                       ; preds = %do.end.185
  %158 = load i32, i32* %bi, align 4
  %conv = zext i32 %158 to i64
  %159 = load i64, i64* %j, align 8
  %and187 = and i64 %conv, %159
  %tobool188 = icmp ne i64 %and187, 0
  br i1 %tobool188, label %if.then.189, label %if.end.246

if.then.189:                                      ; preds = %do.end.186
  br label %do.body.190

do.body.190:                                      ; preds = %if.then.189
  %160 = load %struct._longobject*, %struct._longobject** %z, align 8
  %161 = load %struct._longobject*, %struct._longobject** %a, align 8
  %call191 = call %struct._object* @long_mul(%struct._longobject* %160, %struct._longobject* %161)
  %162 = bitcast %struct._object* %call191 to %struct._longobject*
  store %struct._longobject* %162, %struct._longobject** %temp, align 8
  %163 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %cmp192 = icmp eq %struct._longobject* %163, null
  br i1 %cmp192, label %if.then.194, label %if.end.195

if.then.194:                                      ; preds = %do.body.190
  br label %Error

if.end.195:                                       ; preds = %do.body.190
  br label %do.body.196

do.body.196:                                      ; preds = %if.end.195
  %164 = load %struct._longobject*, %struct._longobject** %z, align 8
  %165 = bitcast %struct._longobject* %164 to %struct._object*
  store %struct._object* %165, %struct._object** %_py_xdecref_tmp197, align 8
  %166 = load %struct._object*, %struct._object** %_py_xdecref_tmp197, align 8
  %cmp198 = icmp ne %struct._object* %166, null
  br i1 %cmp198, label %if.then.200, label %if.end.213

if.then.200:                                      ; preds = %do.body.196
  br label %do.body.201

do.body.201:                                      ; preds = %if.then.200
  %167 = load %struct._object*, %struct._object** %_py_xdecref_tmp197, align 8
  store %struct._object* %167, %struct._object** %_py_decref_tmp202, align 8
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp202, align 8
  %ob_refcnt203 = getelementptr inbounds %struct._object, %struct._object* %168, i32 0, i32 0
  %169 = load i64, i64* %ob_refcnt203, align 8
  %dec204 = add i64 %169, -1
  store i64 %dec204, i64* %ob_refcnt203, align 8
  %cmp205 = icmp ne i64 %dec204, 0
  br i1 %cmp205, label %if.then.207, label %if.else.208

if.then.207:                                      ; preds = %do.body.201
  br label %if.end.211

if.else.208:                                      ; preds = %do.body.201
  %170 = load %struct._object*, %struct._object** %_py_decref_tmp202, align 8
  %ob_type209 = getelementptr inbounds %struct._object, %struct._object* %170, i32 0, i32 1
  %171 = load %struct._typeobject*, %struct._typeobject** %ob_type209, align 8
  %tp_dealloc210 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %171, i32 0, i32 4
  %172 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc210, align 8
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp202, align 8
  call void %172(%struct._object* %173)
  br label %if.end.211

if.end.211:                                       ; preds = %if.else.208, %if.then.207
  br label %do.end.212

do.end.212:                                       ; preds = %if.end.211
  br label %if.end.213

if.end.213:                                       ; preds = %do.end.212, %do.body.196
  br label %do.end.214

do.end.214:                                       ; preds = %if.end.213
  %174 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %174, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %do.body.215

do.body.215:                                      ; preds = %do.end.214
  %175 = load %struct._longobject*, %struct._longobject** %c, align 8
  %cmp216 = icmp ne %struct._longobject* %175, null
  br i1 %cmp216, label %if.then.218, label %if.end.243

if.then.218:                                      ; preds = %do.body.215
  %176 = load %struct._longobject*, %struct._longobject** %z, align 8
  %177 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call219 = call i32 @l_divmod(%struct._longobject* %176, %struct._longobject* %177, %struct._longobject** null, %struct._longobject** %temp)
  %cmp220 = icmp slt i32 %call219, 0
  br i1 %cmp220, label %if.then.222, label %if.end.223

if.then.222:                                      ; preds = %if.then.218
  br label %Error

if.end.223:                                       ; preds = %if.then.218
  br label %do.body.224

do.body.224:                                      ; preds = %if.end.223
  %178 = load %struct._longobject*, %struct._longobject** %z, align 8
  %179 = bitcast %struct._longobject* %178 to %struct._object*
  store %struct._object* %179, %struct._object** %_py_xdecref_tmp225, align 8
  %180 = load %struct._object*, %struct._object** %_py_xdecref_tmp225, align 8
  %cmp226 = icmp ne %struct._object* %180, null
  br i1 %cmp226, label %if.then.228, label %if.end.241

if.then.228:                                      ; preds = %do.body.224
  br label %do.body.229

do.body.229:                                      ; preds = %if.then.228
  %181 = load %struct._object*, %struct._object** %_py_xdecref_tmp225, align 8
  store %struct._object* %181, %struct._object** %_py_decref_tmp230, align 8
  %182 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8
  %ob_refcnt231 = getelementptr inbounds %struct._object, %struct._object* %182, i32 0, i32 0
  %183 = load i64, i64* %ob_refcnt231, align 8
  %dec232 = add i64 %183, -1
  store i64 %dec232, i64* %ob_refcnt231, align 8
  %cmp233 = icmp ne i64 %dec232, 0
  br i1 %cmp233, label %if.then.235, label %if.else.236

if.then.235:                                      ; preds = %do.body.229
  br label %if.end.239

if.else.236:                                      ; preds = %do.body.229
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8
  %ob_type237 = getelementptr inbounds %struct._object, %struct._object* %184, i32 0, i32 1
  %185 = load %struct._typeobject*, %struct._typeobject** %ob_type237, align 8
  %tp_dealloc238 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %185, i32 0, i32 4
  %186 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc238, align 8
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8
  call void %186(%struct._object* %187)
  br label %if.end.239

if.end.239:                                       ; preds = %if.else.236, %if.then.235
  br label %do.end.240

do.end.240:                                       ; preds = %if.end.239
  br label %if.end.241

if.end.241:                                       ; preds = %do.end.240, %do.body.224
  br label %do.end.242

do.end.242:                                       ; preds = %if.end.241
  %188 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %188, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %if.end.243

if.end.243:                                       ; preds = %do.end.242, %do.body.215
  br label %do.end.244

do.end.244:                                       ; preds = %if.end.243
  br label %do.end.245

do.end.245:                                       ; preds = %do.end.244
  br label %if.end.246

if.end.246:                                       ; preds = %do.end.245, %do.end.186
  br label %for.inc

for.inc:                                          ; preds = %if.end.246
  %189 = load i64, i64* %j, align 8
  %shr = ashr i64 %189, 1
  store i64 %shr, i64* %j, align 8
  br label %for.cond.136

for.end:                                          ; preds = %for.cond.136
  br label %for.inc.247

for.inc.247:                                      ; preds = %for.end
  %190 = load i64, i64* %i, align 8
  %dec248 = add i64 %190, -1
  store i64 %dec248, i64* %i, align 8
  br label %for.cond

for.end.249:                                      ; preds = %for.cond
  br label %if.end.468

if.else.250:                                      ; preds = %if.end.128
  %191 = load %struct._longobject*, %struct._longobject** %z, align 8
  %192 = bitcast %struct._longobject* %191 to %struct._object*
  %ob_refcnt251 = getelementptr inbounds %struct._object, %struct._object* %192, i32 0, i32 0
  %193 = load i64, i64* %ob_refcnt251, align 8
  %inc252 = add i64 %193, 1
  store i64 %inc252, i64* %ob_refcnt251, align 8
  %194 = load %struct._longobject*, %struct._longobject** %z, align 8
  %arrayidx253 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 0
  store %struct._longobject* %194, %struct._longobject** %arrayidx253, align 8
  store i64 1, i64* %i, align 8
  br label %for.cond.254

for.cond.254:                                     ; preds = %for.inc.321, %if.else.250
  %195 = load i64, i64* %i, align 8
  %cmp255 = icmp slt i64 %195, 32
  br i1 %cmp255, label %for.body.257, label %for.end.323

for.body.257:                                     ; preds = %for.cond.254
  br label %do.body.258

do.body.258:                                      ; preds = %for.body.257
  %196 = load i64, i64* %i, align 8
  %sub259 = sub i64 %196, 1
  %arrayidx260 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %sub259
  %197 = load %struct._longobject*, %struct._longobject** %arrayidx260, align 8
  %198 = load %struct._longobject*, %struct._longobject** %a, align 8
  %call261 = call %struct._object* @long_mul(%struct._longobject* %197, %struct._longobject* %198)
  %199 = bitcast %struct._object* %call261 to %struct._longobject*
  store %struct._longobject* %199, %struct._longobject** %temp, align 8
  %200 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %cmp262 = icmp eq %struct._longobject* %200, null
  br i1 %cmp262, label %if.then.264, label %if.end.265

if.then.264:                                      ; preds = %do.body.258
  br label %Error

if.end.265:                                       ; preds = %do.body.258
  br label %do.body.266

do.body.266:                                      ; preds = %if.end.265
  %201 = load i64, i64* %i, align 8
  %arrayidx268 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %201
  %202 = load %struct._longobject*, %struct._longobject** %arrayidx268, align 8
  %203 = bitcast %struct._longobject* %202 to %struct._object*
  store %struct._object* %203, %struct._object** %_py_xdecref_tmp267, align 8
  %204 = load %struct._object*, %struct._object** %_py_xdecref_tmp267, align 8
  %cmp269 = icmp ne %struct._object* %204, null
  br i1 %cmp269, label %if.then.271, label %if.end.284

if.then.271:                                      ; preds = %do.body.266
  br label %do.body.272

do.body.272:                                      ; preds = %if.then.271
  %205 = load %struct._object*, %struct._object** %_py_xdecref_tmp267, align 8
  store %struct._object* %205, %struct._object** %_py_decref_tmp273, align 8
  %206 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8
  %ob_refcnt274 = getelementptr inbounds %struct._object, %struct._object* %206, i32 0, i32 0
  %207 = load i64, i64* %ob_refcnt274, align 8
  %dec275 = add i64 %207, -1
  store i64 %dec275, i64* %ob_refcnt274, align 8
  %cmp276 = icmp ne i64 %dec275, 0
  br i1 %cmp276, label %if.then.278, label %if.else.279

if.then.278:                                      ; preds = %do.body.272
  br label %if.end.282

if.else.279:                                      ; preds = %do.body.272
  %208 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8
  %ob_type280 = getelementptr inbounds %struct._object, %struct._object* %208, i32 0, i32 1
  %209 = load %struct._typeobject*, %struct._typeobject** %ob_type280, align 8
  %tp_dealloc281 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %209, i32 0, i32 4
  %210 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc281, align 8
  %211 = load %struct._object*, %struct._object** %_py_decref_tmp273, align 8
  call void %210(%struct._object* %211)
  br label %if.end.282

if.end.282:                                       ; preds = %if.else.279, %if.then.278
  br label %do.end.283

do.end.283:                                       ; preds = %if.end.282
  br label %if.end.284

if.end.284:                                       ; preds = %do.end.283, %do.body.266
  br label %do.end.285

do.end.285:                                       ; preds = %if.end.284
  %212 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %213 = load i64, i64* %i, align 8
  %arrayidx286 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %213
  store %struct._longobject* %212, %struct._longobject** %arrayidx286, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %do.body.287

do.body.287:                                      ; preds = %do.end.285
  %214 = load %struct._longobject*, %struct._longobject** %c, align 8
  %cmp288 = icmp ne %struct._longobject* %214, null
  br i1 %cmp288, label %if.then.290, label %if.end.318

if.then.290:                                      ; preds = %do.body.287
  %215 = load i64, i64* %i, align 8
  %arrayidx291 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %215
  %216 = load %struct._longobject*, %struct._longobject** %arrayidx291, align 8
  %217 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call292 = call i32 @l_divmod(%struct._longobject* %216, %struct._longobject* %217, %struct._longobject** null, %struct._longobject** %temp)
  %cmp293 = icmp slt i32 %call292, 0
  br i1 %cmp293, label %if.then.295, label %if.end.296

if.then.295:                                      ; preds = %if.then.290
  br label %Error

if.end.296:                                       ; preds = %if.then.290
  br label %do.body.297

do.body.297:                                      ; preds = %if.end.296
  %218 = load i64, i64* %i, align 8
  %arrayidx299 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %218
  %219 = load %struct._longobject*, %struct._longobject** %arrayidx299, align 8
  %220 = bitcast %struct._longobject* %219 to %struct._object*
  store %struct._object* %220, %struct._object** %_py_xdecref_tmp298, align 8
  %221 = load %struct._object*, %struct._object** %_py_xdecref_tmp298, align 8
  %cmp300 = icmp ne %struct._object* %221, null
  br i1 %cmp300, label %if.then.302, label %if.end.315

if.then.302:                                      ; preds = %do.body.297
  br label %do.body.303

do.body.303:                                      ; preds = %if.then.302
  %222 = load %struct._object*, %struct._object** %_py_xdecref_tmp298, align 8
  store %struct._object* %222, %struct._object** %_py_decref_tmp304, align 8
  %223 = load %struct._object*, %struct._object** %_py_decref_tmp304, align 8
  %ob_refcnt305 = getelementptr inbounds %struct._object, %struct._object* %223, i32 0, i32 0
  %224 = load i64, i64* %ob_refcnt305, align 8
  %dec306 = add i64 %224, -1
  store i64 %dec306, i64* %ob_refcnt305, align 8
  %cmp307 = icmp ne i64 %dec306, 0
  br i1 %cmp307, label %if.then.309, label %if.else.310

if.then.309:                                      ; preds = %do.body.303
  br label %if.end.313

if.else.310:                                      ; preds = %do.body.303
  %225 = load %struct._object*, %struct._object** %_py_decref_tmp304, align 8
  %ob_type311 = getelementptr inbounds %struct._object, %struct._object* %225, i32 0, i32 1
  %226 = load %struct._typeobject*, %struct._typeobject** %ob_type311, align 8
  %tp_dealloc312 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %226, i32 0, i32 4
  %227 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc312, align 8
  %228 = load %struct._object*, %struct._object** %_py_decref_tmp304, align 8
  call void %227(%struct._object* %228)
  br label %if.end.313

if.end.313:                                       ; preds = %if.else.310, %if.then.309
  br label %do.end.314

do.end.314:                                       ; preds = %if.end.313
  br label %if.end.315

if.end.315:                                       ; preds = %do.end.314, %do.body.297
  br label %do.end.316

do.end.316:                                       ; preds = %if.end.315
  %229 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %230 = load i64, i64* %i, align 8
  %arrayidx317 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %230
  store %struct._longobject* %229, %struct._longobject** %arrayidx317, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %if.end.318

if.end.318:                                       ; preds = %do.end.316, %do.body.287
  br label %do.end.319

do.end.319:                                       ; preds = %if.end.318
  br label %do.end.320

do.end.320:                                       ; preds = %do.end.319
  br label %for.inc.321

for.inc.321:                                      ; preds = %do.end.320
  %231 = load i64, i64* %i, align 8
  %inc322 = add i64 %231, 1
  store i64 %inc322, i64* %i, align 8
  br label %for.cond.254

for.end.323:                                      ; preds = %for.cond.254
  %232 = load %struct._longobject*, %struct._longobject** %b, align 8
  %233 = bitcast %struct._longobject* %232 to %struct.PyVarObject*
  %ob_size324 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %233, i32 0, i32 1
  %234 = load i64, i64* %ob_size324, align 8
  %sub325 = sub i64 %234, 1
  store i64 %sub325, i64* %i, align 8
  br label %for.cond.326

for.cond.326:                                     ; preds = %for.inc.465, %for.end.323
  %235 = load i64, i64* %i, align 8
  %cmp327 = icmp sge i64 %235, 0
  br i1 %cmp327, label %for.body.329, label %for.end.467

for.body.329:                                     ; preds = %for.cond.326
  %236 = load i64, i64* %i, align 8
  %237 = load %struct._longobject*, %struct._longobject** %b, align 8
  %ob_digit331 = getelementptr inbounds %struct._longobject, %struct._longobject* %237, i32 0, i32 1
  %arrayidx332 = getelementptr [1 x i32], [1 x i32]* %ob_digit331, i32 0, i64 %236
  %238 = load i32, i32* %arrayidx332, align 4
  store i32 %238, i32* %bi330, align 4
  store i64 25, i64* %j, align 8
  br label %for.cond.333

for.cond.333:                                     ; preds = %for.inc.462, %for.body.329
  %239 = load i64, i64* %j, align 8
  %cmp334 = icmp sge i64 %239, 0
  br i1 %cmp334, label %for.body.336, label %for.end.464

for.body.336:                                     ; preds = %for.cond.333
  %240 = load i32, i32* %bi330, align 4
  %241 = load i64, i64* %j, align 8
  %sh_prom = trunc i64 %241 to i32
  %shr337 = lshr i32 %240, %sh_prom
  %and338 = and i32 %shr337, 31
  store i32 %and338, i32* %index, align 4
  store i64 0, i64* %k, align 8
  br label %for.cond.339

for.cond.339:                                     ; preds = %for.inc.399, %for.body.336
  %242 = load i64, i64* %k, align 8
  %cmp340 = icmp slt i64 %242, 5
  br i1 %cmp340, label %for.body.342, label %for.end.401

for.body.342:                                     ; preds = %for.cond.339
  br label %do.body.343

do.body.343:                                      ; preds = %for.body.342
  %243 = load %struct._longobject*, %struct._longobject** %z, align 8
  %244 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call344 = call %struct._object* @long_mul(%struct._longobject* %243, %struct._longobject* %244)
  %245 = bitcast %struct._object* %call344 to %struct._longobject*
  store %struct._longobject* %245, %struct._longobject** %temp, align 8
  %246 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %cmp345 = icmp eq %struct._longobject* %246, null
  br i1 %cmp345, label %if.then.347, label %if.end.348

if.then.347:                                      ; preds = %do.body.343
  br label %Error

if.end.348:                                       ; preds = %do.body.343
  br label %do.body.349

do.body.349:                                      ; preds = %if.end.348
  %247 = load %struct._longobject*, %struct._longobject** %z, align 8
  %248 = bitcast %struct._longobject* %247 to %struct._object*
  store %struct._object* %248, %struct._object** %_py_xdecref_tmp350, align 8
  %249 = load %struct._object*, %struct._object** %_py_xdecref_tmp350, align 8
  %cmp351 = icmp ne %struct._object* %249, null
  br i1 %cmp351, label %if.then.353, label %if.end.366

if.then.353:                                      ; preds = %do.body.349
  br label %do.body.354

do.body.354:                                      ; preds = %if.then.353
  %250 = load %struct._object*, %struct._object** %_py_xdecref_tmp350, align 8
  store %struct._object* %250, %struct._object** %_py_decref_tmp355, align 8
  %251 = load %struct._object*, %struct._object** %_py_decref_tmp355, align 8
  %ob_refcnt356 = getelementptr inbounds %struct._object, %struct._object* %251, i32 0, i32 0
  %252 = load i64, i64* %ob_refcnt356, align 8
  %dec357 = add i64 %252, -1
  store i64 %dec357, i64* %ob_refcnt356, align 8
  %cmp358 = icmp ne i64 %dec357, 0
  br i1 %cmp358, label %if.then.360, label %if.else.361

if.then.360:                                      ; preds = %do.body.354
  br label %if.end.364

if.else.361:                                      ; preds = %do.body.354
  %253 = load %struct._object*, %struct._object** %_py_decref_tmp355, align 8
  %ob_type362 = getelementptr inbounds %struct._object, %struct._object* %253, i32 0, i32 1
  %254 = load %struct._typeobject*, %struct._typeobject** %ob_type362, align 8
  %tp_dealloc363 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %254, i32 0, i32 4
  %255 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc363, align 8
  %256 = load %struct._object*, %struct._object** %_py_decref_tmp355, align 8
  call void %255(%struct._object* %256)
  br label %if.end.364

if.end.364:                                       ; preds = %if.else.361, %if.then.360
  br label %do.end.365

do.end.365:                                       ; preds = %if.end.364
  br label %if.end.366

if.end.366:                                       ; preds = %do.end.365, %do.body.349
  br label %do.end.367

do.end.367:                                       ; preds = %if.end.366
  %257 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %257, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %do.body.368

do.body.368:                                      ; preds = %do.end.367
  %258 = load %struct._longobject*, %struct._longobject** %c, align 8
  %cmp369 = icmp ne %struct._longobject* %258, null
  br i1 %cmp369, label %if.then.371, label %if.end.396

if.then.371:                                      ; preds = %do.body.368
  %259 = load %struct._longobject*, %struct._longobject** %z, align 8
  %260 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call372 = call i32 @l_divmod(%struct._longobject* %259, %struct._longobject* %260, %struct._longobject** null, %struct._longobject** %temp)
  %cmp373 = icmp slt i32 %call372, 0
  br i1 %cmp373, label %if.then.375, label %if.end.376

if.then.375:                                      ; preds = %if.then.371
  br label %Error

if.end.376:                                       ; preds = %if.then.371
  br label %do.body.377

do.body.377:                                      ; preds = %if.end.376
  %261 = load %struct._longobject*, %struct._longobject** %z, align 8
  %262 = bitcast %struct._longobject* %261 to %struct._object*
  store %struct._object* %262, %struct._object** %_py_xdecref_tmp378, align 8
  %263 = load %struct._object*, %struct._object** %_py_xdecref_tmp378, align 8
  %cmp379 = icmp ne %struct._object* %263, null
  br i1 %cmp379, label %if.then.381, label %if.end.394

if.then.381:                                      ; preds = %do.body.377
  br label %do.body.382

do.body.382:                                      ; preds = %if.then.381
  %264 = load %struct._object*, %struct._object** %_py_xdecref_tmp378, align 8
  store %struct._object* %264, %struct._object** %_py_decref_tmp383, align 8
  %265 = load %struct._object*, %struct._object** %_py_decref_tmp383, align 8
  %ob_refcnt384 = getelementptr inbounds %struct._object, %struct._object* %265, i32 0, i32 0
  %266 = load i64, i64* %ob_refcnt384, align 8
  %dec385 = add i64 %266, -1
  store i64 %dec385, i64* %ob_refcnt384, align 8
  %cmp386 = icmp ne i64 %dec385, 0
  br i1 %cmp386, label %if.then.388, label %if.else.389

if.then.388:                                      ; preds = %do.body.382
  br label %if.end.392

if.else.389:                                      ; preds = %do.body.382
  %267 = load %struct._object*, %struct._object** %_py_decref_tmp383, align 8
  %ob_type390 = getelementptr inbounds %struct._object, %struct._object* %267, i32 0, i32 1
  %268 = load %struct._typeobject*, %struct._typeobject** %ob_type390, align 8
  %tp_dealloc391 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %268, i32 0, i32 4
  %269 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc391, align 8
  %270 = load %struct._object*, %struct._object** %_py_decref_tmp383, align 8
  call void %269(%struct._object* %270)
  br label %if.end.392

if.end.392:                                       ; preds = %if.else.389, %if.then.388
  br label %do.end.393

do.end.393:                                       ; preds = %if.end.392
  br label %if.end.394

if.end.394:                                       ; preds = %do.end.393, %do.body.377
  br label %do.end.395

do.end.395:                                       ; preds = %if.end.394
  %271 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %271, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %if.end.396

if.end.396:                                       ; preds = %do.end.395, %do.body.368
  br label %do.end.397

do.end.397:                                       ; preds = %if.end.396
  br label %do.end.398

do.end.398:                                       ; preds = %do.end.397
  br label %for.inc.399

for.inc.399:                                      ; preds = %do.end.398
  %272 = load i64, i64* %k, align 8
  %inc400 = add i64 %272, 1
  store i64 %inc400, i64* %k, align 8
  br label %for.cond.339

for.end.401:                                      ; preds = %for.cond.339
  %273 = load i32, i32* %index, align 4
  %tobool402 = icmp ne i32 %273, 0
  br i1 %tobool402, label %if.then.403, label %if.end.461

if.then.403:                                      ; preds = %for.end.401
  br label %do.body.404

do.body.404:                                      ; preds = %if.then.403
  %274 = load %struct._longobject*, %struct._longobject** %z, align 8
  %275 = load i32, i32* %index, align 4
  %idxprom = sext i32 %275 to i64
  %arrayidx405 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %idxprom
  %276 = load %struct._longobject*, %struct._longobject** %arrayidx405, align 8
  %call406 = call %struct._object* @long_mul(%struct._longobject* %274, %struct._longobject* %276)
  %277 = bitcast %struct._object* %call406 to %struct._longobject*
  store %struct._longobject* %277, %struct._longobject** %temp, align 8
  %278 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %cmp407 = icmp eq %struct._longobject* %278, null
  br i1 %cmp407, label %if.then.409, label %if.end.410

if.then.409:                                      ; preds = %do.body.404
  br label %Error

if.end.410:                                       ; preds = %do.body.404
  br label %do.body.411

do.body.411:                                      ; preds = %if.end.410
  %279 = load %struct._longobject*, %struct._longobject** %z, align 8
  %280 = bitcast %struct._longobject* %279 to %struct._object*
  store %struct._object* %280, %struct._object** %_py_xdecref_tmp412, align 8
  %281 = load %struct._object*, %struct._object** %_py_xdecref_tmp412, align 8
  %cmp413 = icmp ne %struct._object* %281, null
  br i1 %cmp413, label %if.then.415, label %if.end.428

if.then.415:                                      ; preds = %do.body.411
  br label %do.body.416

do.body.416:                                      ; preds = %if.then.415
  %282 = load %struct._object*, %struct._object** %_py_xdecref_tmp412, align 8
  store %struct._object* %282, %struct._object** %_py_decref_tmp417, align 8
  %283 = load %struct._object*, %struct._object** %_py_decref_tmp417, align 8
  %ob_refcnt418 = getelementptr inbounds %struct._object, %struct._object* %283, i32 0, i32 0
  %284 = load i64, i64* %ob_refcnt418, align 8
  %dec419 = add i64 %284, -1
  store i64 %dec419, i64* %ob_refcnt418, align 8
  %cmp420 = icmp ne i64 %dec419, 0
  br i1 %cmp420, label %if.then.422, label %if.else.423

if.then.422:                                      ; preds = %do.body.416
  br label %if.end.426

if.else.423:                                      ; preds = %do.body.416
  %285 = load %struct._object*, %struct._object** %_py_decref_tmp417, align 8
  %ob_type424 = getelementptr inbounds %struct._object, %struct._object* %285, i32 0, i32 1
  %286 = load %struct._typeobject*, %struct._typeobject** %ob_type424, align 8
  %tp_dealloc425 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %286, i32 0, i32 4
  %287 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc425, align 8
  %288 = load %struct._object*, %struct._object** %_py_decref_tmp417, align 8
  call void %287(%struct._object* %288)
  br label %if.end.426

if.end.426:                                       ; preds = %if.else.423, %if.then.422
  br label %do.end.427

do.end.427:                                       ; preds = %if.end.426
  br label %if.end.428

if.end.428:                                       ; preds = %do.end.427, %do.body.411
  br label %do.end.429

do.end.429:                                       ; preds = %if.end.428
  %289 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %289, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %do.body.430

do.body.430:                                      ; preds = %do.end.429
  %290 = load %struct._longobject*, %struct._longobject** %c, align 8
  %cmp431 = icmp ne %struct._longobject* %290, null
  br i1 %cmp431, label %if.then.433, label %if.end.458

if.then.433:                                      ; preds = %do.body.430
  %291 = load %struct._longobject*, %struct._longobject** %z, align 8
  %292 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call434 = call i32 @l_divmod(%struct._longobject* %291, %struct._longobject* %292, %struct._longobject** null, %struct._longobject** %temp)
  %cmp435 = icmp slt i32 %call434, 0
  br i1 %cmp435, label %if.then.437, label %if.end.438

if.then.437:                                      ; preds = %if.then.433
  br label %Error

if.end.438:                                       ; preds = %if.then.433
  br label %do.body.439

do.body.439:                                      ; preds = %if.end.438
  %293 = load %struct._longobject*, %struct._longobject** %z, align 8
  %294 = bitcast %struct._longobject* %293 to %struct._object*
  store %struct._object* %294, %struct._object** %_py_xdecref_tmp440, align 8
  %295 = load %struct._object*, %struct._object** %_py_xdecref_tmp440, align 8
  %cmp441 = icmp ne %struct._object* %295, null
  br i1 %cmp441, label %if.then.443, label %if.end.456

if.then.443:                                      ; preds = %do.body.439
  br label %do.body.444

do.body.444:                                      ; preds = %if.then.443
  %296 = load %struct._object*, %struct._object** %_py_xdecref_tmp440, align 8
  store %struct._object* %296, %struct._object** %_py_decref_tmp445, align 8
  %297 = load %struct._object*, %struct._object** %_py_decref_tmp445, align 8
  %ob_refcnt446 = getelementptr inbounds %struct._object, %struct._object* %297, i32 0, i32 0
  %298 = load i64, i64* %ob_refcnt446, align 8
  %dec447 = add i64 %298, -1
  store i64 %dec447, i64* %ob_refcnt446, align 8
  %cmp448 = icmp ne i64 %dec447, 0
  br i1 %cmp448, label %if.then.450, label %if.else.451

if.then.450:                                      ; preds = %do.body.444
  br label %if.end.454

if.else.451:                                      ; preds = %do.body.444
  %299 = load %struct._object*, %struct._object** %_py_decref_tmp445, align 8
  %ob_type452 = getelementptr inbounds %struct._object, %struct._object* %299, i32 0, i32 1
  %300 = load %struct._typeobject*, %struct._typeobject** %ob_type452, align 8
  %tp_dealloc453 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %300, i32 0, i32 4
  %301 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc453, align 8
  %302 = load %struct._object*, %struct._object** %_py_decref_tmp445, align 8
  call void %301(%struct._object* %302)
  br label %if.end.454

if.end.454:                                       ; preds = %if.else.451, %if.then.450
  br label %do.end.455

do.end.455:                                       ; preds = %if.end.454
  br label %if.end.456

if.end.456:                                       ; preds = %do.end.455, %do.body.439
  br label %do.end.457

do.end.457:                                       ; preds = %if.end.456
  %303 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %303, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %if.end.458

if.end.458:                                       ; preds = %do.end.457, %do.body.430
  br label %do.end.459

do.end.459:                                       ; preds = %if.end.458
  br label %do.end.460

do.end.460:                                       ; preds = %do.end.459
  br label %if.end.461

if.end.461:                                       ; preds = %do.end.460, %for.end.401
  br label %for.inc.462

for.inc.462:                                      ; preds = %if.end.461
  %304 = load i64, i64* %j, align 8
  %sub463 = sub i64 %304, 5
  store i64 %sub463, i64* %j, align 8
  br label %for.cond.333

for.end.464:                                      ; preds = %for.cond.333
  br label %for.inc.465

for.inc.465:                                      ; preds = %for.end.464
  %305 = load i64, i64* %i, align 8
  %dec466 = add i64 %305, -1
  store i64 %dec466, i64* %i, align 8
  br label %for.cond.326

for.end.467:                                      ; preds = %for.cond.326
  br label %if.end.468

if.end.468:                                       ; preds = %for.end.467, %for.end.249
  %306 = load i32, i32* %negativeOutput, align 4
  %tobool469 = icmp ne i32 %306, 0
  br i1 %tobool469, label %land.lhs.true.470, label %if.end.492

land.lhs.true.470:                                ; preds = %if.end.468
  %307 = load %struct._longobject*, %struct._longobject** %z, align 8
  %308 = bitcast %struct._longobject* %307 to %struct.PyVarObject*
  %ob_size471 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %308, i32 0, i32 1
  %309 = load i64, i64* %ob_size471, align 8
  %cmp472 = icmp ne i64 %309, 0
  br i1 %cmp472, label %if.then.474, label %if.end.492

if.then.474:                                      ; preds = %land.lhs.true.470
  %310 = load %struct._longobject*, %struct._longobject** %z, align 8
  %311 = load %struct._longobject*, %struct._longobject** %c, align 8
  %call475 = call %struct._object* @long_sub(%struct._longobject* %310, %struct._longobject* %311)
  %312 = bitcast %struct._object* %call475 to %struct._longobject*
  store %struct._longobject* %312, %struct._longobject** %temp, align 8
  %313 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %cmp476 = icmp eq %struct._longobject* %313, null
  br i1 %cmp476, label %if.then.478, label %if.end.479

if.then.478:                                      ; preds = %if.then.474
  br label %Error

if.end.479:                                       ; preds = %if.then.474
  br label %do.body.480

do.body.480:                                      ; preds = %if.end.479
  %314 = load %struct._longobject*, %struct._longobject** %z, align 8
  %315 = bitcast %struct._longobject* %314 to %struct._object*
  store %struct._object* %315, %struct._object** %_py_decref_tmp481, align 8
  %316 = load %struct._object*, %struct._object** %_py_decref_tmp481, align 8
  %ob_refcnt482 = getelementptr inbounds %struct._object, %struct._object* %316, i32 0, i32 0
  %317 = load i64, i64* %ob_refcnt482, align 8
  %dec483 = add i64 %317, -1
  store i64 %dec483, i64* %ob_refcnt482, align 8
  %cmp484 = icmp ne i64 %dec483, 0
  br i1 %cmp484, label %if.then.486, label %if.else.487

if.then.486:                                      ; preds = %do.body.480
  br label %if.end.490

if.else.487:                                      ; preds = %do.body.480
  %318 = load %struct._object*, %struct._object** %_py_decref_tmp481, align 8
  %ob_type488 = getelementptr inbounds %struct._object, %struct._object* %318, i32 0, i32 1
  %319 = load %struct._typeobject*, %struct._typeobject** %ob_type488, align 8
  %tp_dealloc489 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %319, i32 0, i32 4
  %320 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc489, align 8
  %321 = load %struct._object*, %struct._object** %_py_decref_tmp481, align 8
  call void %320(%struct._object* %321)
  br label %if.end.490

if.end.490:                                       ; preds = %if.else.487, %if.then.486
  br label %do.end.491

do.end.491:                                       ; preds = %if.end.490
  %322 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %322, %struct._longobject** %z, align 8
  store %struct._longobject* null, %struct._longobject** %temp, align 8
  br label %if.end.492

if.end.492:                                       ; preds = %do.end.491, %land.lhs.true.470, %if.end.468
  br label %Done

Error:                                            ; preds = %if.then.478, %if.then.437, %if.then.409, %if.then.375, %if.then.347, %if.then.295, %if.then.264, %if.then.222, %if.then.194, %if.then.165, %if.then.142, %if.then.127, %if.then.110, %if.then.92, %if.then.78, %if.then.71, %if.then.42
  br label %do.body.493

do.body.493:                                      ; preds = %Error
  %323 = load %struct._longobject*, %struct._longobject** %z, align 8
  %324 = bitcast %struct._longobject* %323 to %struct._object*
  store %struct._object* %324, %struct._object** %_py_tmp, align 8
  %325 = load %struct._object*, %struct._object** %_py_tmp, align 8
  %cmp494 = icmp ne %struct._object* %325, null
  br i1 %cmp494, label %if.then.496, label %if.end.509

if.then.496:                                      ; preds = %do.body.493
  store %struct._longobject* null, %struct._longobject** %z, align 8
  br label %do.body.497

do.body.497:                                      ; preds = %if.then.496
  %326 = load %struct._object*, %struct._object** %_py_tmp, align 8
  store %struct._object* %326, %struct._object** %_py_decref_tmp498, align 8
  %327 = load %struct._object*, %struct._object** %_py_decref_tmp498, align 8
  %ob_refcnt499 = getelementptr inbounds %struct._object, %struct._object* %327, i32 0, i32 0
  %328 = load i64, i64* %ob_refcnt499, align 8
  %dec500 = add i64 %328, -1
  store i64 %dec500, i64* %ob_refcnt499, align 8
  %cmp501 = icmp ne i64 %dec500, 0
  br i1 %cmp501, label %if.then.503, label %if.else.504

if.then.503:                                      ; preds = %do.body.497
  br label %if.end.507

if.else.504:                                      ; preds = %do.body.497
  %329 = load %struct._object*, %struct._object** %_py_decref_tmp498, align 8
  %ob_type505 = getelementptr inbounds %struct._object, %struct._object* %329, i32 0, i32 1
  %330 = load %struct._typeobject*, %struct._typeobject** %ob_type505, align 8
  %tp_dealloc506 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %330, i32 0, i32 4
  %331 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc506, align 8
  %332 = load %struct._object*, %struct._object** %_py_decref_tmp498, align 8
  call void %331(%struct._object* %332)
  br label %if.end.507

if.end.507:                                       ; preds = %if.else.504, %if.then.503
  br label %do.end.508

do.end.508:                                       ; preds = %if.end.507
  br label %if.end.509

if.end.509:                                       ; preds = %do.end.508, %do.body.493
  br label %do.end.510

do.end.510:                                       ; preds = %if.end.509
  br label %Done

Done:                                             ; preds = %do.end.510, %if.end.492, %if.then.98
  %333 = load %struct._longobject*, %struct._longobject** %b, align 8
  %334 = bitcast %struct._longobject* %333 to %struct.PyVarObject*
  %ob_size511 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %334, i32 0, i32 1
  %335 = load i64, i64* %ob_size511, align 8
  %cmp512 = icmp sgt i64 %335, 8
  br i1 %cmp512, label %if.then.514, label %if.end.542

if.then.514:                                      ; preds = %Done
  store i64 0, i64* %i, align 8
  br label %for.cond.515

for.cond.515:                                     ; preds = %for.inc.539, %if.then.514
  %336 = load i64, i64* %i, align 8
  %cmp516 = icmp slt i64 %336, 32
  br i1 %cmp516, label %for.body.518, label %for.end.541

for.body.518:                                     ; preds = %for.cond.515
  br label %do.body.519

do.body.519:                                      ; preds = %for.body.518
  %337 = load i64, i64* %i, align 8
  %arrayidx521 = getelementptr [32 x %struct._longobject*], [32 x %struct._longobject*]* %table, i32 0, i64 %337
  %338 = load %struct._longobject*, %struct._longobject** %arrayidx521, align 8
  %339 = bitcast %struct._longobject* %338 to %struct._object*
  store %struct._object* %339, %struct._object** %_py_xdecref_tmp520, align 8
  %340 = load %struct._object*, %struct._object** %_py_xdecref_tmp520, align 8
  %cmp522 = icmp ne %struct._object* %340, null
  br i1 %cmp522, label %if.then.524, label %if.end.537

if.then.524:                                      ; preds = %do.body.519
  br label %do.body.525

do.body.525:                                      ; preds = %if.then.524
  %341 = load %struct._object*, %struct._object** %_py_xdecref_tmp520, align 8
  store %struct._object* %341, %struct._object** %_py_decref_tmp526, align 8
  %342 = load %struct._object*, %struct._object** %_py_decref_tmp526, align 8
  %ob_refcnt527 = getelementptr inbounds %struct._object, %struct._object* %342, i32 0, i32 0
  %343 = load i64, i64* %ob_refcnt527, align 8
  %dec528 = add i64 %343, -1
  store i64 %dec528, i64* %ob_refcnt527, align 8
  %cmp529 = icmp ne i64 %dec528, 0
  br i1 %cmp529, label %if.then.531, label %if.else.532

if.then.531:                                      ; preds = %do.body.525
  br label %if.end.535

if.else.532:                                      ; preds = %do.body.525
  %344 = load %struct._object*, %struct._object** %_py_decref_tmp526, align 8
  %ob_type533 = getelementptr inbounds %struct._object, %struct._object* %344, i32 0, i32 1
  %345 = load %struct._typeobject*, %struct._typeobject** %ob_type533, align 8
  %tp_dealloc534 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %345, i32 0, i32 4
  %346 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc534, align 8
  %347 = load %struct._object*, %struct._object** %_py_decref_tmp526, align 8
  call void %346(%struct._object* %347)
  br label %if.end.535

if.end.535:                                       ; preds = %if.else.532, %if.then.531
  br label %do.end.536

do.end.536:                                       ; preds = %if.end.535
  br label %if.end.537

if.end.537:                                       ; preds = %do.end.536, %do.body.519
  br label %do.end.538

do.end.538:                                       ; preds = %if.end.537
  br label %for.inc.539

for.inc.539:                                      ; preds = %do.end.538
  %348 = load i64, i64* %i, align 8
  %inc540 = add i64 %348, 1
  store i64 %inc540, i64* %i, align 8
  br label %for.cond.515

for.end.541:                                      ; preds = %for.cond.515
  br label %if.end.542

if.end.542:                                       ; preds = %for.end.541, %Done
  br label %do.body.543

do.body.543:                                      ; preds = %if.end.542
  %349 = load %struct._longobject*, %struct._longobject** %a, align 8
  %350 = bitcast %struct._longobject* %349 to %struct._object*
  store %struct._object* %350, %struct._object** %_py_decref_tmp544, align 8
  %351 = load %struct._object*, %struct._object** %_py_decref_tmp544, align 8
  %ob_refcnt545 = getelementptr inbounds %struct._object, %struct._object* %351, i32 0, i32 0
  %352 = load i64, i64* %ob_refcnt545, align 8
  %dec546 = add i64 %352, -1
  store i64 %dec546, i64* %ob_refcnt545, align 8
  %cmp547 = icmp ne i64 %dec546, 0
  br i1 %cmp547, label %if.then.549, label %if.else.550

if.then.549:                                      ; preds = %do.body.543
  br label %if.end.553

if.else.550:                                      ; preds = %do.body.543
  %353 = load %struct._object*, %struct._object** %_py_decref_tmp544, align 8
  %ob_type551 = getelementptr inbounds %struct._object, %struct._object* %353, i32 0, i32 1
  %354 = load %struct._typeobject*, %struct._typeobject** %ob_type551, align 8
  %tp_dealloc552 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %354, i32 0, i32 4
  %355 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc552, align 8
  %356 = load %struct._object*, %struct._object** %_py_decref_tmp544, align 8
  call void %355(%struct._object* %356)
  br label %if.end.553

if.end.553:                                       ; preds = %if.else.550, %if.then.549
  br label %do.end.554

do.end.554:                                       ; preds = %if.end.553
  br label %do.body.555

do.body.555:                                      ; preds = %do.end.554
  %357 = load %struct._longobject*, %struct._longobject** %b, align 8
  %358 = bitcast %struct._longobject* %357 to %struct._object*
  store %struct._object* %358, %struct._object** %_py_decref_tmp556, align 8
  %359 = load %struct._object*, %struct._object** %_py_decref_tmp556, align 8
  %ob_refcnt557 = getelementptr inbounds %struct._object, %struct._object* %359, i32 0, i32 0
  %360 = load i64, i64* %ob_refcnt557, align 8
  %dec558 = add i64 %360, -1
  store i64 %dec558, i64* %ob_refcnt557, align 8
  %cmp559 = icmp ne i64 %dec558, 0
  br i1 %cmp559, label %if.then.561, label %if.else.562

if.then.561:                                      ; preds = %do.body.555
  br label %if.end.565

if.else.562:                                      ; preds = %do.body.555
  %361 = load %struct._object*, %struct._object** %_py_decref_tmp556, align 8
  %ob_type563 = getelementptr inbounds %struct._object, %struct._object* %361, i32 0, i32 1
  %362 = load %struct._typeobject*, %struct._typeobject** %ob_type563, align 8
  %tp_dealloc564 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %362, i32 0, i32 4
  %363 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc564, align 8
  %364 = load %struct._object*, %struct._object** %_py_decref_tmp556, align 8
  call void %363(%struct._object* %364)
  br label %if.end.565

if.end.565:                                       ; preds = %if.else.562, %if.then.561
  br label %do.end.566

do.end.566:                                       ; preds = %if.end.565
  br label %do.body.567

do.body.567:                                      ; preds = %do.end.566
  %365 = load %struct._longobject*, %struct._longobject** %c, align 8
  %366 = bitcast %struct._longobject* %365 to %struct._object*
  store %struct._object* %366, %struct._object** %_py_xdecref_tmp568, align 8
  %367 = load %struct._object*, %struct._object** %_py_xdecref_tmp568, align 8
  %cmp569 = icmp ne %struct._object* %367, null
  br i1 %cmp569, label %if.then.571, label %if.end.584

if.then.571:                                      ; preds = %do.body.567
  br label %do.body.572

do.body.572:                                      ; preds = %if.then.571
  %368 = load %struct._object*, %struct._object** %_py_xdecref_tmp568, align 8
  store %struct._object* %368, %struct._object** %_py_decref_tmp573, align 8
  %369 = load %struct._object*, %struct._object** %_py_decref_tmp573, align 8
  %ob_refcnt574 = getelementptr inbounds %struct._object, %struct._object* %369, i32 0, i32 0
  %370 = load i64, i64* %ob_refcnt574, align 8
  %dec575 = add i64 %370, -1
  store i64 %dec575, i64* %ob_refcnt574, align 8
  %cmp576 = icmp ne i64 %dec575, 0
  br i1 %cmp576, label %if.then.578, label %if.else.579

if.then.578:                                      ; preds = %do.body.572
  br label %if.end.582

if.else.579:                                      ; preds = %do.body.572
  %371 = load %struct._object*, %struct._object** %_py_decref_tmp573, align 8
  %ob_type580 = getelementptr inbounds %struct._object, %struct._object* %371, i32 0, i32 1
  %372 = load %struct._typeobject*, %struct._typeobject** %ob_type580, align 8
  %tp_dealloc581 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %372, i32 0, i32 4
  %373 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc581, align 8
  %374 = load %struct._object*, %struct._object** %_py_decref_tmp573, align 8
  call void %373(%struct._object* %374)
  br label %if.end.582

if.end.582:                                       ; preds = %if.else.579, %if.then.578
  br label %do.end.583

do.end.583:                                       ; preds = %if.end.582
  br label %if.end.584

if.end.584:                                       ; preds = %do.end.583, %do.body.567
  br label %do.end.585

do.end.585:                                       ; preds = %if.end.584
  br label %do.body.586

do.body.586:                                      ; preds = %do.end.585
  %375 = load %struct._longobject*, %struct._longobject** %temp, align 8
  %376 = bitcast %struct._longobject* %375 to %struct._object*
  store %struct._object* %376, %struct._object** %_py_xdecref_tmp587, align 8
  %377 = load %struct._object*, %struct._object** %_py_xdecref_tmp587, align 8
  %cmp588 = icmp ne %struct._object* %377, null
  br i1 %cmp588, label %if.then.590, label %if.end.603

if.then.590:                                      ; preds = %do.body.586
  br label %do.body.591

do.body.591:                                      ; preds = %if.then.590
  %378 = load %struct._object*, %struct._object** %_py_xdecref_tmp587, align 8
  store %struct._object* %378, %struct._object** %_py_decref_tmp592, align 8
  %379 = load %struct._object*, %struct._object** %_py_decref_tmp592, align 8
  %ob_refcnt593 = getelementptr inbounds %struct._object, %struct._object* %379, i32 0, i32 0
  %380 = load i64, i64* %ob_refcnt593, align 8
  %dec594 = add i64 %380, -1
  store i64 %dec594, i64* %ob_refcnt593, align 8
  %cmp595 = icmp ne i64 %dec594, 0
  br i1 %cmp595, label %if.then.597, label %if.else.598

if.then.597:                                      ; preds = %do.body.591
  br label %if.end.601

if.else.598:                                      ; preds = %do.body.591
  %381 = load %struct._object*, %struct._object** %_py_decref_tmp592, align 8
  %ob_type599 = getelementptr inbounds %struct._object, %struct._object* %381, i32 0, i32 1
  %382 = load %struct._typeobject*, %struct._typeobject** %ob_type599, align 8
  %tp_dealloc600 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %382, i32 0, i32 4
  %383 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc600, align 8
  %384 = load %struct._object*, %struct._object** %_py_decref_tmp592, align 8
  call void %383(%struct._object* %384)
  br label %if.end.601

if.end.601:                                       ; preds = %if.else.598, %if.then.597
  br label %do.end.602

do.end.602:                                       ; preds = %if.end.601
  br label %if.end.603

if.end.603:                                       ; preds = %do.end.602, %do.body.586
  br label %do.end.604

do.end.604:                                       ; preds = %if.end.603
  %385 = load %struct._longobject*, %struct._longobject** %z, align 8
  %386 = bitcast %struct._longobject* %385 to %struct._object*
  store %struct._object* %386, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.604, %do.end.65, %do.end.36, %if.then
  %387 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %387
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_long(%struct._object* %v) #0 {
entry:
  %v.addr = alloca %struct._object*, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8
  %0 = load %struct._object*, %struct._object** %v.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %cmp = icmp eq %struct._typeobject* %1, @PyLong_Type
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %struct._object*, %struct._object** %v.addr, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %2, i32 0, i32 0
  %3 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %3, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load %struct._object*, %struct._object** %v.addr, align 8
  %5 = bitcast %struct._object* %4 to %struct._longobject*
  %call = call %struct._object* @_PyLong_Copy(%struct._longobject* %5)
  store %struct._object* %call, %struct._object** %v.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct._object*, %struct._object** %v.addr, align 8
  ret %struct._object* %6
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_abs(%struct._longobject* %v) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._longobject*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %call = call %struct._object* @long_neg(%struct._longobject* %3)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.else:                                          ; preds = %entry
  %4 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %5 = bitcast %struct._longobject* %4 to %struct._object*
  %call1 = call %struct._object* @long_long(%struct._object* %5)
  store %struct._object* %call1, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %6 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %6
}

; Function Attrs: nounwind uwtable
define internal i32 @long_bool(%struct._longobject* %v) #0 {
entry:
  %v.addr = alloca %struct._longobject*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp ne i64 %2, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_invert(%struct._longobject* %v) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._longobject*, align 8
  %x = alloca %struct._longobject*, align 8
  %w = alloca %struct._longobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  %cmp3 = icmp sle i64 %cond, 1
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %9 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size4 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size4, align 8
  %cmp5 = icmp slt i64 %11, 0
  br i1 %cmp5, label %cond.true.6, label %cond.false.8

cond.true.6:                                      ; preds = %if.then
  %12 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %12, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 0
  %13 = load i32, i32* %arrayidx, align 4
  %sub7 = sub i32 0, %13
  br label %cond.end.17

cond.false.8:                                     ; preds = %if.then
  %14 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %15 = bitcast %struct._longobject* %14 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %15, i32 0, i32 1
  %16 = load i64, i64* %ob_size9, align 8
  %cmp10 = icmp eq i64 %16, 0
  br i1 %cmp10, label %cond.true.11, label %cond.false.12

cond.true.11:                                     ; preds = %cond.false.8
  br label %cond.end.15

cond.false.12:                                    ; preds = %cond.false.8
  %17 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit13 = getelementptr inbounds %struct._longobject, %struct._longobject* %17, i32 0, i32 1
  %arrayidx14 = getelementptr [1 x i32], [1 x i32]* %ob_digit13, i32 0, i64 0
  %18 = load i32, i32* %arrayidx14, align 4
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.12, %cond.true.11
  %cond16 = phi i32 [ 0, %cond.true.11 ], [ %18, %cond.false.12 ]
  br label %cond.end.17

cond.end.17:                                      ; preds = %cond.end.15, %cond.true.6
  %cond18 = phi i32 [ %sub7, %cond.true.6 ], [ %cond16, %cond.end.15 ]
  %add = add i32 %cond18, 1
  %sub19 = sub i32 0, %add
  %conv = sext i32 %sub19 to i64
  %call = call %struct._object* @PyLong_FromLong(i64 %conv)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %call20 = call %struct._object* @PyLong_FromLong(i64 1)
  %19 = bitcast %struct._object* %call20 to %struct._longobject*
  store %struct._longobject* %19, %struct._longobject** %w, align 8
  %20 = load %struct._longobject*, %struct._longobject** %w, align 8
  %cmp21 = icmp eq %struct._longobject* %20, null
  br i1 %cmp21, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.24:                                        ; preds = %if.end
  %21 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %22 = load %struct._longobject*, %struct._longobject** %w, align 8
  %call25 = call %struct._object* @long_add(%struct._longobject* %21, %struct._longobject* %22)
  %23 = bitcast %struct._object* %call25 to %struct._longobject*
  store %struct._longobject* %23, %struct._longobject** %x, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.24
  %24 = load %struct._longobject*, %struct._longobject** %w, align 8
  %25 = bitcast %struct._longobject* %24 to %struct._object*
  store %struct._object* %25, %struct._object** %_py_decref_tmp, align 8
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 0
  %27 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %27, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp26 = icmp ne i64 %dec, 0
  br i1 %cmp26, label %if.then.28, label %if.else

if.then.28:                                       ; preds = %do.body
  br label %if.end.29

if.else:                                          ; preds = %do.body
  %28 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %28, i32 0, i32 1
  %29 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %29, i32 0, i32 4
  %30 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %30(%struct._object* %31)
  br label %if.end.29

if.end.29:                                        ; preds = %if.else, %if.then.28
  br label %do.end

do.end:                                           ; preds = %if.end.29
  %32 = load %struct._longobject*, %struct._longobject** %x, align 8
  %cmp30 = icmp eq %struct._longobject* %32, null
  br i1 %cmp30, label %if.then.32, label %if.end.33

if.then.32:                                       ; preds = %do.end
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.33:                                        ; preds = %do.end
  %33 = load %struct._longobject*, %struct._longobject** %x, align 8
  %34 = bitcast %struct._longobject* %33 to %struct.PyVarObject*
  %ob_size34 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %34, i32 0, i32 1
  %35 = load i64, i64* %ob_size34, align 8
  %sub35 = sub i64 0, %35
  %36 = load %struct._longobject*, %struct._longobject** %x, align 8
  %37 = bitcast %struct._longobject* %36 to %struct.PyVarObject*
  %ob_size36 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %37, i32 0, i32 1
  store i64 %sub35, i64* %ob_size36, align 8
  %38 = load %struct._longobject*, %struct._longobject** %x, align 8
  %call37 = call %struct._longobject* @maybe_small_long(%struct._longobject* %38)
  %39 = bitcast %struct._longobject* %call37 to %struct._object*
  store %struct._object* %39, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.33, %if.then.32, %if.then.23, %cond.end.17
  %40 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %40
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_rshift(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %z = alloca %struct._longobject*, align 8
  %shiftby = alloca i64, align 8
  %newsize = alloca i64, align 8
  %wordshift = alloca i64, align 8
  %loshift = alloca i64, align 8
  %hishift = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %lomask = alloca i32, align 4
  %himask = alloca i32, align 4
  %a1 = alloca %struct._longobject*, align 8
  %a2 = alloca %struct._longobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  store %struct._longobject* null, %struct._longobject** %z, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct._object*
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %1, i32 0, i32 1
  %2 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %2, i32 0, i32 19
  %3 = load i64, i64* %tp_flags, align 8
  %and = and i64 %3, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %4 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %5 = bitcast %struct._longobject* %4 to %struct._object*
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %5, i32 0, i32 1
  %6 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %6, i32 0, i32 19
  %7 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %7, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %8 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %8, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %9 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size, align 8
  %cmp5 = icmp slt i64 %11, 0
  br i1 %cmp5, label %if.then.6, label %if.else.32

if.then.6:                                        ; preds = %do.end
  %12 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %call = call %struct._object* @long_invert(%struct._longobject* %12)
  %13 = bitcast %struct._object* %call to %struct._longobject*
  store %struct._longobject* %13, %struct._longobject** %a1, align 8
  %14 = load %struct._longobject*, %struct._longobject** %a1, align 8
  %cmp7 = icmp eq %struct._longobject* %14, null
  br i1 %cmp7, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.then.6
  br label %rshift_error

if.end.9:                                         ; preds = %if.then.6
  %15 = load %struct._longobject*, %struct._longobject** %a1, align 8
  %16 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call10 = call %struct._object* @long_rshift(%struct._longobject* %15, %struct._longobject* %16)
  %17 = bitcast %struct._object* %call10 to %struct._longobject*
  store %struct._longobject* %17, %struct._longobject** %a2, align 8
  br label %do.body.11

do.body.11:                                       ; preds = %if.end.9
  %18 = load %struct._longobject*, %struct._longobject** %a1, align 8
  %19 = bitcast %struct._longobject* %18 to %struct._object*
  store %struct._object* %19, %struct._object** %_py_decref_tmp, align 8
  %20 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %21, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp12 = icmp ne i64 %dec, 0
  br i1 %cmp12, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %do.body.11
  br label %if.end.15

if.else:                                          ; preds = %do.body.11
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type14 = getelementptr inbounds %struct._object, %struct._object* %22, i32 0, i32 1
  %23 = load %struct._typeobject*, %struct._typeobject** %ob_type14, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %23, i32 0, i32 4
  %24 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %24(%struct._object* %25)
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.13
  br label %do.end.16

do.end.16:                                        ; preds = %if.end.15
  %26 = load %struct._longobject*, %struct._longobject** %a2, align 8
  %cmp17 = icmp eq %struct._longobject* %26, null
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %do.end.16
  br label %rshift_error

if.end.19:                                        ; preds = %do.end.16
  %27 = load %struct._longobject*, %struct._longobject** %a2, align 8
  %call20 = call %struct._object* @long_invert(%struct._longobject* %27)
  %28 = bitcast %struct._object* %call20 to %struct._longobject*
  store %struct._longobject* %28, %struct._longobject** %z, align 8
  br label %do.body.21

do.body.21:                                       ; preds = %if.end.19
  %29 = load %struct._longobject*, %struct._longobject** %a2, align 8
  %30 = bitcast %struct._longobject* %29 to %struct._object*
  store %struct._object* %30, %struct._object** %_py_decref_tmp22, align 8
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 0
  %32 = load i64, i64* %ob_refcnt23, align 8
  %dec24 = add i64 %32, -1
  store i64 %dec24, i64* %ob_refcnt23, align 8
  %cmp25 = icmp ne i64 %dec24, 0
  br i1 %cmp25, label %if.then.26, label %if.else.27

if.then.26:                                       ; preds = %do.body.21
  br label %if.end.30

if.else.27:                                       ; preds = %do.body.21
  %33 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %33, i32 0, i32 1
  %34 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %34, i32 0, i32 4
  %35 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8
  %36 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8
  call void %35(%struct._object* %36)
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  br label %do.end.31

do.end.31:                                        ; preds = %if.end.30
  br label %if.end.82

if.else.32:                                       ; preds = %do.end
  %37 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %38 = bitcast %struct._longobject* %37 to %struct._object*
  %call33 = call i64 @PyLong_AsSsize_t(%struct._object* %38)
  store i64 %call33, i64* %shiftby, align 8
  %39 = load i64, i64* %shiftby, align 8
  %cmp34 = icmp eq i64 %39, -1
  br i1 %cmp34, label %land.lhs.true, label %if.end.37

land.lhs.true:                                    ; preds = %if.else.32
  %call35 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call35, null
  br i1 %tobool, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %land.lhs.true
  br label %rshift_error

if.end.37:                                        ; preds = %land.lhs.true, %if.else.32
  %40 = load i64, i64* %shiftby, align 8
  %cmp38 = icmp slt i64 %40, 0
  br i1 %cmp38, label %if.then.39, label %if.end.40

if.then.39:                                       ; preds = %if.end.37
  %41 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %41, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0))
  br label %rshift_error

if.end.40:                                        ; preds = %if.end.37
  %42 = load i64, i64* %shiftby, align 8
  %div = sdiv i64 %42, 30
  store i64 %div, i64* %wordshift, align 8
  %43 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %44 = bitcast %struct._longobject* %43 to %struct.PyVarObject*
  %ob_size41 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %44, i32 0, i32 1
  %45 = load i64, i64* %ob_size41, align 8
  %cmp42 = icmp slt i64 %45, 0
  br i1 %cmp42, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.40
  %46 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %47 = bitcast %struct._longobject* %46 to %struct.PyVarObject*
  %ob_size43 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %47, i32 0, i32 1
  %48 = load i64, i64* %ob_size43, align 8
  %sub = sub i64 0, %48
  br label %cond.end

cond.false:                                       ; preds = %if.end.40
  %49 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %50 = bitcast %struct._longobject* %49 to %struct.PyVarObject*
  %ob_size44 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %50, i32 0, i32 1
  %51 = load i64, i64* %ob_size44, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %51, %cond.false ]
  %52 = load i64, i64* %wordshift, align 8
  %sub45 = sub i64 %cond, %52
  store i64 %sub45, i64* %newsize, align 8
  %53 = load i64, i64* %newsize, align 8
  %cmp46 = icmp sle i64 %53, 0
  br i1 %cmp46, label %if.then.47, label %if.end.49

if.then.47:                                       ; preds = %cond.end
  %call48 = call %struct._object* @PyLong_FromLong(i64 0)
  store %struct._object* %call48, %struct._object** %retval
  br label %return

if.end.49:                                        ; preds = %cond.end
  %54 = load i64, i64* %shiftby, align 8
  %rem = srem i64 %54, 30
  store i64 %rem, i64* %loshift, align 8
  %55 = load i64, i64* %loshift, align 8
  %sub50 = sub i64 30, %55
  store i64 %sub50, i64* %hishift, align 8
  %56 = load i64, i64* %hishift, align 8
  %sh_prom = trunc i64 %56 to i32
  %shl = shl i32 1, %sh_prom
  %sub51 = sub i32 %shl, 1
  store i32 %sub51, i32* %lomask, align 4
  %57 = load i32, i32* %lomask, align 4
  %xor = xor i32 1073741823, %57
  store i32 %xor, i32* %himask, align 4
  %58 = load i64, i64* %newsize, align 8
  %call52 = call %struct._longobject* @_PyLong_New(i64 %58)
  store %struct._longobject* %call52, %struct._longobject** %z, align 8
  %59 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp53 = icmp eq %struct._longobject* %59, null
  br i1 %cmp53, label %if.then.54, label %if.end.55

if.then.54:                                       ; preds = %if.end.49
  br label %rshift_error

if.end.55:                                        ; preds = %if.end.49
  %60 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %61 = bitcast %struct._longobject* %60 to %struct.PyVarObject*
  %ob_size56 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %61, i32 0, i32 1
  %62 = load i64, i64* %ob_size56, align 8
  %cmp57 = icmp slt i64 %62, 0
  br i1 %cmp57, label %if.then.58, label %if.end.62

if.then.58:                                       ; preds = %if.end.55
  %63 = load %struct._longobject*, %struct._longobject** %z, align 8
  %64 = bitcast %struct._longobject* %63 to %struct.PyVarObject*
  %ob_size59 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %64, i32 0, i32 1
  %65 = load i64, i64* %ob_size59, align 8
  %sub60 = sub i64 0, %65
  %66 = load %struct._longobject*, %struct._longobject** %z, align 8
  %67 = bitcast %struct._longobject* %66 to %struct.PyVarObject*
  %ob_size61 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %67, i32 0, i32 1
  store i64 %sub60, i64* %ob_size61, align 8
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.58, %if.end.55
  store i64 0, i64* %i, align 8
  %68 = load i64, i64* %wordshift, align 8
  store i64 %68, i64* %j, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.62
  %69 = load i64, i64* %i, align 8
  %70 = load i64, i64* %newsize, align 8
  %cmp63 = icmp slt i64 %69, %70
  br i1 %cmp63, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %71 = load i64, i64* %j, align 8
  %72 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %72, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %71
  %73 = load i32, i32* %arrayidx, align 4
  %74 = load i64, i64* %loshift, align 8
  %sh_prom64 = trunc i64 %74 to i32
  %shr = lshr i32 %73, %sh_prom64
  %75 = load i32, i32* %lomask, align 4
  %and65 = and i32 %shr, %75
  %76 = load i64, i64* %i, align 8
  %77 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit66 = getelementptr inbounds %struct._longobject, %struct._longobject* %77, i32 0, i32 1
  %arrayidx67 = getelementptr [1 x i32], [1 x i32]* %ob_digit66, i32 0, i64 %76
  store i32 %and65, i32* %arrayidx67, align 4
  %78 = load i64, i64* %i, align 8
  %add = add i64 %78, 1
  %79 = load i64, i64* %newsize, align 8
  %cmp68 = icmp slt i64 %add, %79
  br i1 %cmp68, label %if.then.69, label %if.end.78

if.then.69:                                       ; preds = %for.body
  %80 = load i64, i64* %j, align 8
  %add70 = add i64 %80, 1
  %81 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit71 = getelementptr inbounds %struct._longobject, %struct._longobject* %81, i32 0, i32 1
  %arrayidx72 = getelementptr [1 x i32], [1 x i32]* %ob_digit71, i32 0, i64 %add70
  %82 = load i32, i32* %arrayidx72, align 4
  %83 = load i64, i64* %hishift, align 8
  %sh_prom73 = trunc i64 %83 to i32
  %shl74 = shl i32 %82, %sh_prom73
  %84 = load i32, i32* %himask, align 4
  %and75 = and i32 %shl74, %84
  %85 = load i64, i64* %i, align 8
  %86 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit76 = getelementptr inbounds %struct._longobject, %struct._longobject* %86, i32 0, i32 1
  %arrayidx77 = getelementptr [1 x i32], [1 x i32]* %ob_digit76, i32 0, i64 %85
  %87 = load i32, i32* %arrayidx77, align 4
  %or = or i32 %87, %and75
  store i32 %or, i32* %arrayidx77, align 4
  br label %if.end.78

if.end.78:                                        ; preds = %if.then.69, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.78
  %88 = load i64, i64* %i, align 8
  %inc79 = add i64 %88, 1
  store i64 %inc79, i64* %i, align 8
  %89 = load i64, i64* %j, align 8
  %inc80 = add i64 %89, 1
  store i64 %inc80, i64* %j, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %90 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call81 = call %struct._longobject* @long_normalize(%struct._longobject* %90)
  store %struct._longobject* %call81, %struct._longobject** %z, align 8
  br label %if.end.82

if.end.82:                                        ; preds = %for.end, %do.end.31
  br label %rshift_error

rshift_error:                                     ; preds = %if.end.82, %if.then.54, %if.then.39, %if.then.36, %if.then.18, %if.then.8
  %91 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call83 = call %struct._longobject* @maybe_small_long(%struct._longobject* %91)
  %92 = bitcast %struct._longobject* %call83 to %struct._object*
  store %struct._object* %92, %struct._object** %retval
  br label %return

return:                                           ; preds = %rshift_error, %if.then.47, %if.then
  %93 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %93
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_and(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  %c = alloca %struct._object*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8
  store %struct._object* %b, %struct._object** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %a.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %b.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %a.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct._longobject*
  %9 = load %struct._object*, %struct._object** %b.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  %call = call %struct._object* @long_bitwise(%struct._longobject* %8, i8 signext 38, %struct._longobject* %10)
  store %struct._object* %call, %struct._object** %c, align 8
  %11 = load %struct._object*, %struct._object** %c, align 8
  store %struct._object* %11, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %12 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %12
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_xor(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  %c = alloca %struct._object*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8
  store %struct._object* %b, %struct._object** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %a.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %b.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %a.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct._longobject*
  %9 = load %struct._object*, %struct._object** %b.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  %call = call %struct._object* @long_bitwise(%struct._longobject* %8, i8 signext 94, %struct._longobject* %10)
  store %struct._object* %call, %struct._object** %c, align 8
  %11 = load %struct._object*, %struct._object** %c, align 8
  store %struct._object* %11, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %12 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %12
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_or(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  %c = alloca %struct._object*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8
  store %struct._object* %b, %struct._object** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %a.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %b.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %a.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct._longobject*
  %9 = load %struct._object*, %struct._object** %b.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  %call = call %struct._object* @long_bitwise(%struct._longobject* %8, i8 signext 124, %struct._longobject* %10)
  store %struct._object* %call, %struct._object** %c, align 8
  %11 = load %struct._object*, %struct._object** %c, align 8
  store %struct._object* %11, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end, %if.then
  %12 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %12
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_float(%struct._object* %v) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._object*, align 8
  %result = alloca double, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8
  %0 = load %struct._object*, %struct._object** %v.addr, align 8
  %call = call double @PyLong_AsDouble(%struct._object* %0)
  store double %call, double* %result, align 8
  %1 = load double, double* %result, align 8
  %cmp = fcmp oeq double %1, -1.000000e+00
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = call %struct._object* @PyErr_Occurred()
  %tobool = icmp ne %struct._object* %call1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load double, double* %result, align 8
  %call2 = call %struct._object* @PyFloat_FromDouble(double %2)
  store %struct._object* %call2, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %3
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_div(%struct._object* %a, %struct._object* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._object*, align 8
  %b.addr = alloca %struct._object*, align 8
  %div = alloca %struct._longobject*, align 8
  store %struct._object* %a, %struct._object** %a.addr, align 8
  store %struct._object* %b, %struct._object** %b.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %a.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %b.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %a.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct._longobject*
  %9 = load %struct._object*, %struct._object** %b.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  %call = call i32 @l_divmod(%struct._longobject* %8, %struct._longobject* %10, %struct._longobject** %div, %struct._longobject** null)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %do.end
  store %struct._longobject* null, %struct._longobject** %div, align 8
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %do.end
  %11 = load %struct._longobject*, %struct._longobject** %div, align 8
  %12 = bitcast %struct._longobject* %11 to %struct._object*
  store %struct._object* %12, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then
  %13 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %13
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_true_divide(%struct._object* %v, %struct._object* %w) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._object*, align 8
  %w.addr = alloca %struct._object*, align 8
  %a = alloca %struct._longobject*, align 8
  %b = alloca %struct._longobject*, align 8
  %x = alloca %struct._longobject*, align 8
  %a_size = alloca i64, align 8
  %b_size = alloca i64, align 8
  %shift = alloca i64, align 8
  %extra_bits = alloca i64, align 8
  %diff = alloca i64, align 8
  %x_size = alloca i64, align 8
  %x_bits = alloca i64, align 8
  %mask = alloca i32, align 4
  %low = alloca i32, align 4
  %inexact = alloca i32, align 4
  %negate = alloca i32, align 4
  %a_is_small = alloca i32, align 4
  %b_is_small = alloca i32, align 4
  %dx = alloca double, align 8
  %result = alloca double, align 8
  %da = alloca double, align 8
  %db = alloca double, align 8
  %i = alloca i64, align 8
  %shift_digits = alloca i64, align 8
  %rem = alloca i32, align 4
  %shift_digits148 = alloca i64, align 8
  %rem150 = alloca i32, align 4
  %rem189 = alloca i32, align 4
  %div202 = alloca %struct._longobject*, align 8
  %rem203 = alloca %struct._longobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp223 = alloca %struct._object*, align 8
  %_py_decref_tmp295 = alloca %struct._object*, align 8
  store %struct._object* %v, %struct._object** %v.addr, align 8
  store %struct._object* %w, %struct._object** %w.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct._object*, %struct._object** %v.addr, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %0, i32 0, i32 1
  %1 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_flags = getelementptr inbounds %struct._typeobject, %struct._typeobject* %1, i32 0, i32 19
  %2 = load i64, i64* %tp_flags, align 8
  %and = and i64 %2, 16777216
  %cmp = icmp ne i64 %and, 0
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.body
  %3 = load %struct._object*, %struct._object** %w.addr, align 8
  %ob_type1 = getelementptr inbounds %struct._object, %struct._object* %3, i32 0, i32 1
  %4 = load %struct._typeobject*, %struct._typeobject** %ob_type1, align 8
  %tp_flags2 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %4, i32 0, i32 19
  %5 = load i64, i64* %tp_flags2, align 8
  %and3 = and i64 %5, 16777216
  %cmp4 = icmp ne i64 %and3, 0
  br i1 %cmp4, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %do.body
  %6 = load i64, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  %inc = add i64 %6, 1
  store i64 %inc, i64* getelementptr inbounds (%struct._object, %struct._object* @_Py_NotImplementedStruct, i32 0, i32 0), align 8
  store %struct._object* @_Py_NotImplementedStruct, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.end

do.end:                                           ; preds = %if.end
  %7 = load %struct._object*, %struct._object** %v.addr, align 8
  %8 = bitcast %struct._object* %7 to %struct._longobject*
  store %struct._longobject* %8, %struct._longobject** %a, align 8
  %9 = load %struct._object*, %struct._object** %w.addr, align 8
  %10 = bitcast %struct._object* %9 to %struct._longobject*
  store %struct._longobject* %10, %struct._longobject** %b, align 8
  %11 = load %struct._longobject*, %struct._longobject** %a, align 8
  %12 = bitcast %struct._longobject* %11 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1
  %13 = load i64, i64* %ob_size, align 8
  %cmp5 = icmp slt i64 %13, 0
  br i1 %cmp5, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %14 = load %struct._longobject*, %struct._longobject** %a, align 8
  %15 = bitcast %struct._longobject* %14 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %15, i32 0, i32 1
  %16 = load i64, i64* %ob_size6, align 8
  %sub = sub i64 0, %16
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %17 = load %struct._longobject*, %struct._longobject** %a, align 8
  %18 = bitcast %struct._longobject* %17 to %struct.PyVarObject*
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %18, i32 0, i32 1
  %19 = load i64, i64* %ob_size7, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %19, %cond.false ]
  store i64 %cond, i64* %a_size, align 8
  %20 = load %struct._longobject*, %struct._longobject** %b, align 8
  %21 = bitcast %struct._longobject* %20 to %struct.PyVarObject*
  %ob_size8 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %21, i32 0, i32 1
  %22 = load i64, i64* %ob_size8, align 8
  %cmp9 = icmp slt i64 %22, 0
  br i1 %cmp9, label %cond.true.10, label %cond.false.13

cond.true.10:                                     ; preds = %cond.end
  %23 = load %struct._longobject*, %struct._longobject** %b, align 8
  %24 = bitcast %struct._longobject* %23 to %struct.PyVarObject*
  %ob_size11 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %24, i32 0, i32 1
  %25 = load i64, i64* %ob_size11, align 8
  %sub12 = sub i64 0, %25
  br label %cond.end.15

cond.false.13:                                    ; preds = %cond.end
  %26 = load %struct._longobject*, %struct._longobject** %b, align 8
  %27 = bitcast %struct._longobject* %26 to %struct.PyVarObject*
  %ob_size14 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %27, i32 0, i32 1
  %28 = load i64, i64* %ob_size14, align 8
  br label %cond.end.15

cond.end.15:                                      ; preds = %cond.false.13, %cond.true.10
  %cond16 = phi i64 [ %sub12, %cond.true.10 ], [ %28, %cond.false.13 ]
  store i64 %cond16, i64* %b_size, align 8
  %29 = load %struct._longobject*, %struct._longobject** %a, align 8
  %30 = bitcast %struct._longobject* %29 to %struct.PyVarObject*
  %ob_size17 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %30, i32 0, i32 1
  %31 = load i64, i64* %ob_size17, align 8
  %cmp18 = icmp slt i64 %31, 0
  %conv = zext i1 %cmp18 to i32
  %32 = load %struct._longobject*, %struct._longobject** %b, align 8
  %33 = bitcast %struct._longobject* %32 to %struct.PyVarObject*
  %ob_size19 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %33, i32 0, i32 1
  %34 = load i64, i64* %ob_size19, align 8
  %cmp20 = icmp slt i64 %34, 0
  %conv21 = zext i1 %cmp20 to i32
  %xor = xor i32 %conv, %conv21
  store i32 %xor, i32* %negate, align 4
  %35 = load i64, i64* %b_size, align 8
  %cmp22 = icmp eq i64 %35, 0
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %cond.end.15
  %36 = load %struct._object*, %struct._object** @PyExc_ZeroDivisionError, align 8
  call void @PyErr_SetString(%struct._object* %36, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0))
  br label %error

if.end.25:                                        ; preds = %cond.end.15
  %37 = load i64, i64* %a_size, align 8
  %cmp26 = icmp eq i64 %37, 0
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.25
  br label %underflow_or_zero

if.end.29:                                        ; preds = %if.end.25
  %38 = load i64, i64* %a_size, align 8
  %cmp30 = icmp sle i64 %38, 1
  br i1 %cmp30, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end.29
  %39 = load i64, i64* %a_size, align 8
  %cmp32 = icmp eq i64 %39, 2
  br i1 %cmp32, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %40 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %40, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 1
  %41 = load i32, i32* %arrayidx, align 4
  %shr = lshr i32 %41, 23
  %cmp34 = icmp eq i32 %shr, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %42 = phi i1 [ false, %lor.rhs ], [ %cmp34, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %if.end.29
  %43 = phi i1 [ true, %if.end.29 ], [ %42, %land.end ]
  %lor.ext = zext i1 %43 to i32
  store i32 %lor.ext, i32* %a_is_small, align 4
  %44 = load i64, i64* %b_size, align 8
  %cmp36 = icmp sle i64 %44, 1
  br i1 %cmp36, label %lor.end.48, label %lor.rhs.38

lor.rhs.38:                                       ; preds = %lor.end
  %45 = load i64, i64* %b_size, align 8
  %cmp39 = icmp eq i64 %45, 2
  br i1 %cmp39, label %land.rhs.41, label %land.end.47

land.rhs.41:                                      ; preds = %lor.rhs.38
  %46 = load %struct._longobject*, %struct._longobject** %b, align 8
  %ob_digit42 = getelementptr inbounds %struct._longobject, %struct._longobject* %46, i32 0, i32 1
  %arrayidx43 = getelementptr [1 x i32], [1 x i32]* %ob_digit42, i32 0, i64 1
  %47 = load i32, i32* %arrayidx43, align 4
  %shr44 = lshr i32 %47, 23
  %cmp45 = icmp eq i32 %shr44, 0
  br label %land.end.47

land.end.47:                                      ; preds = %land.rhs.41, %lor.rhs.38
  %48 = phi i1 [ false, %lor.rhs.38 ], [ %cmp45, %land.rhs.41 ]
  br label %lor.end.48

lor.end.48:                                       ; preds = %land.end.47, %lor.end
  %49 = phi i1 [ true, %lor.end ], [ %48, %land.end.47 ]
  %lor.ext49 = zext i1 %49 to i32
  store i32 %lor.ext49, i32* %b_is_small, align 4
  %50 = load i32, i32* %a_is_small, align 4
  %tobool = icmp ne i32 %50, 0
  br i1 %tobool, label %land.lhs.true, label %if.end.76

land.lhs.true:                                    ; preds = %lor.end.48
  %51 = load i32, i32* %b_is_small, align 4
  %tobool50 = icmp ne i32 %51, 0
  br i1 %tobool50, label %if.then.51, label %if.end.76

if.then.51:                                       ; preds = %land.lhs.true
  %52 = load i64, i64* %a_size, align 8
  %dec = add i64 %52, -1
  store i64 %dec, i64* %a_size, align 8
  %53 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit52 = getelementptr inbounds %struct._longobject, %struct._longobject* %53, i32 0, i32 1
  %arrayidx53 = getelementptr [1 x i32], [1 x i32]* %ob_digit52, i32 0, i64 %dec
  %54 = load i32, i32* %arrayidx53, align 4
  %conv54 = uitofp i32 %54 to double
  store double %conv54, double* %da, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then.51
  %55 = load i64, i64* %a_size, align 8
  %cmp55 = icmp sgt i64 %55, 0
  br i1 %cmp55, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %56 = load double, double* %da, align 8
  %mul = fmul double %56, 0x41D0000000000000
  %57 = load i64, i64* %a_size, align 8
  %dec57 = add i64 %57, -1
  store i64 %dec57, i64* %a_size, align 8
  %58 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit58 = getelementptr inbounds %struct._longobject, %struct._longobject* %58, i32 0, i32 1
  %arrayidx59 = getelementptr [1 x i32], [1 x i32]* %ob_digit58, i32 0, i64 %dec57
  %59 = load i32, i32* %arrayidx59, align 4
  %conv60 = uitofp i32 %59 to double
  %add = fadd double %mul, %conv60
  store double %add, double* %da, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %60 = load i64, i64* %b_size, align 8
  %dec61 = add i64 %60, -1
  store i64 %dec61, i64* %b_size, align 8
  %61 = load %struct._longobject*, %struct._longobject** %b, align 8
  %ob_digit62 = getelementptr inbounds %struct._longobject, %struct._longobject* %61, i32 0, i32 1
  %arrayidx63 = getelementptr [1 x i32], [1 x i32]* %ob_digit62, i32 0, i64 %dec61
  %62 = load i32, i32* %arrayidx63, align 4
  %conv64 = uitofp i32 %62 to double
  store double %conv64, double* %db, align 8
  br label %while.cond.65

while.cond.65:                                    ; preds = %while.body.68, %while.end
  %63 = load i64, i64* %b_size, align 8
  %cmp66 = icmp sgt i64 %63, 0
  br i1 %cmp66, label %while.body.68, label %while.end.75

while.body.68:                                    ; preds = %while.cond.65
  %64 = load double, double* %db, align 8
  %mul69 = fmul double %64, 0x41D0000000000000
  %65 = load i64, i64* %b_size, align 8
  %dec70 = add i64 %65, -1
  store i64 %dec70, i64* %b_size, align 8
  %66 = load %struct._longobject*, %struct._longobject** %b, align 8
  %ob_digit71 = getelementptr inbounds %struct._longobject, %struct._longobject* %66, i32 0, i32 1
  %arrayidx72 = getelementptr [1 x i32], [1 x i32]* %ob_digit71, i32 0, i64 %dec70
  %67 = load i32, i32* %arrayidx72, align 4
  %conv73 = uitofp i32 %67 to double
  %add74 = fadd double %mul69, %conv73
  store double %add74, double* %db, align 8
  br label %while.cond.65

while.end.75:                                     ; preds = %while.cond.65
  %68 = load double, double* %da, align 8
  %69 = load double, double* %db, align 8
  %div = fdiv double %68, %69
  store double %div, double* %result, align 8
  br label %success

if.end.76:                                        ; preds = %land.lhs.true, %lor.end.48
  %70 = load i64, i64* %a_size, align 8
  %71 = load i64, i64* %b_size, align 8
  %sub77 = sub i64 %70, %71
  store i64 %sub77, i64* %diff, align 8
  %72 = load i64, i64* %diff, align 8
  %cmp78 = icmp sgt i64 %72, 307445734561825859
  br i1 %cmp78, label %if.then.80, label %if.else

if.then.80:                                       ; preds = %if.end.76
  br label %overflow

if.else:                                          ; preds = %if.end.76
  %73 = load i64, i64* %diff, align 8
  %cmp81 = icmp slt i64 %73, -307445734561825859
  br i1 %cmp81, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %if.else
  br label %underflow_or_zero

if.end.84:                                        ; preds = %if.else
  br label %if.end.85

if.end.85:                                        ; preds = %if.end.84
  %74 = load i64, i64* %diff, align 8
  %mul86 = mul i64 %74, 30
  %75 = load i64, i64* %a_size, align 8
  %sub87 = sub i64 %75, 1
  %76 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit88 = getelementptr inbounds %struct._longobject, %struct._longobject* %76, i32 0, i32 1
  %arrayidx89 = getelementptr [1 x i32], [1 x i32]* %ob_digit88, i32 0, i64 %sub87
  %77 = load i32, i32* %arrayidx89, align 4
  %call = call i32 @bits_in_digit(i32 %77)
  %conv90 = sext i32 %call to i64
  %add91 = add i64 %mul86, %conv90
  %78 = load i64, i64* %b_size, align 8
  %sub92 = sub i64 %78, 1
  %79 = load %struct._longobject*, %struct._longobject** %b, align 8
  %ob_digit93 = getelementptr inbounds %struct._longobject, %struct._longobject* %79, i32 0, i32 1
  %arrayidx94 = getelementptr [1 x i32], [1 x i32]* %ob_digit93, i32 0, i64 %sub92
  %80 = load i32, i32* %arrayidx94, align 4
  %call95 = call i32 @bits_in_digit(i32 %80)
  %conv96 = sext i32 %call95 to i64
  %sub97 = sub i64 %add91, %conv96
  store i64 %sub97, i64* %diff, align 8
  %81 = load i64, i64* %diff, align 8
  %cmp98 = icmp sgt i64 %81, 1024
  br i1 %cmp98, label %if.then.100, label %if.else.101

if.then.100:                                      ; preds = %if.end.85
  br label %overflow

if.else.101:                                      ; preds = %if.end.85
  %82 = load i64, i64* %diff, align 8
  %cmp102 = icmp slt i64 %82, -1075
  br i1 %cmp102, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %if.else.101
  br label %underflow_or_zero

if.end.105:                                       ; preds = %if.else.101
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105
  %83 = load i64, i64* %diff, align 8
  %cmp107 = icmp sgt i64 %83, -1021
  br i1 %cmp107, label %cond.true.109, label %cond.false.110

cond.true.109:                                    ; preds = %if.end.106
  %84 = load i64, i64* %diff, align 8
  br label %cond.end.111

cond.false.110:                                   ; preds = %if.end.106
  br label %cond.end.111

cond.end.111:                                     ; preds = %cond.false.110, %cond.true.109
  %cond112 = phi i64 [ %84, %cond.true.109 ], [ -1021, %cond.false.110 ]
  %sub113 = sub i64 %cond112, 53
  %sub114 = sub i64 %sub113, 2
  store i64 %sub114, i64* %shift, align 8
  store i32 0, i32* %inexact, align 4
  %85 = load i64, i64* %shift, align 8
  %cmp115 = icmp sle i64 %85, 0
  br i1 %cmp115, label %if.then.117, label %if.else.147

if.then.117:                                      ; preds = %cond.end.111
  %86 = load i64, i64* %shift, align 8
  %sub118 = sub i64 0, %86
  %div119 = sdiv i64 %sub118, 30
  store i64 %div119, i64* %shift_digits, align 8
  %87 = load i64, i64* %a_size, align 8
  %88 = load i64, i64* %shift_digits, align 8
  %sub120 = sub i64 9223372036854775806, %88
  %cmp121 = icmp sge i64 %87, %sub120
  br i1 %cmp121, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %if.then.117
  %89 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %89, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i32 0, i32 0))
  br label %error

if.end.124:                                       ; preds = %if.then.117
  %90 = load i64, i64* %a_size, align 8
  %91 = load i64, i64* %shift_digits, align 8
  %add125 = add i64 %90, %91
  %add126 = add i64 %add125, 1
  %call127 = call %struct._longobject* @_PyLong_New(i64 %add126)
  store %struct._longobject* %call127, %struct._longobject** %x, align 8
  %92 = load %struct._longobject*, %struct._longobject** %x, align 8
  %cmp128 = icmp eq %struct._longobject* %92, null
  br i1 %cmp128, label %if.then.130, label %if.end.131

if.then.130:                                      ; preds = %if.end.124
  br label %error

if.end.131:                                       ; preds = %if.end.124
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.131
  %93 = load i64, i64* %i, align 8
  %94 = load i64, i64* %shift_digits, align 8
  %cmp132 = icmp slt i64 %93, %94
  br i1 %cmp132, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %95 = load i64, i64* %i, align 8
  %96 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit134 = getelementptr inbounds %struct._longobject, %struct._longobject* %96, i32 0, i32 1
  %arrayidx135 = getelementptr [1 x i32], [1 x i32]* %ob_digit134, i32 0, i64 %95
  store i32 0, i32* %arrayidx135, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %97 = load i64, i64* %i, align 8
  %inc136 = add i64 %97, 1
  store i64 %inc136, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %98 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit137 = getelementptr inbounds %struct._longobject, %struct._longobject* %98, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit137, i32 0, i32 0
  %99 = load i64, i64* %shift_digits, align 8
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 %99
  %100 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit138 = getelementptr inbounds %struct._longobject, %struct._longobject* %100, i32 0, i32 1
  %arraydecay139 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit138, i32 0, i32 0
  %101 = load i64, i64* %a_size, align 8
  %102 = load i64, i64* %shift, align 8
  %sub140 = sub i64 0, %102
  %rem141 = srem i64 %sub140, 30
  %conv142 = trunc i64 %rem141 to i32
  %call143 = call i32 @v_lshift(i32* %add.ptr, i32* %arraydecay139, i64 %101, i32 %conv142)
  store i32 %call143, i32* %rem, align 4
  %103 = load i32, i32* %rem, align 4
  %104 = load i64, i64* %a_size, align 8
  %105 = load i64, i64* %shift_digits, align 8
  %add144 = add i64 %104, %105
  %106 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit145 = getelementptr inbounds %struct._longobject, %struct._longobject* %106, i32 0, i32 1
  %arrayidx146 = getelementptr [1 x i32], [1 x i32]* %ob_digit145, i32 0, i64 %add144
  store i32 %103, i32* %arrayidx146, align 4
  br label %if.end.183

if.else.147:                                      ; preds = %cond.end.111
  %107 = load i64, i64* %shift, align 8
  %div149 = sdiv i64 %107, 30
  store i64 %div149, i64* %shift_digits148, align 8
  %108 = load i64, i64* %a_size, align 8
  %109 = load i64, i64* %shift_digits148, align 8
  %sub151 = sub i64 %108, %109
  %call152 = call %struct._longobject* @_PyLong_New(i64 %sub151)
  store %struct._longobject* %call152, %struct._longobject** %x, align 8
  %110 = load %struct._longobject*, %struct._longobject** %x, align 8
  %cmp153 = icmp eq %struct._longobject* %110, null
  br i1 %cmp153, label %if.then.155, label %if.end.156

if.then.155:                                      ; preds = %if.else.147
  br label %error

if.end.156:                                       ; preds = %if.else.147
  %111 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit157 = getelementptr inbounds %struct._longobject, %struct._longobject* %111, i32 0, i32 1
  %arraydecay158 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit157, i32 0, i32 0
  %112 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit159 = getelementptr inbounds %struct._longobject, %struct._longobject* %112, i32 0, i32 1
  %arraydecay160 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit159, i32 0, i32 0
  %113 = load i64, i64* %shift_digits148, align 8
  %add.ptr161 = getelementptr i32, i32* %arraydecay160, i64 %113
  %114 = load i64, i64* %a_size, align 8
  %115 = load i64, i64* %shift_digits148, align 8
  %sub162 = sub i64 %114, %115
  %116 = load i64, i64* %shift, align 8
  %rem163 = srem i64 %116, 30
  %conv164 = trunc i64 %rem163 to i32
  %call165 = call i32 @v_rshift(i32* %arraydecay158, i32* %add.ptr161, i64 %sub162, i32 %conv164)
  store i32 %call165, i32* %rem150, align 4
  %117 = load i32, i32* %rem150, align 4
  %tobool166 = icmp ne i32 %117, 0
  br i1 %tobool166, label %if.then.167, label %if.end.168

if.then.167:                                      ; preds = %if.end.156
  store i32 1, i32* %inexact, align 4
  br label %if.end.168

if.end.168:                                       ; preds = %if.then.167, %if.end.156
  br label %while.cond.169

while.cond.169:                                   ; preds = %if.end.181, %if.end.168
  %118 = load i32, i32* %inexact, align 4
  %tobool170 = icmp ne i32 %118, 0
  br i1 %tobool170, label %land.end.174, label %land.rhs.171

land.rhs.171:                                     ; preds = %while.cond.169
  %119 = load i64, i64* %shift_digits148, align 8
  %cmp172 = icmp sgt i64 %119, 0
  br label %land.end.174

land.end.174:                                     ; preds = %land.rhs.171, %while.cond.169
  %120 = phi i1 [ false, %while.cond.169 ], [ %cmp172, %land.rhs.171 ]
  br i1 %120, label %while.body.175, label %while.end.182

while.body.175:                                   ; preds = %land.end.174
  %121 = load i64, i64* %shift_digits148, align 8
  %dec176 = add i64 %121, -1
  store i64 %dec176, i64* %shift_digits148, align 8
  %122 = load %struct._longobject*, %struct._longobject** %a, align 8
  %ob_digit177 = getelementptr inbounds %struct._longobject, %struct._longobject* %122, i32 0, i32 1
  %arrayidx178 = getelementptr [1 x i32], [1 x i32]* %ob_digit177, i32 0, i64 %dec176
  %123 = load i32, i32* %arrayidx178, align 4
  %tobool179 = icmp ne i32 %123, 0
  br i1 %tobool179, label %if.then.180, label %if.end.181

if.then.180:                                      ; preds = %while.body.175
  store i32 1, i32* %inexact, align 4
  br label %if.end.181

if.end.181:                                       ; preds = %if.then.180, %while.body.175
  br label %while.cond.169

while.end.182:                                    ; preds = %land.end.174
  br label %if.end.183

if.end.183:                                       ; preds = %while.end.182, %for.end
  %124 = load %struct._longobject*, %struct._longobject** %x, align 8
  %call184 = call %struct._longobject* @long_normalize(%struct._longobject* %124)
  %125 = load %struct._longobject*, %struct._longobject** %x, align 8
  %126 = bitcast %struct._longobject* %125 to %struct.PyVarObject*
  %ob_size185 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %126, i32 0, i32 1
  %127 = load i64, i64* %ob_size185, align 8
  store i64 %127, i64* %x_size, align 8
  %128 = load i64, i64* %b_size, align 8
  %cmp186 = icmp eq i64 %128, 1
  br i1 %cmp186, label %if.then.188, label %if.else.201

if.then.188:                                      ; preds = %if.end.183
  %129 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit190 = getelementptr inbounds %struct._longobject, %struct._longobject* %129, i32 0, i32 1
  %arraydecay191 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit190, i32 0, i32 0
  %130 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit192 = getelementptr inbounds %struct._longobject, %struct._longobject* %130, i32 0, i32 1
  %arraydecay193 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit192, i32 0, i32 0
  %131 = load i64, i64* %x_size, align 8
  %132 = load %struct._longobject*, %struct._longobject** %b, align 8
  %ob_digit194 = getelementptr inbounds %struct._longobject, %struct._longobject* %132, i32 0, i32 1
  %arrayidx195 = getelementptr [1 x i32], [1 x i32]* %ob_digit194, i32 0, i64 0
  %133 = load i32, i32* %arrayidx195, align 4
  %call196 = call i32 @inplace_divrem1(i32* %arraydecay191, i32* %arraydecay193, i64 %131, i32 %133)
  store i32 %call196, i32* %rem189, align 4
  %134 = load %struct._longobject*, %struct._longobject** %x, align 8
  %call197 = call %struct._longobject* @long_normalize(%struct._longobject* %134)
  %135 = load i32, i32* %rem189, align 4
  %tobool198 = icmp ne i32 %135, 0
  br i1 %tobool198, label %if.then.199, label %if.end.200

if.then.199:                                      ; preds = %if.then.188
  store i32 1, i32* %inexact, align 4
  br label %if.end.200

if.end.200:                                       ; preds = %if.then.199, %if.then.188
  br label %if.end.234

if.else.201:                                      ; preds = %if.end.183
  %136 = load %struct._longobject*, %struct._longobject** %x, align 8
  %137 = load %struct._longobject*, %struct._longobject** %b, align 8
  %call204 = call %struct._longobject* @x_divrem(%struct._longobject* %136, %struct._longobject* %137, %struct._longobject** %rem203)
  store %struct._longobject* %call204, %struct._longobject** %div202, align 8
  br label %do.body.205

do.body.205:                                      ; preds = %if.else.201
  %138 = load %struct._longobject*, %struct._longobject** %x, align 8
  %139 = bitcast %struct._longobject* %138 to %struct._object*
  store %struct._object* %139, %struct._object** %_py_decref_tmp, align 8
  %140 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %140, i32 0, i32 0
  %141 = load i64, i64* %ob_refcnt, align 8
  %dec206 = add i64 %141, -1
  store i64 %dec206, i64* %ob_refcnt, align 8
  %cmp207 = icmp ne i64 %dec206, 0
  br i1 %cmp207, label %if.then.209, label %if.else.210

if.then.209:                                      ; preds = %do.body.205
  br label %if.end.212

if.else.210:                                      ; preds = %do.body.205
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type211 = getelementptr inbounds %struct._object, %struct._object* %142, i32 0, i32 1
  %143 = load %struct._typeobject*, %struct._typeobject** %ob_type211, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %143, i32 0, i32 4
  %144 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %145 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %144(%struct._object* %145)
  br label %if.end.212

if.end.212:                                       ; preds = %if.else.210, %if.then.209
  br label %do.end.213

do.end.213:                                       ; preds = %if.end.212
  %146 = load %struct._longobject*, %struct._longobject** %div202, align 8
  store %struct._longobject* %146, %struct._longobject** %x, align 8
  %147 = load %struct._longobject*, %struct._longobject** %x, align 8
  %cmp214 = icmp eq %struct._longobject* %147, null
  br i1 %cmp214, label %if.then.216, label %if.end.217

if.then.216:                                      ; preds = %do.end.213
  br label %error

if.end.217:                                       ; preds = %do.end.213
  %148 = load %struct._longobject*, %struct._longobject** %rem203, align 8
  %149 = bitcast %struct._longobject* %148 to %struct.PyVarObject*
  %ob_size218 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %149, i32 0, i32 1
  %150 = load i64, i64* %ob_size218, align 8
  %tobool219 = icmp ne i64 %150, 0
  br i1 %tobool219, label %if.then.220, label %if.end.221

if.then.220:                                      ; preds = %if.end.217
  store i32 1, i32* %inexact, align 4
  br label %if.end.221

if.end.221:                                       ; preds = %if.then.220, %if.end.217
  br label %do.body.222

do.body.222:                                      ; preds = %if.end.221
  %151 = load %struct._longobject*, %struct._longobject** %rem203, align 8
  %152 = bitcast %struct._longobject* %151 to %struct._object*
  store %struct._object* %152, %struct._object** %_py_decref_tmp223, align 8
  %153 = load %struct._object*, %struct._object** %_py_decref_tmp223, align 8
  %ob_refcnt224 = getelementptr inbounds %struct._object, %struct._object* %153, i32 0, i32 0
  %154 = load i64, i64* %ob_refcnt224, align 8
  %dec225 = add i64 %154, -1
  store i64 %dec225, i64* %ob_refcnt224, align 8
  %cmp226 = icmp ne i64 %dec225, 0
  br i1 %cmp226, label %if.then.228, label %if.else.229

if.then.228:                                      ; preds = %do.body.222
  br label %if.end.232

if.else.229:                                      ; preds = %do.body.222
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp223, align 8
  %ob_type230 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 1
  %156 = load %struct._typeobject*, %struct._typeobject** %ob_type230, align 8
  %tp_dealloc231 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %156, i32 0, i32 4
  %157 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc231, align 8
  %158 = load %struct._object*, %struct._object** %_py_decref_tmp223, align 8
  call void %157(%struct._object* %158)
  br label %if.end.232

if.end.232:                                       ; preds = %if.else.229, %if.then.228
  br label %do.end.233

do.end.233:                                       ; preds = %if.end.232
  br label %if.end.234

if.end.234:                                       ; preds = %do.end.233, %if.end.200
  %159 = load %struct._longobject*, %struct._longobject** %x, align 8
  %160 = bitcast %struct._longobject* %159 to %struct.PyVarObject*
  %ob_size235 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %160, i32 0, i32 1
  %161 = load i64, i64* %ob_size235, align 8
  %cmp236 = icmp slt i64 %161, 0
  br i1 %cmp236, label %cond.true.238, label %cond.false.241

cond.true.238:                                    ; preds = %if.end.234
  %162 = load %struct._longobject*, %struct._longobject** %x, align 8
  %163 = bitcast %struct._longobject* %162 to %struct.PyVarObject*
  %ob_size239 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %163, i32 0, i32 1
  %164 = load i64, i64* %ob_size239, align 8
  %sub240 = sub i64 0, %164
  br label %cond.end.243

cond.false.241:                                   ; preds = %if.end.234
  %165 = load %struct._longobject*, %struct._longobject** %x, align 8
  %166 = bitcast %struct._longobject* %165 to %struct.PyVarObject*
  %ob_size242 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %166, i32 0, i32 1
  %167 = load i64, i64* %ob_size242, align 8
  br label %cond.end.243

cond.end.243:                                     ; preds = %cond.false.241, %cond.true.238
  %cond244 = phi i64 [ %sub240, %cond.true.238 ], [ %167, %cond.false.241 ]
  store i64 %cond244, i64* %x_size, align 8
  %168 = load i64, i64* %x_size, align 8
  %sub245 = sub i64 %168, 1
  %mul246 = mul i64 %sub245, 30
  %169 = load i64, i64* %x_size, align 8
  %sub247 = sub i64 %169, 1
  %170 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit248 = getelementptr inbounds %struct._longobject, %struct._longobject* %170, i32 0, i32 1
  %arrayidx249 = getelementptr [1 x i32], [1 x i32]* %ob_digit248, i32 0, i64 %sub247
  %171 = load i32, i32* %arrayidx249, align 4
  %call250 = call i32 @bits_in_digit(i32 %171)
  %conv251 = sext i32 %call250 to i64
  %add252 = add i64 %mul246, %conv251
  store i64 %add252, i64* %x_bits, align 8
  %172 = load i64, i64* %x_bits, align 8
  %173 = load i64, i64* %shift, align 8
  %sub253 = sub i64 -1021, %173
  %cmp254 = icmp sgt i64 %172, %sub253
  br i1 %cmp254, label %cond.true.256, label %cond.false.257

cond.true.256:                                    ; preds = %cond.end.243
  %174 = load i64, i64* %x_bits, align 8
  br label %cond.end.259

cond.false.257:                                   ; preds = %cond.end.243
  %175 = load i64, i64* %shift, align 8
  %sub258 = sub i64 -1021, %175
  br label %cond.end.259

cond.end.259:                                     ; preds = %cond.false.257, %cond.true.256
  %cond260 = phi i64 [ %174, %cond.true.256 ], [ %sub258, %cond.false.257 ]
  %sub261 = sub i64 %cond260, 53
  store i64 %sub261, i64* %extra_bits, align 8
  %176 = load i64, i64* %extra_bits, align 8
  %sub262 = sub i64 %176, 1
  %sh_prom = trunc i64 %sub262 to i32
  %shl = shl i32 1, %sh_prom
  store i32 %shl, i32* %mask, align 4
  %177 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit263 = getelementptr inbounds %struct._longobject, %struct._longobject* %177, i32 0, i32 1
  %arrayidx264 = getelementptr [1 x i32], [1 x i32]* %ob_digit263, i32 0, i64 0
  %178 = load i32, i32* %arrayidx264, align 4
  %179 = load i32, i32* %inexact, align 4
  %or = or i32 %178, %179
  store i32 %or, i32* %low, align 4
  %180 = load i32, i32* %low, align 4
  %181 = load i32, i32* %mask, align 4
  %and265 = and i32 %180, %181
  %tobool266 = icmp ne i32 %and265, 0
  br i1 %tobool266, label %land.lhs.true.267, label %if.end.274

land.lhs.true.267:                                ; preds = %cond.end.259
  %182 = load i32, i32* %low, align 4
  %183 = load i32, i32* %mask, align 4
  %mul268 = mul i32 3, %183
  %sub269 = sub i32 %mul268, 1
  %and270 = and i32 %182, %sub269
  %tobool271 = icmp ne i32 %and270, 0
  br i1 %tobool271, label %if.then.272, label %if.end.274

if.then.272:                                      ; preds = %land.lhs.true.267
  %184 = load i32, i32* %mask, align 4
  %185 = load i32, i32* %low, align 4
  %add273 = add i32 %185, %184
  store i32 %add273, i32* %low, align 4
  br label %if.end.274

if.end.274:                                       ; preds = %if.then.272, %land.lhs.true.267, %cond.end.259
  %186 = load i32, i32* %low, align 4
  %187 = load i32, i32* %mask, align 4
  %sub275 = sub i32 %187, 1
  %neg = xor i32 %sub275, -1
  %and276 = and i32 %186, %neg
  %188 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit277 = getelementptr inbounds %struct._longobject, %struct._longobject* %188, i32 0, i32 1
  %arrayidx278 = getelementptr [1 x i32], [1 x i32]* %ob_digit277, i32 0, i64 0
  store i32 %and276, i32* %arrayidx278, align 4
  %189 = load i64, i64* %x_size, align 8
  %dec279 = add i64 %189, -1
  store i64 %dec279, i64* %x_size, align 8
  %190 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit280 = getelementptr inbounds %struct._longobject, %struct._longobject* %190, i32 0, i32 1
  %arrayidx281 = getelementptr [1 x i32], [1 x i32]* %ob_digit280, i32 0, i64 %dec279
  %191 = load i32, i32* %arrayidx281, align 4
  %conv282 = uitofp i32 %191 to double
  store double %conv282, double* %dx, align 8
  br label %while.cond.283

while.cond.283:                                   ; preds = %while.body.286, %if.end.274
  %192 = load i64, i64* %x_size, align 8
  %cmp284 = icmp sgt i64 %192, 0
  br i1 %cmp284, label %while.body.286, label %while.end.293

while.body.286:                                   ; preds = %while.cond.283
  %193 = load double, double* %dx, align 8
  %mul287 = fmul double %193, 0x41D0000000000000
  %194 = load i64, i64* %x_size, align 8
  %dec288 = add i64 %194, -1
  store i64 %dec288, i64* %x_size, align 8
  %195 = load %struct._longobject*, %struct._longobject** %x, align 8
  %ob_digit289 = getelementptr inbounds %struct._longobject, %struct._longobject* %195, i32 0, i32 1
  %arrayidx290 = getelementptr [1 x i32], [1 x i32]* %ob_digit289, i32 0, i64 %dec288
  %196 = load i32, i32* %arrayidx290, align 4
  %conv291 = uitofp i32 %196 to double
  %add292 = fadd double %mul287, %conv291
  store double %add292, double* %dx, align 8
  br label %while.cond.283

while.end.293:                                    ; preds = %while.cond.283
  br label %do.body.294

do.body.294:                                      ; preds = %while.end.293
  %197 = load %struct._longobject*, %struct._longobject** %x, align 8
  %198 = bitcast %struct._longobject* %197 to %struct._object*
  store %struct._object* %198, %struct._object** %_py_decref_tmp295, align 8
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp295, align 8
  %ob_refcnt296 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 0
  %200 = load i64, i64* %ob_refcnt296, align 8
  %dec297 = add i64 %200, -1
  store i64 %dec297, i64* %ob_refcnt296, align 8
  %cmp298 = icmp ne i64 %dec297, 0
  br i1 %cmp298, label %if.then.300, label %if.else.301

if.then.300:                                      ; preds = %do.body.294
  br label %if.end.304

if.else.301:                                      ; preds = %do.body.294
  %201 = load %struct._object*, %struct._object** %_py_decref_tmp295, align 8
  %ob_type302 = getelementptr inbounds %struct._object, %struct._object* %201, i32 0, i32 1
  %202 = load %struct._typeobject*, %struct._typeobject** %ob_type302, align 8
  %tp_dealloc303 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %202, i32 0, i32 4
  %203 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc303, align 8
  %204 = load %struct._object*, %struct._object** %_py_decref_tmp295, align 8
  call void %203(%struct._object* %204)
  br label %if.end.304

if.end.304:                                       ; preds = %if.else.301, %if.then.300
  br label %do.end.305

do.end.305:                                       ; preds = %if.end.304
  %205 = load i64, i64* %shift, align 8
  %206 = load i64, i64* %x_bits, align 8
  %add306 = add i64 %205, %206
  %cmp307 = icmp sge i64 %add306, 1024
  br i1 %cmp307, label %land.lhs.true.309, label %if.end.319

land.lhs.true.309:                                ; preds = %do.end.305
  %207 = load i64, i64* %shift, align 8
  %208 = load i64, i64* %x_bits, align 8
  %add310 = add i64 %207, %208
  %cmp311 = icmp sgt i64 %add310, 1024
  br i1 %cmp311, label %if.then.318, label %lor.lhs.false.313

lor.lhs.false.313:                                ; preds = %land.lhs.true.309
  %209 = load double, double* %dx, align 8
  %210 = load i64, i64* %x_bits, align 8
  %conv314 = trunc i64 %210 to i32
  %call315 = call double @ldexp(double 1.000000e+00, i32 %conv314) #4
  %cmp316 = fcmp oeq double %209, %call315
  br i1 %cmp316, label %if.then.318, label %if.end.319

if.then.318:                                      ; preds = %lor.lhs.false.313, %land.lhs.true.309
  br label %overflow

if.end.319:                                       ; preds = %lor.lhs.false.313, %do.end.305
  %211 = load double, double* %dx, align 8
  %212 = load i64, i64* %shift, align 8
  %conv320 = trunc i64 %212 to i32
  %call321 = call double @ldexp(double %211, i32 %conv320) #4
  store double %call321, double* %result, align 8
  br label %success

success:                                          ; preds = %if.end.319, %while.end.75
  %213 = load i32, i32* %negate, align 4
  %tobool322 = icmp ne i32 %213, 0
  br i1 %tobool322, label %cond.true.323, label %cond.false.325

cond.true.323:                                    ; preds = %success
  %214 = load double, double* %result, align 8
  %sub324 = fsub double -0.000000e+00, %214
  br label %cond.end.326

cond.false.325:                                   ; preds = %success
  %215 = load double, double* %result, align 8
  br label %cond.end.326

cond.end.326:                                     ; preds = %cond.false.325, %cond.true.323
  %cond327 = phi double [ %sub324, %cond.true.323 ], [ %215, %cond.false.325 ]
  %call328 = call %struct._object* @PyFloat_FromDouble(double %cond327)
  store %struct._object* %call328, %struct._object** %retval
  br label %return

underflow_or_zero:                                ; preds = %if.then.104, %if.then.83, %if.then.28
  %216 = load i32, i32* %negate, align 4
  %tobool329 = icmp ne i32 %216, 0
  %cond330 = select i1 %tobool329, double -0.000000e+00, double 0.000000e+00
  %call331 = call %struct._object* @PyFloat_FromDouble(double %cond330)
  store %struct._object* %call331, %struct._object** %retval
  br label %return

overflow:                                         ; preds = %if.then.318, %if.then.100, %if.then.80
  %217 = load %struct._object*, %struct._object** @PyExc_OverflowError, align 8
  call void @PyErr_SetString(%struct._object* %217, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i32 0, i32 0))
  br label %error

error:                                            ; preds = %overflow, %if.then.216, %if.then.155, %if.then.130, %if.then.123, %if.then.24
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %error, %underflow_or_zero, %cond.end.326, %if.then
  %218 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %218
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @k_mul(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %asize = alloca i64, align 8
  %bsize = alloca i64, align 8
  %ah = alloca %struct._longobject*, align 8
  %al = alloca %struct._longobject*, align 8
  %bh = alloca %struct._longobject*, align 8
  %bl = alloca %struct._longobject*, align 8
  %ret = alloca %struct._longobject*, align 8
  %t1 = alloca %struct._longobject*, align 8
  %t2 = alloca %struct._longobject*, align 8
  %t3 = alloca %struct._longobject*, align 8
  %shift = alloca i64, align 8
  %i = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp109 = alloca %struct._object*, align 8
  %_py_decref_tmp128 = alloca %struct._object*, align 8
  %_py_decref_tmp145 = alloca %struct._object*, align 8
  %_py_decref_tmp157 = alloca %struct._object*, align 8
  %_py_decref_tmp179 = alloca %struct._object*, align 8
  %_py_decref_tmp193 = alloca %struct._object*, align 8
  %_py_decref_tmp205 = alloca %struct._object*, align 8
  %_py_decref_tmp218 = alloca %struct._object*, align 8
  %_py_decref_tmp230 = alloca %struct._object*, align 8
  %_py_decref_tmp253 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp270 = alloca %struct._object*, align 8
  %_py_xdecref_tmp284 = alloca %struct._object*, align 8
  %_py_decref_tmp289 = alloca %struct._object*, align 8
  %_py_xdecref_tmp303 = alloca %struct._object*, align 8
  %_py_decref_tmp308 = alloca %struct._object*, align 8
  %_py_xdecref_tmp322 = alloca %struct._object*, align 8
  %_py_decref_tmp327 = alloca %struct._object*, align 8
  %_py_xdecref_tmp341 = alloca %struct._object*, align 8
  %_py_decref_tmp346 = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %asize, align 8
  %9 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  br i1 %cmp4, label %cond.true.5, label %cond.false.8

cond.true.5:                                      ; preds = %cond.end
  %12 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %14
  br label %cond.end.10

cond.false.8:                                     ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.5
  %cond11 = phi i64 [ %sub7, %cond.true.5 ], [ %17, %cond.false.8 ]
  store i64 %cond11, i64* %bsize, align 8
  store %struct._longobject* null, %struct._longobject** %ah, align 8
  store %struct._longobject* null, %struct._longobject** %al, align 8
  store %struct._longobject* null, %struct._longobject** %bh, align 8
  store %struct._longobject* null, %struct._longobject** %bl, align 8
  store %struct._longobject* null, %struct._longobject** %ret, align 8
  %18 = load i64, i64* %asize, align 8
  %19 = load i64, i64* %bsize, align 8
  %cmp12 = icmp sgt i64 %18, %19
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.10
  %20 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %20, %struct._longobject** %t1, align 8
  %21 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  store %struct._longobject* %21, %struct._longobject** %a.addr, align 8
  %22 = load %struct._longobject*, %struct._longobject** %t1, align 8
  store %struct._longobject* %22, %struct._longobject** %b.addr, align 8
  %23 = load i64, i64* %asize, align 8
  store i64 %23, i64* %i, align 8
  %24 = load i64, i64* %bsize, align 8
  store i64 %24, i64* %asize, align 8
  %25 = load i64, i64* %i, align 8
  store i64 %25, i64* %bsize, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.10
  %26 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %27 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %cmp13 = icmp eq %struct._longobject* %26, %27
  %cond14 = select i1 %cmp13, i32 140, i32 70
  %conv = sext i32 %cond14 to i64
  store i64 %conv, i64* %i, align 8
  %28 = load i64, i64* %asize, align 8
  %29 = load i64, i64* %i, align 8
  %cmp15 = icmp sle i64 %28, %29
  br i1 %cmp15, label %if.then.17, label %if.end.22

if.then.17:                                       ; preds = %if.end
  %30 = load i64, i64* %asize, align 8
  %cmp18 = icmp eq i64 %30, 0
  br i1 %cmp18, label %if.then.20, label %if.else

if.then.20:                                       ; preds = %if.then.17
  %call = call %struct._object* @PyLong_FromLong(i64 0)
  %31 = bitcast %struct._object* %call to %struct._longobject*
  store %struct._longobject* %31, %struct._longobject** %retval
  br label %return

if.else:                                          ; preds = %if.then.17
  %32 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %33 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call21 = call %struct._longobject* @x_mul(%struct._longobject* %32, %struct._longobject* %33)
  store %struct._longobject* %call21, %struct._longobject** %retval
  br label %return

if.end.22:                                        ; preds = %if.end
  %34 = load i64, i64* %asize, align 8
  %mul = mul i64 2, %34
  %35 = load i64, i64* %bsize, align 8
  %cmp23 = icmp sle i64 %mul, %35
  br i1 %cmp23, label %if.then.25, label %if.end.27

if.then.25:                                       ; preds = %if.end.22
  %36 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %37 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %call26 = call %struct._longobject* @k_lopsided_mul(%struct._longobject* %36, %struct._longobject* %37)
  store %struct._longobject* %call26, %struct._longobject** %retval
  br label %return

if.end.27:                                        ; preds = %if.end.22
  %38 = load i64, i64* %bsize, align 8
  %shr = ashr i64 %38, 1
  store i64 %shr, i64* %shift, align 8
  %39 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %40 = load i64, i64* %shift, align 8
  %call28 = call i32 @kmul_split(%struct._longobject* %39, i64 %40, %struct._longobject** %ah, %struct._longobject** %al)
  %cmp29 = icmp slt i32 %call28, 0
  br i1 %cmp29, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %if.end.27
  br label %fail

if.end.32:                                        ; preds = %if.end.27
  %41 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %42 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %cmp33 = icmp eq %struct._longobject* %41, %42
  br i1 %cmp33, label %if.then.35, label %if.else.38

if.then.35:                                       ; preds = %if.end.32
  %43 = load %struct._longobject*, %struct._longobject** %ah, align 8
  store %struct._longobject* %43, %struct._longobject** %bh, align 8
  %44 = load %struct._longobject*, %struct._longobject** %al, align 8
  store %struct._longobject* %44, %struct._longobject** %bl, align 8
  %45 = load %struct._longobject*, %struct._longobject** %bh, align 8
  %46 = bitcast %struct._longobject* %45 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %46, i32 0, i32 0
  %47 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %47, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  %48 = load %struct._longobject*, %struct._longobject** %bl, align 8
  %49 = bitcast %struct._longobject* %48 to %struct._object*
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %49, i32 0, i32 0
  %50 = load i64, i64* %ob_refcnt36, align 8
  %inc37 = add i64 %50, 1
  store i64 %inc37, i64* %ob_refcnt36, align 8
  br label %if.end.44

if.else.38:                                       ; preds = %if.end.32
  %51 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %52 = load i64, i64* %shift, align 8
  %call39 = call i32 @kmul_split(%struct._longobject* %51, i64 %52, %struct._longobject** %bh, %struct._longobject** %bl)
  %cmp40 = icmp slt i32 %call39, 0
  br i1 %cmp40, label %if.then.42, label %if.end.43

if.then.42:                                       ; preds = %if.else.38
  br label %fail

if.end.43:                                        ; preds = %if.else.38
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.then.35
  %53 = load i64, i64* %asize, align 8
  %54 = load i64, i64* %bsize, align 8
  %add = add i64 %53, %54
  %call45 = call %struct._longobject* @_PyLong_New(i64 %add)
  store %struct._longobject* %call45, %struct._longobject** %ret, align 8
  %55 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %cmp46 = icmp eq %struct._longobject* %55, null
  br i1 %cmp46, label %if.then.48, label %if.end.49

if.then.48:                                       ; preds = %if.end.44
  br label %fail

if.end.49:                                        ; preds = %if.end.44
  %56 = load %struct._longobject*, %struct._longobject** %ah, align 8
  %57 = load %struct._longobject*, %struct._longobject** %bh, align 8
  %call50 = call %struct._longobject* @k_mul(%struct._longobject* %56, %struct._longobject* %57)
  store %struct._longobject* %call50, %struct._longobject** %t1, align 8
  %cmp51 = icmp eq %struct._longobject* %call50, null
  br i1 %cmp51, label %if.then.53, label %if.end.54

if.then.53:                                       ; preds = %if.end.49
  br label %fail

if.end.54:                                        ; preds = %if.end.49
  %58 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %58, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  %59 = load i64, i64* %shift, align 8
  %mul55 = mul i64 2, %59
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 %mul55
  %60 = bitcast i32* %add.ptr to i8*
  %61 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %ob_digit56 = getelementptr inbounds %struct._longobject, %struct._longobject* %61, i32 0, i32 1
  %62 = bitcast [1 x i32]* %ob_digit56 to i8*
  %63 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %64 = bitcast %struct._longobject* %63 to %struct.PyVarObject*
  %ob_size57 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %64, i32 0, i32 1
  %65 = load i64, i64* %ob_size57, align 8
  %mul58 = mul i64 %65, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %62, i64 %mul58, i32 4, i1 false)
  %66 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %67 = bitcast %struct._longobject* %66 to %struct.PyVarObject*
  %ob_size59 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %67, i32 0, i32 1
  %68 = load i64, i64* %ob_size59, align 8
  %69 = load i64, i64* %shift, align 8
  %mul60 = mul i64 2, %69
  %sub61 = sub i64 %68, %mul60
  %70 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %71 = bitcast %struct._longobject* %70 to %struct.PyVarObject*
  %ob_size62 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %71, i32 0, i32 1
  %72 = load i64, i64* %ob_size62, align 8
  %sub63 = sub i64 %sub61, %72
  store i64 %sub63, i64* %i, align 8
  %73 = load i64, i64* %i, align 8
  %tobool = icmp ne i64 %73, 0
  br i1 %tobool, label %if.then.64, label %if.end.72

if.then.64:                                       ; preds = %if.end.54
  %74 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit65 = getelementptr inbounds %struct._longobject, %struct._longobject* %74, i32 0, i32 1
  %arraydecay66 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit65, i32 0, i32 0
  %75 = load i64, i64* %shift, align 8
  %mul67 = mul i64 2, %75
  %add.ptr68 = getelementptr i32, i32* %arraydecay66, i64 %mul67
  %76 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %77 = bitcast %struct._longobject* %76 to %struct.PyVarObject*
  %ob_size69 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %77, i32 0, i32 1
  %78 = load i64, i64* %ob_size69, align 8
  %add.ptr70 = getelementptr i32, i32* %add.ptr68, i64 %78
  %79 = bitcast i32* %add.ptr70 to i8*
  %80 = load i64, i64* %i, align 8
  %mul71 = mul i64 %80, 4
  call void @llvm.memset.p0i8.i64(i8* %79, i8 0, i64 %mul71, i32 4, i1 false)
  br label %if.end.72

if.end.72:                                        ; preds = %if.then.64, %if.end.54
  %81 = load %struct._longobject*, %struct._longobject** %al, align 8
  %82 = load %struct._longobject*, %struct._longobject** %bl, align 8
  %call73 = call %struct._longobject* @k_mul(%struct._longobject* %81, %struct._longobject* %82)
  store %struct._longobject* %call73, %struct._longobject** %t2, align 8
  %cmp74 = icmp eq %struct._longobject* %call73, null
  br i1 %cmp74, label %if.then.76, label %if.end.83

if.then.76:                                       ; preds = %if.end.72
  br label %do.body

do.body:                                          ; preds = %if.then.76
  %83 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %84 = bitcast %struct._longobject* %83 to %struct._object*
  store %struct._object* %84, %struct._object** %_py_decref_tmp, align 8
  %85 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt77 = getelementptr inbounds %struct._object, %struct._object* %85, i32 0, i32 0
  %86 = load i64, i64* %ob_refcnt77, align 8
  %dec = add i64 %86, -1
  store i64 %dec, i64* %ob_refcnt77, align 8
  %cmp78 = icmp ne i64 %dec, 0
  br i1 %cmp78, label %if.then.80, label %if.else.81

if.then.80:                                       ; preds = %do.body
  br label %if.end.82

if.else.81:                                       ; preds = %do.body
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %87, i32 0, i32 1
  %88 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %88, i32 0, i32 4
  %89 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %89(%struct._object* %90)
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.81, %if.then.80
  br label %do.end

do.end:                                           ; preds = %if.end.82
  br label %fail

if.end.83:                                        ; preds = %if.end.72
  %91 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit84 = getelementptr inbounds %struct._longobject, %struct._longobject* %91, i32 0, i32 1
  %92 = bitcast [1 x i32]* %ob_digit84 to i8*
  %93 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %ob_digit85 = getelementptr inbounds %struct._longobject, %struct._longobject* %93, i32 0, i32 1
  %94 = bitcast [1 x i32]* %ob_digit85 to i8*
  %95 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %96 = bitcast %struct._longobject* %95 to %struct.PyVarObject*
  %ob_size86 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %96, i32 0, i32 1
  %97 = load i64, i64* %ob_size86, align 8
  %mul87 = mul i64 %97, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %94, i64 %mul87, i32 4, i1 false)
  %98 = load i64, i64* %shift, align 8
  %mul88 = mul i64 2, %98
  %99 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %100 = bitcast %struct._longobject* %99 to %struct.PyVarObject*
  %ob_size89 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %100, i32 0, i32 1
  %101 = load i64, i64* %ob_size89, align 8
  %sub90 = sub i64 %mul88, %101
  store i64 %sub90, i64* %i, align 8
  %102 = load i64, i64* %i, align 8
  %tobool91 = icmp ne i64 %102, 0
  br i1 %tobool91, label %if.then.92, label %if.end.98

if.then.92:                                       ; preds = %if.end.83
  %103 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit93 = getelementptr inbounds %struct._longobject, %struct._longobject* %103, i32 0, i32 1
  %arraydecay94 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit93, i32 0, i32 0
  %104 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %105 = bitcast %struct._longobject* %104 to %struct.PyVarObject*
  %ob_size95 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %105, i32 0, i32 1
  %106 = load i64, i64* %ob_size95, align 8
  %add.ptr96 = getelementptr i32, i32* %arraydecay94, i64 %106
  %107 = bitcast i32* %add.ptr96 to i8*
  %108 = load i64, i64* %i, align 8
  %mul97 = mul i64 %108, 4
  call void @llvm.memset.p0i8.i64(i8* %107, i8 0, i64 %mul97, i32 4, i1 false)
  br label %if.end.98

if.end.98:                                        ; preds = %if.then.92, %if.end.83
  %109 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %110 = bitcast %struct._longobject* %109 to %struct.PyVarObject*
  %ob_size99 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %110, i32 0, i32 1
  %111 = load i64, i64* %ob_size99, align 8
  %112 = load i64, i64* %shift, align 8
  %sub100 = sub i64 %111, %112
  store i64 %sub100, i64* %i, align 8
  %113 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit101 = getelementptr inbounds %struct._longobject, %struct._longobject* %113, i32 0, i32 1
  %arraydecay102 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit101, i32 0, i32 0
  %114 = load i64, i64* %shift, align 8
  %add.ptr103 = getelementptr i32, i32* %arraydecay102, i64 %114
  %115 = load i64, i64* %i, align 8
  %116 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %ob_digit104 = getelementptr inbounds %struct._longobject, %struct._longobject* %116, i32 0, i32 1
  %arraydecay105 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit104, i32 0, i32 0
  %117 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %118 = bitcast %struct._longobject* %117 to %struct.PyVarObject*
  %ob_size106 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %118, i32 0, i32 1
  %119 = load i64, i64* %ob_size106, align 8
  %call107 = call i32 @v_isub(i32* %add.ptr103, i64 %115, i32* %arraydecay105, i64 %119)
  br label %do.body.108

do.body.108:                                      ; preds = %if.end.98
  %120 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %121 = bitcast %struct._longobject* %120 to %struct._object*
  store %struct._object* %121, %struct._object** %_py_decref_tmp109, align 8
  %122 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8
  %ob_refcnt110 = getelementptr inbounds %struct._object, %struct._object* %122, i32 0, i32 0
  %123 = load i64, i64* %ob_refcnt110, align 8
  %dec111 = add i64 %123, -1
  store i64 %dec111, i64* %ob_refcnt110, align 8
  %cmp112 = icmp ne i64 %dec111, 0
  br i1 %cmp112, label %if.then.114, label %if.else.115

if.then.114:                                      ; preds = %do.body.108
  br label %if.end.118

if.else.115:                                      ; preds = %do.body.108
  %124 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8
  %ob_type116 = getelementptr inbounds %struct._object, %struct._object* %124, i32 0, i32 1
  %125 = load %struct._typeobject*, %struct._typeobject** %ob_type116, align 8
  %tp_dealloc117 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %125, i32 0, i32 4
  %126 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc117, align 8
  %127 = load %struct._object*, %struct._object** %_py_decref_tmp109, align 8
  call void %126(%struct._object* %127)
  br label %if.end.118

if.end.118:                                       ; preds = %if.else.115, %if.then.114
  br label %do.end.119

do.end.119:                                       ; preds = %if.end.118
  %128 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit120 = getelementptr inbounds %struct._longobject, %struct._longobject* %128, i32 0, i32 1
  %arraydecay121 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit120, i32 0, i32 0
  %129 = load i64, i64* %shift, align 8
  %add.ptr122 = getelementptr i32, i32* %arraydecay121, i64 %129
  %130 = load i64, i64* %i, align 8
  %131 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %ob_digit123 = getelementptr inbounds %struct._longobject, %struct._longobject* %131, i32 0, i32 1
  %arraydecay124 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit123, i32 0, i32 0
  %132 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %133 = bitcast %struct._longobject* %132 to %struct.PyVarObject*
  %ob_size125 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %133, i32 0, i32 1
  %134 = load i64, i64* %ob_size125, align 8
  %call126 = call i32 @v_isub(i32* %add.ptr122, i64 %130, i32* %arraydecay124, i64 %134)
  br label %do.body.127

do.body.127:                                      ; preds = %do.end.119
  %135 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %136 = bitcast %struct._longobject* %135 to %struct._object*
  store %struct._object* %136, %struct._object** %_py_decref_tmp128, align 8
  %137 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  %ob_refcnt129 = getelementptr inbounds %struct._object, %struct._object* %137, i32 0, i32 0
  %138 = load i64, i64* %ob_refcnt129, align 8
  %dec130 = add i64 %138, -1
  store i64 %dec130, i64* %ob_refcnt129, align 8
  %cmp131 = icmp ne i64 %dec130, 0
  br i1 %cmp131, label %if.then.133, label %if.else.134

if.then.133:                                      ; preds = %do.body.127
  br label %if.end.137

if.else.134:                                      ; preds = %do.body.127
  %139 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  %ob_type135 = getelementptr inbounds %struct._object, %struct._object* %139, i32 0, i32 1
  %140 = load %struct._typeobject*, %struct._typeobject** %ob_type135, align 8
  %tp_dealloc136 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %140, i32 0, i32 4
  %141 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc136, align 8
  %142 = load %struct._object*, %struct._object** %_py_decref_tmp128, align 8
  call void %141(%struct._object* %142)
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.134, %if.then.133
  br label %do.end.138

do.end.138:                                       ; preds = %if.end.137
  %143 = load %struct._longobject*, %struct._longobject** %ah, align 8
  %144 = load %struct._longobject*, %struct._longobject** %al, align 8
  %call139 = call %struct._longobject* @x_add(%struct._longobject* %143, %struct._longobject* %144)
  store %struct._longobject* %call139, %struct._longobject** %t1, align 8
  %cmp140 = icmp eq %struct._longobject* %call139, null
  br i1 %cmp140, label %if.then.142, label %if.end.143

if.then.142:                                      ; preds = %do.end.138
  br label %fail

if.end.143:                                       ; preds = %do.end.138
  br label %do.body.144

do.body.144:                                      ; preds = %if.end.143
  %145 = load %struct._longobject*, %struct._longobject** %ah, align 8
  %146 = bitcast %struct._longobject* %145 to %struct._object*
  store %struct._object* %146, %struct._object** %_py_decref_tmp145, align 8
  %147 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8
  %ob_refcnt146 = getelementptr inbounds %struct._object, %struct._object* %147, i32 0, i32 0
  %148 = load i64, i64* %ob_refcnt146, align 8
  %dec147 = add i64 %148, -1
  store i64 %dec147, i64* %ob_refcnt146, align 8
  %cmp148 = icmp ne i64 %dec147, 0
  br i1 %cmp148, label %if.then.150, label %if.else.151

if.then.150:                                      ; preds = %do.body.144
  br label %if.end.154

if.else.151:                                      ; preds = %do.body.144
  %149 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8
  %ob_type152 = getelementptr inbounds %struct._object, %struct._object* %149, i32 0, i32 1
  %150 = load %struct._typeobject*, %struct._typeobject** %ob_type152, align 8
  %tp_dealloc153 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %150, i32 0, i32 4
  %151 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc153, align 8
  %152 = load %struct._object*, %struct._object** %_py_decref_tmp145, align 8
  call void %151(%struct._object* %152)
  br label %if.end.154

if.end.154:                                       ; preds = %if.else.151, %if.then.150
  br label %do.end.155

do.end.155:                                       ; preds = %if.end.154
  br label %do.body.156

do.body.156:                                      ; preds = %do.end.155
  %153 = load %struct._longobject*, %struct._longobject** %al, align 8
  %154 = bitcast %struct._longobject* %153 to %struct._object*
  store %struct._object* %154, %struct._object** %_py_decref_tmp157, align 8
  %155 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  %ob_refcnt158 = getelementptr inbounds %struct._object, %struct._object* %155, i32 0, i32 0
  %156 = load i64, i64* %ob_refcnt158, align 8
  %dec159 = add i64 %156, -1
  store i64 %dec159, i64* %ob_refcnt158, align 8
  %cmp160 = icmp ne i64 %dec159, 0
  br i1 %cmp160, label %if.then.162, label %if.else.163

if.then.162:                                      ; preds = %do.body.156
  br label %if.end.166

if.else.163:                                      ; preds = %do.body.156
  %157 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  %ob_type164 = getelementptr inbounds %struct._object, %struct._object* %157, i32 0, i32 1
  %158 = load %struct._typeobject*, %struct._typeobject** %ob_type164, align 8
  %tp_dealloc165 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %158, i32 0, i32 4
  %159 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc165, align 8
  %160 = load %struct._object*, %struct._object** %_py_decref_tmp157, align 8
  call void %159(%struct._object* %160)
  br label %if.end.166

if.end.166:                                       ; preds = %if.else.163, %if.then.162
  br label %do.end.167

do.end.167:                                       ; preds = %if.end.166
  store %struct._longobject* null, %struct._longobject** %al, align 8
  store %struct._longobject* null, %struct._longobject** %ah, align 8
  %161 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %162 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %cmp168 = icmp eq %struct._longobject* %161, %162
  br i1 %cmp168, label %if.then.170, label %if.else.173

if.then.170:                                      ; preds = %do.end.167
  %163 = load %struct._longobject*, %struct._longobject** %t1, align 8
  store %struct._longobject* %163, %struct._longobject** %t2, align 8
  %164 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %165 = bitcast %struct._longobject* %164 to %struct._object*
  %ob_refcnt171 = getelementptr inbounds %struct._object, %struct._object* %165, i32 0, i32 0
  %166 = load i64, i64* %ob_refcnt171, align 8
  %inc172 = add i64 %166, 1
  store i64 %inc172, i64* %ob_refcnt171, align 8
  br label %if.end.191

if.else.173:                                      ; preds = %do.end.167
  %167 = load %struct._longobject*, %struct._longobject** %bh, align 8
  %168 = load %struct._longobject*, %struct._longobject** %bl, align 8
  %call174 = call %struct._longobject* @x_add(%struct._longobject* %167, %struct._longobject* %168)
  store %struct._longobject* %call174, %struct._longobject** %t2, align 8
  %cmp175 = icmp eq %struct._longobject* %call174, null
  br i1 %cmp175, label %if.then.177, label %if.end.190

if.then.177:                                      ; preds = %if.else.173
  br label %do.body.178

do.body.178:                                      ; preds = %if.then.177
  %169 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %170 = bitcast %struct._longobject* %169 to %struct._object*
  store %struct._object* %170, %struct._object** %_py_decref_tmp179, align 8
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp179, align 8
  %ob_refcnt180 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 0
  %172 = load i64, i64* %ob_refcnt180, align 8
  %dec181 = add i64 %172, -1
  store i64 %dec181, i64* %ob_refcnt180, align 8
  %cmp182 = icmp ne i64 %dec181, 0
  br i1 %cmp182, label %if.then.184, label %if.else.185

if.then.184:                                      ; preds = %do.body.178
  br label %if.end.188

if.else.185:                                      ; preds = %do.body.178
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp179, align 8
  %ob_type186 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 1
  %174 = load %struct._typeobject*, %struct._typeobject** %ob_type186, align 8
  %tp_dealloc187 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %174, i32 0, i32 4
  %175 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc187, align 8
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp179, align 8
  call void %175(%struct._object* %176)
  br label %if.end.188

if.end.188:                                       ; preds = %if.else.185, %if.then.184
  br label %do.end.189

do.end.189:                                       ; preds = %if.end.188
  br label %fail

if.end.190:                                       ; preds = %if.else.173
  br label %if.end.191

if.end.191:                                       ; preds = %if.end.190, %if.then.170
  br label %do.body.192

do.body.192:                                      ; preds = %if.end.191
  %177 = load %struct._longobject*, %struct._longobject** %bh, align 8
  %178 = bitcast %struct._longobject* %177 to %struct._object*
  store %struct._object* %178, %struct._object** %_py_decref_tmp193, align 8
  %179 = load %struct._object*, %struct._object** %_py_decref_tmp193, align 8
  %ob_refcnt194 = getelementptr inbounds %struct._object, %struct._object* %179, i32 0, i32 0
  %180 = load i64, i64* %ob_refcnt194, align 8
  %dec195 = add i64 %180, -1
  store i64 %dec195, i64* %ob_refcnt194, align 8
  %cmp196 = icmp ne i64 %dec195, 0
  br i1 %cmp196, label %if.then.198, label %if.else.199

if.then.198:                                      ; preds = %do.body.192
  br label %if.end.202

if.else.199:                                      ; preds = %do.body.192
  %181 = load %struct._object*, %struct._object** %_py_decref_tmp193, align 8
  %ob_type200 = getelementptr inbounds %struct._object, %struct._object* %181, i32 0, i32 1
  %182 = load %struct._typeobject*, %struct._typeobject** %ob_type200, align 8
  %tp_dealloc201 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %182, i32 0, i32 4
  %183 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc201, align 8
  %184 = load %struct._object*, %struct._object** %_py_decref_tmp193, align 8
  call void %183(%struct._object* %184)
  br label %if.end.202

if.end.202:                                       ; preds = %if.else.199, %if.then.198
  br label %do.end.203

do.end.203:                                       ; preds = %if.end.202
  br label %do.body.204

do.body.204:                                      ; preds = %do.end.203
  %185 = load %struct._longobject*, %struct._longobject** %bl, align 8
  %186 = bitcast %struct._longobject* %185 to %struct._object*
  store %struct._object* %186, %struct._object** %_py_decref_tmp205, align 8
  %187 = load %struct._object*, %struct._object** %_py_decref_tmp205, align 8
  %ob_refcnt206 = getelementptr inbounds %struct._object, %struct._object* %187, i32 0, i32 0
  %188 = load i64, i64* %ob_refcnt206, align 8
  %dec207 = add i64 %188, -1
  store i64 %dec207, i64* %ob_refcnt206, align 8
  %cmp208 = icmp ne i64 %dec207, 0
  br i1 %cmp208, label %if.then.210, label %if.else.211

if.then.210:                                      ; preds = %do.body.204
  br label %if.end.214

if.else.211:                                      ; preds = %do.body.204
  %189 = load %struct._object*, %struct._object** %_py_decref_tmp205, align 8
  %ob_type212 = getelementptr inbounds %struct._object, %struct._object* %189, i32 0, i32 1
  %190 = load %struct._typeobject*, %struct._typeobject** %ob_type212, align 8
  %tp_dealloc213 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %190, i32 0, i32 4
  %191 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc213, align 8
  %192 = load %struct._object*, %struct._object** %_py_decref_tmp205, align 8
  call void %191(%struct._object* %192)
  br label %if.end.214

if.end.214:                                       ; preds = %if.else.211, %if.then.210
  br label %do.end.215

do.end.215:                                       ; preds = %if.end.214
  store %struct._longobject* null, %struct._longobject** %bl, align 8
  store %struct._longobject* null, %struct._longobject** %bh, align 8
  %193 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %194 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %call216 = call %struct._longobject* @k_mul(%struct._longobject* %193, %struct._longobject* %194)
  store %struct._longobject* %call216, %struct._longobject** %t3, align 8
  br label %do.body.217

do.body.217:                                      ; preds = %do.end.215
  %195 = load %struct._longobject*, %struct._longobject** %t1, align 8
  %196 = bitcast %struct._longobject* %195 to %struct._object*
  store %struct._object* %196, %struct._object** %_py_decref_tmp218, align 8
  %197 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8
  %ob_refcnt219 = getelementptr inbounds %struct._object, %struct._object* %197, i32 0, i32 0
  %198 = load i64, i64* %ob_refcnt219, align 8
  %dec220 = add i64 %198, -1
  store i64 %dec220, i64* %ob_refcnt219, align 8
  %cmp221 = icmp ne i64 %dec220, 0
  br i1 %cmp221, label %if.then.223, label %if.else.224

if.then.223:                                      ; preds = %do.body.217
  br label %if.end.227

if.else.224:                                      ; preds = %do.body.217
  %199 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8
  %ob_type225 = getelementptr inbounds %struct._object, %struct._object* %199, i32 0, i32 1
  %200 = load %struct._typeobject*, %struct._typeobject** %ob_type225, align 8
  %tp_dealloc226 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %200, i32 0, i32 4
  %201 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc226, align 8
  %202 = load %struct._object*, %struct._object** %_py_decref_tmp218, align 8
  call void %201(%struct._object* %202)
  br label %if.end.227

if.end.227:                                       ; preds = %if.else.224, %if.then.223
  br label %do.end.228

do.end.228:                                       ; preds = %if.end.227
  br label %do.body.229

do.body.229:                                      ; preds = %do.end.228
  %203 = load %struct._longobject*, %struct._longobject** %t2, align 8
  %204 = bitcast %struct._longobject* %203 to %struct._object*
  store %struct._object* %204, %struct._object** %_py_decref_tmp230, align 8
  %205 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8
  %ob_refcnt231 = getelementptr inbounds %struct._object, %struct._object* %205, i32 0, i32 0
  %206 = load i64, i64* %ob_refcnt231, align 8
  %dec232 = add i64 %206, -1
  store i64 %dec232, i64* %ob_refcnt231, align 8
  %cmp233 = icmp ne i64 %dec232, 0
  br i1 %cmp233, label %if.then.235, label %if.else.236

if.then.235:                                      ; preds = %do.body.229
  br label %if.end.239

if.else.236:                                      ; preds = %do.body.229
  %207 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8
  %ob_type237 = getelementptr inbounds %struct._object, %struct._object* %207, i32 0, i32 1
  %208 = load %struct._typeobject*, %struct._typeobject** %ob_type237, align 8
  %tp_dealloc238 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %208, i32 0, i32 4
  %209 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc238, align 8
  %210 = load %struct._object*, %struct._object** %_py_decref_tmp230, align 8
  call void %209(%struct._object* %210)
  br label %if.end.239

if.end.239:                                       ; preds = %if.else.236, %if.then.235
  br label %do.end.240

do.end.240:                                       ; preds = %if.end.239
  %211 = load %struct._longobject*, %struct._longobject** %t3, align 8
  %cmp241 = icmp eq %struct._longobject* %211, null
  br i1 %cmp241, label %if.then.243, label %if.end.244

if.then.243:                                      ; preds = %do.end.240
  br label %fail

if.end.244:                                       ; preds = %do.end.240
  %212 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit245 = getelementptr inbounds %struct._longobject, %struct._longobject* %212, i32 0, i32 1
  %arraydecay246 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit245, i32 0, i32 0
  %213 = load i64, i64* %shift, align 8
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 %213
  %214 = load i64, i64* %i, align 8
  %215 = load %struct._longobject*, %struct._longobject** %t3, align 8
  %ob_digit248 = getelementptr inbounds %struct._longobject, %struct._longobject* %215, i32 0, i32 1
  %arraydecay249 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit248, i32 0, i32 0
  %216 = load %struct._longobject*, %struct._longobject** %t3, align 8
  %217 = bitcast %struct._longobject* %216 to %struct.PyVarObject*
  %ob_size250 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %217, i32 0, i32 1
  %218 = load i64, i64* %ob_size250, align 8
  %call251 = call i32 @v_iadd(i32* %add.ptr247, i64 %214, i32* %arraydecay249, i64 %218)
  br label %do.body.252

do.body.252:                                      ; preds = %if.end.244
  %219 = load %struct._longobject*, %struct._longobject** %t3, align 8
  %220 = bitcast %struct._longobject* %219 to %struct._object*
  store %struct._object* %220, %struct._object** %_py_decref_tmp253, align 8
  %221 = load %struct._object*, %struct._object** %_py_decref_tmp253, align 8
  %ob_refcnt254 = getelementptr inbounds %struct._object, %struct._object* %221, i32 0, i32 0
  %222 = load i64, i64* %ob_refcnt254, align 8
  %dec255 = add i64 %222, -1
  store i64 %dec255, i64* %ob_refcnt254, align 8
  %cmp256 = icmp ne i64 %dec255, 0
  br i1 %cmp256, label %if.then.258, label %if.else.259

if.then.258:                                      ; preds = %do.body.252
  br label %if.end.262

if.else.259:                                      ; preds = %do.body.252
  %223 = load %struct._object*, %struct._object** %_py_decref_tmp253, align 8
  %ob_type260 = getelementptr inbounds %struct._object, %struct._object* %223, i32 0, i32 1
  %224 = load %struct._typeobject*, %struct._typeobject** %ob_type260, align 8
  %tp_dealloc261 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %224, i32 0, i32 4
  %225 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc261, align 8
  %226 = load %struct._object*, %struct._object** %_py_decref_tmp253, align 8
  call void %225(%struct._object* %226)
  br label %if.end.262

if.end.262:                                       ; preds = %if.else.259, %if.then.258
  br label %do.end.263

do.end.263:                                       ; preds = %if.end.262
  %227 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %call264 = call %struct._longobject* @long_normalize(%struct._longobject* %227)
  store %struct._longobject* %call264, %struct._longobject** %retval
  br label %return

fail:                                             ; preds = %if.then.243, %do.end.189, %if.then.142, %do.end, %if.then.53, %if.then.48, %if.then.42, %if.then.31
  br label %do.body.265

do.body.265:                                      ; preds = %fail
  %228 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %229 = bitcast %struct._longobject* %228 to %struct._object*
  store %struct._object* %229, %struct._object** %_py_xdecref_tmp, align 8
  %230 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp266 = icmp ne %struct._object* %230, null
  br i1 %cmp266, label %if.then.268, label %if.end.281

if.then.268:                                      ; preds = %do.body.265
  br label %do.body.269

do.body.269:                                      ; preds = %if.then.268
  %231 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %231, %struct._object** %_py_decref_tmp270, align 8
  %232 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8
  %ob_refcnt271 = getelementptr inbounds %struct._object, %struct._object* %232, i32 0, i32 0
  %233 = load i64, i64* %ob_refcnt271, align 8
  %dec272 = add i64 %233, -1
  store i64 %dec272, i64* %ob_refcnt271, align 8
  %cmp273 = icmp ne i64 %dec272, 0
  br i1 %cmp273, label %if.then.275, label %if.else.276

if.then.275:                                      ; preds = %do.body.269
  br label %if.end.279

if.else.276:                                      ; preds = %do.body.269
  %234 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8
  %ob_type277 = getelementptr inbounds %struct._object, %struct._object* %234, i32 0, i32 1
  %235 = load %struct._typeobject*, %struct._typeobject** %ob_type277, align 8
  %tp_dealloc278 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %235, i32 0, i32 4
  %236 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc278, align 8
  %237 = load %struct._object*, %struct._object** %_py_decref_tmp270, align 8
  call void %236(%struct._object* %237)
  br label %if.end.279

if.end.279:                                       ; preds = %if.else.276, %if.then.275
  br label %do.end.280

do.end.280:                                       ; preds = %if.end.279
  br label %if.end.281

if.end.281:                                       ; preds = %do.end.280, %do.body.265
  br label %do.end.282

do.end.282:                                       ; preds = %if.end.281
  br label %do.body.283

do.body.283:                                      ; preds = %do.end.282
  %238 = load %struct._longobject*, %struct._longobject** %ah, align 8
  %239 = bitcast %struct._longobject* %238 to %struct._object*
  store %struct._object* %239, %struct._object** %_py_xdecref_tmp284, align 8
  %240 = load %struct._object*, %struct._object** %_py_xdecref_tmp284, align 8
  %cmp285 = icmp ne %struct._object* %240, null
  br i1 %cmp285, label %if.then.287, label %if.end.300

if.then.287:                                      ; preds = %do.body.283
  br label %do.body.288

do.body.288:                                      ; preds = %if.then.287
  %241 = load %struct._object*, %struct._object** %_py_xdecref_tmp284, align 8
  store %struct._object* %241, %struct._object** %_py_decref_tmp289, align 8
  %242 = load %struct._object*, %struct._object** %_py_decref_tmp289, align 8
  %ob_refcnt290 = getelementptr inbounds %struct._object, %struct._object* %242, i32 0, i32 0
  %243 = load i64, i64* %ob_refcnt290, align 8
  %dec291 = add i64 %243, -1
  store i64 %dec291, i64* %ob_refcnt290, align 8
  %cmp292 = icmp ne i64 %dec291, 0
  br i1 %cmp292, label %if.then.294, label %if.else.295

if.then.294:                                      ; preds = %do.body.288
  br label %if.end.298

if.else.295:                                      ; preds = %do.body.288
  %244 = load %struct._object*, %struct._object** %_py_decref_tmp289, align 8
  %ob_type296 = getelementptr inbounds %struct._object, %struct._object* %244, i32 0, i32 1
  %245 = load %struct._typeobject*, %struct._typeobject** %ob_type296, align 8
  %tp_dealloc297 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %245, i32 0, i32 4
  %246 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc297, align 8
  %247 = load %struct._object*, %struct._object** %_py_decref_tmp289, align 8
  call void %246(%struct._object* %247)
  br label %if.end.298

if.end.298:                                       ; preds = %if.else.295, %if.then.294
  br label %do.end.299

do.end.299:                                       ; preds = %if.end.298
  br label %if.end.300

if.end.300:                                       ; preds = %do.end.299, %do.body.283
  br label %do.end.301

do.end.301:                                       ; preds = %if.end.300
  br label %do.body.302

do.body.302:                                      ; preds = %do.end.301
  %248 = load %struct._longobject*, %struct._longobject** %al, align 8
  %249 = bitcast %struct._longobject* %248 to %struct._object*
  store %struct._object* %249, %struct._object** %_py_xdecref_tmp303, align 8
  %250 = load %struct._object*, %struct._object** %_py_xdecref_tmp303, align 8
  %cmp304 = icmp ne %struct._object* %250, null
  br i1 %cmp304, label %if.then.306, label %if.end.319

if.then.306:                                      ; preds = %do.body.302
  br label %do.body.307

do.body.307:                                      ; preds = %if.then.306
  %251 = load %struct._object*, %struct._object** %_py_xdecref_tmp303, align 8
  store %struct._object* %251, %struct._object** %_py_decref_tmp308, align 8
  %252 = load %struct._object*, %struct._object** %_py_decref_tmp308, align 8
  %ob_refcnt309 = getelementptr inbounds %struct._object, %struct._object* %252, i32 0, i32 0
  %253 = load i64, i64* %ob_refcnt309, align 8
  %dec310 = add i64 %253, -1
  store i64 %dec310, i64* %ob_refcnt309, align 8
  %cmp311 = icmp ne i64 %dec310, 0
  br i1 %cmp311, label %if.then.313, label %if.else.314

if.then.313:                                      ; preds = %do.body.307
  br label %if.end.317

if.else.314:                                      ; preds = %do.body.307
  %254 = load %struct._object*, %struct._object** %_py_decref_tmp308, align 8
  %ob_type315 = getelementptr inbounds %struct._object, %struct._object* %254, i32 0, i32 1
  %255 = load %struct._typeobject*, %struct._typeobject** %ob_type315, align 8
  %tp_dealloc316 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %255, i32 0, i32 4
  %256 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc316, align 8
  %257 = load %struct._object*, %struct._object** %_py_decref_tmp308, align 8
  call void %256(%struct._object* %257)
  br label %if.end.317

if.end.317:                                       ; preds = %if.else.314, %if.then.313
  br label %do.end.318

do.end.318:                                       ; preds = %if.end.317
  br label %if.end.319

if.end.319:                                       ; preds = %do.end.318, %do.body.302
  br label %do.end.320

do.end.320:                                       ; preds = %if.end.319
  br label %do.body.321

do.body.321:                                      ; preds = %do.end.320
  %258 = load %struct._longobject*, %struct._longobject** %bh, align 8
  %259 = bitcast %struct._longobject* %258 to %struct._object*
  store %struct._object* %259, %struct._object** %_py_xdecref_tmp322, align 8
  %260 = load %struct._object*, %struct._object** %_py_xdecref_tmp322, align 8
  %cmp323 = icmp ne %struct._object* %260, null
  br i1 %cmp323, label %if.then.325, label %if.end.338

if.then.325:                                      ; preds = %do.body.321
  br label %do.body.326

do.body.326:                                      ; preds = %if.then.325
  %261 = load %struct._object*, %struct._object** %_py_xdecref_tmp322, align 8
  store %struct._object* %261, %struct._object** %_py_decref_tmp327, align 8
  %262 = load %struct._object*, %struct._object** %_py_decref_tmp327, align 8
  %ob_refcnt328 = getelementptr inbounds %struct._object, %struct._object* %262, i32 0, i32 0
  %263 = load i64, i64* %ob_refcnt328, align 8
  %dec329 = add i64 %263, -1
  store i64 %dec329, i64* %ob_refcnt328, align 8
  %cmp330 = icmp ne i64 %dec329, 0
  br i1 %cmp330, label %if.then.332, label %if.else.333

if.then.332:                                      ; preds = %do.body.326
  br label %if.end.336

if.else.333:                                      ; preds = %do.body.326
  %264 = load %struct._object*, %struct._object** %_py_decref_tmp327, align 8
  %ob_type334 = getelementptr inbounds %struct._object, %struct._object* %264, i32 0, i32 1
  %265 = load %struct._typeobject*, %struct._typeobject** %ob_type334, align 8
  %tp_dealloc335 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %265, i32 0, i32 4
  %266 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc335, align 8
  %267 = load %struct._object*, %struct._object** %_py_decref_tmp327, align 8
  call void %266(%struct._object* %267)
  br label %if.end.336

if.end.336:                                       ; preds = %if.else.333, %if.then.332
  br label %do.end.337

do.end.337:                                       ; preds = %if.end.336
  br label %if.end.338

if.end.338:                                       ; preds = %do.end.337, %do.body.321
  br label %do.end.339

do.end.339:                                       ; preds = %if.end.338
  br label %do.body.340

do.body.340:                                      ; preds = %do.end.339
  %268 = load %struct._longobject*, %struct._longobject** %bl, align 8
  %269 = bitcast %struct._longobject* %268 to %struct._object*
  store %struct._object* %269, %struct._object** %_py_xdecref_tmp341, align 8
  %270 = load %struct._object*, %struct._object** %_py_xdecref_tmp341, align 8
  %cmp342 = icmp ne %struct._object* %270, null
  br i1 %cmp342, label %if.then.344, label %if.end.357

if.then.344:                                      ; preds = %do.body.340
  br label %do.body.345

do.body.345:                                      ; preds = %if.then.344
  %271 = load %struct._object*, %struct._object** %_py_xdecref_tmp341, align 8
  store %struct._object* %271, %struct._object** %_py_decref_tmp346, align 8
  %272 = load %struct._object*, %struct._object** %_py_decref_tmp346, align 8
  %ob_refcnt347 = getelementptr inbounds %struct._object, %struct._object* %272, i32 0, i32 0
  %273 = load i64, i64* %ob_refcnt347, align 8
  %dec348 = add i64 %273, -1
  store i64 %dec348, i64* %ob_refcnt347, align 8
  %cmp349 = icmp ne i64 %dec348, 0
  br i1 %cmp349, label %if.then.351, label %if.else.352

if.then.351:                                      ; preds = %do.body.345
  br label %if.end.355

if.else.352:                                      ; preds = %do.body.345
  %274 = load %struct._object*, %struct._object** %_py_decref_tmp346, align 8
  %ob_type353 = getelementptr inbounds %struct._object, %struct._object* %274, i32 0, i32 1
  %275 = load %struct._typeobject*, %struct._typeobject** %ob_type353, align 8
  %tp_dealloc354 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %275, i32 0, i32 4
  %276 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc354, align 8
  %277 = load %struct._object*, %struct._object** %_py_decref_tmp346, align 8
  call void %276(%struct._object* %277)
  br label %if.end.355

if.end.355:                                       ; preds = %if.else.352, %if.then.351
  br label %do.end.356

do.end.356:                                       ; preds = %if.end.355
  br label %if.end.357

if.end.357:                                       ; preds = %do.end.356, %do.body.340
  br label %do.end.358

do.end.358:                                       ; preds = %if.end.357
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %do.end.358, %do.end.263, %if.then.25, %if.else, %if.then.20
  %278 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %278
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @x_mul(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %z = alloca %struct._longobject*, align 8
  %size_a = alloca i64, align 8
  %size_b = alloca i64, align 8
  %i = alloca i64, align 8
  %carry = alloca i64, align 8
  %f = alloca i64, align 8
  %pz = alloca i32*, align 8
  %pa = alloca i32*, align 8
  %paend = alloca i32*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %carry72 = alloca i64, align 8
  %f73 = alloca i64, align 8
  %pz77 = alloca i32*, align 8
  %pb = alloca i32*, align 8
  %pbend = alloca i32*, align 8
  %_py_decref_tmp91 = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size_a, align 8
  %9 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  br i1 %cmp4, label %cond.true.5, label %cond.false.8

cond.true.5:                                      ; preds = %cond.end
  %12 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %14
  br label %cond.end.10

cond.false.8:                                     ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.5
  %cond11 = phi i64 [ %sub7, %cond.true.5 ], [ %17, %cond.false.8 ]
  store i64 %cond11, i64* %size_b, align 8
  %18 = load i64, i64* %size_a, align 8
  %19 = load i64, i64* %size_b, align 8
  %add = add i64 %18, %19
  %call = call %struct._longobject* @_PyLong_New(i64 %add)
  store %struct._longobject* %call, %struct._longobject** %z, align 8
  %20 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp12 = icmp eq %struct._longobject* %20, null
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.10
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %cond.end.10
  %21 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %21, i32 0, i32 1
  %22 = bitcast [1 x i32]* %ob_digit to i8*
  %23 = load %struct._longobject*, %struct._longobject** %z, align 8
  %24 = bitcast %struct._longobject* %23 to %struct.PyVarObject*
  %ob_size13 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %24, i32 0, i32 1
  %25 = load i64, i64* %ob_size13, align 8
  %mul = mul i64 %25, 4
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 %mul, i32 4, i1 false)
  %26 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %27 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %cmp14 = icmp eq %struct._longobject* %26, %27
  br i1 %cmp14, label %if.then.15, label %if.else.67

if.then.15:                                       ; preds = %if.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.15
  %28 = load i64, i64* %i, align 8
  %29 = load i64, i64* %size_a, align 8
  %cmp16 = icmp slt i64 %28, %29
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load i64, i64* %i, align 8
  %31 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit17 = getelementptr inbounds %struct._longobject, %struct._longobject* %31, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit17, i32 0, i64 %30
  %32 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %32 to i64
  store i64 %conv, i64* %f, align 8
  %33 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit18 = getelementptr inbounds %struct._longobject, %struct._longobject* %33, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit18, i32 0, i32 0
  %34 = load i64, i64* %i, align 8
  %shl = shl i64 %34, 1
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 %shl
  store i32* %add.ptr, i32** %pz, align 8
  %35 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit19 = getelementptr inbounds %struct._longobject, %struct._longobject* %35, i32 0, i32 1
  %arraydecay20 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit19, i32 0, i32 0
  %36 = load i64, i64* %i, align 8
  %add.ptr21 = getelementptr i32, i32* %arraydecay20, i64 %36
  %add.ptr22 = getelementptr i32, i32* %add.ptr21, i64 1
  store i32* %add.ptr22, i32** %pa, align 8
  %37 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit23 = getelementptr inbounds %struct._longobject, %struct._longobject* %37, i32 0, i32 1
  %arraydecay24 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit23, i32 0, i32 0
  %38 = load i64, i64* %size_a, align 8
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 %38
  store i32* %add.ptr25, i32** %paend, align 8
  br label %do.body

do.body:                                          ; preds = %for.body
  %call26 = call i32 @PyErr_CheckSignals()
  %tobool = icmp ne i32 %call26, 0
  br i1 %tobool, label %if.then.27, label %if.end.33

if.then.27:                                       ; preds = %do.body
  br label %do.body.28

do.body.28:                                       ; preds = %if.then.27
  %39 = load %struct._longobject*, %struct._longobject** %z, align 8
  %40 = bitcast %struct._longobject* %39 to %struct._object*
  store %struct._object* %40, %struct._object** %_py_decref_tmp, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0
  %42 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %42, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp29 = icmp ne i64 %dec, 0
  br i1 %cmp29, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %do.body.28
  br label %if.end.32

if.else:                                          ; preds = %do.body.28
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %45(%struct._object* %46)
  br label %if.end.32

if.end.32:                                        ; preds = %if.else, %if.then.31
  br label %do.end

do.end:                                           ; preds = %if.end.32
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.33:                                        ; preds = %do.body
  br label %do.end.34

do.end.34:                                        ; preds = %if.end.33
  %47 = load i32*, i32** %pz, align 8
  %48 = load i32, i32* %47, align 4
  %conv35 = zext i32 %48 to i64
  %49 = load i64, i64* %f, align 8
  %50 = load i64, i64* %f, align 8
  %mul36 = mul i64 %49, %50
  %add37 = add i64 %conv35, %mul36
  store i64 %add37, i64* %carry, align 8
  %51 = load i64, i64* %carry, align 8
  %and = and i64 %51, 1073741823
  %conv38 = trunc i64 %and to i32
  %52 = load i32*, i32** %pz, align 8
  %incdec.ptr = getelementptr i32, i32* %52, i32 1
  store i32* %incdec.ptr, i32** %pz, align 8
  store i32 %conv38, i32* %52, align 4
  %53 = load i64, i64* %carry, align 8
  %shr = lshr i64 %53, 30
  store i64 %shr, i64* %carry, align 8
  %54 = load i64, i64* %f, align 8
  %shl39 = shl i64 %54, 1
  store i64 %shl39, i64* %f, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.end.34
  %55 = load i32*, i32** %pa, align 8
  %56 = load i32*, i32** %paend, align 8
  %cmp40 = icmp ult i32* %55, %56
  br i1 %cmp40, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %57 = load i32*, i32** %pz, align 8
  %58 = load i32, i32* %57, align 4
  %conv42 = zext i32 %58 to i64
  %59 = load i32*, i32** %pa, align 8
  %incdec.ptr43 = getelementptr i32, i32* %59, i32 1
  store i32* %incdec.ptr43, i32** %pa, align 8
  %60 = load i32, i32* %59, align 4
  %conv44 = zext i32 %60 to i64
  %61 = load i64, i64* %f, align 8
  %mul45 = mul i64 %conv44, %61
  %add46 = add i64 %conv42, %mul45
  %62 = load i64, i64* %carry, align 8
  %add47 = add i64 %62, %add46
  store i64 %add47, i64* %carry, align 8
  %63 = load i64, i64* %carry, align 8
  %and48 = and i64 %63, 1073741823
  %conv49 = trunc i64 %and48 to i32
  %64 = load i32*, i32** %pz, align 8
  %incdec.ptr50 = getelementptr i32, i32* %64, i32 1
  store i32* %incdec.ptr50, i32** %pz, align 8
  store i32 %conv49, i32* %64, align 4
  %65 = load i64, i64* %carry, align 8
  %shr51 = lshr i64 %65, 30
  store i64 %shr51, i64* %carry, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %66 = load i64, i64* %carry, align 8
  %tobool52 = icmp ne i64 %66, 0
  br i1 %tobool52, label %if.then.53, label %if.end.60

if.then.53:                                       ; preds = %while.end
  %67 = load i32*, i32** %pz, align 8
  %68 = load i32, i32* %67, align 4
  %conv54 = zext i32 %68 to i64
  %69 = load i64, i64* %carry, align 8
  %add55 = add i64 %69, %conv54
  store i64 %add55, i64* %carry, align 8
  %70 = load i64, i64* %carry, align 8
  %and56 = and i64 %70, 1073741823
  %conv57 = trunc i64 %and56 to i32
  %71 = load i32*, i32** %pz, align 8
  %incdec.ptr58 = getelementptr i32, i32* %71, i32 1
  store i32* %incdec.ptr58, i32** %pz, align 8
  store i32 %conv57, i32* %71, align 4
  %72 = load i64, i64* %carry, align 8
  %shr59 = lshr i64 %72, 30
  store i64 %shr59, i64* %carry, align 8
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.53, %while.end
  %73 = load i64, i64* %carry, align 8
  %tobool61 = icmp ne i64 %73, 0
  br i1 %tobool61, label %if.then.62, label %if.end.66

if.then.62:                                       ; preds = %if.end.60
  %74 = load i64, i64* %carry, align 8
  %and63 = and i64 %74, 1073741823
  %conv64 = trunc i64 %and63 to i32
  %75 = load i32*, i32** %pz, align 8
  %76 = load i32, i32* %75, align 4
  %add65 = add i32 %76, %conv64
  store i32 %add65, i32* %75, align 4
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.62, %if.end.60
  br label %for.inc

for.inc:                                          ; preds = %if.end.66
  %77 = load i64, i64* %i, align 8
  %inc = add i64 %77, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.128

if.else.67:                                       ; preds = %if.end
  store i64 0, i64* %i, align 8
  br label %for.cond.68

for.cond.68:                                      ; preds = %for.inc.125, %if.else.67
  %78 = load i64, i64* %i, align 8
  %79 = load i64, i64* %size_a, align 8
  %cmp69 = icmp slt i64 %78, %79
  br i1 %cmp69, label %for.body.71, label %for.end.127

for.body.71:                                      ; preds = %for.cond.68
  store i64 0, i64* %carry72, align 8
  %80 = load i64, i64* %i, align 8
  %81 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit74 = getelementptr inbounds %struct._longobject, %struct._longobject* %81, i32 0, i32 1
  %arrayidx75 = getelementptr [1 x i32], [1 x i32]* %ob_digit74, i32 0, i64 %80
  %82 = load i32, i32* %arrayidx75, align 4
  %conv76 = zext i32 %82 to i64
  store i64 %conv76, i64* %f73, align 8
  %83 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit78 = getelementptr inbounds %struct._longobject, %struct._longobject* %83, i32 0, i32 1
  %arraydecay79 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit78, i32 0, i32 0
  %84 = load i64, i64* %i, align 8
  %add.ptr80 = getelementptr i32, i32* %arraydecay79, i64 %84
  store i32* %add.ptr80, i32** %pz77, align 8
  %85 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit81 = getelementptr inbounds %struct._longobject, %struct._longobject* %85, i32 0, i32 1
  %arraydecay82 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit81, i32 0, i32 0
  store i32* %arraydecay82, i32** %pb, align 8
  %86 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit83 = getelementptr inbounds %struct._longobject, %struct._longobject* %86, i32 0, i32 1
  %arraydecay84 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit83, i32 0, i32 0
  %87 = load i64, i64* %size_b, align 8
  %add.ptr85 = getelementptr i32, i32* %arraydecay84, i64 %87
  store i32* %add.ptr85, i32** %pbend, align 8
  br label %do.body.86

do.body.86:                                       ; preds = %for.body.71
  %call87 = call i32 @PyErr_CheckSignals()
  %tobool88 = icmp ne i32 %call87, 0
  br i1 %tobool88, label %if.then.89, label %if.end.102

if.then.89:                                       ; preds = %do.body.86
  br label %do.body.90

do.body.90:                                       ; preds = %if.then.89
  %88 = load %struct._longobject*, %struct._longobject** %z, align 8
  %89 = bitcast %struct._longobject* %88 to %struct._object*
  store %struct._object* %89, %struct._object** %_py_decref_tmp91, align 8
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp91, align 8
  %ob_refcnt92 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 0
  %91 = load i64, i64* %ob_refcnt92, align 8
  %dec93 = add i64 %91, -1
  store i64 %dec93, i64* %ob_refcnt92, align 8
  %cmp94 = icmp ne i64 %dec93, 0
  br i1 %cmp94, label %if.then.96, label %if.else.97

if.then.96:                                       ; preds = %do.body.90
  br label %if.end.100

if.else.97:                                       ; preds = %do.body.90
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp91, align 8
  %ob_type98 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 1
  %93 = load %struct._typeobject*, %struct._typeobject** %ob_type98, align 8
  %tp_dealloc99 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %93, i32 0, i32 4
  %94 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc99, align 8
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp91, align 8
  call void %94(%struct._object* %95)
  br label %if.end.100

if.end.100:                                       ; preds = %if.else.97, %if.then.96
  br label %do.end.101

do.end.101:                                       ; preds = %if.end.100
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end.102:                                       ; preds = %do.body.86
  br label %do.end.103

do.end.103:                                       ; preds = %if.end.102
  br label %while.cond.104

while.cond.104:                                   ; preds = %while.body.107, %do.end.103
  %96 = load i32*, i32** %pb, align 8
  %97 = load i32*, i32** %pbend, align 8
  %cmp105 = icmp ult i32* %96, %97
  br i1 %cmp105, label %while.body.107, label %while.end.118

while.body.107:                                   ; preds = %while.cond.104
  %98 = load i32*, i32** %pz77, align 8
  %99 = load i32, i32* %98, align 4
  %conv108 = zext i32 %99 to i64
  %100 = load i32*, i32** %pb, align 8
  %incdec.ptr109 = getelementptr i32, i32* %100, i32 1
  store i32* %incdec.ptr109, i32** %pb, align 8
  %101 = load i32, i32* %100, align 4
  %conv110 = zext i32 %101 to i64
  %102 = load i64, i64* %f73, align 8
  %mul111 = mul i64 %conv110, %102
  %add112 = add i64 %conv108, %mul111
  %103 = load i64, i64* %carry72, align 8
  %add113 = add i64 %103, %add112
  store i64 %add113, i64* %carry72, align 8
  %104 = load i64, i64* %carry72, align 8
  %and114 = and i64 %104, 1073741823
  %conv115 = trunc i64 %and114 to i32
  %105 = load i32*, i32** %pz77, align 8
  %incdec.ptr116 = getelementptr i32, i32* %105, i32 1
  store i32* %incdec.ptr116, i32** %pz77, align 8
  store i32 %conv115, i32* %105, align 4
  %106 = load i64, i64* %carry72, align 8
  %shr117 = lshr i64 %106, 30
  store i64 %shr117, i64* %carry72, align 8
  br label %while.cond.104

while.end.118:                                    ; preds = %while.cond.104
  %107 = load i64, i64* %carry72, align 8
  %tobool119 = icmp ne i64 %107, 0
  br i1 %tobool119, label %if.then.120, label %if.end.124

if.then.120:                                      ; preds = %while.end.118
  %108 = load i64, i64* %carry72, align 8
  %and121 = and i64 %108, 1073741823
  %conv122 = trunc i64 %and121 to i32
  %109 = load i32*, i32** %pz77, align 8
  %110 = load i32, i32* %109, align 4
  %add123 = add i32 %110, %conv122
  store i32 %add123, i32* %109, align 4
  br label %if.end.124

if.end.124:                                       ; preds = %if.then.120, %while.end.118
  br label %for.inc.125

for.inc.125:                                      ; preds = %if.end.124
  %111 = load i64, i64* %i, align 8
  %inc126 = add i64 %111, 1
  store i64 %inc126, i64* %i, align 8
  br label %for.cond.68

for.end.127:                                      ; preds = %for.cond.68
  br label %if.end.128

if.end.128:                                       ; preds = %for.end.127, %for.end
  %112 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call129 = call %struct._longobject* @long_normalize(%struct._longobject* %112)
  store %struct._longobject* %call129, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %if.end.128, %do.end.101, %do.end, %if.then
  %113 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %113
}

; Function Attrs: nounwind uwtable
define internal %struct._longobject* @k_lopsided_mul(%struct._longobject* %a, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._longobject*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %b.addr = alloca %struct._longobject*, align 8
  %asize = alloca i64, align 8
  %bsize = alloca i64, align 8
  %nbdone = alloca i64, align 8
  %ret = alloca %struct._longobject*, align 8
  %bslice = alloca %struct._longobject*, align 8
  %product = alloca %struct._longobject*, align 8
  %nbtouse = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp59 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %asize, align 8
  %9 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  br i1 %cmp4, label %cond.true.5, label %cond.false.8

cond.true.5:                                      ; preds = %cond.end
  %12 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %13 = bitcast %struct._longobject* %12 to %struct.PyVarObject*
  %ob_size6 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %13, i32 0, i32 1
  %14 = load i64, i64* %ob_size6, align 8
  %sub7 = sub i64 0, %14
  br label %cond.end.10

cond.false.8:                                     ; preds = %cond.end
  %15 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %16 = bitcast %struct._longobject* %15 to %struct.PyVarObject*
  %ob_size9 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %16, i32 0, i32 1
  %17 = load i64, i64* %ob_size9, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.8, %cond.true.5
  %cond11 = phi i64 [ %sub7, %cond.true.5 ], [ %17, %cond.false.8 ]
  store i64 %cond11, i64* %bsize, align 8
  store %struct._longobject* null, %struct._longobject** %bslice, align 8
  %18 = load i64, i64* %asize, align 8
  %19 = load i64, i64* %bsize, align 8
  %add = add i64 %18, %19
  %call = call %struct._longobject* @_PyLong_New(i64 %add)
  store %struct._longobject* %call, %struct._longobject** %ret, align 8
  %20 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %cmp12 = icmp eq %struct._longobject* %20, null
  br i1 %cmp12, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.10
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

if.end:                                           ; preds = %cond.end.10
  %21 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %21, i32 0, i32 1
  %22 = bitcast [1 x i32]* %ob_digit to i8*
  %23 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %24 = bitcast %struct._longobject* %23 to %struct.PyVarObject*
  %ob_size13 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %24, i32 0, i32 1
  %25 = load i64, i64* %ob_size13, align 8
  %mul = mul i64 %25, 4
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 %mul, i32 4, i1 false)
  %26 = load i64, i64* %asize, align 8
  %call14 = call %struct._longobject* @_PyLong_New(i64 %26)
  store %struct._longobject* %call14, %struct._longobject** %bslice, align 8
  %27 = load %struct._longobject*, %struct._longobject** %bslice, align 8
  %cmp15 = icmp eq %struct._longobject* %27, null
  br i1 %cmp15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end
  br label %fail

if.end.17:                                        ; preds = %if.end
  store i64 0, i64* %nbdone, align 8
  br label %while.cond

while.cond:                                       ; preds = %do.end, %if.end.17
  %28 = load i64, i64* %bsize, align 8
  %cmp18 = icmp sgt i64 %28, 0
  br i1 %cmp18, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %29 = load i64, i64* %bsize, align 8
  %30 = load i64, i64* %asize, align 8
  %cmp19 = icmp sgt i64 %29, %30
  br i1 %cmp19, label %cond.true.20, label %cond.false.21

cond.true.20:                                     ; preds = %while.body
  %31 = load i64, i64* %asize, align 8
  br label %cond.end.22

cond.false.21:                                    ; preds = %while.body
  %32 = load i64, i64* %bsize, align 8
  br label %cond.end.22

cond.end.22:                                      ; preds = %cond.false.21, %cond.true.20
  %cond23 = phi i64 [ %31, %cond.true.20 ], [ %32, %cond.false.21 ]
  store i64 %cond23, i64* %nbtouse, align 8
  %33 = load %struct._longobject*, %struct._longobject** %bslice, align 8
  %ob_digit24 = getelementptr inbounds %struct._longobject, %struct._longobject* %33, i32 0, i32 1
  %34 = bitcast [1 x i32]* %ob_digit24 to i8*
  %35 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit25 = getelementptr inbounds %struct._longobject, %struct._longobject* %35, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit25, i32 0, i32 0
  %36 = load i64, i64* %nbdone, align 8
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 %36
  %37 = bitcast i32* %add.ptr to i8*
  %38 = load i64, i64* %nbtouse, align 8
  %mul26 = mul i64 %38, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %37, i64 %mul26, i32 4, i1 false)
  %39 = load i64, i64* %nbtouse, align 8
  %40 = load %struct._longobject*, %struct._longobject** %bslice, align 8
  %41 = bitcast %struct._longobject* %40 to %struct.PyVarObject*
  %ob_size27 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %41, i32 0, i32 1
  store i64 %39, i64* %ob_size27, align 8
  %42 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %43 = load %struct._longobject*, %struct._longobject** %bslice, align 8
  %call28 = call %struct._longobject* @k_mul(%struct._longobject* %42, %struct._longobject* %43)
  store %struct._longobject* %call28, %struct._longobject** %product, align 8
  %44 = load %struct._longobject*, %struct._longobject** %product, align 8
  %cmp29 = icmp eq %struct._longobject* %44, null
  br i1 %cmp29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %cond.end.22
  br label %fail

if.end.31:                                        ; preds = %cond.end.22
  %45 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %ob_digit32 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arraydecay33 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit32, i32 0, i32 0
  %46 = load i64, i64* %nbdone, align 8
  %add.ptr34 = getelementptr i32, i32* %arraydecay33, i64 %46
  %47 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %48 = bitcast %struct._longobject* %47 to %struct.PyVarObject*
  %ob_size35 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %48, i32 0, i32 1
  %49 = load i64, i64* %ob_size35, align 8
  %50 = load i64, i64* %nbdone, align 8
  %sub36 = sub i64 %49, %50
  %51 = load %struct._longobject*, %struct._longobject** %product, align 8
  %ob_digit37 = getelementptr inbounds %struct._longobject, %struct._longobject* %51, i32 0, i32 1
  %arraydecay38 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit37, i32 0, i32 0
  %52 = load %struct._longobject*, %struct._longobject** %product, align 8
  %53 = bitcast %struct._longobject* %52 to %struct.PyVarObject*
  %ob_size39 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %53, i32 0, i32 1
  %54 = load i64, i64* %ob_size39, align 8
  %call40 = call i32 @v_iadd(i32* %add.ptr34, i64 %sub36, i32* %arraydecay38, i64 %54)
  br label %do.body

do.body:                                          ; preds = %if.end.31
  %55 = load %struct._longobject*, %struct._longobject** %product, align 8
  %56 = bitcast %struct._longobject* %55 to %struct._object*
  store %struct._object* %56, %struct._object** %_py_decref_tmp, align 8
  %57 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %57, i32 0, i32 0
  %58 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %58, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp41 = icmp ne i64 %dec, 0
  br i1 %cmp41, label %if.then.42, label %if.else

if.then.42:                                       ; preds = %do.body
  br label %if.end.43

if.else:                                          ; preds = %do.body
  %59 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %59, i32 0, i32 1
  %60 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %60, i32 0, i32 4
  %61 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %61(%struct._object* %62)
  br label %if.end.43

if.end.43:                                        ; preds = %if.else, %if.then.42
  br label %do.end

do.end:                                           ; preds = %if.end.43
  %63 = load i64, i64* %nbtouse, align 8
  %64 = load i64, i64* %bsize, align 8
  %sub44 = sub i64 %64, %63
  store i64 %sub44, i64* %bsize, align 8
  %65 = load i64, i64* %nbtouse, align 8
  %66 = load i64, i64* %nbdone, align 8
  %add45 = add i64 %66, %65
  store i64 %add45, i64* %nbdone, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body.46

do.body.46:                                       ; preds = %while.end
  %67 = load %struct._longobject*, %struct._longobject** %bslice, align 8
  %68 = bitcast %struct._longobject* %67 to %struct._object*
  store %struct._object* %68, %struct._object** %_py_decref_tmp47, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0
  %70 = load i64, i64* %ob_refcnt48, align 8
  %dec49 = add i64 %70, -1
  store i64 %dec49, i64* %ob_refcnt48, align 8
  %cmp50 = icmp ne i64 %dec49, 0
  br i1 %cmp50, label %if.then.51, label %if.else.52

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55

if.else.52:                                       ; preds = %do.body.46
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  call void %73(%struct._object* %74)
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.55
  %75 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %call57 = call %struct._longobject* @long_normalize(%struct._longobject* %75)
  store %struct._longobject* %call57, %struct._longobject** %retval
  br label %return

fail:                                             ; preds = %if.then.30, %if.then.16
  br label %do.body.58

do.body.58:                                       ; preds = %fail
  %76 = load %struct._longobject*, %struct._longobject** %ret, align 8
  %77 = bitcast %struct._longobject* %76 to %struct._object*
  store %struct._object* %77, %struct._object** %_py_decref_tmp59, align 8
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8
  %ob_refcnt60 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 0
  %79 = load i64, i64* %ob_refcnt60, align 8
  %dec61 = add i64 %79, -1
  store i64 %dec61, i64* %ob_refcnt60, align 8
  %cmp62 = icmp ne i64 %dec61, 0
  br i1 %cmp62, label %if.then.63, label %if.else.64

if.then.63:                                       ; preds = %do.body.58
  br label %if.end.67

if.else.64:                                       ; preds = %do.body.58
  %80 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8
  %ob_type65 = getelementptr inbounds %struct._object, %struct._object* %80, i32 0, i32 1
  %81 = load %struct._typeobject*, %struct._typeobject** %ob_type65, align 8
  %tp_dealloc66 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %81, i32 0, i32 4
  %82 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc66, align 8
  %83 = load %struct._object*, %struct._object** %_py_decref_tmp59, align 8
  call void %82(%struct._object* %83)
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.64, %if.then.63
  br label %do.end.68

do.end.68:                                        ; preds = %if.end.67
  br label %do.body.69

do.body.69:                                       ; preds = %do.end.68
  %84 = load %struct._longobject*, %struct._longobject** %bslice, align 8
  %85 = bitcast %struct._longobject* %84 to %struct._object*
  store %struct._object* %85, %struct._object** %_py_xdecref_tmp, align 8
  %86 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp70 = icmp ne %struct._object* %86, null
  br i1 %cmp70, label %if.then.71, label %if.end.83

if.then.71:                                       ; preds = %do.body.69
  br label %do.body.72

do.body.72:                                       ; preds = %if.then.71
  %87 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %87, %struct._object** %_py_decref_tmp73, align 8
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0
  %89 = load i64, i64* %ob_refcnt74, align 8
  %dec75 = add i64 %89, -1
  store i64 %dec75, i64* %ob_refcnt74, align 8
  %cmp76 = icmp ne i64 %dec75, 0
  br i1 %cmp76, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81

if.else.78:                                       ; preds = %do.body.72
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  call void %92(%struct._object* %93)
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  br label %do.end.82

do.end.82:                                        ; preds = %if.end.81
  br label %if.end.83

if.end.83:                                        ; preds = %do.end.82, %do.body.69
  br label %do.end.84

do.end.84:                                        ; preds = %if.end.83
  store %struct._longobject* null, %struct._longobject** %retval
  br label %return

return:                                           ; preds = %do.end.84, %do.end.56, %if.then
  %94 = load %struct._longobject*, %struct._longobject** %retval
  ret %struct._longobject* %94
}

; Function Attrs: nounwind uwtable
define internal i32 @kmul_split(%struct._longobject* %n, i64 %size, %struct._longobject** %high, %struct._longobject** %low) #0 {
entry:
  %retval = alloca i32, align 4
  %n.addr = alloca %struct._longobject*, align 8
  %size.addr = alloca i64, align 8
  %high.addr = alloca %struct._longobject**, align 8
  %low.addr = alloca %struct._longobject**, align 8
  %hi = alloca %struct._longobject*, align 8
  %lo = alloca %struct._longobject*, align 8
  %size_lo = alloca i64, align 8
  %size_hi = alloca i64, align 8
  %size_n = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._longobject* %n, %struct._longobject** %n.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store %struct._longobject** %high, %struct._longobject*** %high.addr, align 8
  store %struct._longobject** %low, %struct._longobject*** %low.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %n.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %n.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %n.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size_n, align 8
  %9 = load i64, i64* %size_n, align 8
  %10 = load i64, i64* %size.addr, align 8
  %cmp3 = icmp sgt i64 %9, %10
  br i1 %cmp3, label %cond.true.4, label %cond.false.5

cond.true.4:                                      ; preds = %cond.end
  %11 = load i64, i64* %size.addr, align 8
  br label %cond.end.6

cond.false.5:                                     ; preds = %cond.end
  %12 = load i64, i64* %size_n, align 8
  br label %cond.end.6

cond.end.6:                                       ; preds = %cond.false.5, %cond.true.4
  %cond7 = phi i64 [ %11, %cond.true.4 ], [ %12, %cond.false.5 ]
  store i64 %cond7, i64* %size_lo, align 8
  %13 = load i64, i64* %size_n, align 8
  %14 = load i64, i64* %size_lo, align 8
  %sub8 = sub i64 %13, %14
  store i64 %sub8, i64* %size_hi, align 8
  %15 = load i64, i64* %size_hi, align 8
  %call = call %struct._longobject* @_PyLong_New(i64 %15)
  store %struct._longobject* %call, %struct._longobject** %hi, align 8
  %cmp9 = icmp eq %struct._longobject* %call, null
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end.6
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end.6
  %16 = load i64, i64* %size_lo, align 8
  %call10 = call %struct._longobject* @_PyLong_New(i64 %16)
  store %struct._longobject* %call10, %struct._longobject** %lo, align 8
  %cmp11 = icmp eq %struct._longobject* %call10, null
  br i1 %cmp11, label %if.then.12, label %if.end.16

if.then.12:                                       ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.then.12
  %17 = load %struct._longobject*, %struct._longobject** %hi, align 8
  %18 = bitcast %struct._longobject* %17 to %struct._object*
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0
  %20 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %20, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp13 = icmp ne i64 %dec, 0
  br i1 %cmp13, label %if.then.14, label %if.else

if.then.14:                                       ; preds = %do.body
  br label %if.end.15

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %23(%struct._object* %24)
  br label %if.end.15

if.end.15:                                        ; preds = %if.else, %if.then.14
  br label %do.end

do.end:                                           ; preds = %if.end.15
  store i32 -1, i32* %retval
  br label %return

if.end.16:                                        ; preds = %if.end
  %25 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %25, i32 0, i32 1
  %26 = bitcast [1 x i32]* %ob_digit to i8*
  %27 = load %struct._longobject*, %struct._longobject** %n.addr, align 8
  %ob_digit17 = getelementptr inbounds %struct._longobject, %struct._longobject* %27, i32 0, i32 1
  %28 = bitcast [1 x i32]* %ob_digit17 to i8*
  %29 = load i64, i64* %size_lo, align 8
  %mul = mul i64 %29, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %28, i64 %mul, i32 4, i1 false)
  %30 = load %struct._longobject*, %struct._longobject** %hi, align 8
  %ob_digit18 = getelementptr inbounds %struct._longobject, %struct._longobject* %30, i32 0, i32 1
  %31 = bitcast [1 x i32]* %ob_digit18 to i8*
  %32 = load %struct._longobject*, %struct._longobject** %n.addr, align 8
  %ob_digit19 = getelementptr inbounds %struct._longobject, %struct._longobject* %32, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit19, i32 0, i32 0
  %33 = load i64, i64* %size_lo, align 8
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 %33
  %34 = bitcast i32* %add.ptr to i8*
  %35 = load i64, i64* %size_hi, align 8
  %mul20 = mul i64 %35, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %34, i64 %mul20, i32 4, i1 false)
  %36 = load %struct._longobject*, %struct._longobject** %hi, align 8
  %call21 = call %struct._longobject* @long_normalize(%struct._longobject* %36)
  %37 = load %struct._longobject**, %struct._longobject*** %high.addr, align 8
  store %struct._longobject* %call21, %struct._longobject** %37, align 8
  %38 = load %struct._longobject*, %struct._longobject** %lo, align 8
  %call22 = call %struct._longobject* @long_normalize(%struct._longobject* %38)
  %39 = load %struct._longobject**, %struct._longobject*** %low.addr, align 8
  store %struct._longobject* %call22, %struct._longobject** %39, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.16, %do.end, %if.then
  %40 = load i32, i32* %retval
  ret i32 %40
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @v_isub(i32* %x, i64 %m, i32* %y, i64 %n) #0 {
entry:
  %x.addr = alloca i32*, align 8
  %m.addr = alloca i64, align 8
  %y.addr = alloca i32*, align 8
  %n.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %borrow = alloca i32, align 4
  store i32* %x, i32** %x.addr, align 8
  store i64 %m, i64* %m.addr, align 8
  store i32* %y, i32** %y.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  store i32 0, i32* %borrow, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8
  %1 = load i64, i64* %n.addr, align 8
  %cmp = icmp slt i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %i, align 8
  %3 = load i32*, i32** %x.addr, align 8
  %arrayidx = getelementptr i32, i32* %3, i64 %2
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i64, i64* %i, align 8
  %6 = load i32*, i32** %y.addr, align 8
  %arrayidx1 = getelementptr i32, i32* %6, i64 %5
  %7 = load i32, i32* %arrayidx1, align 4
  %sub = sub i32 %4, %7
  %8 = load i32, i32* %borrow, align 4
  %sub2 = sub i32 %sub, %8
  store i32 %sub2, i32* %borrow, align 4
  %9 = load i32, i32* %borrow, align 4
  %and = and i32 %9, 1073741823
  %10 = load i64, i64* %i, align 8
  %11 = load i32*, i32** %x.addr, align 8
  %arrayidx3 = getelementptr i32, i32* %11, i64 %10
  store i32 %and, i32* %arrayidx3, align 4
  %12 = load i32, i32* %borrow, align 4
  %shr = lshr i32 %12, 30
  store i32 %shr, i32* %borrow, align 4
  %13 = load i32, i32* %borrow, align 4
  %and4 = and i32 %13, 1
  store i32 %and4, i32* %borrow, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i64, i64* %i, align 8
  %inc = add i64 %14, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond.5

for.cond.5:                                       ; preds = %for.inc.14, %for.end
  %15 = load i32, i32* %borrow, align 4
  %tobool = icmp ne i32 %15, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.5
  %16 = load i64, i64* %i, align 8
  %17 = load i64, i64* %m.addr, align 8
  %cmp6 = icmp slt i64 %16, %17
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.5
  %18 = phi i1 [ false, %for.cond.5 ], [ %cmp6, %land.rhs ]
  br i1 %18, label %for.body.7, label %for.end.16

for.body.7:                                       ; preds = %land.end
  %19 = load i64, i64* %i, align 8
  %20 = load i32*, i32** %x.addr, align 8
  %arrayidx8 = getelementptr i32, i32* %20, i64 %19
  %21 = load i32, i32* %arrayidx8, align 4
  %22 = load i32, i32* %borrow, align 4
  %sub9 = sub i32 %21, %22
  store i32 %sub9, i32* %borrow, align 4
  %23 = load i32, i32* %borrow, align 4
  %and10 = and i32 %23, 1073741823
  %24 = load i64, i64* %i, align 8
  %25 = load i32*, i32** %x.addr, align 8
  %arrayidx11 = getelementptr i32, i32* %25, i64 %24
  store i32 %and10, i32* %arrayidx11, align 4
  %26 = load i32, i32* %borrow, align 4
  %shr12 = lshr i32 %26, 30
  store i32 %shr12, i32* %borrow, align 4
  %27 = load i32, i32* %borrow, align 4
  %and13 = and i32 %27, 1
  store i32 %and13, i32* %borrow, align 4
  br label %for.inc.14

for.inc.14:                                       ; preds = %for.body.7
  %28 = load i64, i64* %i, align 8
  %inc15 = add i64 %28, 1
  store i64 %inc15, i64* %i, align 8
  br label %for.cond.5

for.end.16:                                       ; preds = %land.end
  %29 = load i32, i32* %borrow, align 4
  ret i32 %29
}

; Function Attrs: nounwind uwtable
define internal i32 @v_iadd(i32* %x, i64 %m, i32* %y, i64 %n) #0 {
entry:
  %x.addr = alloca i32*, align 8
  %m.addr = alloca i64, align 8
  %y.addr = alloca i32*, align 8
  %n.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %carry = alloca i32, align 4
  store i32* %x, i32** %x.addr, align 8
  store i64 %m, i64* %m.addr, align 8
  store i32* %y, i32** %y.addr, align 8
  store i64 %n, i64* %n.addr, align 8
  store i32 0, i32* %carry, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8
  %1 = load i64, i64* %n.addr, align 8
  %cmp = icmp slt i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %i, align 8
  %3 = load i32*, i32** %x.addr, align 8
  %arrayidx = getelementptr i32, i32* %3, i64 %2
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i64, i64* %i, align 8
  %6 = load i32*, i32** %y.addr, align 8
  %arrayidx1 = getelementptr i32, i32* %6, i64 %5
  %7 = load i32, i32* %arrayidx1, align 4
  %add = add i32 %4, %7
  %8 = load i32, i32* %carry, align 4
  %add2 = add i32 %8, %add
  store i32 %add2, i32* %carry, align 4
  %9 = load i32, i32* %carry, align 4
  %and = and i32 %9, 1073741823
  %10 = load i64, i64* %i, align 8
  %11 = load i32*, i32** %x.addr, align 8
  %arrayidx3 = getelementptr i32, i32* %11, i64 %10
  store i32 %and, i32* %arrayidx3, align 4
  %12 = load i32, i32* %carry, align 4
  %shr = lshr i32 %12, 30
  store i32 %shr, i32* %carry, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i64, i64* %i, align 8
  %inc = add i64 %13, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %for.cond.4

for.cond.4:                                       ; preds = %for.inc.12, %for.end
  %14 = load i32, i32* %carry, align 4
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.4
  %15 = load i64, i64* %i, align 8
  %16 = load i64, i64* %m.addr, align 8
  %cmp5 = icmp slt i64 %15, %16
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.4
  %17 = phi i1 [ false, %for.cond.4 ], [ %cmp5, %land.rhs ]
  br i1 %17, label %for.body.6, label %for.end.14

for.body.6:                                       ; preds = %land.end
  %18 = load i64, i64* %i, align 8
  %19 = load i32*, i32** %x.addr, align 8
  %arrayidx7 = getelementptr i32, i32* %19, i64 %18
  %20 = load i32, i32* %arrayidx7, align 4
  %21 = load i32, i32* %carry, align 4
  %add8 = add i32 %21, %20
  store i32 %add8, i32* %carry, align 4
  %22 = load i32, i32* %carry, align 4
  %and9 = and i32 %22, 1073741823
  %23 = load i64, i64* %i, align 8
  %24 = load i32*, i32** %x.addr, align 8
  %arrayidx10 = getelementptr i32, i32* %24, i64 %23
  store i32 %and9, i32* %arrayidx10, align 4
  %25 = load i32, i32* %carry, align 4
  %shr11 = lshr i32 %25, 30
  store i32 %shr11, i32* %carry, align 4
  br label %for.inc.12

for.inc.12:                                       ; preds = %for.body.6
  %26 = load i64, i64* %i, align 8
  %inc13 = add i64 %26, 1
  store i64 %inc13, i64* %i, align 8
  br label %for.cond.4

for.end.14:                                       ; preds = %land.end
  %27 = load i32, i32* %carry, align 4
  ret i32 %27
}

; Function Attrs: nounwind uwtable
define internal i32 @l_divmod(%struct._longobject* %v, %struct._longobject* %w, %struct._longobject** %pdiv, %struct._longobject** %pmod) #0 {
entry:
  %retval = alloca i32, align 4
  %v.addr = alloca %struct._longobject*, align 8
  %w.addr = alloca %struct._longobject*, align 8
  %pdiv.addr = alloca %struct._longobject**, align 8
  %pmod.addr = alloca %struct._longobject**, align 8
  %div = alloca %struct._longobject*, align 8
  %mod = alloca %struct._longobject*, align 8
  %temp = alloca %struct._longobject*, align 8
  %one = alloca %struct._longobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp35 = alloca %struct._object*, align 8
  %_py_decref_tmp46 = alloca %struct._object*, align 8
  %_py_xdecref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp60 = alloca %struct._object*, align 8
  %_py_decref_tmp74 = alloca %struct._object*, align 8
  %_py_decref_tmp85 = alloca %struct._object*, align 8
  %_py_decref_tmp100 = alloca %struct._object*, align 8
  %_py_decref_tmp115 = alloca %struct._object*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  store %struct._longobject* %w, %struct._longobject** %w.addr, align 8
  store %struct._longobject** %pdiv, %struct._longobject*** %pdiv.addr, align 8
  store %struct._longobject** %pmod, %struct._longobject*** %pmod.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = load %struct._longobject*, %struct._longobject** %w.addr, align 8
  %call = call i32 @long_divrem(%struct._longobject* %0, %struct._longobject* %1, %struct._longobject** %div, %struct._longobject** %mod)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %3 = bitcast %struct._longobject* %2 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %3, i32 0, i32 1
  %4 = load i64, i64* %ob_size, align 8
  %cmp1 = icmp slt i64 %4, 0
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct._longobject*, %struct._longobject** %w.addr, align 8
  %6 = bitcast %struct._longobject* %5 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1
  %7 = load i64, i64* %ob_size2, align 8
  %cmp3 = icmp sgt i64 %7, 0
  br i1 %cmp3, label %if.then.9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %8 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %9 = bitcast %struct._longobject* %8 to %struct.PyVarObject*
  %ob_size4 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %9, i32 0, i32 1
  %10 = load i64, i64* %ob_size4, align 8
  %cmp5 = icmp sgt i64 %10, 0
  br i1 %cmp5, label %land.lhs.true.6, label %if.end.95

land.lhs.true.6:                                  ; preds = %lor.lhs.false
  %11 = load %struct._longobject*, %struct._longobject** %w.addr, align 8
  %12 = bitcast %struct._longobject* %11 to %struct.PyVarObject*
  %ob_size7 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %12, i32 0, i32 1
  %13 = load i64, i64* %ob_size7, align 8
  %cmp8 = icmp slt i64 %13, 0
  br i1 %cmp8, label %if.then.9, label %if.end.95

if.then.9:                                        ; preds = %land.lhs.true.6, %land.lhs.true
  %14 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %15 = load %struct._longobject*, %struct._longobject** %w.addr, align 8
  %call10 = call %struct._object* @long_add(%struct._longobject* %14, %struct._longobject* %15)
  %16 = bitcast %struct._object* %call10 to %struct._longobject*
  store %struct._longobject* %16, %struct._longobject** %temp, align 8
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %17 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %18 = bitcast %struct._longobject* %17 to %struct._object*
  store %struct._object* %18, %struct._object** %_py_decref_tmp, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0
  %20 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %20, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %23(%struct._object* %24)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  %25 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %25, %struct._longobject** %mod, align 8
  %26 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %cmp14 = icmp eq %struct._longobject* %26, null
  br i1 %cmp14, label %if.then.15, label %if.end.27

if.then.15:                                       ; preds = %do.end
  br label %do.body.16

do.body.16:                                       ; preds = %if.then.15
  %27 = load %struct._longobject*, %struct._longobject** %div, align 8
  %28 = bitcast %struct._longobject* %27 to %struct._object*
  store %struct._object* %28, %struct._object** %_py_decref_tmp17, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0
  %30 = load i64, i64* %ob_refcnt18, align 8
  %dec19 = add i64 %30, -1
  store i64 %dec19, i64* %ob_refcnt18, align 8
  %cmp20 = icmp ne i64 %dec19, 0
  br i1 %cmp20, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25

if.else.22:                                       ; preds = %do.body.16
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  call void %33(%struct._object* %34)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  store i32 -1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %do.end
  %call28 = call %struct._object* @PyLong_FromLong(i64 1)
  %35 = bitcast %struct._object* %call28 to %struct._longobject*
  store %struct._longobject* %35, %struct._longobject** %one, align 8
  %36 = load %struct._longobject*, %struct._longobject** %one, align 8
  %cmp29 = icmp eq %struct._longobject* %36, null
  br i1 %cmp29, label %if.then.33, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %if.end.27
  %37 = load %struct._longobject*, %struct._longobject** %div, align 8
  %38 = load %struct._longobject*, %struct._longobject** %one, align 8
  %call31 = call %struct._object* @long_sub(%struct._longobject* %37, %struct._longobject* %38)
  %39 = bitcast %struct._object* %call31 to %struct._longobject*
  store %struct._longobject* %39, %struct._longobject** %temp, align 8
  %cmp32 = icmp eq %struct._longobject* %39, null
  br i1 %cmp32, label %if.then.33, label %if.end.72

if.then.33:                                       ; preds = %lor.lhs.false.30, %if.end.27
  br label %do.body.34

do.body.34:                                       ; preds = %if.then.33
  %40 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %41 = bitcast %struct._longobject* %40 to %struct._object*
  store %struct._object* %41, %struct._object** %_py_decref_tmp35, align 8
  %42 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  %ob_refcnt36 = getelementptr inbounds %struct._object, %struct._object* %42, i32 0, i32 0
  %43 = load i64, i64* %ob_refcnt36, align 8
  %dec37 = add i64 %43, -1
  store i64 %dec37, i64* %ob_refcnt36, align 8
  %cmp38 = icmp ne i64 %dec37, 0
  br i1 %cmp38, label %if.then.39, label %if.else.40

if.then.39:                                       ; preds = %do.body.34
  br label %if.end.43

if.else.40:                                       ; preds = %do.body.34
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  %ob_type41 = getelementptr inbounds %struct._object, %struct._object* %44, i32 0, i32 1
  %45 = load %struct._typeobject*, %struct._typeobject** %ob_type41, align 8
  %tp_dealloc42 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %45, i32 0, i32 4
  %46 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc42, align 8
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp35, align 8
  call void %46(%struct._object* %47)
  br label %if.end.43

if.end.43:                                        ; preds = %if.else.40, %if.then.39
  br label %do.end.44

do.end.44:                                        ; preds = %if.end.43
  br label %do.body.45

do.body.45:                                       ; preds = %do.end.44
  %48 = load %struct._longobject*, %struct._longobject** %div, align 8
  %49 = bitcast %struct._longobject* %48 to %struct._object*
  store %struct._object* %49, %struct._object** %_py_decref_tmp46, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_refcnt47 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0
  %51 = load i64, i64* %ob_refcnt47, align 8
  %dec48 = add i64 %51, -1
  store i64 %dec48, i64* %ob_refcnt47, align 8
  %cmp49 = icmp ne i64 %dec48, 0
  br i1 %cmp49, label %if.then.50, label %if.else.51

if.then.50:                                       ; preds = %do.body.45
  br label %if.end.54

if.else.51:                                       ; preds = %do.body.45
  %52 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  %ob_type52 = getelementptr inbounds %struct._object, %struct._object* %52, i32 0, i32 1
  %53 = load %struct._typeobject*, %struct._typeobject** %ob_type52, align 8
  %tp_dealloc53 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %53, i32 0, i32 4
  %54 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc53, align 8
  %55 = load %struct._object*, %struct._object** %_py_decref_tmp46, align 8
  call void %54(%struct._object* %55)
  br label %if.end.54

if.end.54:                                        ; preds = %if.else.51, %if.then.50
  br label %do.end.55

do.end.55:                                        ; preds = %if.end.54
  br label %do.body.56

do.body.56:                                       ; preds = %do.end.55
  %56 = load %struct._longobject*, %struct._longobject** %one, align 8
  %57 = bitcast %struct._longobject* %56 to %struct._object*
  store %struct._object* %57, %struct._object** %_py_xdecref_tmp, align 8
  %58 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  %cmp57 = icmp ne %struct._object* %58, null
  br i1 %cmp57, label %if.then.58, label %if.end.70

if.then.58:                                       ; preds = %do.body.56
  br label %do.body.59

do.body.59:                                       ; preds = %if.then.58
  %59 = load %struct._object*, %struct._object** %_py_xdecref_tmp, align 8
  store %struct._object* %59, %struct._object** %_py_decref_tmp60, align 8
  %60 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  %ob_refcnt61 = getelementptr inbounds %struct._object, %struct._object* %60, i32 0, i32 0
  %61 = load i64, i64* %ob_refcnt61, align 8
  %dec62 = add i64 %61, -1
  store i64 %dec62, i64* %ob_refcnt61, align 8
  %cmp63 = icmp ne i64 %dec62, 0
  br i1 %cmp63, label %if.then.64, label %if.else.65

if.then.64:                                       ; preds = %do.body.59
  br label %if.end.68

if.else.65:                                       ; preds = %do.body.59
  %62 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  %ob_type66 = getelementptr inbounds %struct._object, %struct._object* %62, i32 0, i32 1
  %63 = load %struct._typeobject*, %struct._typeobject** %ob_type66, align 8
  %tp_dealloc67 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %63, i32 0, i32 4
  %64 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc67, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp60, align 8
  call void %64(%struct._object* %65)
  br label %if.end.68

if.end.68:                                        ; preds = %if.else.65, %if.then.64
  br label %do.end.69

do.end.69:                                        ; preds = %if.end.68
  br label %if.end.70

if.end.70:                                        ; preds = %do.end.69, %do.body.56
  br label %do.end.71

do.end.71:                                        ; preds = %if.end.70
  store i32 -1, i32* %retval
  br label %return

if.end.72:                                        ; preds = %lor.lhs.false.30
  br label %do.body.73

do.body.73:                                       ; preds = %if.end.72
  %66 = load %struct._longobject*, %struct._longobject** %one, align 8
  %67 = bitcast %struct._longobject* %66 to %struct._object*
  store %struct._object* %67, %struct._object** %_py_decref_tmp74, align 8
  %68 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8
  %ob_refcnt75 = getelementptr inbounds %struct._object, %struct._object* %68, i32 0, i32 0
  %69 = load i64, i64* %ob_refcnt75, align 8
  %dec76 = add i64 %69, -1
  store i64 %dec76, i64* %ob_refcnt75, align 8
  %cmp77 = icmp ne i64 %dec76, 0
  br i1 %cmp77, label %if.then.78, label %if.else.79

if.then.78:                                       ; preds = %do.body.73
  br label %if.end.82

if.else.79:                                       ; preds = %do.body.73
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8
  %ob_type80 = getelementptr inbounds %struct._object, %struct._object* %70, i32 0, i32 1
  %71 = load %struct._typeobject*, %struct._typeobject** %ob_type80, align 8
  %tp_dealloc81 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %71, i32 0, i32 4
  %72 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc81, align 8
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp74, align 8
  call void %72(%struct._object* %73)
  br label %if.end.82

if.end.82:                                        ; preds = %if.else.79, %if.then.78
  br label %do.end.83

do.end.83:                                        ; preds = %if.end.82
  br label %do.body.84

do.body.84:                                       ; preds = %do.end.83
  %74 = load %struct._longobject*, %struct._longobject** %div, align 8
  %75 = bitcast %struct._longobject* %74 to %struct._object*
  store %struct._object* %75, %struct._object** %_py_decref_tmp85, align 8
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  %ob_refcnt86 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0
  %77 = load i64, i64* %ob_refcnt86, align 8
  %dec87 = add i64 %77, -1
  store i64 %dec87, i64* %ob_refcnt86, align 8
  %cmp88 = icmp ne i64 %dec87, 0
  br i1 %cmp88, label %if.then.89, label %if.else.90

if.then.89:                                       ; preds = %do.body.84
  br label %if.end.93

if.else.90:                                       ; preds = %do.body.84
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  %ob_type91 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type91, align 8
  %tp_dealloc92 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc92, align 8
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp85, align 8
  call void %80(%struct._object* %81)
  br label %if.end.93

if.end.93:                                        ; preds = %if.else.90, %if.then.89
  br label %do.end.94

do.end.94:                                        ; preds = %if.end.93
  %82 = load %struct._longobject*, %struct._longobject** %temp, align 8
  store %struct._longobject* %82, %struct._longobject** %div, align 8
  br label %if.end.95

if.end.95:                                        ; preds = %do.end.94, %land.lhs.true.6, %lor.lhs.false
  %83 = load %struct._longobject**, %struct._longobject*** %pdiv.addr, align 8
  %cmp96 = icmp ne %struct._longobject** %83, null
  br i1 %cmp96, label %if.then.97, label %if.else.98

if.then.97:                                       ; preds = %if.end.95
  %84 = load %struct._longobject*, %struct._longobject** %div, align 8
  %85 = load %struct._longobject**, %struct._longobject*** %pdiv.addr, align 8
  store %struct._longobject* %84, %struct._longobject** %85, align 8
  br label %if.end.110

if.else.98:                                       ; preds = %if.end.95
  br label %do.body.99

do.body.99:                                       ; preds = %if.else.98
  %86 = load %struct._longobject*, %struct._longobject** %div, align 8
  %87 = bitcast %struct._longobject* %86 to %struct._object*
  store %struct._object* %87, %struct._object** %_py_decref_tmp100, align 8
  %88 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  %ob_refcnt101 = getelementptr inbounds %struct._object, %struct._object* %88, i32 0, i32 0
  %89 = load i64, i64* %ob_refcnt101, align 8
  %dec102 = add i64 %89, -1
  store i64 %dec102, i64* %ob_refcnt101, align 8
  %cmp103 = icmp ne i64 %dec102, 0
  br i1 %cmp103, label %if.then.104, label %if.else.105

if.then.104:                                      ; preds = %do.body.99
  br label %if.end.108

if.else.105:                                      ; preds = %do.body.99
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  %ob_type106 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 1
  %91 = load %struct._typeobject*, %struct._typeobject** %ob_type106, align 8
  %tp_dealloc107 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %91, i32 0, i32 4
  %92 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc107, align 8
  %93 = load %struct._object*, %struct._object** %_py_decref_tmp100, align 8
  call void %92(%struct._object* %93)
  br label %if.end.108

if.end.108:                                       ; preds = %if.else.105, %if.then.104
  br label %do.end.109

do.end.109:                                       ; preds = %if.end.108
  br label %if.end.110

if.end.110:                                       ; preds = %do.end.109, %if.then.97
  %94 = load %struct._longobject**, %struct._longobject*** %pmod.addr, align 8
  %cmp111 = icmp ne %struct._longobject** %94, null
  br i1 %cmp111, label %if.then.112, label %if.else.113

if.then.112:                                      ; preds = %if.end.110
  %95 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %96 = load %struct._longobject**, %struct._longobject*** %pmod.addr, align 8
  store %struct._longobject* %95, %struct._longobject** %96, align 8
  br label %if.end.125

if.else.113:                                      ; preds = %if.end.110
  br label %do.body.114

do.body.114:                                      ; preds = %if.else.113
  %97 = load %struct._longobject*, %struct._longobject** %mod, align 8
  %98 = bitcast %struct._longobject* %97 to %struct._object*
  store %struct._object* %98, %struct._object** %_py_decref_tmp115, align 8
  %99 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8
  %ob_refcnt116 = getelementptr inbounds %struct._object, %struct._object* %99, i32 0, i32 0
  %100 = load i64, i64* %ob_refcnt116, align 8
  %dec117 = add i64 %100, -1
  store i64 %dec117, i64* %ob_refcnt116, align 8
  %cmp118 = icmp ne i64 %dec117, 0
  br i1 %cmp118, label %if.then.119, label %if.else.120

if.then.119:                                      ; preds = %do.body.114
  br label %if.end.123

if.else.120:                                      ; preds = %do.body.114
  %101 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8
  %ob_type121 = getelementptr inbounds %struct._object, %struct._object* %101, i32 0, i32 1
  %102 = load %struct._typeobject*, %struct._typeobject** %ob_type121, align 8
  %tp_dealloc122 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %102, i32 0, i32 4
  %103 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc122, align 8
  %104 = load %struct._object*, %struct._object** %_py_decref_tmp115, align 8
  call void %103(%struct._object* %104)
  br label %if.end.123

if.end.123:                                       ; preds = %if.else.120, %if.then.119
  br label %do.end.124

do.end.124:                                       ; preds = %if.end.123
  br label %if.end.125

if.end.125:                                       ; preds = %do.end.124, %if.then.112
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.125, %do.end.71, %do.end.26, %if.then
  %105 = load i32, i32* %retval
  ret i32 %105
}

declare i32 @PyTuple_SetItem(%struct._object*, i64, %struct._object*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_bitwise(%struct._longobject* %a, i8 signext %op, %struct._longobject* %b) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %a.addr = alloca %struct._longobject*, align 8
  %op.addr = alloca i8, align 1
  %b.addr = alloca %struct._longobject*, align 8
  %nega = alloca i32, align 4
  %negb = alloca i32, align 4
  %negz = alloca i32, align 4
  %size_a = alloca i64, align 8
  %size_b = alloca i64, align 8
  %size_z = alloca i64, align 8
  %i = alloca i64, align 8
  %z = alloca %struct._longobject*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp69 = alloca %struct._object*, align 8
  %_py_decref_tmp81 = alloca %struct._object*, align 8
  %_py_decref_tmp179 = alloca %struct._object*, align 8
  %_py_decref_tmp191 = alloca %struct._object*, align 8
  store %struct._longobject* %a, %struct._longobject** %a.addr, align 8
  store i8 %op, i8* %op.addr, align 1
  store %struct._longobject* %b, %struct._longobject** %b.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %size_a, align 8
  %9 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %10 = bitcast %struct._longobject* %9 to %struct.PyVarObject*
  %ob_size3 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %10, i32 0, i32 1
  %11 = load i64, i64* %ob_size3, align 8
  %cmp4 = icmp slt i64 %11, 0
  %conv = zext i1 %cmp4 to i32
  store i32 %conv, i32* %nega, align 4
  %12 = load i32, i32* %nega, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %13 = load i64, i64* %size_a, align 8
  %call = call %struct._longobject* @_PyLong_New(i64 %13)
  store %struct._longobject* %call, %struct._longobject** %z, align 8
  %14 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp5 = icmp eq %struct._longobject* %14, null
  br i1 %cmp5, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %if.then
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %if.then
  %15 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %15, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit, i32 0, i32 0
  %16 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit8 = getelementptr inbounds %struct._longobject, %struct._longobject* %16, i32 0, i32 1
  %arraydecay9 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit8, i32 0, i32 0
  %17 = load i64, i64* %size_a, align 8
  call void @v_complement(i32* %arraydecay, i32* %arraydecay9, i64 %17)
  %18 = load %struct._longobject*, %struct._longobject** %z, align 8
  store %struct._longobject* %18, %struct._longobject** %a.addr, align 8
  br label %if.end.10

if.else:                                          ; preds = %cond.end
  %19 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %20 = bitcast %struct._longobject* %19 to %struct._object*
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %20, i32 0, i32 0
  %21 = load i64, i64* %ob_refcnt, align 8
  %inc = add i64 %21, 1
  store i64 %inc, i64* %ob_refcnt, align 8
  br label %if.end.10

if.end.10:                                        ; preds = %if.else, %if.end
  %22 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %23 = bitcast %struct._longobject* %22 to %struct.PyVarObject*
  %ob_size11 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %23, i32 0, i32 1
  %24 = load i64, i64* %ob_size11, align 8
  %cmp12 = icmp slt i64 %24, 0
  br i1 %cmp12, label %cond.true.14, label %cond.false.17

cond.true.14:                                     ; preds = %if.end.10
  %25 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %26 = bitcast %struct._longobject* %25 to %struct.PyVarObject*
  %ob_size15 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %26, i32 0, i32 1
  %27 = load i64, i64* %ob_size15, align 8
  %sub16 = sub i64 0, %27
  br label %cond.end.19

cond.false.17:                                    ; preds = %if.end.10
  %28 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %29 = bitcast %struct._longobject* %28 to %struct.PyVarObject*
  %ob_size18 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %29, i32 0, i32 1
  %30 = load i64, i64* %ob_size18, align 8
  br label %cond.end.19

cond.end.19:                                      ; preds = %cond.false.17, %cond.true.14
  %cond20 = phi i64 [ %sub16, %cond.true.14 ], [ %30, %cond.false.17 ]
  store i64 %cond20, i64* %size_b, align 8
  %31 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %32 = bitcast %struct._longobject* %31 to %struct.PyVarObject*
  %ob_size21 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %32, i32 0, i32 1
  %33 = load i64, i64* %ob_size21, align 8
  %cmp22 = icmp slt i64 %33, 0
  %conv23 = zext i1 %cmp22 to i32
  store i32 %conv23, i32* %negb, align 4
  %34 = load i32, i32* %negb, align 4
  %tobool24 = icmp ne i32 %34, 0
  br i1 %tobool24, label %if.then.25, label %if.else.41

if.then.25:                                       ; preds = %cond.end.19
  %35 = load i64, i64* %size_b, align 8
  %call26 = call %struct._longobject* @_PyLong_New(i64 %35)
  store %struct._longobject* %call26, %struct._longobject** %z, align 8
  %36 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp27 = icmp eq %struct._longobject* %36, null
  br i1 %cmp27, label %if.then.29, label %if.end.36

if.then.29:                                       ; preds = %if.then.25
  br label %do.body

do.body:                                          ; preds = %if.then.29
  %37 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %38 = bitcast %struct._longobject* %37 to %struct._object*
  store %struct._object* %38, %struct._object** %_py_decref_tmp, align 8
  %39 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt30 = getelementptr inbounds %struct._object, %struct._object* %39, i32 0, i32 0
  %40 = load i64, i64* %ob_refcnt30, align 8
  %dec = add i64 %40, -1
  store i64 %dec, i64* %ob_refcnt30, align 8
  %cmp31 = icmp ne i64 %dec, 0
  br i1 %cmp31, label %if.then.33, label %if.else.34

if.then.33:                                       ; preds = %do.body
  br label %if.end.35

if.else.34:                                       ; preds = %do.body
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 1
  %42 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %42, i32 0, i32 4
  %43 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %44 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %43(%struct._object* %44)
  br label %if.end.35

if.end.35:                                        ; preds = %if.else.34, %if.then.33
  br label %do.end

do.end:                                           ; preds = %if.end.35
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.36:                                        ; preds = %if.then.25
  %45 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit37 = getelementptr inbounds %struct._longobject, %struct._longobject* %45, i32 0, i32 1
  %arraydecay38 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit37, i32 0, i32 0
  %46 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit39 = getelementptr inbounds %struct._longobject, %struct._longobject* %46, i32 0, i32 1
  %arraydecay40 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit39, i32 0, i32 0
  %47 = load i64, i64* %size_b, align 8
  call void @v_complement(i32* %arraydecay38, i32* %arraydecay40, i64 %47)
  %48 = load %struct._longobject*, %struct._longobject** %z, align 8
  store %struct._longobject* %48, %struct._longobject** %b.addr, align 8
  br label %if.end.44

if.else.41:                                       ; preds = %cond.end.19
  %49 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %50 = bitcast %struct._longobject* %49 to %struct._object*
  %ob_refcnt42 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 0
  %51 = load i64, i64* %ob_refcnt42, align 8
  %inc43 = add i64 %51, 1
  store i64 %inc43, i64* %ob_refcnt42, align 8
  br label %if.end.44

if.end.44:                                        ; preds = %if.else.41, %if.end.36
  %52 = load i64, i64* %size_a, align 8
  %53 = load i64, i64* %size_b, align 8
  %cmp45 = icmp slt i64 %52, %53
  br i1 %cmp45, label %if.then.47, label %if.end.48

if.then.47:                                       ; preds = %if.end.44
  %54 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  store %struct._longobject* %54, %struct._longobject** %z, align 8
  %55 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  store %struct._longobject* %55, %struct._longobject** %a.addr, align 8
  %56 = load %struct._longobject*, %struct._longobject** %z, align 8
  store %struct._longobject* %56, %struct._longobject** %b.addr, align 8
  %57 = load i64, i64* %size_a, align 8
  store i64 %57, i64* %size_z, align 8
  %58 = load i64, i64* %size_b, align 8
  store i64 %58, i64* %size_a, align 8
  %59 = load i64, i64* %size_z, align 8
  store i64 %59, i64* %size_b, align 8
  %60 = load i32, i32* %nega, align 4
  store i32 %60, i32* %negz, align 4
  %61 = load i32, i32* %negb, align 4
  store i32 %61, i32* %nega, align 4
  %62 = load i32, i32* %negz, align 4
  store i32 %62, i32* %negb, align 4
  br label %if.end.48

if.end.48:                                        ; preds = %if.then.47, %if.end.44
  %63 = load i8, i8* %op.addr, align 1
  %conv49 = sext i8 %63 to i32
  switch i32 %conv49, label %sw.default [
    i32 94, label %sw.bb
    i32 38, label %sw.bb.50
    i32 124, label %sw.bb.56
  ]

sw.bb:                                            ; preds = %if.end.48
  %64 = load i32, i32* %nega, align 4
  %65 = load i32, i32* %negb, align 4
  %xor = xor i32 %64, %65
  store i32 %xor, i32* %negz, align 4
  %66 = load i64, i64* %size_a, align 8
  store i64 %66, i64* %size_z, align 8
  br label %sw.epilog

sw.bb.50:                                         ; preds = %if.end.48
  %67 = load i32, i32* %nega, align 4
  %68 = load i32, i32* %negb, align 4
  %and = and i32 %67, %68
  store i32 %and, i32* %negz, align 4
  %69 = load i32, i32* %negb, align 4
  %tobool51 = icmp ne i32 %69, 0
  br i1 %tobool51, label %cond.true.52, label %cond.false.53

cond.true.52:                                     ; preds = %sw.bb.50
  %70 = load i64, i64* %size_a, align 8
  br label %cond.end.54

cond.false.53:                                    ; preds = %sw.bb.50
  %71 = load i64, i64* %size_b, align 8
  br label %cond.end.54

cond.end.54:                                      ; preds = %cond.false.53, %cond.true.52
  %cond55 = phi i64 [ %70, %cond.true.52 ], [ %71, %cond.false.53 ]
  store i64 %cond55, i64* %size_z, align 8
  br label %sw.epilog

sw.bb.56:                                         ; preds = %if.end.48
  %72 = load i32, i32* %nega, align 4
  %73 = load i32, i32* %negb, align 4
  %or = or i32 %72, %73
  store i32 %or, i32* %negz, align 4
  %74 = load i32, i32* %negb, align 4
  %tobool57 = icmp ne i32 %74, 0
  br i1 %tobool57, label %cond.true.58, label %cond.false.59

cond.true.58:                                     ; preds = %sw.bb.56
  %75 = load i64, i64* %size_b, align 8
  br label %cond.end.60

cond.false.59:                                    ; preds = %sw.bb.56
  %76 = load i64, i64* %size_a, align 8
  br label %cond.end.60

cond.end.60:                                      ; preds = %cond.false.59, %cond.true.58
  %cond61 = phi i64 [ %75, %cond.true.58 ], [ %76, %cond.false.59 ]
  store i64 %cond61, i64* %size_z, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %if.end.48
  %call62 = call i32 @PyErr_BadArgument()
  store %struct._object* null, %struct._object** %retval
  br label %return

sw.epilog:                                        ; preds = %cond.end.60, %cond.end.54, %sw.bb
  %77 = load i64, i64* %size_z, align 8
  %78 = load i32, i32* %negz, align 4
  %conv63 = sext i32 %78 to i64
  %add = add i64 %77, %conv63
  %call64 = call %struct._longobject* @_PyLong_New(i64 %add)
  store %struct._longobject* %call64, %struct._longobject** %z, align 8
  %79 = load %struct._longobject*, %struct._longobject** %z, align 8
  %cmp65 = icmp eq %struct._longobject* %79, null
  br i1 %cmp65, label %if.then.67, label %if.end.92

if.then.67:                                       ; preds = %sw.epilog
  br label %do.body.68

do.body.68:                                       ; preds = %if.then.67
  %80 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %81 = bitcast %struct._longobject* %80 to %struct._object*
  store %struct._object* %81, %struct._object** %_py_decref_tmp69, align 8
  %82 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8
  %ob_refcnt70 = getelementptr inbounds %struct._object, %struct._object* %82, i32 0, i32 0
  %83 = load i64, i64* %ob_refcnt70, align 8
  %dec71 = add i64 %83, -1
  store i64 %dec71, i64* %ob_refcnt70, align 8
  %cmp72 = icmp ne i64 %dec71, 0
  br i1 %cmp72, label %if.then.74, label %if.else.75

if.then.74:                                       ; preds = %do.body.68
  br label %if.end.78

if.else.75:                                       ; preds = %do.body.68
  %84 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8
  %ob_type76 = getelementptr inbounds %struct._object, %struct._object* %84, i32 0, i32 1
  %85 = load %struct._typeobject*, %struct._typeobject** %ob_type76, align 8
  %tp_dealloc77 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %85, i32 0, i32 4
  %86 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc77, align 8
  %87 = load %struct._object*, %struct._object** %_py_decref_tmp69, align 8
  call void %86(%struct._object* %87)
  br label %if.end.78

if.end.78:                                        ; preds = %if.else.75, %if.then.74
  br label %do.end.79

do.end.79:                                        ; preds = %if.end.78
  br label %do.body.80

do.body.80:                                       ; preds = %do.end.79
  %88 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %89 = bitcast %struct._longobject* %88 to %struct._object*
  store %struct._object* %89, %struct._object** %_py_decref_tmp81, align 8
  %90 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  %ob_refcnt82 = getelementptr inbounds %struct._object, %struct._object* %90, i32 0, i32 0
  %91 = load i64, i64* %ob_refcnt82, align 8
  %dec83 = add i64 %91, -1
  store i64 %dec83, i64* %ob_refcnt82, align 8
  %cmp84 = icmp ne i64 %dec83, 0
  br i1 %cmp84, label %if.then.86, label %if.else.87

if.then.86:                                       ; preds = %do.body.80
  br label %if.end.90

if.else.87:                                       ; preds = %do.body.80
  %92 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  %ob_type88 = getelementptr inbounds %struct._object, %struct._object* %92, i32 0, i32 1
  %93 = load %struct._typeobject*, %struct._typeobject** %ob_type88, align 8
  %tp_dealloc89 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %93, i32 0, i32 4
  %94 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc89, align 8
  %95 = load %struct._object*, %struct._object** %_py_decref_tmp81, align 8
  call void %94(%struct._object* %95)
  br label %if.end.90

if.end.90:                                        ; preds = %if.else.87, %if.then.86
  br label %do.end.91

do.end.91:                                        ; preds = %if.end.90
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.92:                                        ; preds = %sw.epilog
  %96 = load i8, i8* %op.addr, align 1
  %conv93 = sext i8 %96 to i32
  switch i32 %conv93, label %sw.default.134 [
    i32 38, label %sw.bb.94
    i32 124, label %sw.bb.104
    i32 94, label %sw.bb.119
  ]

sw.bb.94:                                         ; preds = %if.end.92
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb.94
  %97 = load i64, i64* %i, align 8
  %98 = load i64, i64* %size_b, align 8
  %cmp95 = icmp slt i64 %97, %98
  br i1 %cmp95, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %99 = load i64, i64* %i, align 8
  %100 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit97 = getelementptr inbounds %struct._longobject, %struct._longobject* %100, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit97, i32 0, i64 %99
  %101 = load i32, i32* %arrayidx, align 4
  %102 = load i64, i64* %i, align 8
  %103 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit98 = getelementptr inbounds %struct._longobject, %struct._longobject* %103, i32 0, i32 1
  %arrayidx99 = getelementptr [1 x i32], [1 x i32]* %ob_digit98, i32 0, i64 %102
  %104 = load i32, i32* %arrayidx99, align 4
  %and100 = and i32 %101, %104
  %105 = load i64, i64* %i, align 8
  %106 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit101 = getelementptr inbounds %struct._longobject, %struct._longobject* %106, i32 0, i32 1
  %arrayidx102 = getelementptr [1 x i32], [1 x i32]* %ob_digit101, i32 0, i64 %105
  store i32 %and100, i32* %arrayidx102, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %107 = load i64, i64* %i, align 8
  %inc103 = add i64 %107, 1
  store i64 %inc103, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog.136

sw.bb.104:                                        ; preds = %if.end.92
  store i64 0, i64* %i, align 8
  br label %for.cond.105

for.cond.105:                                     ; preds = %for.inc.116, %sw.bb.104
  %108 = load i64, i64* %i, align 8
  %109 = load i64, i64* %size_b, align 8
  %cmp106 = icmp slt i64 %108, %109
  br i1 %cmp106, label %for.body.108, label %for.end.118

for.body.108:                                     ; preds = %for.cond.105
  %110 = load i64, i64* %i, align 8
  %111 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit109 = getelementptr inbounds %struct._longobject, %struct._longobject* %111, i32 0, i32 1
  %arrayidx110 = getelementptr [1 x i32], [1 x i32]* %ob_digit109, i32 0, i64 %110
  %112 = load i32, i32* %arrayidx110, align 4
  %113 = load i64, i64* %i, align 8
  %114 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit111 = getelementptr inbounds %struct._longobject, %struct._longobject* %114, i32 0, i32 1
  %arrayidx112 = getelementptr [1 x i32], [1 x i32]* %ob_digit111, i32 0, i64 %113
  %115 = load i32, i32* %arrayidx112, align 4
  %or113 = or i32 %112, %115
  %116 = load i64, i64* %i, align 8
  %117 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit114 = getelementptr inbounds %struct._longobject, %struct._longobject* %117, i32 0, i32 1
  %arrayidx115 = getelementptr [1 x i32], [1 x i32]* %ob_digit114, i32 0, i64 %116
  store i32 %or113, i32* %arrayidx115, align 4
  br label %for.inc.116

for.inc.116:                                      ; preds = %for.body.108
  %118 = load i64, i64* %i, align 8
  %inc117 = add i64 %118, 1
  store i64 %inc117, i64* %i, align 8
  br label %for.cond.105

for.end.118:                                      ; preds = %for.cond.105
  br label %sw.epilog.136

sw.bb.119:                                        ; preds = %if.end.92
  store i64 0, i64* %i, align 8
  br label %for.cond.120

for.cond.120:                                     ; preds = %for.inc.131, %sw.bb.119
  %119 = load i64, i64* %i, align 8
  %120 = load i64, i64* %size_b, align 8
  %cmp121 = icmp slt i64 %119, %120
  br i1 %cmp121, label %for.body.123, label %for.end.133

for.body.123:                                     ; preds = %for.cond.120
  %121 = load i64, i64* %i, align 8
  %122 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit124 = getelementptr inbounds %struct._longobject, %struct._longobject* %122, i32 0, i32 1
  %arrayidx125 = getelementptr [1 x i32], [1 x i32]* %ob_digit124, i32 0, i64 %121
  %123 = load i32, i32* %arrayidx125, align 4
  %124 = load i64, i64* %i, align 8
  %125 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %ob_digit126 = getelementptr inbounds %struct._longobject, %struct._longobject* %125, i32 0, i32 1
  %arrayidx127 = getelementptr [1 x i32], [1 x i32]* %ob_digit126, i32 0, i64 %124
  %126 = load i32, i32* %arrayidx127, align 4
  %xor128 = xor i32 %123, %126
  %127 = load i64, i64* %i, align 8
  %128 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit129 = getelementptr inbounds %struct._longobject, %struct._longobject* %128, i32 0, i32 1
  %arrayidx130 = getelementptr [1 x i32], [1 x i32]* %ob_digit129, i32 0, i64 %127
  store i32 %xor128, i32* %arrayidx130, align 4
  br label %for.inc.131

for.inc.131:                                      ; preds = %for.body.123
  %129 = load i64, i64* %i, align 8
  %inc132 = add i64 %129, 1
  store i64 %inc132, i64* %i, align 8
  br label %for.cond.120

for.end.133:                                      ; preds = %for.cond.120
  br label %sw.epilog.136

sw.default.134:                                   ; preds = %if.end.92
  %call135 = call i32 @PyErr_BadArgument()
  store %struct._object* null, %struct._object** %retval
  br label %return

sw.epilog.136:                                    ; preds = %for.end.133, %for.end.118, %for.end
  %130 = load i8, i8* %op.addr, align 1
  %conv137 = sext i8 %130 to i32
  %cmp138 = icmp eq i32 %conv137, 94
  br i1 %cmp138, label %land.lhs.true, label %if.else.154

land.lhs.true:                                    ; preds = %sw.epilog.136
  %131 = load i32, i32* %negb, align 4
  %tobool140 = icmp ne i32 %131, 0
  br i1 %tobool140, label %if.then.141, label %if.else.154

if.then.141:                                      ; preds = %land.lhs.true
  br label %for.cond.142

for.cond.142:                                     ; preds = %for.inc.151, %if.then.141
  %132 = load i64, i64* %i, align 8
  %133 = load i64, i64* %size_z, align 8
  %cmp143 = icmp slt i64 %132, %133
  br i1 %cmp143, label %for.body.145, label %for.end.153

for.body.145:                                     ; preds = %for.cond.142
  %134 = load i64, i64* %i, align 8
  %135 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit146 = getelementptr inbounds %struct._longobject, %struct._longobject* %135, i32 0, i32 1
  %arrayidx147 = getelementptr [1 x i32], [1 x i32]* %ob_digit146, i32 0, i64 %134
  %136 = load i32, i32* %arrayidx147, align 4
  %xor148 = xor i32 %136, 1073741823
  %137 = load i64, i64* %i, align 8
  %138 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit149 = getelementptr inbounds %struct._longobject, %struct._longobject* %138, i32 0, i32 1
  %arrayidx150 = getelementptr [1 x i32], [1 x i32]* %ob_digit149, i32 0, i64 %137
  store i32 %xor148, i32* %arrayidx150, align 4
  br label %for.inc.151

for.inc.151:                                      ; preds = %for.body.145
  %139 = load i64, i64* %i, align 8
  %inc152 = add i64 %139, 1
  store i64 %inc152, i64* %i, align 8
  br label %for.cond.142

for.end.153:                                      ; preds = %for.cond.142
  br label %if.end.164

if.else.154:                                      ; preds = %land.lhs.true, %sw.epilog.136
  %140 = load i64, i64* %i, align 8
  %141 = load i64, i64* %size_z, align 8
  %cmp155 = icmp slt i64 %140, %141
  br i1 %cmp155, label %if.then.157, label %if.end.163

if.then.157:                                      ; preds = %if.else.154
  %142 = load i64, i64* %i, align 8
  %143 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit158 = getelementptr inbounds %struct._longobject, %struct._longobject* %143, i32 0, i32 1
  %arrayidx159 = getelementptr [1 x i32], [1 x i32]* %ob_digit158, i32 0, i64 %142
  %144 = bitcast i32* %arrayidx159 to i8*
  %145 = load i64, i64* %i, align 8
  %146 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %ob_digit160 = getelementptr inbounds %struct._longobject, %struct._longobject* %146, i32 0, i32 1
  %arrayidx161 = getelementptr [1 x i32], [1 x i32]* %ob_digit160, i32 0, i64 %145
  %147 = bitcast i32* %arrayidx161 to i8*
  %148 = load i64, i64* %size_z, align 8
  %149 = load i64, i64* %i, align 8
  %sub162 = sub i64 %148, %149
  %mul = mul i64 %sub162, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %144, i8* %147, i64 %mul, i32 4, i1 false)
  br label %if.end.163

if.end.163:                                       ; preds = %if.then.157, %if.else.154
  br label %if.end.164

if.end.164:                                       ; preds = %if.end.163, %for.end.153
  %150 = load i32, i32* %negz, align 4
  %tobool165 = icmp ne i32 %150, 0
  br i1 %tobool165, label %if.then.166, label %if.end.177

if.then.166:                                      ; preds = %if.end.164
  %151 = load %struct._longobject*, %struct._longobject** %z, align 8
  %152 = bitcast %struct._longobject* %151 to %struct.PyVarObject*
  %ob_size167 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %152, i32 0, i32 1
  %153 = load i64, i64* %ob_size167, align 8
  %sub168 = sub i64 0, %153
  %154 = load %struct._longobject*, %struct._longobject** %z, align 8
  %155 = bitcast %struct._longobject* %154 to %struct.PyVarObject*
  %ob_size169 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %155, i32 0, i32 1
  store i64 %sub168, i64* %ob_size169, align 8
  %156 = load i64, i64* %size_z, align 8
  %157 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit170 = getelementptr inbounds %struct._longobject, %struct._longobject* %157, i32 0, i32 1
  %arrayidx171 = getelementptr [1 x i32], [1 x i32]* %ob_digit170, i32 0, i64 %156
  store i32 1073741823, i32* %arrayidx171, align 4
  %158 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit172 = getelementptr inbounds %struct._longobject, %struct._longobject* %158, i32 0, i32 1
  %arraydecay173 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit172, i32 0, i32 0
  %159 = load %struct._longobject*, %struct._longobject** %z, align 8
  %ob_digit174 = getelementptr inbounds %struct._longobject, %struct._longobject* %159, i32 0, i32 1
  %arraydecay175 = getelementptr inbounds [1 x i32], [1 x i32]* %ob_digit174, i32 0, i32 0
  %160 = load i64, i64* %size_z, align 8
  %add176 = add i64 %160, 1
  call void @v_complement(i32* %arraydecay173, i32* %arraydecay175, i64 %add176)
  br label %if.end.177

if.end.177:                                       ; preds = %if.then.166, %if.end.164
  br label %do.body.178

do.body.178:                                      ; preds = %if.end.177
  %161 = load %struct._longobject*, %struct._longobject** %a.addr, align 8
  %162 = bitcast %struct._longobject* %161 to %struct._object*
  store %struct._object* %162, %struct._object** %_py_decref_tmp179, align 8
  %163 = load %struct._object*, %struct._object** %_py_decref_tmp179, align 8
  %ob_refcnt180 = getelementptr inbounds %struct._object, %struct._object* %163, i32 0, i32 0
  %164 = load i64, i64* %ob_refcnt180, align 8
  %dec181 = add i64 %164, -1
  store i64 %dec181, i64* %ob_refcnt180, align 8
  %cmp182 = icmp ne i64 %dec181, 0
  br i1 %cmp182, label %if.then.184, label %if.else.185

if.then.184:                                      ; preds = %do.body.178
  br label %if.end.188

if.else.185:                                      ; preds = %do.body.178
  %165 = load %struct._object*, %struct._object** %_py_decref_tmp179, align 8
  %ob_type186 = getelementptr inbounds %struct._object, %struct._object* %165, i32 0, i32 1
  %166 = load %struct._typeobject*, %struct._typeobject** %ob_type186, align 8
  %tp_dealloc187 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %166, i32 0, i32 4
  %167 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc187, align 8
  %168 = load %struct._object*, %struct._object** %_py_decref_tmp179, align 8
  call void %167(%struct._object* %168)
  br label %if.end.188

if.end.188:                                       ; preds = %if.else.185, %if.then.184
  br label %do.end.189

do.end.189:                                       ; preds = %if.end.188
  br label %do.body.190

do.body.190:                                      ; preds = %do.end.189
  %169 = load %struct._longobject*, %struct._longobject** %b.addr, align 8
  %170 = bitcast %struct._longobject* %169 to %struct._object*
  store %struct._object* %170, %struct._object** %_py_decref_tmp191, align 8
  %171 = load %struct._object*, %struct._object** %_py_decref_tmp191, align 8
  %ob_refcnt192 = getelementptr inbounds %struct._object, %struct._object* %171, i32 0, i32 0
  %172 = load i64, i64* %ob_refcnt192, align 8
  %dec193 = add i64 %172, -1
  store i64 %dec193, i64* %ob_refcnt192, align 8
  %cmp194 = icmp ne i64 %dec193, 0
  br i1 %cmp194, label %if.then.196, label %if.else.197

if.then.196:                                      ; preds = %do.body.190
  br label %if.end.200

if.else.197:                                      ; preds = %do.body.190
  %173 = load %struct._object*, %struct._object** %_py_decref_tmp191, align 8
  %ob_type198 = getelementptr inbounds %struct._object, %struct._object* %173, i32 0, i32 1
  %174 = load %struct._typeobject*, %struct._typeobject** %ob_type198, align 8
  %tp_dealloc199 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %174, i32 0, i32 4
  %175 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc199, align 8
  %176 = load %struct._object*, %struct._object** %_py_decref_tmp191, align 8
  call void %175(%struct._object* %176)
  br label %if.end.200

if.end.200:                                       ; preds = %if.else.197, %if.then.196
  br label %do.end.201

do.end.201:                                       ; preds = %if.end.200
  %177 = load %struct._longobject*, %struct._longobject** %z, align 8
  %call202 = call %struct._longobject* @long_normalize(%struct._longobject* %177)
  %call203 = call %struct._longobject* @maybe_small_long(%struct._longobject* %call202)
  %178 = bitcast %struct._longobject* %call203 to %struct._object*
  store %struct._object* %178, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.201, %sw.default.134, %do.end.91, %sw.default, %do.end, %if.then.7
  %179 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %179
}

; Function Attrs: nounwind uwtable
define internal void @v_complement(i32* %z, i32* %a, i64 %m) #0 {
entry:
  %z.addr = alloca i32*, align 8
  %a.addr = alloca i32*, align 8
  %m.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %carry = alloca i32, align 4
  store i32* %z, i32** %z.addr, align 8
  store i32* %a, i32** %a.addr, align 8
  store i64 %m, i64* %m.addr, align 8
  store i32 1, i32* %carry, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8
  %1 = load i64, i64* %m.addr, align 8
  %cmp = icmp slt i64 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %i, align 8
  %3 = load i32*, i32** %a.addr, align 8
  %arrayidx = getelementptr i32, i32* %3, i64 %2
  %4 = load i32, i32* %arrayidx, align 4
  %xor = xor i32 %4, 1073741823
  %5 = load i32, i32* %carry, align 4
  %add = add i32 %5, %xor
  store i32 %add, i32* %carry, align 4
  %6 = load i32, i32* %carry, align 4
  %and = and i32 %6, 1073741823
  %7 = load i64, i64* %i, align 8
  %8 = load i32*, i32** %z.addr, align 8
  %arrayidx1 = getelementptr i32, i32* %8, i64 %7
  store i32 %and, i32* %arrayidx1, align 4
  %9 = load i32, i32* %carry, align 4
  %shr = lshr i32 %9, 30
  store i32 %shr, i32* %carry, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %i, align 8
  %inc = add i64 %10, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare i32 @PyErr_BadArgument() #1

declare %struct._object* @PyFloat_FromDouble(double) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_bit_length(%struct._longobject* %v) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._longobject*, align 8
  %result = alloca %struct._longobject*, align 8
  %x = alloca %struct._longobject*, align 8
  %y = alloca %struct._longobject*, align 8
  %ndigits = alloca i64, align 8
  %msd_bits = alloca i64, align 8
  %msd = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp36 = alloca %struct._object*, align 8
  %_py_decref_tmp54 = alloca %struct._object*, align 8
  %_py_decref_tmp70 = alloca %struct._object*, align 8
  %_py_decref_tmp82 = alloca %struct._object*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  store i64 0, i64* %msd_bits, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  store i64 %cond, i64* %ndigits, align 8
  %9 = load i64, i64* %ndigits, align 8
  %cmp3 = icmp eq i64 %9, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %call = call %struct._object* @PyLong_FromLong(i64 0)
  store %struct._object* %call, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %10 = load i64, i64* %ndigits, align 8
  %sub4 = sub i64 %10, 1
  %11 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %11, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %sub4
  %12 = load i32, i32* %arrayidx, align 4
  store i32 %12, i32* %msd, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %13 = load i32, i32* %msd, align 4
  %cmp5 = icmp uge i32 %13, 32
  br i1 %cmp5, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %14 = load i64, i64* %msd_bits, align 8
  %add = add i64 %14, 6
  store i64 %add, i64* %msd_bits, align 8
  %15 = load i32, i32* %msd, align 4
  %shr = lshr i32 %15, 6
  store i32 %shr, i32* %msd, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %16 = load i32, i32* %msd, align 4
  %idxprom = zext i32 %16 to i64
  %arrayidx6 = getelementptr [32 x i8], [32 x i8]* @BitLengthTable, i32 0, i64 %idxprom
  %17 = load i8, i8* %arrayidx6, align 1
  %conv = zext i8 %17 to i64
  %18 = load i64, i64* %msd_bits, align 8
  %add7 = add i64 %18, %conv
  store i64 %add7, i64* %msd_bits, align 8
  %19 = load i64, i64* %ndigits, align 8
  %cmp8 = icmp sle i64 %19, 307445734561825860
  br i1 %cmp8, label %if.then.10, label %if.end.14

if.then.10:                                       ; preds = %while.end
  %20 = load i64, i64* %ndigits, align 8
  %sub11 = sub i64 %20, 1
  %mul = mul i64 %sub11, 30
  %21 = load i64, i64* %msd_bits, align 8
  %add12 = add i64 %mul, %21
  %call13 = call %struct._object* @PyLong_FromSsize_t(i64 %add12)
  store %struct._object* %call13, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %while.end
  %22 = load i64, i64* %ndigits, align 8
  %sub15 = sub i64 %22, 1
  %call16 = call %struct._object* @PyLong_FromSsize_t(i64 %sub15)
  %23 = bitcast %struct._object* %call16 to %struct._longobject*
  store %struct._longobject* %23, %struct._longobject** %result, align 8
  %24 = load %struct._longobject*, %struct._longobject** %result, align 8
  %cmp17 = icmp eq %struct._longobject* %24, null
  br i1 %cmp17, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %if.end.14
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.20:                                        ; preds = %if.end.14
  %call21 = call %struct._object* @PyLong_FromLong(i64 30)
  %25 = bitcast %struct._object* %call21 to %struct._longobject*
  store %struct._longobject* %25, %struct._longobject** %x, align 8
  %26 = load %struct._longobject*, %struct._longobject** %x, align 8
  %cmp22 = icmp eq %struct._longobject* %26, null
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.20
  br label %error

if.end.25:                                        ; preds = %if.end.20
  %27 = load %struct._longobject*, %struct._longobject** %result, align 8
  %28 = load %struct._longobject*, %struct._longobject** %x, align 8
  %call26 = call %struct._object* @long_mul(%struct._longobject* %27, %struct._longobject* %28)
  %29 = bitcast %struct._object* %call26 to %struct._longobject*
  store %struct._longobject* %29, %struct._longobject** %y, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.25
  %30 = load %struct._longobject*, %struct._longobject** %x, align 8
  %31 = bitcast %struct._longobject* %30 to %struct._object*
  store %struct._object* %31, %struct._object** %_py_decref_tmp, align 8
  %32 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %32, i32 0, i32 0
  %33 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %33, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp27 = icmp ne i64 %dec, 0
  br i1 %cmp27, label %if.then.29, label %if.else

if.then.29:                                       ; preds = %do.body
  br label %if.end.30

if.else:                                          ; preds = %do.body
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %34, i32 0, i32 1
  %35 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %35, i32 0, i32 4
  %36 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %37 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %36(%struct._object* %37)
  br label %if.end.30

if.end.30:                                        ; preds = %if.else, %if.then.29
  br label %do.end

do.end:                                           ; preds = %if.end.30
  %38 = load %struct._longobject*, %struct._longobject** %y, align 8
  %cmp31 = icmp eq %struct._longobject* %38, null
  br i1 %cmp31, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %do.end
  br label %error

if.end.34:                                        ; preds = %do.end
  br label %do.body.35

do.body.35:                                       ; preds = %if.end.34
  %39 = load %struct._longobject*, %struct._longobject** %result, align 8
  %40 = bitcast %struct._longobject* %39 to %struct._object*
  store %struct._object* %40, %struct._object** %_py_decref_tmp36, align 8
  %41 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8
  %ob_refcnt37 = getelementptr inbounds %struct._object, %struct._object* %41, i32 0, i32 0
  %42 = load i64, i64* %ob_refcnt37, align 8
  %dec38 = add i64 %42, -1
  store i64 %dec38, i64* %ob_refcnt37, align 8
  %cmp39 = icmp ne i64 %dec38, 0
  br i1 %cmp39, label %if.then.41, label %if.else.42

if.then.41:                                       ; preds = %do.body.35
  br label %if.end.45

if.else.42:                                       ; preds = %do.body.35
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8
  %ob_type43 = getelementptr inbounds %struct._object, %struct._object* %43, i32 0, i32 1
  %44 = load %struct._typeobject*, %struct._typeobject** %ob_type43, align 8
  %tp_dealloc44 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %44, i32 0, i32 4
  %45 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc44, align 8
  %46 = load %struct._object*, %struct._object** %_py_decref_tmp36, align 8
  call void %45(%struct._object* %46)
  br label %if.end.45

if.end.45:                                        ; preds = %if.else.42, %if.then.41
  br label %do.end.46

do.end.46:                                        ; preds = %if.end.45
  %47 = load %struct._longobject*, %struct._longobject** %y, align 8
  store %struct._longobject* %47, %struct._longobject** %result, align 8
  %48 = load i64, i64* %msd_bits, align 8
  %call47 = call %struct._object* @PyLong_FromLong(i64 %48)
  %49 = bitcast %struct._object* %call47 to %struct._longobject*
  store %struct._longobject* %49, %struct._longobject** %x, align 8
  %50 = load %struct._longobject*, %struct._longobject** %x, align 8
  %cmp48 = icmp eq %struct._longobject* %50, null
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %do.end.46
  br label %error

if.end.51:                                        ; preds = %do.end.46
  %51 = load %struct._longobject*, %struct._longobject** %result, align 8
  %52 = load %struct._longobject*, %struct._longobject** %x, align 8
  %call52 = call %struct._object* @long_add(%struct._longobject* %51, %struct._longobject* %52)
  %53 = bitcast %struct._object* %call52 to %struct._longobject*
  store %struct._longobject* %53, %struct._longobject** %y, align 8
  br label %do.body.53

do.body.53:                                       ; preds = %if.end.51
  %54 = load %struct._longobject*, %struct._longobject** %x, align 8
  %55 = bitcast %struct._longobject* %54 to %struct._object*
  store %struct._object* %55, %struct._object** %_py_decref_tmp54, align 8
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_refcnt55 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0
  %57 = load i64, i64* %ob_refcnt55, align 8
  %dec56 = add i64 %57, -1
  store i64 %dec56, i64* %ob_refcnt55, align 8
  %cmp57 = icmp ne i64 %dec56, 0
  br i1 %cmp57, label %if.then.59, label %if.else.60

if.then.59:                                       ; preds = %do.body.53
  br label %if.end.63

if.else.60:                                       ; preds = %do.body.53
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  %ob_type61 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type61, align 8
  %tp_dealloc62 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc62, align 8
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp54, align 8
  call void %60(%struct._object* %61)
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.60, %if.then.59
  br label %do.end.64

do.end.64:                                        ; preds = %if.end.63
  %62 = load %struct._longobject*, %struct._longobject** %y, align 8
  %cmp65 = icmp eq %struct._longobject* %62, null
  br i1 %cmp65, label %if.then.67, label %if.end.68

if.then.67:                                       ; preds = %do.end.64
  br label %error

if.end.68:                                        ; preds = %do.end.64
  br label %do.body.69

do.body.69:                                       ; preds = %if.end.68
  %63 = load %struct._longobject*, %struct._longobject** %result, align 8
  %64 = bitcast %struct._longobject* %63 to %struct._object*
  store %struct._object* %64, %struct._object** %_py_decref_tmp70, align 8
  %65 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8
  %ob_refcnt71 = getelementptr inbounds %struct._object, %struct._object* %65, i32 0, i32 0
  %66 = load i64, i64* %ob_refcnt71, align 8
  %dec72 = add i64 %66, -1
  store i64 %dec72, i64* %ob_refcnt71, align 8
  %cmp73 = icmp ne i64 %dec72, 0
  br i1 %cmp73, label %if.then.75, label %if.else.76

if.then.75:                                       ; preds = %do.body.69
  br label %if.end.79

if.else.76:                                       ; preds = %do.body.69
  %67 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8
  %ob_type77 = getelementptr inbounds %struct._object, %struct._object* %67, i32 0, i32 1
  %68 = load %struct._typeobject*, %struct._typeobject** %ob_type77, align 8
  %tp_dealloc78 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %68, i32 0, i32 4
  %69 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc78, align 8
  %70 = load %struct._object*, %struct._object** %_py_decref_tmp70, align 8
  call void %69(%struct._object* %70)
  br label %if.end.79

if.end.79:                                        ; preds = %if.else.76, %if.then.75
  br label %do.end.80

do.end.80:                                        ; preds = %if.end.79
  %71 = load %struct._longobject*, %struct._longobject** %y, align 8
  store %struct._longobject* %71, %struct._longobject** %result, align 8
  %72 = load %struct._longobject*, %struct._longobject** %result, align 8
  %73 = bitcast %struct._longobject* %72 to %struct._object*
  store %struct._object* %73, %struct._object** %retval
  br label %return

error:                                            ; preds = %if.then.67, %if.then.50, %if.then.33, %if.then.24
  br label %do.body.81

do.body.81:                                       ; preds = %error
  %74 = load %struct._longobject*, %struct._longobject** %result, align 8
  %75 = bitcast %struct._longobject* %74 to %struct._object*
  store %struct._object* %75, %struct._object** %_py_decref_tmp82, align 8
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8
  %ob_refcnt83 = getelementptr inbounds %struct._object, %struct._object* %76, i32 0, i32 0
  %77 = load i64, i64* %ob_refcnt83, align 8
  %dec84 = add i64 %77, -1
  store i64 %dec84, i64* %ob_refcnt83, align 8
  %cmp85 = icmp ne i64 %dec84, 0
  br i1 %cmp85, label %if.then.87, label %if.else.88

if.then.87:                                       ; preds = %do.body.81
  br label %if.end.91

if.else.88:                                       ; preds = %do.body.81
  %78 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8
  %ob_type89 = getelementptr inbounds %struct._object, %struct._object* %78, i32 0, i32 1
  %79 = load %struct._typeobject*, %struct._typeobject** %ob_type89, align 8
  %tp_dealloc90 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %79, i32 0, i32 4
  %80 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc90, align 8
  %81 = load %struct._object*, %struct._object** %_py_decref_tmp82, align 8
  call void %80(%struct._object* %81)
  br label %if.end.91

if.end.91:                                        ; preds = %if.else.88, %if.then.87
  br label %do.end.92

do.end.92:                                        ; preds = %if.end.91
  store %struct._object* null, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.92, %do.end.80, %if.then.19, %if.then.10, %if.then
  %82 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %82
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_to_bytes(%struct._longobject* %v, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %v.addr = alloca %struct._longobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %byteorder_str = alloca %struct._object*, align 8
  %is_signed_obj = alloca %struct._object*, align 8
  %length = alloca i64, align 8
  %little_endian = alloca i32, align 4
  %is_signed = alloca i32, align 4
  %bytes = alloca %struct._object*, align 8
  %cmp15 = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* null, %struct._object** %is_signed_obj, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %1 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %0, %struct._object* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @long_to_bytes.kwlist, i32 0, i32 0), i64* %length, %struct._object** %byteorder_str, %struct._object** %is_signed_obj)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %args.addr, align 8
  %cmp = icmp ne %struct._object* %2, null
  br i1 %cmp, label %land.lhs.true, label %if.end.3

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %args.addr, align 8
  %4 = bitcast %struct._object* %3 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size, align 8
  %cmp1 = icmp sgt i64 %5, 2
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %land.lhs.true
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.55, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %land.lhs.true, %if.end
  %7 = load %struct._object*, %struct._object** %byteorder_str, align 8
  %call4 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0))
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.else, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  store i32 1, i32* %little_endian, align 4
  br label %if.end.12

if.else:                                          ; preds = %if.end.3
  %8 = load %struct._object*, %struct._object** %byteorder_str, align 8
  %call7 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0))
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.else.10, label %if.then.9

if.then.9:                                        ; preds = %if.else
  store i32 0, i32* %little_endian, align 4
  br label %if.end.11

if.else.10:                                       ; preds = %if.else
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.58, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.then.9
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %if.then.6
  %10 = load %struct._object*, %struct._object** %is_signed_obj, align 8
  %cmp13 = icmp ne %struct._object* %10, null
  br i1 %cmp13, label %if.then.14, label %if.else.21

if.then.14:                                       ; preds = %if.end.12
  %11 = load %struct._object*, %struct._object** %is_signed_obj, align 8
  %call16 = call i32 @PyObject_IsTrue(%struct._object* %11)
  store i32 %call16, i32* %cmp15, align 4
  %12 = load i32, i32* %cmp15, align 4
  %cmp17 = icmp slt i32 %12, 0
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.then.14
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.19:                                        ; preds = %if.then.14
  %13 = load i32, i32* %cmp15, align 4
  %tobool20 = icmp ne i32 %13, 0
  %cond = select i1 %tobool20, i32 1, i32 0
  store i32 %cond, i32* %is_signed, align 4
  br label %if.end.22

if.else.21:                                       ; preds = %if.end.12
  store i32 0, i32* %is_signed, align 4
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21, %if.end.19
  %14 = load i64, i64* %length, align 8
  %cmp23 = icmp slt i64 %14, 0
  br i1 %cmp23, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %if.end.22
  %15 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %15, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.59, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.25:                                        ; preds = %if.end.22
  %16 = load i64, i64* %length, align 8
  %call26 = call %struct._object* @PyBytes_FromStringAndSize(i8* null, i64 %16)
  store %struct._object* %call26, %struct._object** %bytes, align 8
  %17 = load %struct._object*, %struct._object** %bytes, align 8
  %cmp27 = icmp eq %struct._object* %17, null
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.25
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.29:                                        ; preds = %if.end.25
  %18 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %19 = load %struct._object*, %struct._object** %bytes, align 8
  %20 = bitcast %struct._object* %19 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %20, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  %21 = load i64, i64* %length, align 8
  %22 = load i32, i32* %little_endian, align 4
  %23 = load i32, i32* %is_signed, align 4
  %call30 = call i32 @_PyLong_AsByteArray(%struct._longobject* %18, i8* %arraydecay, i64 %21, i32 %22, i32 %23)
  %cmp31 = icmp slt i32 %call30, 0
  br i1 %cmp31, label %if.then.32, label %if.end.37

if.then.32:                                       ; preds = %if.end.29
  br label %do.body

do.body:                                          ; preds = %if.then.32
  %24 = load %struct._object*, %struct._object** %bytes, align 8
  store %struct._object* %24, %struct._object** %_py_decref_tmp, align 8
  %25 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %25, i32 0, i32 0
  %26 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %26, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp33 = icmp ne i64 %dec, 0
  br i1 %cmp33, label %if.then.34, label %if.else.35

if.then.34:                                       ; preds = %do.body
  br label %if.end.36

if.else.35:                                       ; preds = %do.body
  %27 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %27, i32 0, i32 1
  %28 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %28, i32 0, i32 4
  %29 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %30 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %29(%struct._object* %30)
  br label %if.end.36

if.end.36:                                        ; preds = %if.else.35, %if.then.34
  br label %do.end

do.end:                                           ; preds = %if.end.36
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.37:                                        ; preds = %if.end.29
  %31 = load %struct._object*, %struct._object** %bytes, align 8
  store %struct._object* %31, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.37, %do.end, %if.then.28, %if.then.24, %if.then.18, %if.else.10, %if.then.2, %if.then
  %32 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %32
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_from_bytes(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %byteorder_str = alloca %struct._object*, align 8
  %is_signed_obj = alloca %struct._object*, align 8
  %little_endian = alloca i32, align 4
  %is_signed = alloca i32, align 4
  %obj = alloca %struct._object*, align 8
  %bytes = alloca %struct._object*, align 8
  %long_obj = alloca %struct._object*, align 8
  %cmp15 = alloca i32, align 4
  %_py_decref_tmp = alloca %struct._object*, align 8
  %newobj = alloca %struct._longobject*, align 8
  %i = alloca i32, align 4
  %n = alloca i64, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp66 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  store %struct._object* null, %struct._object** %is_signed_obj, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %1 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call i32 (%struct._object*, %struct._object*, i8*, i8**, ...) @PyArg_ParseTupleAndKeywords(%struct._object* %0, %struct._object* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @long_from_bytes.kwlist, i32 0, i32 0), %struct._object** %obj, %struct._object** %byteorder_str, %struct._object** %is_signed_obj)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._object*, %struct._object** %args.addr, align 8
  %cmp = icmp ne %struct._object* %2, null
  br i1 %cmp, label %land.lhs.true, label %if.end.3

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %args.addr, align 8
  %4 = bitcast %struct._object* %3 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size, align 8
  %cmp1 = icmp sgt i64 %5, 2
  br i1 %cmp1, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %land.lhs.true
  %6 = load %struct._object*, %struct._object** @PyExc_TypeError, align 8
  call void @PyErr_SetString(%struct._object* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.55, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %land.lhs.true, %if.end
  %7 = load %struct._object*, %struct._object** %byteorder_str, align 8
  %call4 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0))
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.else, label %if.then.6

if.then.6:                                        ; preds = %if.end.3
  store i32 1, i32* %little_endian, align 4
  br label %if.end.12

if.else:                                          ; preds = %if.end.3
  %8 = load %struct._object*, %struct._object** %byteorder_str, align 8
  %call7 = call i32 @PyUnicode_CompareWithASCIIString(%struct._object* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0))
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.else.10, label %if.then.9

if.then.9:                                        ; preds = %if.else
  store i32 0, i32* %little_endian, align 4
  br label %if.end.11

if.else.10:                                       ; preds = %if.else
  %9 = load %struct._object*, %struct._object** @PyExc_ValueError, align 8
  call void @PyErr_SetString(%struct._object* %9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.58, i32 0, i32 0))
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.11:                                        ; preds = %if.then.9
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %if.then.6
  %10 = load %struct._object*, %struct._object** %is_signed_obj, align 8
  %cmp13 = icmp ne %struct._object* %10, null
  br i1 %cmp13, label %if.then.14, label %if.else.21

if.then.14:                                       ; preds = %if.end.12
  %11 = load %struct._object*, %struct._object** %is_signed_obj, align 8
  %call16 = call i32 @PyObject_IsTrue(%struct._object* %11)
  store i32 %call16, i32* %cmp15, align 4
  %12 = load i32, i32* %cmp15, align 4
  %cmp17 = icmp slt i32 %12, 0
  br i1 %cmp17, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.then.14
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.19:                                        ; preds = %if.then.14
  %13 = load i32, i32* %cmp15, align 4
  %tobool20 = icmp ne i32 %13, 0
  %cond = select i1 %tobool20, i32 1, i32 0
  store i32 %cond, i32* %is_signed, align 4
  br label %if.end.22

if.else.21:                                       ; preds = %if.end.12
  store i32 0, i32* %is_signed, align 4
  br label %if.end.22

if.end.22:                                        ; preds = %if.else.21, %if.end.19
  %14 = load %struct._object*, %struct._object** %obj, align 8
  %call23 = call %struct._object* @PyObject_Bytes(%struct._object* %14)
  store %struct._object* %call23, %struct._object** %bytes, align 8
  %15 = load %struct._object*, %struct._object** %bytes, align 8
  %cmp24 = icmp eq %struct._object* %15, null
  br i1 %cmp24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %if.end.22
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.26:                                        ; preds = %if.end.22
  %16 = load %struct._object*, %struct._object** %bytes, align 8
  %17 = bitcast %struct._object* %16 to %struct.PyBytesObject*
  %ob_sval = getelementptr inbounds %struct.PyBytesObject, %struct.PyBytesObject* %17, i32 0, i32 2
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %ob_sval, i32 0, i32 0
  %18 = load %struct._object*, %struct._object** %bytes, align 8
  %19 = bitcast %struct._object* %18 to %struct.PyVarObject*
  %ob_size27 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %19, i32 0, i32 1
  %20 = load i64, i64* %ob_size27, align 8
  %21 = load i32, i32* %little_endian, align 4
  %22 = load i32, i32* %is_signed, align 4
  %call28 = call %struct._object* @_PyLong_FromByteArray(i8* %arraydecay, i64 %20, i32 %21, i32 %22)
  store %struct._object* %call28, %struct._object** %long_obj, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.26
  %23 = load %struct._object*, %struct._object** %bytes, align 8
  store %struct._object* %23, %struct._object** %_py_decref_tmp, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %24, i32 0, i32 0
  %25 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %25, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp29 = icmp ne i64 %dec, 0
  br i1 %cmp29, label %if.then.30, label %if.else.31

if.then.30:                                       ; preds = %do.body
  br label %if.end.32

if.else.31:                                       ; preds = %do.body
  %26 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %26, i32 0, i32 1
  %27 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %27, i32 0, i32 4
  %28 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %28(%struct._object* %29)
  br label %if.end.32

if.end.32:                                        ; preds = %if.else.31, %if.then.30
  br label %do.end

do.end:                                           ; preds = %if.end.32
  %30 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %cmp33 = icmp ne %struct._typeobject* %30, @PyLong_Type
  br i1 %cmp33, label %land.lhs.true.34, label %if.end.77

land.lhs.true.34:                                 ; preds = %do.end
  %31 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %call35 = call i32 @PyType_IsSubtype(%struct._typeobject* %31, %struct._typeobject* @PyLong_Type)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.then.37, label %if.end.77

if.then.37:                                       ; preds = %land.lhs.true.34
  %32 = load %struct._object*, %struct._object** %long_obj, align 8
  %33 = bitcast %struct._object* %32 to %struct.PyVarObject*
  %ob_size38 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %33, i32 0, i32 1
  %34 = load i64, i64* %ob_size38, align 8
  %cmp39 = icmp slt i64 %34, 0
  br i1 %cmp39, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.37
  %35 = load %struct._object*, %struct._object** %long_obj, align 8
  %36 = bitcast %struct._object* %35 to %struct.PyVarObject*
  %ob_size40 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %36, i32 0, i32 1
  %37 = load i64, i64* %ob_size40, align 8
  %sub = sub i64 0, %37
  br label %cond.end

cond.false:                                       ; preds = %if.then.37
  %38 = load %struct._object*, %struct._object** %long_obj, align 8
  %39 = bitcast %struct._object* %38 to %struct.PyVarObject*
  %ob_size41 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %39, i32 0, i32 1
  %40 = load i64, i64* %ob_size41, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond42 = phi i64 [ %sub, %cond.true ], [ %40, %cond.false ]
  store i64 %cond42, i64* %n, align 8
  %41 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 36
  %42 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8
  %43 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %44 = load i64, i64* %n, align 8
  %call43 = call %struct._object* %42(%struct._typeobject* %43, i64 %44)
  %45 = bitcast %struct._object* %call43 to %struct._longobject*
  store %struct._longobject* %45, %struct._longobject** %newobj, align 8
  %46 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %cmp44 = icmp eq %struct._longobject* %46, null
  br i1 %cmp44, label %if.then.45, label %if.end.57

if.then.45:                                       ; preds = %cond.end
  br label %do.body.46

do.body.46:                                       ; preds = %if.then.45
  %47 = load %struct._object*, %struct._object** %long_obj, align 8
  store %struct._object* %47, %struct._object** %_py_decref_tmp47, align 8
  %48 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %48, i32 0, i32 0
  %49 = load i64, i64* %ob_refcnt48, align 8
  %dec49 = add i64 %49, -1
  store i64 %dec49, i64* %ob_refcnt48, align 8
  %cmp50 = icmp ne i64 %dec49, 0
  br i1 %cmp50, label %if.then.51, label %if.else.52

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55

if.else.52:                                       ; preds = %do.body.46
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %50, i32 0, i32 1
  %51 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %51, i32 0, i32 4
  %52 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8
  %53 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  call void %52(%struct._object* %53)
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.55
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.57:                                        ; preds = %cond.end
  %54 = load %struct._object*, %struct._object** %long_obj, align 8
  %55 = bitcast %struct._object* %54 to %struct.PyVarObject*
  %ob_size58 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %55, i32 0, i32 1
  %56 = load i64, i64* %ob_size58, align 8
  %57 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %58 = bitcast %struct._longobject* %57 to %struct.PyVarObject*
  %ob_size59 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %58, i32 0, i32 1
  store i64 %56, i64* %ob_size59, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.57
  %59 = load i32, i32* %i, align 4
  %conv = sext i32 %59 to i64
  %60 = load i64, i64* %n, align 8
  %cmp60 = icmp slt i64 %conv, %60
  br i1 %cmp60, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %61 = load i32, i32* %i, align 4
  %idxprom = sext i32 %61 to i64
  %62 = load %struct._object*, %struct._object** %long_obj, align 8
  %63 = bitcast %struct._object* %62 to %struct._longobject*
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %63, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %idxprom
  %64 = load i32, i32* %arrayidx, align 4
  %65 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %65 to i64
  %66 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %ob_digit63 = getelementptr inbounds %struct._longobject, %struct._longobject* %66, i32 0, i32 1
  %arrayidx64 = getelementptr [1 x i32], [1 x i32]* %ob_digit63, i32 0, i64 %idxprom62
  store i32 %64, i32* %arrayidx64, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %67 = load i32, i32* %i, align 4
  %inc = add i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.65

do.body.65:                                       ; preds = %for.end
  %68 = load %struct._object*, %struct._object** %long_obj, align 8
  store %struct._object* %68, %struct._object** %_py_decref_tmp66, align 8
  %69 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  %ob_refcnt67 = getelementptr inbounds %struct._object, %struct._object* %69, i32 0, i32 0
  %70 = load i64, i64* %ob_refcnt67, align 8
  %dec68 = add i64 %70, -1
  store i64 %dec68, i64* %ob_refcnt67, align 8
  %cmp69 = icmp ne i64 %dec68, 0
  br i1 %cmp69, label %if.then.71, label %if.else.72

if.then.71:                                       ; preds = %do.body.65
  br label %if.end.75

if.else.72:                                       ; preds = %do.body.65
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  %ob_type73 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 1
  %72 = load %struct._typeobject*, %struct._typeobject** %ob_type73, align 8
  %tp_dealloc74 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %72, i32 0, i32 4
  %73 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc74, align 8
  %74 = load %struct._object*, %struct._object** %_py_decref_tmp66, align 8
  call void %73(%struct._object* %74)
  br label %if.end.75

if.end.75:                                        ; preds = %if.else.72, %if.then.71
  br label %do.end.76

do.end.76:                                        ; preds = %if.end.75
  %75 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %76 = bitcast %struct._longobject* %75 to %struct._object*
  store %struct._object* %76, %struct._object** %retval
  br label %return

if.end.77:                                        ; preds = %land.lhs.true.34, %do.end
  %77 = load %struct._object*, %struct._object** %long_obj, align 8
  store %struct._object* %77, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.77, %do.end.76, %do.end.56, %if.then.25, %if.then.18, %if.else.10, %if.then.2, %if.then
  %78 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %78
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_round(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %o_ndigits = alloca %struct._object*, align 8
  %temp = alloca %struct._object*, align 8
  %result = alloca %struct._object*, align 8
  %ndigits = alloca %struct._object*, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp17 = alloca %struct._object*, align 8
  %_py_decref_tmp34 = alloca %struct._object*, align 8
  %_py_decref_tmp47 = alloca %struct._object*, align 8
  %_py_decref_tmp58 = alloca %struct._object*, align 8
  %_py_decref_tmp73 = alloca %struct._object*, align 8
  %_py_decref_tmp88 = alloca %struct._object*, align 8
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* null, %struct._object** %o_ndigits, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), %struct._object** %o_ndigits)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct._object*, %struct._object** %o_ndigits, align 8
  %cmp = icmp eq %struct._object* %1, null
  br i1 %cmp, label %if.then.1, label %if.end.3

if.then.1:                                        ; preds = %if.end
  %2 = load %struct._object*, %struct._object** %self.addr, align 8
  %call2 = call %struct._object* @long_long(%struct._object* %2)
  store %struct._object* %call2, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %3 = load %struct._object*, %struct._object** %o_ndigits, align 8
  %call4 = call %struct._object* @PyNumber_Index(%struct._object* %3)
  store %struct._object* %call4, %struct._object** %ndigits, align 8
  %4 = load %struct._object*, %struct._object** %ndigits, align 8
  %cmp5 = icmp eq %struct._object* %4, null
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.3
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.7:                                         ; preds = %if.end.3
  %5 = load %struct._object*, %struct._object** %ndigits, align 8
  %6 = bitcast %struct._object* %5 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %6, i32 0, i32 1
  %7 = load i64, i64* %ob_size, align 8
  %cmp8 = icmp sge i64 %7, 0
  br i1 %cmp8, label %if.then.9, label %if.end.14

if.then.9:                                        ; preds = %if.end.7
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %8 = load %struct._object*, %struct._object** %ndigits, align 8
  store %struct._object* %8, %struct._object** %_py_decref_tmp, align 8
  %9 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %9, i32 0, i32 0
  %10 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %10, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp10 = icmp ne i64 %dec, 0
  br i1 %cmp10, label %if.then.11, label %if.else

if.then.11:                                       ; preds = %do.body
  br label %if.end.12

if.else:                                          ; preds = %do.body
  %11 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %11, i32 0, i32 1
  %12 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %12, i32 0, i32 4
  %13 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %14 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %13(%struct._object* %14)
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.then.11
  br label %do.end

do.end:                                           ; preds = %if.end.12
  %15 = load %struct._object*, %struct._object** %self.addr, align 8
  %call13 = call %struct._object* @long_long(%struct._object* %15)
  store %struct._object* %call13, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %if.end.7
  %16 = load %struct._object*, %struct._object** %ndigits, align 8
  %17 = bitcast %struct._object* %16 to %struct._longobject*
  %call15 = call %struct._object* @long_neg(%struct._longobject* %17)
  store %struct._object* %call15, %struct._object** %temp, align 8
  br label %do.body.16

do.body.16:                                       ; preds = %if.end.14
  %18 = load %struct._object*, %struct._object** %ndigits, align 8
  store %struct._object* %18, %struct._object** %_py_decref_tmp17, align 8
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_refcnt18 = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 0
  %20 = load i64, i64* %ob_refcnt18, align 8
  %dec19 = add i64 %20, -1
  store i64 %dec19, i64* %ob_refcnt18, align 8
  %cmp20 = icmp ne i64 %dec19, 0
  br i1 %cmp20, label %if.then.21, label %if.else.22

if.then.21:                                       ; preds = %do.body.16
  br label %if.end.25

if.else.22:                                       ; preds = %do.body.16
  %21 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  %ob_type23 = getelementptr inbounds %struct._object, %struct._object* %21, i32 0, i32 1
  %22 = load %struct._typeobject*, %struct._typeobject** %ob_type23, align 8
  %tp_dealloc24 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %22, i32 0, i32 4
  %23 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc24, align 8
  %24 = load %struct._object*, %struct._object** %_py_decref_tmp17, align 8
  call void %23(%struct._object* %24)
  br label %if.end.25

if.end.25:                                        ; preds = %if.else.22, %if.then.21
  br label %do.end.26

do.end.26:                                        ; preds = %if.end.25
  %25 = load %struct._object*, %struct._object** %temp, align 8
  store %struct._object* %25, %struct._object** %ndigits, align 8
  %26 = load %struct._object*, %struct._object** %ndigits, align 8
  %cmp27 = icmp eq %struct._object* %26, null
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %do.end.26
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.29:                                        ; preds = %do.end.26
  %call30 = call %struct._object* @PyLong_FromLong(i64 10)
  store %struct._object* %call30, %struct._object** %result, align 8
  %27 = load %struct._object*, %struct._object** %result, align 8
  %cmp31 = icmp eq %struct._object* %27, null
  br i1 %cmp31, label %if.then.32, label %if.end.44

if.then.32:                                       ; preds = %if.end.29
  br label %do.body.33

do.body.33:                                       ; preds = %if.then.32
  %28 = load %struct._object*, %struct._object** %ndigits, align 8
  store %struct._object* %28, %struct._object** %_py_decref_tmp34, align 8
  %29 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  %ob_refcnt35 = getelementptr inbounds %struct._object, %struct._object* %29, i32 0, i32 0
  %30 = load i64, i64* %ob_refcnt35, align 8
  %dec36 = add i64 %30, -1
  store i64 %dec36, i64* %ob_refcnt35, align 8
  %cmp37 = icmp ne i64 %dec36, 0
  br i1 %cmp37, label %if.then.38, label %if.else.39

if.then.38:                                       ; preds = %do.body.33
  br label %if.end.42

if.else.39:                                       ; preds = %do.body.33
  %31 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  %ob_type40 = getelementptr inbounds %struct._object, %struct._object* %31, i32 0, i32 1
  %32 = load %struct._typeobject*, %struct._typeobject** %ob_type40, align 8
  %tp_dealloc41 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %32, i32 0, i32 4
  %33 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc41, align 8
  %34 = load %struct._object*, %struct._object** %_py_decref_tmp34, align 8
  call void %33(%struct._object* %34)
  br label %if.end.42

if.end.42:                                        ; preds = %if.else.39, %if.then.38
  br label %do.end.43

do.end.43:                                        ; preds = %if.end.42
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.44:                                        ; preds = %if.end.29
  %35 = load %struct._object*, %struct._object** %result, align 8
  %36 = load %struct._object*, %struct._object** %ndigits, align 8
  %call45 = call %struct._object* @long_pow(%struct._object* %35, %struct._object* %36, %struct._object* @_Py_NoneStruct)
  store %struct._object* %call45, %struct._object** %temp, align 8
  br label %do.body.46

do.body.46:                                       ; preds = %if.end.44
  %37 = load %struct._object*, %struct._object** %ndigits, align 8
  store %struct._object* %37, %struct._object** %_py_decref_tmp47, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_refcnt48 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt48, align 8
  %dec49 = add i64 %39, -1
  store i64 %dec49, i64* %ob_refcnt48, align 8
  %cmp50 = icmp ne i64 %dec49, 0
  br i1 %cmp50, label %if.then.51, label %if.else.52

if.then.51:                                       ; preds = %do.body.46
  br label %if.end.55

if.else.52:                                       ; preds = %do.body.46
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  %ob_type53 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type53, align 8
  %tp_dealloc54 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc54, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp47, align 8
  call void %42(%struct._object* %43)
  br label %if.end.55

if.end.55:                                        ; preds = %if.else.52, %if.then.51
  br label %do.end.56

do.end.56:                                        ; preds = %if.end.55
  br label %do.body.57

do.body.57:                                       ; preds = %do.end.56
  %44 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %44, %struct._object** %_py_decref_tmp58, align 8
  %45 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8
  %ob_refcnt59 = getelementptr inbounds %struct._object, %struct._object* %45, i32 0, i32 0
  %46 = load i64, i64* %ob_refcnt59, align 8
  %dec60 = add i64 %46, -1
  store i64 %dec60, i64* %ob_refcnt59, align 8
  %cmp61 = icmp ne i64 %dec60, 0
  br i1 %cmp61, label %if.then.62, label %if.else.63

if.then.62:                                       ; preds = %do.body.57
  br label %if.end.66

if.else.63:                                       ; preds = %do.body.57
  %47 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8
  %ob_type64 = getelementptr inbounds %struct._object, %struct._object* %47, i32 0, i32 1
  %48 = load %struct._typeobject*, %struct._typeobject** %ob_type64, align 8
  %tp_dealloc65 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %48, i32 0, i32 4
  %49 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc65, align 8
  %50 = load %struct._object*, %struct._object** %_py_decref_tmp58, align 8
  call void %49(%struct._object* %50)
  br label %if.end.66

if.end.66:                                        ; preds = %if.else.63, %if.then.62
  br label %do.end.67

do.end.67:                                        ; preds = %if.end.66
  %51 = load %struct._object*, %struct._object** %temp, align 8
  store %struct._object* %51, %struct._object** %result, align 8
  %52 = load %struct._object*, %struct._object** %result, align 8
  %cmp68 = icmp eq %struct._object* %52, null
  br i1 %cmp68, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %do.end.67
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.70:                                        ; preds = %do.end.67
  %53 = load %struct._object*, %struct._object** %self.addr, align 8
  %54 = load %struct._object*, %struct._object** %result, align 8
  %call71 = call %struct._object* @_PyLong_DivmodNear(%struct._object* %53, %struct._object* %54)
  store %struct._object* %call71, %struct._object** %temp, align 8
  br label %do.body.72

do.body.72:                                       ; preds = %if.end.70
  %55 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %55, %struct._object** %_py_decref_tmp73, align 8
  %56 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_refcnt74 = getelementptr inbounds %struct._object, %struct._object* %56, i32 0, i32 0
  %57 = load i64, i64* %ob_refcnt74, align 8
  %dec75 = add i64 %57, -1
  store i64 %dec75, i64* %ob_refcnt74, align 8
  %cmp76 = icmp ne i64 %dec75, 0
  br i1 %cmp76, label %if.then.77, label %if.else.78

if.then.77:                                       ; preds = %do.body.72
  br label %if.end.81

if.else.78:                                       ; preds = %do.body.72
  %58 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  %ob_type79 = getelementptr inbounds %struct._object, %struct._object* %58, i32 0, i32 1
  %59 = load %struct._typeobject*, %struct._typeobject** %ob_type79, align 8
  %tp_dealloc80 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %59, i32 0, i32 4
  %60 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc80, align 8
  %61 = load %struct._object*, %struct._object** %_py_decref_tmp73, align 8
  call void %60(%struct._object* %61)
  br label %if.end.81

if.end.81:                                        ; preds = %if.else.78, %if.then.77
  br label %do.end.82

do.end.82:                                        ; preds = %if.end.81
  %62 = load %struct._object*, %struct._object** %temp, align 8
  store %struct._object* %62, %struct._object** %result, align 8
  %63 = load %struct._object*, %struct._object** %result, align 8
  %cmp83 = icmp eq %struct._object* %63, null
  br i1 %cmp83, label %if.then.84, label %if.end.85

if.then.84:                                       ; preds = %do.end.82
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.85:                                        ; preds = %do.end.82
  %64 = load %struct._object*, %struct._object** %self.addr, align 8
  %65 = bitcast %struct._object* %64 to %struct._longobject*
  %66 = load %struct._object*, %struct._object** %result, align 8
  %67 = bitcast %struct._object* %66 to %struct.PyTupleObject*
  %ob_item = getelementptr inbounds %struct.PyTupleObject, %struct.PyTupleObject* %67, i32 0, i32 1
  %arrayidx = getelementptr [1 x %struct._object*], [1 x %struct._object*]* %ob_item, i32 0, i64 1
  %68 = load %struct._object*, %struct._object** %arrayidx, align 8
  %69 = bitcast %struct._object* %68 to %struct._longobject*
  %call86 = call %struct._object* @long_sub(%struct._longobject* %65, %struct._longobject* %69)
  store %struct._object* %call86, %struct._object** %temp, align 8
  br label %do.body.87

do.body.87:                                       ; preds = %if.end.85
  %70 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %70, %struct._object** %_py_decref_tmp88, align 8
  %71 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_refcnt89 = getelementptr inbounds %struct._object, %struct._object* %71, i32 0, i32 0
  %72 = load i64, i64* %ob_refcnt89, align 8
  %dec90 = add i64 %72, -1
  store i64 %dec90, i64* %ob_refcnt89, align 8
  %cmp91 = icmp ne i64 %dec90, 0
  br i1 %cmp91, label %if.then.92, label %if.else.93

if.then.92:                                       ; preds = %do.body.87
  br label %if.end.96

if.else.93:                                       ; preds = %do.body.87
  %73 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  %ob_type94 = getelementptr inbounds %struct._object, %struct._object* %73, i32 0, i32 1
  %74 = load %struct._typeobject*, %struct._typeobject** %ob_type94, align 8
  %tp_dealloc95 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %74, i32 0, i32 4
  %75 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc95, align 8
  %76 = load %struct._object*, %struct._object** %_py_decref_tmp88, align 8
  call void %75(%struct._object* %76)
  br label %if.end.96

if.end.96:                                        ; preds = %if.else.93, %if.then.92
  br label %do.end.97

do.end.97:                                        ; preds = %if.end.96
  %77 = load %struct._object*, %struct._object** %temp, align 8
  store %struct._object* %77, %struct._object** %result, align 8
  %78 = load %struct._object*, %struct._object** %result, align 8
  store %struct._object* %78, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.97, %if.then.84, %if.then.69, %do.end.43, %if.then.28, %do.end, %if.then.6, %if.then.1, %if.then
  %79 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %79
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_getnewargs(%struct._longobject* %v) #0 {
entry:
  %v.addr = alloca %struct._longobject*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %call = call %struct._object* @_PyLong_Copy(%struct._longobject* %0)
  %call1 = call %struct._object* (i8*, ...) @Py_BuildValue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i32 0, i32 0), %struct._object* %call)
  ret %struct._object* %call1
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long__format__(%struct._object* %self, %struct._object* %args) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %self.addr = alloca %struct._object*, align 8
  %args.addr = alloca %struct._object*, align 8
  %format_spec = alloca %struct._object*, align 8
  %writer = alloca %struct._PyUnicodeWriter, align 8
  %ret = alloca i32, align 4
  store %struct._object* %self, %struct._object** %self.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %call = call i32 (%struct._object*, i8*, ...) @PyArg_ParseTuple(%struct._object* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.64, i32 0, i32 0), %struct._object** %format_spec)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  call void @_PyUnicodeWriter_Init(%struct._PyUnicodeWriter* %writer)
  %1 = load %struct._object*, %struct._object** %self.addr, align 8
  %2 = load %struct._object*, %struct._object** %format_spec, align 8
  %3 = load %struct._object*, %struct._object** %format_spec, align 8
  %4 = bitcast %struct._object* %3 to %struct.PyASCIIObject*
  %length = getelementptr inbounds %struct.PyASCIIObject, %struct.PyASCIIObject* %4, i32 0, i32 1
  %5 = load i64, i64* %length, align 8
  %call1 = call i32 @_PyLong_FormatAdvancedWriter(%struct._PyUnicodeWriter* %writer, %struct._object* %1, %struct._object* %2, i64 0, i64 %5)
  store i32 %call1, i32* %ret, align 4
  %6 = load i32, i32* %ret, align 4
  %cmp = icmp eq i32 %6, -1
  br i1 %cmp, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  call void @_PyUnicodeWriter_Dealloc(%struct._PyUnicodeWriter* %writer)
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.3:                                         ; preds = %if.end
  %call4 = call %struct._object* @_PyUnicodeWriter_Finish(%struct._PyUnicodeWriter* %writer)
  store %struct._object* %call4, %struct._object** %retval
  br label %return

return:                                           ; preds = %if.end.3, %if.then.2, %if.then
  %7 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %7
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_sizeof(%struct._longobject* %v) #0 {
entry:
  %v.addr = alloca %struct._longobject*, align 8
  %res = alloca i64, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  %0 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %1 = bitcast %struct._longobject* %0 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %1, i32 0, i32 1
  %2 = load i64, i64* %ob_size, align 8
  %cmp = icmp slt i64 %2, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %4 = bitcast %struct._longobject* %3 to %struct.PyVarObject*
  %ob_size1 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %4, i32 0, i32 1
  %5 = load i64, i64* %ob_size1, align 8
  %sub = sub i64 0, %5
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._longobject*, %struct._longobject** %v.addr, align 8
  %7 = bitcast %struct._longobject* %6 to %struct.PyVarObject*
  %ob_size2 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %7, i32 0, i32 1
  %8 = load i64, i64* %ob_size2, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub, %cond.true ], [ %8, %cond.false ]
  %mul = mul i64 %cond, 4
  %add = add i64 24, %mul
  store i64 %add, i64* %res, align 8
  %9 = load i64, i64* %res, align 8
  %call = call %struct._object* @PyLong_FromSsize_t(i64 %9)
  ret %struct._object* %call
}

declare i32 @PyArg_ParseTupleAndKeywords(%struct._object*, %struct._object*, i8*, i8**, ...) #1

declare i32 @PyUnicode_CompareWithASCIIString(%struct._object*, i8*) #1

declare i32 @PyObject_IsTrue(%struct._object*) #1

declare %struct._object* @PyObject_Bytes(%struct._object*) #1

declare i32 @PyType_IsSubtype(%struct._typeobject*, %struct._typeobject*) #1

declare i32 @PyArg_ParseTuple(%struct._object*, i8*, ...) #1

declare %struct._object* @PyNumber_Index(%struct._object*) #1

declare %struct._object* @Py_BuildValue(i8*, ...) #1

declare void @_PyUnicodeWriter_Init(%struct._PyUnicodeWriter*) #1

declare i32 @_PyLong_FormatAdvancedWriter(%struct._PyUnicodeWriter*, %struct._object*, %struct._object*, i64, i64) #1

declare void @_PyUnicodeWriter_Dealloc(%struct._PyUnicodeWriter*) #1

declare %struct._object* @_PyUnicodeWriter_Finish(%struct._PyUnicodeWriter*) #1

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_get0(%struct._longobject* %v, i8* %context) #0 {
entry:
  %v.addr = alloca %struct._longobject*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  store i8* %context, i8** %context.addr, align 8
  %call = call %struct._object* @PyLong_FromLong(i64 0)
  ret %struct._object* %call
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_get1(%struct._longobject* %v, i8* %context) #0 {
entry:
  %v.addr = alloca %struct._longobject*, align 8
  %context.addr = alloca i8*, align 8
  store %struct._longobject* %v, %struct._longobject** %v.addr, align 8
  store i8* %context, i8** %context.addr, align 8
  %call = call %struct._object* @PyLong_FromLong(i64 1)
  ret %struct._object* %call
}

; Function Attrs: nounwind uwtable
define internal %struct._object* @long_subtype_new(%struct._typeobject* %type, %struct._object* %args, %struct._object* %kwds) #0 {
entry:
  %retval = alloca %struct._object*, align 8
  %type.addr = alloca %struct._typeobject*, align 8
  %args.addr = alloca %struct._object*, align 8
  %kwds.addr = alloca %struct._object*, align 8
  %tmp = alloca %struct._longobject*, align 8
  %newobj = alloca %struct._longobject*, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %_py_decref_tmp = alloca %struct._object*, align 8
  %_py_decref_tmp22 = alloca %struct._object*, align 8
  store %struct._typeobject* %type, %struct._typeobject** %type.addr, align 8
  store %struct._object* %args, %struct._object** %args.addr, align 8
  store %struct._object* %kwds, %struct._object** %kwds.addr, align 8
  %0 = load %struct._object*, %struct._object** %args.addr, align 8
  %1 = load %struct._object*, %struct._object** %kwds.addr, align 8
  %call = call %struct._object* @long_new(%struct._typeobject* @PyLong_Type, %struct._object* %0, %struct._object* %1)
  %2 = bitcast %struct._object* %call to %struct._longobject*
  store %struct._longobject* %2, %struct._longobject** %tmp, align 8
  %3 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %cmp = icmp eq %struct._longobject* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %5 = bitcast %struct._longobject* %4 to %struct.PyVarObject*
  %ob_size = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %5, i32 0, i32 1
  %6 = load i64, i64* %ob_size, align 8
  store i64 %6, i64* %n, align 8
  %7 = load i64, i64* %n, align 8
  %cmp4 = icmp slt i64 %7, 0
  br i1 %cmp4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end
  %8 = load i64, i64* %n, align 8
  %sub = sub i64 0, %8
  store i64 %sub, i64* %n, align 8
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %if.end
  %9 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %tp_alloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %9, i32 0, i32 36
  %10 = load %struct._object* (%struct._typeobject*, i64)*, %struct._object* (%struct._typeobject*, i64)** %tp_alloc, align 8
  %11 = load %struct._typeobject*, %struct._typeobject** %type.addr, align 8
  %12 = load i64, i64* %n, align 8
  %call7 = call %struct._object* %10(%struct._typeobject* %11, i64 %12)
  %13 = bitcast %struct._object* %call7 to %struct._longobject*
  store %struct._longobject* %13, %struct._longobject** %newobj, align 8
  %14 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %cmp8 = icmp eq %struct._longobject* %14, null
  br i1 %cmp8, label %if.then.9, label %if.end.14

if.then.9:                                        ; preds = %if.end.6
  br label %do.body

do.body:                                          ; preds = %if.then.9
  %15 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %16 = bitcast %struct._longobject* %15 to %struct._object*
  store %struct._object* %16, %struct._object** %_py_decref_tmp, align 8
  %17 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_refcnt = getelementptr inbounds %struct._object, %struct._object* %17, i32 0, i32 0
  %18 = load i64, i64* %ob_refcnt, align 8
  %dec = add i64 %18, -1
  store i64 %dec, i64* %ob_refcnt, align 8
  %cmp11 = icmp ne i64 %dec, 0
  br i1 %cmp11, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %do.body
  br label %if.end.13

if.else:                                          ; preds = %do.body
  %19 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  %ob_type = getelementptr inbounds %struct._object, %struct._object* %19, i32 0, i32 1
  %20 = load %struct._typeobject*, %struct._typeobject** %ob_type, align 8
  %tp_dealloc = getelementptr inbounds %struct._typeobject, %struct._typeobject* %20, i32 0, i32 4
  %21 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc, align 8
  %22 = load %struct._object*, %struct._object** %_py_decref_tmp, align 8
  call void %21(%struct._object* %22)
  br label %if.end.13

if.end.13:                                        ; preds = %if.else, %if.then.12
  br label %do.end

do.end:                                           ; preds = %if.end.13
  store %struct._object* null, %struct._object** %retval
  br label %return

if.end.14:                                        ; preds = %if.end.6
  %23 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %24 = bitcast %struct._longobject* %23 to %struct.PyVarObject*
  %ob_size15 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %24, i32 0, i32 1
  %25 = load i64, i64* %ob_size15, align 8
  %26 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %27 = bitcast %struct._longobject* %26 to %struct.PyVarObject*
  %ob_size16 = getelementptr inbounds %struct.PyVarObject, %struct.PyVarObject* %27, i32 0, i32 1
  store i64 %25, i64* %ob_size16, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.14
  %28 = load i64, i64* %i, align 8
  %29 = load i64, i64* %n, align 8
  %cmp17 = icmp slt i64 %28, %29
  br i1 %cmp17, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load i64, i64* %i, align 8
  %31 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %ob_digit = getelementptr inbounds %struct._longobject, %struct._longobject* %31, i32 0, i32 1
  %arrayidx = getelementptr [1 x i32], [1 x i32]* %ob_digit, i32 0, i64 %30
  %32 = load i32, i32* %arrayidx, align 4
  %33 = load i64, i64* %i, align 8
  %34 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %ob_digit18 = getelementptr inbounds %struct._longobject, %struct._longobject* %34, i32 0, i32 1
  %arrayidx19 = getelementptr [1 x i32], [1 x i32]* %ob_digit18, i32 0, i64 %33
  store i32 %32, i32* %arrayidx19, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %35 = load i64, i64* %i, align 8
  %inc = add i64 %35, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %do.body.20

do.body.20:                                       ; preds = %for.end
  %36 = load %struct._longobject*, %struct._longobject** %tmp, align 8
  %37 = bitcast %struct._longobject* %36 to %struct._object*
  store %struct._object* %37, %struct._object** %_py_decref_tmp22, align 8
  %38 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8
  %ob_refcnt23 = getelementptr inbounds %struct._object, %struct._object* %38, i32 0, i32 0
  %39 = load i64, i64* %ob_refcnt23, align 8
  %dec24 = add i64 %39, -1
  store i64 %dec24, i64* %ob_refcnt23, align 8
  %cmp25 = icmp ne i64 %dec24, 0
  br i1 %cmp25, label %if.then.26, label %if.else.27

if.then.26:                                       ; preds = %do.body.20
  br label %if.end.30

if.else.27:                                       ; preds = %do.body.20
  %40 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8
  %ob_type28 = getelementptr inbounds %struct._object, %struct._object* %40, i32 0, i32 1
  %41 = load %struct._typeobject*, %struct._typeobject** %ob_type28, align 8
  %tp_dealloc29 = getelementptr inbounds %struct._typeobject, %struct._typeobject* %41, i32 0, i32 4
  %42 = load void (%struct._object*)*, void (%struct._object*)** %tp_dealloc29, align 8
  %43 = load %struct._object*, %struct._object** %_py_decref_tmp22, align 8
  call void %42(%struct._object* %43)
  br label %if.end.30

if.end.30:                                        ; preds = %if.else.27, %if.then.26
  br label %do.end.31

do.end.31:                                        ; preds = %if.end.30
  %44 = load %struct._longobject*, %struct._longobject** %newobj, align 8
  %45 = bitcast %struct._longobject* %44 to %struct._object*
  store %struct._object* %45, %struct._object** %retval
  br label %return

return:                                           ; preds = %do.end.31, %do.end, %if.then
  %46 = load %struct._object*, %struct._object** %retval
  ret %struct._object* %46
}

declare %struct._object* @PyNumber_Long(%struct._object*) #1

declare i64 @PyNumber_AsSsize_t(%struct._object*, %struct._object*) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
