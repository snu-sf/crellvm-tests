; ModuleID = './process.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.action = type { i32, i8**, i32*, i32 }
%struct.display = type { %struct.display*, %struct.acluser*, %struct.canvas, %struct.canvas*, %struct.canvas*, %struct.layout*, void (i8*, i32)*, i8*, i32, i32, %struct.win*, %struct.win*, i32, [33 x i8], i8*, i8, i32, i32, i32, i32, i32, i32, i32, i32, %struct.mchar, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.mchar, %struct.timeval, i32, i8, i32, i8*, i32, i32, i32, i32, i32, i32, %struct.event, %struct.event, i32, %struct.action*, i32, [4096 x i8], i32, %struct.event, %struct.event, %struct.event, %struct.mode, %struct.mode, i32, i32, i8*, i32, i32, i32, i8*, i32, i32, i32, i32, i8*, i8*, i32, i8*, %struct.event, i32, i32, [201 x %union.tcu], [6 x i8*], [6 x i8], i32, i16, [256 x i8], i8***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, %struct.utmp, i32, i32, i32, %struct.event, i32, %struct.event }
%struct.acluser = type { %struct.acluser*, [257 x i8], i8*, i32, i32, i32, i32, i32, %struct.plop, i32, [3 x i8*], %struct.aclusergroup* }
%struct.plop = type { i8*, i32, i32 }
%struct.aclusergroup = type { %struct.acluser*, %struct.aclusergroup* }
%struct.canvas = type { %struct.canvas*, %struct.display*, %struct.canvas*, %struct.canvas*, %struct.canvas*, %struct.canvas*, i32, i32, %struct.viewport*, %struct.layer*, %struct.canvas*, %struct.layer, i32, i32, i32, i32, i32, i32, %struct.event }
%struct.viewport = type { %struct.viewport*, %struct.canvas*, i32, i32, i32, i32, i32, i32 }
%struct.layer = type { %struct.canvas*, i32, i32, i32, i32, i32, %struct.LayFuncs*, i8*, %struct.layer*, %struct.layer*, i32, i32, %struct.anon, %struct.anon.0 }
%struct.LayFuncs = type { void (i8**, i32*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, i32 (i32, i32, i32, %struct.mchar*, i32)*, i32 (i32, i32)*, void ()*, void (i8*)* }
%struct.anon = type { [3 x i8], i32, i32 }
%struct.anon.0 = type { i8, i32*, i32*, i32, i32, i32 }
%struct.layout = type { %struct.layout*, i8*, i32, %struct.canvas, %struct.canvas*, %struct.canvas*, i32 }
%struct.win = type { %struct.win*, i32, i8*, %struct.layer, %struct.layer*, i32, %struct.pseudowin*, %struct.display*, %struct.display*, i32, %struct.event, %struct.event, %struct.event, %struct.event, i32, i32, [4096 x i8], i32, [4096 x i8], i32, i32, i8*, i8*, [768 x i8], i32, %struct.win*, i32, [64 x i32], i32, i32, %struct.acluser*, [3 x i8*], i8*, i8*, i32, i32, %struct.mline*, %struct.mchar, i8, i8, i8, i32, i32, [4 x i32], i32, %struct.cursor, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, [768 x i8], i8*, i8*, i32, i32, %struct.logfile*, i32, i32, i32, i32, i8, i8, i32, i32, i32, i32, %struct.mline*, %struct.paster, i32, i32, [64 x i8*], i8*, i8*, i32, i8*, %struct.utmp, [768 x i8], i32, %struct.display*, %struct.anon.2, %struct.event, i32 }
%struct.pseudowin = type { i32, i32, i32, %struct.event, %struct.event, [768 x i8], [768 x i8], [4096 x i8], i32 }
%struct.cursor = type { i32, i32, i32, %struct.mchar, i32, i32, [4 x i32] }
%struct.logfile = type { %struct.logfile*, %struct._IO_FILE*, i8*, i32, i32, i32, %struct.stat* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.mline = type { i8*, i8*, i8*, i8*, i8* }
%struct.paster = type { i8*, i8*, i32, %struct.layer*, %struct.event }
%struct.anon.2 = type { i32, %struct.mline*, i32, i32, i32, %struct.mline*, i32, %struct.cursor }
%struct.mchar = type { i8, i8, i8, i8, i8, i8 }
%struct.timeval = type { i64, i64 }
%struct.mode = type { %struct.termios }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%union.tcu = type { i8* }
%struct.utmp = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.exit_status, i32, %struct.anon.1, [4 x i32], [20 x i8] }
%struct.exit_status = type { i16, i16 }
%struct.anon.1 = type { i32, i32 }
%struct.event = type { %struct.event*, void (%struct.event*, i8*)*, i8*, i32, i32, i32, %struct.timeval, i32, i32, i32*, i32* }
%struct.comm = type { i8*, i32, [1 x i8*] }
%struct.NewWindow = type { i32, i8*, i8**, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32 }
%struct.term = type { i8*, i32 }
%struct.kmap_ext = type { i8*, i32, %struct.action, %struct.action, %struct.action }
%struct.digraph = type { [2 x i8], i32 }
%struct.kclass = type { %struct.kclass*, i8*, [338 x %struct.action] }
%struct.inputsu = type { %struct.acluser**, [24 x i8], [130 x i8], [130 x i8] }

@NullStr = global [1 x i8] zeroinitializer, align 1
@TtyMode = global i32 400, align 4
@hardcopy_append = global i32 0, align 4
@all_norefresh = global i32 0, align 4
@zmodem_mode = global i32 0, align 4
@enter_window_name_mode = global i32 0, align 4
@ktab = common global [338 x %struct.action] zeroinitializer, align 16
@noargs = common global [1 x i8*] zeroinitializer, align 8
@umtab = common global [104 x %struct.action] zeroinitializer, align 16
@dmtab = common global [104 x %struct.action] zeroinitializer, align 16
@mmtab = common global [104 x %struct.action] zeroinitializer, align 16
@kmapdef = external global [0 x i8*], align 8
@kmapadef = external global [0 x i8*], align 8
@kmapmdef = external global [0 x i8*], align 8
@.str = private unnamed_addr constant [2 x i8] c"-\00", align 1
@maxwin = external global i32, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"-b\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"prev\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@DefaultEsc = external global i32, align 4
@DefaultMetaEsc = external global i32, align 4
@idleaction = common global %struct.action zeroinitializer, align 8
@display = external global %struct.display*, align 8
@maptimeout = internal global i32 300, align 4
@flayer = external global %struct.layer*, align 8
@fore = external global %struct.win*, align 8
@visual_bell = external global i32, align 4
@comms = external global [0 x %struct.comm], align 8
@users = external global %struct.acluser*, align 8
@queryflag = external global i32, align 4
@.str.6 = private unnamed_addr constant [30 x i8] c"%s command cannot be queried.\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"%s: %s: display required\00", align 1
@rc_name = external global i8*, align 8
@.str.8 = private unnamed_addr constant [24 x i8] c"%s: %s: window required\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"%s: %s: display or window required\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"%s: %s: permission denied (user %s)\00", align 1
@EffectiveAclUser = external global %struct.acluser*, align 8
@.str.11 = private unnamed_addr constant [24 x i8] c"select . needs a window\00", align 1
@defautonuke = external global i32, align 4
@.str.12 = private unnamed_addr constant [27 x i8] c"Default autonuke turned %s\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"Autonuke turned %s\00", align 1
@defobuflimit = external global i32, align 4
@.str.16 = private unnamed_addr constant [24 x i8] c"Default limit set to %d\00", align 1
@.str.17 = private unnamed_addr constant [39 x i8] c"Limit is %d, current buffer size is %d\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"Limit set to %d\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"%s: hardcopy: too many arguments\00", align 1
@nwin_default = external global %struct.NewWindow, align 8
@.str.22 = private unnamed_addr constant [30 x i8] c"Really kill this filter [y/n]\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"Really kill this window [y/n]\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"Filter removed.\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"Window %d (%s) killed.\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"Really quit and kill all your windows [y/n]\00", align 1
@DoAction.buf = internal global [2 x i8] zeroinitializer, align 1
@.str.27 = private unnamed_addr constant [51 x i8] c"Sorry, screen was compiled without -DDEBUG option.\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"sendcmd\00", align 1
@zmodem_sendcmd = common global i8* null, align 8
@.str.29 = private unnamed_addr constant [19 x i8] c"zmodem sendcmd: %s\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"recvcmd\00", align 1
@zmodem_recvcmd = common global i8* null, align 8
@.str.31 = private unnamed_addr constant [19 x i8] c"zmodem recvcmd: %s\00", align 1
@zmodes = internal global [4 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.346, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.347, i32 0, i32 0)], align 16
@.str.32 = private unnamed_addr constant [34 x i8] c"usage: zmodem off|auto|catch|pass\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"zmodem mode is %s\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"Unbound all keys.\00", align 1
@ZombieKey_destroy = external global i32, align 4
@.str.35 = private unnamed_addr constant [43 x i8] c"%s:zombie: one or two characters expected.\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"onerror\00", align 1
@ZombieKey_onerror = external global i32, align 4
@.str.37 = private unnamed_addr constant [31 x i8] c"usage: zombie [keys [onerror]]\00", align 1
@ZombieKey_resurrect = external global i32, align 4
@.str.38 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.39 = private unnamed_addr constant [36 x i8] c"Did not find any user matching '%s'\00", align 1
@displays = external global %struct.display*, align 8
@.str.40 = private unnamed_addr constant [23 x i8] c"command from %s: %s %s\00", align 1
@.str.41 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"/dev/\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"/dev/tty\00", align 1
@windows = external global %struct.win*, align 8
@.str.44 = private unnamed_addr constant [30 x i8] c"%s: at '%s': no such window.\0A\00", align 1
@wtab = external global %struct.win**, align 8
@.str.45 = private unnamed_addr constant [43 x i8] c"%s: at [identifier][%%|*|#] command [args]\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c"-e\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"%s: readreg: unknown encoding\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"Copy to register:\00", align 1
@.str.49 = private unnamed_addr constant [54 x i8] c"%s: copyreg: character, ^x, or (octal) \5C032 expected.\00", align 1
@.str.50 = private unnamed_addr constant [32 x i8] c"%s: readreg: too many arguments\00", align 1
@plop_tab = common global [256 x %struct.plop] zeroinitializer, align 16
@.str.51 = private unnamed_addr constant [31 x i8] c"%s: register: unknown encoding\00", align 1
@.str.52 = private unnamed_addr constant [43 x i8] c"%s: register: illegal number of arguments.\00", align 1
@.str.53 = private unnamed_addr constant [55 x i8] c"%s: register: character, ^x, or (octal) \5C032 expected.\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"Process register:\00", align 1
@.str.55 = private unnamed_addr constant [54 x i8] c"%s: process: character, ^x, or (octal) \5C032 expected.\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"Stuff:\00", align 1
@.str.57 = private unnamed_addr constant [3 x i8] c"-k\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"%s: stuff: invalid option %s\00", align 1
@term = external global [0 x %struct.term], align 8
@.str.59 = private unnamed_addr constant [28 x i8] c"%s: stuff: unknown key '%s'\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"screen %s\00", align 1
@version = external global [0 x i8], align 1
@timestring = external global i8*, align 8
@.str.61 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"Unknown command class '%s'\00", align 1
@DoAction.types = internal global [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i32 0, i32 0), i8* null], align 16
@.str.64 = private unnamed_addr constant [9 x i8] c"TIOCSBRK\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"TCSBRK\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"tcsendbreak\00", align 1
@.str.67 = private unnamed_addr constant [38 x i8] c"%s invalid, chose one of %s, %s or %s\00", align 1
@breaktype = external global i32, align 4
@.str.68 = private unnamed_addr constant [25 x i8] c"breaktype set to (%d) %s\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"breaktype is (%d) %s\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"-w\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.72 = private unnamed_addr constant [26 x i8] c"%s: %s: unknown option %s\00", align 1
@Z0width = external global i32, align 4
@Z1width = external global i32, align 4
@.str.73 = private unnamed_addr constant [27 x i8] c"%s: %s: too many arguments\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"Illegal width\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"Illegal height\00", align 1
@.str.76 = private unnamed_addr constant [72 x i8] c"Your termcap does not specify how to change the terminal's width to %d.\00", align 1
@.str.77 = private unnamed_addr constant [73 x i8] c"Your termcap does not specify how to change the terminal's height to %d.\00", align 1
@.str.78 = private unnamed_addr constant [80 x i8] c"Your termcap does not specify how to change the terminal's resolution to %dx%d.\00", align 1
@.str.79 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"%cwrap\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"%cflow%s\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"(auto)\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"writelock %s\00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"\1B[H\1B[J\00", align 1
@.str.87 = private unnamed_addr constant [3 x i8] c"\1Bc\00", align 1
@maxusercount = external global i32, align 4
@.str.88 = private unnamed_addr constant [56 x i8] c"Window %d (%s) is now being monitored for all activity.\00", align 1
@.str.89 = private unnamed_addr constant [58 x i8] c"Window %d (%s) is no longer being monitored for activity.\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@wliststr = external global i8*, align 8
@.str.91 = private unnamed_addr constant [26 x i8] c"windowlist string is '%s'\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@wlisttit = external global i8*, align 8
@.str.93 = private unnamed_addr constant [25 x i8] c"windowlist title is '%s'\00", align 1
@.str.94 = private unnamed_addr constant [3 x i8] c"-m\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"-g\00", align 1
@.str.96 = private unnamed_addr constant [67 x i8] c"usage: windowlist [-b] [-g] [-m] [string [string] | title [title]]\00", align 1
@WinLf = external global %struct.LayFuncs, align 8
@.str.97 = private unnamed_addr constant [26 x i8] c"Must be on a window layer\00", align 1
@DoAction.pasteargs = internal global [2 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i8* null], align 16
@DoAction.pasteargl = internal global [1 x i32] [i32 1], align 4
@.str.98 = private unnamed_addr constant [21 x i8] c"Paste from register:\00", align 1
@.str.99 = private unnamed_addr constant [64 x i8] c"%s: paste destination: character, ^x, or (octal) \5C032 expected.\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"empty buffer\00", align 1
@strnomem = external global [0 x i8], align 1
@.str.101 = private unnamed_addr constant [31 x i8] c"%s: writebuf: unknown encoding\00", align 1
@.str.102 = private unnamed_addr constant [33 x i8] c"%s: writebuf: too many arguments\00", align 1
@.str.103 = private unnamed_addr constant [30 x i8] c"%s: readbuf: unknown encoding\00", align 1
@.str.104 = private unnamed_addr constant [32 x i8] c"%s: readbuf: too many arguments\00", align 1
@BufferFile = external global i8*, align 8
@search_ic = external global i32, align 4
@.str.105 = private unnamed_addr constant [31 x i8] c"Will %signore case in searches\00", align 1
@.str.106 = private unnamed_addr constant [5 x i8] c"not \00", align 1
@.str.107 = private unnamed_addr constant [42 x i8] c"%s: two characters required after escape.\00", align 1
@.str.108 = private unnamed_addr constant [45 x i8] c"%s: two characters required after defescape.\00", align 1
@home = external global i8*, align 8
@ShellProg = external global i8*, align 8
@ShellArgs = external global [0 x i8*], align 8
@hardcopydir = external global i8*, align 8
@.str.109 = private unnamed_addr constant [19 x i8] c"hardcopydir is %s\0A\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"<cwd>\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@log_flush = external global i32, align 4
@.str.112 = private unnamed_addr constant [30 x i8] c"log flush timeout set to %ds\0A\00", align 1
@screenlogfile = external global i8*, align 8
@.str.113 = private unnamed_addr constant [27 x i8] c"Error opening logfile \22%s\22\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"logfile is '%s'\00", align 1
@logtstamp_on = external global i32, align 4
@.str.115 = private unnamed_addr constant [21 x i8] c"timestamps turned %s\00", align 1
@logtstamp_string = external global i8*, align 8
@.str.116 = private unnamed_addr constant [26 x i8] c"logfile timestamp is '%s'\00", align 1
@.str.117 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@logtstamp_after = external global i32, align 4
@.str.118 = private unnamed_addr constant [29 x i8] c"timestamp printed after %ds\0A\00", align 1
@.str.119 = private unnamed_addr constant [49 x i8] c"usage: logtstamp [after [n]|string [str]|on|off]\00", align 1
@.str.120 = private unnamed_addr constant [56 x i8] c"Sorry, too late now. Place that in your .screenrc file.\00", align 1
@.str.121 = private unnamed_addr constant [36 x i8] c"%s: term: argument too long ( < %d)\00", align 1
@screenterm = external global [0 x i8], align 1
@.str.122 = private unnamed_addr constant [3 x i8] c"-X\00", align 1
@.str.123 = private unnamed_addr constant [3 x i8] c"-n\00", align 1
@.str.124 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.125 = private unnamed_addr constant [40 x i8] c"%s: 'echo [-n] [-p] \22string\22' expected.\00", align 1
@BellString = external global i8*, align 8
@.str.126 = private unnamed_addr constant [17 x i8] c"bell_msg is '%s'\00", align 1
@.str.127 = private unnamed_addr constant [21 x i8] c"/tmp/screen-exchange\00", align 1
@.str.128 = private unnamed_addr constant [23 x i8] c"Bufferfile is now '%s'\00", align 1
@ActivityString = external global i8*, align 8
@PowDetachString = external global i8*, align 8
@.str.129 = private unnamed_addr constant [23 x i8] c"pow_detach_msg is '%s'\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.131 = private unnamed_addr constant [9 x i8] c"attached\00", align 1
@iflag = external global i32, align 4
@defmousetrack = external global i32, align 4
@.str.132 = private unnamed_addr constant [45 x i8] c"Mouse tracking for this display is turned %s\00", align 1
@.str.133 = private unnamed_addr constant [40 x i8] c"W%s echo command when creating windows.\00", align 1
@VerboseCreate = external global i32, align 4
@.str.134 = private unnamed_addr constant [4 x i8] c"ill\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"on't\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"firstline\00", align 1
@.str.137 = private unnamed_addr constant [9 x i8] c"lastline\00", align 1
@.str.138 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.139 = private unnamed_addr constant [8 x i8] c"message\00", align 1
@hstatusstring = external global i8*, align 8
@.str.140 = private unnamed_addr constant [26 x i8] c"hardstatus string is '%s'\00", align 1
@.str.141 = private unnamed_addr constant [70 x i8] c"%s: usage: hardstatus [always]lastline|ignore|message|string [string]\00", align 1
@hardstatusemu = external global i32, align 4
@use_hardstatus = external global i32, align 4
@.str.142 = private unnamed_addr constant [25 x i8] c"messages displayed on %s\00", align 1
@.str.143 = private unnamed_addr constant [16 x i8] c"hardstatus line\00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"window\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"splitonly\00", align 1
@captionalways = external global i32, align 4
@captionstring = external global i8*, align 8
@.str.146 = private unnamed_addr constant [23 x i8] c"caption string is '%s'\00", align 1
@.str.147 = private unnamed_addr constant [52 x i8] c"%s: usage: caption always|splitonly|string <string>\00", align 1
@console_window = external global %struct.win*, align 8
@.str.148 = private unnamed_addr constant [25 x i8] c"%s: releasing console %s\00", align 1
@HostName = external global [0 x i8], align 1
@.str.149 = private unnamed_addr constant [44 x i8] c"%s: stealing console %s from window %d (%s)\00", align 1
@.str.150 = private unnamed_addr constant [24 x i8] c"%s: grabbing console %s\00", align 1
@.str.151 = private unnamed_addr constant [30 x i8] c"No refresh on window change!\0A\00", align 1
@.str.152 = private unnamed_addr constant [25 x i8] c"Window specific refresh\0A\00", align 1
@.str.153 = private unnamed_addr constant [26 x i8] c"switched to audible bell.\00", align 1
@.str.154 = private unnamed_addr constant [25 x i8] c"switched to visual bell.\00", align 1
@VBellWait = external global i32, align 4
@.str.155 = private unnamed_addr constant [31 x i8] c"vbellwait set to %.10g seconds\00", align 1
@MsgWait = external global i32, align 4
@.str.156 = private unnamed_addr constant [29 x i8] c"msgwait set to %.10g seconds\00", align 1
@MsgMinWait = external global i32, align 4
@.str.157 = private unnamed_addr constant [32 x i8] c"msgminwait set to %.10g seconds\00", align 1
@SilenceWait = external global i32, align 4
@.str.158 = private unnamed_addr constant [30 x i8] c"silencewait set to %d seconds\00", align 1
@.str.159 = private unnamed_addr constant [8 x i8] c"%d (%s)\00", align 1
@.str.160 = private unnamed_addr constant [24 x i8] c"This is window %d (%s).\00", align 1
@.str.161 = private unnamed_addr constant [44 x i8] c"Setting zombie polling needs a timeout arg\0A\00", align 1
@.str.162 = private unnamed_addr constant [69 x i8] c"Sorting inside a window is not allowed. Push CTRL-a \22 and try again\0A\00", align 1
@.str.163 = private unnamed_addr constant [55 x i8] c"The window is now being monitored for %d sec. silence.\00", align 1
@.str.164 = private unnamed_addr constant [53 x i8] c"The window is no longer being monitored for silence.\00", align 1
@MarkLf = external global %struct.LayFuncs, align 8
@.str.165 = private unnamed_addr constant [57 x i8] c"Cannot resize scrollback buffer in copy/scrollback mode.\00", align 1
@.str.166 = private unnamed_addr constant [21 x i8] c"scrollback set to %d\00", align 1
@.str.167 = private unnamed_addr constant [28 x i8] c"This session is named '%s'\0A\00", align 1
@SockName = external global i8*, align 8
@SockPath = external global [0 x i8], align 1
@.str.168 = private unnamed_addr constant [27 x i8] c"%s: bad session name '%s'\0A\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"%d.%s\00", align 1
@.str.170 = private unnamed_addr constant [30 x i8] c"%s: inappropriate path: '%s'.\00", align 1
@.str.171 = private unnamed_addr constant [29 x i8] c"%s: failed to rename(%s, %s)\00", align 1
@.str.172 = private unnamed_addr constant [43 x i8] c"Slowpaste in window %d is %d milliseconds.\00", align 1
@.str.173 = private unnamed_addr constant [33 x i8] c"Slowpaste in window %d is unset.\00", align 1
@.str.174 = private unnamed_addr constant [47 x i8] c"Slowpaste in window %d set to %d milliseconds.\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"Slowpaste in window %d now unset.\00", align 1
@mark_key_tab = external global [0 x i8], align 1
@.str.176 = private unnamed_addr constant [28 x i8] c"%s: markkeys: syntax error.\00", align 1
@pastefont = external global i32, align 4
@.str.177 = private unnamed_addr constant [27 x i8] c"Will %spaste font settings\00", align 1
@join_with_cr = external global i32, align 4
@compacthist = external global i32, align 4
@.str.178 = private unnamed_addr constant [27 x i8] c"%scompacting history lines\00", align 1
@nethackflag = external global i32, align 4
@VisualBellString = external global i8*, align 8
@.str.179 = private unnamed_addr constant [18 x i8] c"vbell_msg is '%s'\00", align 1
@.str.180 = private unnamed_addr constant [6 x i8] c"octal\00", align 1
@.str.181 = private unnamed_addr constant [30 x i8] c"%s: mode: Invalid tty mode %o\00", align 1
@.str.182 = private unnamed_addr constant [20 x i8] c"Ttymode set to %03o\00", align 1
@auto_detach = external global i32, align 4
@default_startup = external global i32, align 4
@.str.183 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.184 = private unnamed_addr constant [27 x i8] c"Password checking disabled\00", align 1
@.str.185 = private unnamed_addr constant [30 x i8] c"%s: password: window required\00", align 1
@.str.186 = private unnamed_addr constant [21 x i8] c"New screen password:\00", align 1
@.str.187 = private unnamed_addr constant [27 x i8] c"%s: bind: unknown key '%s'\00", align 1
@.str.188 = private unnamed_addr constant [51 x i8] c"%s: bind: character, ^x, or (octal) \5C032 expected.\00", align 1
@.str.189 = private unnamed_addr constant [31 x i8] c"%s: bind: unknown command '%s'\00", align 1
@.str.190 = private unnamed_addr constant [3 x i8] c"-t\00", align 1
@.str.191 = private unnamed_addr constant [3 x i8] c"-a\00", align 1
@.str.192 = private unnamed_addr constant [31 x i8] c"%s: bindkey: invalid option %s\00", align 1
@.str.193 = private unnamed_addr constant [38 x i8] c"%s: bindkey: -d does not work with -m\00", align 1
@.str.194 = private unnamed_addr constant [10 x i8] c"Edit mode\00", align 1
@.str.195 = private unnamed_addr constant [8 x i8] c"Default\00", align 1
@.str.196 = private unnamed_addr constant [5 x i8] c"User\00", align 1
@.str.197 = private unnamed_addr constant [35 x i8] c"%s: bindkey: -a only works with -k\00", align 1
@.str.198 = private unnamed_addr constant [41 x i8] c"%s: bindkey: empty string makes no sense\00", align 1
@kmap_exts = common global %struct.kmap_ext* null, align 8
@kmap_extn = common global i32 0, align 4
@.str.199 = private unnamed_addr constant [34 x i8] c"%s: bindkey: keybinding not found\00", align 1
@.str.200 = private unnamed_addr constant [30 x i8] c"%s: bindkey: unknown key '%s'\00", align 1
@.str.201 = private unnamed_addr constant [34 x i8] c"%s: bindkey: unknown command '%s'\00", align 1
@.str.202 = private unnamed_addr constant [32 x i8] c"%s: maptimeout: illegal time %d\00", align 1
@.str.203 = private unnamed_addr constant [19 x i8] c"maptimeout is %dms\00", align 1
@.str.204 = private unnamed_addr constant [29 x i8] c"%s removed from acl database\00", align 1
@.str.205 = private unnamed_addr constant [28 x i8] c"User %s joined acl-group %s\00", align 1
@.str.206 = private unnamed_addr constant [24 x i8] c"User %s does not exist.\00", align 1
@.str.207 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.208 = private unnamed_addr constant [18 x i8] c"%s's group%s: %s.\00", align 1
@.str.209 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.210 = private unnamed_addr constant [11 x i8] c"umask: %s\0A\00", align 1
@multi = external global i8*, align 8
@.str.211 = private unnamed_addr constant [18 x i8] c"Multiuser mode %s\00", align 1
@.str.212 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@.str.213 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.214 = private unnamed_addr constant [29 x i8] c"display set to blocking mode\00", align 1
@.str.215 = private unnamed_addr constant [44 x i8] c"display set to nonblocking mode, no timeout\00", align 1
@.str.216 = private unnamed_addr constant [48 x i8] c"display set to nonblocking mode, %.10gs timeout\00", align 1
@defnonblock = external global i32, align 4
@.str.217 = private unnamed_addr constant [14 x i8] c"Will %suse GR\00", align 1
@.str.218 = private unnamed_addr constant [14 x i8] c"Will %suse C1\00", align 1
@.str.219 = private unnamed_addr constant [35 x i8] c"Will %serase with background color\00", align 1
@.str.220 = private unnamed_addr constant [26 x i8] c"encodings directory is %s\00", align 1
@screenencodings = external global i8*, align 8
@.str.221 = private unnamed_addr constant [8 x i8] c"<unset>\00", align 1
@.str.222 = private unnamed_addr constant [3 x i8] c"-l\00", align 1
@.str.223 = private unnamed_addr constant [32 x i8] c"encoding: -l: argument required\00", align 1
@.str.224 = private unnamed_addr constant [44 x i8] c"encoding: could not load utf8 encoding file\00", align 1
@.str.225 = private unnamed_addr constant [36 x i8] c"encoding: utf8 encoding file loaded\00", align 1
@.str.226 = private unnamed_addr constant [32 x i8] c"encoding: unknown encoding '%s'\00", align 1
@.str.227 = private unnamed_addr constant [35 x i8] c"defencoding: unknown encoding '%s'\00", align 1
@.str.228 = private unnamed_addr constant [42 x i8] c"Will %suse UTF-8 encoding for new windows\00", align 1
@.str.229 = private unnamed_addr constant [28 x i8] c"utf8: illegal argument (%s)\00", align 1
@.str.230 = private unnamed_addr constant [26 x i8] c"Will %suse UTF-8 encoding\00", align 1
@printcmd = external global i8*, align 8
@.str.231 = private unnamed_addr constant [28 x i8] c"using '%s' as print command\00", align 1
@.str.232 = private unnamed_addr constant [35 x i8] c"using termcap entries for printing\00", align 1
@.str.233 = private unnamed_addr constant [44 x i8] c"Two characters expected to define a digraph\00", align 1
@digraphs = internal global [513 x %struct.digraph] [%struct.digraph { [2 x i8] c"  ", i32 160 }, %struct.digraph { [2 x i8] c"NS", i32 160 }, %struct.digraph { [2 x i8] c"~!", i32 161 }, %struct.digraph { [2 x i8] c"!!", i32 161 }, %struct.digraph { [2 x i8] c"!I", i32 161 }, %struct.digraph { [2 x i8] c"c|", i32 162 }, %struct.digraph { [2 x i8] c"ct", i32 162 }, %struct.digraph { [2 x i8] c"$$", i32 163 }, %struct.digraph { [2 x i8] c"Pd", i32 163 }, %struct.digraph { [2 x i8] c"ox", i32 164 }, %struct.digraph { [2 x i8] c"Cu", i32 164 }, %struct.digraph { [2 x i8] c"Cu", i32 164 }, %struct.digraph { [2 x i8] c"Eu", i32 164 }, %struct.digraph { [2 x i8] c"Y-", i32 165 }, %struct.digraph { [2 x i8] c"Ye", i32 165 }, %struct.digraph { [2 x i8] c"||", i32 166 }, %struct.digraph { [2 x i8] c"BB", i32 166 }, %struct.digraph { [2 x i8] c"pa", i32 167 }, %struct.digraph { [2 x i8] c"SE", i32 167 }, %struct.digraph { [2 x i8] c"\22\22", i32 168 }, %struct.digraph { [2 x i8] c"':", i32 168 }, %struct.digraph { [2 x i8] c"cO", i32 169 }, %struct.digraph { [2 x i8] c"Co", i32 169 }, %struct.digraph { [2 x i8] c"a-", i32 170 }, %struct.digraph { [2 x i8] c"<<", i32 171 }, %struct.digraph { [2 x i8] c"-,", i32 172 }, %struct.digraph { [2 x i8] c"NO", i32 172 }, %struct.digraph { [2 x i8] c"--", i32 173 }, %struct.digraph { [2 x i8] c"rO", i32 174 }, %struct.digraph { [2 x i8] c"Rg", i32 174 }, %struct.digraph { [2 x i8] c"-=", i32 175 }, %struct.digraph { [2 x i8] c"'m", i32 175 }, %struct.digraph { [2 x i8] c"~o", i32 176 }, %struct.digraph { [2 x i8] c"DG", i32 176 }, %struct.digraph { [2 x i8] c"+-", i32 177 }, %struct.digraph { [2 x i8] c"22", i32 178 }, %struct.digraph { [2 x i8] c"2S", i32 178 }, %struct.digraph { [2 x i8] c"33", i32 179 }, %struct.digraph { [2 x i8] c"3S", i32 179 }, %struct.digraph { [2 x i8] c"''", i32 180 }, %struct.digraph { [2 x i8] c"ju", i32 181 }, %struct.digraph { [2 x i8] c"My", i32 181 }, %struct.digraph { [2 x i8] c"pp", i32 182 }, %struct.digraph { [2 x i8] c"PI", i32 182 }, %struct.digraph { [2 x i8] c"~.", i32 183 }, %struct.digraph { [2 x i8] c".M", i32 183 }, %struct.digraph { [2 x i8] c",,", i32 184 }, %struct.digraph { [2 x i8] c"',", i32 184 }, %struct.digraph { [2 x i8] c"11", i32 185 }, %struct.digraph { [2 x i8] c"1S", i32 185 }, %struct.digraph { [2 x i8] c"o-", i32 186 }, %struct.digraph { [2 x i8] c">>", i32 187 }, %struct.digraph { [2 x i8] c"14", i32 188 }, %struct.digraph { [2 x i8] c"12", i32 189 }, %struct.digraph { [2 x i8] c"34", i32 190 }, %struct.digraph { [2 x i8] c"~?", i32 191 }, %struct.digraph { [2 x i8] c"??", i32 191 }, %struct.digraph { [2 x i8] c"?I", i32 191 }, %struct.digraph { [2 x i8] c"A`", i32 192 }, %struct.digraph { [2 x i8] c"A!", i32 192 }, %struct.digraph { [2 x i8] c"A'", i32 193 }, %struct.digraph { [2 x i8] c"A^", i32 194 }, %struct.digraph { [2 x i8] c"A>", i32 194 }, %struct.digraph { [2 x i8] c"A~", i32 195 }, %struct.digraph { [2 x i8] c"A?", i32 195 }, %struct.digraph { [2 x i8] c"A\22", i32 196 }, %struct.digraph { [2 x i8] c"A:", i32 196 }, %struct.digraph { [2 x i8] c"A@", i32 197 }, %struct.digraph { [2 x i8] c"AA", i32 197 }, %struct.digraph { [2 x i8] c"AE", i32 198 }, %struct.digraph { [2 x i8] c"C,", i32 199 }, %struct.digraph { [2 x i8] c"E`", i32 200 }, %struct.digraph { [2 x i8] c"E!", i32 200 }, %struct.digraph { [2 x i8] c"E'", i32 201 }, %struct.digraph { [2 x i8] c"E^", i32 202 }, %struct.digraph { [2 x i8] c"E>", i32 202 }, %struct.digraph { [2 x i8] c"E\22", i32 203 }, %struct.digraph { [2 x i8] c"E:", i32 203 }, %struct.digraph { [2 x i8] c"I`", i32 204 }, %struct.digraph { [2 x i8] c"I!", i32 204 }, %struct.digraph { [2 x i8] c"I'", i32 205 }, %struct.digraph { [2 x i8] c"I^", i32 206 }, %struct.digraph { [2 x i8] c"I>", i32 206 }, %struct.digraph { [2 x i8] c"I\22", i32 207 }, %struct.digraph { [2 x i8] c"I:", i32 207 }, %struct.digraph { [2 x i8] c"D-", i32 208 }, %struct.digraph { [2 x i8] c"N~", i32 209 }, %struct.digraph { [2 x i8] c"N?", i32 209 }, %struct.digraph { [2 x i8] c"O`", i32 210 }, %struct.digraph { [2 x i8] c"O!", i32 210 }, %struct.digraph { [2 x i8] c"O'", i32 211 }, %struct.digraph { [2 x i8] c"O^", i32 212 }, %struct.digraph { [2 x i8] c"O>", i32 212 }, %struct.digraph { [2 x i8] c"O~", i32 213 }, %struct.digraph { [2 x i8] c"O?", i32 213 }, %struct.digraph { [2 x i8] c"O\22", i32 214 }, %struct.digraph { [2 x i8] c"O:", i32 214 }, %struct.digraph { [2 x i8] c"/\5C", i32 215 }, %struct.digraph { [2 x i8] c"*x", i32 215 }, %struct.digraph { [2 x i8] c"O/", i32 216 }, %struct.digraph { [2 x i8] c"U`", i32 217 }, %struct.digraph { [2 x i8] c"U!", i32 217 }, %struct.digraph { [2 x i8] c"U'", i32 218 }, %struct.digraph { [2 x i8] c"U^", i32 219 }, %struct.digraph { [2 x i8] c"U>", i32 219 }, %struct.digraph { [2 x i8] c"U\22", i32 220 }, %struct.digraph { [2 x i8] c"U:", i32 220 }, %struct.digraph { [2 x i8] c"Y'", i32 221 }, %struct.digraph { [2 x i8] c"Ip", i32 222 }, %struct.digraph { [2 x i8] c"TH", i32 222 }, %struct.digraph { [2 x i8] c"ss", i32 223 }, %struct.digraph { [2 x i8] c"s\22", i32 223 }, %struct.digraph { [2 x i8] c"a`", i32 224 }, %struct.digraph { [2 x i8] c"a!", i32 224 }, %struct.digraph { [2 x i8] c"a'", i32 225 }, %struct.digraph { [2 x i8] c"a^", i32 226 }, %struct.digraph { [2 x i8] c"a>", i32 226 }, %struct.digraph { [2 x i8] c"a~", i32 227 }, %struct.digraph { [2 x i8] c"a?", i32 227 }, %struct.digraph { [2 x i8] c"a\22", i32 228 }, %struct.digraph { [2 x i8] c"a:", i32 228 }, %struct.digraph { [2 x i8] c"aa", i32 229 }, %struct.digraph { [2 x i8] c"ae", i32 230 }, %struct.digraph { [2 x i8] c"c,", i32 231 }, %struct.digraph { [2 x i8] c"e`", i32 232 }, %struct.digraph { [2 x i8] c"e!", i32 232 }, %struct.digraph { [2 x i8] c"e'", i32 233 }, %struct.digraph { [2 x i8] c"e^", i32 234 }, %struct.digraph { [2 x i8] c"e>", i32 234 }, %struct.digraph { [2 x i8] c"e\22", i32 235 }, %struct.digraph { [2 x i8] c"e:", i32 235 }, %struct.digraph { [2 x i8] c"i`", i32 236 }, %struct.digraph { [2 x i8] c"i!", i32 236 }, %struct.digraph { [2 x i8] c"i'", i32 237 }, %struct.digraph { [2 x i8] c"i^", i32 238 }, %struct.digraph { [2 x i8] c"i>", i32 238 }, %struct.digraph { [2 x i8] c"i\22", i32 239 }, %struct.digraph { [2 x i8] c"i:", i32 239 }, %struct.digraph { [2 x i8] c"d-", i32 240 }, %struct.digraph { [2 x i8] c"n~", i32 241 }, %struct.digraph { [2 x i8] c"n?", i32 241 }, %struct.digraph { [2 x i8] c"o`", i32 242 }, %struct.digraph { [2 x i8] c"o!", i32 242 }, %struct.digraph { [2 x i8] c"o'", i32 243 }, %struct.digraph { [2 x i8] c"o^", i32 244 }, %struct.digraph { [2 x i8] c"o>", i32 244 }, %struct.digraph { [2 x i8] c"o~", i32 245 }, %struct.digraph { [2 x i8] c"o?", i32 245 }, %struct.digraph { [2 x i8] c"o\22", i32 246 }, %struct.digraph { [2 x i8] c"o:", i32 246 }, %struct.digraph { [2 x i8] c":-", i32 247 }, %struct.digraph { [2 x i8] c"o/", i32 248 }, %struct.digraph { [2 x i8] c"u`", i32 249 }, %struct.digraph { [2 x i8] c"u!", i32 249 }, %struct.digraph { [2 x i8] c"u'", i32 250 }, %struct.digraph { [2 x i8] c"u^", i32 251 }, %struct.digraph { [2 x i8] c"u>", i32 251 }, %struct.digraph { [2 x i8] c"u\22", i32 252 }, %struct.digraph { [2 x i8] c"u:", i32 252 }, %struct.digraph { [2 x i8] c"y'", i32 253 }, %struct.digraph { [2 x i8] c"ip", i32 254 }, %struct.digraph { [2 x i8] c"th", i32 254 }, %struct.digraph { [2 x i8] c"y\22", i32 255 }, %struct.digraph { [2 x i8] c"y:", i32 255 }, %struct.digraph { [2 x i8] c"\22[", i32 196 }, %struct.digraph { [2 x i8] c"\22\5C", i32 214 }, %struct.digraph { [2 x i8] c"\22]", i32 220 }, %struct.digraph { [2 x i8] c"\22{", i32 228 }, %struct.digraph { [2 x i8] c"\22|", i32 246 }, %struct.digraph { [2 x i8] c"\22}", i32 252 }, %struct.digraph { [2 x i8] c"\22~", i32 223 }, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer, %struct.digraph zeroinitializer], align 16
@.str.234 = private unnamed_addr constant [16 x i8] c"Enter digraph: \00", align 1
@.str.235 = private unnamed_addr constant [24 x i8] c"default hstatus is '%s'\00", align 1
@.str.236 = private unnamed_addr constant [24 x i8] c"default charset is '%s'\00", align 1
@.str.237 = private unnamed_addr constant [33 x i8] c"%s: %s: string has illegal size.\00", align 1
@.str.238 = private unnamed_addr constant [32 x i8] c"%s: %s: illegal mapping number.\00", align 1
@.str.239 = private unnamed_addr constant [9 x i8] c"dubrsBiI\00", align 1
@.str.240 = private unnamed_addr constant [39 x i8] c"%s: attrcolor: unknown attribute '%s'.\00", align 1
@attr2color = external global [0 x [4 x i32]], align 4
@nattr2color = external global i32, align 4
@.str.241 = private unnamed_addr constant [5 x i8] c"bell\00", align 1
@.str.242 = private unnamed_addr constant [8 x i8] c"monitor\00", align 1
@.str.243 = private unnamed_addr constant [8 x i8] c"silence\00", align 1
@.str.244 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.245 = private unnamed_addr constant [34 x i8] c"Invalid option '%s' for rendition\00", align 1
@renditions = external global [0 x i32], align 4
@mchar_so = external global %struct.mchar, align 1
@.str.246 = private unnamed_addr constant [41 x i8] c"Standout attributes 0x%02x  color 0x%02x\00", align 1
@.str.247 = private unnamed_addr constant [19 x i8] c"%s:%s screen login\00", align 1
@.str.248 = private unnamed_addr constant [2 x i8] c"\FF\00", align 1
@.str.249 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.250 = private unnamed_addr constant [4 x i8] c"top\00", align 1
@.str.251 = private unnamed_addr constant [7 x i8] c"bottom\00", align 1
@.str.252 = private unnamed_addr constant [3 x i8] c"up\00", align 1
@.str.253 = private unnamed_addr constant [5 x i8] c"down\00", align 1
@.str.254 = private unnamed_addr constant [5 x i8] c"left\00", align 1
@.str.255 = private unnamed_addr constant [6 x i8] c"right\00", align 1
@.str.256 = private unnamed_addr constant [59 x i8] c"%s: usage: focus [next|prev|up|down|left|right|top|bottom]\00", align 1
@.str.257 = private unnamed_addr constant [34 x i8] c"resize: need more than one region\00", align 1
@.str.258 = private unnamed_addr constant [40 x i8] c"%s: usage: resize [-h] [-v] [-l] [num]\0A\00", align 1
@resizeprompts = internal global [8 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.350, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.356, i32 0, i32 0)], align 16
@separate_sids = external global i32, align 4
@use_altscreen = external global i32, align 4
@.str.259 = private unnamed_addr constant [37 x i8] c"Will %sdo alternate screen switching\00", align 1
@.str.260 = private unnamed_addr constant [28 x i8] c"maximum windows allowed: %d\00", align 1
@.str.261 = private unnamed_addr constant [32 x i8] c"illegal maxwin number specified\00", align 1
@.str.262 = private unnamed_addr constant [29 x i8] c"maximum 2048 windows allowed\00", align 1
@.str.263 = private unnamed_addr constant [48 x i8] c"may increase maxwin only when there's no window\00", align 1
@.str.264 = private unnamed_addr constant [8 x i8] c"decimal\00", align 1
@.str.265 = private unnamed_addr constant [52 x i8] c"%s: usage: backtick num [lifespan tick cmd args...]\00", align 1
@blankerprg = common global i8** null, align 8
@.str.266 = private unnamed_addr constant [15 x i8] c"blankerprg: %s\00", align 1
@.str.267 = private unnamed_addr constant [19 x i8] c"No blankerprg set.\00", align 1
@idletimo = common global i32 0, align 4
@.str.268 = private unnamed_addr constant [31 x i8] c"%s: idle: unknown command '%s'\00", align 1
@.str.269 = private unnamed_addr constant [21 x i8] c"idle timeout %ds, %s\00", align 1
@.str.270 = private unnamed_addr constant [9 x i8] c"idle off\00", align 1
@.str.271 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.272 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@focusminwidth = external global i32, align 4
@focusminheight = external global i32, align 4
@.str.273 = private unnamed_addr constant [25 x i8] c"focus min size is %s %s\0A\00", align 1
@.str.274 = private unnamed_addr constant [25 x i8] c"window group is %d (%s)\0A\00", align 1
@.str.275 = private unnamed_addr constant [27 x i8] c"window belongs to no group\00", align 1
@layout_attach = external global %struct.layout*, align 8
@layout_last_marker = external global %struct.layout, align 8
@.str.276 = private unnamed_addr constant [16 x i8] c"not on a layout\00", align 1
@.str.277 = private unnamed_addr constant [26 x i8] c"current layout is %d (%s)\00", align 1
@.str.278 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.279 = private unnamed_addr constant [25 x i8] c"This is layout %d (%s).\0A\00", align 1
@.str.280 = private unnamed_addr constant [9 x i8] c"autosave\00", align 1
@.str.281 = private unnamed_addr constant [36 x i8] c"invalid argument. Give 'on' or 'off\00", align 1
@.str.282 = private unnamed_addr constant [15 x i8] c"autosave is %s\00", align 1
@.str.283 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.284 = private unnamed_addr constant [7 x i8] c"layout\00", align 1
@.str.285 = private unnamed_addr constant [5 x i8] c"save\00", align 1
@.str.286 = private unnamed_addr constant [26 x i8] c"usage: layout save <name>\00", align 1
@.str.287 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.288 = private unnamed_addr constant [19 x i8] c"Switch to layout: \00", align 1
@layouts = external global %struct.layout*, align 8
@.str.289 = private unnamed_addr constant [18 x i8] c"no layout defined\00", align 1
@.str.290 = private unnamed_addr constant [7 x i8] c"attach\00", align 1
@.str.291 = private unnamed_addr constant [21 x i8] c"no attach layout set\00", align 1
@.str.292 = private unnamed_addr constant [27 x i8] c"will attach to last layout\00", align 1
@.str.293 = private unnamed_addr constant [30 x i8] c"will attach to layout %d (%s)\00", align 1
@.str.294 = private unnamed_addr constant [6 x i8] c":last\00", align 1
@.str.295 = private unnamed_addr constant [20 x i8] c"unknown layout '%s'\00", align 1
@.str.296 = private unnamed_addr constant [5 x i8] c"show\00", align 1
@.str.297 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.298 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.299 = private unnamed_addr constant [39 x i8] c"Must have a display for 'layout dump'.\00", align 1
@.str.300 = private unnamed_addr constant [12 x i8] c"layout-dump\00", align 1
@.str.301 = private unnamed_addr constant [22 x i8] c"Error dumping layout.\00", align 1
@.str.302 = private unnamed_addr constant [22 x i8] c"Layout dumped to \22%s\22\00", align 1
@.str.303 = private unnamed_addr constant [26 x i8] c"unknown layout subcommand\00", align 1
@cjkwidth = external global i32, align 4
@.str.304 = private unnamed_addr constant [45 x i8] c"Treat ambiguous width characters as %s width\00", align 1
@.str.305 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str.306 = private unnamed_addr constant [5 x i8] c"half\00", align 1
@.str.307 = private unnamed_addr constant [25 x i8] c"%s: unknown command '%s'\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.309 = private unnamed_addr constant [21 x i8] c"%s: too many tokens.\00", align 1
@.str.310 = private unnamed_addr constant [23 x i8] c"%s: bad variable name.\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@.str.312 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.313 = private unnamed_addr constant [8 x i8] c"COLUMNS\00", align 1
@.str.314 = private unnamed_addr constant [6 x i8] c"LINES\00", align 1
@.str.315 = private unnamed_addr constant [4 x i8] c"PID\00", align 1
@.str.316 = private unnamed_addr constant [4 x i8] c"PWD\00", align 1
@.str.317 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.318 = private unnamed_addr constant [4 x i8] c"STY\00", align 1
@.str.319 = private unnamed_addr constant [42 x i8] c"%s: no space left for variable expansion.\00", align 1
@.str.320 = private unnamed_addr constant [22 x i8] c"%s: Missing %c quote.\00", align 1
@.str.321 = private unnamed_addr constant [31 x i8] c"%s: %s: one argument required.\00", align 1
@.str.322 = private unnamed_addr constant [45 x i8] c"%s: %s: invalid argument. Give one argument.\00", align 1
@.str.323 = private unnamed_addr constant [49 x i8] c"%s: %s: invalid argument. Give numeric argument.\00", align 1
@.str.324 = private unnamed_addr constant [24 x i8] c"This IS window %d (%s).\00", align 1
@.str.325 = private unnamed_addr constant [28 x i8] c"Access to window %d denied.\00", align 1
@.str.326 = private unnamed_addr constant [4 x i8] c"(L)\00", align 1
@nwin_undef = external global %struct.NewWindow, align 8
@.str.327 = private unnamed_addr constant [32 x i8] c"%s: screen: invalid option -%c.\00", align 1
@.str.328 = private unnamed_addr constant [30 x i8] c"%s: illegal screen number %d.\00", align 1
@.str.329 = private unnamed_addr constant [31 x i8] c"Illegal attribute hexchar '%c'\00", align 1
@.str.330 = private unnamed_addr constant [33 x i8] c"Illegal attribute specifier '%c'\00", align 1
@.str.331 = private unnamed_addr constant [39 x i8] c"junk after attribute description: '%c'\00", align 1
@.str.332 = private unnamed_addr constant [29 x i8] c"junk after description: '%c'\00", align 1
@ParseAttrColor.costr = internal global [65 x i8] c"krgybmcw d    i.01234567 9     f               FKRGYBMCW      I \00", align 16
@.str.333 = private unnamed_addr constant [31 x i8] c"illegal color descriptor: '%c'\00", align 1
@.str.334 = private unnamed_addr constant [35 x i8] c"junk after color description: '%c'\00", align 1
@kclasses = common global %struct.kclass* null, align 8
@CheckArgNum.argss = internal global [6 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.340, i32 0, i32 0)], align 16
@.str.335 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str.336 = private unnamed_addr constant [4 x i8] c"one\00", align 1
@.str.337 = private unnamed_addr constant [4 x i8] c"two\00", align 1
@.str.338 = private unnamed_addr constant [6 x i8] c"three\00", align 1
@.str.339 = private unnamed_addr constant [5 x i8] c"four\00", align 1
@.str.340 = private unnamed_addr constant [5 x i8] c"OOPS\00", align 1
@CheckArgNum.orformat = internal global [4 x i8*] [i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.344, i32 0, i32 0)], align 16
@.str.341 = private unnamed_addr constant [31 x i8] c"%s: %s: %s argument%s required\00", align 1
@.str.342 = private unnamed_addr constant [37 x i8] c"%s: %s: %s or %s argument%s required\00", align 1
@.str.343 = private unnamed_addr constant [41 x i8] c"%s: %s: %s, %s or %s argument%s required\00", align 1
@.str.344 = private unnamed_addr constant [45 x i8] c"%s: %s: %s, %s, %s or %s argument%s required\00", align 1
@.str.345 = private unnamed_addr constant [40 x i8] c"%s: %s: at least %s argument%s required\00", align 1
@.str.346 = private unnamed_addr constant [6 x i8] c"catch\00", align 1
@.str.347 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.348 = private unnamed_addr constant [29 x i8] c"Command class name too long.\00", align 1
@.str.349 = private unnamed_addr constant [17 x i8] c"resize # lines: \00", align 1
@.str.350 = private unnamed_addr constant [20 x i8] c"resize -h # lines: \00", align 1
@.str.351 = private unnamed_addr constant [20 x i8] c"resize -v # lines: \00", align 1
@.str.352 = private unnamed_addr constant [20 x i8] c"resize -b # lines: \00", align 1
@.str.353 = private unnamed_addr constant [20 x i8] c"resize -l # lines: \00", align 1
@.str.354 = private unnamed_addr constant [23 x i8] c"resize -l -h # lines: \00", align 1
@.str.355 = private unnamed_addr constant [23 x i8] c"resize -l -v # lines: \00", align 1
@.str.356 = private unnamed_addr constant [23 x i8] c"resize -l -b # lines: \00", align 1
@.str.357 = private unnamed_addr constant [45 x i8] c"%s: %s: invalid argument. Give 'on' or 'off'\00", align 1
@.str.358 = private unnamed_addr constant [56 x i8] c"%s: %s: invalid argument. Give floating point argument.\00", align 1
@.str.359 = private unnamed_addr constant [54 x i8] c"%s: %s: invalid argument. Give window number or name.\00", align 1
@.str.360 = private unnamed_addr constant [24 x i8] c"%s: %s: empty argument.\00", align 1
@.str.361 = private unnamed_addr constant [28 x i8] c"%s: %s: argument is not %s.\00", align 1
@.str.362 = private unnamed_addr constant [17 x i8] c"No other window.\00", align 1
@.str.363 = private unnamed_addr constant [20 x i8] c"No window available\00", align 1
@.str.364 = private unnamed_addr constant [20 x i8] c"You are %s logging.\00", align 1
@.str.365 = private unnamed_addr constant [8 x i8] c"already\00", align 1
@.str.366 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.367 = private unnamed_addr constant [21 x i8] c"Logfile \22%s\22 closed.\00", align 1
@.str.368 = private unnamed_addr constant [23 x i8] c"Creating logfile \22%s\22.\00", align 1
@.str.369 = private unnamed_addr constant [27 x i8] c"Appending to logfile \22%s\22.\00", align 1
@.str.370 = private unnamed_addr constant [26 x i8] c"(%d,%d)/(%d,%d) no window\00", align 1
@.str.371 = private unnamed_addr constant [16 x i8] c"(%d,%d)/(%d,%d)\00", align 1
@.str.372 = private unnamed_addr constant [4 x i8] c"+%d\00", align 1
@.str.373 = private unnamed_addr constant [10 x i8] c" %c%sflow\00", align 1
@.str.374 = private unnamed_addr constant [4 x i8] c"(+)\00", align 1
@.str.375 = private unnamed_addr constant [4 x i8] c"(-)\00", align 1
@.str.376 = private unnamed_addr constant [7 x i8] c" -wrap\00", align 1
@.str.377 = private unnamed_addr constant [5 x i8] c" ins\00", align 1
@.str.378 = private unnamed_addr constant [5 x i8] c" org\00", align 1
@.str.379 = private unnamed_addr constant [5 x i8] c" app\00", align 1
@.str.380 = private unnamed_addr constant [5 x i8] c" log\00", align 1
@.str.381 = private unnamed_addr constant [5 x i8] c" mon\00", align 1
@.str.382 = private unnamed_addr constant [7 x i8] c" mouse\00", align 1
@.str.383 = private unnamed_addr constant [5 x i8] c" bce\00", align 1
@.str.384 = private unnamed_addr constant [5 x i8] c" -c1\00", align 1
@.str.385 = private unnamed_addr constant [7 x i8] c" nored\00", align 1
@.str.386 = private unnamed_addr constant [5 x i8] c" G%c\00", align 1
@.str.387 = private unnamed_addr constant [8 x i8] c" G%c%c[\00", align 1
@.str.388 = private unnamed_addr constant [6 x i8] c" G%c[\00", align 1
@.str.389 = private unnamed_addr constant [10 x i8] c"%s %d(%s)\00", align 1
@.str.390 = private unnamed_addr constant [8 x i8] c"(%d,%d)\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c" xterm\00", align 1
@.str.392 = private unnamed_addr constant [7 x i8] c" color\00", align 1
@.str.393 = private unnamed_addr constant [9 x i8] c" iso2022\00", align 1
@.str.394 = private unnamed_addr constant [9 x i8] c" altchar\00", align 1
@.str.395 = private unnamed_addr constant [24 x i8] c"Set window's title to: \00", align 1
@.str.396 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.397 = private unnamed_addr constant [21 x i8] c"Possible commands:%s\00", align 1
@.str.398 = private unnamed_addr constant [5 x i8] c"%s \09\00", align 1
@.str.399 = private unnamed_addr constant [27 x i8] c"No commands matching '%*s'\00", align 1
@.str.400 = private unnamed_addr constant [16 x i8] c"No such layout\0A\00", align 1
@.str.401 = private unnamed_addr constant [25 x i8] c"This IS layout %d (%s).\0A\00", align 1
@.str.402 = private unnamed_addr constant [19 x i8] c"Switch to window: \00", align 1
@InputSetenv.setenv_buf = internal global [81 x i8] zeroinitializer, align 16
@setenv_var = internal global [31 x i8] zeroinitializer, align 16
@.str.403 = private unnamed_addr constant [21 x i8] c"Enter value for %s: \00", align 1
@.str.404 = private unnamed_addr constant [30 x i8] c"Setenv: Enter variable name: \00", align 1
@.str.405 = private unnamed_addr constant [2 x i8] c"\07\00", align 1
@.str.406 = private unnamed_addr constant [16 x i8] c"Detach aborted.\00", align 1
@.str.407 = private unnamed_addr constant [38 x i8] c"Copied %d characters into register %c\00", align 1
@.str.408 = private unnamed_addr constant [48 x i8] c"ins_reg_fn: Warning: pasting real register '.'!\00", align 1
@.str.409 = private unnamed_addr constant [16 x i8] c"Empty register.\00", align 1
@.str.410 = private unnamed_addr constant [14 x i8] c"Screen User: \00", align 1
@.str.411 = private unnamed_addr constant [23 x i8] c"User's UNIX Password: \00", align 1
@.str.412 = private unnamed_addr constant [25 x i8] c"User's Screen Password: \00", align 1
@.str.413 = private unnamed_addr constant [21 x i8] c"Retype new password:\00", align 1
@.str.414 = private unnamed_addr constant [48 x i8] c"[ Passwords don't match - checking turned off ]\00", align 1
@.str.415 = private unnamed_addr constant [28 x i8] c"[ No password - no secure ]\00", align 1
@.str.416 = private unnamed_addr constant [30 x i8] c"[ crypt() error - no secure ]\00", align 1
@.str.417 = private unnamed_addr constant [35 x i8] c"[ Password moved into copybuffer ]\00", align 1
@.str.418 = private unnamed_addr constant [16 x i8] c"Unknown digraph\00", align 1
@.str.419 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.420 = private unnamed_addr constant [2 x i8] c"0\00", align 1

; Function Attrs: nounwind uwtable
define void @InitKeytab() #0 {
entry:
  %i = alloca i32, align 4
  %argarr = alloca [2 x i8*], align 16
  %args126 = alloca [2 x i8*], align 16
  %args136 = alloca [2 x i8*], align 16
  %arg1 = alloca [10 x i8], align 1
  %args147 = alloca [2 x i8*], align 16
  %args151 = alloca [2 x i8*], align 16
  %args156 = alloca [2 x i8*], align 16
  %args160 = alloca [2 x i8*], align 16
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %conv = zext i32 %0 to i64
  %cmp = icmp ult i64 %conv, 338
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom
  %nr = getelementptr inbounds %struct.action, %struct.action* %arrayidx, i32 0, i32 0
  store i32 -1, i32* %nr, align 4
  %2 = load i32, i32* %i, align 4
  %idxprom2 = zext i32 %2 to i64
  %arrayidx3 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom2
  %args = getelementptr inbounds %struct.action, %struct.action* %arrayidx3, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args, align 8
  %3 = load i32, i32* %i, align 4
  %idxprom4 = zext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom4
  %argl = getelementptr inbounds %struct.action, %struct.action* %arrayidx5, i32 0, i32 2
  store i32* null, i32** %argl, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond.6

for.cond.6:                                       ; preds = %for.inc.37, %for.end
  %5 = load i32, i32* %i, align 4
  %cmp7 = icmp ult i32 %5, 104
  br i1 %cmp7, label %for.body.9, label %for.end.39

for.body.9:                                       ; preds = %for.cond.6
  %6 = load i32, i32* %i, align 4
  %idxprom10 = zext i32 %6 to i64
  %arrayidx11 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @umtab, i32 0, i64 %idxprom10
  %nr12 = getelementptr inbounds %struct.action, %struct.action* %arrayidx11, i32 0, i32 0
  store i32 -1, i32* %nr12, align 4
  %7 = load i32, i32* %i, align 4
  %idxprom13 = zext i32 %7 to i64
  %arrayidx14 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @umtab, i32 0, i64 %idxprom13
  %args15 = getelementptr inbounds %struct.action, %struct.action* %arrayidx14, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args15, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom16 = zext i32 %8 to i64
  %arrayidx17 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @umtab, i32 0, i64 %idxprom16
  %argl18 = getelementptr inbounds %struct.action, %struct.action* %arrayidx17, i32 0, i32 2
  store i32* null, i32** %argl18, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom19 = zext i32 %9 to i64
  %arrayidx20 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i64 %idxprom19
  %nr21 = getelementptr inbounds %struct.action, %struct.action* %arrayidx20, i32 0, i32 0
  store i32 -1, i32* %nr21, align 4
  %10 = load i32, i32* %i, align 4
  %idxprom22 = zext i32 %10 to i64
  %arrayidx23 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i64 %idxprom22
  %args24 = getelementptr inbounds %struct.action, %struct.action* %arrayidx23, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args24, align 8
  %11 = load i32, i32* %i, align 4
  %idxprom25 = zext i32 %11 to i64
  %arrayidx26 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i64 %idxprom25
  %argl27 = getelementptr inbounds %struct.action, %struct.action* %arrayidx26, i32 0, i32 2
  store i32* null, i32** %argl27, align 8
  %12 = load i32, i32* %i, align 4
  %idxprom28 = zext i32 %12 to i64
  %arrayidx29 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @mmtab, i32 0, i64 %idxprom28
  %nr30 = getelementptr inbounds %struct.action, %struct.action* %arrayidx29, i32 0, i32 0
  store i32 -1, i32* %nr30, align 4
  %13 = load i32, i32* %i, align 4
  %idxprom31 = zext i32 %13 to i64
  %arrayidx32 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @mmtab, i32 0, i64 %idxprom31
  %args33 = getelementptr inbounds %struct.action, %struct.action* %arrayidx32, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args33, align 8
  %14 = load i32, i32* %i, align 4
  %idxprom34 = zext i32 %14 to i64
  %arrayidx35 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @mmtab, i32 0, i64 %idxprom34
  %argl36 = getelementptr inbounds %struct.action, %struct.action* %arrayidx35, i32 0, i32 2
  store i32* null, i32** %argl36, align 8
  br label %for.inc.37

for.inc.37:                                       ; preds = %for.body.9
  %15 = load i32, i32* %i, align 4
  %inc38 = add i32 %15, 1
  store i32 %inc38, i32* %i, align 4
  br label %for.cond.6

for.end.39:                                       ; preds = %for.cond.6
  %arrayidx40 = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i64 1
  store i8* null, i8** %arrayidx40, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.41

for.cond.41:                                      ; preds = %for.inc.62, %for.end.39
  %16 = load i32, i32* %i, align 4
  %cmp42 = icmp ult i32 %16, 82
  br i1 %cmp42, label %for.body.44, label %for.end.64

for.body.44:                                      ; preds = %for.cond.41
  %17 = load i32, i32* %i, align 4
  %add = add i32 %17, 106
  %cmp45 = icmp ult i32 %add, 106
  br i1 %cmp45, label %if.then, label %if.end

if.then:                                          ; preds = %for.body.44
  br label %for.inc.62

if.end:                                           ; preds = %for.body.44
  %18 = load i32, i32* %i, align 4
  %add47 = add i32 %18, 106
  %cmp48 = icmp uge i32 %add47, 188
  br i1 %cmp48, label %if.then.50, label %if.end.51

if.then.50:                                       ; preds = %if.end
  br label %for.inc.62

if.end.51:                                        ; preds = %if.end
  %19 = load i32, i32* %i, align 4
  %idxprom52 = zext i32 %19 to i64
  %arrayidx53 = getelementptr inbounds [0 x i8*], [0 x i8*]* @kmapdef, i32 0, i64 %idxprom52
  %20 = load i8*, i8** %arrayidx53, align 8
  %cmp54 = icmp eq i8* %20, null
  br i1 %cmp54, label %if.then.56, label %if.end.57

if.then.56:                                       ; preds = %if.end.51
  br label %for.inc.62

if.end.57:                                        ; preds = %if.end.51
  %21 = load i32, i32* %i, align 4
  %idxprom58 = zext i32 %21 to i64
  %arrayidx59 = getelementptr inbounds [0 x i8*], [0 x i8*]* @kmapdef, i32 0, i64 %idxprom58
  %22 = load i8*, i8** %arrayidx59, align 8
  %arrayidx60 = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i64 0
  store i8* %22, i8** %arrayidx60, align 8
  %23 = load i32, i32* %i, align 4
  %idx.ext = zext i32 %23 to i64
  %add.ptr = getelementptr inbounds %struct.action, %struct.action* getelementptr inbounds ([104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i32 0), i64 %idx.ext
  %add.ptr61 = getelementptr inbounds %struct.action, %struct.action* %add.ptr, i64 0
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i32 0
  call void @SaveAction(%struct.action* %add.ptr61, i32 158, i8** %arraydecay, i32* null)
  br label %for.inc.62

for.inc.62:                                       ; preds = %if.end.57, %if.then.56, %if.then.50, %if.then
  %24 = load i32, i32* %i, align 4
  %inc63 = add i32 %24, 1
  store i32 %inc63, i32* %i, align 4
  br label %for.cond.41

for.end.64:                                       ; preds = %for.cond.41
  store i32 0, i32* %i, align 4
  br label %for.cond.65

for.cond.65:                                      ; preds = %for.inc.92, %for.end.64
  %25 = load i32, i32* %i, align 4
  %cmp66 = icmp ult i32 %25, 22
  br i1 %cmp66, label %for.body.68, label %for.end.94

for.body.68:                                      ; preds = %for.cond.65
  %26 = load i32, i32* %i, align 4
  %add69 = add i32 %26, 166
  %cmp70 = icmp ult i32 %add69, 166
  br i1 %cmp70, label %if.then.72, label %if.end.73

if.then.72:                                       ; preds = %for.body.68
  br label %for.inc.92

if.end.73:                                        ; preds = %for.body.68
  %27 = load i32, i32* %i, align 4
  %add74 = add i32 %27, 166
  %cmp75 = icmp uge i32 %add74, 188
  br i1 %cmp75, label %if.then.77, label %if.end.78

if.then.77:                                       ; preds = %if.end.73
  br label %for.inc.92

if.end.78:                                        ; preds = %if.end.73
  %28 = load i32, i32* %i, align 4
  %idxprom79 = zext i32 %28 to i64
  %arrayidx80 = getelementptr inbounds [0 x i8*], [0 x i8*]* @kmapadef, i32 0, i64 %idxprom79
  %29 = load i8*, i8** %arrayidx80, align 8
  %cmp81 = icmp eq i8* %29, null
  br i1 %cmp81, label %if.then.83, label %if.end.84

if.then.83:                                       ; preds = %if.end.78
  br label %for.inc.92

if.end.84:                                        ; preds = %if.end.78
  %30 = load i32, i32* %i, align 4
  %idxprom85 = zext i32 %30 to i64
  %arrayidx86 = getelementptr inbounds [0 x i8*], [0 x i8*]* @kmapadef, i32 0, i64 %idxprom85
  %31 = load i8*, i8** %arrayidx86, align 8
  %arrayidx87 = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i64 0
  store i8* %31, i8** %arrayidx87, align 8
  %32 = load i32, i32* %i, align 4
  %idx.ext88 = zext i32 %32 to i64
  %add.ptr89 = getelementptr inbounds %struct.action, %struct.action* getelementptr inbounds ([104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i32 0), i64 %idx.ext88
  %add.ptr90 = getelementptr inbounds %struct.action, %struct.action* %add.ptr89, i64 82
  %arraydecay91 = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i32 0
  call void @SaveAction(%struct.action* %add.ptr90, i32 158, i8** %arraydecay91, i32* null)
  br label %for.inc.92

for.inc.92:                                       ; preds = %if.end.84, %if.then.83, %if.then.77, %if.then.72
  %33 = load i32, i32* %i, align 4
  %inc93 = add i32 %33, 1
  store i32 %inc93, i32* %i, align 4
  br label %for.cond.65

for.end.94:                                       ; preds = %for.cond.65
  store i32 0, i32* %i, align 4
  br label %for.cond.95

for.cond.95:                                      ; preds = %for.inc.123, %for.end.94
  %34 = load i32, i32* %i, align 4
  %cmp96 = icmp ult i32 %34, 64
  br i1 %cmp96, label %for.body.98, label %for.end.125

for.body.98:                                      ; preds = %for.cond.95
  %35 = load i32, i32* %i, align 4
  %add99 = add i32 %35, 106
  %cmp100 = icmp ult i32 %add99, 106
  br i1 %cmp100, label %if.then.102, label %if.end.103

if.then.102:                                      ; preds = %for.body.98
  br label %for.inc.123

if.end.103:                                       ; preds = %for.body.98
  %36 = load i32, i32* %i, align 4
  %add104 = add i32 %36, 106
  %cmp105 = icmp uge i32 %add104, 188
  br i1 %cmp105, label %if.then.107, label %if.end.108

if.then.107:                                      ; preds = %if.end.103
  br label %for.inc.123

if.end.108:                                       ; preds = %if.end.103
  %37 = load i32, i32* %i, align 4
  %idxprom109 = zext i32 %37 to i64
  %arrayidx110 = getelementptr inbounds [0 x i8*], [0 x i8*]* @kmapmdef, i32 0, i64 %idxprom109
  %38 = load i8*, i8** %arrayidx110, align 8
  %cmp111 = icmp eq i8* %38, null
  br i1 %cmp111, label %if.then.113, label %if.end.114

if.then.113:                                      ; preds = %if.end.108
  br label %for.inc.123

if.end.114:                                       ; preds = %if.end.108
  %39 = load i32, i32* %i, align 4
  %idxprom115 = zext i32 %39 to i64
  %arrayidx116 = getelementptr inbounds [0 x i8*], [0 x i8*]* @kmapmdef, i32 0, i64 %idxprom115
  %40 = load i8*, i8** %arrayidx116, align 8
  %arrayidx117 = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i64 0
  store i8* %40, i8** %arrayidx117, align 8
  %arrayidx118 = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i64 1
  store i8* null, i8** %arrayidx118, align 8
  %41 = load i32, i32* %i, align 4
  %idx.ext119 = zext i32 %41 to i64
  %add.ptr120 = getelementptr inbounds %struct.action, %struct.action* getelementptr inbounds ([104 x %struct.action], [104 x %struct.action]* @mmtab, i32 0, i32 0), i64 %idx.ext119
  %add.ptr121 = getelementptr inbounds %struct.action, %struct.action* %add.ptr120, i64 0
  %arraydecay122 = getelementptr inbounds [2 x i8*], [2 x i8*]* %argarr, i32 0, i32 0
  call void @SaveAction(%struct.action* %add.ptr121, i32 158, i8** %arraydecay122, i32* null)
  br label %for.inc.123

for.inc.123:                                      ; preds = %if.end.114, %if.then.113, %if.then.107, %if.then.102
  %42 = load i32, i32* %i, align 4
  %inc124 = add i32 %42, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond.95

for.end.125:                                      ; preds = %for.cond.95
  store i32 82, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 104, i32 0), align 4
  store i32 160, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 26, i32 0), align 4
  store i32 160, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 122, i32 0), align 4
  store i32 141, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 3, i32 0), align 4
  store i32 141, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 99, i32 0), align 4
  store i32 115, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 14, i32 0), align 4
  store i32 115, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 110, i32 0), align 4
  store i32 115, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 0, i32 0), align 4
  store i32 115, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 32, i32 0), align 4
  store i32 117, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 78, i32 0), align 4
  store i32 128, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 16, i32 0), align 4
  store i32 128, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 112, i32 0), align 4
  store i32 128, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 127, i32 0), align 4
  store i32 128, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 8, i32 0), align 4
  store i32 94, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 11, i32 0), align 4
  store i32 94, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 107, i32 0), align 4
  store i32 134, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 12, i32 0), align 4
  store i32 134, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 108, i32 0), align 4
  store i32 179, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 23, i32 0), align 4
  store i32 179, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 119, i32 0), align 4
  store i32 175, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 118, i32 0), align 4
  store i32 67, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 22, i32 0), align 4
  store i32 184, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 17, i32 0), align 4
  store i32 184, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 113, i32 0), align 4
  store i32 183, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 19, i32 0), align 4
  store i32 183, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 115, i32 0), align 4
  store i32 165, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 20, i32 0), align 4
  store i32 165, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 116, i32 0), align 4
  store i32 92, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 9, i32 0), align 4
  store i32 92, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 105, i32 0), align 4
  store i32 95, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 13, i32 0), align 4
  store i32 95, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 109, i32 0), align 4
  store i32 166, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 65, i32 0), align 4
  store i32 101, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 76, i32 0), align 4
  store i32 97, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 44, i32 0), align 4
  store i32 177, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 87, i32 0), align 4
  store i32 70, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 46, i32 0), align 4
  store i32 131, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 28, i32 0), align 4
  store i32 66, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 4, i32 0), align 4
  store i32 66, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 100, i32 0), align 4
  store i32 126, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 68, i32 0), align 4
  store i32 180, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 18, i32 0), align 4
  store i32 180, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 114, i32 0), align 4
  store i32 77, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 6, i32 0), align 4
  store i32 77, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 102, i32 0), align 4
  store i32 32, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 67, i32 0), align 4
  store i32 139, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 90, i32 0), align 4
  store i32 99, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 72, i32 0), align 4
  store i32 109, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 77, i32 0), align 4
  store i32 87, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 63, i32 0), align 4
  store i32 69, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 42, i32 0), align 4
  %arrayidx127 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args126, i32 0, i64 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0), i8** %arrayidx127, align 8
  %arrayidx128 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args126, i32 0, i64 1
  store i8* null, i8** %arrayidx128, align 8
  %arraydecay129 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args126, i32 0, i32 0
  call void @SaveAction(%struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 45), i32 143, i8** %arraydecay129, i32* null)
  store i32 0, i32* %i, align 4
  br label %for.cond.130

for.cond.130:                                     ; preds = %for.inc.144, %for.end.125
  %43 = load i32, i32* %i, align 4
  %44 = load i32, i32* @maxwin, align 4
  %tobool = icmp ne i32 %44, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %for.cond.130
  %45 = load i32, i32* @maxwin, align 4
  %cmp131 = icmp slt i32 %45, 10
  br i1 %cmp131, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %46 = load i32, i32* @maxwin, align 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %for.cond.130
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %46, %cond.true ], [ 10, %cond.false ]
  %cmp133 = icmp ult i32 %43, %cond
  br i1 %cmp133, label %for.body.135, label %for.end.146

for.body.135:                                     ; preds = %cond.end
  %arraydecay137 = getelementptr inbounds [10 x i8], [10 x i8]* %arg1, i32 0, i32 0
  %arrayidx138 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args136, i32 0, i64 0
  store i8* %arraydecay137, i8** %arrayidx138, align 8
  %arrayidx139 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args136, i32 0, i64 1
  store i8* null, i8** %arrayidx139, align 8
  %arraydecay140 = getelementptr inbounds [10 x i8], [10 x i8]* %arg1, i32 0, i32 0
  %47 = load i32, i32* %i, align 4
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay140, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %47) #4
  %48 = load i32, i32* %i, align 4
  %idx.ext141 = zext i32 %48 to i64
  %add.ptr142 = getelementptr inbounds %struct.action, %struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 48), i64 %idx.ext141
  %arraydecay143 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args136, i32 0, i32 0
  call void @SaveAction(%struct.action* %add.ptr142, i32 143, i8** %arraydecay143, i32* null)
  br label %for.inc.144

for.inc.144:                                      ; preds = %for.body.135
  %49 = load i32, i32* %i, align 4
  %inc145 = add i32 %49, 1
  store i32 %inc145, i32* %i, align 4
  br label %for.cond.130

for.end.146:                                      ; preds = %cond.end
  store i32 143, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 39, i32 0), align 4
  %arrayidx148 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args147, i32 0, i64 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args147, i32 0, i64 1
  store i8* null, i8** %arrayidx149, align 8
  %arraydecay150 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args147, i32 0, i32 0
  call void @SaveAction(%struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 34), i32 178, i8** %arraydecay150, i32* null)
  store i32 171, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 7, i32 0), align 4
  store i32 34, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 58, i32 0), align 4
  store i32 38, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 27, i32 0), align 4
  store i32 38, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 91, i32 0), align 4
  %arrayidx152 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args151, i32 0, i64 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i8** %arrayidx152, align 8
  %arrayidx153 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args151, i32 0, i64 1
  store i8* null, i8** %arrayidx153, align 8
  %arraydecay154 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args151, i32 0, i32 0
  call void @SaveAction(%struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 93), i32 123, i8** %arraydecay154, i32* null)
  %arraydecay155 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args151, i32 0, i32 0
  call void @SaveAction(%struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 29), i32 123, i8** %arraydecay155, i32* null)
  store i32 88, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 123, i32 0), align 4
  store i32 88, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 125, i32 0), align 4
  store i32 181, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 62, i32 0), align 4
  store i32 132, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 60, i32 0), align 4
  store i32 137, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 61, i32 0), align 4
  store i32 126, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 68, i32 0), align 4
  store i32 98, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 24, i32 0), align 4
  store i32 98, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 120, i32 0), align 4
  store i32 21, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 2, i32 0), align 4
  store i32 21, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 98, i32 0), align 4
  store i32 125, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 66, i32 0), align 4
  store i32 149, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 95, i32 0), align 4
  store i32 156, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 83, i32 0), align 4
  store i32 119, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 81, i32 0), align 4
  store i32 136, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 88, i32 0), align 4
  store i32 76, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 70, i32 0), align 4
  store i32 78, i32* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 9, i32 0), align 4
  %arrayidx157 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args156, i32 0, i64 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8** %arrayidx157, align 8
  %arrayidx158 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args156, i32 0, i64 1
  store i8* null, i8** %arrayidx158, align 8
  %arraydecay159 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args156, i32 0, i32 0
  call void @SaveAction(%struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 290), i32 78, i8** %arraydecay159, i32* null)
  %arrayidx161 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args160, i32 0, i64 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8** %arrayidx161, align 8
  %arrayidx162 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args160, i32 0, i64 1
  store i8* null, i8** %arrayidx162, align 8
  %arraydecay163 = getelementptr inbounds [2 x i8*], [2 x i8*]* %args160, i32 0, i32 0
  call void @SaveAction(%struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 124), i32 156, i8** %arraydecay163, i32* null)
  %50 = load i32, i32* @DefaultEsc, align 4
  %cmp164 = icmp sge i32 %50, 0
  br i1 %cmp164, label %if.then.166, label %if.end.172

if.then.166:                                      ; preds = %for.end.146
  %51 = load i32, i32* @DefaultEsc, align 4
  %idxprom167 = sext i32 %51 to i64
  %arrayidx168 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom167
  call void @ClearAction(%struct.action* %arrayidx168)
  %52 = load i32, i32* @DefaultEsc, align 4
  %idxprom169 = sext i32 %52 to i64
  %arrayidx170 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom169
  %nr171 = getelementptr inbounds %struct.action, %struct.action* %arrayidx170, i32 0, i32 0
  store i32 120, i32* %nr171, align 4
  br label %if.end.172

if.end.172:                                       ; preds = %if.then.166, %for.end.146
  %53 = load i32, i32* @DefaultMetaEsc, align 4
  %cmp173 = icmp sge i32 %53, 0
  br i1 %cmp173, label %if.then.175, label %if.end.181

if.then.175:                                      ; preds = %if.end.172
  %54 = load i32, i32* @DefaultMetaEsc, align 4
  %idxprom176 = sext i32 %54 to i64
  %arrayidx177 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom176
  call void @ClearAction(%struct.action* %arrayidx177)
  %55 = load i32, i32* @DefaultMetaEsc, align 4
  %idxprom178 = sext i32 %55 to i64
  %arrayidx179 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom178
  %nr180 = getelementptr inbounds %struct.action, %struct.action* %arrayidx179, i32 0, i32 0
  store i32 108, i32* %nr180, align 4
  br label %if.end.181

if.end.181:                                       ; preds = %if.then.175, %if.end.172
  store i32 19, i32* getelementptr inbounds (%struct.action, %struct.action* @idleaction, i32 0, i32 0), align 4
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** getelementptr inbounds (%struct.action, %struct.action* @idleaction, i32 0, i32 1), align 8
  store i32* null, i32** getelementptr inbounds (%struct.action, %struct.action* @idleaction, i32 0, i32 2), align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @SaveAction(%struct.action* %act, i32 %nr, i8** %args, i32* %argl) #0 {
entry:
  %act.addr = alloca %struct.action*, align 8
  %nr.addr = alloca i32, align 4
  %args.addr = alloca i8**, align 8
  %argl.addr = alloca i32*, align 8
  %argc = alloca i32, align 4
  %pp = alloca i8**, align 8
  %lp = alloca i32*, align 8
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i32 %nr, i32* %nr.addr, align 4
  store i8** %args, i8*** %args.addr, align 8
  store i32* %argl, i32** %argl.addr, align 8
  store i32 0, i32* %argc, align 4
  %0 = load i8**, i8*** %args.addr, align 8
  %tobool = icmp ne i8** %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then
  %1 = load i32, i32* %argc, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load i8**, i8*** %args.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %argc, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %argc, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end

if.end:                                           ; preds = %while.end, %entry
  %5 = load i32, i32* %argc, align 4
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then.2, label %if.end.6

if.then.2:                                        ; preds = %if.end
  %6 = load i32, i32* %nr.addr, align 4
  %7 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr3 = getelementptr inbounds %struct.action, %struct.action* %7, i32 0, i32 0
  store i32 %6, i32* %nr3, align 4
  %8 = load %struct.action*, %struct.action** %act.addr, align 8
  %args4 = getelementptr inbounds %struct.action, %struct.action* %8, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args4, align 8
  %9 = load %struct.action*, %struct.action** %act.addr, align 8
  %argl5 = getelementptr inbounds %struct.action, %struct.action* %9, i32 0, i32 2
  store i32* null, i32** %argl5, align 8
  br label %return

if.end.6:                                         ; preds = %if.end
  %10 = load i32, i32* %argc, align 4
  %add = add nsw i32 %10, 1
  %conv = zext i32 %add to i64
  %mul = mul i64 %conv, 8
  %call = call noalias i8* @malloc(i64 %mul) #4
  %11 = bitcast i8* %call to i8**
  store i8** %11, i8*** %pp, align 8
  %cmp7 = icmp eq i8** %11, null
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.6
  call void (i32, i8*, ...) @Panic(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0)) #7
  unreachable

if.end.10:                                        ; preds = %if.end.6
  %12 = load i32, i32* %argc, align 4
  %conv11 = zext i32 %12 to i64
  %mul12 = mul i64 %conv11, 8
  %call13 = call noalias i8* @malloc(i64 %mul12) #4
  %13 = bitcast i8* %call13 to i32*
  store i32* %13, i32** %lp, align 8
  %cmp14 = icmp eq i32* %13, null
  br i1 %cmp14, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %if.end.10
  call void (i32, i8*, ...) @Panic(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0)) #7
  unreachable

if.end.17:                                        ; preds = %if.end.10
  %14 = load i32, i32* %nr.addr, align 4
  %15 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr18 = getelementptr inbounds %struct.action, %struct.action* %15, i32 0, i32 0
  store i32 %14, i32* %nr18, align 4
  %16 = load i8**, i8*** %pp, align 8
  %17 = load %struct.action*, %struct.action** %act.addr, align 8
  %args19 = getelementptr inbounds %struct.action, %struct.action* %17, i32 0, i32 1
  store i8** %16, i8*** %args19, align 8
  %18 = load i32*, i32** %lp, align 8
  %19 = load %struct.action*, %struct.action** %act.addr, align 8
  %argl20 = getelementptr inbounds %struct.action, %struct.action* %19, i32 0, i32 2
  store i32* %18, i32** %argl20, align 8
  br label %while.cond.21

while.cond.21:                                    ; preds = %cond.end, %if.end.17
  %20 = load i32, i32* %argc, align 4
  %dec = add nsw i32 %20, -1
  store i32 %dec, i32* %argc, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %while.body.23, label %while.end.31

while.body.23:                                    ; preds = %while.cond.21
  %21 = load i32*, i32** %argl.addr, align 8
  %tobool24 = icmp ne i32* %21, null
  br i1 %tobool24, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.body.23
  %22 = load i32*, i32** %argl.addr, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %22, i32 1
  store i32* %incdec.ptr, i32** %argl.addr, align 8
  %23 = load i32, i32* %22, align 4
  br label %cond.end

cond.false:                                       ; preds = %while.body.23
  %24 = load i8**, i8*** %args.addr, align 8
  %25 = load i8*, i8** %24, align 8
  %call25 = call i64 @strlen(i8* %25) #8
  %conv26 = trunc i64 %call25 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %conv26, %cond.false ]
  %26 = load i32*, i32** %lp, align 8
  store i32 %cond, i32* %26, align 4
  %27 = load i8**, i8*** %args.addr, align 8
  %incdec.ptr27 = getelementptr inbounds i8*, i8** %27, i32 1
  store i8** %incdec.ptr27, i8*** %args.addr, align 8
  %28 = load i8*, i8** %27, align 8
  %29 = load i32*, i32** %lp, align 8
  %incdec.ptr28 = getelementptr inbounds i32, i32* %29, i32 1
  store i32* %incdec.ptr28, i32** %lp, align 8
  %30 = load i32, i32* %29, align 4
  %call29 = call i8* @SaveStrn(i8* %28, i32 %30)
  %31 = load i8**, i8*** %pp, align 8
  %incdec.ptr30 = getelementptr inbounds i8*, i8** %31, i32 1
  store i8** %incdec.ptr30, i8*** %pp, align 8
  store i8* %call29, i8** %31, align 8
  br label %while.cond.21

while.end.31:                                     ; preds = %while.cond.21
  %32 = load i8**, i8*** %pp, align 8
  store i8* null, i8** %32, align 8
  br label %return

return:                                           ; preds = %while.end.31, %if.then.2
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal void @ClearAction(%struct.action* %act) #0 {
entry:
  %act.addr = alloca %struct.action*, align 8
  %p = alloca i8**, align 8
  store %struct.action* %act, %struct.action** %act.addr, align 8
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 0
  %1 = load i32, i32* %nr, align 4
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr1 = getelementptr inbounds %struct.action, %struct.action* %2, i32 0, i32 0
  store i32 -1, i32* %nr1, align 4
  %3 = load %struct.action*, %struct.action** %act.addr, align 8
  %args = getelementptr inbounds %struct.action, %struct.action* %3, i32 0, i32 1
  %4 = load i8**, i8*** %args, align 8
  %cmp2 = icmp eq i8** %4, getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0)
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  br label %return

if.end.4:                                         ; preds = %if.end
  %5 = load %struct.action*, %struct.action** %act.addr, align 8
  %args5 = getelementptr inbounds %struct.action, %struct.action* %5, i32 0, i32 1
  %6 = load i8**, i8*** %args5, align 8
  store i8** %6, i8*** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.4
  %7 = load i8**, i8*** %p, align 8
  %8 = load i8*, i8** %7, align 8
  %tobool = icmp ne i8* %8, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i8**, i8*** %p, align 8
  %10 = load i8*, i8** %9, align 8
  call void @free(i8* %10) #4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i8**, i8*** %p, align 8
  %incdec.ptr = getelementptr inbounds i8*, i8** %11, i32 1
  store i8** %incdec.ptr, i8*** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load %struct.action*, %struct.action** %act.addr, align 8
  %args6 = getelementptr inbounds %struct.action, %struct.action* %12, i32 0, i32 1
  %13 = load i8**, i8*** %args6, align 8
  %14 = bitcast i8** %13 to i8*
  call void @free(i8* %14) #4
  %15 = load %struct.action*, %struct.action** %act.addr, align 8
  %args7 = getelementptr inbounds %struct.action, %struct.action* %15, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args7, align 8
  %16 = load %struct.action*, %struct.action** %act.addr, align 8
  %argl = getelementptr inbounds %struct.action, %struct.action* %16, i32 0, i32 2
  store i32* null, i32** %argl, align 8
  br label %return

return:                                           ; preds = %for.end, %if.then.3, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @ProcessInput(i8* %ibuf, i32 %ilen) #0 {
entry:
  %ibuf.addr = alloca i8*, align 8
  %ilen.addr = alloca i32, align 4
  %ch = alloca i32, align 4
  %slen = alloca i32, align 4
  %s = alloca i8*, align 8
  %q = alloca i8*, align 8
  %i = alloca i32, align 4
  %l = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %ibuf, i8** %ibuf.addr, align 8
  store i32 %ilen, i32* %ilen.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load %struct.display*, %struct.display** @display, align 8
  %cmp = icmp eq %struct.display* %0, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %1 = load i32, i32* %ilen.addr, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %do.end
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.display*, %struct.display** @display, align 8
  %d_seql = getelementptr inbounds %struct.display, %struct.display* %2, i32 0, i32 78
  %3 = load i32, i32* %d_seql, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %4 = load %struct.display*, %struct.display** @display, align 8
  %d_mapev = getelementptr inbounds %struct.display, %struct.display* %4, i32 0, i32 80
  call void @evdeq(%struct.event* %d_mapev)
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %5 = load i32, i32* %ilen.addr, align 4
  store i32 %5, i32* %slen, align 4
  %6 = load i8*, i8** %ibuf.addr, align 8
  store i8* %6, i8** %s, align 8
  br label %while.cond

while.cond:                                       ; preds = %for.end, %if.then.8, %if.end.3
  %7 = load i32, i32* %ilen.addr, align 4
  %dec = add nsw i32 %7, -1
  store i32 %dec, i32* %ilen.addr, align 4
  %cmp4 = icmp sgt i32 %7, 0
  br i1 %cmp4, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  %9 = load i8, i8* %8, align 1
  %conv = zext i8 %9 to i32
  store i32 %conv, i32* %ch, align 4
  %10 = load %struct.display*, %struct.display** @display, align 8
  %d_dontmap = getelementptr inbounds %struct.display, %struct.display* %10, i32 0, i32 81
  %11 = load i32, i32* %d_dontmap, align 4
  %tobool5 = icmp ne i32 %11, 0
  br i1 %tobool5, label %if.then.8, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %while.body
  %12 = load %struct.display*, %struct.display** @display, align 8
  %d_nseqs = getelementptr inbounds %struct.display, %struct.display* %12, i32 0, i32 74
  %13 = load i32, i32* %d_nseqs, align 4
  %tobool7 = icmp ne i32 %13, 0
  br i1 %tobool7, label %if.end.10, label %if.then.8

if.then.8:                                        ; preds = %lor.lhs.false.6, %while.body
  %14 = load %struct.display*, %struct.display** @display, align 8
  %d_dontmap9 = getelementptr inbounds %struct.display, %struct.display* %14, i32 0, i32 81
  store i32 0, i32* %d_dontmap9, align 4
  br label %while.cond

if.end.10:                                        ; preds = %lor.lhs.false.6
  br label %for.cond

for.cond:                                         ; preds = %if.end.81, %do.end.30, %if.end.10
  br label %do.body.11

do.body.11:                                       ; preds = %for.cond
  br label %do.end.12

do.end.12:                                        ; preds = %do.body.11
  %15 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp = getelementptr inbounds %struct.display, %struct.display* %15, i32 0, i32 77
  %16 = load i8*, i8** %d_seqp, align 8
  %17 = load i8, i8* %16, align 1
  %conv13 = zext i8 %17 to i32
  %18 = load i32, i32* %ch, align 4
  %cmp14 = icmp ne i32 %conv13, %18
  br i1 %cmp14, label %if.then.16, label %if.end.83

if.then.16:                                       ; preds = %do.end.12
  %19 = load %struct.display*, %struct.display** @display, align 8
  %d_seql17 = getelementptr inbounds %struct.display, %struct.display* %19, i32 0, i32 78
  %20 = load i32, i32* %d_seql17, align 4
  %sub = sub nsw i32 0, %20
  %sub18 = sub nsw i32 %sub, 1
  %idxprom = sext i32 %sub18 to i64
  %21 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp19 = getelementptr inbounds %struct.display, %struct.display* %21, i32 0, i32 77
  %22 = load i8*, i8** %d_seqp19, align 8
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 %idxprom
  %23 = load i8, i8* %arrayidx, align 1
  %conv20 = zext i8 %23 to i32
  %add = add nsw i32 %conv20, 1
  %idxprom21 = sext i32 %add to i64
  %24 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp22 = getelementptr inbounds %struct.display, %struct.display* %24, i32 0, i32 77
  %25 = load i8*, i8** %d_seqp22, align 8
  %arrayidx23 = getelementptr inbounds i8, i8* %25, i64 %idxprom21
  %26 = load i8, i8* %arrayidx23, align 1
  %conv24 = zext i8 %26 to i32
  store i32 %conv24, i32* %l, align 4
  %27 = load i32, i32* %l, align 4
  %tobool25 = icmp ne i32 %27, 0
  br i1 %tobool25, label %if.then.26, label %if.end.31

if.then.26:                                       ; preds = %if.then.16
  %28 = load i32, i32* %l, align 4
  %mul = mul nsw i32 %28, 2
  %add27 = add nsw i32 %mul, 4
  %29 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp28 = getelementptr inbounds %struct.display, %struct.display* %29, i32 0, i32 77
  %30 = load i8*, i8** %d_seqp28, align 8
  %idx.ext = sext i32 %add27 to i64
  %add.ptr = getelementptr inbounds i8, i8* %30, i64 %idx.ext
  store i8* %add.ptr, i8** %d_seqp28, align 8
  br label %do.body.29

do.body.29:                                       ; preds = %if.then.26
  br label %do.end.30

do.end.30:                                        ; preds = %do.body.29
  br label %for.cond

if.end.31:                                        ; preds = %if.then.16
  br label %do.body.32

do.body.32:                                       ; preds = %if.end.31
  br label %do.end.33

do.end.33:                                        ; preds = %do.body.32
  %31 = load %struct.display*, %struct.display** @display, align 8
  %d_mapdefault = getelementptr inbounds %struct.display, %struct.display* %31, i32 0, i32 82
  store i32 0, i32* %d_mapdefault, align 4
  %32 = load %struct.display*, %struct.display** @display, align 8
  %d_seql34 = getelementptr inbounds %struct.display, %struct.display* %32, i32 0, i32 78
  %33 = load i32, i32* %d_seql34, align 4
  store i32 %33, i32* %l, align 4
  %34 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp35 = getelementptr inbounds %struct.display, %struct.display* %34, i32 0, i32 77
  %35 = load i8*, i8** %d_seqp35, align 8
  %36 = load i32, i32* %l, align 4
  %idx.ext36 = sext i32 %36 to i64
  %idx.neg = sub i64 0, %idx.ext36
  %add.ptr37 = getelementptr inbounds i8, i8* %35, i64 %idx.neg
  store i8* %add.ptr37, i8** %p, align 8
  %37 = load %struct.display*, %struct.display** @display, align 8
  %d_seql38 = getelementptr inbounds %struct.display, %struct.display* %37, i32 0, i32 78
  store i32 0, i32* %d_seql38, align 4
  %38 = load %struct.display*, %struct.display** @display, align 8
  %d_kmaps = getelementptr inbounds %struct.display, %struct.display* %38, i32 0, i32 76
  %39 = load i8*, i8** %d_kmaps, align 8
  %add.ptr39 = getelementptr inbounds i8, i8* %39, i64 3
  %40 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp40 = getelementptr inbounds %struct.display, %struct.display* %40, i32 0, i32 77
  store i8* %add.ptr39, i8** %d_seqp40, align 8
  %41 = load i32, i32* %l, align 4
  %cmp41 = icmp eq i32 %41, 0
  br i1 %cmp41, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %do.end.33
  br label %for.end

if.end.44:                                        ; preds = %do.end.33
  %42 = load %struct.display*, %struct.display** @display, align 8
  %d_seqh = getelementptr inbounds %struct.display, %struct.display* %42, i32 0, i32 79
  %43 = load i8*, i8** %d_seqh, align 8
  store i8* %43, i8** %q, align 8
  %cmp45 = icmp ne i8* %43, null
  br i1 %cmp45, label %if.then.47, label %if.else

if.then.47:                                       ; preds = %if.end.44
  %44 = load %struct.display*, %struct.display** @display, align 8
  %d_seqh48 = getelementptr inbounds %struct.display, %struct.display* %44, i32 0, i32 79
  store i8* null, i8** %d_seqh48, align 8
  %45 = load i8*, i8** %q, align 8
  %arrayidx49 = getelementptr inbounds i8, i8* %45, i64 0
  %46 = load i8, i8* %arrayidx49, align 1
  %conv50 = zext i8 %46 to i32
  %shl = shl i32 %conv50, 8
  %47 = load i8*, i8** %q, align 8
  %arrayidx51 = getelementptr inbounds i8, i8* %47, i64 1
  %48 = load i8, i8* %arrayidx51, align 1
  %conv52 = zext i8 %48 to i32
  %or = or i32 %shl, %conv52
  store i32 %or, i32* %i, align 4
  %49 = load i32, i32* %i, align 4
  %and = and i32 %49, -16385
  store i32 %and, i32* %i, align 4
  br label %do.body.53

do.body.53:                                       ; preds = %if.then.47
  br label %do.end.54

do.end.54:                                        ; preds = %do.body.53
  br label %do.body.55

do.body.55:                                       ; preds = %do.end.54
  br label %do.end.56

do.end.56:                                        ; preds = %do.body.55
  %50 = load i32, i32* %i, align 4
  %call = call i32 @StuffKey(i32 %50)
  %tobool57 = icmp ne i32 %call, 0
  br i1 %tobool57, label %if.then.58, label %if.end.62

if.then.58:                                       ; preds = %do.end.56
  %51 = load i8*, i8** %q, align 8
  %add.ptr59 = getelementptr inbounds i8, i8* %51, i64 3
  %52 = load i8*, i8** %q, align 8
  %arrayidx60 = getelementptr inbounds i8, i8* %52, i64 2
  %53 = load i8, i8* %arrayidx60, align 1
  %conv61 = zext i8 %53 to i32
  call void @ProcessInput2(i8* %add.ptr59, i32 %conv61)
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.58, %do.end.56
  %54 = load %struct.display*, %struct.display** @display, align 8
  %cmp63 = icmp eq %struct.display* %54, null
  br i1 %cmp63, label %if.then.65, label %if.end.66

if.then.65:                                       ; preds = %if.end.62
  br label %return

if.end.66:                                        ; preds = %if.end.62
  %55 = load i8*, i8** %q, align 8
  %arrayidx67 = getelementptr inbounds i8, i8* %55, i64 2
  %56 = load i8, i8* %arrayidx67, align 1
  %conv68 = zext i8 %56 to i32
  %57 = load i32, i32* %l, align 4
  %sub69 = sub nsw i32 %57, %conv68
  store i32 %sub69, i32* %l, align 4
  %58 = load i8*, i8** %q, align 8
  %arrayidx70 = getelementptr inbounds i8, i8* %58, i64 2
  %59 = load i8, i8* %arrayidx70, align 1
  %conv71 = zext i8 %59 to i32
  %60 = load i8*, i8** %p, align 8
  %idx.ext72 = sext i32 %conv71 to i64
  %add.ptr73 = getelementptr inbounds i8, i8* %60, i64 %idx.ext72
  store i8* %add.ptr73, i8** %p, align 8
  br label %if.end.75

if.else:                                          ; preds = %if.end.44
  %61 = load %struct.display*, %struct.display** @display, align 8
  %d_dontmap74 = getelementptr inbounds %struct.display, %struct.display* %61, i32 0, i32 81
  store i32 1, i32* %d_dontmap74, align 4
  br label %if.end.75

if.end.75:                                        ; preds = %if.else, %if.end.66
  br label %do.body.76

do.body.76:                                       ; preds = %if.end.75
  br label %do.end.77

do.end.77:                                        ; preds = %do.body.76
  %62 = load i8*, i8** %p, align 8
  %63 = load i32, i32* %l, align 4
  call void @ProcessInput(i8* %62, i32 %63)
  %64 = load %struct.display*, %struct.display** @display, align 8
  %cmp78 = icmp eq %struct.display* %64, null
  br i1 %cmp78, label %if.then.80, label %if.end.81

if.then.80:                                       ; preds = %do.end.77
  br label %return

if.end.81:                                        ; preds = %do.end.77
  %65 = load %struct.display*, %struct.display** @display, align 8
  %d_mapev82 = getelementptr inbounds %struct.display, %struct.display* %65, i32 0, i32 80
  call void @evdeq(%struct.event* %d_mapev82)
  br label %for.cond

if.end.83:                                        ; preds = %do.end.12
  %66 = load %struct.display*, %struct.display** @display, align 8
  %d_seql84 = getelementptr inbounds %struct.display, %struct.display* %66, i32 0, i32 78
  %67 = load i32, i32* %d_seql84, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %d_seql84, align 4
  %cmp85 = icmp eq i32 %67, 0
  br i1 %cmp85, label %if.then.87, label %if.end.100

if.then.87:                                       ; preds = %if.end.83
  %68 = load i32, i32* %ilen.addr, align 4
  %add88 = add nsw i32 %68, 1
  %69 = load i32, i32* %slen, align 4
  %sub89 = sub nsw i32 %69, %add88
  store i32 %sub89, i32* %slen, align 4
  br label %do.body.90

do.body.90:                                       ; preds = %if.then.87
  br label %do.end.91

do.end.91:                                        ; preds = %do.body.90
  %70 = load i32, i32* %slen, align 4
  %tobool92 = icmp ne i32 %70, 0
  br i1 %tobool92, label %if.then.93, label %if.end.94

if.then.93:                                       ; preds = %do.end.91
  %71 = load i8*, i8** %ibuf.addr, align 8
  %72 = load i32, i32* %slen, align 4
  call void @ProcessInput2(i8* %71, i32 %72)
  br label %if.end.94

if.end.94:                                        ; preds = %if.then.93, %do.end.91
  %73 = load %struct.display*, %struct.display** @display, align 8
  %cmp95 = icmp eq %struct.display* %73, null
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %if.end.94
  br label %return

if.end.98:                                        ; preds = %if.end.94
  %74 = load %struct.display*, %struct.display** @display, align 8
  %d_seqh99 = getelementptr inbounds %struct.display, %struct.display* %74, i32 0, i32 79
  store i8* null, i8** %d_seqh99, align 8
  br label %if.end.100

if.end.100:                                       ; preds = %if.end.98, %if.end.83
  %75 = load i8*, i8** %s, align 8
  store i8* %75, i8** %ibuf.addr, align 8
  %76 = load i32, i32* %ilen.addr, align 4
  store i32 %76, i32* %slen, align 4
  %77 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp101 = getelementptr inbounds %struct.display, %struct.display* %77, i32 0, i32 77
  %78 = load i8*, i8** %d_seqp101, align 8
  %incdec.ptr102 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %incdec.ptr102, i8** %d_seqp101, align 8
  %79 = load %struct.display*, %struct.display** @display, align 8
  %d_seql103 = getelementptr inbounds %struct.display, %struct.display* %79, i32 0, i32 78
  %80 = load i32, i32* %d_seql103, align 4
  store i32 %80, i32* %l, align 4
  br label %do.body.104

do.body.104:                                      ; preds = %if.end.100
  br label %do.end.105

do.end.105:                                       ; preds = %do.body.104
  %81 = load i32, i32* %l, align 4
  %82 = load i32, i32* %l, align 4
  %sub106 = sub nsw i32 0, %82
  %sub107 = sub nsw i32 %sub106, 1
  %idxprom108 = sext i32 %sub107 to i64
  %83 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp109 = getelementptr inbounds %struct.display, %struct.display* %83, i32 0, i32 77
  %84 = load i8*, i8** %d_seqp109, align 8
  %arrayidx110 = getelementptr inbounds i8, i8* %84, i64 %idxprom108
  %85 = load i8, i8* %arrayidx110, align 1
  %conv111 = zext i8 %85 to i32
  %cmp112 = icmp eq i32 %81, %conv111
  br i1 %cmp112, label %if.then.114, label %if.end.196

if.then.114:                                      ; preds = %do.end.105
  %86 = load i32, i32* %l, align 4
  %idxprom115 = sext i32 %86 to i64
  %87 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp116 = getelementptr inbounds %struct.display, %struct.display* %87, i32 0, i32 77
  %88 = load i8*, i8** %d_seqp116, align 8
  %arrayidx117 = getelementptr inbounds i8, i8* %88, i64 %idxprom115
  %89 = load i8, i8* %arrayidx117, align 1
  %conv118 = zext i8 %89 to i32
  %90 = load i32, i32* %l, align 4
  %cmp119 = icmp ne i32 %conv118, %90
  br i1 %cmp119, label %if.then.121, label %if.end.159

if.then.121:                                      ; preds = %if.then.114
  %91 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp122 = getelementptr inbounds %struct.display, %struct.display* %91, i32 0, i32 77
  %92 = load i8*, i8** %d_seqp122, align 8
  %add.ptr123 = getelementptr inbounds i8, i8* %92, i64 1
  %93 = load i32, i32* %l, align 4
  %idx.ext124 = sext i32 %93 to i64
  %add.ptr125 = getelementptr inbounds i8, i8* %add.ptr123, i64 %idx.ext124
  store i8* %add.ptr125, i8** %q, align 8
  %94 = load %struct.display*, %struct.display** @display, align 8
  %d_kmaps126 = getelementptr inbounds %struct.display, %struct.display* %94, i32 0, i32 76
  %95 = load i8*, i8** %d_kmaps126, align 8
  %96 = load %struct.display*, %struct.display** @display, align 8
  %d_nseqs127 = getelementptr inbounds %struct.display, %struct.display* %96, i32 0, i32 74
  %97 = load i32, i32* %d_nseqs127, align 4
  %idx.ext128 = sext i32 %97 to i64
  %add.ptr129 = getelementptr inbounds i8, i8* %95, i64 %idx.ext128
  %98 = load i8*, i8** %q, align 8
  %cmp130 = icmp ugt i8* %add.ptr129, %98
  br i1 %cmp130, label %land.lhs.true, label %if.end.158

land.lhs.true:                                    ; preds = %if.then.121
  %99 = load i8*, i8** %q, align 8
  %arrayidx132 = getelementptr inbounds i8, i8* %99, i64 2
  %100 = load i8, i8* %arrayidx132, align 1
  %conv133 = zext i8 %100 to i32
  %101 = load i32, i32* %l, align 4
  %cmp134 = icmp sgt i32 %conv133, %101
  br i1 %cmp134, label %land.lhs.true.136, label %if.end.158

land.lhs.true.136:                                ; preds = %land.lhs.true
  %102 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp137 = getelementptr inbounds %struct.display, %struct.display* %102, i32 0, i32 77
  %103 = load i8*, i8** %d_seqp137, align 8
  %104 = load i32, i32* %l, align 4
  %idx.ext138 = sext i32 %104 to i64
  %idx.neg139 = sub i64 0, %idx.ext138
  %add.ptr140 = getelementptr inbounds i8, i8* %103, i64 %idx.neg139
  %105 = load i8*, i8** %q, align 8
  %add.ptr141 = getelementptr inbounds i8, i8* %105, i64 3
  %106 = load i32, i32* %l, align 4
  %conv142 = sext i32 %106 to i64
  %call143 = call i32 @bcmp(i8* %add.ptr140, i8* %add.ptr141, i64 %conv142) #8
  %tobool144 = icmp ne i32 %call143, 0
  br i1 %tobool144, label %if.end.158, label %if.then.145

if.then.145:                                      ; preds = %land.lhs.true.136
  br label %do.body.146

do.body.146:                                      ; preds = %if.then.145
  br label %do.end.147

do.end.147:                                       ; preds = %do.body.146
  %107 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp148 = getelementptr inbounds %struct.display, %struct.display* %107, i32 0, i32 77
  %108 = load i8*, i8** %d_seqp148, align 8
  %add.ptr149 = getelementptr inbounds i8, i8* %108, i64 -3
  %109 = load i32, i32* %l, align 4
  %idx.ext150 = sext i32 %109 to i64
  %idx.neg151 = sub i64 0, %idx.ext150
  %add.ptr152 = getelementptr inbounds i8, i8* %add.ptr149, i64 %idx.neg151
  %110 = load %struct.display*, %struct.display** @display, align 8
  %d_seqh153 = getelementptr inbounds %struct.display, %struct.display* %110, i32 0, i32 79
  store i8* %add.ptr152, i8** %d_seqh153, align 8
  %111 = load i8*, i8** %q, align 8
  %add.ptr154 = getelementptr inbounds i8, i8* %111, i64 3
  %112 = load i32, i32* %l, align 4
  %idx.ext155 = sext i32 %112 to i64
  %add.ptr156 = getelementptr inbounds i8, i8* %add.ptr154, i64 %idx.ext155
  %113 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp157 = getelementptr inbounds %struct.display, %struct.display* %113, i32 0, i32 77
  store i8* %add.ptr156, i8** %d_seqp157, align 8
  br label %for.end

if.end.158:                                       ; preds = %land.lhs.true.136, %land.lhs.true, %if.then.121
  br label %if.end.159

if.end.159:                                       ; preds = %if.end.158, %if.then.114
  %114 = load i32, i32* %l, align 4
  %sub160 = sub nsw i32 0, %114
  %sub161 = sub nsw i32 %sub160, 3
  %idxprom162 = sext i32 %sub161 to i64
  %115 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp163 = getelementptr inbounds %struct.display, %struct.display* %115, i32 0, i32 77
  %116 = load i8*, i8** %d_seqp163, align 8
  %arrayidx164 = getelementptr inbounds i8, i8* %116, i64 %idxprom162
  %117 = load i8, i8* %arrayidx164, align 1
  %conv165 = zext i8 %117 to i32
  %shl166 = shl i32 %conv165, 8
  %118 = load i32, i32* %l, align 4
  %sub167 = sub nsw i32 0, %118
  %sub168 = sub nsw i32 %sub167, 2
  %idxprom169 = sext i32 %sub168 to i64
  %119 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp170 = getelementptr inbounds %struct.display, %struct.display* %119, i32 0, i32 77
  %120 = load i8*, i8** %d_seqp170, align 8
  %arrayidx171 = getelementptr inbounds i8, i8* %120, i64 %idxprom169
  %121 = load i8, i8* %arrayidx171, align 1
  %conv172 = zext i8 %121 to i32
  %or173 = or i32 %shl166, %conv172
  store i32 %or173, i32* %i, align 4
  %122 = load i32, i32* %i, align 4
  %and174 = and i32 %122, -16385
  store i32 %and174, i32* %i, align 4
  br label %do.body.175

do.body.175:                                      ; preds = %if.end.159
  br label %do.end.176

do.end.176:                                       ; preds = %do.body.175
  %123 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp177 = getelementptr inbounds %struct.display, %struct.display* %123, i32 0, i32 77
  %124 = load i8*, i8** %d_seqp177, align 8
  %125 = load i32, i32* %l, align 4
  %idx.ext178 = sext i32 %125 to i64
  %idx.neg179 = sub i64 0, %idx.ext178
  %add.ptr180 = getelementptr inbounds i8, i8* %124, i64 %idx.neg179
  store i8* %add.ptr180, i8** %p, align 8
  br label %do.body.181

do.body.181:                                      ; preds = %do.end.176
  br label %do.end.182

do.end.182:                                       ; preds = %do.body.181
  %126 = load %struct.display*, %struct.display** @display, align 8
  %d_seql183 = getelementptr inbounds %struct.display, %struct.display* %126, i32 0, i32 78
  store i32 0, i32* %d_seql183, align 4
  %127 = load %struct.display*, %struct.display** @display, align 8
  %d_kmaps184 = getelementptr inbounds %struct.display, %struct.display* %127, i32 0, i32 76
  %128 = load i8*, i8** %d_kmaps184, align 8
  %add.ptr185 = getelementptr inbounds i8, i8* %128, i64 3
  %129 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp186 = getelementptr inbounds %struct.display, %struct.display* %129, i32 0, i32 77
  store i8* %add.ptr185, i8** %d_seqp186, align 8
  %130 = load %struct.display*, %struct.display** @display, align 8
  %d_seqh187 = getelementptr inbounds %struct.display, %struct.display* %130, i32 0, i32 79
  store i8* null, i8** %d_seqh187, align 8
  %131 = load i32, i32* %i, align 4
  %call188 = call i32 @StuffKey(i32 %131)
  %tobool189 = icmp ne i32 %call188, 0
  br i1 %tobool189, label %if.then.190, label %if.end.191

if.then.190:                                      ; preds = %do.end.182
  %132 = load i8*, i8** %p, align 8
  %133 = load i32, i32* %l, align 4
  call void @ProcessInput2(i8* %132, i32 %133)
  br label %if.end.191

if.end.191:                                       ; preds = %if.then.190, %do.end.182
  %134 = load %struct.display*, %struct.display** @display, align 8
  %cmp192 = icmp eq %struct.display* %134, null
  br i1 %cmp192, label %if.then.194, label %if.end.195

if.then.194:                                      ; preds = %if.end.191
  br label %return

if.end.195:                                       ; preds = %if.end.191
  br label %if.end.196

if.end.196:                                       ; preds = %if.end.195, %do.end.105
  br label %for.end

for.end:                                          ; preds = %if.end.196, %do.end.147, %if.then.43
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %135 = load %struct.display*, %struct.display** @display, align 8
  %d_seql197 = getelementptr inbounds %struct.display, %struct.display* %135, i32 0, i32 78
  %136 = load i32, i32* %d_seql197, align 4
  %tobool198 = icmp ne i32 %136, 0
  br i1 %tobool198, label %if.then.199, label %if.end.234

if.then.199:                                      ; preds = %while.end
  br label %do.body.200

do.body.200:                                      ; preds = %if.then.199
  br label %do.end.201

do.end.201:                                       ; preds = %do.body.200
  %137 = load %struct.display*, %struct.display** @display, align 8
  %d_seql202 = getelementptr inbounds %struct.display, %struct.display* %137, i32 0, i32 78
  %138 = load i32, i32* %d_seql202, align 4
  store i32 %138, i32* %l, align 4
  %139 = load %struct.display*, %struct.display** @display, align 8
  %d_seqp203 = getelementptr inbounds %struct.display, %struct.display* %139, i32 0, i32 77
  %140 = load i8*, i8** %d_seqp203, align 8
  store i8* %140, i8** %s, align 8
  br label %for.cond.204

for.cond.204:                                     ; preds = %for.inc, %do.end.201
  %141 = load i32, i32* %l, align 4
  %sub205 = sub nsw i32 0, %141
  %sub206 = sub nsw i32 %sub205, 3
  %idxprom207 = sext i32 %sub206 to i64
  %142 = load i8*, i8** %s, align 8
  %arrayidx208 = getelementptr inbounds i8, i8* %142, i64 %idxprom207
  %143 = load i8, i8* %arrayidx208, align 1
  %conv209 = zext i8 %143 to i32
  %and210 = and i32 %conv209, 64
  %tobool211 = icmp ne i32 %and210, 0
  br i1 %tobool211, label %if.then.212, label %if.end.213

if.then.212:                                      ; preds = %for.cond.204
  br label %for.end.233

if.end.213:                                       ; preds = %for.cond.204
  %144 = load i32, i32* %l, align 4
  %sub214 = sub nsw i32 0, %144
  %sub215 = sub nsw i32 %sub214, 1
  %idxprom216 = sext i32 %sub215 to i64
  %145 = load i8*, i8** %s, align 8
  %arrayidx217 = getelementptr inbounds i8, i8* %145, i64 %idxprom216
  %146 = load i8, i8* %arrayidx217, align 1
  %conv218 = zext i8 %146 to i32
  %add219 = add nsw i32 %conv218, 1
  %idxprom220 = sext i32 %add219 to i64
  %147 = load i8*, i8** %s, align 8
  %arrayidx221 = getelementptr inbounds i8, i8* %147, i64 %idxprom220
  %148 = load i8, i8* %arrayidx221, align 1
  %conv222 = zext i8 %148 to i32
  store i32 %conv222, i32* %i, align 4
  %cmp223 = icmp eq i32 %conv222, 0
  br i1 %cmp223, label %if.then.225, label %if.end.228

if.then.225:                                      ; preds = %if.end.213
  %149 = load %struct.display*, %struct.display** @display, align 8
  %d_mapev226 = getelementptr inbounds %struct.display, %struct.display* %149, i32 0, i32 80
  %150 = load i32, i32* @maptimeout, align 4
  call void @SetTimeout(%struct.event* %d_mapev226, i32 %150)
  %151 = load %struct.display*, %struct.display** @display, align 8
  %d_mapev227 = getelementptr inbounds %struct.display, %struct.display* %151, i32 0, i32 80
  call void @evenq(%struct.event* %d_mapev227)
  br label %for.end.233

if.end.228:                                       ; preds = %if.end.213
  br label %for.inc

for.inc:                                          ; preds = %if.end.228
  %152 = load i32, i32* %i, align 4
  %mul229 = mul nsw i32 %152, 2
  %add230 = add nsw i32 %mul229, 4
  %153 = load i8*, i8** %s, align 8
  %idx.ext231 = sext i32 %add230 to i64
  %add.ptr232 = getelementptr inbounds i8, i8* %153, i64 %idx.ext231
  store i8* %add.ptr232, i8** %s, align 8
  br label %for.cond.204

for.end.233:                                      ; preds = %if.then.225, %if.then.212
  br label %if.end.234

if.end.234:                                       ; preds = %for.end.233, %while.end
  %154 = load i8*, i8** %ibuf.addr, align 8
  %155 = load i32, i32* %slen, align 4
  call void @ProcessInput2(i8* %154, i32 %155)
  br label %return

return:                                           ; preds = %if.end.234, %if.then.194, %if.then.97, %if.then.80, %if.then.65, %if.then
  ret void
}

declare void @evdeq(%struct.event*) #2

; Function Attrs: nounwind uwtable
define i32 @StuffKey(i32 %i) #0 {
entry:
  %retval = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %act = alloca %struct.action*, align 8
  %discard = alloca i32, align 4
  %keyno = alloca i32, align 4
  %act1 = alloca %struct.action*, align 8
  store i32 %i, i32* %i.addr, align 4
  store i32 0, i32* %discard, align 4
  %0 = load i32, i32* %i.addr, align 4
  store i32 %0, i32* %keyno, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %1 = load i32, i32* %i.addr, align 4
  %cmp = icmp slt i32 %1, 82
  br i1 %cmp, label %land.lhs.true, label %if.end.7

land.lhs.true:                                    ; preds = %do.end
  %2 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen = getelementptr inbounds %struct.display, %struct.display* %2, i32 0, i32 56
  %3 = load %struct.action*, %struct.action** %d_ESCseen, align 8
  %tobool = icmp ne %struct.action* %3, null
  br i1 %tobool, label %if.then, label %if.end.7

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %i.addr, align 4
  %add = add nsw i32 %4, 256
  %idxprom = sext i32 %add to i64
  %5 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen2 = getelementptr inbounds %struct.display, %struct.display* %5, i32 0, i32 56
  %6 = load %struct.action*, %struct.action** %d_ESCseen2, align 8
  %arrayidx = getelementptr inbounds %struct.action, %struct.action* %6, i64 %idxprom
  store %struct.action* %arrayidx, %struct.action** %act1, align 8
  %7 = load %struct.action*, %struct.action** %act1, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %7, i32 0, i32 0
  %8 = load i32, i32* %nr, align 4
  %cmp3 = icmp ne i32 %8, -1
  br i1 %cmp3, label %if.then.4, label %if.end

if.then.4:                                        ; preds = %if.then
  %9 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen5 = getelementptr inbounds %struct.display, %struct.display* %9, i32 0, i32 56
  store %struct.action* null, %struct.action** %d_ESCseen5, align 8
  %10 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %10, i32 69)
  %11 = load %struct.action*, %struct.action** %act1, align 8
  %12 = load i32, i32* %i.addr, align 4
  %add6 = add nsw i32 %12, 256
  call void @DoAction(%struct.action* %11, i32 %add6)
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  store i32 1, i32* %discard, align 4
  br label %if.end.7

if.end.7:                                         ; preds = %if.end, %land.lhs.true, %do.end
  %13 = load i32, i32* %i.addr, align 4
  %cmp8 = icmp sge i32 %13, 60
  br i1 %cmp8, label %land.lhs.true.9, label %if.else

land.lhs.true.9:                                  ; preds = %if.end.7
  %14 = load i32, i32* %i.addr, align 4
  %cmp10 = icmp slt i32 %14, 64
  br i1 %cmp10, label %land.lhs.true.11, label %if.else

land.lhs.true.11:                                 ; preds = %land.lhs.true.9
  %15 = load %struct.display*, %struct.display** @display, align 8
  %d_cursorkeys = getelementptr inbounds %struct.display, %struct.display* %15, i32 0, i32 33
  %16 = load i32, i32* %d_cursorkeys, align 4
  %tobool12 = icmp ne i32 %16, 0
  br i1 %tobool12, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %land.lhs.true.11
  %17 = load i32, i32* %i.addr, align 4
  %add14 = add nsw i32 %17, 22
  store i32 %add14, i32* %i.addr, align 4
  br label %if.end.23

if.else:                                          ; preds = %land.lhs.true.11, %land.lhs.true.9, %if.end.7
  %18 = load i32, i32* %i.addr, align 4
  %cmp15 = icmp sge i32 %18, 64
  br i1 %cmp15, label %land.lhs.true.16, label %if.end.22

land.lhs.true.16:                                 ; preds = %if.else
  %19 = load i32, i32* %i.addr, align 4
  %cmp17 = icmp slt i32 %19, 82
  br i1 %cmp17, label %land.lhs.true.18, label %if.end.22

land.lhs.true.18:                                 ; preds = %land.lhs.true.16
  %20 = load %struct.display*, %struct.display** @display, align 8
  %d_keypad = getelementptr inbounds %struct.display, %struct.display* %20, i32 0, i32 32
  %21 = load i32, i32* %d_keypad, align 4
  %tobool19 = icmp ne i32 %21, 0
  br i1 %tobool19, label %if.then.20, label %if.end.22

if.then.20:                                       ; preds = %land.lhs.true.18
  %22 = load i32, i32* %i.addr, align 4
  %add21 = add nsw i32 %22, 22
  store i32 %add21, i32* %i.addr, align 4
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.20, %land.lhs.true.18, %land.lhs.true.16, %if.else
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.then.13
  br label %do.body.24

do.body.24:                                       ; preds = %if.end.23
  br label %do.end.25

do.end.25:                                        ; preds = %do.body.24
  %23 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %23, i32 0, i32 4
  %24 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %24, i32 0, i32 9
  %25 = load %struct.layer*, %struct.layer** %c_layer, align 8
  store %struct.layer* %25, %struct.layer** @flayer, align 8
  %26 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %26, i32 0, i32 10
  %27 = load %struct.win*, %struct.win** %d_fore, align 8
  store %struct.win* %27, %struct.win** @fore, align 8
  store %struct.action* null, %struct.action** %act, align 8
  %28 = load %struct.layer*, %struct.layer** @flayer, align 8
  %tobool26 = icmp ne %struct.layer* %28, null
  br i1 %tobool26, label %land.lhs.true.27, label %if.end.35

land.lhs.true.27:                                 ; preds = %do.end.25
  %29 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_mode = getelementptr inbounds %struct.layer, %struct.layer* %29, i32 0, i32 11
  %30 = load i32, i32* %l_mode, align 4
  %cmp28 = icmp eq i32 %30, 1
  br i1 %cmp28, label %if.then.29, label %if.end.35

if.then.29:                                       ; preds = %land.lhs.true.27
  %31 = load i32, i32* %i.addr, align 4
  %cmp30 = icmp slt i32 %31, 104
  br i1 %cmp30, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.29
  %32 = load i32, i32* %i.addr, align 4
  %idxprom31 = sext i32 %32 to i64
  %arrayidx32 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @mmtab, i32 0, i64 %idxprom31
  br label %cond.end

cond.false:                                       ; preds = %if.then.29
  %33 = load i32, i32* %i.addr, align 4
  %sub = sub nsw i32 %33, 104
  %idxprom33 = sext i32 %sub to i64
  %34 = load %struct.kmap_ext*, %struct.kmap_ext** @kmap_exts, align 8
  %arrayidx34 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %34, i64 %idxprom33
  %mm = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %arrayidx34, i32 0, i32 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.action* [ %arrayidx32, %cond.true ], [ %mm, %cond.false ]
  store %struct.action* %cond, %struct.action** %act, align 8
  br label %if.end.35

if.end.35:                                        ; preds = %cond.end, %land.lhs.true.27, %do.end.25
  %35 = load %struct.action*, %struct.action** %act, align 8
  %tobool36 = icmp ne %struct.action* %35, null
  br i1 %tobool36, label %lor.lhs.false, label %land.lhs.true.39

lor.lhs.false:                                    ; preds = %if.end.35
  %36 = load %struct.action*, %struct.action** %act, align 8
  %nr37 = getelementptr inbounds %struct.action, %struct.action* %36, i32 0, i32 0
  %37 = load i32, i32* %nr37, align 4
  %cmp38 = icmp eq i32 %37, -1
  br i1 %cmp38, label %land.lhs.true.39, label %if.end.52

land.lhs.true.39:                                 ; preds = %lor.lhs.false, %if.end.35
  %38 = load %struct.display*, %struct.display** @display, align 8
  %d_mapdefault = getelementptr inbounds %struct.display, %struct.display* %38, i32 0, i32 82
  %39 = load i32, i32* %d_mapdefault, align 4
  %tobool40 = icmp ne i32 %39, 0
  br i1 %tobool40, label %if.end.52, label %if.then.41

if.then.41:                                       ; preds = %land.lhs.true.39
  %40 = load i32, i32* %i.addr, align 4
  %cmp42 = icmp slt i32 %40, 104
  br i1 %cmp42, label %cond.true.43, label %cond.false.46

cond.true.43:                                     ; preds = %if.then.41
  %41 = load i32, i32* %i.addr, align 4
  %idxprom44 = sext i32 %41 to i64
  %arrayidx45 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @umtab, i32 0, i64 %idxprom44
  br label %cond.end.50

cond.false.46:                                    ; preds = %if.then.41
  %42 = load i32, i32* %i.addr, align 4
  %sub47 = sub nsw i32 %42, 104
  %idxprom48 = sext i32 %sub47 to i64
  %43 = load %struct.kmap_ext*, %struct.kmap_ext** @kmap_exts, align 8
  %arrayidx49 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %43, i64 %idxprom48
  %um = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %arrayidx49, i32 0, i32 2
  br label %cond.end.50

cond.end.50:                                      ; preds = %cond.false.46, %cond.true.43
  %cond51 = phi %struct.action* [ %arrayidx45, %cond.true.43 ], [ %um, %cond.false.46 ]
  store %struct.action* %cond51, %struct.action** %act, align 8
  br label %if.end.52

if.end.52:                                        ; preds = %cond.end.50, %land.lhs.true.39, %lor.lhs.false
  %44 = load %struct.action*, %struct.action** %act, align 8
  %tobool53 = icmp ne %struct.action* %44, null
  br i1 %tobool53, label %lor.lhs.false.54, label %if.then.57

lor.lhs.false.54:                                 ; preds = %if.end.52
  %45 = load %struct.action*, %struct.action** %act, align 8
  %nr55 = getelementptr inbounds %struct.action, %struct.action* %45, i32 0, i32 0
  %46 = load i32, i32* %nr55, align 4
  %cmp56 = icmp eq i32 %46, -1
  br i1 %cmp56, label %if.then.57, label %if.end.68

if.then.57:                                       ; preds = %lor.lhs.false.54, %if.end.52
  %47 = load i32, i32* %i.addr, align 4
  %cmp58 = icmp slt i32 %47, 104
  br i1 %cmp58, label %cond.true.59, label %cond.false.62

cond.true.59:                                     ; preds = %if.then.57
  %48 = load i32, i32* %i.addr, align 4
  %idxprom60 = sext i32 %48 to i64
  %arrayidx61 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i64 %idxprom60
  br label %cond.end.66

cond.false.62:                                    ; preds = %if.then.57
  %49 = load i32, i32* %i.addr, align 4
  %sub63 = sub nsw i32 %49, 104
  %idxprom64 = sext i32 %sub63 to i64
  %50 = load %struct.kmap_ext*, %struct.kmap_ext** @kmap_exts, align 8
  %arrayidx65 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %50, i64 %idxprom64
  %dm = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %arrayidx65, i32 0, i32 3
  br label %cond.end.66

cond.end.66:                                      ; preds = %cond.false.62, %cond.true.59
  %cond67 = phi %struct.action* [ %arrayidx61, %cond.true.59 ], [ %dm, %cond.false.62 ]
  store %struct.action* %cond67, %struct.action** %act, align 8
  br label %if.end.68

if.end.68:                                        ; preds = %cond.end.66, %lor.lhs.false.54
  %51 = load i32, i32* %discard, align 4
  %tobool69 = icmp ne i32 %51, 0
  br i1 %tobool69, label %land.lhs.true.70, label %if.end.94

land.lhs.true.70:                                 ; preds = %if.end.68
  %52 = load %struct.action*, %struct.action** %act, align 8
  %tobool71 = icmp ne %struct.action* %52, null
  br i1 %tobool71, label %lor.lhs.false.72, label %if.then.75

lor.lhs.false.72:                                 ; preds = %land.lhs.true.70
  %53 = load %struct.action*, %struct.action** %act, align 8
  %nr73 = getelementptr inbounds %struct.action, %struct.action* %53, i32 0, i32 0
  %54 = load i32, i32* %nr73, align 4
  %cmp74 = icmp ne i32 %54, 35
  br i1 %cmp74, label %if.then.75, label %if.end.94

if.then.75:                                       ; preds = %lor.lhs.false.72, %land.lhs.true.70
  %55 = load i32, i32* %keyno, align 4
  %add76 = add nsw i32 %55, 106
  %idxprom77 = sext i32 %add76 to i64
  %56 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs = getelementptr inbounds %struct.display, %struct.display* %56, i32 0, i32 83
  %arrayidx78 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs, i32 0, i64 %idxprom77
  %str = bitcast %union.tcu* %arrayidx78 to i8**
  %57 = load i8*, i8** %str, align 8
  %tobool79 = icmp ne i8* %57, null
  br i1 %tobool79, label %land.lhs.true.80, label %if.end.88

land.lhs.true.80:                                 ; preds = %if.then.75
  %58 = load i32, i32* %keyno, align 4
  %add81 = add nsw i32 %58, 106
  %idxprom82 = sext i32 %add81 to i64
  %59 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs83 = getelementptr inbounds %struct.display, %struct.display* %59, i32 0, i32 83
  %arrayidx84 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs83, i32 0, i64 %idxprom82
  %str85 = bitcast %union.tcu* %arrayidx84 to i8**
  %60 = load i8*, i8** %str85, align 8
  %call = call i64 @strlen(i8* %60) #8
  %cmp86 = icmp eq i64 %call, 1
  br i1 %cmp86, label %if.then.87, label %if.end.88

if.then.87:                                       ; preds = %land.lhs.true.80
  store i32 -1, i32* %retval
  br label %return

if.end.88:                                        ; preds = %land.lhs.true.80, %if.then.75
  %61 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen89 = getelementptr inbounds %struct.display, %struct.display* %61, i32 0, i32 56
  %62 = load %struct.action*, %struct.action** %d_ESCseen89, align 8
  %tobool90 = icmp ne %struct.action* %62, null
  br i1 %tobool90, label %if.then.91, label %if.end.93

if.then.91:                                       ; preds = %if.end.88
  %63 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen92 = getelementptr inbounds %struct.display, %struct.display* %63, i32 0, i32 56
  store %struct.action* null, %struct.action** %d_ESCseen92, align 8
  %64 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %64, i32 69)
  br label %if.end.93

if.end.93:                                        ; preds = %if.then.91, %if.end.88
  store i32 0, i32* %retval
  br label %return

if.end.94:                                        ; preds = %lor.lhs.false.72, %if.end.68
  %65 = load %struct.display*, %struct.display** @display, align 8
  %d_mapdefault95 = getelementptr inbounds %struct.display, %struct.display* %65, i32 0, i32 82
  store i32 0, i32* %d_mapdefault95, align 4
  %66 = load %struct.action*, %struct.action** %act, align 8
  %cmp96 = icmp eq %struct.action* %66, null
  br i1 %cmp96, label %if.then.100, label %lor.lhs.false.97

lor.lhs.false.97:                                 ; preds = %if.end.94
  %67 = load %struct.action*, %struct.action** %act, align 8
  %nr98 = getelementptr inbounds %struct.action, %struct.action* %67, i32 0, i32 0
  %68 = load i32, i32* %nr98, align 4
  %cmp99 = icmp eq i32 %68, -1
  br i1 %cmp99, label %if.then.100, label %if.end.101

if.then.100:                                      ; preds = %lor.lhs.false.97, %if.end.94
  store i32 -1, i32* %retval
  br label %return

if.end.101:                                       ; preds = %lor.lhs.false.97
  %69 = load %struct.action*, %struct.action** %act, align 8
  call void @DoAction(%struct.action* %69, i32 0)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.101, %if.then.100, %if.end.93, %if.then.87, %if.then.4
  %70 = load i32, i32* %retval
  ret i32 %70
}

; Function Attrs: nounwind uwtable
define void @ProcessInput2(i8* %ibuf, i32 %ilen) #0 {
entry:
  %ibuf.addr = alloca i8*, align 8
  %ilen.addr = alloca i32, align 4
  %s = alloca i8*, align 8
  %ch = alloca i32, align 4
  %slen = alloca i32, align 4
  %ktabp = alloca %struct.action*, align 8
  store i8* %ibuf, i8** %ibuf.addr, align 8
  store i32 %ilen, i32* %ilen.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %while.cond

while.cond:                                       ; preds = %if.end.47, %do.end
  %0 = load i32, i32* %ilen.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %1 = load %struct.display*, %struct.display** @display, align 8
  %tobool1 = icmp ne %struct.display* %1, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2 = phi i1 [ false, %while.cond ], [ %tobool1, %land.rhs ]
  br i1 %2, label %while.body, label %while.end.49

while.body:                                       ; preds = %land.end
  br label %do.body.2

do.body.2:                                        ; preds = %while.body
  br label %do.end.3

do.end.3:                                         ; preds = %do.body.2
  %3 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %3, i32 0, i32 4
  %4 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %4, i32 0, i32 9
  %5 = load %struct.layer*, %struct.layer** %c_layer, align 8
  store %struct.layer* %5, %struct.layer** @flayer, align 8
  %6 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %6, i32 0, i32 10
  %7 = load %struct.win*, %struct.win** %d_fore, align 8
  store %struct.win* %7, %struct.win** @fore, align 8
  %8 = load i32, i32* %ilen.addr, align 4
  store i32 %8, i32* %slen, align 4
  %9 = load i8*, i8** %ibuf.addr, align 8
  store i8* %9, i8** %s, align 8
  %10 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen = getelementptr inbounds %struct.display, %struct.display* %10, i32 0, i32 56
  %11 = load %struct.action*, %struct.action** %d_ESCseen, align 8
  %tobool4 = icmp ne %struct.action* %11, null
  br i1 %tobool4, label %if.end.19, label %if.then

if.then:                                          ; preds = %do.end.3
  br label %while.cond.5

while.cond.5:                                     ; preds = %if.end, %if.then
  %12 = load i32, i32* %ilen.addr, align 4
  %cmp = icmp sgt i32 %12, 0
  br i1 %cmp, label %while.body.6, label %while.end

while.body.6:                                     ; preds = %while.cond.5
  %13 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  %14 = load i8, i8* %13, align 1
  %conv = zext i8 %14 to i32
  %15 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %15, i32 0, i32 1
  %16 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %u_Esc = getelementptr inbounds %struct.acluser, %struct.acluser* %16, i32 0, i32 6
  %17 = load i32, i32* %u_Esc, align 4
  %cmp7 = icmp eq i32 %conv, %17
  br i1 %cmp7, label %if.then.9, label %if.end

if.then.9:                                        ; preds = %while.body.6
  br label %while.end

if.end:                                           ; preds = %while.body.6
  %18 = load i32, i32* %ilen.addr, align 4
  %dec = add nsw i32 %18, -1
  store i32 %dec, i32* %ilen.addr, align 4
  br label %while.cond.5

while.end:                                        ; preds = %if.then.9, %while.cond.5
  %19 = load i32, i32* %ilen.addr, align 4
  %20 = load i32, i32* %slen, align 4
  %sub = sub nsw i32 %20, %19
  store i32 %sub, i32* %slen, align 4
  %21 = load i32, i32* %slen, align 4
  %tobool10 = icmp ne i32 %21, 0
  br i1 %tobool10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %while.end
  %22 = load %struct.win*, %struct.win** @fore, align 8
  call void @DoProcess(%struct.win* %22, i8** %ibuf.addr, i32* %slen, %struct.paster* null)
  br label %if.end.12

if.end.12:                                        ; preds = %if.then.11, %while.end
  %23 = load i32, i32* %ilen.addr, align 4
  %dec13 = add nsw i32 %23, -1
  store i32 %dec13, i32* %ilen.addr, align 4
  %cmp14 = icmp eq i32 %dec13, 0
  br i1 %cmp14, label %if.then.16, label %if.end.18

if.then.16:                                       ; preds = %if.end.12
  %24 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen17 = getelementptr inbounds %struct.display, %struct.display* %24, i32 0, i32 56
  store %struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0), %struct.action** %d_ESCseen17, align 8
  %25 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %25, i32 69)
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.16, %if.end.12
  br label %if.end.19

if.end.19:                                        ; preds = %if.end.18, %do.end.3
  %26 = load i32, i32* %ilen.addr, align 4
  %cmp20 = icmp sle i32 %26, 0
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %if.end.19
  br label %while.end.49

if.end.23:                                        ; preds = %if.end.19
  %27 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen24 = getelementptr inbounds %struct.display, %struct.display* %27, i32 0, i32 56
  %28 = load %struct.action*, %struct.action** %d_ESCseen24, align 8
  %tobool25 = icmp ne %struct.action* %28, null
  br i1 %tobool25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.23
  %29 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen26 = getelementptr inbounds %struct.display, %struct.display* %29, i32 0, i32 56
  %30 = load %struct.action*, %struct.action** %d_ESCseen26, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end.23
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.action* [ %30, %cond.true ], [ getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0), %cond.false ]
  store %struct.action* %cond, %struct.action** %ktabp, align 8
  %31 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen27 = getelementptr inbounds %struct.display, %struct.display* %31, i32 0, i32 56
  %32 = load %struct.action*, %struct.action** %d_ESCseen27, align 8
  %tobool28 = icmp ne %struct.action* %32, null
  br i1 %tobool28, label %if.then.29, label %if.end.31

if.then.29:                                       ; preds = %cond.end
  %33 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen30 = getelementptr inbounds %struct.display, %struct.display* %33, i32 0, i32 56
  store %struct.action* null, %struct.action** %d_ESCseen30, align 8
  %34 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %34, i32 69)
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.29, %cond.end
  %35 = load i8*, i8** %s, align 8
  %36 = load i8, i8* %35, align 1
  %conv32 = zext i8 %36 to i32
  store i32 %conv32, i32* %ch, align 4
  %37 = load i32, i32* %ch, align 4
  %38 = load %struct.display*, %struct.display** @display, align 8
  %d_user33 = getelementptr inbounds %struct.display, %struct.display* %38, i32 0, i32 1
  %39 = load %struct.acluser*, %struct.acluser** %d_user33, align 8
  %u_Esc34 = getelementptr inbounds %struct.acluser, %struct.acluser* %39, i32 0, i32 6
  %40 = load i32, i32* %u_Esc34, align 4
  %cmp35 = icmp eq i32 %37, %40
  br i1 %cmp35, label %if.then.37, label %if.else

if.then.37:                                       ; preds = %if.end.31
  %41 = load i32, i32* @DefaultEsc, align 4
  store i32 %41, i32* %ch, align 4
  br label %if.end.43

if.else:                                          ; preds = %if.end.31
  %42 = load i32, i32* %ch, align 4
  %43 = load %struct.display*, %struct.display** @display, align 8
  %d_user38 = getelementptr inbounds %struct.display, %struct.display* %43, i32 0, i32 1
  %44 = load %struct.acluser*, %struct.acluser** %d_user38, align 8
  %u_MetaEsc = getelementptr inbounds %struct.acluser, %struct.acluser* %44, i32 0, i32 7
  %45 = load i32, i32* %u_MetaEsc, align 4
  %cmp39 = icmp eq i32 %42, %45
  br i1 %cmp39, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %if.else
  %46 = load i32, i32* @DefaultMetaEsc, align 4
  store i32 %46, i32* %ch, align 4
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.41, %if.else
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.then.37
  %47 = load i32, i32* %ch, align 4
  %cmp44 = icmp sge i32 %47, 0
  br i1 %cmp44, label %if.then.46, label %if.end.47

if.then.46:                                       ; preds = %if.end.43
  %48 = load i32, i32* %ch, align 4
  %idxprom = sext i32 %48 to i64
  %49 = load %struct.action*, %struct.action** %ktabp, align 8
  %arrayidx = getelementptr inbounds %struct.action, %struct.action* %49, i64 %idxprom
  %50 = load i32, i32* %ch, align 4
  call void @DoAction(%struct.action* %arrayidx, i32 %50)
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.46, %if.end.43
  %51 = load i8*, i8** %s, align 8
  %add.ptr = getelementptr inbounds i8, i8* %51, i64 1
  store i8* %add.ptr, i8** %ibuf.addr, align 8
  %52 = load i32, i32* %ilen.addr, align 4
  %dec48 = add nsw i32 %52, -1
  store i32 %dec48, i32* %ilen.addr, align 4
  br label %while.cond

while.end.49:                                     ; preds = %if.then.22, %land.end
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @bcmp(i8*, i8*, i64) #3

declare void @SetTimeout(%struct.event*, i32) #2

declare void @evenq(%struct.event*) #2

; Function Attrs: nounwind uwtable
define void @DoProcess(%struct.win* %p, i8** %bufp, i32* %lenp, %struct.paster* %pa) #0 {
entry:
  %p.addr = alloca %struct.win*, align 8
  %bufp.addr = alloca i8**, align 8
  %lenp.addr = alloca i32*, align 8
  %pa.addr = alloca %struct.paster*, align 8
  %oldlen = alloca i32, align 4
  %d = alloca %struct.display*, align 8
  store %struct.win* %p, %struct.win** %p.addr, align 8
  store i8** %bufp, i8*** %bufp.addr, align 8
  store i32* %lenp, i32** %lenp.addr, align 8
  store %struct.paster* %pa, %struct.paster** %pa.addr, align 8
  %0 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %0, %struct.display** %d, align 8
  %1 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  %tobool = icmp ne %struct.paster* %1, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32*, i32** %lenp.addr, align 8
  %3 = load i32, i32* %2, align 4
  %cmp = icmp sgt i32 %3, 1
  br i1 %cmp, label %land.lhs.true.1, label %if.end

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %4 = load %struct.win*, %struct.win** %p.addr, align 8
  %tobool2 = icmp ne %struct.win* %4, null
  br i1 %tobool2, label %land.lhs.true.3, label %if.end

land.lhs.true.3:                                  ; preds = %land.lhs.true.1
  %5 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_slowpaste = getelementptr inbounds %struct.win, %struct.win* %5, i32 0, i32 76
  %6 = load i32, i32* %w_slowpaste, align 4
  %tobool4 = icmp ne i32 %6, 0
  br i1 %tobool4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.3
  %7 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_paster = getelementptr inbounds %struct.win, %struct.win* %7, i32 0, i32 80
  %pa_slowev = getelementptr inbounds %struct.paster, %struct.paster* %w_paster, i32 0, i32 4
  %8 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_slowpaste5 = getelementptr inbounds %struct.win, %struct.win* %8, i32 0, i32 76
  %9 = load i32, i32* %w_slowpaste5, align 4
  call void @SetTimeout(%struct.event* %pa_slowev, i32 %9)
  %10 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_paster6 = getelementptr inbounds %struct.win, %struct.win* %10, i32 0, i32 80
  %pa_slowev7 = getelementptr inbounds %struct.paster, %struct.paster* %w_paster6, i32 0, i32 4
  call void @evenq(%struct.event* %pa_slowev7)
  br label %if.end.42

if.end:                                           ; preds = %land.lhs.true.3, %land.lhs.true.1, %land.lhs.true, %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end.34, %if.end
  %11 = load %struct.layer*, %struct.layer** @flayer, align 8
  %tobool8 = icmp ne %struct.layer* %11, null
  br i1 %tobool8, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %12 = load i32*, i32** %lenp.addr, align 8
  %13 = load i32, i32* %12, align 4
  %tobool9 = icmp ne i32 %13, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool9, %land.rhs ]
  br i1 %14, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %15 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  %tobool10 = icmp ne %struct.paster* %15, null
  br i1 %tobool10, label %if.end.20, label %land.lhs.true.11

land.lhs.true.11:                                 ; preds = %while.body
  %16 = load %struct.win*, %struct.win** %p.addr, align 8
  %tobool12 = icmp ne %struct.win* %16, null
  br i1 %tobool12, label %land.lhs.true.13, label %if.end.20

land.lhs.true.13:                                 ; preds = %land.lhs.true.11
  %17 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_paster14 = getelementptr inbounds %struct.win, %struct.win* %17, i32 0, i32 80
  %pa_pastelen = getelementptr inbounds %struct.paster, %struct.paster* %w_paster14, i32 0, i32 2
  %18 = load i32, i32* %pa_pastelen, align 4
  %tobool15 = icmp ne i32 %18, 0
  br i1 %tobool15, label %land.lhs.true.16, label %if.end.20

land.lhs.true.16:                                 ; preds = %land.lhs.true.13
  %19 = load %struct.layer*, %struct.layer** @flayer, align 8
  %20 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_paster17 = getelementptr inbounds %struct.win, %struct.win* %20, i32 0, i32 80
  %pa_pastelayer = getelementptr inbounds %struct.paster, %struct.paster* %w_paster17, i32 0, i32 3
  %21 = load %struct.layer*, %struct.layer** %pa_pastelayer, align 8
  %cmp18 = icmp eq %struct.layer* %19, %21
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %land.lhs.true.16
  br label %do.body

do.body:                                          ; preds = %if.then.19
  br label %do.end

do.end:                                           ; preds = %do.body
  %22 = load %struct.win*, %struct.win** %p.addr, align 8
  %23 = load i32, i32* @visual_bell, align 4
  call void @WBell(%struct.win* %22, i32 %23)
  %24 = load i32*, i32** %lenp.addr, align 8
  %25 = load i32, i32* %24, align 4
  %26 = load i8**, i8*** %bufp.addr, align 8
  %27 = load i8*, i8** %26, align 8
  %idx.ext = sext i32 %25 to i64
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 %idx.ext
  store i8* %add.ptr, i8** %26, align 8
  %28 = load i32*, i32** %lenp.addr, align 8
  store i32 0, i32* %28, align 4
  %29 = load %struct.display*, %struct.display** %d, align 8
  store %struct.display* %29, %struct.display** @display, align 8
  br label %if.end.42

if.end.20:                                        ; preds = %land.lhs.true.16, %land.lhs.true.13, %land.lhs.true.11, %while.body
  %30 = load i32*, i32** %lenp.addr, align 8
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %oldlen, align 4
  %32 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn = getelementptr inbounds %struct.layer, %struct.layer* %32, i32 0, i32 6
  %33 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn, align 8
  %lf_LayProcess = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %33, i32 0, i32 0
  %34 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess, align 8
  %35 = load i8**, i8*** %bufp.addr, align 8
  %36 = load i32*, i32** %lenp.addr, align 8
  call void %34(i8** %35, i32* %36)
  %37 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  %tobool21 = icmp ne %struct.paster* %37, null
  br i1 %tobool21, label %land.lhs.true.22, label %if.end.26

land.lhs.true.22:                                 ; preds = %if.end.20
  %38 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  %pa_pastelayer23 = getelementptr inbounds %struct.paster, %struct.paster* %38, i32 0, i32 3
  %39 = load %struct.layer*, %struct.layer** %pa_pastelayer23, align 8
  %tobool24 = icmp ne %struct.layer* %39, null
  br i1 %tobool24, label %if.end.26, label %if.then.25

if.then.25:                                       ; preds = %land.lhs.true.22
  br label %while.end

if.end.26:                                        ; preds = %land.lhs.true.22, %if.end.20
  %40 = load i32*, i32** %lenp.addr, align 8
  %41 = load i32, i32* %40, align 4
  %42 = load i32, i32* %oldlen, align 4
  %cmp27 = icmp eq i32 %41, %42
  br i1 %cmp27, label %if.then.28, label %if.end.34

if.then.28:                                       ; preds = %if.end.26
  %43 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  %tobool29 = icmp ne %struct.paster* %43, null
  br i1 %tobool29, label %if.then.30, label %if.end.31

if.then.30:                                       ; preds = %if.then.28
  %44 = load %struct.display*, %struct.display** %d, align 8
  store %struct.display* %44, %struct.display** @display, align 8
  br label %if.end.42

if.end.31:                                        ; preds = %if.then.28
  br label %do.body.32

do.body.32:                                       ; preds = %if.end.31
  br label %do.end.33

do.end.33:                                        ; preds = %do.body.32
  %45 = load %struct.win*, %struct.win** %p.addr, align 8
  %46 = load i32, i32* @visual_bell, align 4
  call void @WBell(%struct.win* %45, i32 %46)
  br label %while.end

if.end.34:                                        ; preds = %if.end.26
  br label %while.cond

while.end:                                        ; preds = %do.end.33, %if.then.25, %land.end
  %47 = load i32*, i32** %lenp.addr, align 8
  %48 = load i32, i32* %47, align 4
  %49 = load i8**, i8*** %bufp.addr, align 8
  %50 = load i8*, i8** %49, align 8
  %idx.ext35 = sext i32 %48 to i64
  %add.ptr36 = getelementptr inbounds i8, i8* %50, i64 %idx.ext35
  store i8* %add.ptr36, i8** %49, align 8
  %51 = load i32*, i32** %lenp.addr, align 8
  store i32 0, i32* %51, align 4
  %52 = load %struct.display*, %struct.display** %d, align 8
  store %struct.display* %52, %struct.display** @display, align 8
  %53 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  %tobool37 = icmp ne %struct.paster* %53, null
  br i1 %tobool37, label %land.lhs.true.38, label %if.end.42

land.lhs.true.38:                                 ; preds = %while.end
  %54 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  %pa_pastelen39 = getelementptr inbounds %struct.paster, %struct.paster* %54, i32 0, i32 2
  %55 = load i32, i32* %pa_pastelen39, align 4
  %cmp40 = icmp eq i32 %55, 0
  br i1 %cmp40, label %if.then.41, label %if.end.42

if.then.41:                                       ; preds = %land.lhs.true.38
  %56 = load %struct.paster*, %struct.paster** %pa.addr, align 8
  call void @FreePaster(%struct.paster* %56)
  br label %if.end.42

if.end.42:                                        ; preds = %if.then, %do.end, %if.then.30, %if.then.41, %land.lhs.true.38, %while.end
  ret void
}

declare void @WindowChanged(%struct.win*, i32) #2

; Function Attrs: nounwind uwtable
define void @DoAction(%struct.action* %act, i32 %key) #0 {
entry:
  %act.addr = alloca %struct.action*, align 8
  %key.addr = alloca i32, align 4
  %nr = alloca i32, align 4
  %args = alloca i8**, align 8
  %argl = alloca i32*, align 8
  %p = alloca %struct.win*, align 8
  %argc = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %msgok = alloca i32, align 4
  %s = alloca i8*, align 8
  %ch = alloca i8, align 1
  %odisplay = alloca %struct.display*, align 8
  %user = alloca %struct.acluser*, align 8
  %mode = alloca i32, align 4
  %file = alloca i8*, align 8
  %name320 = alloca i8*, align 8
  %i484 = alloca i32, align 4
  %olddisplay = alloca %struct.display*, align 8
  %nd = alloca %struct.display*, align 8
  %u = alloca %struct.acluser*, align 8
  %nd662 = alloca %struct.display*, align 8
  %nw = alloca %struct.win*, align 8
  %ch738 = alloca i32, align 4
  %pp = alloca %struct.plop*, align 8
  %plp = alloca %struct.plop*, align 8
  %ktabp = alloca %struct.action*, align 8
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %what = alloca i32, align 4
  %flag = alloca i32, align 4
  %blank = alloca i32, align 4
  %ktabp2147 = alloca %struct.action*, align 8
  %ss = alloca i8*, align 8
  %dbuf = alloca i8*, align 8
  %dch = alloca i8, align 1
  %l = alloca i32, align 4
  %enc2210 = alloca i32, align 4
  %pp2388 = alloca %struct.plop*, align 8
  %pp2448 = alloca %struct.plop*, align 8
  %oldplop = alloca %struct.plop, align 8
  %enc2488 = alloca i32, align 4
  %l2489 = alloca i32, align 4
  %newbuf = alloca i8*, align 8
  %buf2779 = alloca [1024 x i8], align 16
  %buf3028 = alloca [256 x i8], align 16
  %buf3072 = alloca [256 x i8], align 16
  %olddisplay3286 = alloca %struct.display*, align 8
  %old_use = alloca i32, align 4
  %new_use = alloca i32, align 4
  %buf3316 = alloca [256 x i8], align 16
  %olddisplay3443 = alloca %struct.display*, align 8
  %buf3466 = alloca [256 x i8], align 16
  %old = alloca i32, align 4
  %rel = alloca i32, align 4
  %parse = alloca i32, align 4
  %buf4068 = alloca [4096 x i8], align 16
  %buf4267 = alloca [256 x i8], align 16
  %ktabp4375 = alloca %struct.action*, align 8
  %kflag = alloca i32, align 4
  %newact = alloca %struct.action*, align 8
  %newnr = alloca i32, align 4
  %fl = alloca i32, align 4
  %kf = alloca i32, align 4
  %af = alloca i32, align 4
  %df = alloca i32, align 4
  %mf = alloca i32, align 4
  %odisp = alloca %struct.display*, align 8
  %used = alloca i32, align 4
  %kme = alloca %struct.kmap_ext*, align 8
  %u4945 = alloca %struct.acluser*, align 8
  %g = alloca %struct.aclusergroup*, align 8
  %buf4958 = alloca [256 x i8], align 16
  %p4959 = alloca i8*, align 8
  %ngroups = alloca i32, align 4
  %u4961 = alloca %struct.acluser*, align 8
  %g4962 = alloca %struct.aclusergroup*, align 8
  %err = alloca i8*, align 8
  %t = alloca i32, align 4
  %s5641 = alloca i8*, align 8
  %buf5689 = alloca [256 x i8], align 16
  %buf5727 = alloca [256 x i8], align 16
  %cv = alloca %struct.canvas*, align 8
  %lifespan = alloca i32, align 4
  %tick = alloca i32, align 4
  %path = alloca [4096 x i8], align 16
  %p6488 = alloca i8*, align 8
  %pp6490 = alloca i8**, align 8
  %pp6530 = alloca i8**, align 8
  %olddisplay6547 = alloca %struct.display*, align 8
  %b = alloca [2 x [20 x i8]], align 16
  %t6951 = alloca i8*, align 8
  %lay = alloca %struct.layout*, align 8
  %lay7092 = alloca %struct.layout*, align 8
  %target = alloca %struct.layout*, align 8
  %lay7194 = alloca %struct.layout*, align 8
  %lay7222 = alloca %struct.layout*, align 8
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i32 %key, i32* %key.addr, align 4
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr1 = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 0
  %1 = load i32, i32* %nr1, align 4
  store i32 %1, i32* %nr, align 4
  %2 = load %struct.action*, %struct.action** %act.addr, align 8
  %args2 = getelementptr inbounds %struct.action, %struct.action* %2, i32 0, i32 1
  %3 = load i8**, i8*** %args2, align 8
  store i8** %3, i8*** %args, align 8
  %4 = load %struct.action*, %struct.action** %act.addr, align 8
  %argl3 = getelementptr inbounds %struct.action, %struct.action* %4, i32 0, i32 2
  %5 = load i32*, i32** %argl3, align 8
  store i32* %5, i32** %argl, align 8
  %6 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %6, %struct.display** %odisplay, align 8
  %7 = load %struct.display*, %struct.display** @display, align 8
  %tobool = icmp ne %struct.display* %7, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %8 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %8, i32 0, i32 1
  %9 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %10 = load %struct.acluser*, %struct.acluser** @users, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.acluser* [ %9, %cond.true ], [ %10, %cond.false ]
  store %struct.acluser* %cond, %struct.acluser** %user, align 8
  %11 = load i32, i32* %nr, align 4
  %cmp = icmp eq i32 %11, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  br label %do.body

do.body:                                          ; preds = %if.then
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %if.end.7370

if.end:                                           ; preds = %cond.end
  %12 = load i32, i32* %nr, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %flags = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx, i32 0, i32 1
  %13 = load i32, i32* %flags, align 4
  store i32 %13, i32* %n, align 4
  %14 = load i32, i32* %n, align 4
  %and = and i32 %14, 512
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.end.16, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %15 = load i32, i32* @queryflag, align 4
  %cmp5 = icmp sge i32 %15, 0
  br i1 %cmp5, label %if.then.6, label %if.end.16

if.then.6:                                        ; preds = %land.lhs.true
  %16 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet = getelementptr inbounds %struct.action, %struct.action* %16, i32 0, i32 3
  %17 = load i32, i32* %quiet, align 4
  %tobool7 = icmp ne i32 %17, 0
  br i1 %tobool7, label %cond.false.9, label %cond.true.8

cond.true.8:                                      ; preds = %if.then.6
  br label %cond.end.12

cond.false.9:                                     ; preds = %if.then.6
  %18 = load i32, i32* @queryflag, align 4
  %cmp10 = icmp sge i32 %18, 0
  %cond11 = select i1 %cmp10, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.12

cond.end.12:                                      ; preds = %cond.false.9, %cond.true.8
  %cond13 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.8 ], [ %cond11, %cond.false.9 ]
  %19 = load i32, i32* %nr, align 4
  %idxprom14 = sext i32 %19 to i64
  %arrayidx15 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom14
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx15, i32 0, i32 0
  %20 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) %cond13(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i32 0, i32 0), i8* %20)
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.7370

if.end.16:                                        ; preds = %land.lhs.true, %if.end
  %21 = load i32, i32* %n, align 4
  %and17 = and i32 %21, 128
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %land.lhs.true.19, label %if.end.33

land.lhs.true.19:                                 ; preds = %if.end.16
  %22 = load %struct.display*, %struct.display** @display, align 8
  %cmp20 = icmp eq %struct.display* %22, null
  br i1 %cmp20, label %if.then.21, label %if.end.33

if.then.21:                                       ; preds = %land.lhs.true.19
  %23 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet22 = getelementptr inbounds %struct.action, %struct.action* %23, i32 0, i32 3
  %24 = load i32, i32* %quiet22, align 4
  %tobool23 = icmp ne i32 %24, 0
  br i1 %tobool23, label %cond.false.25, label %cond.true.24

cond.true.24:                                     ; preds = %if.then.21
  br label %cond.end.28

cond.false.25:                                    ; preds = %if.then.21
  %25 = load i32, i32* @queryflag, align 4
  %cmp26 = icmp sge i32 %25, 0
  %cond27 = select i1 %cmp26, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.28

cond.end.28:                                      ; preds = %cond.false.25, %cond.true.24
  %cond29 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.24 ], [ %cond27, %cond.false.25 ]
  %26 = load i8*, i8** @rc_name, align 8
  %27 = load i32, i32* %nr, align 4
  %idxprom30 = sext i32 %27 to i64
  %arrayidx31 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom30
  %name32 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx31, i32 0, i32 0
  %28 = load i8*, i8** %name32, align 8
  call void (i32, i8*, ...) %cond29(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i32 0, i32 0), i8* %26, i8* %28)
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.7370

if.end.33:                                        ; preds = %land.lhs.true.19, %if.end.16
  %29 = load i32, i32* %n, align 4
  %and34 = and i32 %29, 64
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %land.lhs.true.36, label %if.end.50

land.lhs.true.36:                                 ; preds = %if.end.33
  %30 = load %struct.win*, %struct.win** @fore, align 8
  %cmp37 = icmp eq %struct.win* %30, null
  br i1 %cmp37, label %if.then.38, label %if.end.50

if.then.38:                                       ; preds = %land.lhs.true.36
  %31 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet39 = getelementptr inbounds %struct.action, %struct.action* %31, i32 0, i32 3
  %32 = load i32, i32* %quiet39, align 4
  %tobool40 = icmp ne i32 %32, 0
  br i1 %tobool40, label %cond.false.42, label %cond.true.41

cond.true.41:                                     ; preds = %if.then.38
  br label %cond.end.45

cond.false.42:                                    ; preds = %if.then.38
  %33 = load i32, i32* @queryflag, align 4
  %cmp43 = icmp sge i32 %33, 0
  %cond44 = select i1 %cmp43, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.45

cond.end.45:                                      ; preds = %cond.false.42, %cond.true.41
  %cond46 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.41 ], [ %cond44, %cond.false.42 ]
  %34 = load i8*, i8** @rc_name, align 8
  %35 = load i32, i32* %nr, align 4
  %idxprom47 = sext i32 %35 to i64
  %arrayidx48 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom47
  %name49 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx48, i32 0, i32 0
  %36 = load i8*, i8** %name49, align 8
  call void (i32, i8*, ...) %cond46(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0), i8* %34, i8* %36)
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.7370

if.end.50:                                        ; preds = %land.lhs.true.36, %if.end.33
  %37 = load i32, i32* %n, align 4
  %and51 = and i32 %37, 256
  %tobool52 = icmp ne i32 %and51, 0
  br i1 %tobool52, label %land.lhs.true.53, label %if.end.67

land.lhs.true.53:                                 ; preds = %if.end.50
  %38 = load %struct.layer*, %struct.layer** @flayer, align 8
  %cmp54 = icmp eq %struct.layer* %38, null
  br i1 %cmp54, label %if.then.55, label %if.end.67

if.then.55:                                       ; preds = %land.lhs.true.53
  %39 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet56 = getelementptr inbounds %struct.action, %struct.action* %39, i32 0, i32 3
  %40 = load i32, i32* %quiet56, align 4
  %tobool57 = icmp ne i32 %40, 0
  br i1 %tobool57, label %cond.false.59, label %cond.true.58

cond.true.58:                                     ; preds = %if.then.55
  br label %cond.end.62

cond.false.59:                                    ; preds = %if.then.55
  %41 = load i32, i32* @queryflag, align 4
  %cmp60 = icmp sge i32 %41, 0
  %cond61 = select i1 %cmp60, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.62

cond.end.62:                                      ; preds = %cond.false.59, %cond.true.58
  %cond63 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.58 ], [ %cond61, %cond.false.59 ]
  %42 = load i8*, i8** @rc_name, align 8
  %43 = load i32, i32* %nr, align 4
  %idxprom64 = sext i32 %43 to i64
  %arrayidx65 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom64
  %name66 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx65, i32 0, i32 0
  %44 = load i8*, i8** %name66, align 8
  call void (i32, i8*, ...) %cond63(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i32 0, i32 0), i8* %42, i8* %44)
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.7370

if.end.67:                                        ; preds = %land.lhs.true.53, %if.end.50
  %45 = load i32, i32* %nr, align 4
  %46 = load i8**, i8*** %args, align 8
  %call = call i32 @CheckArgNum(i32 %45, i8** %46)
  store i32 %call, i32* %argc, align 4
  %cmp68 = icmp slt i32 %call, 0
  br i1 %cmp68, label %if.then.69, label %if.end.70

if.then.69:                                       ; preds = %if.end.67
  br label %if.end.7370

if.end.70:                                        ; preds = %if.end.67
  %47 = load %struct.display*, %struct.display** @display, align 8
  %tobool71 = icmp ne %struct.display* %47, null
  br i1 %tobool71, label %if.then.72, label %if.end.97

if.then.72:                                       ; preds = %if.end.70
  %48 = load %struct.display*, %struct.display** @display, align 8
  %d_user73 = getelementptr inbounds %struct.display, %struct.display* %48, i32 0, i32 1
  %49 = load %struct.acluser*, %struct.acluser** %d_user73, align 8
  %50 = load i32, i32* %nr, align 4
  %idxprom74 = sext i32 %50 to i64
  %arrayidx75 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom74
  %call76 = call i32 @AclCheckPermCmd(%struct.acluser* %49, i32 0, %struct.comm* %arrayidx75)
  %tobool77 = icmp ne i32 %call76, 0
  br i1 %tobool77, label %if.then.78, label %if.end.96

if.then.78:                                       ; preds = %if.then.72
  %51 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet79 = getelementptr inbounds %struct.action, %struct.action* %51, i32 0, i32 3
  %52 = load i32, i32* %quiet79, align 4
  %tobool80 = icmp ne i32 %52, 0
  br i1 %tobool80, label %cond.false.82, label %cond.true.81

cond.true.81:                                     ; preds = %if.then.78
  br label %cond.end.85

cond.false.82:                                    ; preds = %if.then.78
  %53 = load i32, i32* @queryflag, align 4
  %cmp83 = icmp sge i32 %53, 0
  %cond84 = select i1 %cmp83, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.85

cond.end.85:                                      ; preds = %cond.false.82, %cond.true.81
  %cond86 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.81 ], [ %cond84, %cond.false.82 ]
  %54 = load i8*, i8** @rc_name, align 8
  %55 = load i32, i32* %nr, align 4
  %idxprom87 = sext i32 %55 to i64
  %arrayidx88 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom87
  %name89 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx88, i32 0, i32 0
  %56 = load i8*, i8** %name89, align 8
  %57 = load %struct.acluser*, %struct.acluser** @EffectiveAclUser, align 8
  %tobool90 = icmp ne %struct.acluser* %57, null
  br i1 %tobool90, label %cond.true.91, label %cond.false.92

cond.true.91:                                     ; preds = %cond.end.85
  %58 = load %struct.acluser*, %struct.acluser** @EffectiveAclUser, align 8
  br label %cond.end.94

cond.false.92:                                    ; preds = %cond.end.85
  %59 = load %struct.display*, %struct.display** @display, align 8
  %d_user93 = getelementptr inbounds %struct.display, %struct.display* %59, i32 0, i32 1
  %60 = load %struct.acluser*, %struct.acluser** %d_user93, align 8
  br label %cond.end.94

cond.end.94:                                      ; preds = %cond.false.92, %cond.true.91
  %cond95 = phi %struct.acluser* [ %58, %cond.true.91 ], [ %60, %cond.false.92 ]
  %u_name = getelementptr inbounds %struct.acluser, %struct.acluser* %cond95, i32 0, i32 1
  %arraydecay = getelementptr inbounds [257 x i8], [257 x i8]* %u_name, i32 0, i32 0
  call void (i32, i8*, ...) %cond86(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i32 0, i32 0), i8* %54, i8* %56, i8* %arraydecay)
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.7370

if.end.96:                                        ; preds = %if.then.72
  br label %if.end.97

if.end.97:                                        ; preds = %if.end.96, %if.end.70
  %61 = load %struct.display*, %struct.display** @display, align 8
  %tobool98 = icmp ne %struct.display* %61, null
  br i1 %tobool98, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end.97
  %62 = load i8*, i8** @rc_name, align 8
  %63 = load i8, i8* %62, align 1
  %tobool99 = icmp ne i8 %63, 0
  %lnot = xor i1 %tobool99, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.97
  %64 = phi i1 [ false, %if.end.97 ], [ %lnot, %land.rhs ]
  %land.ext = zext i1 %64 to i32
  store i32 %land.ext, i32* %msgok, align 4
  %65 = load i32, i32* %nr, align 4
  switch i32 %65, label %sw.default.7355 [
    i32 143, label %sw.bb
    i32 41, label %sw.bb.149
    i32 12, label %sw.bb.174
    i32 58, label %sw.bb.195
    i32 118, label %sw.bb.219
    i32 70, label %sw.bb.258
    i32 82, label %sw.bb.259
    i32 52, label %sw.bb.300
    i32 99, label %sw.bb.302
    i32 160, label %sw.bb.306
    i32 115, label %sw.bb.307
    i32 128, label %sw.bb.313
    i32 94, label %sw.bb.319
    i32 131, label %sw.bb.353
    i32 66, label %sw.bb.358
    i32 126, label %sw.bb.366
    i32 40, label %sw.bb.373
    i32 185, label %sw.bb.389
    i32 168, label %sw.bb.483
    i32 186, label %sw.bb.504
    i32 176, label %sw.bb.556
    i32 9, label %sw.bb.569
    i32 133, label %sw.bb.899
    i32 135, label %sw.bb.987
    i32 130, label %sw.bb.1103
    i32 158, label %sw.bb.1123
    i32 134, label %sw.bb.1193
    i32 179, label %sw.bb.1194
    i32 175, label %sw.bb.1200
    i32 165, label %sw.bb.1210
    i32 92, label %sw.bb.1225
    i32 68, label %sw.bb.1226
    i32 35, label %sw.bb.1227
    i32 120, label %sw.bb.1269
    i32 108, label %sw.bb.1284
    i32 184, label %sw.bb.1293
    i32 183, label %sw.bb.1296
    i32 43, label %sw.bb.1299
    i32 22, label %sw.bb.1299
    i32 125, label %sw.bb.1399
    i32 21, label %sw.bb.1399
    i32 98, label %sw.bb.1408
    i32 177, label %sw.bb.1409
    i32 86, label %sw.bb.1409
    i32 166, label %sw.bb.1684
    i32 34, label %sw.bb.1710
    i32 95, label %sw.bb.1721
    i32 141, label %sw.bb.1735
    i32 180, label %sw.bb.1736
    i32 77, label %sw.bb.1756
    i32 65, label %sw.bb.1824
    i32 182, label %sw.bb.1839
    i32 32, label %sw.bb.1884
    i32 139, label %sw.bb.1885
    i32 109, label %sw.bb.1890
    i32 69, label %sw.bb.2033
    i32 178, label %sw.bb.2034
    i32 87, label %sw.bb.2140
    i32 97, label %sw.bb.2167
    i32 38, label %sw.bb.2168
    i32 88, label %sw.bb.2183
    i32 123, label %sw.bb.2209
    i32 181, label %sw.bb.2462
    i32 132, label %sw.bb.2569
    i32 137, label %sw.bb.2649
    i32 91, label %sw.bb.2650
    i32 73, label %sw.bb.2666
    i32 47, label %sw.bb.2698
    i32 30, label %sw.bb.2724
    i32 147, label %sw.bb.2745
    i32 60, label %sw.bb.2745
    i32 84, label %sw.bb.2751
    i32 100, label %sw.bb.2776
    i32 102, label %sw.bb.2839
    i32 148, label %sw.bb.2926
    i32 162, label %sw.bb.2928
    i32 163, label %sw.bb.2928
    i32 164, label %sw.bb.2928
    i32 151, label %sw.bb.2943
    i32 161, label %sw.bb.2944
    i32 71, label %sw.bb.2971
    i32 15, label %sw.bb.3024
    i32 16, label %sw.bb.3024
    i32 23, label %sw.bb.3043
    i32 5, label %sw.bb.3066
    i32 127, label %sw.bb.3068
    i32 101, label %sw.bb.3087
    i32 53, label %sw.bb.3118
    i32 48, label %sw.bb.3132
    i32 64, label %sw.bb.3175
    i32 44, label %sw.bb.3177
    i32 42, label %sw.bb.3179
    i32 49, label %sw.bb.3181
    i32 55, label %sw.bb.3183
    i32 56, label %sw.bb.3192
    i32 110, label %sw.bb.3201
    i32 61, label %sw.bb.3232
    i32 174, label %sw.bb.3241
    i32 85, label %sw.bb.3262
    i32 27, label %sw.bb.3432
    i32 37, label %sw.bb.3501
    i32 7, label %sw.bb.3555
    i32 121, label %sw.bb.3579
    i32 171, label %sw.bb.3583
    i32 173, label %sw.bb.3613
    i32 112, label %sw.bb.3632
    i32 111, label %sw.bb.3651
    i32 150, label %sw.bb.3670
    i32 25, label %sw.bb.3697
    i32 24, label %sw.bb.3707
    i32 33, label %sw.bb.3717
    i32 117, label %sw.bb.3718
    i32 187, label %sw.bb.3785
    i32 154, label %sw.bb.3797
    i32 149, label %sw.bb.3861
    i32 59, label %sw.bb.4019
    i32 142, label %sw.bb.4021
    i32 144, label %sw.bb.4054
    i32 145, label %sw.bb.4144
    i32 169, label %sw.bb.4158
    i32 62, label %sw.bb.4160
    i32 152, label %sw.bb.4162
    i32 106, label %sw.bb.4203
    i32 124, label %sw.bb.4219
    i32 39, label %sw.bb.4238
    i32 36, label %sw.bb.4240
    i32 114, label %sw.bb.4259
    i32 83, label %sw.bb.4261
    i32 172, label %sw.bb.4263
    i32 54, label %sw.bb.4284
    i32 11, label %sw.bb.4317
    i32 157, label %sw.bb.4319
    i32 122, label %sw.bb.4321
    i32 17, label %sw.bb.4374
    i32 18, label %sw.bb.4492
    i32 105, label %sw.bb.4857
    i32 104, label %sw.bb.4893
    i32 103, label %sw.bb.4894
    i32 1, label %sw.bb.4895
    i32 0, label %sw.bb.4895
    i32 6, label %sw.bb.4895
    i32 28, label %sw.bb.4895
    i32 2, label %sw.bb.4897
    i32 3, label %sw.bb.4916
    i32 4, label %sw.bb.5025
    i32 167, label %sw.bb.5025
    i32 113, label %sw.bb.5050
    i32 75, label %sw.bb.5072
    i32 116, label %sw.bb.5074
    i32 57, label %sw.bb.5163
    i32 80, label %sw.bb.5211
    i32 26, label %sw.bb.5246
    i32 14, label %sw.bb.5266
    i32 93, label %sw.bb.5286
    i32 72, label %sw.bb.5286
    i32 51, label %sw.bb.5413
    i32 46, label %sw.bb.5413
    i32 63, label %sw.bb.5428
    i32 170, label %sw.bb.5452
    i32 129, label %sw.bb.5539
    i32 67, label %sw.bb.5578
    i32 50, label %sw.bb.5685
    i32 89, label %sw.bb.5713
    i32 45, label %sw.bb.5723
    i32 29, label %sw.bb.5723
    i32 10, label %sw.bb.5831
    i32 138, label %sw.bb.5981
    i32 153, label %sw.bb.6030
    i32 155, label %sw.bb.6056
    i32 159, label %sw.bb.6057
    i32 156, label %sw.bb.6109
    i32 136, label %sw.bb.6120
    i32 119, label %sw.bb.6121
    i32 76, label %sw.bb.6122
    i32 78, label %sw.bb.6146
    i32 140, label %sw.bb.6254
    i32 146, label %sw.bb.6331
    i32 74, label %sw.bb.6333
    i32 8, label %sw.bb.6357
    i32 107, label %sw.bb.6373
    i32 13, label %sw.bb.6443
    i32 19, label %sw.bb.6478
    i32 20, label %sw.bb.6482
    i32 90, label %sw.bb.6544
    i32 79, label %sw.bb.6624
    i32 81, label %sw.bb.6700
    i32 96, label %sw.bb.6754
    i32 31, label %sw.bb.7335
  ]

sw.bb:                                            ; preds = %land.end
  %66 = load i8**, i8*** %args, align 8
  %67 = load i8*, i8** %66, align 8
  %tobool100 = icmp ne i8* %67, null
  br i1 %tobool100, label %if.else, label %if.then.101

if.then.101:                                      ; preds = %sw.bb
  call void @InputSelect()
  br label %if.end.148

if.else:                                          ; preds = %sw.bb
  %68 = load i8**, i8*** %args, align 8
  %arrayidx102 = getelementptr inbounds i8*, i8** %68, i64 0
  %69 = load i8*, i8** %arrayidx102, align 8
  %arrayidx103 = getelementptr inbounds i8, i8* %69, i64 0
  %70 = load i8, i8* %arrayidx103, align 1
  %conv = sext i8 %70 to i32
  %cmp104 = icmp eq i32 %conv, 45
  br i1 %cmp104, label %land.lhs.true.106, label %if.else.111

land.lhs.true.106:                                ; preds = %if.else
  %71 = load i8**, i8*** %args, align 8
  %arrayidx107 = getelementptr inbounds i8*, i8** %71, i64 0
  %72 = load i8*, i8** %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i8, i8* %72, i64 1
  %73 = load i8, i8* %arrayidx108, align 1
  %tobool109 = icmp ne i8 %73, 0
  br i1 %tobool109, label %if.else.111, label %if.then.110

if.then.110:                                      ; preds = %land.lhs.true.106
  call void @SetForeWindow(%struct.win* null)
  call void @Activate(i32 0)
  br label %if.end.147

if.else.111:                                      ; preds = %land.lhs.true.106, %if.else
  %74 = load i8**, i8*** %args, align 8
  %arrayidx112 = getelementptr inbounds i8*, i8** %74, i64 0
  %75 = load i8*, i8** %arrayidx112, align 8
  %arrayidx113 = getelementptr inbounds i8, i8* %75, i64 0
  %76 = load i8, i8* %arrayidx113, align 1
  %conv114 = sext i8 %76 to i32
  %cmp115 = icmp eq i32 %conv114, 46
  br i1 %cmp115, label %land.lhs.true.117, label %if.else.135

land.lhs.true.117:                                ; preds = %if.else.111
  %77 = load i8**, i8*** %args, align 8
  %arrayidx118 = getelementptr inbounds i8*, i8** %77, i64 0
  %78 = load i8*, i8** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds i8, i8* %78, i64 1
  %79 = load i8, i8* %arrayidx119, align 1
  %tobool120 = icmp ne i8 %79, 0
  br i1 %tobool120, label %if.else.135, label %if.then.121

if.then.121:                                      ; preds = %land.lhs.true.117
  %80 = load %struct.win*, %struct.win** @fore, align 8
  %tobool122 = icmp ne %struct.win* %80, null
  br i1 %tobool122, label %if.else.133, label %if.then.123

if.then.123:                                      ; preds = %if.then.121
  %81 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet124 = getelementptr inbounds %struct.action, %struct.action* %81, i32 0, i32 3
  %82 = load i32, i32* %quiet124, align 4
  %tobool125 = icmp ne i32 %82, 0
  br i1 %tobool125, label %cond.false.127, label %cond.true.126

cond.true.126:                                    ; preds = %if.then.123
  br label %cond.end.131

cond.false.127:                                   ; preds = %if.then.123
  %83 = load i32, i32* @queryflag, align 4
  %cmp128 = icmp sge i32 %83, 0
  %cond130 = select i1 %cmp128, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.131

cond.end.131:                                     ; preds = %cond.false.127, %cond.true.126
  %cond132 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.126 ], [ %cond130, %cond.false.127 ]
  call void (i32, i8*, ...) %cond132(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i32 0, i32 0))
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.134

if.else.133:                                      ; preds = %if.then.121
  %84 = load %struct.win*, %struct.win** @fore, align 8
  call void @SetForeWindow(%struct.win* %84)
  call void @Activate(i32 0)
  br label %if.end.134

if.end.134:                                       ; preds = %if.else.133, %cond.end.131
  br label %if.end.146

if.else.135:                                      ; preds = %land.lhs.true.117, %if.else.111
  %85 = load %struct.action*, %struct.action** %act.addr, align 8
  %call136 = call i32 @ParseWinNum(%struct.action* %85, i32* %n)
  %cmp137 = icmp eq i32 %call136, 0
  br i1 %cmp137, label %if.then.139, label %if.else.140

if.then.139:                                      ; preds = %if.else.135
  %86 = load i32, i32* %n, align 4
  call void @SwitchWindow(i32 %86)
  br label %if.end.145

if.else.140:                                      ; preds = %if.else.135
  %87 = load i32, i32* @queryflag, align 4
  %cmp141 = icmp sge i32 %87, 0
  br i1 %cmp141, label %if.then.143, label %if.end.144

if.then.143:                                      ; preds = %if.else.140
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.144

if.end.144:                                       ; preds = %if.then.143, %if.else.140
  br label %if.end.145

if.end.145:                                       ; preds = %if.end.144, %if.then.139
  br label %if.end.146

if.end.146:                                       ; preds = %if.end.145, %if.end.134
  br label %if.end.147

if.end.147:                                       ; preds = %if.end.146, %if.then.110
  br label %if.end.148

if.end.148:                                       ; preds = %if.end.147, %if.then.101
  br label %sw.epilog.7356

sw.bb.149:                                        ; preds = %land.end
  %88 = load %struct.action*, %struct.action** %act.addr, align 8
  %call150 = call i32 @ParseOnOff(%struct.action* %88, i32* @defautonuke)
  %cmp151 = icmp eq i32 %call150, 0
  br i1 %cmp151, label %land.lhs.true.153, label %if.end.167

land.lhs.true.153:                                ; preds = %sw.bb.149
  %89 = load i32, i32* %msgok, align 4
  %tobool154 = icmp ne i32 %89, 0
  br i1 %tobool154, label %if.then.155, label %if.end.167

if.then.155:                                      ; preds = %land.lhs.true.153
  %90 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet156 = getelementptr inbounds %struct.action, %struct.action* %90, i32 0, i32 3
  %91 = load i32, i32* %quiet156, align 4
  %tobool157 = icmp ne i32 %91, 0
  br i1 %tobool157, label %cond.false.159, label %cond.true.158

cond.true.158:                                    ; preds = %if.then.155
  br label %cond.end.163

cond.false.159:                                   ; preds = %if.then.155
  %92 = load i32, i32* @queryflag, align 4
  %cmp160 = icmp sge i32 %92, 0
  %cond162 = select i1 %cmp160, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.163

cond.end.163:                                     ; preds = %cond.false.159, %cond.true.158
  %cond164 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.158 ], [ %cond162, %cond.false.159 ]
  %93 = load i32, i32* @defautonuke, align 4
  %tobool165 = icmp ne i32 %93, 0
  %cond166 = select i1 %tobool165, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)
  call void (i32, i8*, ...) %cond164(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i32 0, i32 0), i8* %cond166)
  br label %if.end.167

if.end.167:                                       ; preds = %cond.end.163, %land.lhs.true.153, %sw.bb.149
  %94 = load %struct.display*, %struct.display** @display, align 8
  %tobool168 = icmp ne %struct.display* %94, null
  br i1 %tobool168, label %land.lhs.true.169, label %if.end.173

land.lhs.true.169:                                ; preds = %if.end.167
  %95 = load i8*, i8** @rc_name, align 8
  %96 = load i8, i8* %95, align 1
  %conv170 = sext i8 %96 to i32
  %tobool171 = icmp ne i32 %conv170, 0
  br i1 %tobool171, label %if.then.172, label %if.end.173

if.then.172:                                      ; preds = %land.lhs.true.169
  %97 = load i32, i32* @defautonuke, align 4
  %98 = load %struct.display*, %struct.display** @display, align 8
  %d_auto_nuke = getelementptr inbounds %struct.display, %struct.display* %98, i32 0, i32 73
  store i32 %97, i32* %d_auto_nuke, align 4
  br label %if.end.173

if.end.173:                                       ; preds = %if.then.172, %land.lhs.true.169, %if.end.167
  br label %sw.epilog.7356

sw.bb.174:                                        ; preds = %land.end
  %99 = load %struct.action*, %struct.action** %act.addr, align 8
  %100 = load %struct.display*, %struct.display** @display, align 8
  %d_auto_nuke175 = getelementptr inbounds %struct.display, %struct.display* %100, i32 0, i32 73
  %call176 = call i32 @ParseOnOff(%struct.action* %99, i32* %d_auto_nuke175)
  %cmp177 = icmp eq i32 %call176, 0
  br i1 %cmp177, label %land.lhs.true.179, label %if.end.194

land.lhs.true.179:                                ; preds = %sw.bb.174
  %101 = load i32, i32* %msgok, align 4
  %tobool180 = icmp ne i32 %101, 0
  br i1 %tobool180, label %if.then.181, label %if.end.194

if.then.181:                                      ; preds = %land.lhs.true.179
  %102 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet182 = getelementptr inbounds %struct.action, %struct.action* %102, i32 0, i32 3
  %103 = load i32, i32* %quiet182, align 4
  %tobool183 = icmp ne i32 %103, 0
  br i1 %tobool183, label %cond.false.185, label %cond.true.184

cond.true.184:                                    ; preds = %if.then.181
  br label %cond.end.189

cond.false.185:                                   ; preds = %if.then.181
  %104 = load i32, i32* @queryflag, align 4
  %cmp186 = icmp sge i32 %104, 0
  %cond188 = select i1 %cmp186, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.189

cond.end.189:                                     ; preds = %cond.false.185, %cond.true.184
  %cond190 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.184 ], [ %cond188, %cond.false.185 ]
  %105 = load %struct.display*, %struct.display** @display, align 8
  %d_auto_nuke191 = getelementptr inbounds %struct.display, %struct.display* %105, i32 0, i32 73
  %106 = load i32, i32* %d_auto_nuke191, align 4
  %tobool192 = icmp ne i32 %106, 0
  %cond193 = select i1 %tobool192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)
  call void (i32, i8*, ...) %cond190(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0), i8* %cond193)
  br label %if.end.194

if.end.194:                                       ; preds = %cond.end.189, %land.lhs.true.179, %sw.bb.174
  br label %sw.epilog.7356

sw.bb.195:                                        ; preds = %land.end
  %107 = load %struct.action*, %struct.action** %act.addr, align 8
  %call196 = call i32 @ParseNum(%struct.action* %107, i32* @defobuflimit)
  %cmp197 = icmp eq i32 %call196, 0
  br i1 %cmp197, label %land.lhs.true.199, label %if.end.211

land.lhs.true.199:                                ; preds = %sw.bb.195
  %108 = load i32, i32* %msgok, align 4
  %tobool200 = icmp ne i32 %108, 0
  br i1 %tobool200, label %if.then.201, label %if.end.211

if.then.201:                                      ; preds = %land.lhs.true.199
  %109 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet202 = getelementptr inbounds %struct.action, %struct.action* %109, i32 0, i32 3
  %110 = load i32, i32* %quiet202, align 4
  %tobool203 = icmp ne i32 %110, 0
  br i1 %tobool203, label %cond.false.205, label %cond.true.204

cond.true.204:                                    ; preds = %if.then.201
  br label %cond.end.209

cond.false.205:                                   ; preds = %if.then.201
  %111 = load i32, i32* @queryflag, align 4
  %cmp206 = icmp sge i32 %111, 0
  %cond208 = select i1 %cmp206, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.209

cond.end.209:                                     ; preds = %cond.false.205, %cond.true.204
  %cond210 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.204 ], [ %cond208, %cond.false.205 ]
  %112 = load i32, i32* @defobuflimit, align 4
  call void (i32, i8*, ...) %cond210(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i32 0, i32 0), i32 %112)
  br label %if.end.211

if.end.211:                                       ; preds = %cond.end.209, %land.lhs.true.199, %sw.bb.195
  %113 = load %struct.display*, %struct.display** @display, align 8
  %tobool212 = icmp ne %struct.display* %113, null
  br i1 %tobool212, label %land.lhs.true.213, label %if.end.218

land.lhs.true.213:                                ; preds = %if.end.211
  %114 = load i8*, i8** @rc_name, align 8
  %115 = load i8, i8* %114, align 1
  %conv214 = sext i8 %115 to i32
  %tobool215 = icmp ne i32 %conv214, 0
  br i1 %tobool215, label %if.then.216, label %if.end.218

if.then.216:                                      ; preds = %land.lhs.true.213
  %116 = load i32, i32* @defobuflimit, align 4
  %117 = load %struct.display*, %struct.display** @display, align 8
  %d_obufmax = getelementptr inbounds %struct.display, %struct.display* %117, i32 0, i32 69
  store i32 %116, i32* %d_obufmax, align 4
  %118 = load %struct.display*, %struct.display** @display, align 8
  %d_obuflen = getelementptr inbounds %struct.display, %struct.display* %118, i32 0, i32 68
  %119 = load i32, i32* %d_obuflen, align 4
  %120 = load %struct.display*, %struct.display** @display, align 8
  %d_obufmax217 = getelementptr inbounds %struct.display, %struct.display* %120, i32 0, i32 69
  %121 = load i32, i32* %d_obufmax217, align 4
  %sub = sub nsw i32 %119, %121
  %122 = load %struct.display*, %struct.display** @display, align 8
  %d_obuflenmax = getelementptr inbounds %struct.display, %struct.display* %122, i32 0, i32 70
  store i32 %sub, i32* %d_obuflenmax, align 4
  br label %if.end.218

if.end.218:                                       ; preds = %if.then.216, %land.lhs.true.213, %if.end.211
  br label %sw.epilog.7356

sw.bb.219:                                        ; preds = %land.end
  %123 = load i8**, i8*** %args, align 8
  %124 = load i8*, i8** %123, align 8
  %cmp220 = icmp eq i8* %124, null
  br i1 %cmp220, label %if.then.222, label %if.else.234

if.then.222:                                      ; preds = %sw.bb.219
  %125 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet223 = getelementptr inbounds %struct.action, %struct.action* %125, i32 0, i32 3
  %126 = load i32, i32* %quiet223, align 4
  %tobool224 = icmp ne i32 %126, 0
  br i1 %tobool224, label %cond.false.226, label %cond.true.225

cond.true.225:                                    ; preds = %if.then.222
  br label %cond.end.230

cond.false.226:                                   ; preds = %if.then.222
  %127 = load i32, i32* @queryflag, align 4
  %cmp227 = icmp sge i32 %127, 0
  %cond229 = select i1 %cmp227, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.230

cond.end.230:                                     ; preds = %cond.false.226, %cond.true.225
  %cond231 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.225 ], [ %cond229, %cond.false.226 ]
  %128 = load %struct.display*, %struct.display** @display, align 8
  %d_obufmax232 = getelementptr inbounds %struct.display, %struct.display* %128, i32 0, i32 69
  %129 = load i32, i32* %d_obufmax232, align 4
  %130 = load %struct.display*, %struct.display** @display, align 8
  %d_obuflen233 = getelementptr inbounds %struct.display, %struct.display* %130, i32 0, i32 68
  %131 = load i32, i32* %d_obuflen233, align 4
  call void (i32, i8*, ...) %cond231(i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i32 0, i32 0), i32 %129, i32 %131)
  br label %if.end.253

if.else.234:                                      ; preds = %sw.bb.219
  %132 = load %struct.action*, %struct.action** %act.addr, align 8
  %133 = load %struct.display*, %struct.display** @display, align 8
  %d_obufmax235 = getelementptr inbounds %struct.display, %struct.display* %133, i32 0, i32 69
  %call236 = call i32 @ParseNum(%struct.action* %132, i32* %d_obufmax235)
  %cmp237 = icmp eq i32 %call236, 0
  br i1 %cmp237, label %land.lhs.true.239, label %if.end.252

land.lhs.true.239:                                ; preds = %if.else.234
  %134 = load i32, i32* %msgok, align 4
  %tobool240 = icmp ne i32 %134, 0
  br i1 %tobool240, label %if.then.241, label %if.end.252

if.then.241:                                      ; preds = %land.lhs.true.239
  %135 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet242 = getelementptr inbounds %struct.action, %struct.action* %135, i32 0, i32 3
  %136 = load i32, i32* %quiet242, align 4
  %tobool243 = icmp ne i32 %136, 0
  br i1 %tobool243, label %cond.false.245, label %cond.true.244

cond.true.244:                                    ; preds = %if.then.241
  br label %cond.end.249

cond.false.245:                                   ; preds = %if.then.241
  %137 = load i32, i32* @queryflag, align 4
  %cmp246 = icmp sge i32 %137, 0
  %cond248 = select i1 %cmp246, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.249

cond.end.249:                                     ; preds = %cond.false.245, %cond.true.244
  %cond250 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.244 ], [ %cond248, %cond.false.245 ]
  %138 = load %struct.display*, %struct.display** @display, align 8
  %d_obufmax251 = getelementptr inbounds %struct.display, %struct.display* %138, i32 0, i32 69
  %139 = load i32, i32* %d_obufmax251, align 4
  call void (i32, i8*, ...) %cond250(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), i32 %139)
  br label %if.end.252

if.end.252:                                       ; preds = %cond.end.249, %land.lhs.true.239, %if.else.234
  br label %if.end.253

if.end.253:                                       ; preds = %if.end.252, %cond.end.230
  %140 = load %struct.display*, %struct.display** @display, align 8
  %d_obuflen254 = getelementptr inbounds %struct.display, %struct.display* %140, i32 0, i32 68
  %141 = load i32, i32* %d_obuflen254, align 4
  %142 = load %struct.display*, %struct.display** @display, align 8
  %d_obufmax255 = getelementptr inbounds %struct.display, %struct.display* %142, i32 0, i32 69
  %143 = load i32, i32* %d_obufmax255, align 4
  %sub256 = sub nsw i32 %141, %143
  %144 = load %struct.display*, %struct.display** @display, align 8
  %d_obuflenmax257 = getelementptr inbounds %struct.display, %struct.display* %144, i32 0, i32 70
  store i32 %sub256, i32* %d_obuflenmax257, align 4
  br label %sw.epilog.7356

sw.bb.258:                                        ; preds = %land.end
  %145 = load %struct.acluser*, %struct.acluser** %user, align 8
  call void @WriteFile(%struct.acluser* %145, i8* null, i32 0)
  br label %sw.epilog.7356

sw.bb.259:                                        ; preds = %land.end
  store i32 1, i32* %mode, align 4
  store i8* null, i8** %file, align 8
  %146 = load i8**, i8*** %args, align 8
  %arrayidx260 = getelementptr inbounds i8*, i8** %146, i64 0
  %147 = load i8*, i8** %arrayidx260, align 8
  %tobool261 = icmp ne i8* %147, null
  br i1 %tobool261, label %if.then.262, label %if.end.279

if.then.262:                                      ; preds = %sw.bb.259
  %148 = load i8**, i8*** %args, align 8
  %149 = load i8*, i8** %148, align 8
  %call263 = call i32 @strcmp(i8* %149, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0)) #8
  %tobool264 = icmp ne i32 %call263, 0
  br i1 %tobool264, label %if.else.267, label %if.then.265

if.then.265:                                      ; preds = %if.then.262
  store i32 3, i32* %mode, align 4
  %150 = load i8**, i8*** %args, align 8
  %arrayidx266 = getelementptr inbounds i8*, i8** %150, i64 1
  %151 = load i8*, i8** %arrayidx266, align 8
  store i8* %151, i8** %file, align 8
  br label %if.end.278

if.else.267:                                      ; preds = %if.then.262
  %152 = load i8**, i8*** %args, align 8
  %153 = load i8*, i8** %152, align 8
  %call268 = call i32 @strcmp(i8* %153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0)) #8
  %tobool269 = icmp ne i32 %call268, 0
  br i1 %tobool269, label %if.else.275, label %land.lhs.true.270

land.lhs.true.270:                                ; preds = %if.else.267
  %154 = load i8**, i8*** %args, align 8
  %arrayidx271 = getelementptr inbounds i8*, i8** %154, i64 1
  %155 = load i8*, i8** %arrayidx271, align 8
  %tobool272 = icmp ne i8* %155, null
  br i1 %tobool272, label %if.then.273, label %if.else.275

if.then.273:                                      ; preds = %land.lhs.true.270
  %156 = load i8**, i8*** %args, align 8
  %arrayidx274 = getelementptr inbounds i8*, i8** %156, i64 1
  %157 = load i8*, i8** %arrayidx274, align 8
  store i8* %157, i8** %file, align 8
  br label %if.end.277

if.else.275:                                      ; preds = %land.lhs.true.270, %if.else.267
  %158 = load i8**, i8*** %args, align 8
  %arrayidx276 = getelementptr inbounds i8*, i8** %158, i64 0
  %159 = load i8*, i8** %arrayidx276, align 8
  store i8* %159, i8** %file, align 8
  br label %if.end.277

if.end.277:                                       ; preds = %if.else.275, %if.then.273
  br label %if.end.278

if.end.278:                                       ; preds = %if.end.277, %if.then.265
  br label %if.end.279

if.end.279:                                       ; preds = %if.end.278, %sw.bb.259
  %160 = load i8**, i8*** %args, align 8
  %arrayidx280 = getelementptr inbounds i8*, i8** %160, i64 0
  %161 = load i8*, i8** %arrayidx280, align 8
  %tobool281 = icmp ne i8* %161, null
  br i1 %tobool281, label %land.lhs.true.282, label %if.end.299

land.lhs.true.282:                                ; preds = %if.end.279
  %162 = load i8*, i8** %file, align 8
  %163 = load i8**, i8*** %args, align 8
  %arrayidx283 = getelementptr inbounds i8*, i8** %163, i64 0
  %164 = load i8*, i8** %arrayidx283, align 8
  %cmp284 = icmp eq i8* %162, %164
  br i1 %cmp284, label %land.lhs.true.286, label %if.end.299

land.lhs.true.286:                                ; preds = %land.lhs.true.282
  %165 = load i8**, i8*** %args, align 8
  %arrayidx287 = getelementptr inbounds i8*, i8** %165, i64 1
  %166 = load i8*, i8** %arrayidx287, align 8
  %tobool288 = icmp ne i8* %166, null
  br i1 %tobool288, label %if.then.289, label %if.end.299

if.then.289:                                      ; preds = %land.lhs.true.286
  %167 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet290 = getelementptr inbounds %struct.action, %struct.action* %167, i32 0, i32 3
  %168 = load i32, i32* %quiet290, align 4
  %tobool291 = icmp ne i32 %168, 0
  br i1 %tobool291, label %cond.false.293, label %cond.true.292

cond.true.292:                                    ; preds = %if.then.289
  br label %cond.end.297

cond.false.293:                                   ; preds = %if.then.289
  %169 = load i32, i32* @queryflag, align 4
  %cmp294 = icmp sge i32 %169, 0
  %cond296 = select i1 %cmp294, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.297

cond.end.297:                                     ; preds = %cond.false.293, %cond.true.292
  %cond298 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.292 ], [ %cond296, %cond.false.293 ]
  %170 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond298(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0), i8* %170)
  br label %sw.epilog.7356

if.end.299:                                       ; preds = %land.lhs.true.286, %land.lhs.true.282, %if.end.279
  %171 = load %struct.acluser*, %struct.acluser** %user, align 8
  %172 = load i8*, i8** %file, align 8
  %173 = load i32, i32* %mode, align 4
  call void @WriteFile(%struct.acluser* %171, i8* %172, i32 %173)
  br label %sw.epilog.7356

sw.bb.300:                                        ; preds = %land.end
  %174 = load %struct.action*, %struct.action** %act.addr, align 8
  %call301 = call i32 @ParseOnOff(%struct.action* %174, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 13))
  br label %sw.epilog.7356

sw.bb.302:                                        ; preds = %land.end
  %175 = load %struct.win*, %struct.win** @fore, align 8
  %w_log = getelementptr inbounds %struct.win, %struct.win* %175, i32 0, i32 68
  %176 = load %struct.logfile*, %struct.logfile** %w_log, align 8
  %tobool303 = icmp ne %struct.logfile* %176, null
  %cond304 = select i1 %tobool303, i32 1, i32 0
  store i32 %cond304, i32* %n, align 4
  %177 = load %struct.action*, %struct.action** %act.addr, align 8
  %call305 = call i32 @ParseSwitch(%struct.action* %177, i32* %n)
  %178 = load i32, i32* %n, align 4
  call void @LogToggle(i32 %178)
  br label %sw.epilog.7356

sw.bb.306:                                        ; preds = %land.end
  call void @Detach(i32 1)
  br label %sw.epilog.7356

sw.bb.307:                                        ; preds = %land.end
  %call308 = call i32 @MoreWindows()
  %tobool309 = icmp ne i32 %call308, 0
  br i1 %tobool309, label %if.then.310, label %if.end.312

if.then.310:                                      ; preds = %sw.bb.307
  %call311 = call i32 @NextWindow()
  call void @SwitchWindow(i32 %call311)
  br label %if.end.312

if.end.312:                                       ; preds = %if.then.310, %sw.bb.307
  br label %sw.epilog.7356

sw.bb.313:                                        ; preds = %land.end
  %call314 = call i32 @MoreWindows()
  %tobool315 = icmp ne i32 %call314, 0
  br i1 %tobool315, label %if.then.316, label %if.end.318

if.then.316:                                      ; preds = %sw.bb.313
  %call317 = call i32 @PreviousWindow()
  call void @SwitchWindow(i32 %call317)
  br label %if.end.318

if.end.318:                                       ; preds = %if.then.316, %sw.bb.313
  br label %sw.epilog.7356

sw.bb.319:                                        ; preds = %land.end
  %179 = load i32, i32* %key.addr, align 4
  %cmp321 = icmp sge i32 %179, 0
  br i1 %cmp321, label %if.then.323, label %if.end.326

if.then.323:                                      ; preds = %sw.bb.319
  %180 = load %struct.win*, %struct.win** @fore, align 8
  %w_pwin = getelementptr inbounds %struct.win, %struct.win* %180, i32 0, i32 6
  %181 = load %struct.pseudowin*, %struct.pseudowin** %w_pwin, align 8
  %tobool324 = icmp ne %struct.pseudowin* %181, null
  %cond325 = select i1 %tobool324, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0)
  call void @Input(i8* %cond325, i32 1, i32 2, void (i8*, i32, i8*)* @confirm_fn, i8* null, i32 94)
  br label %sw.epilog.7356

if.end.326:                                       ; preds = %sw.bb.319
  %182 = load %struct.win*, %struct.win** @fore, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %182, i32 0, i32 9
  %183 = load i32, i32* %w_number, align 4
  store i32 %183, i32* %n, align 4
  %184 = load %struct.win*, %struct.win** @fore, align 8
  %w_pwin327 = getelementptr inbounds %struct.win, %struct.win* %184, i32 0, i32 6
  %185 = load %struct.pseudowin*, %struct.pseudowin** %w_pwin327, align 8
  %tobool328 = icmp ne %struct.pseudowin* %185, null
  br i1 %tobool328, label %if.then.329, label %if.end.339

if.then.329:                                      ; preds = %if.end.326
  %186 = load %struct.win*, %struct.win** @fore, align 8
  call void @FreePseudowin(%struct.win* %186)
  %187 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet330 = getelementptr inbounds %struct.action, %struct.action* %187, i32 0, i32 3
  %188 = load i32, i32* %quiet330, align 4
  %tobool331 = icmp ne i32 %188, 0
  br i1 %tobool331, label %cond.false.333, label %cond.true.332

cond.true.332:                                    ; preds = %if.then.329
  br label %cond.end.337

cond.false.333:                                   ; preds = %if.then.329
  %189 = load i32, i32* @queryflag, align 4
  %cmp334 = icmp sge i32 %189, 0
  %cond336 = select i1 %cmp334, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.337

cond.end.337:                                     ; preds = %cond.false.333, %cond.true.332
  %cond338 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.332 ], [ %cond336, %cond.false.333 ]
  call void (i32, i8*, ...) %cond338(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.339:                                       ; preds = %if.end.326
  %190 = load %struct.win*, %struct.win** @fore, align 8
  %w_title = getelementptr inbounds %struct.win, %struct.win* %190, i32 0, i32 21
  %191 = load i8*, i8** %w_title, align 8
  %call340 = call i8* @SaveStr(i8* %191)
  store i8* %call340, i8** %name320, align 8
  %192 = load %struct.win*, %struct.win** @fore, align 8
  call void @KillWindow(%struct.win* %192)
  %193 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet341 = getelementptr inbounds %struct.action, %struct.action* %193, i32 0, i32 3
  %194 = load i32, i32* %quiet341, align 4
  %tobool342 = icmp ne i32 %194, 0
  br i1 %tobool342, label %cond.false.344, label %cond.true.343

cond.true.343:                                    ; preds = %if.end.339
  br label %cond.end.348

cond.false.344:                                   ; preds = %if.end.339
  %195 = load i32, i32* @queryflag, align 4
  %cmp345 = icmp sge i32 %195, 0
  %cond347 = select i1 %cmp345, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.348

cond.end.348:                                     ; preds = %cond.false.344, %cond.true.343
  %cond349 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.343 ], [ %cond347, %cond.false.344 ]
  %196 = load i32, i32* %n, align 4
  %197 = load i8*, i8** %name320, align 8
  call void (i32, i8*, ...) %cond349(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i32 0, i32 0), i32 %196, i8* %197)
  %198 = load i8*, i8** %name320, align 8
  %tobool350 = icmp ne i8* %198, null
  br i1 %tobool350, label %if.then.351, label %if.end.352

if.then.351:                                      ; preds = %cond.end.348
  %199 = load i8*, i8** %name320, align 8
  call void @free(i8* %199) #4
  br label %if.end.352

if.end.352:                                       ; preds = %if.then.351, %cond.end.348
  br label %sw.epilog.7356

sw.bb.353:                                        ; preds = %land.end
  %200 = load i32, i32* %key.addr, align 4
  %cmp354 = icmp sge i32 %200, 0
  br i1 %cmp354, label %if.then.356, label %if.end.357

if.then.356:                                      ; preds = %sw.bb.353
  call void @Input(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i32 0, i32 0), i32 1, i32 2, void (i8*, i32, i8*)* @confirm_fn, i8* null, i32 131)
  br label %sw.epilog.7356

if.end.357:                                       ; preds = %sw.bb.353
  call void @Finit(i32 0)
  br label %sw.bb.358

sw.bb.358:                                        ; preds = %land.end, %if.end.357
  %201 = load i8**, i8*** %args, align 8
  %202 = load i8*, i8** %201, align 8
  %tobool359 = icmp ne i8* %202, null
  br i1 %tobool359, label %land.lhs.true.360, label %if.else.364

land.lhs.true.360:                                ; preds = %sw.bb.358
  %203 = load i8**, i8*** %args, align 8
  %204 = load i8*, i8** %203, align 8
  %call361 = call i32 @strcmp(i8* %204, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0)) #8
  %tobool362 = icmp ne i32 %call361, 0
  br i1 %tobool362, label %if.else.364, label %if.then.363

if.then.363:                                      ; preds = %land.lhs.true.360
  call void @Hangup()
  br label %if.end.365

if.else.364:                                      ; preds = %land.lhs.true.360, %sw.bb.358
  call void @Detach(i32 0)
  br label %if.end.365

if.end.365:                                       ; preds = %if.else.364, %if.then.363
  br label %sw.epilog.7356

sw.bb.366:                                        ; preds = %land.end
  %205 = load i32, i32* %key.addr, align 4
  %cmp367 = icmp sge i32 %205, 0
  br i1 %cmp367, label %if.then.369, label %if.else.371

if.then.369:                                      ; preds = %sw.bb.366
  %206 = load i32, i32* %key.addr, align 4
  %conv370 = trunc i32 %206 to i8
  store i8 %conv370, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @DoAction.buf, i32 0, i64 0), align 1
  call void @Input(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @DoAction.buf, i32 0, i32 0), i32 1, i32 2, void (i8*, i32, i8*)* @pow_detach_fn, i8* null, i32 0)
  br label %if.end.372

if.else.371:                                      ; preds = %sw.bb.366
  call void @Detach(i32 3)
  br label %if.end.372

if.end.372:                                       ; preds = %if.else.371, %if.then.369
  br label %sw.epilog.7356

sw.bb.373:                                        ; preds = %land.end
  %207 = load i8**, i8*** %args, align 8
  %208 = load i8*, i8** %207, align 8
  %cmp374 = icmp eq i8* %208, null
  br i1 %cmp374, label %if.then.378, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb.373
  %209 = load i8**, i8*** %args, align 8
  %210 = load i8*, i8** %209, align 8
  %call376 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* %210) #8
  %tobool377 = icmp ne i32 %call376, 0
  br i1 %tobool377, label %if.then.378, label %if.end.388

if.then.378:                                      ; preds = %lor.lhs.false, %sw.bb.373
  %211 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet379 = getelementptr inbounds %struct.action, %struct.action* %211, i32 0, i32 3
  %212 = load i32, i32* %quiet379, align 4
  %tobool380 = icmp ne i32 %212, 0
  br i1 %tobool380, label %cond.false.382, label %cond.true.381

cond.true.381:                                    ; preds = %if.then.378
  br label %cond.end.386

cond.false.382:                                   ; preds = %if.then.378
  %213 = load i32, i32* @queryflag, align 4
  %cmp383 = icmp sge i32 %213, 0
  %cond385 = select i1 %cmp383, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.386

cond.end.386:                                     ; preds = %cond.false.382, %cond.true.381
  %cond387 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.381 ], [ %cond385, %cond.false.382 ]
  call void (i32, i8*, ...) %cond387(i32 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27, i32 0, i32 0))
  br label %if.end.388

if.end.388:                                       ; preds = %cond.end.386, %lor.lhs.false
  br label %sw.epilog.7356

sw.bb.389:                                        ; preds = %land.end
  %214 = load i8**, i8*** %args, align 8
  %215 = load i8*, i8** %214, align 8
  %tobool390 = icmp ne i8* %215, null
  br i1 %tobool390, label %land.lhs.true.391, label %if.end.413

land.lhs.true.391:                                ; preds = %sw.bb.389
  %216 = load i8**, i8*** %args, align 8
  %217 = load i8*, i8** %216, align 8
  %call392 = call i32 @strcmp(i8* %217, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0)) #8
  %tobool393 = icmp ne i32 %call392, 0
  br i1 %tobool393, label %if.end.413, label %if.then.394

if.then.394:                                      ; preds = %land.lhs.true.391
  %218 = load i8**, i8*** %args, align 8
  %arrayidx395 = getelementptr inbounds i8*, i8** %218, i64 1
  %219 = load i8*, i8** %arrayidx395, align 8
  %tobool396 = icmp ne i8* %219, null
  br i1 %tobool396, label %if.then.397, label %if.end.400

if.then.397:                                      ; preds = %if.then.394
  %220 = load i8*, i8** @zmodem_sendcmd, align 8
  call void @free(i8* %220) #4
  %221 = load i8**, i8*** %args, align 8
  %arrayidx398 = getelementptr inbounds i8*, i8** %221, i64 1
  %222 = load i8*, i8** %arrayidx398, align 8
  %call399 = call i8* @SaveStr(i8* %222)
  store i8* %call399, i8** @zmodem_sendcmd, align 8
  br label %if.end.400

if.end.400:                                       ; preds = %if.then.397, %if.then.394
  %223 = load i32, i32* %msgok, align 4
  %tobool401 = icmp ne i32 %223, 0
  br i1 %tobool401, label %if.then.402, label %if.end.412

if.then.402:                                      ; preds = %if.end.400
  %224 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet403 = getelementptr inbounds %struct.action, %struct.action* %224, i32 0, i32 3
  %225 = load i32, i32* %quiet403, align 4
  %tobool404 = icmp ne i32 %225, 0
  br i1 %tobool404, label %cond.false.406, label %cond.true.405

cond.true.405:                                    ; preds = %if.then.402
  br label %cond.end.410

cond.false.406:                                   ; preds = %if.then.402
  %226 = load i32, i32* @queryflag, align 4
  %cmp407 = icmp sge i32 %226, 0
  %cond409 = select i1 %cmp407, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.410

cond.end.410:                                     ; preds = %cond.false.406, %cond.true.405
  %cond411 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.405 ], [ %cond409, %cond.false.406 ]
  %227 = load i8*, i8** @zmodem_sendcmd, align 8
  call void (i32, i8*, ...) %cond411(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i32 0, i32 0), i8* %227)
  br label %if.end.412

if.end.412:                                       ; preds = %cond.end.410, %if.end.400
  br label %sw.epilog.7356

if.end.413:                                       ; preds = %land.lhs.true.391, %sw.bb.389
  %228 = load i8**, i8*** %args, align 8
  %229 = load i8*, i8** %228, align 8
  %tobool414 = icmp ne i8* %229, null
  br i1 %tobool414, label %land.lhs.true.415, label %if.end.437

land.lhs.true.415:                                ; preds = %if.end.413
  %230 = load i8**, i8*** %args, align 8
  %231 = load i8*, i8** %230, align 8
  %call416 = call i32 @strcmp(i8* %231, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i32 0, i32 0)) #8
  %tobool417 = icmp ne i32 %call416, 0
  br i1 %tobool417, label %if.end.437, label %if.then.418

if.then.418:                                      ; preds = %land.lhs.true.415
  %232 = load i8**, i8*** %args, align 8
  %arrayidx419 = getelementptr inbounds i8*, i8** %232, i64 1
  %233 = load i8*, i8** %arrayidx419, align 8
  %tobool420 = icmp ne i8* %233, null
  br i1 %tobool420, label %if.then.421, label %if.end.424

if.then.421:                                      ; preds = %if.then.418
  %234 = load i8*, i8** @zmodem_recvcmd, align 8
  call void @free(i8* %234) #4
  %235 = load i8**, i8*** %args, align 8
  %arrayidx422 = getelementptr inbounds i8*, i8** %235, i64 1
  %236 = load i8*, i8** %arrayidx422, align 8
  %call423 = call i8* @SaveStr(i8* %236)
  store i8* %call423, i8** @zmodem_recvcmd, align 8
  br label %if.end.424

if.end.424:                                       ; preds = %if.then.421, %if.then.418
  %237 = load i32, i32* %msgok, align 4
  %tobool425 = icmp ne i32 %237, 0
  br i1 %tobool425, label %if.then.426, label %if.end.436

if.then.426:                                      ; preds = %if.end.424
  %238 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet427 = getelementptr inbounds %struct.action, %struct.action* %238, i32 0, i32 3
  %239 = load i32, i32* %quiet427, align 4
  %tobool428 = icmp ne i32 %239, 0
  br i1 %tobool428, label %cond.false.430, label %cond.true.429

cond.true.429:                                    ; preds = %if.then.426
  br label %cond.end.434

cond.false.430:                                   ; preds = %if.then.426
  %240 = load i32, i32* @queryflag, align 4
  %cmp431 = icmp sge i32 %240, 0
  %cond433 = select i1 %cmp431, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.434

cond.end.434:                                     ; preds = %cond.false.430, %cond.true.429
  %cond435 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.429 ], [ %cond433, %cond.false.430 ]
  %241 = load i8*, i8** @zmodem_recvcmd, align 8
  call void (i32, i8*, ...) %cond435(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i32 0, i32 0), i8* %241)
  br label %if.end.436

if.end.436:                                       ; preds = %cond.end.434, %if.end.424
  br label %sw.epilog.7356

if.end.437:                                       ; preds = %land.lhs.true.415, %if.end.413
  %242 = load i8**, i8*** %args, align 8
  %243 = load i8*, i8** %242, align 8
  %tobool438 = icmp ne i8* %243, null
  br i1 %tobool438, label %if.then.439, label %if.end.468

if.then.439:                                      ; preds = %if.end.437
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.439
  %244 = load i32, i32* %i, align 4
  %cmp440 = icmp slt i32 %244, 4
  br i1 %cmp440, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %245 = load i32, i32* %i, align 4
  %idxprom442 = sext i32 %245 to i64
  %arrayidx443 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zmodes, i32 0, i64 %idxprom442
  %246 = load i8*, i8** %arrayidx443, align 8
  %247 = load i8**, i8*** %args, align 8
  %248 = load i8*, i8** %247, align 8
  %call444 = call i32 @strcmp(i8* %246, i8* %248) #8
  %tobool445 = icmp ne i32 %call444, 0
  br i1 %tobool445, label %if.end.447, label %if.then.446

if.then.446:                                      ; preds = %for.body
  br label %for.end

if.end.447:                                       ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.447
  %249 = load i32, i32* %i, align 4
  %inc = add nsw i32 %249, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then.446, %for.cond
  %250 = load i32, i32* %i, align 4
  %cmp448 = icmp eq i32 %250, 4
  br i1 %cmp448, label %land.lhs.true.450, label %if.end.454

land.lhs.true.450:                                ; preds = %for.end
  %251 = load i8**, i8*** %args, align 8
  %252 = load i8*, i8** %251, align 8
  %call451 = call i32 @strcmp(i8* %252, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #8
  %tobool452 = icmp ne i32 %call451, 0
  br i1 %tobool452, label %if.end.454, label %if.then.453

if.then.453:                                      ; preds = %land.lhs.true.450
  store i32 1, i32* %i, align 4
  br label %if.end.454

if.end.454:                                       ; preds = %if.then.453, %land.lhs.true.450, %for.end
  %253 = load i32, i32* %i, align 4
  %cmp455 = icmp eq i32 %253, 4
  br i1 %cmp455, label %if.then.457, label %if.end.467

if.then.457:                                      ; preds = %if.end.454
  %254 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet458 = getelementptr inbounds %struct.action, %struct.action* %254, i32 0, i32 3
  %255 = load i32, i32* %quiet458, align 4
  %tobool459 = icmp ne i32 %255, 0
  br i1 %tobool459, label %cond.false.461, label %cond.true.460

cond.true.460:                                    ; preds = %if.then.457
  br label %cond.end.465

cond.false.461:                                   ; preds = %if.then.457
  %256 = load i32, i32* @queryflag, align 4
  %cmp462 = icmp sge i32 %256, 0
  %cond464 = select i1 %cmp462, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.465

cond.end.465:                                     ; preds = %cond.false.461, %cond.true.460
  %cond466 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.460 ], [ %cond464, %cond.false.461 ]
  call void (i32, i8*, ...) %cond466(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.467:                                       ; preds = %if.end.454
  %257 = load i32, i32* %i, align 4
  store i32 %257, i32* @zmodem_mode, align 4
  br label %if.end.468

if.end.468:                                       ; preds = %if.end.467, %if.end.437
  %258 = load i32, i32* %msgok, align 4
  %tobool469 = icmp ne i32 %258, 0
  br i1 %tobool469, label %if.then.470, label %if.end.482

if.then.470:                                      ; preds = %if.end.468
  %259 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet471 = getelementptr inbounds %struct.action, %struct.action* %259, i32 0, i32 3
  %260 = load i32, i32* %quiet471, align 4
  %tobool472 = icmp ne i32 %260, 0
  br i1 %tobool472, label %cond.false.474, label %cond.true.473

cond.true.473:                                    ; preds = %if.then.470
  br label %cond.end.478

cond.false.474:                                   ; preds = %if.then.470
  %261 = load i32, i32* @queryflag, align 4
  %cmp475 = icmp sge i32 %261, 0
  %cond477 = select i1 %cmp475, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.478

cond.end.478:                                     ; preds = %cond.false.474, %cond.true.473
  %cond479 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.473 ], [ %cond477, %cond.false.474 ]
  %262 = load i32, i32* @zmodem_mode, align 4
  %idxprom480 = sext i32 %262 to i64
  %arrayidx481 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zmodes, i32 0, i64 %idxprom480
  %263 = load i8*, i8** %arrayidx481, align 8
  call void (i32, i8*, ...) %cond479(i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i32 0, i32 0), i8* %263)
  br label %if.end.482

if.end.482:                                       ; preds = %cond.end.478, %if.end.468
  br label %sw.epilog.7356

sw.bb.483:                                        ; preds = %land.end
  store i32 0, i32* %i484, align 4
  br label %for.cond.485

for.cond.485:                                     ; preds = %for.inc.492, %sw.bb.483
  %264 = load i32, i32* %i484, align 4
  %conv486 = zext i32 %264 to i64
  %cmp487 = icmp ult i64 %conv486, 338
  br i1 %cmp487, label %for.body.489, label %for.end.494

for.body.489:                                     ; preds = %for.cond.485
  %265 = load i32, i32* %i484, align 4
  %idxprom490 = zext i32 %265 to i64
  %arrayidx491 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom490
  call void @ClearAction(%struct.action* %arrayidx491)
  br label %for.inc.492

for.inc.492:                                      ; preds = %for.body.489
  %266 = load i32, i32* %i484, align 4
  %inc493 = add i32 %266, 1
  store i32 %inc493, i32* %i484, align 4
  br label %for.cond.485

for.end.494:                                      ; preds = %for.cond.485
  %267 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet495 = getelementptr inbounds %struct.action, %struct.action* %267, i32 0, i32 3
  %268 = load i32, i32* %quiet495, align 4
  %tobool496 = icmp ne i32 %268, 0
  br i1 %tobool496, label %cond.false.498, label %cond.true.497

cond.true.497:                                    ; preds = %for.end.494
  br label %cond.end.502

cond.false.498:                                   ; preds = %for.end.494
  %269 = load i32, i32* @queryflag, align 4
  %cmp499 = icmp sge i32 %269, 0
  %cond501 = select i1 %cmp499, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.502

cond.end.502:                                     ; preds = %cond.false.498, %cond.true.497
  %cond503 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.497 ], [ %cond501, %cond.false.498 ]
  call void (i32, i8*, ...) %cond503(i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i32 0, i32 0))
  br label %sw.epilog.7356

sw.bb.504:                                        ; preds = %land.end
  %270 = load i8**, i8*** %args, align 8
  %271 = load i8*, i8** %270, align 8
  store i8* %271, i8** %s, align 8
  %tobool505 = icmp ne i8* %271, null
  br i1 %tobool505, label %if.end.507, label %if.then.506

if.then.506:                                      ; preds = %sw.bb.504
  store i32 0, i32* @ZombieKey_destroy, align 4
  br label %sw.epilog.7356

if.end.507:                                       ; preds = %sw.bb.504
  %272 = load i32*, i32** %argl, align 8
  %273 = load i32, i32* %272, align 4
  %cmp508 = icmp eq i32 %273, 0
  br i1 %cmp508, label %if.then.513, label %lor.lhs.false.510

lor.lhs.false.510:                                ; preds = %if.end.507
  %274 = load i32*, i32** %argl, align 8
  %275 = load i32, i32* %274, align 4
  %cmp511 = icmp sgt i32 %275, 2
  br i1 %cmp511, label %if.then.513, label %if.end.523

if.then.513:                                      ; preds = %lor.lhs.false.510, %if.end.507
  %276 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet514 = getelementptr inbounds %struct.action, %struct.action* %276, i32 0, i32 3
  %277 = load i32, i32* %quiet514, align 4
  %tobool515 = icmp ne i32 %277, 0
  br i1 %tobool515, label %cond.false.517, label %cond.true.516

cond.true.516:                                    ; preds = %if.then.513
  br label %cond.end.521

cond.false.517:                                   ; preds = %if.then.513
  %278 = load i32, i32* @queryflag, align 4
  %cmp518 = icmp sge i32 %278, 0
  %cond520 = select i1 %cmp518, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.521

cond.end.521:                                     ; preds = %cond.false.517, %cond.true.516
  %cond522 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.516 ], [ %cond520, %cond.false.517 ]
  %279 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond522(i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i32 0, i32 0), i8* %279)
  br label %sw.epilog.7356

if.end.523:                                       ; preds = %lor.lhs.false.510
  %280 = load i8**, i8*** %args, align 8
  %arrayidx524 = getelementptr inbounds i8*, i8** %280, i64 1
  %281 = load i8*, i8** %arrayidx524, align 8
  %tobool525 = icmp ne i8* %281, null
  br i1 %tobool525, label %if.then.526, label %if.else.542

if.then.526:                                      ; preds = %if.end.523
  %282 = load i8**, i8*** %args, align 8
  %arrayidx527 = getelementptr inbounds i8*, i8** %282, i64 1
  %283 = load i8*, i8** %arrayidx527, align 8
  %call528 = call i32 @strcmp(i8* %283, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0)) #8
  %tobool529 = icmp ne i32 %call528, 0
  br i1 %tobool529, label %if.else.531, label %if.then.530

if.then.530:                                      ; preds = %if.then.526
  store i32 1, i32* @ZombieKey_onerror, align 4
  br label %if.end.541

if.else.531:                                      ; preds = %if.then.526
  %284 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet532 = getelementptr inbounds %struct.action, %struct.action* %284, i32 0, i32 3
  %285 = load i32, i32* %quiet532, align 4
  %tobool533 = icmp ne i32 %285, 0
  br i1 %tobool533, label %cond.false.535, label %cond.true.534

cond.true.534:                                    ; preds = %if.else.531
  br label %cond.end.539

cond.false.535:                                   ; preds = %if.else.531
  %286 = load i32, i32* @queryflag, align 4
  %cmp536 = icmp sge i32 %286, 0
  %cond538 = select i1 %cmp536, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.539

cond.end.539:                                     ; preds = %cond.false.535, %cond.true.534
  %cond540 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.534 ], [ %cond538, %cond.false.535 ]
  call void (i32, i8*, ...) %cond540(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.541:                                       ; preds = %if.then.530
  br label %if.end.543

if.else.542:                                      ; preds = %if.end.523
  store i32 0, i32* @ZombieKey_onerror, align 4
  br label %if.end.543

if.end.543:                                       ; preds = %if.else.542, %if.end.541
  %287 = load i8**, i8*** %args, align 8
  %arrayidx544 = getelementptr inbounds i8*, i8** %287, i64 0
  %288 = load i8*, i8** %arrayidx544, align 8
  %arrayidx545 = getelementptr inbounds i8, i8* %288, i64 0
  %289 = load i8, i8* %arrayidx545, align 1
  %conv546 = sext i8 %289 to i32
  store i32 %conv546, i32* @ZombieKey_destroy, align 4
  %290 = load i32*, i32** %argl, align 8
  %291 = load i32, i32* %290, align 4
  %cmp547 = icmp eq i32 %291, 2
  br i1 %cmp547, label %cond.true.549, label %cond.false.553

cond.true.549:                                    ; preds = %if.end.543
  %292 = load i8**, i8*** %args, align 8
  %arrayidx550 = getelementptr inbounds i8*, i8** %292, i64 0
  %293 = load i8*, i8** %arrayidx550, align 8
  %arrayidx551 = getelementptr inbounds i8, i8* %293, i64 1
  %294 = load i8, i8* %arrayidx551, align 1
  %conv552 = sext i8 %294 to i32
  br label %cond.end.554

cond.false.553:                                   ; preds = %if.end.543
  br label %cond.end.554

cond.end.554:                                     ; preds = %cond.false.553, %cond.true.549
  %cond555 = phi i32 [ %conv552, %cond.true.549 ], [ 0, %cond.false.553 ]
  store i32 %cond555, i32* @ZombieKey_resurrect, align 4
  br label %sw.epilog.7356

sw.bb.556:                                        ; preds = %land.end
  %295 = load %struct.display*, %struct.display** @display, align 8
  %d_user557 = getelementptr inbounds %struct.display, %struct.display* %295, i32 0, i32 1
  %296 = load %struct.acluser*, %struct.acluser** %d_user557, align 8
  %u_name558 = getelementptr inbounds %struct.acluser, %struct.acluser* %296, i32 0, i32 1
  %arraydecay559 = getelementptr inbounds [257 x i8], [257 x i8]* %u_name558, i32 0, i32 0
  store i8* %arraydecay559, i8** %s, align 8
  %297 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %297, %struct.display** %olddisplay, align 8
  store %struct.display* null, %struct.display** @display, align 8
  %298 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet560 = getelementptr inbounds %struct.action, %struct.action* %298, i32 0, i32 3
  %299 = load i32, i32* %quiet560, align 4
  %tobool561 = icmp ne i32 %299, 0
  br i1 %tobool561, label %cond.false.563, label %cond.true.562

cond.true.562:                                    ; preds = %sw.bb.556
  br label %cond.end.567

cond.false.563:                                   ; preds = %sw.bb.556
  %300 = load i32, i32* @queryflag, align 4
  %cmp564 = icmp sge i32 %300, 0
  %cond566 = select i1 %cmp564, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.567

cond.end.567:                                     ; preds = %cond.false.563, %cond.true.562
  %cond568 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.562 ], [ %cond566, %cond.false.563 ]
  %301 = load i8*, i8** %s, align 8
  %302 = load i8**, i8*** %args, align 8
  %303 = load i8*, i8** %302, align 8
  call void (i32, i8*, ...) %cond568(i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i32 0, i32 0), i8* %301, i8* %303)
  %304 = load %struct.display*, %struct.display** %olddisplay, align 8
  store %struct.display* %304, %struct.display** @display, align 8
  br label %sw.epilog.7356

sw.bb.569:                                        ; preds = %land.end
  %305 = load %struct.acluser*, %struct.acluser** %user, align 8
  %tobool570 = icmp ne %struct.acluser* %305, null
  br i1 %tobool570, label %if.end.572, label %if.then.571

if.then.571:                                      ; preds = %sw.bb.569
  br label %sw.epilog.7356

if.end.572:                                       ; preds = %sw.bb.569
  %306 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_name573 = getelementptr inbounds %struct.acluser, %struct.acluser* %306, i32 0, i32 1
  %arraydecay574 = getelementptr inbounds [257 x i8], [257 x i8]* %u_name573, i32 0, i32 0
  %call575 = call i8* @SaveStr(i8* %arraydecay574)
  store i8* %call575, i8** %s, align 8
  %307 = load %struct.acluser*, %struct.acluser** %user, align 8
  store %struct.acluser* %307, %struct.acluser** @EffectiveAclUser, align 8
  %308 = load i8**, i8*** %args, align 8
  %arrayidx576 = getelementptr inbounds i8*, i8** %308, i64 0
  %309 = load i8*, i8** %arrayidx576, align 8
  %call577 = call i64 @strlen(i8* %309) #8
  %conv578 = trunc i64 %call577 to i32
  store i32 %conv578, i32* %n, align 4
  %310 = load i32, i32* %n, align 4
  %tobool579 = icmp ne i32 %310, 0
  br i1 %tobool579, label %if.then.580, label %if.end.581

if.then.580:                                      ; preds = %if.end.572
  %311 = load i32, i32* %n, align 4
  %dec = add nsw i32 %311, -1
  store i32 %dec, i32* %n, align 4
  br label %if.end.581

if.end.581:                                       ; preds = %if.then.580, %if.end.572
  %312 = load i32, i32* %n, align 4
  %idxprom582 = sext i32 %312 to i64
  %313 = load i8**, i8*** %args, align 8
  %arrayidx583 = getelementptr inbounds i8*, i8** %313, i64 0
  %314 = load i8*, i8** %arrayidx583, align 8
  %arrayidx584 = getelementptr inbounds i8, i8* %314, i64 %idxprom582
  %315 = load i8, i8* %arrayidx584, align 1
  %conv585 = sext i8 %315 to i32
  switch i32 %conv585, label %sw.default [
    i32 42, label %sw.bb.586
    i32 37, label %sw.bb.661
    i32 35, label %sw.bb.736
  ]

sw.bb.586:                                        ; preds = %if.end.581
  %316 = load i32, i32* %n, align 4
  %tobool587 = icmp ne i32 %316, 0
  br i1 %tobool587, label %if.else.589, label %if.then.588

if.then.588:                                      ; preds = %sw.bb.586
  %317 = load %struct.acluser*, %struct.acluser** %user, align 8
  store %struct.acluser* %317, %struct.acluser** %u, align 8
  br label %if.end.620

if.else.589:                                      ; preds = %sw.bb.586
  %318 = load %struct.acluser*, %struct.acluser** @users, align 8
  store %struct.acluser* %318, %struct.acluser** %u, align 8
  br label %for.cond.590

for.cond.590:                                     ; preds = %for.inc.602, %if.else.589
  %319 = load %struct.acluser*, %struct.acluser** %u, align 8
  %tobool591 = icmp ne %struct.acluser* %319, null
  br i1 %tobool591, label %for.body.592, label %for.end.603

for.body.592:                                     ; preds = %for.cond.590
  br label %do.body.593

do.body.593:                                      ; preds = %for.body.592
  br label %do.end.594

do.end.594:                                       ; preds = %do.body.593
  %320 = load i8**, i8*** %args, align 8
  %321 = load i8*, i8** %320, align 8
  %322 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_name595 = getelementptr inbounds %struct.acluser, %struct.acluser* %322, i32 0, i32 1
  %arraydecay596 = getelementptr inbounds [257 x i8], [257 x i8]* %u_name595, i32 0, i32 0
  %323 = load i32, i32* %n, align 4
  %conv597 = sext i32 %323 to i64
  %call598 = call i32 @strncmp(i8* %321, i8* %arraydecay596, i64 %conv597) #8
  %tobool599 = icmp ne i32 %call598, 0
  br i1 %tobool599, label %if.end.601, label %if.then.600

if.then.600:                                      ; preds = %do.end.594
  br label %for.end.603

if.end.601:                                       ; preds = %do.end.594
  br label %for.inc.602

for.inc.602:                                      ; preds = %if.end.601
  %324 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_next = getelementptr inbounds %struct.acluser, %struct.acluser* %324, i32 0, i32 0
  %325 = load %struct.acluser*, %struct.acluser** %u_next, align 8
  store %struct.acluser* %325, %struct.acluser** %u, align 8
  br label %for.cond.590

for.end.603:                                      ; preds = %if.then.600, %for.cond.590
  %326 = load %struct.acluser*, %struct.acluser** %u, align 8
  %tobool604 = icmp ne %struct.acluser* %326, null
  br i1 %tobool604, label %if.end.619, label %if.then.605

if.then.605:                                      ; preds = %for.end.603
  %327 = load i32, i32* %n, align 4
  %idxprom606 = sext i32 %327 to i64
  %328 = load i8**, i8*** %args, align 8
  %arrayidx607 = getelementptr inbounds i8*, i8** %328, i64 0
  %329 = load i8*, i8** %arrayidx607, align 8
  %arrayidx608 = getelementptr inbounds i8, i8* %329, i64 %idxprom606
  store i8 0, i8* %arrayidx608, align 1
  %330 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet609 = getelementptr inbounds %struct.action, %struct.action* %330, i32 0, i32 3
  %331 = load i32, i32* %quiet609, align 4
  %tobool610 = icmp ne i32 %331, 0
  br i1 %tobool610, label %cond.false.612, label %cond.true.611

cond.true.611:                                    ; preds = %if.then.605
  br label %cond.end.616

cond.false.612:                                   ; preds = %if.then.605
  %332 = load i32, i32* @queryflag, align 4
  %cmp613 = icmp sge i32 %332, 0
  %cond615 = select i1 %cmp613, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.616

cond.end.616:                                     ; preds = %cond.false.612, %cond.true.611
  %cond617 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.611 ], [ %cond615, %cond.false.612 ]
  %333 = load i8**, i8*** %args, align 8
  %arrayidx618 = getelementptr inbounds i8*, i8** %333, i64 0
  %334 = load i8*, i8** %arrayidx618, align 8
  call void (i32, i8*, ...) %cond617(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.39, i32 0, i32 0), i8* %334)
  br label %sw.epilog

if.end.619:                                       ; preds = %for.end.603
  br label %if.end.620

if.end.620:                                       ; preds = %if.end.619, %if.then.588
  br label %do.body.621

do.body.621:                                      ; preds = %if.end.620
  br label %do.end.622

do.end.622:                                       ; preds = %do.body.621
  %335 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %335, %struct.display** @display, align 8
  br label %for.cond.623

for.cond.623:                                     ; preds = %for.inc.659, %do.end.622
  %336 = load %struct.display*, %struct.display** @display, align 8
  %tobool624 = icmp ne %struct.display* %336, null
  br i1 %tobool624, label %for.body.625, label %for.end.660

for.body.625:                                     ; preds = %for.cond.623
  %337 = load %struct.display*, %struct.display** @display, align 8
  %d_next = getelementptr inbounds %struct.display, %struct.display* %337, i32 0, i32 0
  %338 = load %struct.display*, %struct.display** %d_next, align 8
  store %struct.display* %338, %struct.display** %nd, align 8
  %339 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %339, i32 0, i32 4
  %340 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %cmp626 = icmp eq %struct.canvas* %340, null
  br i1 %cmp626, label %if.then.628, label %if.end.629

if.then.628:                                      ; preds = %for.body.625
  br label %for.inc.659

if.end.629:                                       ; preds = %for.body.625
  %341 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv630 = getelementptr inbounds %struct.display, %struct.display* %341, i32 0, i32 4
  %342 = load %struct.canvas*, %struct.canvas** %d_forecv630, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %342, i32 0, i32 9
  %343 = load %struct.layer*, %struct.layer** %c_layer, align 8
  store %struct.layer* %343, %struct.layer** @flayer, align 8
  %344 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %344, i32 0, i32 10
  %345 = load %struct.win*, %struct.win** %d_fore, align 8
  store %struct.win* %345, %struct.win** @fore, align 8
  %346 = load %struct.display*, %struct.display** @display, align 8
  %d_user631 = getelementptr inbounds %struct.display, %struct.display* %346, i32 0, i32 1
  %347 = load %struct.acluser*, %struct.acluser** %d_user631, align 8
  %348 = load %struct.acluser*, %struct.acluser** %u, align 8
  %cmp632 = icmp ne %struct.acluser* %347, %348
  br i1 %cmp632, label %if.then.634, label %if.end.635

if.then.634:                                      ; preds = %if.end.629
  br label %for.inc.659

if.end.635:                                       ; preds = %if.end.629
  br label %do.body.636

do.body.636:                                      ; preds = %if.end.635
  br label %do.end.637

do.end.637:                                       ; preds = %do.body.636
  %349 = load i8**, i8*** %args, align 8
  %add.ptr = getelementptr inbounds i8*, i8** %349, i64 1
  %350 = load i32*, i32** %argl, align 8
  %add.ptr638 = getelementptr inbounds i32, i32* %350, i64 1
  call void @DoCommand(i8** %add.ptr, i32* %add.ptr638)
  %351 = load %struct.display*, %struct.display** @display, align 8
  %tobool639 = icmp ne %struct.display* %351, null
  br i1 %tobool639, label %if.then.640, label %if.end.658

if.then.640:                                      ; preds = %do.end.637
  %352 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet641 = getelementptr inbounds %struct.action, %struct.action* %352, i32 0, i32 3
  %353 = load i32, i32* %quiet641, align 4
  %tobool642 = icmp ne i32 %353, 0
  br i1 %tobool642, label %cond.false.644, label %cond.true.643

cond.true.643:                                    ; preds = %if.then.640
  br label %cond.end.648

cond.false.644:                                   ; preds = %if.then.640
  %354 = load i32, i32* @queryflag, align 4
  %cmp645 = icmp sge i32 %354, 0
  %cond647 = select i1 %cmp645, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.648

cond.end.648:                                     ; preds = %cond.false.644, %cond.true.643
  %cond649 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.643 ], [ %cond647, %cond.false.644 ]
  %355 = load i8*, i8** %s, align 8
  %356 = load i8**, i8*** %args, align 8
  %arrayidx650 = getelementptr inbounds i8*, i8** %356, i64 1
  %357 = load i8*, i8** %arrayidx650, align 8
  %358 = load i8**, i8*** %args, align 8
  %arrayidx651 = getelementptr inbounds i8*, i8** %358, i64 2
  %359 = load i8*, i8** %arrayidx651, align 8
  %tobool652 = icmp ne i8* %359, null
  br i1 %tobool652, label %cond.true.653, label %cond.false.655

cond.true.653:                                    ; preds = %cond.end.648
  %360 = load i8**, i8*** %args, align 8
  %arrayidx654 = getelementptr inbounds i8*, i8** %360, i64 2
  %361 = load i8*, i8** %arrayidx654, align 8
  br label %cond.end.656

cond.false.655:                                   ; preds = %cond.end.648
  br label %cond.end.656

cond.end.656:                                     ; preds = %cond.false.655, %cond.true.653
  %cond657 = phi i8* [ %361, %cond.true.653 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), %cond.false.655 ]
  call void (i32, i8*, ...) %cond649(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i32 0, i32 0), i8* %355, i8* %357, i8* %cond657)
  br label %if.end.658

if.end.658:                                       ; preds = %cond.end.656, %do.end.637
  store %struct.display* null, %struct.display** @display, align 8
  store %struct.layer* null, %struct.layer** @flayer, align 8
  store %struct.win* null, %struct.win** @fore, align 8
  br label %for.inc.659

for.inc.659:                                      ; preds = %if.end.658, %if.then.634, %if.then.628
  %362 = load %struct.display*, %struct.display** %nd, align 8
  store %struct.display* %362, %struct.display** @display, align 8
  br label %for.cond.623

for.end.660:                                      ; preds = %for.cond.623
  br label %sw.epilog

sw.bb.661:                                        ; preds = %if.end.581
  br label %do.body.663

do.body.663:                                      ; preds = %sw.bb.661
  br label %do.end.664

do.end.664:                                       ; preds = %do.body.663
  %363 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %363, %struct.display** @display, align 8
  br label %for.cond.665

for.cond.665:                                     ; preds = %for.inc.734, %do.end.664
  %364 = load %struct.display*, %struct.display** @display, align 8
  %tobool666 = icmp ne %struct.display* %364, null
  br i1 %tobool666, label %for.body.667, label %for.end.735

for.body.667:                                     ; preds = %for.cond.665
  %365 = load %struct.display*, %struct.display** @display, align 8
  %d_next668 = getelementptr inbounds %struct.display, %struct.display* %365, i32 0, i32 0
  %366 = load %struct.display*, %struct.display** %d_next668, align 8
  store %struct.display* %366, %struct.display** %nd662, align 8
  %367 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv669 = getelementptr inbounds %struct.display, %struct.display* %367, i32 0, i32 4
  %368 = load %struct.canvas*, %struct.canvas** %d_forecv669, align 8
  %cmp670 = icmp eq %struct.canvas* %368, null
  br i1 %cmp670, label %if.then.672, label %if.end.673

if.then.672:                                      ; preds = %for.body.667
  br label %for.inc.734

if.end.673:                                       ; preds = %for.body.667
  %369 = load %struct.display*, %struct.display** @display, align 8
  %d_fore674 = getelementptr inbounds %struct.display, %struct.display* %369, i32 0, i32 10
  %370 = load %struct.win*, %struct.win** %d_fore674, align 8
  store %struct.win* %370, %struct.win** @fore, align 8
  %371 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv675 = getelementptr inbounds %struct.display, %struct.display* %371, i32 0, i32 4
  %372 = load %struct.canvas*, %struct.canvas** %d_forecv675, align 8
  %c_layer676 = getelementptr inbounds %struct.canvas, %struct.canvas* %372, i32 0, i32 9
  %373 = load %struct.layer*, %struct.layer** %c_layer676, align 8
  store %struct.layer* %373, %struct.layer** @flayer, align 8
  %374 = load i8**, i8*** %args, align 8
  %arrayidx677 = getelementptr inbounds i8*, i8** %374, i64 0
  %375 = load i8*, i8** %arrayidx677, align 8
  %376 = load %struct.display*, %struct.display** @display, align 8
  %d_usertty = getelementptr inbounds %struct.display, %struct.display* %376, i32 0, i32 58
  %arraydecay678 = getelementptr inbounds [4096 x i8], [4096 x i8]* %d_usertty, i32 0, i32 0
  %377 = load i32, i32* %n, align 4
  %conv679 = sext i32 %377 to i64
  %call680 = call i32 @strncmp(i8* %375, i8* %arraydecay678, i64 %conv679) #8
  %tobool681 = icmp ne i32 %call680, 0
  br i1 %tobool681, label %land.lhs.true.682, label %if.end.709

land.lhs.true.682:                                ; preds = %if.end.673
  %378 = load %struct.display*, %struct.display** @display, align 8
  %d_usertty683 = getelementptr inbounds %struct.display, %struct.display* %378, i32 0, i32 58
  %arraydecay684 = getelementptr inbounds [4096 x i8], [4096 x i8]* %d_usertty683, i32 0, i32 0
  %call685 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i8* %arraydecay684, i64 5) #8
  %tobool686 = icmp ne i32 %call685, 0
  br i1 %tobool686, label %land.lhs.true.695, label %lor.lhs.false.687

lor.lhs.false.687:                                ; preds = %land.lhs.true.682
  %379 = load i8**, i8*** %args, align 8
  %arrayidx688 = getelementptr inbounds i8*, i8** %379, i64 0
  %380 = load i8*, i8** %arrayidx688, align 8
  %381 = load %struct.display*, %struct.display** @display, align 8
  %d_usertty689 = getelementptr inbounds %struct.display, %struct.display* %381, i32 0, i32 58
  %arraydecay690 = getelementptr inbounds [4096 x i8], [4096 x i8]* %d_usertty689, i32 0, i32 0
  %add.ptr691 = getelementptr inbounds i8, i8* %arraydecay690, i64 5
  %382 = load i32, i32* %n, align 4
  %conv692 = sext i32 %382 to i64
  %call693 = call i32 @strncmp(i8* %380, i8* %add.ptr691, i64 %conv692) #8
  %tobool694 = icmp ne i32 %call693, 0
  br i1 %tobool694, label %land.lhs.true.695, label %if.end.709

land.lhs.true.695:                                ; preds = %lor.lhs.false.687, %land.lhs.true.682
  %383 = load %struct.display*, %struct.display** @display, align 8
  %d_usertty696 = getelementptr inbounds %struct.display, %struct.display* %383, i32 0, i32 58
  %arraydecay697 = getelementptr inbounds [4096 x i8], [4096 x i8]* %d_usertty696, i32 0, i32 0
  %call698 = call i32 @strncmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0), i8* %arraydecay697, i64 8) #8
  %tobool699 = icmp ne i32 %call698, 0
  br i1 %tobool699, label %if.then.708, label %lor.lhs.false.700

lor.lhs.false.700:                                ; preds = %land.lhs.true.695
  %384 = load i8**, i8*** %args, align 8
  %arrayidx701 = getelementptr inbounds i8*, i8** %384, i64 0
  %385 = load i8*, i8** %arrayidx701, align 8
  %386 = load %struct.display*, %struct.display** @display, align 8
  %d_usertty702 = getelementptr inbounds %struct.display, %struct.display* %386, i32 0, i32 58
  %arraydecay703 = getelementptr inbounds [4096 x i8], [4096 x i8]* %d_usertty702, i32 0, i32 0
  %add.ptr704 = getelementptr inbounds i8, i8* %arraydecay703, i64 8
  %387 = load i32, i32* %n, align 4
  %conv705 = sext i32 %387 to i64
  %call706 = call i32 @strncmp(i8* %385, i8* %add.ptr704, i64 %conv705) #8
  %tobool707 = icmp ne i32 %call706, 0
  br i1 %tobool707, label %if.then.708, label %if.end.709

if.then.708:                                      ; preds = %lor.lhs.false.700, %land.lhs.true.695
  br label %for.inc.734

if.end.709:                                       ; preds = %lor.lhs.false.700, %lor.lhs.false.687, %if.end.673
  br label %do.body.710

do.body.710:                                      ; preds = %if.end.709
  br label %do.end.711

do.end.711:                                       ; preds = %do.body.710
  %388 = load i8**, i8*** %args, align 8
  %add.ptr712 = getelementptr inbounds i8*, i8** %388, i64 1
  %389 = load i32*, i32** %argl, align 8
  %add.ptr713 = getelementptr inbounds i32, i32* %389, i64 1
  call void @DoCommand(i8** %add.ptr712, i32* %add.ptr713)
  %390 = load %struct.display*, %struct.display** @display, align 8
  %tobool714 = icmp ne %struct.display* %390, null
  br i1 %tobool714, label %if.then.715, label %if.end.733

if.then.715:                                      ; preds = %do.end.711
  %391 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet716 = getelementptr inbounds %struct.action, %struct.action* %391, i32 0, i32 3
  %392 = load i32, i32* %quiet716, align 4
  %tobool717 = icmp ne i32 %392, 0
  br i1 %tobool717, label %cond.false.719, label %cond.true.718

cond.true.718:                                    ; preds = %if.then.715
  br label %cond.end.723

cond.false.719:                                   ; preds = %if.then.715
  %393 = load i32, i32* @queryflag, align 4
  %cmp720 = icmp sge i32 %393, 0
  %cond722 = select i1 %cmp720, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.723

cond.end.723:                                     ; preds = %cond.false.719, %cond.true.718
  %cond724 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.718 ], [ %cond722, %cond.false.719 ]
  %394 = load i8*, i8** %s, align 8
  %395 = load i8**, i8*** %args, align 8
  %arrayidx725 = getelementptr inbounds i8*, i8** %395, i64 1
  %396 = load i8*, i8** %arrayidx725, align 8
  %397 = load i8**, i8*** %args, align 8
  %arrayidx726 = getelementptr inbounds i8*, i8** %397, i64 2
  %398 = load i8*, i8** %arrayidx726, align 8
  %tobool727 = icmp ne i8* %398, null
  br i1 %tobool727, label %cond.true.728, label %cond.false.730

cond.true.728:                                    ; preds = %cond.end.723
  %399 = load i8**, i8*** %args, align 8
  %arrayidx729 = getelementptr inbounds i8*, i8** %399, i64 2
  %400 = load i8*, i8** %arrayidx729, align 8
  br label %cond.end.731

cond.false.730:                                   ; preds = %cond.end.723
  br label %cond.end.731

cond.end.731:                                     ; preds = %cond.false.730, %cond.true.728
  %cond732 = phi i8* [ %400, %cond.true.728 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), %cond.false.730 ]
  call void (i32, i8*, ...) %cond724(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i32 0, i32 0), i8* %394, i8* %396, i8* %cond732)
  br label %if.end.733

if.end.733:                                       ; preds = %cond.end.731, %do.end.711
  store %struct.display* null, %struct.display** @display, align 8
  store %struct.win* null, %struct.win** @fore, align 8
  store %struct.layer* null, %struct.layer** @flayer, align 8
  br label %for.inc.734

for.inc.734:                                      ; preds = %if.end.733, %if.then.708, %if.then.672
  %401 = load %struct.display*, %struct.display** %nd662, align 8
  store %struct.display* %401, %struct.display** @display, align 8
  br label %for.cond.665

for.end.735:                                      ; preds = %for.cond.665
  br label %sw.epilog

sw.bb.736:                                        ; preds = %if.end.581
  %402 = load i32, i32* %n, align 4
  %dec737 = add nsw i32 %402, -1
  store i32 %dec737, i32* %n, align 4
  br label %sw.default

sw.default:                                       ; preds = %if.end.581, %sw.bb.736
  %403 = load i32, i32* %n, align 4
  %inc739 = add nsw i32 %403, 1
  store i32 %inc739, i32* %n, align 4
  %404 = load i32, i32* %n, align 4
  %idxprom740 = sext i32 %404 to i64
  %405 = load i8**, i8*** %args, align 8
  %arrayidx741 = getelementptr inbounds i8*, i8** %405, i64 0
  %406 = load i8*, i8** %arrayidx741, align 8
  %arrayidx742 = getelementptr inbounds i8, i8* %406, i64 %idxprom740
  %407 = load i8, i8* %arrayidx742, align 1
  %conv743 = sext i8 %407 to i32
  store i32 %conv743, i32* %ch738, align 4
  %408 = load i32, i32* %n, align 4
  %idxprom744 = sext i32 %408 to i64
  %409 = load i8**, i8*** %args, align 8
  %arrayidx745 = getelementptr inbounds i8*, i8** %409, i64 0
  %410 = load i8*, i8** %arrayidx745, align 8
  %arrayidx746 = getelementptr inbounds i8, i8* %410, i64 %idxprom744
  store i8 0, i8* %arrayidx746, align 1
  %411 = load i8**, i8*** %args, align 8
  %arrayidx747 = getelementptr inbounds i8*, i8** %411, i64 0
  %412 = load i8*, i8** %arrayidx747, align 8
  %413 = load i8, i8* %412, align 1
  %tobool748 = icmp ne i8 %413, 0
  br i1 %tobool748, label %lor.lhs.false.749, label %if.then.754

lor.lhs.false.749:                                ; preds = %sw.default
  %414 = load i8**, i8*** %args, align 8
  %arrayidx750 = getelementptr inbounds i8*, i8** %414, i64 0
  %415 = load i8*, i8** %arrayidx750, align 8
  %call751 = call i32 @WindowByNumber(i8* %415)
  store i32 %call751, i32* %i, align 4
  %cmp752 = icmp slt i32 %call751, 0
  br i1 %cmp752, label %if.then.754, label %if.else.828

if.then.754:                                      ; preds = %lor.lhs.false.749, %sw.default
  %416 = load i32, i32* %ch738, align 4
  %conv755 = trunc i32 %416 to i8
  %417 = load i32, i32* %n, align 4
  %idxprom756 = sext i32 %417 to i64
  %418 = load i8**, i8*** %args, align 8
  %arrayidx757 = getelementptr inbounds i8*, i8** %418, i64 0
  %419 = load i8*, i8** %arrayidx757, align 8
  %arrayidx758 = getelementptr inbounds i8, i8* %419, i64 %idxprom756
  store i8 %conv755, i8* %arrayidx758, align 1
  %420 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %420, %struct.win** @fore, align 8
  br label %for.cond.759

for.cond.759:                                     ; preds = %for.inc.812, %if.then.754
  %421 = load %struct.win*, %struct.win** @fore, align 8
  %tobool760 = icmp ne %struct.win* %421, null
  br i1 %tobool760, label %for.body.761, label %for.end.813

for.body.761:                                     ; preds = %for.cond.759
  %422 = load %struct.win*, %struct.win** @fore, align 8
  %w_next = getelementptr inbounds %struct.win, %struct.win* %422, i32 0, i32 0
  %423 = load %struct.win*, %struct.win** %w_next, align 8
  store %struct.win* %423, %struct.win** %nw, align 8
  %424 = load i8**, i8*** %args, align 8
  %arrayidx762 = getelementptr inbounds i8*, i8** %424, i64 0
  %425 = load i8*, i8** %arrayidx762, align 8
  %426 = load %struct.win*, %struct.win** @fore, align 8
  %w_title763 = getelementptr inbounds %struct.win, %struct.win* %426, i32 0, i32 21
  %427 = load i8*, i8** %w_title763, align 8
  %428 = load i32, i32* %n, align 4
  %conv764 = sext i32 %428 to i64
  %call765 = call i32 @strncmp(i8* %425, i8* %427, i64 %conv764) #8
  %tobool766 = icmp ne i32 %call765, 0
  br i1 %tobool766, label %if.then.767, label %if.end.768

if.then.767:                                      ; preds = %for.body.761
  br label %for.inc.812

if.end.768:                                       ; preds = %for.body.761
  br label %do.body.769

do.body.769:                                      ; preds = %if.end.768
  br label %do.end.770

do.end.770:                                       ; preds = %do.body.769
  store i32 0, i32* %i, align 4
  %429 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer = getelementptr inbounds %struct.win, %struct.win* %429, i32 0, i32 3
  %l_cvlist = getelementptr inbounds %struct.layer, %struct.layer* %w_layer, i32 0, i32 0
  %430 = load %struct.canvas*, %struct.canvas** %l_cvlist, align 8
  %tobool771 = icmp ne %struct.canvas* %430, null
  br i1 %tobool771, label %if.then.772, label %if.end.775

if.then.772:                                      ; preds = %do.end.770
  %431 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer773 = getelementptr inbounds %struct.win, %struct.win* %431, i32 0, i32 3
  %l_cvlist774 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer773, i32 0, i32 0
  %432 = load %struct.canvas*, %struct.canvas** %l_cvlist774, align 8
  %c_display = getelementptr inbounds %struct.canvas, %struct.canvas* %432, i32 0, i32 1
  %433 = load %struct.display*, %struct.display** %c_display, align 8
  store %struct.display* %433, %struct.display** @display, align 8
  br label %if.end.775

if.end.775:                                       ; preds = %if.then.772, %do.end.770
  %434 = load %struct.win*, %struct.win** @fore, align 8
  %w_savelayer = getelementptr inbounds %struct.win, %struct.win* %434, i32 0, i32 4
  %435 = load %struct.layer*, %struct.layer** %w_savelayer, align 8
  %tobool776 = icmp ne %struct.layer* %435, null
  br i1 %tobool776, label %cond.true.777, label %cond.false.779

cond.true.777:                                    ; preds = %if.end.775
  %436 = load %struct.win*, %struct.win** @fore, align 8
  %w_savelayer778 = getelementptr inbounds %struct.win, %struct.win* %436, i32 0, i32 4
  %437 = load %struct.layer*, %struct.layer** %w_savelayer778, align 8
  br label %cond.end.781

cond.false.779:                                   ; preds = %if.end.775
  %438 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer780 = getelementptr inbounds %struct.win, %struct.win* %438, i32 0, i32 3
  br label %cond.end.781

cond.end.781:                                     ; preds = %cond.false.779, %cond.true.777
  %cond782 = phi %struct.layer* [ %437, %cond.true.777 ], [ %w_layer780, %cond.false.779 ]
  store %struct.layer* %cond782, %struct.layer** @flayer, align 8
  %439 = load i8**, i8*** %args, align 8
  %add.ptr783 = getelementptr inbounds i8*, i8** %439, i64 1
  %440 = load i32*, i32** %argl, align 8
  %add.ptr784 = getelementptr inbounds i32, i32* %440, i64 1
  call void @DoCommand(i8** %add.ptr783, i32* %add.ptr784)
  %441 = load %struct.win*, %struct.win** @fore, align 8
  %tobool785 = icmp ne %struct.win* %441, null
  br i1 %tobool785, label %land.lhs.true.786, label %if.end.811

land.lhs.true.786:                                ; preds = %cond.end.781
  %442 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer787 = getelementptr inbounds %struct.win, %struct.win* %442, i32 0, i32 3
  %l_cvlist788 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer787, i32 0, i32 0
  %443 = load %struct.canvas*, %struct.canvas** %l_cvlist788, align 8
  %tobool789 = icmp ne %struct.canvas* %443, null
  br i1 %tobool789, label %if.then.790, label %if.end.811

if.then.790:                                      ; preds = %land.lhs.true.786
  %444 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer791 = getelementptr inbounds %struct.win, %struct.win* %444, i32 0, i32 3
  %l_cvlist792 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer791, i32 0, i32 0
  %445 = load %struct.canvas*, %struct.canvas** %l_cvlist792, align 8
  %c_display793 = getelementptr inbounds %struct.canvas, %struct.canvas* %445, i32 0, i32 1
  %446 = load %struct.display*, %struct.display** %c_display793, align 8
  store %struct.display* %446, %struct.display** @display, align 8
  %447 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet794 = getelementptr inbounds %struct.action, %struct.action* %447, i32 0, i32 3
  %448 = load i32, i32* %quiet794, align 4
  %tobool795 = icmp ne i32 %448, 0
  br i1 %tobool795, label %cond.false.797, label %cond.true.796

cond.true.796:                                    ; preds = %if.then.790
  br label %cond.end.801

cond.false.797:                                   ; preds = %if.then.790
  %449 = load i32, i32* @queryflag, align 4
  %cmp798 = icmp sge i32 %449, 0
  %cond800 = select i1 %cmp798, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.801

cond.end.801:                                     ; preds = %cond.false.797, %cond.true.796
  %cond802 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.796 ], [ %cond800, %cond.false.797 ]
  %450 = load i8*, i8** %s, align 8
  %451 = load i8**, i8*** %args, align 8
  %arrayidx803 = getelementptr inbounds i8*, i8** %451, i64 1
  %452 = load i8*, i8** %arrayidx803, align 8
  %453 = load i8**, i8*** %args, align 8
  %arrayidx804 = getelementptr inbounds i8*, i8** %453, i64 2
  %454 = load i8*, i8** %arrayidx804, align 8
  %tobool805 = icmp ne i8* %454, null
  br i1 %tobool805, label %cond.true.806, label %cond.false.808

cond.true.806:                                    ; preds = %cond.end.801
  %455 = load i8**, i8*** %args, align 8
  %arrayidx807 = getelementptr inbounds i8*, i8** %455, i64 2
  %456 = load i8*, i8** %arrayidx807, align 8
  br label %cond.end.809

cond.false.808:                                   ; preds = %cond.end.801
  br label %cond.end.809

cond.end.809:                                     ; preds = %cond.false.808, %cond.true.806
  %cond810 = phi i8* [ %456, %cond.true.806 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), %cond.false.808 ]
  call void (i32, i8*, ...) %cond802(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i32 0, i32 0), i8* %450, i8* %452, i8* %cond810)
  br label %if.end.811

if.end.811:                                       ; preds = %cond.end.809, %land.lhs.true.786, %cond.end.781
  br label %for.inc.812

for.inc.812:                                      ; preds = %if.end.811, %if.then.767
  %457 = load %struct.win*, %struct.win** %nw, align 8
  store %struct.win* %457, %struct.win** @fore, align 8
  br label %for.cond.759

for.end.813:                                      ; preds = %for.cond.759
  store %struct.display* null, %struct.display** @display, align 8
  store %struct.win* null, %struct.win** @fore, align 8
  %458 = load i32, i32* %i, align 4
  %cmp814 = icmp slt i32 %458, 0
  br i1 %cmp814, label %if.then.816, label %if.end.827

if.then.816:                                      ; preds = %for.end.813
  %459 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet817 = getelementptr inbounds %struct.action, %struct.action* %459, i32 0, i32 3
  %460 = load i32, i32* %quiet817, align 4
  %tobool818 = icmp ne i32 %460, 0
  br i1 %tobool818, label %cond.false.820, label %cond.true.819

cond.true.819:                                    ; preds = %if.then.816
  br label %cond.end.824

cond.false.820:                                   ; preds = %if.then.816
  %461 = load i32, i32* @queryflag, align 4
  %cmp821 = icmp sge i32 %461, 0
  %cond823 = select i1 %cmp821, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.824

cond.end.824:                                     ; preds = %cond.false.820, %cond.true.819
  %cond825 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.819 ], [ %cond823, %cond.false.820 ]
  %462 = load i8*, i8** @rc_name, align 8
  %463 = load i8**, i8*** %args, align 8
  %arrayidx826 = getelementptr inbounds i8*, i8** %463, i64 0
  %464 = load i8*, i8** %arrayidx826, align 8
  call void (i32, i8*, ...) %cond825(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.44, i32 0, i32 0), i8* %462, i8* %464)
  br label %if.end.827

if.end.827:                                       ; preds = %cond.end.824, %for.end.813
  br label %sw.epilog

if.else.828:                                      ; preds = %lor.lhs.false.749
  %465 = load i32, i32* %i, align 4
  %466 = load i32, i32* @maxwin, align 4
  %cmp829 = icmp slt i32 %465, %466
  br i1 %cmp829, label %land.lhs.true.831, label %if.else.887

land.lhs.true.831:                                ; preds = %if.else.828
  %467 = load i32, i32* %i, align 4
  %idxprom832 = sext i32 %467 to i64
  %468 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx833 = getelementptr inbounds %struct.win*, %struct.win** %468, i64 %idxprom832
  %469 = load %struct.win*, %struct.win** %arrayidx833, align 8
  store %struct.win* %469, %struct.win** @fore, align 8
  %tobool834 = icmp ne %struct.win* %469, null
  br i1 %tobool834, label %if.then.835, label %if.else.887

if.then.835:                                      ; preds = %land.lhs.true.831
  %470 = load i32, i32* %ch738, align 4
  %conv836 = trunc i32 %470 to i8
  %471 = load i32, i32* %n, align 4
  %idxprom837 = sext i32 %471 to i64
  %472 = load i8**, i8*** %args, align 8
  %arrayidx838 = getelementptr inbounds i8*, i8** %472, i64 0
  %473 = load i8*, i8** %arrayidx838, align 8
  %arrayidx839 = getelementptr inbounds i8, i8* %473, i64 %idxprom837
  store i8 %conv836, i8* %arrayidx839, align 1
  br label %do.body.840

do.body.840:                                      ; preds = %if.then.835
  br label %do.end.841

do.end.841:                                       ; preds = %do.body.840
  %474 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer842 = getelementptr inbounds %struct.win, %struct.win* %474, i32 0, i32 3
  %l_cvlist843 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer842, i32 0, i32 0
  %475 = load %struct.canvas*, %struct.canvas** %l_cvlist843, align 8
  %tobool844 = icmp ne %struct.canvas* %475, null
  br i1 %tobool844, label %if.then.845, label %if.end.849

if.then.845:                                      ; preds = %do.end.841
  %476 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer846 = getelementptr inbounds %struct.win, %struct.win* %476, i32 0, i32 3
  %l_cvlist847 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer846, i32 0, i32 0
  %477 = load %struct.canvas*, %struct.canvas** %l_cvlist847, align 8
  %c_display848 = getelementptr inbounds %struct.canvas, %struct.canvas* %477, i32 0, i32 1
  %478 = load %struct.display*, %struct.display** %c_display848, align 8
  store %struct.display* %478, %struct.display** @display, align 8
  br label %if.end.849

if.end.849:                                       ; preds = %if.then.845, %do.end.841
  %479 = load %struct.win*, %struct.win** @fore, align 8
  %w_savelayer850 = getelementptr inbounds %struct.win, %struct.win* %479, i32 0, i32 4
  %480 = load %struct.layer*, %struct.layer** %w_savelayer850, align 8
  %tobool851 = icmp ne %struct.layer* %480, null
  br i1 %tobool851, label %cond.true.852, label %cond.false.854

cond.true.852:                                    ; preds = %if.end.849
  %481 = load %struct.win*, %struct.win** @fore, align 8
  %w_savelayer853 = getelementptr inbounds %struct.win, %struct.win* %481, i32 0, i32 4
  %482 = load %struct.layer*, %struct.layer** %w_savelayer853, align 8
  br label %cond.end.856

cond.false.854:                                   ; preds = %if.end.849
  %483 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer855 = getelementptr inbounds %struct.win, %struct.win* %483, i32 0, i32 3
  br label %cond.end.856

cond.end.856:                                     ; preds = %cond.false.854, %cond.true.852
  %cond857 = phi %struct.layer* [ %482, %cond.true.852 ], [ %w_layer855, %cond.false.854 ]
  store %struct.layer* %cond857, %struct.layer** @flayer, align 8
  %484 = load i8**, i8*** %args, align 8
  %add.ptr858 = getelementptr inbounds i8*, i8** %484, i64 1
  %485 = load i32*, i32** %argl, align 8
  %add.ptr859 = getelementptr inbounds i32, i32* %485, i64 1
  call void @DoCommand(i8** %add.ptr858, i32* %add.ptr859)
  %486 = load %struct.win*, %struct.win** @fore, align 8
  %tobool860 = icmp ne %struct.win* %486, null
  br i1 %tobool860, label %land.lhs.true.861, label %if.end.886

land.lhs.true.861:                                ; preds = %cond.end.856
  %487 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer862 = getelementptr inbounds %struct.win, %struct.win* %487, i32 0, i32 3
  %l_cvlist863 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer862, i32 0, i32 0
  %488 = load %struct.canvas*, %struct.canvas** %l_cvlist863, align 8
  %tobool864 = icmp ne %struct.canvas* %488, null
  br i1 %tobool864, label %if.then.865, label %if.end.886

if.then.865:                                      ; preds = %land.lhs.true.861
  %489 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer866 = getelementptr inbounds %struct.win, %struct.win* %489, i32 0, i32 3
  %l_cvlist867 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer866, i32 0, i32 0
  %490 = load %struct.canvas*, %struct.canvas** %l_cvlist867, align 8
  %c_display868 = getelementptr inbounds %struct.canvas, %struct.canvas* %490, i32 0, i32 1
  %491 = load %struct.display*, %struct.display** %c_display868, align 8
  store %struct.display* %491, %struct.display** @display, align 8
  %492 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet869 = getelementptr inbounds %struct.action, %struct.action* %492, i32 0, i32 3
  %493 = load i32, i32* %quiet869, align 4
  %tobool870 = icmp ne i32 %493, 0
  br i1 %tobool870, label %cond.false.872, label %cond.true.871

cond.true.871:                                    ; preds = %if.then.865
  br label %cond.end.876

cond.false.872:                                   ; preds = %if.then.865
  %494 = load i32, i32* @queryflag, align 4
  %cmp873 = icmp sge i32 %494, 0
  %cond875 = select i1 %cmp873, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.876

cond.end.876:                                     ; preds = %cond.false.872, %cond.true.871
  %cond877 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.871 ], [ %cond875, %cond.false.872 ]
  %495 = load i8*, i8** %s, align 8
  %496 = load i8**, i8*** %args, align 8
  %arrayidx878 = getelementptr inbounds i8*, i8** %496, i64 1
  %497 = load i8*, i8** %arrayidx878, align 8
  %498 = load i8**, i8*** %args, align 8
  %arrayidx879 = getelementptr inbounds i8*, i8** %498, i64 2
  %499 = load i8*, i8** %arrayidx879, align 8
  %tobool880 = icmp ne i8* %499, null
  br i1 %tobool880, label %cond.true.881, label %cond.false.883

cond.true.881:                                    ; preds = %cond.end.876
  %500 = load i8**, i8*** %args, align 8
  %arrayidx882 = getelementptr inbounds i8*, i8** %500, i64 2
  %501 = load i8*, i8** %arrayidx882, align 8
  br label %cond.end.884

cond.false.883:                                   ; preds = %cond.end.876
  br label %cond.end.884

cond.end.884:                                     ; preds = %cond.false.883, %cond.true.881
  %cond885 = phi i8* [ %501, %cond.true.881 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), %cond.false.883 ]
  call void (i32, i8*, ...) %cond877(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i32 0, i32 0), i8* %495, i8* %497, i8* %cond885)
  br label %if.end.886

if.end.886:                                       ; preds = %cond.end.884, %land.lhs.true.861, %cond.end.856
  store %struct.display* null, %struct.display** @display, align 8
  store %struct.win* null, %struct.win** @fore, align 8
  br label %if.end.897

if.else.887:                                      ; preds = %land.lhs.true.831, %if.else.828
  %502 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet888 = getelementptr inbounds %struct.action, %struct.action* %502, i32 0, i32 3
  %503 = load i32, i32* %quiet888, align 4
  %tobool889 = icmp ne i32 %503, 0
  br i1 %tobool889, label %cond.false.891, label %cond.true.890

cond.true.890:                                    ; preds = %if.else.887
  br label %cond.end.895

cond.false.891:                                   ; preds = %if.else.887
  %504 = load i32, i32* @queryflag, align 4
  %cmp892 = icmp sge i32 %504, 0
  %cond894 = select i1 %cmp892, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.895

cond.end.895:                                     ; preds = %cond.false.891, %cond.true.890
  %cond896 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.890 ], [ %cond894, %cond.false.891 ]
  %505 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond896(i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.45, i32 0, i32 0), i8* %505)
  br label %if.end.897

if.end.897:                                       ; preds = %cond.end.895, %if.end.886
  br label %if.end.898

if.end.898:                                       ; preds = %if.end.897
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end.898, %if.end.827, %for.end.735, %for.end.660, %cond.end.616
  %506 = load i8*, i8** %s, align 8
  call void @free(i8* %506) #4
  store %struct.acluser* null, %struct.acluser** @EffectiveAclUser, align 8
  br label %sw.epilog.7356

sw.bb.899:                                        ; preds = %land.end
  %507 = load %struct.win*, %struct.win** @fore, align 8
  %tobool900 = icmp ne %struct.win* %507, null
  br i1 %tobool900, label %cond.true.901, label %cond.false.903

cond.true.901:                                    ; preds = %sw.bb.899
  %508 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer902 = getelementptr inbounds %struct.win, %struct.win* %508, i32 0, i32 3
  %l_encoding = getelementptr inbounds %struct.layer, %struct.layer* %w_layer902, i32 0, i32 5
  %509 = load i32, i32* %l_encoding, align 4
  br label %cond.end.909

cond.false.903:                                   ; preds = %sw.bb.899
  %510 = load %struct.display*, %struct.display** @display, align 8
  %tobool904 = icmp ne %struct.display* %510, null
  br i1 %tobool904, label %cond.true.905, label %cond.false.906

cond.true.905:                                    ; preds = %cond.false.903
  %511 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding = getelementptr inbounds %struct.display, %struct.display* %511, i32 0, i32 28
  %512 = load i32, i32* %d_encoding, align 4
  br label %cond.end.907

cond.false.906:                                   ; preds = %cond.false.903
  br label %cond.end.907

cond.end.907:                                     ; preds = %cond.false.906, %cond.true.905
  %cond908 = phi i32 [ %512, %cond.true.905 ], [ 0, %cond.false.906 ]
  br label %cond.end.909

cond.end.909:                                     ; preds = %cond.end.907, %cond.true.901
  %cond910 = phi i32 [ %509, %cond.true.901 ], [ %cond908, %cond.end.907 ]
  store i32 %cond910, i32* %i, align 4
  %513 = load i8**, i8*** %args, align 8
  %arrayidx911 = getelementptr inbounds i8*, i8** %513, i64 0
  %514 = load i8*, i8** %arrayidx911, align 8
  %tobool912 = icmp ne i8* %514, null
  br i1 %tobool912, label %land.lhs.true.913, label %if.end.937

land.lhs.true.913:                                ; preds = %cond.end.909
  %515 = load i8**, i8*** %args, align 8
  %arrayidx914 = getelementptr inbounds i8*, i8** %515, i64 1
  %516 = load i8*, i8** %arrayidx914, align 8
  %tobool915 = icmp ne i8* %516, null
  br i1 %tobool915, label %land.lhs.true.916, label %if.end.937

land.lhs.true.916:                                ; preds = %land.lhs.true.913
  %517 = load i8**, i8*** %args, align 8
  %arrayidx917 = getelementptr inbounds i8*, i8** %517, i64 0
  %518 = load i8*, i8** %arrayidx917, align 8
  %call918 = call i32 @strcmp(i8* %518, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0)) #8
  %tobool919 = icmp ne i32 %call918, 0
  br i1 %tobool919, label %if.end.937, label %if.then.920

if.then.920:                                      ; preds = %land.lhs.true.916
  %519 = load i8**, i8*** %args, align 8
  %arrayidx921 = getelementptr inbounds i8*, i8** %519, i64 1
  %520 = load i8*, i8** %arrayidx921, align 8
  %call922 = call i32 @FindEncoding(i8* %520)
  store i32 %call922, i32* %i, align 4
  %521 = load i32, i32* %i, align 4
  %cmp923 = icmp eq i32 %521, -1
  br i1 %cmp923, label %if.then.925, label %if.end.935

if.then.925:                                      ; preds = %if.then.920
  %522 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet926 = getelementptr inbounds %struct.action, %struct.action* %522, i32 0, i32 3
  %523 = load i32, i32* %quiet926, align 4
  %tobool927 = icmp ne i32 %523, 0
  br i1 %tobool927, label %cond.false.929, label %cond.true.928

cond.true.928:                                    ; preds = %if.then.925
  br label %cond.end.933

cond.false.929:                                   ; preds = %if.then.925
  %524 = load i32, i32* @queryflag, align 4
  %cmp930 = icmp sge i32 %524, 0
  %cond932 = select i1 %cmp930, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.933

cond.end.933:                                     ; preds = %cond.false.929, %cond.true.928
  %cond934 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.928 ], [ %cond932, %cond.false.929 ]
  %525 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond934(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i32 0, i32 0), i8* %525)
  br label %sw.epilog.7356

if.end.935:                                       ; preds = %if.then.920
  %526 = load i8**, i8*** %args, align 8
  %add.ptr936 = getelementptr inbounds i8*, i8** %526, i64 2
  store i8** %add.ptr936, i8*** %args, align 8
  br label %if.end.937

if.end.937:                                       ; preds = %if.end.935, %land.lhs.true.916, %land.lhs.true.913, %cond.end.909
  %527 = load i8**, i8*** %args, align 8
  %528 = load i8*, i8** %527, align 8
  store i8* %528, i8** %s, align 8
  %cmp938 = icmp eq i8* %528, null
  br i1 %cmp938, label %if.then.940, label %if.end.941

if.then.940:                                      ; preds = %if.end.937
  call void @Input(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i32 0, i32 0), i32 1, i32 2, void (i8*, i32, i8*)* @copy_reg_fn, i8* null, i32 0)
  br label %sw.epilog.7356

if.end.941:                                       ; preds = %if.end.937
  %529 = load i32*, i32** %argl, align 8
  %530 = load i32, i32* %529, align 4
  %cmp942 = icmp ne i32 %530, 1
  br i1 %cmp942, label %if.then.944, label %if.end.954

if.then.944:                                      ; preds = %if.end.941
  %531 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet945 = getelementptr inbounds %struct.action, %struct.action* %531, i32 0, i32 3
  %532 = load i32, i32* %quiet945, align 4
  %tobool946 = icmp ne i32 %532, 0
  br i1 %tobool946, label %cond.false.948, label %cond.true.947

cond.true.947:                                    ; preds = %if.then.944
  br label %cond.end.952

cond.false.948:                                   ; preds = %if.then.944
  %533 = load i32, i32* @queryflag, align 4
  %cmp949 = icmp sge i32 %533, 0
  %cond951 = select i1 %cmp949, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.952

cond.end.952:                                     ; preds = %cond.false.948, %cond.true.947
  %cond953 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.947 ], [ %cond951, %cond.false.948 ]
  %534 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond953(i32 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.49, i32 0, i32 0), i8* %534)
  br label %sw.epilog.7356

if.end.954:                                       ; preds = %if.end.941
  %535 = load i8**, i8*** %args, align 8
  %arrayidx955 = getelementptr inbounds i8*, i8** %535, i64 0
  %536 = load i8*, i8** %arrayidx955, align 8
  %arrayidx956 = getelementptr inbounds i8, i8* %536, i64 0
  %537 = load i8, i8* %arrayidx956, align 1
  store i8 %537, i8* %ch, align 1
  %538 = load i8**, i8*** %args, align 8
  %arrayidx957 = getelementptr inbounds i8*, i8** %538, i64 1
  %539 = load i8*, i8** %arrayidx957, align 8
  %tobool958 = icmp ne i8* %539, null
  br i1 %tobool958, label %if.then.959, label %if.else.985

if.then.959:                                      ; preds = %if.end.954
  %540 = load i8**, i8*** %args, align 8
  %arrayidx960 = getelementptr inbounds i8*, i8** %540, i64 2
  %541 = load i8*, i8** %arrayidx960, align 8
  %tobool961 = icmp ne i8* %541, null
  br i1 %tobool961, label %if.then.962, label %if.end.972

if.then.962:                                      ; preds = %if.then.959
  %542 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet963 = getelementptr inbounds %struct.action, %struct.action* %542, i32 0, i32 3
  %543 = load i32, i32* %quiet963, align 4
  %tobool964 = icmp ne i32 %543, 0
  br i1 %tobool964, label %cond.false.966, label %cond.true.965

cond.true.965:                                    ; preds = %if.then.962
  br label %cond.end.970

cond.false.966:                                   ; preds = %if.then.962
  %544 = load i32, i32* @queryflag, align 4
  %cmp967 = icmp sge i32 %544, 0
  %cond969 = select i1 %cmp967, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.970

cond.end.970:                                     ; preds = %cond.false.966, %cond.true.965
  %cond971 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.965 ], [ %cond969, %cond.false.966 ]
  %545 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond971(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.50, i32 0, i32 0), i8* %545)
  br label %sw.epilog.7356

if.end.972:                                       ; preds = %if.then.959
  %546 = load i8**, i8*** %args, align 8
  %arrayidx973 = getelementptr inbounds i8*, i8** %546, i64 1
  %547 = load i8*, i8** %arrayidx973, align 8
  %call974 = call i8* @ReadFile(i8* %547, i32* %n)
  store i8* %call974, i8** %s, align 8
  %tobool975 = icmp ne i8* %call974, null
  br i1 %tobool975, label %if.then.976, label %if.end.984

if.then.976:                                      ; preds = %if.end.972
  %548 = load i8, i8* %ch, align 1
  %conv977 = zext i8 %548 to i32
  %idx.ext = sext i32 %conv977 to i64
  %add.ptr978 = getelementptr inbounds %struct.plop, %struct.plop* getelementptr inbounds ([256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i32 0), i64 %idx.ext
  store %struct.plop* %add.ptr978, %struct.plop** %pp, align 8
  %549 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf = getelementptr inbounds %struct.plop, %struct.plop* %549, i32 0, i32 0
  %550 = load i8*, i8** %buf, align 8
  %tobool979 = icmp ne i8* %550, null
  br i1 %tobool979, label %if.then.980, label %if.end.982

if.then.980:                                      ; preds = %if.then.976
  %551 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf981 = getelementptr inbounds %struct.plop, %struct.plop* %551, i32 0, i32 0
  %552 = load i8*, i8** %buf981, align 8
  call void @free(i8* %552) #4
  br label %if.end.982

if.end.982:                                       ; preds = %if.then.980, %if.then.976
  %553 = load i8*, i8** %s, align 8
  %554 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf983 = getelementptr inbounds %struct.plop, %struct.plop* %554, i32 0, i32 0
  store i8* %553, i8** %buf983, align 8
  %555 = load i32, i32* %n, align 4
  %556 = load %struct.plop*, %struct.plop** %pp, align 8
  %len = getelementptr inbounds %struct.plop, %struct.plop* %556, i32 0, i32 1
  store i32 %555, i32* %len, align 4
  %557 = load i32, i32* %i, align 4
  %558 = load %struct.plop*, %struct.plop** %pp, align 8
  %enc = getelementptr inbounds %struct.plop, %struct.plop* %558, i32 0, i32 2
  store i32 %557, i32* %enc, align 4
  br label %if.end.984

if.end.984:                                       ; preds = %if.end.982, %if.end.972
  br label %if.end.986

if.else.985:                                      ; preds = %if.end.954
  call void @copy_reg_fn(i8* %ch, i32 0, i8* null)
  br label %if.end.986

if.end.986:                                       ; preds = %if.else.985, %if.end.984
  br label %sw.epilog.7356

sw.bb.987:                                        ; preds = %land.end
  %559 = load %struct.win*, %struct.win** @fore, align 8
  %tobool988 = icmp ne %struct.win* %559, null
  br i1 %tobool988, label %cond.true.989, label %cond.false.992

cond.true.989:                                    ; preds = %sw.bb.987
  %560 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer990 = getelementptr inbounds %struct.win, %struct.win* %560, i32 0, i32 3
  %l_encoding991 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer990, i32 0, i32 5
  %561 = load i32, i32* %l_encoding991, align 4
  br label %cond.end.999

cond.false.992:                                   ; preds = %sw.bb.987
  %562 = load %struct.display*, %struct.display** @display, align 8
  %tobool993 = icmp ne %struct.display* %562, null
  br i1 %tobool993, label %cond.true.994, label %cond.false.996

cond.true.994:                                    ; preds = %cond.false.992
  %563 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding995 = getelementptr inbounds %struct.display, %struct.display* %563, i32 0, i32 28
  %564 = load i32, i32* %d_encoding995, align 4
  br label %cond.end.997

cond.false.996:                                   ; preds = %cond.false.992
  br label %cond.end.997

cond.end.997:                                     ; preds = %cond.false.996, %cond.true.994
  %cond998 = phi i32 [ %564, %cond.true.994 ], [ 0, %cond.false.996 ]
  br label %cond.end.999

cond.end.999:                                     ; preds = %cond.end.997, %cond.true.989
  %cond1000 = phi i32 [ %561, %cond.true.989 ], [ %cond998, %cond.end.997 ]
  store i32 %cond1000, i32* %i, align 4
  %565 = load i8**, i8*** %args, align 8
  %arrayidx1001 = getelementptr inbounds i8*, i8** %565, i64 0
  %566 = load i8*, i8** %arrayidx1001, align 8
  %tobool1002 = icmp ne i8* %566, null
  br i1 %tobool1002, label %land.lhs.true.1003, label %if.end.1028

land.lhs.true.1003:                               ; preds = %cond.end.999
  %567 = load i8**, i8*** %args, align 8
  %arrayidx1004 = getelementptr inbounds i8*, i8** %567, i64 1
  %568 = load i8*, i8** %arrayidx1004, align 8
  %tobool1005 = icmp ne i8* %568, null
  br i1 %tobool1005, label %land.lhs.true.1006, label %if.end.1028

land.lhs.true.1006:                               ; preds = %land.lhs.true.1003
  %569 = load i8**, i8*** %args, align 8
  %arrayidx1007 = getelementptr inbounds i8*, i8** %569, i64 0
  %570 = load i8*, i8** %arrayidx1007, align 8
  %call1008 = call i32 @strcmp(i8* %570, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0)) #8
  %tobool1009 = icmp ne i32 %call1008, 0
  br i1 %tobool1009, label %if.end.1028, label %if.then.1010

if.then.1010:                                     ; preds = %land.lhs.true.1006
  %571 = load i8**, i8*** %args, align 8
  %arrayidx1011 = getelementptr inbounds i8*, i8** %571, i64 1
  %572 = load i8*, i8** %arrayidx1011, align 8
  %call1012 = call i32 @FindEncoding(i8* %572)
  store i32 %call1012, i32* %i, align 4
  %573 = load i32, i32* %i, align 4
  %cmp1013 = icmp eq i32 %573, -1
  br i1 %cmp1013, label %if.then.1015, label %if.end.1025

if.then.1015:                                     ; preds = %if.then.1010
  %574 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1016 = getelementptr inbounds %struct.action, %struct.action* %574, i32 0, i32 3
  %575 = load i32, i32* %quiet1016, align 4
  %tobool1017 = icmp ne i32 %575, 0
  br i1 %tobool1017, label %cond.false.1019, label %cond.true.1018

cond.true.1018:                                   ; preds = %if.then.1015
  br label %cond.end.1023

cond.false.1019:                                  ; preds = %if.then.1015
  %576 = load i32, i32* @queryflag, align 4
  %cmp1020 = icmp sge i32 %576, 0
  %cond1022 = select i1 %cmp1020, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1023

cond.end.1023:                                    ; preds = %cond.false.1019, %cond.true.1018
  %cond1024 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1018 ], [ %cond1022, %cond.false.1019 ]
  %577 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond1024(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.51, i32 0, i32 0), i8* %577)
  br label %sw.epilog.7356

if.end.1025:                                      ; preds = %if.then.1010
  %578 = load i8**, i8*** %args, align 8
  %add.ptr1026 = getelementptr inbounds i8*, i8** %578, i64 2
  store i8** %add.ptr1026, i8*** %args, align 8
  %579 = load i32, i32* %argc, align 4
  %sub1027 = sub nsw i32 %579, 2
  store i32 %sub1027, i32* %argc, align 4
  br label %if.end.1028

if.end.1028:                                      ; preds = %if.end.1025, %land.lhs.true.1006, %land.lhs.true.1003, %cond.end.999
  %580 = load i32, i32* %argc, align 4
  %cmp1029 = icmp ne i32 %580, 2
  br i1 %cmp1029, label %if.then.1031, label %if.end.1041

if.then.1031:                                     ; preds = %if.end.1028
  %581 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1032 = getelementptr inbounds %struct.action, %struct.action* %581, i32 0, i32 3
  %582 = load i32, i32* %quiet1032, align 4
  %tobool1033 = icmp ne i32 %582, 0
  br i1 %tobool1033, label %cond.false.1035, label %cond.true.1034

cond.true.1034:                                   ; preds = %if.then.1031
  br label %cond.end.1039

cond.false.1035:                                  ; preds = %if.then.1031
  %583 = load i32, i32* @queryflag, align 4
  %cmp1036 = icmp sge i32 %583, 0
  %cond1038 = select i1 %cmp1036, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1039

cond.end.1039:                                    ; preds = %cond.false.1035, %cond.true.1034
  %cond1040 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1034 ], [ %cond1038, %cond.false.1035 ]
  %584 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond1040(i32 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.52, i32 0, i32 0), i8* %584)
  br label %sw.epilog.7356

if.end.1041:                                      ; preds = %if.end.1028
  %585 = load i32*, i32** %argl, align 8
  %586 = load i32, i32* %585, align 4
  %cmp1042 = icmp ne i32 %586, 1
  br i1 %cmp1042, label %if.then.1044, label %if.end.1054

if.then.1044:                                     ; preds = %if.end.1041
  %587 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1045 = getelementptr inbounds %struct.action, %struct.action* %587, i32 0, i32 3
  %588 = load i32, i32* %quiet1045, align 4
  %tobool1046 = icmp ne i32 %588, 0
  br i1 %tobool1046, label %cond.false.1048, label %cond.true.1047

cond.true.1047:                                   ; preds = %if.then.1044
  br label %cond.end.1052

cond.false.1048:                                  ; preds = %if.then.1044
  %589 = load i32, i32* @queryflag, align 4
  %cmp1049 = icmp sge i32 %589, 0
  %cond1051 = select i1 %cmp1049, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1052

cond.end.1052:                                    ; preds = %cond.false.1048, %cond.true.1047
  %cond1053 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1047 ], [ %cond1051, %cond.false.1048 ]
  %590 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond1053(i32 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i32 0, i32 0), i8* %590)
  br label %sw.epilog.7356

if.end.1054:                                      ; preds = %if.end.1041
  %591 = load i8**, i8*** %args, align 8
  %arrayidx1055 = getelementptr inbounds i8*, i8** %591, i64 0
  %592 = load i8*, i8** %arrayidx1055, align 8
  %arrayidx1056 = getelementptr inbounds i8, i8* %592, i64 0
  %593 = load i8, i8* %arrayidx1056, align 1
  store i8 %593, i8* %ch, align 1
  %594 = load i8, i8* %ch, align 1
  %conv1057 = sext i8 %594 to i32
  %cmp1058 = icmp eq i32 %conv1057, 46
  br i1 %cmp1058, label %if.then.1060, label %if.else.1086

if.then.1060:                                     ; preds = %if.end.1054
  %595 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop = getelementptr inbounds %struct.acluser, %struct.acluser* %595, i32 0, i32 8
  %buf1061 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop, i32 0, i32 0
  %596 = load i8*, i8** %buf1061, align 8
  %cmp1062 = icmp ne i8* %596, null
  br i1 %cmp1062, label %if.then.1064, label %if.end.1066

if.then.1064:                                     ; preds = %if.then.1060
  %597 = load %struct.acluser*, %struct.acluser** %user, align 8
  %call1065 = call i32 @UserFreeCopyBuffer(%struct.acluser* %597)
  br label %if.end.1066

if.end.1066:                                      ; preds = %if.then.1064, %if.then.1060
  %598 = load i8**, i8*** %args, align 8
  %arrayidx1067 = getelementptr inbounds i8*, i8** %598, i64 1
  %599 = load i8*, i8** %arrayidx1067, align 8
  %tobool1068 = icmp ne i8* %599, null
  br i1 %tobool1068, label %land.lhs.true.1069, label %if.end.1085

land.lhs.true.1069:                               ; preds = %if.end.1066
  %600 = load i8**, i8*** %args, align 8
  %arrayidx1070 = getelementptr inbounds i8*, i8** %600, i64 1
  %601 = load i8*, i8** %arrayidx1070, align 8
  %arrayidx1071 = getelementptr inbounds i8, i8* %601, i64 0
  %602 = load i8, i8* %arrayidx1071, align 1
  %conv1072 = sext i8 %602 to i32
  %tobool1073 = icmp ne i32 %conv1072, 0
  br i1 %tobool1073, label %if.then.1074, label %if.end.1085

if.then.1074:                                     ; preds = %land.lhs.true.1069
  %603 = load i8**, i8*** %args, align 8
  %arrayidx1075 = getelementptr inbounds i8*, i8** %603, i64 1
  %604 = load i8*, i8** %arrayidx1075, align 8
  %605 = load i32*, i32** %argl, align 8
  %arrayidx1076 = getelementptr inbounds i32, i32* %605, i64 1
  %606 = load i32, i32* %arrayidx1076, align 4
  %call1077 = call i8* @SaveStrn(i8* %604, i32 %606)
  %607 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop1078 = getelementptr inbounds %struct.acluser, %struct.acluser* %607, i32 0, i32 8
  %buf1079 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop1078, i32 0, i32 0
  store i8* %call1077, i8** %buf1079, align 8
  %608 = load i32*, i32** %argl, align 8
  %arrayidx1080 = getelementptr inbounds i32, i32* %608, i64 1
  %609 = load i32, i32* %arrayidx1080, align 4
  %610 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop1081 = getelementptr inbounds %struct.acluser, %struct.acluser* %610, i32 0, i32 8
  %len1082 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop1081, i32 0, i32 1
  store i32 %609, i32* %len1082, align 4
  %611 = load i32, i32* %i, align 4
  %612 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop1083 = getelementptr inbounds %struct.acluser, %struct.acluser* %612, i32 0, i32 8
  %enc1084 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop1083, i32 0, i32 2
  store i32 %611, i32* %enc1084, align 4
  br label %if.end.1085

if.end.1085:                                      ; preds = %if.then.1074, %land.lhs.true.1069, %if.end.1066
  br label %if.end.1102

if.else.1086:                                     ; preds = %if.end.1054
  %613 = load i8, i8* %ch, align 1
  %conv1087 = zext i8 %613 to i32
  %idx.ext1088 = sext i32 %conv1087 to i64
  %add.ptr1089 = getelementptr inbounds %struct.plop, %struct.plop* getelementptr inbounds ([256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i32 0), i64 %idx.ext1088
  store %struct.plop* %add.ptr1089, %struct.plop** %plp, align 8
  %614 = load %struct.plop*, %struct.plop** %plp, align 8
  %buf1090 = getelementptr inbounds %struct.plop, %struct.plop* %614, i32 0, i32 0
  %615 = load i8*, i8** %buf1090, align 8
  %tobool1091 = icmp ne i8* %615, null
  br i1 %tobool1091, label %if.then.1092, label %if.end.1094

if.then.1092:                                     ; preds = %if.else.1086
  %616 = load %struct.plop*, %struct.plop** %plp, align 8
  %buf1093 = getelementptr inbounds %struct.plop, %struct.plop* %616, i32 0, i32 0
  %617 = load i8*, i8** %buf1093, align 8
  call void @free(i8* %617) #4
  br label %if.end.1094

if.end.1094:                                      ; preds = %if.then.1092, %if.else.1086
  %618 = load i8**, i8*** %args, align 8
  %arrayidx1095 = getelementptr inbounds i8*, i8** %618, i64 1
  %619 = load i8*, i8** %arrayidx1095, align 8
  %620 = load i32*, i32** %argl, align 8
  %arrayidx1096 = getelementptr inbounds i32, i32* %620, i64 1
  %621 = load i32, i32* %arrayidx1096, align 4
  %call1097 = call i8* @SaveStrn(i8* %619, i32 %621)
  %622 = load %struct.plop*, %struct.plop** %plp, align 8
  %buf1098 = getelementptr inbounds %struct.plop, %struct.plop* %622, i32 0, i32 0
  store i8* %call1097, i8** %buf1098, align 8
  %623 = load i32*, i32** %argl, align 8
  %arrayidx1099 = getelementptr inbounds i32, i32* %623, i64 1
  %624 = load i32, i32* %arrayidx1099, align 4
  %625 = load %struct.plop*, %struct.plop** %plp, align 8
  %len1100 = getelementptr inbounds %struct.plop, %struct.plop* %625, i32 0, i32 1
  store i32 %624, i32* %len1100, align 4
  %626 = load i32, i32* %i, align 4
  %627 = load %struct.plop*, %struct.plop** %plp, align 8
  %enc1101 = getelementptr inbounds %struct.plop, %struct.plop* %627, i32 0, i32 2
  store i32 %626, i32* %enc1101, align 4
  br label %if.end.1102

if.end.1102:                                      ; preds = %if.end.1094, %if.end.1085
  br label %sw.epilog.7356

sw.bb.1103:                                       ; preds = %land.end
  %628 = load i8**, i8*** %args, align 8
  %629 = load i8*, i8** %628, align 8
  store i8* %629, i8** %s, align 8
  %cmp1104 = icmp eq i8* %629, null
  br i1 %cmp1104, label %if.then.1106, label %if.end.1107

if.then.1106:                                     ; preds = %sw.bb.1103
  call void @Input(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i32 0, i32 0), i32 1, i32 2, void (i8*, i32, i8*)* @process_fn, i8* null, i32 0)
  br label %sw.epilog.7356

if.end.1107:                                      ; preds = %sw.bb.1103
  %630 = load i32*, i32** %argl, align 8
  %631 = load i32, i32* %630, align 4
  %cmp1108 = icmp ne i32 %631, 1
  br i1 %cmp1108, label %if.then.1110, label %if.end.1120

if.then.1110:                                     ; preds = %if.end.1107
  %632 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1111 = getelementptr inbounds %struct.action, %struct.action* %632, i32 0, i32 3
  %633 = load i32, i32* %quiet1111, align 4
  %tobool1112 = icmp ne i32 %633, 0
  br i1 %tobool1112, label %cond.false.1114, label %cond.true.1113

cond.true.1113:                                   ; preds = %if.then.1110
  br label %cond.end.1118

cond.false.1114:                                  ; preds = %if.then.1110
  %634 = load i32, i32* @queryflag, align 4
  %cmp1115 = icmp sge i32 %634, 0
  %cond1117 = select i1 %cmp1115, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1118

cond.end.1118:                                    ; preds = %cond.false.1114, %cond.true.1113
  %cond1119 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1113 ], [ %cond1117, %cond.false.1114 ]
  %635 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond1119(i32 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.55, i32 0, i32 0), i8* %635)
  br label %sw.epilog.7356

if.end.1120:                                      ; preds = %if.end.1107
  %636 = load i8**, i8*** %args, align 8
  %arrayidx1121 = getelementptr inbounds i8*, i8** %636, i64 0
  %637 = load i8*, i8** %arrayidx1121, align 8
  %arrayidx1122 = getelementptr inbounds i8, i8* %637, i64 0
  %638 = load i8, i8* %arrayidx1122, align 1
  store i8 %638, i8* %ch, align 1
  call void @process_fn(i8* %ch, i32 0, i8* null)
  br label %sw.epilog.7356

sw.bb.1123:                                       ; preds = %land.end
  %639 = load i8**, i8*** %args, align 8
  %640 = load i8*, i8** %639, align 8
  store i8* %640, i8** %s, align 8
  %641 = load i8**, i8*** %args, align 8
  %arrayidx1124 = getelementptr inbounds i8*, i8** %641, i64 0
  %642 = load i8*, i8** %arrayidx1124, align 8
  %tobool1125 = icmp ne i8* %642, null
  br i1 %tobool1125, label %if.end.1127, label %if.then.1126

if.then.1126:                                     ; preds = %sw.bb.1123
  call void @Input(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i32 100, i32 0, void (i8*, i32, i8*)* @StuffFin, i8* null, i32 0)
  br label %sw.epilog.7356

if.end.1127:                                      ; preds = %sw.bb.1123
  %643 = load i32*, i32** %argl, align 8
  %644 = load i32, i32* %643, align 4
  store i32 %644, i32* %n, align 4
  %645 = load i8**, i8*** %args, align 8
  %arrayidx1128 = getelementptr inbounds i8*, i8** %645, i64 1
  %646 = load i8*, i8** %arrayidx1128, align 8
  %tobool1129 = icmp ne i8* %646, null
  br i1 %tobool1129, label %if.then.1130, label %if.end.1191

if.then.1130:                                     ; preds = %if.end.1127
  %647 = load i8*, i8** %s, align 8
  %call1131 = call i32 @strcmp(i8* %647, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0)) #8
  %tobool1132 = icmp ne i32 %call1131, 0
  br i1 %tobool1132, label %if.then.1133, label %if.end.1143

if.then.1133:                                     ; preds = %if.then.1130
  %648 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1134 = getelementptr inbounds %struct.action, %struct.action* %648, i32 0, i32 3
  %649 = load i32, i32* %quiet1134, align 4
  %tobool1135 = icmp ne i32 %649, 0
  br i1 %tobool1135, label %cond.false.1137, label %cond.true.1136

cond.true.1136:                                   ; preds = %if.then.1133
  br label %cond.end.1141

cond.false.1137:                                  ; preds = %if.then.1133
  %650 = load i32, i32* @queryflag, align 4
  %cmp1138 = icmp sge i32 %650, 0
  %cond1140 = select i1 %cmp1138, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1141

cond.end.1141:                                    ; preds = %cond.false.1137, %cond.true.1136
  %cond1142 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1136 ], [ %cond1140, %cond.false.1137 ]
  %651 = load i8*, i8** @rc_name, align 8
  %652 = load i8*, i8** %s, align 8
  call void (i32, i8*, ...) %cond1142(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i32 0, i32 0), i8* %651, i8* %652)
  br label %sw.epilog.7356

if.end.1143:                                      ; preds = %if.then.1130
  %653 = load i8**, i8*** %args, align 8
  %arrayidx1144 = getelementptr inbounds i8*, i8** %653, i64 1
  %654 = load i8*, i8** %arrayidx1144, align 8
  store i8* %654, i8** %s, align 8
  store i32 106, i32* %i, align 4
  br label %for.cond.1145

for.cond.1145:                                    ; preds = %for.inc.1156, %if.end.1143
  %655 = load i32, i32* %i, align 4
  %cmp1146 = icmp slt i32 %655, 188
  br i1 %cmp1146, label %for.body.1148, label %for.end.1158

for.body.1148:                                    ; preds = %for.cond.1145
  %656 = load i32, i32* %i, align 4
  %idxprom1149 = sext i32 %656 to i64
  %arrayidx1150 = getelementptr inbounds [0 x %struct.term], [0 x %struct.term]* @term, i32 0, i64 %idxprom1149
  %tcname = getelementptr inbounds %struct.term, %struct.term* %arrayidx1150, i32 0, i32 0
  %657 = load i8*, i8** %tcname, align 8
  %658 = load i8*, i8** %s, align 8
  %call1151 = call i32 @strcmp(i8* %657, i8* %658) #8
  %cmp1152 = icmp eq i32 %call1151, 0
  br i1 %cmp1152, label %if.then.1154, label %if.end.1155

if.then.1154:                                     ; preds = %for.body.1148
  br label %for.end.1158

if.end.1155:                                      ; preds = %for.body.1148
  br label %for.inc.1156

for.inc.1156:                                     ; preds = %if.end.1155
  %659 = load i32, i32* %i, align 4
  %inc1157 = add nsw i32 %659, 1
  store i32 %inc1157, i32* %i, align 4
  br label %for.cond.1145

for.end.1158:                                     ; preds = %if.then.1154, %for.cond.1145
  %660 = load i32, i32* %i, align 4
  %cmp1159 = icmp eq i32 %660, 188
  br i1 %cmp1159, label %if.then.1161, label %if.end.1171

if.then.1161:                                     ; preds = %for.end.1158
  %661 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1162 = getelementptr inbounds %struct.action, %struct.action* %661, i32 0, i32 3
  %662 = load i32, i32* %quiet1162, align 4
  %tobool1163 = icmp ne i32 %662, 0
  br i1 %tobool1163, label %cond.false.1165, label %cond.true.1164

cond.true.1164:                                   ; preds = %if.then.1161
  br label %cond.end.1169

cond.false.1165:                                  ; preds = %if.then.1161
  %663 = load i32, i32* @queryflag, align 4
  %cmp1166 = icmp sge i32 %663, 0
  %cond1168 = select i1 %cmp1166, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1169

cond.end.1169:                                    ; preds = %cond.false.1165, %cond.true.1164
  %cond1170 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1164 ], [ %cond1168, %cond.false.1165 ]
  %664 = load i8*, i8** @rc_name, align 8
  %665 = load i8*, i8** %s, align 8
  call void (i32, i8*, ...) %cond1170(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i32 0, i32 0), i8* %664, i8* %665)
  br label %sw.epilog.7356

if.end.1171:                                      ; preds = %for.end.1158
  %666 = load i32, i32* %i, align 4
  %sub1172 = sub nsw i32 %666, 106
  %call1173 = call i32 @StuffKey(i32 %sub1172)
  %cmp1174 = icmp eq i32 %call1173, 0
  br i1 %cmp1174, label %if.then.1176, label %if.end.1177

if.then.1176:                                     ; preds = %if.end.1171
  br label %sw.epilog.7356

if.end.1177:                                      ; preds = %if.end.1171
  %667 = load %struct.display*, %struct.display** @display, align 8
  %tobool1178 = icmp ne %struct.display* %667, null
  br i1 %tobool1178, label %cond.true.1179, label %cond.false.1182

cond.true.1179:                                   ; preds = %if.end.1177
  %668 = load i32, i32* %i, align 4
  %idxprom1180 = sext i32 %668 to i64
  %669 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs = getelementptr inbounds %struct.display, %struct.display* %669, i32 0, i32 83
  %arrayidx1181 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs, i32 0, i64 %idxprom1180
  %str = bitcast %union.tcu* %arrayidx1181 to i8**
  %670 = load i8*, i8** %str, align 8
  br label %cond.end.1183

cond.false.1182:                                  ; preds = %if.end.1177
  br label %cond.end.1183

cond.end.1183:                                    ; preds = %cond.false.1182, %cond.true.1179
  %cond1184 = phi i8* [ %670, %cond.true.1179 ], [ null, %cond.false.1182 ]
  store i8* %cond1184, i8** %s, align 8
  %671 = load i8*, i8** %s, align 8
  %cmp1185 = icmp eq i8* %671, null
  br i1 %cmp1185, label %if.then.1187, label %if.end.1188

if.then.1187:                                     ; preds = %cond.end.1183
  br label %sw.epilog.7356

if.end.1188:                                      ; preds = %cond.end.1183
  %672 = load i8*, i8** %s, align 8
  %call1189 = call i64 @strlen(i8* %672) #8
  %conv1190 = trunc i64 %call1189 to i32
  store i32 %conv1190, i32* %n, align 4
  br label %if.end.1191

if.end.1191:                                      ; preds = %if.end.1188, %if.end.1127
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.1191
  %673 = load i32, i32* %n, align 4
  %tobool1192 = icmp ne i32 %673, 0
  br i1 %tobool1192, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %674 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn = getelementptr inbounds %struct.layer, %struct.layer* %674, i32 0, i32 6
  %675 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn, align 8
  %lf_LayProcess = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %675, i32 0, i32 0
  %676 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess, align 8
  call void %676(i8** %s, i32* %n)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %sw.epilog.7356

sw.bb.1193:                                       ; preds = %land.end
  call void @Activate(i32 -1)
  br label %sw.epilog.7356

sw.bb.1194:                                       ; preds = %land.end
  %677 = load i8**, i8*** %args, align 8
  %arrayidx1195 = getelementptr inbounds i8*, i8** %677, i64 0
  %678 = load i8*, i8** %arrayidx1195, align 8
  %tobool1196 = icmp ne i8* %678, null
  br i1 %tobool1196, label %if.then.1197, label %if.end.1199

if.then.1197:                                     ; preds = %sw.bb.1194
  %679 = load i8**, i8*** %args, align 8
  %arrayidx1198 = getelementptr inbounds i8*, i8** %679, i64 0
  %680 = load i8*, i8** %arrayidx1198, align 8
  call void @ShowWindowsX(i8* %680)
  br label %sw.epilog.7356

if.end.1199:                                      ; preds = %sw.bb.1194
  call void @ShowWindows(i32 -1)
  br label %sw.epilog.7356

sw.bb.1200:                                       ; preds = %land.end
  %681 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1201 = getelementptr inbounds %struct.action, %struct.action* %681, i32 0, i32 3
  %682 = load i32, i32* %quiet1201, align 4
  %tobool1202 = icmp ne i32 %682, 0
  br i1 %tobool1202, label %cond.false.1204, label %cond.true.1203

cond.true.1203:                                   ; preds = %sw.bb.1200
  br label %cond.end.1208

cond.false.1204:                                  ; preds = %sw.bb.1200
  %683 = load i32, i32* @queryflag, align 4
  %cmp1205 = icmp sge i32 %683, 0
  %cond1207 = select i1 %cmp1205, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1208

cond.end.1208:                                    ; preds = %cond.false.1204, %cond.true.1203
  %cond1209 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1203 ], [ %cond1207, %cond.false.1204 ]
  call void (i32, i8*, ...) %cond1209(i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @version, i32 0, i32 0))
  br label %sw.epilog.7356

sw.bb.1210:                                       ; preds = %land.end
  %684 = load i8**, i8*** %args, align 8
  %685 = load i8*, i8** %684, align 8
  %tobool1211 = icmp ne i8* %685, null
  br i1 %tobool1211, label %if.then.1212, label %if.end.1214

if.then.1212:                                     ; preds = %sw.bb.1210
  %686 = load i8**, i8*** %args, align 8
  %687 = load i8*, i8** %686, align 8
  %call1213 = call i8* @SaveStr(i8* %687)
  store i8* %call1213, i8** @timestring, align 8
  br label %sw.epilog.7356

if.end.1214:                                      ; preds = %sw.bb.1210
  %688 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1215 = getelementptr inbounds %struct.action, %struct.action* %688, i32 0, i32 3
  %689 = load i32, i32* %quiet1215, align 4
  %tobool1216 = icmp ne i32 %689, 0
  br i1 %tobool1216, label %cond.false.1218, label %cond.true.1217

cond.true.1217:                                   ; preds = %if.end.1214
  br label %cond.end.1222

cond.false.1218:                                  ; preds = %if.end.1214
  %690 = load i32, i32* @queryflag, align 4
  %cmp1219 = icmp sge i32 %690, 0
  %cond1221 = select i1 %cmp1219, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1222

cond.end.1222:                                    ; preds = %cond.false.1218, %cond.true.1217
  %cond1223 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1217 ], [ %cond1221, %cond.false.1218 ]
  %691 = load i8*, i8** @timestring, align 8
  %692 = load %struct.win*, %struct.win** @fore, align 8
  %call1224 = call i8* @MakeWinMsg(i8* %691, %struct.win* %692, i32 37)
  call void (i32, i8*, ...) %cond1223(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %call1224)
  br label %sw.epilog.7356

sw.bb.1225:                                       ; preds = %land.end
  call void @ShowInfo()
  br label %sw.epilog.7356

sw.bb.1226:                                       ; preds = %land.end
  call void @ShowDInfo()
  br label %sw.epilog.7356

sw.bb.1227:                                       ; preds = %land.end
  store %struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0), %struct.action** %ktabp, align 8
  %693 = load i32, i32* %argc, align 4
  %cmp1228 = icmp eq i32 %693, 2
  br i1 %cmp1228, label %land.lhs.true.1230, label %if.end.1250

land.lhs.true.1230:                               ; preds = %sw.bb.1227
  %694 = load i8**, i8*** %args, align 8
  %695 = load i8*, i8** %694, align 8
  %call1231 = call i32 @strcmp(i8* %695, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)) #8
  %tobool1232 = icmp ne i32 %call1231, 0
  br i1 %tobool1232, label %if.end.1250, label %if.then.1233

if.then.1233:                                     ; preds = %land.lhs.true.1230
  %696 = load i8**, i8*** %args, align 8
  %arrayidx1234 = getelementptr inbounds i8*, i8** %696, i64 1
  %697 = load i8*, i8** %arrayidx1234, align 8
  %call1235 = call %struct.action* @FindKtab(i8* %697, i32 0)
  store %struct.action* %call1235, %struct.action** %ktabp, align 8
  %cmp1236 = icmp eq %struct.action* %call1235, null
  br i1 %cmp1236, label %if.then.1238, label %if.end.1249

if.then.1238:                                     ; preds = %if.then.1233
  %698 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1239 = getelementptr inbounds %struct.action, %struct.action* %698, i32 0, i32 3
  %699 = load i32, i32* %quiet1239, align 4
  %tobool1240 = icmp ne i32 %699, 0
  br i1 %tobool1240, label %cond.false.1242, label %cond.true.1241

cond.true.1241:                                   ; preds = %if.then.1238
  br label %cond.end.1246

cond.false.1242:                                  ; preds = %if.then.1238
  %700 = load i32, i32* @queryflag, align 4
  %cmp1243 = icmp sge i32 %700, 0
  %cond1245 = select i1 %cmp1243, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1246

cond.end.1246:                                    ; preds = %cond.false.1242, %cond.true.1241
  %cond1247 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1241 ], [ %cond1245, %cond.false.1242 ]
  %701 = load i8**, i8*** %args, align 8
  %arrayidx1248 = getelementptr inbounds i8*, i8** %701, i64 1
  %702 = load i8*, i8** %arrayidx1248, align 8
  call void (i32, i8*, ...) %cond1247(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i32 0, i32 0), i8* %702)
  br label %sw.epilog.7356

if.end.1249:                                      ; preds = %if.then.1233
  br label %if.end.1250

if.end.1250:                                      ; preds = %if.end.1249, %land.lhs.true.1230, %sw.bb.1227
  %703 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen = getelementptr inbounds %struct.display, %struct.display* %703, i32 0, i32 56
  %704 = load %struct.action*, %struct.action** %d_ESCseen, align 8
  %cmp1251 = icmp ne %struct.action* %704, getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0)
  br i1 %cmp1251, label %if.then.1256, label %lor.lhs.false.1253

lor.lhs.false.1253:                               ; preds = %if.end.1250
  %705 = load %struct.action*, %struct.action** %ktabp, align 8
  %cmp1254 = icmp ne %struct.action* %705, getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0)
  br i1 %cmp1254, label %if.then.1256, label %if.end.1263

if.then.1256:                                     ; preds = %lor.lhs.false.1253, %if.end.1250
  %706 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen1257 = getelementptr inbounds %struct.display, %struct.display* %706, i32 0, i32 56
  %707 = load %struct.action*, %struct.action** %d_ESCseen1257, align 8
  %708 = load %struct.action*, %struct.action** %ktabp, align 8
  %cmp1258 = icmp ne %struct.action* %707, %708
  br i1 %cmp1258, label %if.then.1260, label %if.end.1262

if.then.1260:                                     ; preds = %if.then.1256
  %709 = load %struct.action*, %struct.action** %ktabp, align 8
  %710 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen1261 = getelementptr inbounds %struct.display, %struct.display* %710, i32 0, i32 56
  store %struct.action* %709, %struct.action** %d_ESCseen1261, align 8
  %711 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %711, i32 69)
  br label %if.end.1262

if.end.1262:                                      ; preds = %if.then.1260, %if.then.1256
  br label %sw.epilog.7356

if.end.1263:                                      ; preds = %lor.lhs.false.1253
  %712 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen1264 = getelementptr inbounds %struct.display, %struct.display* %712, i32 0, i32 56
  %713 = load %struct.action*, %struct.action** %d_ESCseen1264, align 8
  %tobool1265 = icmp ne %struct.action* %713, null
  br i1 %tobool1265, label %if.then.1266, label %if.end.1268

if.then.1266:                                     ; preds = %if.end.1263
  %714 = load %struct.display*, %struct.display** @display, align 8
  %d_ESCseen1267 = getelementptr inbounds %struct.display, %struct.display* %714, i32 0, i32 56
  store %struct.action* null, %struct.action** %d_ESCseen1267, align 8
  %715 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %715, i32 69)
  br label %if.end.1268

if.end.1268:                                      ; preds = %if.then.1266, %if.end.1263
  br label %sw.bb.1269

sw.bb.1269:                                       ; preds = %land.end, %if.end.1268
  %call1270 = call i32 @MoreWindows()
  %tobool1271 = icmp ne i32 %call1270, 0
  br i1 %tobool1271, label %if.then.1272, label %if.end.1283

if.then.1272:                                     ; preds = %sw.bb.1269
  %716 = load %struct.display*, %struct.display** @display, align 8
  %tobool1273 = icmp ne %struct.display* %716, null
  br i1 %tobool1273, label %land.lhs.true.1274, label %cond.false.1279

land.lhs.true.1274:                               ; preds = %if.then.1272
  %717 = load %struct.display*, %struct.display** @display, align 8
  %d_other = getelementptr inbounds %struct.display, %struct.display* %717, i32 0, i32 11
  %718 = load %struct.win*, %struct.win** %d_other, align 8
  %tobool1275 = icmp ne %struct.win* %718, null
  br i1 %tobool1275, label %cond.true.1276, label %cond.false.1279

cond.true.1276:                                   ; preds = %land.lhs.true.1274
  %719 = load %struct.display*, %struct.display** @display, align 8
  %d_other1277 = getelementptr inbounds %struct.display, %struct.display* %719, i32 0, i32 11
  %720 = load %struct.win*, %struct.win** %d_other1277, align 8
  %w_number1278 = getelementptr inbounds %struct.win, %struct.win* %720, i32 0, i32 9
  %721 = load i32, i32* %w_number1278, align 4
  br label %cond.end.1281

cond.false.1279:                                  ; preds = %land.lhs.true.1274, %if.then.1272
  %call1280 = call i32 @NextWindow()
  br label %cond.end.1281

cond.end.1281:                                    ; preds = %cond.false.1279, %cond.true.1276
  %cond1282 = phi i32 [ %721, %cond.true.1276 ], [ %call1280, %cond.false.1279 ]
  call void @SwitchWindow(i32 %cond1282)
  br label %if.end.1283

if.end.1283:                                      ; preds = %cond.end.1281, %sw.bb.1269
  br label %sw.epilog.7356

sw.bb.1284:                                       ; preds = %land.end
  %722 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_Esc = getelementptr inbounds %struct.acluser, %struct.acluser* %722, i32 0, i32 6
  %723 = load i32, i32* %u_Esc, align 4
  %cmp1285 = icmp eq i32 %723, -1
  br i1 %cmp1285, label %if.then.1287, label %if.end.1288

if.then.1287:                                     ; preds = %sw.bb.1284
  br label %sw.epilog.7356

if.end.1288:                                      ; preds = %sw.bb.1284
  %724 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_Esc1289 = getelementptr inbounds %struct.acluser, %struct.acluser* %724, i32 0, i32 6
  %725 = load i32, i32* %u_Esc1289, align 4
  %conv1290 = trunc i32 %725 to i8
  store i8 %conv1290, i8* %ch, align 1
  store i8* %ch, i8** %s, align 8
  store i32 1, i32* %n, align 4
  %726 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn1291 = getelementptr inbounds %struct.layer, %struct.layer* %726, i32 0, i32 6
  %727 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn1291, align 8
  %lf_LayProcess1292 = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %727, i32 0, i32 0
  %728 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess1292, align 8
  call void %728(i8** %s, i32* %n)
  br label %sw.epilog.7356

sw.bb.1293:                                       ; preds = %land.end
  store i8 17, i8* %ch, align 1
  store i8* %ch, i8** %s, align 8
  store i32 1, i32* %n, align 4
  %729 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn1294 = getelementptr inbounds %struct.layer, %struct.layer* %729, i32 0, i32 6
  %730 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn1294, align 8
  %lf_LayProcess1295 = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %730, i32 0, i32 0
  %731 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess1295, align 8
  call void %731(i8** %s, i32* %n)
  br label %sw.epilog.7356

sw.bb.1296:                                       ; preds = %land.end
  store i8 19, i8* %ch, align 1
  store i8* %ch, i8** %s, align 8
  store i32 1, i32* %n, align 4
  %732 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn1297 = getelementptr inbounds %struct.layer, %struct.layer* %732, i32 0, i32 6
  %733 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn1297, align 8
  %lf_LayProcess1298 = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %733, i32 0, i32 0
  %734 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess1298, align 8
  call void %734(i8** %s, i32* %n)
  br label %sw.epilog.7356

sw.bb.1299:                                       ; preds = %land.end, %land.end
  %735 = load i8**, i8*** %args, align 8
  %736 = load i8*, i8** %735, align 8
  %tobool1300 = icmp ne i8* %736, null
  br i1 %tobool1300, label %if.then.1301, label %if.else.1386

if.then.1301:                                     ; preds = %sw.bb.1299
  %737 = load %struct.action*, %struct.action** %act.addr, align 8
  %call1302 = call i32 @ParseNum(%struct.action* %737, i32* %n)
  %tobool1303 = icmp ne i32 %call1302, 0
  br i1 %tobool1303, label %if.then.1304, label %if.end.1357

if.then.1304:                                     ; preds = %if.then.1301
  store i32 0, i32* %n, align 4
  br label %for.cond.1305

for.cond.1305:                                    ; preds = %for.inc.1354, %if.then.1304
  %738 = load i32, i32* %n, align 4
  %cmp1306 = icmp slt i32 %738, 4
  br i1 %cmp1306, label %for.body.1308, label %for.end.1356

for.body.1308:                                    ; preds = %for.cond.1305
  store i32 0, i32* %i, align 4
  br label %for.cond.1309

for.cond.1309:                                    ; preds = %for.inc.1347, %for.body.1308
  %739 = load i32, i32* %i, align 4
  %cmp1310 = icmp slt i32 %739, 4
  br i1 %cmp1310, label %for.body.1312, label %for.end.1349

for.body.1312:                                    ; preds = %for.cond.1309
  %740 = load i32, i32* %i, align 4
  %idxprom1313 = sext i32 %740 to i64
  %741 = load i8**, i8*** %args, align 8
  %arrayidx1314 = getelementptr inbounds i8*, i8** %741, i64 0
  %742 = load i8*, i8** %arrayidx1314, align 8
  %arrayidx1315 = getelementptr inbounds i8, i8* %742, i64 %idxprom1313
  %743 = load i8, i8* %arrayidx1315, align 1
  store i8 %743, i8* %ch, align 1
  %744 = load i8, i8* %ch, align 1
  %conv1316 = sext i8 %744 to i32
  %cmp1317 = icmp sge i32 %conv1316, 97
  br i1 %cmp1317, label %land.lhs.true.1319, label %if.end.1327

land.lhs.true.1319:                               ; preds = %for.body.1312
  %745 = load i8, i8* %ch, align 1
  %conv1320 = sext i8 %745 to i32
  %cmp1321 = icmp sle i32 %conv1320, 122
  br i1 %cmp1321, label %if.then.1323, label %if.end.1327

if.then.1323:                                     ; preds = %land.lhs.true.1319
  %746 = load i8, i8* %ch, align 1
  %conv1324 = sext i8 %746 to i32
  %sub1325 = sub nsw i32 %conv1324, 32
  %conv1326 = trunc i32 %sub1325 to i8
  store i8 %conv1326, i8* %ch, align 1
  br label %if.end.1327

if.end.1327:                                      ; preds = %if.then.1323, %land.lhs.true.1319, %for.body.1312
  %747 = load i8, i8* %ch, align 1
  %conv1328 = sext i8 %747 to i32
  %748 = load i32, i32* %i, align 4
  %idxprom1329 = sext i32 %748 to i64
  %749 = load i32, i32* %n, align 4
  %idxprom1330 = sext i32 %749 to i64
  %arrayidx1331 = getelementptr inbounds [4 x i8*], [4 x i8*]* @DoAction.types, i32 0, i64 %idxprom1330
  %750 = load i8*, i8** %arrayidx1331, align 8
  %arrayidx1332 = getelementptr inbounds i8, i8* %750, i64 %idxprom1329
  %751 = load i8, i8* %arrayidx1332, align 1
  %conv1333 = sext i8 %751 to i32
  %cmp1334 = icmp ne i32 %conv1328, %conv1333
  br i1 %cmp1334, label %land.lhs.true.1336, label %if.end.1346

land.lhs.true.1336:                               ; preds = %if.end.1327
  %752 = load i8, i8* %ch, align 1
  %conv1337 = sext i8 %752 to i32
  %add = add nsw i32 %conv1337, 32
  %753 = load i32, i32* %i, align 4
  %idxprom1338 = sext i32 %753 to i64
  %754 = load i32, i32* %n, align 4
  %idxprom1339 = sext i32 %754 to i64
  %arrayidx1340 = getelementptr inbounds [4 x i8*], [4 x i8*]* @DoAction.types, i32 0, i64 %idxprom1339
  %755 = load i8*, i8** %arrayidx1340, align 8
  %arrayidx1341 = getelementptr inbounds i8, i8* %755, i64 %idxprom1338
  %756 = load i8, i8* %arrayidx1341, align 1
  %conv1342 = sext i8 %756 to i32
  %cmp1343 = icmp ne i32 %add, %conv1342
  br i1 %cmp1343, label %if.then.1345, label %if.end.1346

if.then.1345:                                     ; preds = %land.lhs.true.1336
  br label %for.end.1349

if.end.1346:                                      ; preds = %land.lhs.true.1336, %if.end.1327
  br label %for.inc.1347

for.inc.1347:                                     ; preds = %if.end.1346
  %757 = load i32, i32* %i, align 4
  %inc1348 = add nsw i32 %757, 1
  store i32 %inc1348, i32* %i, align 4
  br label %for.cond.1309

for.end.1349:                                     ; preds = %if.then.1345, %for.cond.1309
  %758 = load i32, i32* %i, align 4
  %cmp1350 = icmp eq i32 %758, 4
  br i1 %cmp1350, label %if.then.1352, label %if.end.1353

if.then.1352:                                     ; preds = %for.end.1349
  br label %for.end.1356

if.end.1353:                                      ; preds = %for.end.1349
  br label %for.inc.1354

for.inc.1354:                                     ; preds = %if.end.1353
  %759 = load i32, i32* %n, align 4
  %inc1355 = add nsw i32 %759, 1
  store i32 %inc1355, i32* %n, align 4
  br label %for.cond.1305

for.end.1356:                                     ; preds = %if.then.1352, %for.cond.1305
  br label %if.end.1357

if.end.1357:                                      ; preds = %for.end.1356, %if.then.1301
  %760 = load i32, i32* %n, align 4
  %cmp1358 = icmp slt i32 %760, 0
  br i1 %cmp1358, label %if.then.1363, label %lor.lhs.false.1360

lor.lhs.false.1360:                               ; preds = %if.end.1357
  %761 = load i32, i32* %n, align 4
  %cmp1361 = icmp sge i32 %761, 4
  br i1 %cmp1361, label %if.then.1363, label %if.else.1373

if.then.1363:                                     ; preds = %lor.lhs.false.1360, %if.end.1357
  %762 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1364 = getelementptr inbounds %struct.action, %struct.action* %762, i32 0, i32 3
  %763 = load i32, i32* %quiet1364, align 4
  %tobool1365 = icmp ne i32 %763, 0
  br i1 %tobool1365, label %cond.false.1367, label %cond.true.1366

cond.true.1366:                                   ; preds = %if.then.1363
  br label %cond.end.1371

cond.false.1367:                                  ; preds = %if.then.1363
  %764 = load i32, i32* @queryflag, align 4
  %cmp1368 = icmp sge i32 %764, 0
  %cond1370 = select i1 %cmp1368, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1371

cond.end.1371:                                    ; preds = %cond.false.1367, %cond.true.1366
  %cond1372 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1366 ], [ %cond1370, %cond.false.1367 ]
  %765 = load i8**, i8*** %args, align 8
  %766 = load i8*, i8** %765, align 8
  %767 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @DoAction.types, i32 0, i64 0), align 8
  %768 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @DoAction.types, i32 0, i64 1), align 8
  %769 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @DoAction.types, i32 0, i64 2), align 8
  call void (i32, i8*, ...) %cond1372(i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.67, i32 0, i32 0), i8* %766, i8* %767, i8* %768, i8* %769)
  br label %if.end.1385

if.else.1373:                                     ; preds = %lor.lhs.false.1360
  %770 = load i32, i32* %n, align 4
  store i32 %770, i32* @breaktype, align 4
  %771 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1374 = getelementptr inbounds %struct.action, %struct.action* %771, i32 0, i32 3
  %772 = load i32, i32* %quiet1374, align 4
  %tobool1375 = icmp ne i32 %772, 0
  br i1 %tobool1375, label %cond.false.1377, label %cond.true.1376

cond.true.1376:                                   ; preds = %if.else.1373
  br label %cond.end.1381

cond.false.1377:                                  ; preds = %if.else.1373
  %773 = load i32, i32* @queryflag, align 4
  %cmp1378 = icmp sge i32 %773, 0
  %cond1380 = select i1 %cmp1378, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1381

cond.end.1381:                                    ; preds = %cond.false.1377, %cond.true.1376
  %cond1382 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1376 ], [ %cond1380, %cond.false.1377 ]
  %774 = load i32, i32* %n, align 4
  %775 = load i32, i32* %n, align 4
  %idxprom1383 = sext i32 %775 to i64
  %arrayidx1384 = getelementptr inbounds [4 x i8*], [4 x i8*]* @DoAction.types, i32 0, i64 %idxprom1383
  %776 = load i8*, i8** %arrayidx1384, align 8
  call void (i32, i8*, ...) %cond1382(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.68, i32 0, i32 0), i32 %774, i8* %776)
  br label %if.end.1385

if.end.1385:                                      ; preds = %cond.end.1381, %cond.end.1371
  br label %if.end.1398

if.else.1386:                                     ; preds = %sw.bb.1299
  %777 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1387 = getelementptr inbounds %struct.action, %struct.action* %777, i32 0, i32 3
  %778 = load i32, i32* %quiet1387, align 4
  %tobool1388 = icmp ne i32 %778, 0
  br i1 %tobool1388, label %cond.false.1390, label %cond.true.1389

cond.true.1389:                                   ; preds = %if.else.1386
  br label %cond.end.1394

cond.false.1390:                                  ; preds = %if.else.1386
  %779 = load i32, i32* @queryflag, align 4
  %cmp1391 = icmp sge i32 %779, 0
  %cond1393 = select i1 %cmp1391, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1394

cond.end.1394:                                    ; preds = %cond.false.1390, %cond.true.1389
  %cond1395 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1389 ], [ %cond1393, %cond.false.1390 ]
  %780 = load i32, i32* @breaktype, align 4
  %781 = load i32, i32* @breaktype, align 4
  %idxprom1396 = sext i32 %781 to i64
  %arrayidx1397 = getelementptr inbounds [4 x i8*], [4 x i8*]* @DoAction.types, i32 0, i64 %idxprom1396
  %782 = load i8*, i8** %arrayidx1397, align 8
  call void (i32, i8*, ...) %cond1395(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69, i32 0, i32 0), i32 %780, i8* %782)
  br label %if.end.1398

if.end.1398:                                      ; preds = %cond.end.1394, %if.end.1385
  br label %sw.epilog.7356

sw.bb.1399:                                       ; preds = %land.end, %land.end
  store i32 0, i32* %n, align 4
  %783 = load i8**, i8*** %args, align 8
  %784 = load i8*, i8** %783, align 8
  %tobool1400 = icmp ne i8* %784, null
  br i1 %tobool1400, label %land.lhs.true.1401, label %if.end.1405

land.lhs.true.1401:                               ; preds = %sw.bb.1399
  %785 = load %struct.action*, %struct.action** %act.addr, align 8
  %call1402 = call i32 @ParseNum(%struct.action* %785, i32* %n)
  %tobool1403 = icmp ne i32 %call1402, 0
  br i1 %tobool1403, label %if.then.1404, label %if.end.1405

if.then.1404:                                     ; preds = %land.lhs.true.1401
  br label %sw.epilog.7356

if.end.1405:                                      ; preds = %land.lhs.true.1401, %sw.bb.1399
  %786 = load %struct.win*, %struct.win** @fore, align 8
  %787 = load i32, i32* %n, align 4
  %788 = load i32, i32* %nr, align 4
  %cmp1406 = icmp eq i32 %788, 125
  %conv1407 = zext i1 %cmp1406 to i32
  call void @SendBreak(%struct.win* %786, i32 %787, i32 %conv1407)
  br label %sw.epilog.7356

sw.bb.1408:                                       ; preds = %land.end
  call void @Detach(i32 5)
  br label %sw.epilog.7356

sw.bb.1409:                                       ; preds = %land.end, %land.end
  store i32 0, i32* %what, align 4
  store i32 1, i32* %i, align 4
  %789 = load i8**, i8*** %args, align 8
  %790 = load i8*, i8** %789, align 8
  %tobool1410 = icmp ne i8* %790, null
  br i1 %tobool1410, label %land.lhs.true.1411, label %if.else.1415

land.lhs.true.1411:                               ; preds = %sw.bb.1409
  %791 = load i8**, i8*** %args, align 8
  %792 = load i8*, i8** %791, align 8
  %call1412 = call i32 @strcmp(i8* %792, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.70, i32 0, i32 0)) #8
  %tobool1413 = icmp ne i32 %call1412, 0
  br i1 %tobool1413, label %if.else.1415, label %if.then.1414

if.then.1414:                                     ; preds = %land.lhs.true.1411
  store i32 1, i32* %what, align 4
  br label %if.end.1422

if.else.1415:                                     ; preds = %land.lhs.true.1411, %sw.bb.1409
  %793 = load i8**, i8*** %args, align 8
  %794 = load i8*, i8** %793, align 8
  %tobool1416 = icmp ne i8* %794, null
  br i1 %tobool1416, label %land.lhs.true.1417, label %if.end.1421

land.lhs.true.1417:                               ; preds = %if.else.1415
  %795 = load i8**, i8*** %args, align 8
  %796 = load i8*, i8** %795, align 8
  %call1418 = call i32 @strcmp(i8* %796, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0)) #8
  %tobool1419 = icmp ne i32 %call1418, 0
  br i1 %tobool1419, label %if.end.1421, label %if.then.1420

if.then.1420:                                     ; preds = %land.lhs.true.1417
  store i32 2, i32* %what, align 4
  br label %if.end.1421

if.end.1421:                                      ; preds = %if.then.1420, %land.lhs.true.1417, %if.else.1415
  br label %if.end.1422

if.end.1422:                                      ; preds = %if.end.1421, %if.then.1414
  %797 = load i32, i32* %what, align 4
  %tobool1423 = icmp ne i32 %797, 0
  br i1 %tobool1423, label %if.then.1424, label %if.end.1425

if.then.1424:                                     ; preds = %if.end.1422
  %798 = load i8**, i8*** %args, align 8
  %incdec.ptr = getelementptr inbounds i8*, i8** %798, i32 1
  store i8** %incdec.ptr, i8*** %args, align 8
  br label %if.end.1425

if.end.1425:                                      ; preds = %if.then.1424, %if.end.1422
  %799 = load i32, i32* %what, align 4
  %cmp1426 = icmp eq i32 %799, 0
  br i1 %cmp1426, label %land.lhs.true.1428, label %if.end.1433

land.lhs.true.1428:                               ; preds = %if.end.1425
  %800 = load %struct.layer*, %struct.layer** @flayer, align 8
  %tobool1429 = icmp ne %struct.layer* %800, null
  br i1 %tobool1429, label %land.lhs.true.1430, label %if.end.1433

land.lhs.true.1430:                               ; preds = %land.lhs.true.1428
  %801 = load %struct.display*, %struct.display** @display, align 8
  %tobool1431 = icmp ne %struct.display* %801, null
  br i1 %tobool1431, label %if.end.1433, label %if.then.1432

if.then.1432:                                     ; preds = %land.lhs.true.1430
  store i32 1, i32* %what, align 4
  br label %if.end.1433

if.end.1433:                                      ; preds = %if.then.1432, %land.lhs.true.1430, %land.lhs.true.1428, %if.end.1425
  %802 = load i32, i32* %what, align 4
  %cmp1434 = icmp eq i32 %802, 1
  br i1 %cmp1434, label %if.then.1436, label %if.else.1452

if.then.1436:                                     ; preds = %if.end.1433
  %803 = load %struct.layer*, %struct.layer** @flayer, align 8
  %tobool1437 = icmp ne %struct.layer* %803, null
  br i1 %tobool1437, label %if.end.1451, label %if.then.1438

if.then.1438:                                     ; preds = %if.then.1436
  %804 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1439 = getelementptr inbounds %struct.action, %struct.action* %804, i32 0, i32 3
  %805 = load i32, i32* %quiet1439, align 4
  %tobool1440 = icmp ne i32 %805, 0
  br i1 %tobool1440, label %cond.false.1442, label %cond.true.1441

cond.true.1441:                                   ; preds = %if.then.1438
  br label %cond.end.1446

cond.false.1442:                                  ; preds = %if.then.1438
  %806 = load i32, i32* @queryflag, align 4
  %cmp1443 = icmp sge i32 %806, 0
  %cond1445 = select i1 %cmp1443, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1446

cond.end.1446:                                    ; preds = %cond.false.1442, %cond.true.1441
  %cond1447 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1441 ], [ %cond1445, %cond.false.1442 ]
  %807 = load i8*, i8** @rc_name, align 8
  %808 = load i32, i32* %nr, align 4
  %idxprom1448 = sext i32 %808 to i64
  %arrayidx1449 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom1448
  %name1450 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx1449, i32 0, i32 0
  %809 = load i8*, i8** %name1450, align 8
  call void (i32, i8*, ...) %cond1447(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0), i8* %807, i8* %809)
  br label %sw.epilog.7356

if.end.1451:                                      ; preds = %if.then.1436
  %810 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_width = getelementptr inbounds %struct.layer, %struct.layer* %810, i32 0, i32 1
  %811 = load i32, i32* %l_width, align 4
  store i32 %811, i32* %w, align 4
  %812 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_height = getelementptr inbounds %struct.layer, %struct.layer* %812, i32 0, i32 2
  %813 = load i32, i32* %l_height, align 4
  store i32 %813, i32* %h, align 4
  br label %if.end.1468

if.else.1452:                                     ; preds = %if.end.1433
  %814 = load %struct.display*, %struct.display** @display, align 8
  %tobool1453 = icmp ne %struct.display* %814, null
  br i1 %tobool1453, label %if.end.1467, label %if.then.1454

if.then.1454:                                     ; preds = %if.else.1452
  %815 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1455 = getelementptr inbounds %struct.action, %struct.action* %815, i32 0, i32 3
  %816 = load i32, i32* %quiet1455, align 4
  %tobool1456 = icmp ne i32 %816, 0
  br i1 %tobool1456, label %cond.false.1458, label %cond.true.1457

cond.true.1457:                                   ; preds = %if.then.1454
  br label %cond.end.1462

cond.false.1458:                                  ; preds = %if.then.1454
  %817 = load i32, i32* @queryflag, align 4
  %cmp1459 = icmp sge i32 %817, 0
  %cond1461 = select i1 %cmp1459, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1462

cond.end.1462:                                    ; preds = %cond.false.1458, %cond.true.1457
  %cond1463 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1457 ], [ %cond1461, %cond.false.1458 ]
  %818 = load i8*, i8** @rc_name, align 8
  %819 = load i32, i32* %nr, align 4
  %idxprom1464 = sext i32 %819 to i64
  %arrayidx1465 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom1464
  %name1466 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx1465, i32 0, i32 0
  %820 = load i8*, i8** %name1466, align 8
  call void (i32, i8*, ...) %cond1463(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i32 0, i32 0), i8* %818, i8* %820)
  br label %sw.epilog.7356

if.end.1467:                                      ; preds = %if.else.1452
  %821 = load %struct.display*, %struct.display** @display, align 8
  %d_width = getelementptr inbounds %struct.display, %struct.display* %821, i32 0, i32 16
  %822 = load i32, i32* %d_width, align 4
  store i32 %822, i32* %w, align 4
  %823 = load %struct.display*, %struct.display** @display, align 8
  %d_height = getelementptr inbounds %struct.display, %struct.display* %823, i32 0, i32 17
  %824 = load i32, i32* %d_height, align 4
  store i32 %824, i32* %h, align 4
  br label %if.end.1468

if.end.1468:                                      ; preds = %if.end.1467, %if.end.1451
  %825 = load i8**, i8*** %args, align 8
  %826 = load i8*, i8** %825, align 8
  %tobool1469 = icmp ne i8* %826, null
  br i1 %tobool1469, label %land.lhs.true.1470, label %if.end.1489

land.lhs.true.1470:                               ; preds = %if.end.1468
  %827 = load i8**, i8*** %args, align 8
  %arrayidx1471 = getelementptr inbounds i8*, i8** %827, i64 0
  %828 = load i8*, i8** %arrayidx1471, align 8
  %arrayidx1472 = getelementptr inbounds i8, i8* %828, i64 0
  %829 = load i8, i8* %arrayidx1472, align 1
  %conv1473 = sext i8 %829 to i32
  %cmp1474 = icmp eq i32 %conv1473, 45
  br i1 %cmp1474, label %if.then.1476, label %if.end.1489

if.then.1476:                                     ; preds = %land.lhs.true.1470
  %830 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1477 = getelementptr inbounds %struct.action, %struct.action* %830, i32 0, i32 3
  %831 = load i32, i32* %quiet1477, align 4
  %tobool1478 = icmp ne i32 %831, 0
  br i1 %tobool1478, label %cond.false.1480, label %cond.true.1479

cond.true.1479:                                   ; preds = %if.then.1476
  br label %cond.end.1484

cond.false.1480:                                  ; preds = %if.then.1476
  %832 = load i32, i32* @queryflag, align 4
  %cmp1481 = icmp sge i32 %832, 0
  %cond1483 = select i1 %cmp1481, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1484

cond.end.1484:                                    ; preds = %cond.false.1480, %cond.true.1479
  %cond1485 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1479 ], [ %cond1483, %cond.false.1480 ]
  %833 = load i8*, i8** @rc_name, align 8
  %834 = load i32, i32* %nr, align 4
  %idxprom1486 = sext i32 %834 to i64
  %arrayidx1487 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom1486
  %name1488 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx1487, i32 0, i32 0
  %835 = load i8*, i8** %name1488, align 8
  %836 = load i8**, i8*** %args, align 8
  %837 = load i8*, i8** %836, align 8
  call void (i32, i8*, ...) %cond1485(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.72, i32 0, i32 0), i8* %833, i8* %835, i8* %837)
  br label %sw.epilog.7356

if.end.1489:                                      ; preds = %land.lhs.true.1470, %if.end.1468
  %838 = load i32, i32* %nr, align 4
  %cmp1490 = icmp eq i32 %838, 86
  br i1 %cmp1490, label %if.then.1492, label %if.else.1519

if.then.1492:                                     ; preds = %if.end.1489
  %839 = load i8**, i8*** %args, align 8
  %840 = load i8*, i8** %839, align 8
  %tobool1493 = icmp ne i8* %840, null
  br i1 %tobool1493, label %if.else.1510, label %if.then.1494

if.then.1494:                                     ; preds = %if.then.1492
  %841 = load i32, i32* %h, align 4
  %cmp1495 = icmp eq i32 %841, 42
  br i1 %cmp1495, label %if.then.1497, label %if.else.1498

if.then.1497:                                     ; preds = %if.then.1494
  store i32 24, i32* %h, align 4
  br label %if.end.1509

if.else.1498:                                     ; preds = %if.then.1494
  %842 = load i32, i32* %h, align 4
  %cmp1499 = icmp eq i32 %842, 24
  br i1 %cmp1499, label %if.then.1501, label %if.else.1502

if.then.1501:                                     ; preds = %if.else.1498
  store i32 42, i32* %h, align 4
  br label %if.end.1508

if.else.1502:                                     ; preds = %if.else.1498
  %843 = load i32, i32* %h, align 4
  %cmp1503 = icmp sgt i32 %843, 33
  br i1 %cmp1503, label %if.then.1505, label %if.else.1506

if.then.1505:                                     ; preds = %if.else.1502
  store i32 42, i32* %h, align 4
  br label %if.end.1507

if.else.1506:                                     ; preds = %if.else.1502
  store i32 24, i32* %h, align 4
  br label %if.end.1507

if.end.1507:                                      ; preds = %if.else.1506, %if.then.1505
  br label %if.end.1508

if.end.1508:                                      ; preds = %if.end.1507, %if.then.1501
  br label %if.end.1509

if.end.1509:                                      ; preds = %if.end.1508, %if.then.1497
  br label %if.end.1518

if.else.1510:                                     ; preds = %if.then.1492
  %844 = load i8**, i8*** %args, align 8
  %845 = load i8*, i8** %844, align 8
  %call1511 = call i32 @atoi(i8* %845) #8
  store i32 %call1511, i32* %h, align 4
  %846 = load i8**, i8*** %args, align 8
  %arrayidx1512 = getelementptr inbounds i8*, i8** %846, i64 1
  %847 = load i8*, i8** %arrayidx1512, align 8
  %tobool1513 = icmp ne i8* %847, null
  br i1 %tobool1513, label %if.then.1514, label %if.end.1517

if.then.1514:                                     ; preds = %if.else.1510
  %848 = load i8**, i8*** %args, align 8
  %arrayidx1515 = getelementptr inbounds i8*, i8** %848, i64 1
  %849 = load i8*, i8** %arrayidx1515, align 8
  %call1516 = call i32 @atoi(i8* %849) #8
  store i32 %call1516, i32* %w, align 4
  br label %if.end.1517

if.end.1517:                                      ; preds = %if.then.1514, %if.else.1510
  br label %if.end.1518

if.end.1518:                                      ; preds = %if.end.1517, %if.end.1509
  br label %if.end.1547

if.else.1519:                                     ; preds = %if.end.1489
  %850 = load i8**, i8*** %args, align 8
  %851 = load i8*, i8** %850, align 8
  %tobool1520 = icmp ne i8* %851, null
  br i1 %tobool1520, label %if.else.1538, label %if.then.1521

if.then.1521:                                     ; preds = %if.else.1519
  %852 = load i32, i32* %w, align 4
  %853 = load i32, i32* @Z0width, align 4
  %cmp1522 = icmp eq i32 %852, %853
  br i1 %cmp1522, label %if.then.1524, label %if.else.1525

if.then.1524:                                     ; preds = %if.then.1521
  %854 = load i32, i32* @Z1width, align 4
  store i32 %854, i32* %w, align 4
  br label %if.end.1537

if.else.1525:                                     ; preds = %if.then.1521
  %855 = load i32, i32* %w, align 4
  %856 = load i32, i32* @Z1width, align 4
  %cmp1526 = icmp eq i32 %855, %856
  br i1 %cmp1526, label %if.then.1528, label %if.else.1529

if.then.1528:                                     ; preds = %if.else.1525
  %857 = load i32, i32* @Z0width, align 4
  store i32 %857, i32* %w, align 4
  br label %if.end.1536

if.else.1529:                                     ; preds = %if.else.1525
  %858 = load i32, i32* %w, align 4
  %859 = load i32, i32* @Z0width, align 4
  %860 = load i32, i32* @Z1width, align 4
  %add1530 = add nsw i32 %859, %860
  %div = sdiv i32 %add1530, 2
  %cmp1531 = icmp sgt i32 %858, %div
  br i1 %cmp1531, label %if.then.1533, label %if.else.1534

if.then.1533:                                     ; preds = %if.else.1529
  %861 = load i32, i32* @Z0width, align 4
  store i32 %861, i32* %w, align 4
  br label %if.end.1535

if.else.1534:                                     ; preds = %if.else.1529
  %862 = load i32, i32* @Z1width, align 4
  store i32 %862, i32* %w, align 4
  br label %if.end.1535

if.end.1535:                                      ; preds = %if.else.1534, %if.then.1533
  br label %if.end.1536

if.end.1536:                                      ; preds = %if.end.1535, %if.then.1528
  br label %if.end.1537

if.end.1537:                                      ; preds = %if.end.1536, %if.then.1524
  br label %if.end.1546

if.else.1538:                                     ; preds = %if.else.1519
  %863 = load i8**, i8*** %args, align 8
  %864 = load i8*, i8** %863, align 8
  %call1539 = call i32 @atoi(i8* %864) #8
  store i32 %call1539, i32* %w, align 4
  %865 = load i8**, i8*** %args, align 8
  %arrayidx1540 = getelementptr inbounds i8*, i8** %865, i64 1
  %866 = load i8*, i8** %arrayidx1540, align 8
  %tobool1541 = icmp ne i8* %866, null
  br i1 %tobool1541, label %if.then.1542, label %if.end.1545

if.then.1542:                                     ; preds = %if.else.1538
  %867 = load i8**, i8*** %args, align 8
  %arrayidx1543 = getelementptr inbounds i8*, i8** %867, i64 1
  %868 = load i8*, i8** %arrayidx1543, align 8
  %call1544 = call i32 @atoi(i8* %868) #8
  store i32 %call1544, i32* %h, align 4
  br label %if.end.1545

if.end.1545:                                      ; preds = %if.then.1542, %if.else.1538
  br label %if.end.1546

if.end.1546:                                      ; preds = %if.end.1545, %if.end.1537
  br label %if.end.1547

if.end.1547:                                      ; preds = %if.end.1546, %if.end.1518
  %869 = load i8**, i8*** %args, align 8
  %870 = load i8*, i8** %869, align 8
  %tobool1548 = icmp ne i8* %870, null
  br i1 %tobool1548, label %land.lhs.true.1549, label %if.end.1568

land.lhs.true.1549:                               ; preds = %if.end.1547
  %871 = load i8**, i8*** %args, align 8
  %arrayidx1550 = getelementptr inbounds i8*, i8** %871, i64 1
  %872 = load i8*, i8** %arrayidx1550, align 8
  %tobool1551 = icmp ne i8* %872, null
  br i1 %tobool1551, label %land.lhs.true.1552, label %if.end.1568

land.lhs.true.1552:                               ; preds = %land.lhs.true.1549
  %873 = load i8**, i8*** %args, align 8
  %arrayidx1553 = getelementptr inbounds i8*, i8** %873, i64 2
  %874 = load i8*, i8** %arrayidx1553, align 8
  %tobool1554 = icmp ne i8* %874, null
  br i1 %tobool1554, label %if.then.1555, label %if.end.1568

if.then.1555:                                     ; preds = %land.lhs.true.1552
  %875 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1556 = getelementptr inbounds %struct.action, %struct.action* %875, i32 0, i32 3
  %876 = load i32, i32* %quiet1556, align 4
  %tobool1557 = icmp ne i32 %876, 0
  br i1 %tobool1557, label %cond.false.1559, label %cond.true.1558

cond.true.1558:                                   ; preds = %if.then.1555
  br label %cond.end.1563

cond.false.1559:                                  ; preds = %if.then.1555
  %877 = load i32, i32* @queryflag, align 4
  %cmp1560 = icmp sge i32 %877, 0
  %cond1562 = select i1 %cmp1560, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1563

cond.end.1563:                                    ; preds = %cond.false.1559, %cond.true.1558
  %cond1564 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1558 ], [ %cond1562, %cond.false.1559 ]
  %878 = load i8*, i8** @rc_name, align 8
  %879 = load i32, i32* %nr, align 4
  %idxprom1565 = sext i32 %879 to i64
  %arrayidx1566 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom1565
  %name1567 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx1566, i32 0, i32 0
  %880 = load i8*, i8** %name1567, align 8
  call void (i32, i8*, ...) %cond1564(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.73, i32 0, i32 0), i8* %878, i8* %880)
  br label %sw.epilog.7356

if.end.1568:                                      ; preds = %land.lhs.true.1552, %land.lhs.true.1549, %if.end.1547
  %881 = load i32, i32* %w, align 4
  %cmp1569 = icmp sle i32 %881, 0
  br i1 %cmp1569, label %if.then.1571, label %if.end.1581

if.then.1571:                                     ; preds = %if.end.1568
  %882 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1572 = getelementptr inbounds %struct.action, %struct.action* %882, i32 0, i32 3
  %883 = load i32, i32* %quiet1572, align 4
  %tobool1573 = icmp ne i32 %883, 0
  br i1 %tobool1573, label %cond.false.1575, label %cond.true.1574

cond.true.1574:                                   ; preds = %if.then.1571
  br label %cond.end.1579

cond.false.1575:                                  ; preds = %if.then.1571
  %884 = load i32, i32* @queryflag, align 4
  %cmp1576 = icmp sge i32 %884, 0
  %cond1578 = select i1 %cmp1576, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1579

cond.end.1579:                                    ; preds = %cond.false.1575, %cond.true.1574
  %cond1580 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1574 ], [ %cond1578, %cond.false.1575 ]
  call void (i32, i8*, ...) %cond1580(i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.1581:                                      ; preds = %if.end.1568
  %885 = load i32, i32* %h, align 4
  %cmp1582 = icmp sle i32 %885, 0
  br i1 %cmp1582, label %if.then.1584, label %if.end.1594

if.then.1584:                                     ; preds = %if.end.1581
  %886 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1585 = getelementptr inbounds %struct.action, %struct.action* %886, i32 0, i32 3
  %887 = load i32, i32* %quiet1585, align 4
  %tobool1586 = icmp ne i32 %887, 0
  br i1 %tobool1586, label %cond.false.1588, label %cond.true.1587

cond.true.1587:                                   ; preds = %if.then.1584
  br label %cond.end.1592

cond.false.1588:                                  ; preds = %if.then.1584
  %888 = load i32, i32* @queryflag, align 4
  %cmp1589 = icmp sge i32 %888, 0
  %cond1591 = select i1 %cmp1589, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1592

cond.end.1592:                                    ; preds = %cond.false.1588, %cond.true.1587
  %cond1593 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1587 ], [ %cond1591, %cond.false.1588 ]
  call void (i32, i8*, ...) %cond1593(i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.1594:                                      ; preds = %if.end.1581
  %889 = load i32, i32* %what, align 4
  %cmp1595 = icmp eq i32 %889, 1
  br i1 %cmp1595, label %if.then.1597, label %if.end.1607

if.then.1597:                                     ; preds = %if.end.1594
  %890 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_width1598 = getelementptr inbounds %struct.layer, %struct.layer* %890, i32 0, i32 1
  %891 = load i32, i32* %l_width1598, align 4
  %892 = load i32, i32* %w, align 4
  %cmp1599 = icmp eq i32 %891, %892
  br i1 %cmp1599, label %land.lhs.true.1601, label %if.end.1606

land.lhs.true.1601:                               ; preds = %if.then.1597
  %893 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_height1602 = getelementptr inbounds %struct.layer, %struct.layer* %893, i32 0, i32 2
  %894 = load i32, i32* %l_height1602, align 4
  %895 = load i32, i32* %h, align 4
  %cmp1603 = icmp eq i32 %894, %895
  br i1 %cmp1603, label %if.then.1605, label %if.end.1606

if.then.1605:                                     ; preds = %land.lhs.true.1601
  br label %sw.epilog.7356

if.end.1606:                                      ; preds = %land.lhs.true.1601, %if.then.1597
  %896 = load %struct.layer*, %struct.layer** @flayer, align 8
  %897 = load i32, i32* %w, align 4
  %898 = load i32, i32* %h, align 4
  call void @ResizeLayer(%struct.layer* %896, i32 %897, i32 %898, %struct.display* null)
  br label %sw.epilog.7356

if.end.1607:                                      ; preds = %if.end.1594
  %899 = load %struct.display*, %struct.display** @display, align 8
  %d_width1608 = getelementptr inbounds %struct.display, %struct.display* %899, i32 0, i32 16
  %900 = load i32, i32* %d_width1608, align 4
  %901 = load i32, i32* %w, align 4
  %cmp1609 = icmp eq i32 %900, %901
  br i1 %cmp1609, label %land.lhs.true.1611, label %if.end.1616

land.lhs.true.1611:                               ; preds = %if.end.1607
  %902 = load %struct.display*, %struct.display** @display, align 8
  %d_height1612 = getelementptr inbounds %struct.display, %struct.display* %902, i32 0, i32 17
  %903 = load i32, i32* %d_height1612, align 4
  %904 = load i32, i32* %h, align 4
  %cmp1613 = icmp eq i32 %903, %904
  br i1 %cmp1613, label %if.then.1615, label %if.end.1616

if.then.1615:                                     ; preds = %land.lhs.true.1611
  br label %sw.epilog.7356

if.end.1616:                                      ; preds = %land.lhs.true.1611, %if.end.1607
  %905 = load i32, i32* %what, align 4
  %cmp1617 = icmp eq i32 %905, 2
  br i1 %cmp1617, label %if.then.1619, label %if.else.1620

if.then.1619:                                     ; preds = %if.end.1616
  %906 = load i32, i32* %w, align 4
  %907 = load i32, i32* %h, align 4
  call void @ChangeScreenSize(i32 %906, i32 %907, i32 1)
  br label %if.end.1683

if.else.1620:                                     ; preds = %if.end.1616
  %908 = load i32, i32* %w, align 4
  %909 = load i32, i32* %h, align 4
  %call1621 = call i32 @ResizeDisplay(i32 %908, i32 %909)
  %cmp1622 = icmp eq i32 %call1621, 0
  br i1 %cmp1622, label %if.then.1624, label %if.end.1643

if.then.1624:                                     ; preds = %if.else.1620
  %910 = load %struct.display*, %struct.display** @display, align 8
  %d_fore1625 = getelementptr inbounds %struct.display, %struct.display* %910, i32 0, i32 10
  %911 = load %struct.win*, %struct.win** %d_fore1625, align 8
  %tobool1626 = icmp ne %struct.win* %911, null
  br i1 %tobool1626, label %cond.true.1627, label %cond.false.1630

cond.true.1627:                                   ; preds = %if.then.1624
  %912 = load %struct.display*, %struct.display** @display, align 8
  %d_fore1628 = getelementptr inbounds %struct.display, %struct.display* %912, i32 0, i32 10
  %913 = load %struct.win*, %struct.win** %d_fore1628, align 8
  %w_norefresh = getelementptr inbounds %struct.win, %struct.win* %913, i32 0, i32 74
  %914 = load i8, i8* %w_norefresh, align 1
  %conv1629 = sext i8 %914 to i32
  br label %cond.end.1631

cond.false.1630:                                  ; preds = %if.then.1624
  br label %cond.end.1631

cond.end.1631:                                    ; preds = %cond.false.1630, %cond.true.1627
  %cond1632 = phi i32 [ %conv1629, %cond.true.1627 ], [ 0, %cond.false.1630 ]
  call void @Activate(i32 %cond1632)
  %915 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv1633 = getelementptr inbounds %struct.display, %struct.display* %915, i32 0, i32 4
  %916 = load %struct.canvas*, %struct.canvas** %d_forecv1633, align 8
  %c_layer1634 = getelementptr inbounds %struct.canvas, %struct.canvas* %916, i32 0, i32 9
  %917 = load %struct.layer*, %struct.layer** %c_layer1634, align 8
  %918 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv1635 = getelementptr inbounds %struct.display, %struct.display* %918, i32 0, i32 4
  %919 = load %struct.canvas*, %struct.canvas** %d_forecv1635, align 8
  %c_xe = getelementptr inbounds %struct.canvas, %struct.canvas* %919, i32 0, i32 15
  %920 = load i32, i32* %c_xe, align 4
  %921 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv1636 = getelementptr inbounds %struct.display, %struct.display* %921, i32 0, i32 4
  %922 = load %struct.canvas*, %struct.canvas** %d_forecv1636, align 8
  %c_xs = getelementptr inbounds %struct.canvas, %struct.canvas* %922, i32 0, i32 14
  %923 = load i32, i32* %c_xs, align 4
  %sub1637 = sub nsw i32 %920, %923
  %add1638 = add nsw i32 %sub1637, 1
  %924 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv1639 = getelementptr inbounds %struct.display, %struct.display* %924, i32 0, i32 4
  %925 = load %struct.canvas*, %struct.canvas** %d_forecv1639, align 8
  %c_ye = getelementptr inbounds %struct.canvas, %struct.canvas* %925, i32 0, i32 17
  %926 = load i32, i32* %c_ye, align 4
  %927 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv1640 = getelementptr inbounds %struct.display, %struct.display* %927, i32 0, i32 4
  %928 = load %struct.canvas*, %struct.canvas** %d_forecv1640, align 8
  %c_ys = getelementptr inbounds %struct.canvas, %struct.canvas* %928, i32 0, i32 16
  %929 = load i32, i32* %c_ys, align 4
  %sub1641 = sub nsw i32 %926, %929
  %add1642 = add nsw i32 %sub1641, 1
  call void @ResizeLayer(%struct.layer* %917, i32 %add1638, i32 %add1642, %struct.display* null)
  br label %sw.epilog.7356

if.end.1643:                                      ; preds = %if.else.1620
  %930 = load i32, i32* %h, align 4
  %931 = load %struct.display*, %struct.display** @display, align 8
  %d_height1644 = getelementptr inbounds %struct.display, %struct.display* %931, i32 0, i32 17
  %932 = load i32, i32* %d_height1644, align 4
  %cmp1645 = icmp eq i32 %930, %932
  br i1 %cmp1645, label %if.then.1647, label %if.else.1657

if.then.1647:                                     ; preds = %if.end.1643
  %933 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1648 = getelementptr inbounds %struct.action, %struct.action* %933, i32 0, i32 3
  %934 = load i32, i32* %quiet1648, align 4
  %tobool1649 = icmp ne i32 %934, 0
  br i1 %tobool1649, label %cond.false.1651, label %cond.true.1650

cond.true.1650:                                   ; preds = %if.then.1647
  br label %cond.end.1655

cond.false.1651:                                  ; preds = %if.then.1647
  %935 = load i32, i32* @queryflag, align 4
  %cmp1652 = icmp sge i32 %935, 0
  %cond1654 = select i1 %cmp1652, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1655

cond.end.1655:                                    ; preds = %cond.false.1651, %cond.true.1650
  %cond1656 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1650 ], [ %cond1654, %cond.false.1651 ]
  %936 = load i32, i32* %w, align 4
  call void (i32, i8*, ...) %cond1656(i32 0, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.76, i32 0, i32 0), i32 %936)
  br label %if.end.1682

if.else.1657:                                     ; preds = %if.end.1643
  %937 = load i32, i32* %w, align 4
  %938 = load %struct.display*, %struct.display** @display, align 8
  %d_width1658 = getelementptr inbounds %struct.display, %struct.display* %938, i32 0, i32 16
  %939 = load i32, i32* %d_width1658, align 4
  %cmp1659 = icmp eq i32 %937, %939
  br i1 %cmp1659, label %if.then.1661, label %if.else.1671

if.then.1661:                                     ; preds = %if.else.1657
  %940 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1662 = getelementptr inbounds %struct.action, %struct.action* %940, i32 0, i32 3
  %941 = load i32, i32* %quiet1662, align 4
  %tobool1663 = icmp ne i32 %941, 0
  br i1 %tobool1663, label %cond.false.1665, label %cond.true.1664

cond.true.1664:                                   ; preds = %if.then.1661
  br label %cond.end.1669

cond.false.1665:                                  ; preds = %if.then.1661
  %942 = load i32, i32* @queryflag, align 4
  %cmp1666 = icmp sge i32 %942, 0
  %cond1668 = select i1 %cmp1666, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1669

cond.end.1669:                                    ; preds = %cond.false.1665, %cond.true.1664
  %cond1670 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1664 ], [ %cond1668, %cond.false.1665 ]
  %943 = load i32, i32* %h, align 4
  call void (i32, i8*, ...) %cond1670(i32 0, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.77, i32 0, i32 0), i32 %943)
  br label %if.end.1681

if.else.1671:                                     ; preds = %if.else.1657
  %944 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1672 = getelementptr inbounds %struct.action, %struct.action* %944, i32 0, i32 3
  %945 = load i32, i32* %quiet1672, align 4
  %tobool1673 = icmp ne i32 %945, 0
  br i1 %tobool1673, label %cond.false.1675, label %cond.true.1674

cond.true.1674:                                   ; preds = %if.else.1671
  br label %cond.end.1679

cond.false.1675:                                  ; preds = %if.else.1671
  %946 = load i32, i32* @queryflag, align 4
  %cmp1676 = icmp sge i32 %946, 0
  %cond1678 = select i1 %cmp1676, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1679

cond.end.1679:                                    ; preds = %cond.false.1675, %cond.true.1674
  %cond1680 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1674 ], [ %cond1678, %cond.false.1675 ]
  %947 = load i32, i32* %w, align 4
  %948 = load i32, i32* %h, align 4
  call void (i32, i8*, ...) %cond1680(i32 0, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.78, i32 0, i32 0), i32 %947, i32 %948)
  br label %if.end.1681

if.end.1681:                                      ; preds = %cond.end.1679, %cond.end.1669
  br label %if.end.1682

if.end.1682:                                      ; preds = %if.end.1681, %cond.end.1655
  br label %if.end.1683

if.end.1683:                                      ; preds = %if.end.1682, %if.then.1619
  br label %sw.epilog.7356

sw.bb.1684:                                       ; preds = %land.end
  %949 = load i32, i32* @queryflag, align 4
  %cmp1685 = icmp sge i32 %949, 0
  br i1 %cmp1685, label %if.then.1687, label %if.end.1702

if.then.1687:                                     ; preds = %sw.bb.1684
  %950 = load %struct.win*, %struct.win** @fore, align 8
  %tobool1688 = icmp ne %struct.win* %950, null
  br i1 %tobool1688, label %if.then.1689, label %if.else.1700

if.then.1689:                                     ; preds = %if.then.1687
  %951 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1690 = getelementptr inbounds %struct.action, %struct.action* %951, i32 0, i32 3
  %952 = load i32, i32* %quiet1690, align 4
  %tobool1691 = icmp ne i32 %952, 0
  br i1 %tobool1691, label %cond.false.1693, label %cond.true.1692

cond.true.1692:                                   ; preds = %if.then.1689
  br label %cond.end.1697

cond.false.1693:                                  ; preds = %if.then.1689
  %953 = load i32, i32* @queryflag, align 4
  %cmp1694 = icmp sge i32 %953, 0
  %cond1696 = select i1 %cmp1694, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1697

cond.end.1697:                                    ; preds = %cond.false.1693, %cond.true.1692
  %cond1698 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1692 ], [ %cond1696, %cond.false.1693 ]
  %954 = load %struct.win*, %struct.win** @fore, align 8
  %w_title1699 = getelementptr inbounds %struct.win, %struct.win* %954, i32 0, i32 21
  %955 = load i8*, i8** %w_title1699, align 8
  call void (i32, i8*, ...) %cond1698(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %955)
  br label %if.end.1701

if.else.1700:                                     ; preds = %if.then.1687
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.1701

if.end.1701:                                      ; preds = %if.else.1700, %cond.end.1697
  br label %sw.epilog.7356

if.end.1702:                                      ; preds = %sw.bb.1684
  %956 = load i8**, i8*** %args, align 8
  %957 = load i8*, i8** %956, align 8
  %cmp1703 = icmp eq i8* %957, null
  br i1 %cmp1703, label %if.then.1705, label %if.else.1706

if.then.1705:                                     ; preds = %if.end.1702
  call void @InputAKA()
  br label %if.end.1709

if.else.1706:                                     ; preds = %if.end.1702
  %958 = load %struct.win*, %struct.win** @fore, align 8
  %959 = load i8**, i8*** %args, align 8
  %960 = load i8*, i8** %959, align 8
  %961 = load i8**, i8*** %args, align 8
  %962 = load i8*, i8** %961, align 8
  %call1707 = call i64 @strlen(i8* %962) #8
  %conv1708 = trunc i64 %call1707 to i32
  call void @ChangeAKA(%struct.win* %958, i8* %960, i32 %conv1708)
  br label %if.end.1709

if.end.1709:                                      ; preds = %if.else.1706, %if.then.1705
  br label %sw.epilog.7356

sw.bb.1710:                                       ; preds = %land.end
  call void @Input(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.79, i32 0, i32 0), i32 768, i32 4, void (i8*, i32, i8*)* @Colonfin, i8* null, i32 0)
  %963 = load i8**, i8*** %args, align 8
  %964 = load i8*, i8** %963, align 8
  %tobool1711 = icmp ne i8* %964, null
  br i1 %tobool1711, label %land.lhs.true.1712, label %if.end.1720

land.lhs.true.1712:                               ; preds = %sw.bb.1710
  %965 = load i8**, i8*** %args, align 8
  %966 = load i8*, i8** %965, align 8
  %967 = load i8, i8* %966, align 1
  %conv1713 = sext i8 %967 to i32
  %tobool1714 = icmp ne i32 %conv1713, 0
  br i1 %tobool1714, label %if.then.1715, label %if.end.1720

if.then.1715:                                     ; preds = %land.lhs.true.1712
  %968 = load i8**, i8*** %args, align 8
  %969 = load i8*, i8** %968, align 8
  store i8* %969, i8** %s, align 8
  %970 = load i8*, i8** %s, align 8
  %call1716 = call i64 @strlen(i8* %970) #8
  %conv1717 = trunc i64 %call1716 to i32
  store i32 %conv1717, i32* %n, align 4
  %971 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn1718 = getelementptr inbounds %struct.layer, %struct.layer* %971, i32 0, i32 6
  %972 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn1718, align 8
  %lf_LayProcess1719 = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %972, i32 0, i32 0
  %973 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess1719, align 8
  call void %973(i8** %s, i32* %n)
  br label %if.end.1720

if.end.1720:                                      ; preds = %if.then.1715, %land.lhs.true.1712, %sw.bb.1710
  br label %sw.epilog.7356

sw.bb.1721:                                       ; preds = %land.end
  %974 = load %struct.display*, %struct.display** @display, align 8
  %d_status_lastmsg = getelementptr inbounds %struct.display, %struct.display* %974, i32 0, i32 46
  %975 = load i8*, i8** %d_status_lastmsg, align 8
  %tobool1722 = icmp ne i8* %975, null
  br i1 %tobool1722, label %if.then.1723, label %if.end.1734

if.then.1723:                                     ; preds = %sw.bb.1721
  %976 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1724 = getelementptr inbounds %struct.action, %struct.action* %976, i32 0, i32 3
  %977 = load i32, i32* %quiet1724, align 4
  %tobool1725 = icmp ne i32 %977, 0
  br i1 %tobool1725, label %cond.false.1727, label %cond.true.1726

cond.true.1726:                                   ; preds = %if.then.1723
  br label %cond.end.1731

cond.false.1727:                                  ; preds = %if.then.1723
  %978 = load i32, i32* @queryflag, align 4
  %cmp1728 = icmp sge i32 %978, 0
  %cond1730 = select i1 %cmp1728, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1731

cond.end.1731:                                    ; preds = %cond.false.1727, %cond.true.1726
  %cond1732 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1726 ], [ %cond1730, %cond.false.1727 ]
  %979 = load %struct.display*, %struct.display** @display, align 8
  %d_status_lastmsg1733 = getelementptr inbounds %struct.display, %struct.display* %979, i32 0, i32 46
  %980 = load i8*, i8** %d_status_lastmsg1733, align 8
  call void (i32, i8*, ...) %cond1732(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %980)
  br label %if.end.1734

if.end.1734:                                      ; preds = %cond.end.1731, %sw.bb.1721
  br label %sw.epilog.7356

sw.bb.1735:                                       ; preds = %land.end
  %981 = load i8**, i8*** %args, align 8
  call void @DoScreen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i32 0, i32 0), i8** %981)
  br label %sw.epilog.7356

sw.bb.1736:                                       ; preds = %land.end
  %982 = load %struct.action*, %struct.action** %act.addr, align 8
  %983 = load %struct.win*, %struct.win** @fore, align 8
  %w_wrap = getelementptr inbounds %struct.win, %struct.win* %983, i32 0, i32 48
  %call1737 = call i32 @ParseSwitch(%struct.action* %982, i32* %w_wrap)
  %cmp1738 = icmp eq i32 %call1737, 0
  br i1 %cmp1738, label %land.lhs.true.1740, label %if.end.1755

land.lhs.true.1740:                               ; preds = %sw.bb.1736
  %984 = load i32, i32* %msgok, align 4
  %tobool1741 = icmp ne i32 %984, 0
  br i1 %tobool1741, label %if.then.1742, label %if.end.1755

if.then.1742:                                     ; preds = %land.lhs.true.1740
  %985 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1743 = getelementptr inbounds %struct.action, %struct.action* %985, i32 0, i32 3
  %986 = load i32, i32* %quiet1743, align 4
  %tobool1744 = icmp ne i32 %986, 0
  br i1 %tobool1744, label %cond.false.1746, label %cond.true.1745

cond.true.1745:                                   ; preds = %if.then.1742
  br label %cond.end.1750

cond.false.1746:                                  ; preds = %if.then.1742
  %987 = load i32, i32* @queryflag, align 4
  %cmp1747 = icmp sge i32 %987, 0
  %cond1749 = select i1 %cmp1747, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1750

cond.end.1750:                                    ; preds = %cond.false.1746, %cond.true.1745
  %cond1751 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1745 ], [ %cond1749, %cond.false.1746 ]
  %988 = load %struct.win*, %struct.win** @fore, align 8
  %w_wrap1752 = getelementptr inbounds %struct.win, %struct.win* %988, i32 0, i32 48
  %989 = load i32, i32* %w_wrap1752, align 4
  %tobool1753 = icmp ne i32 %989, 0
  %cond1754 = select i1 %tobool1753, i32 43, i32 45
  call void (i32, i8*, ...) %cond1751(i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0), i32 %cond1754)
  br label %if.end.1755

if.end.1755:                                      ; preds = %cond.end.1750, %land.lhs.true.1740, %sw.bb.1736
  br label %sw.epilog.7356

sw.bb.1756:                                       ; preds = %land.end
  %990 = load i8**, i8*** %args, align 8
  %991 = load i8*, i8** %990, align 8
  %tobool1757 = icmp ne i8* %991, null
  br i1 %tobool1757, label %if.then.1758, label %if.else.1778

if.then.1758:                                     ; preds = %sw.bb.1756
  %992 = load i8**, i8*** %args, align 8
  %arrayidx1759 = getelementptr inbounds i8*, i8** %992, i64 0
  %993 = load i8*, i8** %arrayidx1759, align 8
  %arrayidx1760 = getelementptr inbounds i8, i8* %993, i64 0
  %994 = load i8, i8* %arrayidx1760, align 1
  %conv1761 = sext i8 %994 to i32
  %cmp1762 = icmp eq i32 %conv1761, 97
  br i1 %cmp1762, label %if.then.1764, label %if.else.1769

if.then.1764:                                     ; preds = %if.then.1758
  %995 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow = getelementptr inbounds %struct.win, %struct.win* %995, i32 0, i32 67
  %996 = load i32, i32* %w_flow, align 4
  %and1765 = and i32 %996, 2
  %tobool1766 = icmp ne i32 %and1765, 0
  %cond1767 = select i1 %tobool1766, i32 7, i32 4
  %997 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1768 = getelementptr inbounds %struct.win, %struct.win* %997, i32 0, i32 67
  store i32 %cond1767, i32* %w_flow1768, align 4
  br label %if.end.1777

if.else.1769:                                     ; preds = %if.then.1758
  %998 = load %struct.action*, %struct.action** %act.addr, align 8
  %call1770 = call i32 @ParseOnOff(%struct.action* %998, i32* %n)
  %tobool1771 = icmp ne i32 %call1770, 0
  br i1 %tobool1771, label %if.then.1772, label %if.end.1773

if.then.1772:                                     ; preds = %if.else.1769
  br label %sw.epilog.7356

if.end.1773:                                      ; preds = %if.else.1769
  %999 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1774 = getelementptr inbounds %struct.win, %struct.win* %999, i32 0, i32 67
  %1000 = load i32, i32* %w_flow1774, align 4
  %and1775 = and i32 %1000, 2
  %1001 = load i32, i32* %n, align 4
  %or = or i32 %and1775, %1001
  %1002 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1776 = getelementptr inbounds %struct.win, %struct.win* %1002, i32 0, i32 67
  store i32 %or, i32* %w_flow1776, align 4
  br label %if.end.1777

if.end.1777:                                      ; preds = %if.end.1773, %if.then.1764
  br label %if.end.1801

if.else.1778:                                     ; preds = %sw.bb.1756
  %1003 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1779 = getelementptr inbounds %struct.win, %struct.win* %1003, i32 0, i32 67
  %1004 = load i32, i32* %w_flow1779, align 4
  %and1780 = and i32 %1004, 4
  %tobool1781 = icmp ne i32 %and1780, 0
  br i1 %tobool1781, label %if.then.1782, label %if.else.1787

if.then.1782:                                     ; preds = %if.else.1778
  %1005 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1783 = getelementptr inbounds %struct.win, %struct.win* %1005, i32 0, i32 67
  %1006 = load i32, i32* %w_flow1783, align 4
  %and1784 = and i32 %1006, 2
  %or1785 = or i32 %and1784, 1
  %1007 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1786 = getelementptr inbounds %struct.win, %struct.win* %1007, i32 0, i32 67
  store i32 %or1785, i32* %w_flow1786, align 4
  br label %if.end.1800

if.else.1787:                                     ; preds = %if.else.1778
  %1008 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1788 = getelementptr inbounds %struct.win, %struct.win* %1008, i32 0, i32 67
  %1009 = load i32, i32* %w_flow1788, align 4
  %and1789 = and i32 %1009, 1
  %tobool1790 = icmp ne i32 %and1789, 0
  br i1 %tobool1790, label %if.then.1791, label %if.else.1794

if.then.1791:                                     ; preds = %if.else.1787
  %1010 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1792 = getelementptr inbounds %struct.win, %struct.win* %1010, i32 0, i32 67
  %1011 = load i32, i32* %w_flow1792, align 4
  %and1793 = and i32 %1011, -2
  store i32 %and1793, i32* %w_flow1792, align 4
  br label %if.end.1799

if.else.1794:                                     ; preds = %if.else.1787
  %1012 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1795 = getelementptr inbounds %struct.win, %struct.win* %1012, i32 0, i32 67
  %1013 = load i32, i32* %w_flow1795, align 4
  %tobool1796 = icmp ne i32 %1013, 0
  %cond1797 = select i1 %tobool1796, i32 7, i32 4
  %1014 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1798 = getelementptr inbounds %struct.win, %struct.win* %1014, i32 0, i32 67
  store i32 %cond1797, i32* %w_flow1798, align 4
  br label %if.end.1799

if.end.1799:                                      ; preds = %if.else.1794, %if.then.1791
  br label %if.end.1800

if.end.1800:                                      ; preds = %if.end.1799, %if.then.1782
  br label %if.end.1801

if.end.1801:                                      ; preds = %if.end.1800, %if.end.1777
  %1015 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1802 = getelementptr inbounds %struct.win, %struct.win* %1015, i32 0, i32 67
  %1016 = load i32, i32* %w_flow1802, align 4
  %and1803 = and i32 %1016, 1
  call void @SetFlow(i32 %and1803)
  %1017 = load i32, i32* %msgok, align 4
  %tobool1804 = icmp ne i32 %1017, 0
  br i1 %tobool1804, label %if.then.1805, label %if.end.1823

if.then.1805:                                     ; preds = %if.end.1801
  %1018 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1806 = getelementptr inbounds %struct.action, %struct.action* %1018, i32 0, i32 3
  %1019 = load i32, i32* %quiet1806, align 4
  %tobool1807 = icmp ne i32 %1019, 0
  br i1 %tobool1807, label %cond.false.1809, label %cond.true.1808

cond.true.1808:                                   ; preds = %if.then.1805
  br label %cond.end.1813

cond.false.1809:                                  ; preds = %if.then.1805
  %1020 = load i32, i32* @queryflag, align 4
  %cmp1810 = icmp sge i32 %1020, 0
  %cond1812 = select i1 %cmp1810, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1813

cond.end.1813:                                    ; preds = %cond.false.1809, %cond.true.1808
  %cond1814 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1808 ], [ %cond1812, %cond.false.1809 ]
  %1021 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1815 = getelementptr inbounds %struct.win, %struct.win* %1021, i32 0, i32 67
  %1022 = load i32, i32* %w_flow1815, align 4
  %and1816 = and i32 %1022, 1
  %tobool1817 = icmp ne i32 %and1816, 0
  %cond1818 = select i1 %tobool1817, i32 43, i32 45
  %1023 = load %struct.win*, %struct.win** @fore, align 8
  %w_flow1819 = getelementptr inbounds %struct.win, %struct.win* %1023, i32 0, i32 67
  %1024 = load i32, i32* %w_flow1819, align 4
  %and1820 = and i32 %1024, 4
  %tobool1821 = icmp ne i32 %and1820, 0
  %cond1822 = select i1 %tobool1821, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0)
  call void (i32, i8*, ...) %cond1814(i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i32 0, i32 0), i32 %cond1818, i8* %cond1822)
  br label %if.end.1823

if.end.1823:                                      ; preds = %cond.end.1813, %if.end.1801
  br label %sw.epilog.7356

sw.bb.1824:                                       ; preds = %land.end
  %1025 = load i8**, i8*** %args, align 8
  %arrayidx1825 = getelementptr inbounds i8*, i8** %1025, i64 0
  %1026 = load i8*, i8** %arrayidx1825, align 8
  %arrayidx1826 = getelementptr inbounds i8, i8* %1026, i64 0
  %1027 = load i8, i8* %arrayidx1826, align 1
  %conv1827 = sext i8 %1027 to i32
  %cmp1828 = icmp eq i32 %conv1827, 97
  br i1 %cmp1828, label %if.then.1830, label %if.else.1831

if.then.1830:                                     ; preds = %sw.bb.1824
  store i32 1, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 10), align 4
  br label %if.end.1838

if.else.1831:                                     ; preds = %sw.bb.1824
  %1028 = load %struct.action*, %struct.action** %act.addr, align 8
  %call1832 = call i32 @ParseOnOff(%struct.action* %1028, i32* %n)
  %tobool1833 = icmp ne i32 %call1832, 0
  br i1 %tobool1833, label %if.then.1834, label %if.end.1835

if.then.1834:                                     ; preds = %if.else.1831
  br label %sw.epilog.7356

if.end.1835:                                      ; preds = %if.else.1831
  %1029 = load i32, i32* %n, align 4
  %tobool1836 = icmp ne i32 %1029, 0
  %cond1837 = select i1 %tobool1836, i32 2, i32 0
  store i32 %cond1837, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 10), align 4
  br label %if.end.1838

if.end.1838:                                      ; preds = %if.end.1835, %if.then.1830
  br label %sw.epilog.7356

sw.bb.1839:                                       ; preds = %land.end
  %1030 = load i8**, i8*** %args, align 8
  %1031 = load i8*, i8** %1030, align 8
  %tobool1840 = icmp ne i8* %1031, null
  br i1 %tobool1840, label %if.then.1841, label %if.end.1863

if.then.1841:                                     ; preds = %sw.bb.1839
  %1032 = load i8**, i8*** %args, align 8
  %arrayidx1842 = getelementptr inbounds i8*, i8** %1032, i64 0
  %1033 = load i8*, i8** %arrayidx1842, align 8
  %arrayidx1843 = getelementptr inbounds i8, i8* %1033, i64 0
  %1034 = load i8, i8* %arrayidx1843, align 1
  %conv1844 = sext i8 %1034 to i32
  %cmp1845 = icmp eq i32 %conv1844, 97
  br i1 %cmp1845, label %if.then.1847, label %if.else.1848

if.then.1847:                                     ; preds = %if.then.1841
  %1035 = load %struct.win*, %struct.win** @fore, align 8
  %w_wlock = getelementptr inbounds %struct.win, %struct.win* %1035, i32 0, i32 29
  store i32 1, i32* %w_wlock, align 4
  br label %if.end.1856

if.else.1848:                                     ; preds = %if.then.1841
  %1036 = load %struct.action*, %struct.action** %act.addr, align 8
  %call1849 = call i32 @ParseOnOff(%struct.action* %1036, i32* %n)
  %tobool1850 = icmp ne i32 %call1849, 0
  br i1 %tobool1850, label %if.then.1851, label %if.end.1852

if.then.1851:                                     ; preds = %if.else.1848
  br label %sw.epilog.7356

if.end.1852:                                      ; preds = %if.else.1848
  %1037 = load i32, i32* %n, align 4
  %tobool1853 = icmp ne i32 %1037, 0
  %cond1854 = select i1 %tobool1853, i32 2, i32 0
  %1038 = load %struct.win*, %struct.win** @fore, align 8
  %w_wlock1855 = getelementptr inbounds %struct.win, %struct.win* %1038, i32 0, i32 29
  store i32 %cond1854, i32* %w_wlock1855, align 4
  br label %if.end.1856

if.end.1856:                                      ; preds = %if.end.1852, %if.then.1847
  %1039 = load %struct.display*, %struct.display** @display, align 8
  %d_user1857 = getelementptr inbounds %struct.display, %struct.display* %1039, i32 0, i32 1
  %1040 = load %struct.acluser*, %struct.acluser** %d_user1857, align 8
  %1041 = load %struct.win*, %struct.win** @fore, align 8
  %call1858 = call i32 @AclCheckPermWin(%struct.acluser* %1040, i32 1, %struct.win* %1041)
  %tobool1859 = icmp ne i32 %call1858, 0
  br i1 %tobool1859, label %if.end.1862, label %if.then.1860

if.then.1860:                                     ; preds = %if.end.1856
  %1042 = load %struct.display*, %struct.display** @display, align 8
  %d_user1861 = getelementptr inbounds %struct.display, %struct.display* %1042, i32 0, i32 1
  %1043 = load %struct.acluser*, %struct.acluser** %d_user1861, align 8
  %1044 = load %struct.win*, %struct.win** @fore, align 8
  %w_wlockuser = getelementptr inbounds %struct.win, %struct.win* %1044, i32 0, i32 30
  store %struct.acluser* %1043, %struct.acluser** %w_wlockuser, align 8
  br label %if.end.1862

if.end.1862:                                      ; preds = %if.then.1860, %if.end.1856
  br label %if.end.1863

if.end.1863:                                      ; preds = %if.end.1862, %sw.bb.1839
  %1045 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1864 = getelementptr inbounds %struct.action, %struct.action* %1045, i32 0, i32 3
  %1046 = load i32, i32* %quiet1864, align 4
  %tobool1865 = icmp ne i32 %1046, 0
  br i1 %tobool1865, label %cond.false.1867, label %cond.true.1866

cond.true.1866:                                   ; preds = %if.end.1863
  br label %cond.end.1871

cond.false.1867:                                  ; preds = %if.end.1863
  %1047 = load i32, i32* @queryflag, align 4
  %cmp1868 = icmp sge i32 %1047, 0
  %cond1870 = select i1 %cmp1868, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1871

cond.end.1871:                                    ; preds = %cond.false.1867, %cond.true.1866
  %cond1872 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1866 ], [ %cond1870, %cond.false.1867 ]
  %1048 = load %struct.win*, %struct.win** @fore, align 8
  %w_wlock1873 = getelementptr inbounds %struct.win, %struct.win* %1048, i32 0, i32 29
  %1049 = load i32, i32* %w_wlock1873, align 4
  %cmp1874 = icmp eq i32 %1049, 1
  br i1 %cmp1874, label %cond.true.1876, label %cond.false.1877

cond.true.1876:                                   ; preds = %cond.end.1871
  br label %cond.end.1882

cond.false.1877:                                  ; preds = %cond.end.1871
  %1050 = load %struct.win*, %struct.win** @fore, align 8
  %w_wlock1878 = getelementptr inbounds %struct.win, %struct.win* %1050, i32 0, i32 29
  %1051 = load i32, i32* %w_wlock1878, align 4
  %cmp1879 = icmp eq i32 %1051, 0
  %cond1881 = select i1 %cmp1879, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)
  br label %cond.end.1882

cond.end.1882:                                    ; preds = %cond.false.1877, %cond.true.1876
  %cond1883 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i32 0, i32 0), %cond.true.1876 ], [ %cond1881, %cond.false.1877 ]
  call void (i32, i8*, ...) %cond1872(i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i8* %cond1883)
  br label %sw.epilog.7356

sw.bb.1884:                                       ; preds = %land.end
  %1052 = load %struct.win*, %struct.win** @fore, align 8
  call void @ResetAnsiState(%struct.win* %1052)
  %1053 = load %struct.win*, %struct.win** @fore, align 8
  call void @WriteString(%struct.win* %1053, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 6)
  br label %sw.epilog.7356

sw.bb.1885:                                       ; preds = %land.end
  %1054 = load %struct.win*, %struct.win** @fore, align 8
  call void @ResetAnsiState(%struct.win* %1054)
  %1055 = load %struct.win*, %struct.win** @fore, align 8
  %w_zdisplay = getelementptr inbounds %struct.win, %struct.win* %1055, i32 0, i32 91
  %1056 = load %struct.display*, %struct.display** %w_zdisplay, align 8
  %tobool1886 = icmp ne %struct.display* %1056, null
  br i1 %tobool1886, label %if.then.1887, label %if.end.1889

if.then.1887:                                     ; preds = %sw.bb.1885
  %1057 = load %struct.win*, %struct.win** @fore, align 8
  %1058 = load %struct.win*, %struct.win** @fore, align 8
  %w_zdisplay1888 = getelementptr inbounds %struct.win, %struct.win* %1058, i32 0, i32 91
  %1059 = load %struct.display*, %struct.display** %w_zdisplay1888, align 8
  call void @zmodem_abort(%struct.win* %1057, %struct.display* %1059)
  br label %if.end.1889

if.end.1889:                                      ; preds = %if.then.1887, %sw.bb.1885
  %1060 = load %struct.win*, %struct.win** @fore, align 8
  call void @WriteString(%struct.win* %1060, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.87, i32 0, i32 0), i32 2)
  br label %sw.epilog.7356

sw.bb.1890:                                       ; preds = %land.end
  %1061 = load %struct.win*, %struct.win** @fore, align 8
  %w_monitor = getelementptr inbounds %struct.win, %struct.win* %1061, i32 0, i32 70
  %1062 = load i32, i32* %w_monitor, align 4
  %cmp1891 = icmp ne i32 %1062, 0
  %conv1892 = zext i1 %cmp1891 to i32
  store i32 %conv1892, i32* %n, align 4
  %1063 = load %struct.display*, %struct.display** @display, align 8
  %tobool1893 = icmp ne %struct.display* %1063, null
  br i1 %tobool1893, label %if.then.1894, label %if.end.1909

if.then.1894:                                     ; preds = %sw.bb.1890
  %1064 = load i32, i32* %n, align 4
  %tobool1895 = icmp ne i32 %1064, 0
  br i1 %tobool1895, label %land.rhs.1896, label %land.end.1907

land.rhs.1896:                                    ; preds = %if.then.1894
  %1065 = load %struct.display*, %struct.display** @display, align 8
  %d_user1897 = getelementptr inbounds %struct.display, %struct.display* %1065, i32 0, i32 1
  %1066 = load %struct.acluser*, %struct.acluser** %d_user1897, align 8
  %u_id = getelementptr inbounds %struct.acluser, %struct.acluser* %1066, i32 0, i32 9
  %1067 = load i32, i32* %u_id, align 4
  %shr = ashr i32 %1067, 3
  %idxprom1898 = sext i32 %shr to i64
  %1068 = load %struct.win*, %struct.win** @fore, align 8
  %w_mon_notify = getelementptr inbounds %struct.win, %struct.win* %1068, i32 0, i32 33
  %1069 = load i8*, i8** %w_mon_notify, align 8
  %arrayidx1899 = getelementptr inbounds i8, i8* %1069, i64 %idxprom1898
  %1070 = load i8, i8* %arrayidx1899, align 1
  %conv1900 = zext i8 %1070 to i32
  %1071 = load %struct.display*, %struct.display** @display, align 8
  %d_user1901 = getelementptr inbounds %struct.display, %struct.display* %1071, i32 0, i32 1
  %1072 = load %struct.acluser*, %struct.acluser** %d_user1901, align 8
  %u_id1902 = getelementptr inbounds %struct.acluser, %struct.acluser* %1072, i32 0, i32 9
  %1073 = load i32, i32* %u_id1902, align 4
  %and1903 = and i32 %1073, 7
  %shr1904 = ashr i32 128, %and1903
  %and1905 = and i32 %conv1900, %shr1904
  %tobool1906 = icmp ne i32 %and1905, 0
  br label %land.end.1907

land.end.1907:                                    ; preds = %land.rhs.1896, %if.then.1894
  %1074 = phi i1 [ false, %if.then.1894 ], [ %tobool1906, %land.rhs.1896 ]
  %land.ext1908 = zext i1 %1074 to i32
  store i32 %land.ext1908, i32* %n, align 4
  br label %if.end.1909

if.end.1909:                                      ; preds = %land.end.1907, %sw.bb.1890
  %1075 = load %struct.action*, %struct.action** %act.addr, align 8
  %call1910 = call i32 @ParseSwitch(%struct.action* %1075, i32* %n)
  %tobool1911 = icmp ne i32 %call1910, 0
  br i1 %tobool1911, label %if.then.1912, label %if.end.1913

if.then.1912:                                     ; preds = %if.end.1909
  br label %sw.epilog.7356

if.end.1913:                                      ; preds = %if.end.1909
  %1076 = load i32, i32* %n, align 4
  %tobool1914 = icmp ne i32 %1076, 0
  br i1 %tobool1914, label %if.then.1915, label %if.else.1966

if.then.1915:                                     ; preds = %if.end.1913
  %1077 = load %struct.display*, %struct.display** @display, align 8
  %tobool1916 = icmp ne %struct.display* %1077, null
  br i1 %tobool1916, label %if.then.1917, label %if.else.1931

if.then.1917:                                     ; preds = %if.then.1915
  %1078 = load %struct.display*, %struct.display** @display, align 8
  %d_user1918 = getelementptr inbounds %struct.display, %struct.display* %1078, i32 0, i32 1
  %1079 = load %struct.acluser*, %struct.acluser** %d_user1918, align 8
  %u_id1919 = getelementptr inbounds %struct.acluser, %struct.acluser* %1079, i32 0, i32 9
  %1080 = load i32, i32* %u_id1919, align 4
  %and1920 = and i32 %1080, 7
  %shr1921 = ashr i32 128, %and1920
  %1081 = load %struct.display*, %struct.display** @display, align 8
  %d_user1922 = getelementptr inbounds %struct.display, %struct.display* %1081, i32 0, i32 1
  %1082 = load %struct.acluser*, %struct.acluser** %d_user1922, align 8
  %u_id1923 = getelementptr inbounds %struct.acluser, %struct.acluser* %1082, i32 0, i32 9
  %1083 = load i32, i32* %u_id1923, align 4
  %shr1924 = ashr i32 %1083, 3
  %idxprom1925 = sext i32 %shr1924 to i64
  %1084 = load %struct.win*, %struct.win** @fore, align 8
  %w_mon_notify1926 = getelementptr inbounds %struct.win, %struct.win* %1084, i32 0, i32 33
  %1085 = load i8*, i8** %w_mon_notify1926, align 8
  %arrayidx1927 = getelementptr inbounds i8, i8* %1085, i64 %idxprom1925
  %1086 = load i8, i8* %arrayidx1927, align 1
  %conv1928 = zext i8 %1086 to i32
  %or1929 = or i32 %conv1928, %shr1921
  %conv1930 = trunc i32 %or1929 to i8
  store i8 %conv1930, i8* %arrayidx1927, align 1
  br label %if.end.1948

if.else.1931:                                     ; preds = %if.then.1915
  store i32 0, i32* %i, align 4
  br label %for.cond.1932

for.cond.1932:                                    ; preds = %for.inc.1945, %if.else.1931
  %1087 = load i32, i32* %i, align 4
  %1088 = load i32, i32* @maxusercount, align 4
  %cmp1933 = icmp slt i32 %1087, %1088
  br i1 %cmp1933, label %for.body.1935, label %for.end.1947

for.body.1935:                                    ; preds = %for.cond.1932
  %1089 = load i32, i32* %i, align 4
  %and1936 = and i32 %1089, 7
  %shr1937 = ashr i32 128, %and1936
  %1090 = load i32, i32* %i, align 4
  %shr1938 = ashr i32 %1090, 3
  %idxprom1939 = sext i32 %shr1938 to i64
  %1091 = load %struct.win*, %struct.win** @fore, align 8
  %w_mon_notify1940 = getelementptr inbounds %struct.win, %struct.win* %1091, i32 0, i32 33
  %1092 = load i8*, i8** %w_mon_notify1940, align 8
  %arrayidx1941 = getelementptr inbounds i8, i8* %1092, i64 %idxprom1939
  %1093 = load i8, i8* %arrayidx1941, align 1
  %conv1942 = zext i8 %1093 to i32
  %or1943 = or i32 %conv1942, %shr1937
  %conv1944 = trunc i32 %or1943 to i8
  store i8 %conv1944, i8* %arrayidx1941, align 1
  br label %for.inc.1945

for.inc.1945:                                     ; preds = %for.body.1935
  %1094 = load i32, i32* %i, align 4
  %inc1946 = add nsw i32 %1094, 1
  store i32 %inc1946, i32* %i, align 4
  br label %for.cond.1932

for.end.1947:                                     ; preds = %for.cond.1932
  br label %if.end.1948

if.end.1948:                                      ; preds = %for.end.1947, %if.then.1917
  %1095 = load %struct.win*, %struct.win** @fore, align 8
  %w_monitor1949 = getelementptr inbounds %struct.win, %struct.win* %1095, i32 0, i32 70
  %1096 = load i32, i32* %w_monitor1949, align 4
  %cmp1950 = icmp eq i32 %1096, 0
  br i1 %cmp1950, label %if.then.1952, label %if.end.1954

if.then.1952:                                     ; preds = %if.end.1948
  %1097 = load %struct.win*, %struct.win** @fore, align 8
  %w_monitor1953 = getelementptr inbounds %struct.win, %struct.win* %1097, i32 0, i32 70
  store i32 1, i32* %w_monitor1953, align 4
  br label %if.end.1954

if.end.1954:                                      ; preds = %if.then.1952, %if.end.1948
  %1098 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet1955 = getelementptr inbounds %struct.action, %struct.action* %1098, i32 0, i32 3
  %1099 = load i32, i32* %quiet1955, align 4
  %tobool1956 = icmp ne i32 %1099, 0
  br i1 %tobool1956, label %cond.false.1958, label %cond.true.1957

cond.true.1957:                                   ; preds = %if.end.1954
  br label %cond.end.1962

cond.false.1958:                                  ; preds = %if.end.1954
  %1100 = load i32, i32* @queryflag, align 4
  %cmp1959 = icmp sge i32 %1100, 0
  %cond1961 = select i1 %cmp1959, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.1962

cond.end.1962:                                    ; preds = %cond.false.1958, %cond.true.1957
  %cond1963 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.1957 ], [ %cond1961, %cond.false.1958 ]
  %1101 = load %struct.win*, %struct.win** @fore, align 8
  %w_number1964 = getelementptr inbounds %struct.win, %struct.win* %1101, i32 0, i32 9
  %1102 = load i32, i32* %w_number1964, align 4
  %1103 = load %struct.win*, %struct.win** @fore, align 8
  %w_title1965 = getelementptr inbounds %struct.win, %struct.win* %1103, i32 0, i32 21
  %1104 = load i8*, i8** %w_title1965, align 8
  call void (i32, i8*, ...) %cond1963(i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.88, i32 0, i32 0), i32 %1102, i8* %1104)
  br label %if.end.2032

if.else.1966:                                     ; preds = %if.end.1913
  %1105 = load %struct.display*, %struct.display** @display, align 8
  %tobool1967 = icmp ne %struct.display* %1105, null
  br i1 %tobool1967, label %if.then.1968, label %if.else.1982

if.then.1968:                                     ; preds = %if.else.1966
  %1106 = load %struct.display*, %struct.display** @display, align 8
  %d_user1969 = getelementptr inbounds %struct.display, %struct.display* %1106, i32 0, i32 1
  %1107 = load %struct.acluser*, %struct.acluser** %d_user1969, align 8
  %u_id1970 = getelementptr inbounds %struct.acluser, %struct.acluser* %1107, i32 0, i32 9
  %1108 = load i32, i32* %u_id1970, align 4
  %and1971 = and i32 %1108, 7
  %shr1972 = ashr i32 128, %and1971
  %neg = xor i32 %shr1972, -1
  %1109 = load %struct.display*, %struct.display** @display, align 8
  %d_user1973 = getelementptr inbounds %struct.display, %struct.display* %1109, i32 0, i32 1
  %1110 = load %struct.acluser*, %struct.acluser** %d_user1973, align 8
  %u_id1974 = getelementptr inbounds %struct.acluser, %struct.acluser* %1110, i32 0, i32 9
  %1111 = load i32, i32* %u_id1974, align 4
  %shr1975 = ashr i32 %1111, 3
  %idxprom1976 = sext i32 %shr1975 to i64
  %1112 = load %struct.win*, %struct.win** @fore, align 8
  %w_mon_notify1977 = getelementptr inbounds %struct.win, %struct.win* %1112, i32 0, i32 33
  %1113 = load i8*, i8** %w_mon_notify1977, align 8
  %arrayidx1978 = getelementptr inbounds i8, i8* %1113, i64 %idxprom1976
  %1114 = load i8, i8* %arrayidx1978, align 1
  %conv1979 = zext i8 %1114 to i32
  %and1980 = and i32 %conv1979, %neg
  %conv1981 = trunc i32 %and1980 to i8
  store i8 %conv1981, i8* %arrayidx1978, align 1
  br label %if.end.2000

if.else.1982:                                     ; preds = %if.else.1966
  store i32 0, i32* %i, align 4
  br label %for.cond.1983

for.cond.1983:                                    ; preds = %for.inc.1997, %if.else.1982
  %1115 = load i32, i32* %i, align 4
  %1116 = load i32, i32* @maxusercount, align 4
  %cmp1984 = icmp slt i32 %1115, %1116
  br i1 %cmp1984, label %for.body.1986, label %for.end.1999

for.body.1986:                                    ; preds = %for.cond.1983
  %1117 = load i32, i32* %i, align 4
  %and1987 = and i32 %1117, 7
  %shr1988 = ashr i32 128, %and1987
  %neg1989 = xor i32 %shr1988, -1
  %1118 = load i32, i32* %i, align 4
  %shr1990 = ashr i32 %1118, 3
  %idxprom1991 = sext i32 %shr1990 to i64
  %1119 = load %struct.win*, %struct.win** @fore, align 8
  %w_mon_notify1992 = getelementptr inbounds %struct.win, %struct.win* %1119, i32 0, i32 33
  %1120 = load i8*, i8** %w_mon_notify1992, align 8
  %arrayidx1993 = getelementptr inbounds i8, i8* %1120, i64 %idxprom1991
  %1121 = load i8, i8* %arrayidx1993, align 1
  %conv1994 = zext i8 %1121 to i32
  %and1995 = and i32 %conv1994, %neg1989
  %conv1996 = trunc i32 %and1995 to i8
  store i8 %conv1996, i8* %arrayidx1993, align 1
  br label %for.inc.1997

for.inc.1997:                                     ; preds = %for.body.1986
  %1122 = load i32, i32* %i, align 4
  %inc1998 = add nsw i32 %1122, 1
  store i32 %inc1998, i32* %i, align 4
  br label %for.cond.1983

for.end.1999:                                     ; preds = %for.cond.1983
  br label %if.end.2000

if.end.2000:                                      ; preds = %for.end.1999, %if.then.1968
  %1123 = load i32, i32* @maxusercount, align 4
  %sub2001 = sub nsw i32 %1123, 1
  store i32 %sub2001, i32* %i, align 4
  br label %for.cond.2002

for.cond.2002:                                    ; preds = %for.inc.2013, %if.end.2000
  %1124 = load i32, i32* %i, align 4
  %cmp2003 = icmp sge i32 %1124, 0
  br i1 %cmp2003, label %for.body.2005, label %for.end.2015

for.body.2005:                                    ; preds = %for.cond.2002
  %1125 = load i32, i32* %i, align 4
  %shr2006 = ashr i32 %1125, 3
  %idxprom2007 = sext i32 %shr2006 to i64
  %1126 = load %struct.win*, %struct.win** @fore, align 8
  %w_mon_notify2008 = getelementptr inbounds %struct.win, %struct.win* %1126, i32 0, i32 33
  %1127 = load i8*, i8** %w_mon_notify2008, align 8
  %arrayidx2009 = getelementptr inbounds i8, i8* %1127, i64 %idxprom2007
  %1128 = load i8, i8* %arrayidx2009, align 1
  %tobool2010 = icmp ne i8 %1128, 0
  br i1 %tobool2010, label %if.then.2011, label %if.end.2012

if.then.2011:                                     ; preds = %for.body.2005
  br label %for.end.2015

if.end.2012:                                      ; preds = %for.body.2005
  br label %for.inc.2013

for.inc.2013:                                     ; preds = %if.end.2012
  %1129 = load i32, i32* %i, align 4
  %dec2014 = add nsw i32 %1129, -1
  store i32 %dec2014, i32* %i, align 4
  br label %for.cond.2002

for.end.2015:                                     ; preds = %if.then.2011, %for.cond.2002
  %1130 = load i32, i32* %i, align 4
  %cmp2016 = icmp slt i32 %1130, 0
  br i1 %cmp2016, label %if.then.2018, label %if.end.2020

if.then.2018:                                     ; preds = %for.end.2015
  %1131 = load %struct.win*, %struct.win** @fore, align 8
  %w_monitor2019 = getelementptr inbounds %struct.win, %struct.win* %1131, i32 0, i32 70
  store i32 0, i32* %w_monitor2019, align 4
  br label %if.end.2020

if.end.2020:                                      ; preds = %if.then.2018, %for.end.2015
  %1132 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2021 = getelementptr inbounds %struct.action, %struct.action* %1132, i32 0, i32 3
  %1133 = load i32, i32* %quiet2021, align 4
  %tobool2022 = icmp ne i32 %1133, 0
  br i1 %tobool2022, label %cond.false.2024, label %cond.true.2023

cond.true.2023:                                   ; preds = %if.end.2020
  br label %cond.end.2028

cond.false.2024:                                  ; preds = %if.end.2020
  %1134 = load i32, i32* @queryflag, align 4
  %cmp2025 = icmp sge i32 %1134, 0
  %cond2027 = select i1 %cmp2025, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2028

cond.end.2028:                                    ; preds = %cond.false.2024, %cond.true.2023
  %cond2029 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2023 ], [ %cond2027, %cond.false.2024 ]
  %1135 = load %struct.win*, %struct.win** @fore, align 8
  %w_number2030 = getelementptr inbounds %struct.win, %struct.win* %1135, i32 0, i32 9
  %1136 = load i32, i32* %w_number2030, align 4
  %1137 = load %struct.win*, %struct.win** @fore, align 8
  %w_title2031 = getelementptr inbounds %struct.win, %struct.win* %1137, i32 0, i32 21
  %1138 = load i8*, i8** %w_title2031, align 8
  call void (i32, i8*, ...) %cond2029(i32 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.89, i32 0, i32 0), i32 %1136, i8* %1138)
  br label %if.end.2032

if.end.2032:                                      ; preds = %cond.end.2028, %cond.end.1962
  br label %sw.epilog.7356

sw.bb.2033:                                       ; preds = %land.end
  call void @display_displays()
  br label %sw.epilog.7356

sw.bb.2034:                                       ; preds = %land.end
  %1139 = load i8**, i8*** %args, align 8
  %1140 = load i8*, i8** %1139, align 8
  %tobool2035 = icmp ne i8* %1140, null
  br i1 %tobool2035, label %if.else.2037, label %if.then.2036

if.then.2036:                                     ; preds = %sw.bb.2034
  call void @display_windows(i32 0, i32 0, %struct.win* null)
  br label %if.end.2139

if.else.2037:                                     ; preds = %sw.bb.2034
  %1141 = load i8**, i8*** %args, align 8
  %1142 = load i8*, i8** %1141, align 8
  %call2038 = call i32 @strcmp(i8* %1142, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0)) #8
  %tobool2039 = icmp ne i32 %call2038, 0
  br i1 %tobool2039, label %if.else.2062, label %if.then.2040

if.then.2040:                                     ; preds = %if.else.2037
  %1143 = load i8**, i8*** %args, align 8
  %arrayidx2041 = getelementptr inbounds i8*, i8** %1143, i64 1
  %1144 = load i8*, i8** %arrayidx2041, align 8
  %tobool2042 = icmp ne i8* %1144, null
  br i1 %tobool2042, label %if.then.2043, label %if.end.2049

if.then.2043:                                     ; preds = %if.then.2040
  %1145 = load i8*, i8** @wliststr, align 8
  %tobool2044 = icmp ne i8* %1145, null
  br i1 %tobool2044, label %if.then.2045, label %if.end.2046

if.then.2045:                                     ; preds = %if.then.2043
  %1146 = load i8*, i8** @wliststr, align 8
  call void @free(i8* %1146) #4
  br label %if.end.2046

if.end.2046:                                      ; preds = %if.then.2045, %if.then.2043
  %1147 = load i8**, i8*** %args, align 8
  %arrayidx2047 = getelementptr inbounds i8*, i8** %1147, i64 1
  %1148 = load i8*, i8** %arrayidx2047, align 8
  %call2048 = call i8* @SaveStr(i8* %1148)
  store i8* %call2048, i8** @wliststr, align 8
  br label %if.end.2049

if.end.2049:                                      ; preds = %if.end.2046, %if.then.2040
  %1149 = load i32, i32* %msgok, align 4
  %tobool2050 = icmp ne i32 %1149, 0
  br i1 %tobool2050, label %if.then.2051, label %if.end.2061

if.then.2051:                                     ; preds = %if.end.2049
  %1150 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2052 = getelementptr inbounds %struct.action, %struct.action* %1150, i32 0, i32 3
  %1151 = load i32, i32* %quiet2052, align 4
  %tobool2053 = icmp ne i32 %1151, 0
  br i1 %tobool2053, label %cond.false.2055, label %cond.true.2054

cond.true.2054:                                   ; preds = %if.then.2051
  br label %cond.end.2059

cond.false.2055:                                  ; preds = %if.then.2051
  %1152 = load i32, i32* @queryflag, align 4
  %cmp2056 = icmp sge i32 %1152, 0
  %cond2058 = select i1 %cmp2056, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2059

cond.end.2059:                                    ; preds = %cond.false.2055, %cond.true.2054
  %cond2060 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2054 ], [ %cond2058, %cond.false.2055 ]
  %1153 = load i8*, i8** @wliststr, align 8
  call void (i32, i8*, ...) %cond2060(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.91, i32 0, i32 0), i8* %1153)
  br label %if.end.2061

if.end.2061:                                      ; preds = %cond.end.2059, %if.end.2049
  br label %if.end.2138

if.else.2062:                                     ; preds = %if.else.2037
  %1154 = load i8**, i8*** %args, align 8
  %1155 = load i8*, i8** %1154, align 8
  %call2063 = call i32 @strcmp(i8* %1155, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0)) #8
  %tobool2064 = icmp ne i32 %call2063, 0
  br i1 %tobool2064, label %if.else.2087, label %if.then.2065

if.then.2065:                                     ; preds = %if.else.2062
  %1156 = load i8**, i8*** %args, align 8
  %arrayidx2066 = getelementptr inbounds i8*, i8** %1156, i64 1
  %1157 = load i8*, i8** %arrayidx2066, align 8
  %tobool2067 = icmp ne i8* %1157, null
  br i1 %tobool2067, label %if.then.2068, label %if.end.2074

if.then.2068:                                     ; preds = %if.then.2065
  %1158 = load i8*, i8** @wlisttit, align 8
  %tobool2069 = icmp ne i8* %1158, null
  br i1 %tobool2069, label %if.then.2070, label %if.end.2071

if.then.2070:                                     ; preds = %if.then.2068
  %1159 = load i8*, i8** @wlisttit, align 8
  call void @free(i8* %1159) #4
  br label %if.end.2071

if.end.2071:                                      ; preds = %if.then.2070, %if.then.2068
  %1160 = load i8**, i8*** %args, align 8
  %arrayidx2072 = getelementptr inbounds i8*, i8** %1160, i64 1
  %1161 = load i8*, i8** %arrayidx2072, align 8
  %call2073 = call i8* @SaveStr(i8* %1161)
  store i8* %call2073, i8** @wlisttit, align 8
  br label %if.end.2074

if.end.2074:                                      ; preds = %if.end.2071, %if.then.2065
  %1162 = load i32, i32* %msgok, align 4
  %tobool2075 = icmp ne i32 %1162, 0
  br i1 %tobool2075, label %if.then.2076, label %if.end.2086

if.then.2076:                                     ; preds = %if.end.2074
  %1163 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2077 = getelementptr inbounds %struct.action, %struct.action* %1163, i32 0, i32 3
  %1164 = load i32, i32* %quiet2077, align 4
  %tobool2078 = icmp ne i32 %1164, 0
  br i1 %tobool2078, label %cond.false.2080, label %cond.true.2079

cond.true.2079:                                   ; preds = %if.then.2076
  br label %cond.end.2084

cond.false.2080:                                  ; preds = %if.then.2076
  %1165 = load i32, i32* @queryflag, align 4
  %cmp2081 = icmp sge i32 %1165, 0
  %cond2083 = select i1 %cmp2081, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2084

cond.end.2084:                                    ; preds = %cond.false.2080, %cond.true.2079
  %cond2085 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2079 ], [ %cond2083, %cond.false.2080 ]
  %1166 = load i8*, i8** @wlisttit, align 8
  call void (i32, i8*, ...) %cond2085(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.93, i32 0, i32 0), i8* %1166)
  br label %if.end.2086

if.end.2086:                                      ; preds = %cond.end.2084, %if.end.2074
  br label %if.end.2137

if.else.2087:                                     ; preds = %if.else.2062
  store i32 0, i32* %flag, align 4
  store i32 0, i32* %blank, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.2088

for.cond.2088:                                    ; preds = %for.inc.2130, %if.else.2087
  %1167 = load i32, i32* %i, align 4
  %1168 = load i32, i32* %argc, align 4
  %cmp2089 = icmp slt i32 %1167, %1168
  br i1 %cmp2089, label %for.body.2091, label %for.end.2132

for.body.2091:                                    ; preds = %for.cond.2088
  %1169 = load i32, i32* %i, align 4
  %idxprom2092 = sext i32 %1169 to i64
  %1170 = load i8**, i8*** %args, align 8
  %arrayidx2093 = getelementptr inbounds i8*, i8** %1170, i64 %idxprom2092
  %1171 = load i8*, i8** %arrayidx2093, align 8
  %tobool2094 = icmp ne i8* %1171, null
  br i1 %tobool2094, label %if.else.2096, label %if.then.2095

if.then.2095:                                     ; preds = %for.body.2091
  br label %for.inc.2130

if.else.2096:                                     ; preds = %for.body.2091
  %1172 = load i32, i32* %i, align 4
  %idxprom2097 = sext i32 %1172 to i64
  %1173 = load i8**, i8*** %args, align 8
  %arrayidx2098 = getelementptr inbounds i8*, i8** %1173, i64 %idxprom2097
  %1174 = load i8*, i8** %arrayidx2098, align 8
  %call2099 = call i32 @strcmp(i8* %1174, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0)) #8
  %tobool2100 = icmp ne i32 %call2099, 0
  br i1 %tobool2100, label %if.else.2103, label %if.then.2101

if.then.2101:                                     ; preds = %if.else.2096
  %1175 = load i32, i32* %flag, align 4
  %or2102 = or i32 %1175, 1
  store i32 %or2102, i32* %flag, align 4
  br label %if.end.2128

if.else.2103:                                     ; preds = %if.else.2096
  %1176 = load i32, i32* %i, align 4
  %idxprom2104 = sext i32 %1176 to i64
  %1177 = load i8**, i8*** %args, align 8
  %arrayidx2105 = getelementptr inbounds i8*, i8** %1177, i64 %idxprom2104
  %1178 = load i8*, i8** %arrayidx2105, align 8
  %call2106 = call i32 @strcmp(i8* %1178, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0)) #8
  %tobool2107 = icmp ne i32 %call2106, 0
  br i1 %tobool2107, label %if.else.2109, label %if.then.2108

if.then.2108:                                     ; preds = %if.else.2103
  store i32 1, i32* %blank, align 4
  br label %if.end.2127

if.else.2109:                                     ; preds = %if.else.2103
  %1179 = load i32, i32* %i, align 4
  %idxprom2110 = sext i32 %1179 to i64
  %1180 = load i8**, i8*** %args, align 8
  %arrayidx2111 = getelementptr inbounds i8*, i8** %1180, i64 %idxprom2110
  %1181 = load i8*, i8** %arrayidx2111, align 8
  %call2112 = call i32 @strcmp(i8* %1181, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0)) #8
  %tobool2113 = icmp ne i32 %call2112, 0
  br i1 %tobool2113, label %if.else.2116, label %if.then.2114

if.then.2114:                                     ; preds = %if.else.2109
  %1182 = load i32, i32* %flag, align 4
  %or2115 = or i32 %1182, 2
  store i32 %or2115, i32* %flag, align 4
  br label %if.end.2126

if.else.2116:                                     ; preds = %if.else.2109
  %1183 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2117 = getelementptr inbounds %struct.action, %struct.action* %1183, i32 0, i32 3
  %1184 = load i32, i32* %quiet2117, align 4
  %tobool2118 = icmp ne i32 %1184, 0
  br i1 %tobool2118, label %cond.false.2120, label %cond.true.2119

cond.true.2119:                                   ; preds = %if.else.2116
  br label %cond.end.2124

cond.false.2120:                                  ; preds = %if.else.2116
  %1185 = load i32, i32* @queryflag, align 4
  %cmp2121 = icmp sge i32 %1185, 0
  %cond2123 = select i1 %cmp2121, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2124

cond.end.2124:                                    ; preds = %cond.false.2120, %cond.true.2119
  %cond2125 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2119 ], [ %cond2123, %cond.false.2120 ]
  call void (i32, i8*, ...) %cond2125(i32 0, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.96, i32 0, i32 0))
  br label %for.end.2132

if.end.2126:                                      ; preds = %if.then.2114
  br label %if.end.2127

if.end.2127:                                      ; preds = %if.end.2126, %if.then.2108
  br label %if.end.2128

if.end.2128:                                      ; preds = %if.end.2127, %if.then.2101
  br label %if.end.2129

if.end.2129:                                      ; preds = %if.end.2128
  br label %for.inc.2130

for.inc.2130:                                     ; preds = %if.end.2129, %if.then.2095
  %1186 = load i32, i32* %i, align 4
  %inc2131 = add nsw i32 %1186, 1
  store i32 %inc2131, i32* %i, align 4
  br label %for.cond.2088

for.end.2132:                                     ; preds = %cond.end.2124, %for.cond.2088
  %1187 = load i32, i32* %i, align 4
  %1188 = load i32, i32* %argc, align 4
  %cmp2133 = icmp eq i32 %1187, %1188
  br i1 %cmp2133, label %if.then.2135, label %if.end.2136

if.then.2135:                                     ; preds = %for.end.2132
  %1189 = load i32, i32* %blank, align 4
  %1190 = load i32, i32* %flag, align 4
  call void @display_windows(i32 %1189, i32 %1190, %struct.win* null)
  br label %if.end.2136

if.end.2136:                                      ; preds = %if.then.2135, %for.end.2132
  br label %if.end.2137

if.end.2137:                                      ; preds = %if.end.2136, %if.end.2086
  br label %if.end.2138

if.end.2138:                                      ; preds = %if.end.2137, %if.end.2061
  br label %if.end.2139

if.end.2139:                                      ; preds = %if.end.2138, %if.then.2036
  br label %sw.epilog.7356

sw.bb.2140:                                       ; preds = %land.end
  %1191 = load i32, i32* %argc, align 4
  %cmp2141 = icmp eq i32 %1191, 2
  br i1 %cmp2141, label %land.lhs.true.2143, label %if.else.2165

land.lhs.true.2143:                               ; preds = %sw.bb.2140
  %1192 = load i8**, i8*** %args, align 8
  %1193 = load i8*, i8** %1192, align 8
  %call2144 = call i32 @strcmp(i8* %1193, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)) #8
  %tobool2145 = icmp ne i32 %call2144, 0
  br i1 %tobool2145, label %if.else.2165, label %if.then.2146

if.then.2146:                                     ; preds = %land.lhs.true.2143
  %1194 = load i8**, i8*** %args, align 8
  %arrayidx2148 = getelementptr inbounds i8*, i8** %1194, i64 1
  %1195 = load i8*, i8** %arrayidx2148, align 8
  %call2149 = call %struct.action* @FindKtab(i8* %1195, i32 0)
  store %struct.action* %call2149, %struct.action** %ktabp2147, align 8
  %cmp2150 = icmp eq %struct.action* %call2149, null
  br i1 %cmp2150, label %if.then.2152, label %if.end.2163

if.then.2152:                                     ; preds = %if.then.2146
  %1196 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2153 = getelementptr inbounds %struct.action, %struct.action* %1196, i32 0, i32 3
  %1197 = load i32, i32* %quiet2153, align 4
  %tobool2154 = icmp ne i32 %1197, 0
  br i1 %tobool2154, label %cond.false.2156, label %cond.true.2155

cond.true.2155:                                   ; preds = %if.then.2152
  br label %cond.end.2160

cond.false.2156:                                  ; preds = %if.then.2152
  %1198 = load i32, i32* @queryflag, align 4
  %cmp2157 = icmp sge i32 %1198, 0
  %cond2159 = select i1 %cmp2157, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2160

cond.end.2160:                                    ; preds = %cond.false.2156, %cond.true.2155
  %cond2161 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2155 ], [ %cond2159, %cond.false.2156 ]
  %1199 = load i8**, i8*** %args, align 8
  %arrayidx2162 = getelementptr inbounds i8*, i8** %1199, i64 1
  %1200 = load i8*, i8** %arrayidx2162, align 8
  call void (i32, i8*, ...) %cond2161(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i32 0, i32 0), i8* %1200)
  br label %sw.epilog.7356

if.end.2163:                                      ; preds = %if.then.2146
  %1201 = load i8**, i8*** %args, align 8
  %arrayidx2164 = getelementptr inbounds i8*, i8** %1201, i64 1
  %1202 = load i8*, i8** %arrayidx2164, align 8
  %1203 = load %struct.action*, %struct.action** %ktabp2147, align 8
  call void @display_help(i8* %1202, %struct.action* %1203)
  br label %if.end.2166

if.else.2165:                                     ; preds = %land.lhs.true.2143, %sw.bb.2140
  call void @display_help(i8* null, %struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0))
  br label %if.end.2166

if.end.2166:                                      ; preds = %if.else.2165, %if.end.2163
  br label %sw.epilog.7356

sw.bb.2167:                                       ; preds = %land.end
  call void @display_copyright()
  br label %sw.epilog.7356

sw.bb.2168:                                       ; preds = %land.end
  %1204 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn2169 = getelementptr inbounds %struct.layer, %struct.layer* %1204, i32 0, i32 6
  %1205 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn2169, align 8
  %cmp2170 = icmp ne %struct.LayFuncs* %1205, @WinLf
  br i1 %cmp2170, label %if.then.2172, label %if.end.2182

if.then.2172:                                     ; preds = %sw.bb.2168
  %1206 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2173 = getelementptr inbounds %struct.action, %struct.action* %1206, i32 0, i32 3
  %1207 = load i32, i32* %quiet2173, align 4
  %tobool2174 = icmp ne i32 %1207, 0
  br i1 %tobool2174, label %cond.false.2176, label %cond.true.2175

cond.true.2175:                                   ; preds = %if.then.2172
  br label %cond.end.2180

cond.false.2176:                                  ; preds = %if.then.2172
  %1208 = load i32, i32* @queryflag, align 4
  %cmp2177 = icmp sge i32 %1208, 0
  %cond2179 = select i1 %cmp2177, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2180

cond.end.2180:                                    ; preds = %cond.false.2176, %cond.true.2175
  %cond2181 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2175 ], [ %cond2179, %cond.false.2176 ]
  call void (i32, i8*, ...) %cond2181(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.97, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.2182:                                      ; preds = %sw.bb.2168
  call void @MarkRoutine()
  %1209 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %1209, i32 80)
  br label %sw.epilog.7356

sw.bb.2183:                                       ; preds = %land.end
  %1210 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn2184 = getelementptr inbounds %struct.layer, %struct.layer* %1210, i32 0, i32 6
  %1211 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn2184, align 8
  %cmp2185 = icmp ne %struct.LayFuncs* %1211, @WinLf
  br i1 %cmp2185, label %if.then.2187, label %if.end.2197

if.then.2187:                                     ; preds = %sw.bb.2183
  %1212 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2188 = getelementptr inbounds %struct.action, %struct.action* %1212, i32 0, i32 3
  %1213 = load i32, i32* %quiet2188, align 4
  %tobool2189 = icmp ne i32 %1213, 0
  br i1 %tobool2189, label %cond.false.2191, label %cond.true.2190

cond.true.2190:                                   ; preds = %if.then.2187
  br label %cond.end.2195

cond.false.2191:                                  ; preds = %if.then.2187
  %1214 = load i32, i32* @queryflag, align 4
  %cmp2192 = icmp sge i32 %1214, 0
  %cond2194 = select i1 %cmp2192, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2195

cond.end.2195:                                    ; preds = %cond.false.2191, %cond.true.2190
  %cond2196 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2190 ], [ %cond2194, %cond.false.2191 ]
  call void (i32, i8*, ...) %cond2196(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.97, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.2197:                                      ; preds = %sw.bb.2183
  %call2198 = call i32 @GetHistory()
  %cmp2199 = icmp eq i32 %call2198, 0
  br i1 %cmp2199, label %if.then.2201, label %if.end.2202

if.then.2201:                                     ; preds = %if.end.2197
  br label %sw.epilog.7356

if.end.2202:                                      ; preds = %if.end.2197
  %1215 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2203 = getelementptr inbounds %struct.acluser, %struct.acluser* %1215, i32 0, i32 8
  %buf2204 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2203, i32 0, i32 0
  %1216 = load i8*, i8** %buf2204, align 8
  %cmp2205 = icmp eq i8* %1216, null
  br i1 %cmp2205, label %if.then.2207, label %if.end.2208

if.then.2207:                                     ; preds = %if.end.2202
  br label %sw.epilog.7356

if.end.2208:                                      ; preds = %if.end.2202
  store i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @DoAction.pasteargs, i32 0, i32 0), i8*** %args, align 8
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @DoAction.pasteargl, i32 0, i32 0), i32** %argl, align 8
  br label %sw.bb.2209

sw.bb.2209:                                       ; preds = %land.end, %if.end.2208
  store i32 0, i32* %l, align 4
  store i32 -1, i32* %enc2210, align 4
  %1217 = load i8**, i8*** %args, align 8
  %1218 = load i8*, i8** %1217, align 8
  store i8* %1218, i8** %s, align 8
  %cmp2211 = icmp eq i8* %1218, null
  br i1 %cmp2211, label %if.then.2213, label %if.end.2214

if.then.2213:                                     ; preds = %sw.bb.2209
  call void @Input(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i32 0, i32 0), i32 1, i32 2, void (i8*, i32, i8*)* @ins_reg_fn, i8* null, i32 0)
  br label %sw.epilog.7356

if.end.2214:                                      ; preds = %sw.bb.2209
  %1219 = load i8**, i8*** %args, align 8
  %arrayidx2215 = getelementptr inbounds i8*, i8** %1219, i64 1
  %1220 = load i8*, i8** %arrayidx2215, align 8
  %cmp2216 = icmp eq i8* %1220, null
  br i1 %cmp2216, label %land.lhs.true.2218, label %if.end.2221

land.lhs.true.2218:                               ; preds = %if.end.2214
  %1221 = load %struct.win*, %struct.win** @fore, align 8
  %tobool2219 = icmp ne %struct.win* %1221, null
  br i1 %tobool2219, label %if.end.2221, label %if.then.2220

if.then.2220:                                     ; preds = %land.lhs.true.2218
  br label %sw.epilog.7356

if.end.2221:                                      ; preds = %land.lhs.true.2218, %if.end.2214
  %1222 = load i8**, i8*** %args, align 8
  %arrayidx2222 = getelementptr inbounds i8*, i8** %1222, i64 1
  %1223 = load i8*, i8** %arrayidx2222, align 8
  %tobool2223 = icmp ne i8* %1223, null
  br i1 %tobool2223, label %land.lhs.true.2224, label %if.else.2238

land.lhs.true.2224:                               ; preds = %if.end.2221
  %1224 = load i32*, i32** %argl, align 8
  %arrayidx2225 = getelementptr inbounds i32, i32* %1224, i64 1
  %1225 = load i32, i32* %arrayidx2225, align 4
  %cmp2226 = icmp ne i32 %1225, 1
  br i1 %cmp2226, label %if.then.2228, label %if.else.2238

if.then.2228:                                     ; preds = %land.lhs.true.2224
  %1226 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2229 = getelementptr inbounds %struct.action, %struct.action* %1226, i32 0, i32 3
  %1227 = load i32, i32* %quiet2229, align 4
  %tobool2230 = icmp ne i32 %1227, 0
  br i1 %tobool2230, label %cond.false.2232, label %cond.true.2231

cond.true.2231:                                   ; preds = %if.then.2228
  br label %cond.end.2236

cond.false.2232:                                  ; preds = %if.then.2228
  %1228 = load i32, i32* @queryflag, align 4
  %cmp2233 = icmp sge i32 %1228, 0
  %cond2235 = select i1 %cmp2233, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2236

cond.end.2236:                                    ; preds = %cond.false.2232, %cond.true.2231
  %cond2237 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2231 ], [ %cond2235, %cond.false.2232 ]
  %1229 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2237(i32 0, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.99, i32 0, i32 0), i8* %1229)
  br label %sw.epilog.7356

if.else.2238:                                     ; preds = %land.lhs.true.2224, %if.end.2221
  %1230 = load %struct.win*, %struct.win** @fore, align 8
  %tobool2239 = icmp ne %struct.win* %1230, null
  br i1 %tobool2239, label %if.then.2240, label %if.end.2243

if.then.2240:                                     ; preds = %if.else.2238
  %1231 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer2241 = getelementptr inbounds %struct.win, %struct.win* %1231, i32 0, i32 3
  %l_encoding2242 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer2241, i32 0, i32 5
  %1232 = load i32, i32* %l_encoding2242, align 4
  store i32 %1232, i32* %enc2210, align 4
  br label %if.end.2243

if.end.2243:                                      ; preds = %if.then.2240, %if.else.2238
  br label %if.end.2244

if.end.2244:                                      ; preds = %if.end.2243
  %1233 = load i8**, i8*** %args, align 8
  %1234 = load i8*, i8** %1233, align 8
  store i8* %1234, i8** %s, align 8
  store i8* %1234, i8** %ss, align 8
  br label %for.cond.2245

for.cond.2245:                                    ; preds = %for.inc.2314, %if.end.2244
  %1235 = load i8*, i8** %ss, align 8
  %1236 = load i8, i8* %1235, align 1
  store i8 %1236, i8* %ch, align 1
  %tobool2246 = icmp ne i8 %1236, 0
  br i1 %tobool2246, label %for.body.2247, label %for.end.2316

for.body.2247:                                    ; preds = %for.cond.2245
  %1237 = load i8, i8* %ch, align 1
  %conv2248 = sext i8 %1237 to i32
  %cmp2249 = icmp eq i32 %conv2248, 46
  br i1 %cmp2249, label %if.then.2251, label %if.else.2276

if.then.2251:                                     ; preds = %for.body.2247
  %1238 = load i32, i32* %enc2210, align 4
  %cmp2252 = icmp eq i32 %1238, -1
  br i1 %cmp2252, label %if.then.2254, label %if.end.2257

if.then.2254:                                     ; preds = %if.then.2251
  %1239 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2255 = getelementptr inbounds %struct.acluser, %struct.acluser* %1239, i32 0, i32 8
  %enc2256 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2255, i32 0, i32 2
  %1240 = load i32, i32* %enc2256, align 4
  store i32 %1240, i32* %enc2210, align 4
  br label %if.end.2257

if.end.2257:                                      ; preds = %if.then.2254, %if.then.2251
  %1241 = load i32, i32* %enc2210, align 4
  %1242 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2258 = getelementptr inbounds %struct.acluser, %struct.acluser* %1242, i32 0, i32 8
  %enc2259 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2258, i32 0, i32 2
  %1243 = load i32, i32* %enc2259, align 4
  %cmp2260 = icmp ne i32 %1241, %1243
  br i1 %cmp2260, label %if.then.2262, label %if.else.2271

if.then.2262:                                     ; preds = %if.end.2257
  %1244 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2263 = getelementptr inbounds %struct.acluser, %struct.acluser* %1244, i32 0, i32 8
  %buf2264 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2263, i32 0, i32 0
  %1245 = load i8*, i8** %buf2264, align 8
  %1246 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2265 = getelementptr inbounds %struct.acluser, %struct.acluser* %1246, i32 0, i32 8
  %len2266 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2265, i32 0, i32 1
  %1247 = load i32, i32* %len2266, align 4
  %1248 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2267 = getelementptr inbounds %struct.acluser, %struct.acluser* %1248, i32 0, i32 8
  %enc2268 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2267, i32 0, i32 2
  %1249 = load i32, i32* %enc2268, align 4
  %1250 = load i32, i32* %enc2210, align 4
  %call2269 = call i32 @RecodeBuf(i8* %1245, i32 %1247, i32 %1249, i32 %1250, i8* null)
  %1251 = load i32, i32* %l, align 4
  %add2270 = add nsw i32 %1251, %call2269
  store i32 %add2270, i32* %l, align 4
  br label %if.end.2275

if.else.2271:                                     ; preds = %if.end.2257
  %1252 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2272 = getelementptr inbounds %struct.acluser, %struct.acluser* %1252, i32 0, i32 8
  %len2273 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2272, i32 0, i32 1
  %1253 = load i32, i32* %len2273, align 4
  %1254 = load i32, i32* %l, align 4
  %add2274 = add nsw i32 %1254, %1253
  store i32 %add2274, i32* %l, align 4
  br label %if.end.2275

if.end.2275:                                      ; preds = %if.else.2271, %if.then.2262
  br label %if.end.2313

if.else.2276:                                     ; preds = %for.body.2247
  %1255 = load i32, i32* %enc2210, align 4
  %cmp2277 = icmp eq i32 %1255, -1
  br i1 %cmp2277, label %if.then.2279, label %if.end.2284

if.then.2279:                                     ; preds = %if.else.2276
  %1256 = load i8, i8* %ch, align 1
  %conv2280 = zext i8 %1256 to i32
  %idxprom2281 = sext i32 %conv2280 to i64
  %arrayidx2282 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2281
  %enc2283 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2282, i32 0, i32 2
  %1257 = load i32, i32* %enc2283, align 4
  store i32 %1257, i32* %enc2210, align 4
  br label %if.end.2284

if.end.2284:                                      ; preds = %if.then.2279, %if.else.2276
  %1258 = load i32, i32* %enc2210, align 4
  %1259 = load i8, i8* %ch, align 1
  %conv2285 = zext i8 %1259 to i32
  %idxprom2286 = sext i32 %conv2285 to i64
  %arrayidx2287 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2286
  %enc2288 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2287, i32 0, i32 2
  %1260 = load i32, i32* %enc2288, align 4
  %cmp2289 = icmp ne i32 %1258, %1260
  br i1 %cmp2289, label %if.then.2291, label %if.else.2306

if.then.2291:                                     ; preds = %if.end.2284
  %1261 = load i8, i8* %ch, align 1
  %conv2292 = zext i8 %1261 to i32
  %idxprom2293 = sext i32 %conv2292 to i64
  %arrayidx2294 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2293
  %buf2295 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2294, i32 0, i32 0
  %1262 = load i8*, i8** %buf2295, align 8
  %1263 = load i8, i8* %ch, align 1
  %conv2296 = zext i8 %1263 to i32
  %idxprom2297 = sext i32 %conv2296 to i64
  %arrayidx2298 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2297
  %len2299 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2298, i32 0, i32 1
  %1264 = load i32, i32* %len2299, align 4
  %1265 = load i8, i8* %ch, align 1
  %conv2300 = zext i8 %1265 to i32
  %idxprom2301 = sext i32 %conv2300 to i64
  %arrayidx2302 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2301
  %enc2303 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2302, i32 0, i32 2
  %1266 = load i32, i32* %enc2303, align 4
  %1267 = load i32, i32* %enc2210, align 4
  %call2304 = call i32 @RecodeBuf(i8* %1262, i32 %1264, i32 %1266, i32 %1267, i8* null)
  %1268 = load i32, i32* %l, align 4
  %add2305 = add nsw i32 %1268, %call2304
  store i32 %add2305, i32* %l, align 4
  br label %if.end.2312

if.else.2306:                                     ; preds = %if.end.2284
  %1269 = load i8, i8* %ch, align 1
  %conv2307 = zext i8 %1269 to i32
  %idxprom2308 = sext i32 %conv2307 to i64
  %arrayidx2309 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2308
  %len2310 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2309, i32 0, i32 1
  %1270 = load i32, i32* %len2310, align 4
  %1271 = load i32, i32* %l, align 4
  %add2311 = add nsw i32 %1271, %1270
  store i32 %add2311, i32* %l, align 4
  br label %if.end.2312

if.end.2312:                                      ; preds = %if.else.2306, %if.then.2291
  br label %if.end.2313

if.end.2313:                                      ; preds = %if.end.2312, %if.end.2275
  br label %for.inc.2314

for.inc.2314:                                     ; preds = %if.end.2313
  %1272 = load i8*, i8** %ss, align 8
  %incdec.ptr2315 = getelementptr inbounds i8, i8* %1272, i32 1
  store i8* %incdec.ptr2315, i8** %ss, align 8
  br label %for.cond.2245

for.end.2316:                                     ; preds = %for.cond.2245
  %1273 = load i32, i32* %l, align 4
  %cmp2317 = icmp eq i32 %1273, 0
  br i1 %cmp2317, label %if.then.2319, label %if.end.2329

if.then.2319:                                     ; preds = %for.end.2316
  %1274 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2320 = getelementptr inbounds %struct.action, %struct.action* %1274, i32 0, i32 3
  %1275 = load i32, i32* %quiet2320, align 4
  %tobool2321 = icmp ne i32 %1275, 0
  br i1 %tobool2321, label %cond.false.2323, label %cond.true.2322

cond.true.2322:                                   ; preds = %if.then.2319
  br label %cond.end.2327

cond.false.2323:                                  ; preds = %if.then.2319
  %1276 = load i32, i32* @queryflag, align 4
  %cmp2324 = icmp sge i32 %1276, 0
  %cond2326 = select i1 %cmp2324, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2327

cond.end.2327:                                    ; preds = %cond.false.2323, %cond.true.2322
  %cond2328 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2322 ], [ %cond2326, %cond.false.2323 ]
  call void (i32, i8*, ...) %cond2328(i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.2329:                                      ; preds = %for.end.2316
  %1277 = load i8*, i8** %s, align 8
  %arrayidx2330 = getelementptr inbounds i8, i8* %1277, i64 1
  %1278 = load i8, i8* %arrayidx2330, align 1
  %conv2331 = sext i8 %1278 to i32
  %cmp2332 = icmp eq i32 %conv2331, 0
  br i1 %cmp2332, label %land.lhs.true.2334, label %if.end.2369

land.lhs.true.2334:                               ; preds = %if.end.2329
  %1279 = load i8**, i8*** %args, align 8
  %arrayidx2335 = getelementptr inbounds i8*, i8** %1279, i64 1
  %1280 = load i8*, i8** %arrayidx2335, align 8
  %cmp2336 = icmp eq i8* %1280, null
  br i1 %cmp2336, label %if.then.2338, label %if.end.2369

if.then.2338:                                     ; preds = %land.lhs.true.2334
  %1281 = load i32, i32* %enc2210, align 4
  %1282 = load i8*, i8** %s, align 8
  %1283 = load i8, i8* %1282, align 1
  %conv2339 = sext i8 %1283 to i32
  %cmp2340 = icmp eq i32 %conv2339, 46
  br i1 %cmp2340, label %cond.true.2342, label %cond.false.2345

cond.true.2342:                                   ; preds = %if.then.2338
  %1284 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2343 = getelementptr inbounds %struct.acluser, %struct.acluser* %1284, i32 0, i32 8
  %enc2344 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2343, i32 0, i32 2
  %1285 = load i32, i32* %enc2344, align 4
  br label %cond.end.2350

cond.false.2345:                                  ; preds = %if.then.2338
  %1286 = load i8*, i8** %s, align 8
  %1287 = load i8, i8* %1286, align 1
  %conv2346 = zext i8 %1287 to i32
  %idxprom2347 = sext i32 %conv2346 to i64
  %arrayidx2348 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2347
  %enc2349 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2348, i32 0, i32 2
  %1288 = load i32, i32* %enc2349, align 4
  br label %cond.end.2350

cond.end.2350:                                    ; preds = %cond.false.2345, %cond.true.2342
  %cond2351 = phi i32 [ %1285, %cond.true.2342 ], [ %1288, %cond.false.2345 ]
  %cmp2352 = icmp eq i32 %1281, %cond2351
  br i1 %cmp2352, label %if.then.2354, label %if.end.2368

if.then.2354:                                     ; preds = %cond.end.2350
  %1289 = load %struct.win*, %struct.win** @fore, align 8
  %w_paster = getelementptr inbounds %struct.win, %struct.win* %1289, i32 0, i32 80
  %1290 = load i8*, i8** %s, align 8
  %1291 = load i8, i8* %1290, align 1
  %conv2355 = sext i8 %1291 to i32
  %cmp2356 = icmp eq i32 %conv2355, 46
  br i1 %cmp2356, label %cond.true.2358, label %cond.false.2361

cond.true.2358:                                   ; preds = %if.then.2354
  %1292 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2359 = getelementptr inbounds %struct.acluser, %struct.acluser* %1292, i32 0, i32 8
  %buf2360 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2359, i32 0, i32 0
  %1293 = load i8*, i8** %buf2360, align 8
  br label %cond.end.2366

cond.false.2361:                                  ; preds = %if.then.2354
  %1294 = load i8*, i8** %s, align 8
  %1295 = load i8, i8* %1294, align 1
  %conv2362 = zext i8 %1295 to i32
  %idxprom2363 = sext i32 %conv2362 to i64
  %arrayidx2364 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2363
  %buf2365 = getelementptr inbounds %struct.plop, %struct.plop* %arrayidx2364, i32 0, i32 0
  %1296 = load i8*, i8** %buf2365, align 8
  br label %cond.end.2366

cond.end.2366:                                    ; preds = %cond.false.2361, %cond.true.2358
  %cond2367 = phi i8* [ %1293, %cond.true.2358 ], [ %1296, %cond.false.2361 ]
  %1297 = load i32, i32* %l, align 4
  call void @MakePaster(%struct.paster* %w_paster, i8* %cond2367, i32 %1297, i32 0)
  br label %sw.epilog.7356

if.end.2368:                                      ; preds = %cond.end.2350
  br label %if.end.2369

if.end.2369:                                      ; preds = %if.end.2368, %land.lhs.true.2334, %if.end.2329
  %1298 = load i32, i32* %l, align 4
  %conv2370 = sext i32 %1298 to i64
  %call2371 = call noalias i8* @malloc(i64 %conv2370) #4
  store i8* %call2371, i8** %dbuf, align 8
  %cmp2372 = icmp eq i8* %call2371, null
  br i1 %cmp2372, label %if.then.2374, label %if.end.2384

if.then.2374:                                     ; preds = %if.end.2369
  %1299 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2375 = getelementptr inbounds %struct.action, %struct.action* %1299, i32 0, i32 3
  %1300 = load i32, i32* %quiet2375, align 4
  %tobool2376 = icmp ne i32 %1300, 0
  br i1 %tobool2376, label %cond.false.2378, label %cond.true.2377

cond.true.2377:                                   ; preds = %if.then.2374
  br label %cond.end.2382

cond.false.2378:                                  ; preds = %if.then.2374
  %1301 = load i32, i32* @queryflag, align 4
  %cmp2379 = icmp sge i32 %1301, 0
  %cond2381 = select i1 %cmp2379, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2382

cond.end.2382:                                    ; preds = %cond.false.2378, %cond.true.2377
  %cond2383 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2377 ], [ %cond2381, %cond.false.2378 ]
  call void (i32, i8*, ...) %cond2383(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.2384:                                      ; preds = %if.end.2369
  store i32 0, i32* %l, align 4
  %1302 = load i8*, i8** %s, align 8
  store i8* %1302, i8** %ss, align 8
  br label %for.cond.2385

for.cond.2385:                                    ; preds = %for.inc.2419, %if.end.2384
  %1303 = load i8*, i8** %ss, align 8
  %1304 = load i8, i8* %1303, align 1
  store i8 %1304, i8* %ch, align 1
  %tobool2386 = icmp ne i8 %1304, 0
  br i1 %tobool2386, label %for.body.2387, label %for.end.2421

for.body.2387:                                    ; preds = %for.cond.2385
  %1305 = load i8, i8* %ch, align 1
  %conv2389 = sext i8 %1305 to i32
  %cmp2390 = icmp eq i32 %conv2389, 46
  br i1 %cmp2390, label %cond.true.2392, label %cond.false.2394

cond.true.2392:                                   ; preds = %for.body.2387
  %1306 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2393 = getelementptr inbounds %struct.acluser, %struct.acluser* %1306, i32 0, i32 8
  br label %cond.end.2398

cond.false.2394:                                  ; preds = %for.body.2387
  %1307 = load i8, i8* %ch, align 1
  %conv2395 = zext i8 %1307 to i32
  %idxprom2396 = sext i32 %conv2395 to i64
  %arrayidx2397 = getelementptr inbounds [256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i64 %idxprom2396
  br label %cond.end.2398

cond.end.2398:                                    ; preds = %cond.false.2394, %cond.true.2392
  %cond2399 = phi %struct.plop* [ %u_plop2393, %cond.true.2392 ], [ %arrayidx2397, %cond.false.2394 ]
  store %struct.plop* %cond2399, %struct.plop** %pp2388, align 8
  %1308 = load %struct.plop*, %struct.plop** %pp2388, align 8
  %enc2400 = getelementptr inbounds %struct.plop, %struct.plop* %1308, i32 0, i32 2
  %1309 = load i32, i32* %enc2400, align 4
  %1310 = load i32, i32* %enc2210, align 4
  %cmp2401 = icmp ne i32 %1309, %1310
  br i1 %cmp2401, label %if.then.2403, label %if.end.2411

if.then.2403:                                     ; preds = %cond.end.2398
  %1311 = load %struct.plop*, %struct.plop** %pp2388, align 8
  %buf2404 = getelementptr inbounds %struct.plop, %struct.plop* %1311, i32 0, i32 0
  %1312 = load i8*, i8** %buf2404, align 8
  %1313 = load %struct.plop*, %struct.plop** %pp2388, align 8
  %len2405 = getelementptr inbounds %struct.plop, %struct.plop* %1313, i32 0, i32 1
  %1314 = load i32, i32* %len2405, align 4
  %1315 = load %struct.plop*, %struct.plop** %pp2388, align 8
  %enc2406 = getelementptr inbounds %struct.plop, %struct.plop* %1315, i32 0, i32 2
  %1316 = load i32, i32* %enc2406, align 4
  %1317 = load i32, i32* %enc2210, align 4
  %1318 = load i8*, i8** %dbuf, align 8
  %1319 = load i32, i32* %l, align 4
  %idx.ext2407 = sext i32 %1319 to i64
  %add.ptr2408 = getelementptr inbounds i8, i8* %1318, i64 %idx.ext2407
  %call2409 = call i32 @RecodeBuf(i8* %1312, i32 %1314, i32 %1316, i32 %1317, i8* %add.ptr2408)
  %1320 = load i32, i32* %l, align 4
  %add2410 = add nsw i32 %1320, %call2409
  store i32 %add2410, i32* %l, align 4
  br label %for.inc.2419

if.end.2411:                                      ; preds = %cond.end.2398
  %1321 = load %struct.plop*, %struct.plop** %pp2388, align 8
  %buf2412 = getelementptr inbounds %struct.plop, %struct.plop* %1321, i32 0, i32 0
  %1322 = load i8*, i8** %buf2412, align 8
  %1323 = load i8*, i8** %dbuf, align 8
  %1324 = load i32, i32* %l, align 4
  %idx.ext2413 = sext i32 %1324 to i64
  %add.ptr2414 = getelementptr inbounds i8, i8* %1323, i64 %idx.ext2413
  %1325 = load %struct.plop*, %struct.plop** %pp2388, align 8
  %len2415 = getelementptr inbounds %struct.plop, %struct.plop* %1325, i32 0, i32 1
  %1326 = load i32, i32* %len2415, align 4
  %conv2416 = sext i32 %1326 to i64
  call void @bcopy(i8* %1322, i8* %add.ptr2414, i64 %conv2416) #4
  %1327 = load %struct.plop*, %struct.plop** %pp2388, align 8
  %len2417 = getelementptr inbounds %struct.plop, %struct.plop* %1327, i32 0, i32 1
  %1328 = load i32, i32* %len2417, align 4
  %1329 = load i32, i32* %l, align 4
  %add2418 = add nsw i32 %1329, %1328
  store i32 %add2418, i32* %l, align 4
  br label %for.inc.2419

for.inc.2419:                                     ; preds = %if.end.2411, %if.then.2403
  %1330 = load i8*, i8** %ss, align 8
  %incdec.ptr2420 = getelementptr inbounds i8, i8* %1330, i32 1
  store i8* %incdec.ptr2420, i8** %ss, align 8
  br label %for.cond.2385

for.end.2421:                                     ; preds = %for.cond.2385
  %1331 = load i8**, i8*** %args, align 8
  %arrayidx2422 = getelementptr inbounds i8*, i8** %1331, i64 1
  %1332 = load i8*, i8** %arrayidx2422, align 8
  %cmp2423 = icmp eq i8* %1332, null
  br i1 %cmp2423, label %if.then.2425, label %if.else.2427

if.then.2425:                                     ; preds = %for.end.2421
  %1333 = load %struct.win*, %struct.win** @fore, align 8
  %w_paster2426 = getelementptr inbounds %struct.win, %struct.win* %1333, i32 0, i32 80
  %1334 = load i8*, i8** %dbuf, align 8
  %1335 = load i32, i32* %l, align 4
  call void @MakePaster(%struct.paster* %w_paster2426, i8* %1334, i32 %1335, i32 1)
  br label %if.end.2461

if.else.2427:                                     ; preds = %for.end.2421
  %1336 = load i8**, i8*** %args, align 8
  %arrayidx2428 = getelementptr inbounds i8*, i8** %1336, i64 1
  %1337 = load i8*, i8** %arrayidx2428, align 8
  %arrayidx2429 = getelementptr inbounds i8, i8* %1337, i64 0
  %1338 = load i8, i8* %arrayidx2429, align 1
  store i8 %1338, i8* %dch, align 1
  %1339 = load i8, i8* %dch, align 1
  %conv2430 = sext i8 %1339 to i32
  %cmp2431 = icmp eq i32 %conv2430, 46
  br i1 %cmp2431, label %if.then.2433, label %if.else.2447

if.then.2433:                                     ; preds = %if.else.2427
  %1340 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2434 = getelementptr inbounds %struct.acluser, %struct.acluser* %1340, i32 0, i32 8
  %buf2435 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2434, i32 0, i32 0
  %1341 = load i8*, i8** %buf2435, align 8
  %cmp2436 = icmp ne i8* %1341, null
  br i1 %cmp2436, label %if.then.2438, label %if.end.2440

if.then.2438:                                     ; preds = %if.then.2433
  %1342 = load %struct.acluser*, %struct.acluser** %user, align 8
  %call2439 = call i32 @UserFreeCopyBuffer(%struct.acluser* %1342)
  br label %if.end.2440

if.end.2440:                                      ; preds = %if.then.2438, %if.then.2433
  %1343 = load i8*, i8** %dbuf, align 8
  %1344 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2441 = getelementptr inbounds %struct.acluser, %struct.acluser* %1344, i32 0, i32 8
  %buf2442 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2441, i32 0, i32 0
  store i8* %1343, i8** %buf2442, align 8
  %1345 = load i32, i32* %l, align 4
  %1346 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2443 = getelementptr inbounds %struct.acluser, %struct.acluser* %1346, i32 0, i32 8
  %len2444 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2443, i32 0, i32 1
  store i32 %1345, i32* %len2444, align 4
  %1347 = load i32, i32* %enc2210, align 4
  %1348 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2445 = getelementptr inbounds %struct.acluser, %struct.acluser* %1348, i32 0, i32 8
  %enc2446 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2445, i32 0, i32 2
  store i32 %1347, i32* %enc2446, align 4
  br label %if.end.2460

if.else.2447:                                     ; preds = %if.else.2427
  %1349 = load i8, i8* %dch, align 1
  %conv2449 = zext i8 %1349 to i32
  %idx.ext2450 = sext i32 %conv2449 to i64
  %add.ptr2451 = getelementptr inbounds %struct.plop, %struct.plop* getelementptr inbounds ([256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i32 0), i64 %idx.ext2450
  store %struct.plop* %add.ptr2451, %struct.plop** %pp2448, align 8
  %1350 = load %struct.plop*, %struct.plop** %pp2448, align 8
  %buf2452 = getelementptr inbounds %struct.plop, %struct.plop* %1350, i32 0, i32 0
  %1351 = load i8*, i8** %buf2452, align 8
  %tobool2453 = icmp ne i8* %1351, null
  br i1 %tobool2453, label %if.then.2454, label %if.end.2456

if.then.2454:                                     ; preds = %if.else.2447
  %1352 = load %struct.plop*, %struct.plop** %pp2448, align 8
  %buf2455 = getelementptr inbounds %struct.plop, %struct.plop* %1352, i32 0, i32 0
  %1353 = load i8*, i8** %buf2455, align 8
  call void @free(i8* %1353) #4
  br label %if.end.2456

if.end.2456:                                      ; preds = %if.then.2454, %if.else.2447
  %1354 = load i8*, i8** %dbuf, align 8
  %1355 = load %struct.plop*, %struct.plop** %pp2448, align 8
  %buf2457 = getelementptr inbounds %struct.plop, %struct.plop* %1355, i32 0, i32 0
  store i8* %1354, i8** %buf2457, align 8
  %1356 = load i32, i32* %l, align 4
  %1357 = load %struct.plop*, %struct.plop** %pp2448, align 8
  %len2458 = getelementptr inbounds %struct.plop, %struct.plop* %1357, i32 0, i32 1
  store i32 %1356, i32* %len2458, align 4
  %1358 = load i32, i32* %enc2210, align 4
  %1359 = load %struct.plop*, %struct.plop** %pp2448, align 8
  %enc2459 = getelementptr inbounds %struct.plop, %struct.plop* %1359, i32 0, i32 2
  store i32 %1358, i32* %enc2459, align 4
  br label %if.end.2460

if.end.2460:                                      ; preds = %if.end.2456, %if.end.2440
  br label %if.end.2461

if.end.2461:                                      ; preds = %if.end.2460, %if.then.2425
  br label %sw.epilog.7356

sw.bb.2462:                                       ; preds = %land.end
  %1360 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2463 = getelementptr inbounds %struct.acluser, %struct.acluser* %1360, i32 0, i32 8
  %buf2464 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2463, i32 0, i32 0
  %1361 = load i8*, i8** %buf2464, align 8
  %tobool2465 = icmp ne i8* %1361, null
  br i1 %tobool2465, label %if.end.2476, label %if.then.2466

if.then.2466:                                     ; preds = %sw.bb.2462
  %1362 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2467 = getelementptr inbounds %struct.action, %struct.action* %1362, i32 0, i32 3
  %1363 = load i32, i32* %quiet2467, align 4
  %tobool2468 = icmp ne i32 %1363, 0
  br i1 %tobool2468, label %cond.false.2470, label %cond.true.2469

cond.true.2469:                                   ; preds = %if.then.2466
  br label %cond.end.2474

cond.false.2470:                                  ; preds = %if.then.2466
  %1364 = load i32, i32* @queryflag, align 4
  %cmp2471 = icmp sge i32 %1364, 0
  %cond2473 = select i1 %cmp2471, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2474

cond.end.2474:                                    ; preds = %cond.false.2470, %cond.true.2469
  %cond2475 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2469 ], [ %cond2473, %cond.false.2470 ]
  call void (i32, i8*, ...) %cond2475(i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.2476:                                      ; preds = %sw.bb.2462
  %1365 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2477 = getelementptr inbounds %struct.acluser, %struct.acluser* %1365, i32 0, i32 8
  %1366 = bitcast %struct.plop* %oldplop to i8*
  %1367 = bitcast %struct.plop* %u_plop2477 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1366, i8* %1367, i64 16, i32 8, i1 false)
  %1368 = load i8**, i8*** %args, align 8
  %arrayidx2478 = getelementptr inbounds i8*, i8** %1368, i64 0
  %1369 = load i8*, i8** %arrayidx2478, align 8
  %tobool2479 = icmp ne i8* %1369, null
  br i1 %tobool2479, label %land.lhs.true.2480, label %if.end.2540

land.lhs.true.2480:                               ; preds = %if.end.2476
  %1370 = load i8**, i8*** %args, align 8
  %arrayidx2481 = getelementptr inbounds i8*, i8** %1370, i64 1
  %1371 = load i8*, i8** %arrayidx2481, align 8
  %tobool2482 = icmp ne i8* %1371, null
  br i1 %tobool2482, label %land.lhs.true.2483, label %if.end.2540

land.lhs.true.2483:                               ; preds = %land.lhs.true.2480
  %1372 = load i8**, i8*** %args, align 8
  %arrayidx2484 = getelementptr inbounds i8*, i8** %1372, i64 0
  %1373 = load i8*, i8** %arrayidx2484, align 8
  %call2485 = call i32 @strcmp(i8* %1373, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0)) #8
  %tobool2486 = icmp ne i32 %call2485, 0
  br i1 %tobool2486, label %if.end.2540, label %if.then.2487

if.then.2487:                                     ; preds = %land.lhs.true.2483
  %1374 = load i8**, i8*** %args, align 8
  %arrayidx2490 = getelementptr inbounds i8*, i8** %1374, i64 1
  %1375 = load i8*, i8** %arrayidx2490, align 8
  %call2491 = call i32 @FindEncoding(i8* %1375)
  store i32 %call2491, i32* %enc2488, align 4
  %1376 = load i32, i32* %enc2488, align 4
  %cmp2492 = icmp eq i32 %1376, -1
  br i1 %cmp2492, label %if.then.2494, label %if.end.2504

if.then.2494:                                     ; preds = %if.then.2487
  %1377 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2495 = getelementptr inbounds %struct.action, %struct.action* %1377, i32 0, i32 3
  %1378 = load i32, i32* %quiet2495, align 4
  %tobool2496 = icmp ne i32 %1378, 0
  br i1 %tobool2496, label %cond.false.2498, label %cond.true.2497

cond.true.2497:                                   ; preds = %if.then.2494
  br label %cond.end.2502

cond.false.2498:                                  ; preds = %if.then.2494
  %1379 = load i32, i32* @queryflag, align 4
  %cmp2499 = icmp sge i32 %1379, 0
  %cond2501 = select i1 %cmp2499, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2502

cond.end.2502:                                    ; preds = %cond.false.2498, %cond.true.2497
  %cond2503 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2497 ], [ %cond2501, %cond.false.2498 ]
  %1380 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2503(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.101, i32 0, i32 0), i8* %1380)
  br label %sw.epilog.7356

if.end.2504:                                      ; preds = %if.then.2487
  %1381 = load i32, i32* %enc2488, align 4
  %enc2505 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 2
  %1382 = load i32, i32* %enc2505, align 4
  %cmp2506 = icmp ne i32 %1381, %1382
  br i1 %cmp2506, label %if.then.2508, label %if.end.2538

if.then.2508:                                     ; preds = %if.end.2504
  %buf2509 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 0
  %1383 = load i8*, i8** %buf2509, align 8
  %len2510 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 1
  %1384 = load i32, i32* %len2510, align 4
  %enc2511 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 2
  %1385 = load i32, i32* %enc2511, align 4
  %1386 = load i32, i32* %enc2488, align 4
  %call2512 = call i32 @RecodeBuf(i8* %1383, i32 %1384, i32 %1385, i32 %1386, i8* null)
  store i32 %call2512, i32* %l2489, align 4
  %1387 = load i32, i32* %l2489, align 4
  %add2513 = add nsw i32 %1387, 1
  %conv2514 = sext i32 %add2513 to i64
  %call2515 = call noalias i8* @malloc(i64 %conv2514) #4
  store i8* %call2515, i8** %newbuf, align 8
  %1388 = load i8*, i8** %newbuf, align 8
  %tobool2516 = icmp ne i8* %1388, null
  br i1 %tobool2516, label %if.end.2527, label %if.then.2517

if.then.2517:                                     ; preds = %if.then.2508
  %1389 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2518 = getelementptr inbounds %struct.action, %struct.action* %1389, i32 0, i32 3
  %1390 = load i32, i32* %quiet2518, align 4
  %tobool2519 = icmp ne i32 %1390, 0
  br i1 %tobool2519, label %cond.false.2521, label %cond.true.2520

cond.true.2520:                                   ; preds = %if.then.2517
  br label %cond.end.2525

cond.false.2521:                                  ; preds = %if.then.2517
  %1391 = load i32, i32* @queryflag, align 4
  %cmp2522 = icmp sge i32 %1391, 0
  %cond2524 = select i1 %cmp2522, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2525

cond.end.2525:                                    ; preds = %cond.false.2521, %cond.true.2520
  %cond2526 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2520 ], [ %cond2524, %cond.false.2521 ]
  call void (i32, i8*, ...) %cond2526(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.2527:                                      ; preds = %if.then.2508
  %buf2528 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 0
  %1392 = load i8*, i8** %buf2528, align 8
  %len2529 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 1
  %1393 = load i32, i32* %len2529, align 4
  %enc2530 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 2
  %1394 = load i32, i32* %enc2530, align 4
  %1395 = load i32, i32* %enc2488, align 4
  %1396 = load i8*, i8** %newbuf, align 8
  %call2531 = call i32 @RecodeBuf(i8* %1392, i32 %1393, i32 %1394, i32 %1395, i8* %1396)
  %1397 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2532 = getelementptr inbounds %struct.acluser, %struct.acluser* %1397, i32 0, i32 8
  %len2533 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2532, i32 0, i32 1
  store i32 %call2531, i32* %len2533, align 4
  %1398 = load i8*, i8** %newbuf, align 8
  %1399 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2534 = getelementptr inbounds %struct.acluser, %struct.acluser* %1399, i32 0, i32 8
  %buf2535 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2534, i32 0, i32 0
  store i8* %1398, i8** %buf2535, align 8
  %1400 = load i32, i32* %enc2488, align 4
  %1401 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2536 = getelementptr inbounds %struct.acluser, %struct.acluser* %1401, i32 0, i32 8
  %enc2537 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2536, i32 0, i32 2
  store i32 %1400, i32* %enc2537, align 4
  br label %if.end.2538

if.end.2538:                                      ; preds = %if.end.2527, %if.end.2504
  %1402 = load i8**, i8*** %args, align 8
  %add.ptr2539 = getelementptr inbounds i8*, i8** %1402, i64 2
  store i8** %add.ptr2539, i8*** %args, align 8
  br label %if.end.2540

if.end.2540:                                      ; preds = %if.end.2538, %land.lhs.true.2483, %land.lhs.true.2480, %if.end.2476
  %1403 = load i8**, i8*** %args, align 8
  %arrayidx2541 = getelementptr inbounds i8*, i8** %1403, i64 0
  %1404 = load i8*, i8** %arrayidx2541, align 8
  %tobool2542 = icmp ne i8* %1404, null
  br i1 %tobool2542, label %land.lhs.true.2543, label %if.else.2556

land.lhs.true.2543:                               ; preds = %if.end.2540
  %1405 = load i8**, i8*** %args, align 8
  %arrayidx2544 = getelementptr inbounds i8*, i8** %1405, i64 1
  %1406 = load i8*, i8** %arrayidx2544, align 8
  %tobool2545 = icmp ne i8* %1406, null
  br i1 %tobool2545, label %if.then.2546, label %if.else.2556

if.then.2546:                                     ; preds = %land.lhs.true.2543
  %1407 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2547 = getelementptr inbounds %struct.action, %struct.action* %1407, i32 0, i32 3
  %1408 = load i32, i32* %quiet2547, align 4
  %tobool2548 = icmp ne i32 %1408, 0
  br i1 %tobool2548, label %cond.false.2550, label %cond.true.2549

cond.true.2549:                                   ; preds = %if.then.2546
  br label %cond.end.2554

cond.false.2550:                                  ; preds = %if.then.2546
  %1409 = load i32, i32* @queryflag, align 4
  %cmp2551 = icmp sge i32 %1409, 0
  %cond2553 = select i1 %cmp2551, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2554

cond.end.2554:                                    ; preds = %cond.false.2550, %cond.true.2549
  %cond2555 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2549 ], [ %cond2553, %cond.false.2550 ]
  %1410 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2555(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.102, i32 0, i32 0), i8* %1410)
  br label %if.end.2558

if.else.2556:                                     ; preds = %land.lhs.true.2543, %if.end.2540
  %1411 = load %struct.acluser*, %struct.acluser** %user, align 8
  %1412 = load i8**, i8*** %args, align 8
  %arrayidx2557 = getelementptr inbounds i8*, i8** %1412, i64 0
  %1413 = load i8*, i8** %arrayidx2557, align 8
  call void @WriteFile(%struct.acluser* %1411, i8* %1413, i32 2)
  br label %if.end.2558

if.end.2558:                                      ; preds = %if.else.2556, %cond.end.2554
  %1414 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2559 = getelementptr inbounds %struct.acluser, %struct.acluser* %1414, i32 0, i32 8
  %buf2560 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2559, i32 0, i32 0
  %1415 = load i8*, i8** %buf2560, align 8
  %buf2561 = getelementptr inbounds %struct.plop, %struct.plop* %oldplop, i32 0, i32 0
  %1416 = load i8*, i8** %buf2561, align 8
  %cmp2562 = icmp ne i8* %1415, %1416
  br i1 %cmp2562, label %if.then.2564, label %if.end.2567

if.then.2564:                                     ; preds = %if.end.2558
  %1417 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2565 = getelementptr inbounds %struct.acluser, %struct.acluser* %1417, i32 0, i32 8
  %buf2566 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2565, i32 0, i32 0
  %1418 = load i8*, i8** %buf2566, align 8
  call void @free(i8* %1418) #4
  br label %if.end.2567

if.end.2567:                                      ; preds = %if.then.2564, %if.end.2558
  %1419 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2568 = getelementptr inbounds %struct.acluser, %struct.acluser* %1419, i32 0, i32 8
  %1420 = bitcast %struct.plop* %u_plop2568 to i8*
  %1421 = bitcast %struct.plop* %oldplop to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1420, i8* %1421, i64 16, i32 8, i1 false)
  br label %sw.epilog.7356

sw.bb.2569:                                       ; preds = %land.end
  %1422 = load %struct.win*, %struct.win** @fore, align 8
  %tobool2570 = icmp ne %struct.win* %1422, null
  br i1 %tobool2570, label %cond.true.2571, label %cond.false.2574

cond.true.2571:                                   ; preds = %sw.bb.2569
  %1423 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer2572 = getelementptr inbounds %struct.win, %struct.win* %1423, i32 0, i32 3
  %l_encoding2573 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer2572, i32 0, i32 5
  %1424 = load i32, i32* %l_encoding2573, align 4
  br label %cond.end.2581

cond.false.2574:                                  ; preds = %sw.bb.2569
  %1425 = load %struct.display*, %struct.display** @display, align 8
  %tobool2575 = icmp ne %struct.display* %1425, null
  br i1 %tobool2575, label %cond.true.2576, label %cond.false.2578

cond.true.2576:                                   ; preds = %cond.false.2574
  %1426 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding2577 = getelementptr inbounds %struct.display, %struct.display* %1426, i32 0, i32 28
  %1427 = load i32, i32* %d_encoding2577, align 4
  br label %cond.end.2579

cond.false.2578:                                  ; preds = %cond.false.2574
  br label %cond.end.2579

cond.end.2579:                                    ; preds = %cond.false.2578, %cond.true.2576
  %cond2580 = phi i32 [ %1427, %cond.true.2576 ], [ 0, %cond.false.2578 ]
  br label %cond.end.2581

cond.end.2581:                                    ; preds = %cond.end.2579, %cond.true.2571
  %cond2582 = phi i32 [ %1424, %cond.true.2571 ], [ %cond2580, %cond.end.2579 ]
  store i32 %cond2582, i32* %i, align 4
  %1428 = load i8**, i8*** %args, align 8
  %arrayidx2583 = getelementptr inbounds i8*, i8** %1428, i64 0
  %1429 = load i8*, i8** %arrayidx2583, align 8
  %tobool2584 = icmp ne i8* %1429, null
  br i1 %tobool2584, label %land.lhs.true.2585, label %if.end.2609

land.lhs.true.2585:                               ; preds = %cond.end.2581
  %1430 = load i8**, i8*** %args, align 8
  %arrayidx2586 = getelementptr inbounds i8*, i8** %1430, i64 1
  %1431 = load i8*, i8** %arrayidx2586, align 8
  %tobool2587 = icmp ne i8* %1431, null
  br i1 %tobool2587, label %land.lhs.true.2588, label %if.end.2609

land.lhs.true.2588:                               ; preds = %land.lhs.true.2585
  %1432 = load i8**, i8*** %args, align 8
  %arrayidx2589 = getelementptr inbounds i8*, i8** %1432, i64 0
  %1433 = load i8*, i8** %arrayidx2589, align 8
  %call2590 = call i32 @strcmp(i8* %1433, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i32 0, i32 0)) #8
  %tobool2591 = icmp ne i32 %call2590, 0
  br i1 %tobool2591, label %if.end.2609, label %if.then.2592

if.then.2592:                                     ; preds = %land.lhs.true.2588
  %1434 = load i8**, i8*** %args, align 8
  %arrayidx2593 = getelementptr inbounds i8*, i8** %1434, i64 1
  %1435 = load i8*, i8** %arrayidx2593, align 8
  %call2594 = call i32 @FindEncoding(i8* %1435)
  store i32 %call2594, i32* %i, align 4
  %1436 = load i32, i32* %i, align 4
  %cmp2595 = icmp eq i32 %1436, -1
  br i1 %cmp2595, label %if.then.2597, label %if.end.2607

if.then.2597:                                     ; preds = %if.then.2592
  %1437 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2598 = getelementptr inbounds %struct.action, %struct.action* %1437, i32 0, i32 3
  %1438 = load i32, i32* %quiet2598, align 4
  %tobool2599 = icmp ne i32 %1438, 0
  br i1 %tobool2599, label %cond.false.2601, label %cond.true.2600

cond.true.2600:                                   ; preds = %if.then.2597
  br label %cond.end.2605

cond.false.2601:                                  ; preds = %if.then.2597
  %1439 = load i32, i32* @queryflag, align 4
  %cmp2602 = icmp sge i32 %1439, 0
  %cond2604 = select i1 %cmp2602, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2605

cond.end.2605:                                    ; preds = %cond.false.2601, %cond.true.2600
  %cond2606 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2600 ], [ %cond2604, %cond.false.2601 ]
  %1440 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2606(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.103, i32 0, i32 0), i8* %1440)
  br label %sw.epilog.7356

if.end.2607:                                      ; preds = %if.then.2592
  %1441 = load i8**, i8*** %args, align 8
  %add.ptr2608 = getelementptr inbounds i8*, i8** %1441, i64 2
  store i8** %add.ptr2608, i8*** %args, align 8
  br label %if.end.2609

if.end.2609:                                      ; preds = %if.end.2607, %land.lhs.true.2588, %land.lhs.true.2585, %cond.end.2581
  %1442 = load i8**, i8*** %args, align 8
  %arrayidx2610 = getelementptr inbounds i8*, i8** %1442, i64 0
  %1443 = load i8*, i8** %arrayidx2610, align 8
  %tobool2611 = icmp ne i8* %1443, null
  br i1 %tobool2611, label %land.lhs.true.2612, label %if.end.2625

land.lhs.true.2612:                               ; preds = %if.end.2609
  %1444 = load i8**, i8*** %args, align 8
  %arrayidx2613 = getelementptr inbounds i8*, i8** %1444, i64 1
  %1445 = load i8*, i8** %arrayidx2613, align 8
  %tobool2614 = icmp ne i8* %1445, null
  br i1 %tobool2614, label %if.then.2615, label %if.end.2625

if.then.2615:                                     ; preds = %land.lhs.true.2612
  %1446 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2616 = getelementptr inbounds %struct.action, %struct.action* %1446, i32 0, i32 3
  %1447 = load i32, i32* %quiet2616, align 4
  %tobool2617 = icmp ne i32 %1447, 0
  br i1 %tobool2617, label %cond.false.2619, label %cond.true.2618

cond.true.2618:                                   ; preds = %if.then.2615
  br label %cond.end.2623

cond.false.2619:                                  ; preds = %if.then.2615
  %1448 = load i32, i32* @queryflag, align 4
  %cmp2620 = icmp sge i32 %1448, 0
  %cond2622 = select i1 %cmp2620, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2623

cond.end.2623:                                    ; preds = %cond.false.2619, %cond.true.2618
  %cond2624 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2618 ], [ %cond2622, %cond.false.2619 ]
  %1449 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2624(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.104, i32 0, i32 0), i8* %1449)
  br label %sw.epilog.7356

if.end.2625:                                      ; preds = %land.lhs.true.2612, %if.end.2609
  %1450 = load i8**, i8*** %args, align 8
  %arrayidx2626 = getelementptr inbounds i8*, i8** %1450, i64 0
  %1451 = load i8*, i8** %arrayidx2626, align 8
  %tobool2627 = icmp ne i8* %1451, null
  br i1 %tobool2627, label %cond.true.2628, label %cond.false.2630

cond.true.2628:                                   ; preds = %if.end.2625
  %1452 = load i8**, i8*** %args, align 8
  %arrayidx2629 = getelementptr inbounds i8*, i8** %1452, i64 0
  %1453 = load i8*, i8** %arrayidx2629, align 8
  br label %cond.end.2631

cond.false.2630:                                  ; preds = %if.end.2625
  %1454 = load i8*, i8** @BufferFile, align 8
  br label %cond.end.2631

cond.end.2631:                                    ; preds = %cond.false.2630, %cond.true.2628
  %cond2632 = phi i8* [ %1453, %cond.true.2628 ], [ %1454, %cond.false.2630 ]
  %call2633 = call i8* @ReadFile(i8* %cond2632, i32* %n)
  store i8* %call2633, i8** %s, align 8
  %tobool2634 = icmp ne i8* %call2633, null
  br i1 %tobool2634, label %if.then.2635, label %if.end.2648

if.then.2635:                                     ; preds = %cond.end.2631
  %1455 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2636 = getelementptr inbounds %struct.acluser, %struct.acluser* %1455, i32 0, i32 8
  %buf2637 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2636, i32 0, i32 0
  %1456 = load i8*, i8** %buf2637, align 8
  %tobool2638 = icmp ne i8* %1456, null
  br i1 %tobool2638, label %if.then.2639, label %if.end.2641

if.then.2639:                                     ; preds = %if.then.2635
  %1457 = load %struct.acluser*, %struct.acluser** %user, align 8
  %call2640 = call i32 @UserFreeCopyBuffer(%struct.acluser* %1457)
  br label %if.end.2641

if.end.2641:                                      ; preds = %if.then.2639, %if.then.2635
  %1458 = load i32, i32* %n, align 4
  %1459 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2642 = getelementptr inbounds %struct.acluser, %struct.acluser* %1459, i32 0, i32 8
  %len2643 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2642, i32 0, i32 1
  store i32 %1458, i32* %len2643, align 4
  %1460 = load i8*, i8** %s, align 8
  %1461 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2644 = getelementptr inbounds %struct.acluser, %struct.acluser* %1461, i32 0, i32 8
  %buf2645 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2644, i32 0, i32 0
  store i8* %1460, i8** %buf2645, align 8
  %1462 = load i32, i32* %i, align 4
  %1463 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_plop2646 = getelementptr inbounds %struct.acluser, %struct.acluser* %1463, i32 0, i32 8
  %enc2647 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop2646, i32 0, i32 2
  store i32 %1462, i32* %enc2647, align 4
  br label %if.end.2648

if.end.2648:                                      ; preds = %if.end.2641, %cond.end.2631
  br label %sw.epilog.7356

sw.bb.2649:                                       ; preds = %land.end
  call void @KillBuffers()
  br label %sw.epilog.7356

sw.bb.2650:                                       ; preds = %land.end
  %1464 = load %struct.action*, %struct.action** %act.addr, align 8
  %call2651 = call i32 @ParseSwitch(%struct.action* %1464, i32* @search_ic)
  %1465 = load i32, i32* %msgok, align 4
  %tobool2652 = icmp ne i32 %1465, 0
  br i1 %tobool2652, label %if.then.2653, label %if.end.2665

if.then.2653:                                     ; preds = %sw.bb.2650
  %1466 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2654 = getelementptr inbounds %struct.action, %struct.action* %1466, i32 0, i32 3
  %1467 = load i32, i32* %quiet2654, align 4
  %tobool2655 = icmp ne i32 %1467, 0
  br i1 %tobool2655, label %cond.false.2657, label %cond.true.2656

cond.true.2656:                                   ; preds = %if.then.2653
  br label %cond.end.2661

cond.false.2657:                                  ; preds = %if.then.2653
  %1468 = load i32, i32* @queryflag, align 4
  %cmp2658 = icmp sge i32 %1468, 0
  %cond2660 = select i1 %cmp2658, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2661

cond.end.2661:                                    ; preds = %cond.false.2657, %cond.true.2656
  %cond2662 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2656 ], [ %cond2660, %cond.false.2657 ]
  %1469 = load i32, i32* @search_ic, align 4
  %tobool2663 = icmp ne i32 %1469, 0
  %cond2664 = select i1 %tobool2663, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond2662(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.105, i32 0, i32 0), i8* %cond2664)
  br label %if.end.2665

if.end.2665:                                      ; preds = %cond.end.2661, %sw.bb.2650
  br label %sw.epilog.7356

sw.bb.2666:                                       ; preds = %land.end
  %1470 = load i32*, i32** %argl, align 8
  %1471 = load i32, i32* %1470, align 4
  %cmp2667 = icmp eq i32 %1471, 0
  br i1 %cmp2667, label %if.then.2669, label %if.else.2670

if.then.2669:                                     ; preds = %sw.bb.2666
  %1472 = load %struct.acluser*, %struct.acluser** %user, align 8
  call void @SetEscape(%struct.acluser* %1472, i32 -1, i32 -1)
  br label %if.end.2691

if.else.2670:                                     ; preds = %sw.bb.2666
  %1473 = load i32*, i32** %argl, align 8
  %1474 = load i32, i32* %1473, align 4
  %cmp2671 = icmp eq i32 %1474, 2
  br i1 %cmp2671, label %if.then.2673, label %if.else.2680

if.then.2673:                                     ; preds = %if.else.2670
  %1475 = load %struct.acluser*, %struct.acluser** %user, align 8
  %1476 = load i8**, i8*** %args, align 8
  %arrayidx2674 = getelementptr inbounds i8*, i8** %1476, i64 0
  %1477 = load i8*, i8** %arrayidx2674, align 8
  %arrayidx2675 = getelementptr inbounds i8, i8* %1477, i64 0
  %1478 = load i8, i8* %arrayidx2675, align 1
  %conv2676 = zext i8 %1478 to i32
  %1479 = load i8**, i8*** %args, align 8
  %arrayidx2677 = getelementptr inbounds i8*, i8** %1479, i64 0
  %1480 = load i8*, i8** %arrayidx2677, align 8
  %arrayidx2678 = getelementptr inbounds i8, i8* %1480, i64 1
  %1481 = load i8, i8* %arrayidx2678, align 1
  %conv2679 = zext i8 %1481 to i32
  call void @SetEscape(%struct.acluser* %1475, i32 %conv2676, i32 %conv2679)
  br label %if.end.2690

if.else.2680:                                     ; preds = %if.else.2670
  %1482 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2681 = getelementptr inbounds %struct.action, %struct.action* %1482, i32 0, i32 3
  %1483 = load i32, i32* %quiet2681, align 4
  %tobool2682 = icmp ne i32 %1483, 0
  br i1 %tobool2682, label %cond.false.2684, label %cond.true.2683

cond.true.2683:                                   ; preds = %if.else.2680
  br label %cond.end.2688

cond.false.2684:                                  ; preds = %if.else.2680
  %1484 = load i32, i32* @queryflag, align 4
  %cmp2685 = icmp sge i32 %1484, 0
  %cond2687 = select i1 %cmp2685, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2688

cond.end.2688:                                    ; preds = %cond.false.2684, %cond.true.2683
  %cond2689 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2683 ], [ %cond2687, %cond.false.2684 ]
  %1485 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2689(i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.107, i32 0, i32 0), i8* %1485)
  br label %sw.epilog.7356

if.end.2690:                                      ; preds = %if.then.2673
  br label %if.end.2691

if.end.2691:                                      ; preds = %if.end.2690, %if.then.2669
  %1486 = load %struct.display*, %struct.display** @display, align 8
  %tobool2692 = icmp ne %struct.display* %1486, null
  br i1 %tobool2692, label %land.lhs.true.2693, label %if.end.2697

land.lhs.true.2693:                               ; preds = %if.end.2691
  %1487 = load %struct.acluser*, %struct.acluser** %user, align 8
  %1488 = load %struct.acluser*, %struct.acluser** @users, align 8
  %cmp2694 = icmp ne %struct.acluser* %1487, %1488
  br i1 %cmp2694, label %if.then.2696, label %if.end.2697

if.then.2696:                                     ; preds = %land.lhs.true.2693
  br label %sw.epilog.7356

if.end.2697:                                      ; preds = %land.lhs.true.2693, %if.end.2691
  br label %sw.bb.2698

sw.bb.2698:                                       ; preds = %land.end, %if.end.2697
  %1489 = load i32*, i32** %argl, align 8
  %1490 = load i32, i32* %1489, align 4
  %cmp2699 = icmp eq i32 %1490, 0
  br i1 %cmp2699, label %if.then.2701, label %if.else.2702

if.then.2701:                                     ; preds = %sw.bb.2698
  call void @SetEscape(%struct.acluser* null, i32 -1, i32 -1)
  br label %if.end.2723

if.else.2702:                                     ; preds = %sw.bb.2698
  %1491 = load i32*, i32** %argl, align 8
  %1492 = load i32, i32* %1491, align 4
  %cmp2703 = icmp eq i32 %1492, 2
  br i1 %cmp2703, label %if.then.2705, label %if.else.2712

if.then.2705:                                     ; preds = %if.else.2702
  %1493 = load i8**, i8*** %args, align 8
  %arrayidx2706 = getelementptr inbounds i8*, i8** %1493, i64 0
  %1494 = load i8*, i8** %arrayidx2706, align 8
  %arrayidx2707 = getelementptr inbounds i8, i8* %1494, i64 0
  %1495 = load i8, i8* %arrayidx2707, align 1
  %conv2708 = zext i8 %1495 to i32
  %1496 = load i8**, i8*** %args, align 8
  %arrayidx2709 = getelementptr inbounds i8*, i8** %1496, i64 0
  %1497 = load i8*, i8** %arrayidx2709, align 8
  %arrayidx2710 = getelementptr inbounds i8, i8* %1497, i64 1
  %1498 = load i8, i8* %arrayidx2710, align 1
  %conv2711 = zext i8 %1498 to i32
  call void @SetEscape(%struct.acluser* null, i32 %conv2708, i32 %conv2711)
  br label %if.end.2722

if.else.2712:                                     ; preds = %if.else.2702
  %1499 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2713 = getelementptr inbounds %struct.action, %struct.action* %1499, i32 0, i32 3
  %1500 = load i32, i32* %quiet2713, align 4
  %tobool2714 = icmp ne i32 %1500, 0
  br i1 %tobool2714, label %cond.false.2716, label %cond.true.2715

cond.true.2715:                                   ; preds = %if.else.2712
  br label %cond.end.2720

cond.false.2716:                                  ; preds = %if.else.2712
  %1501 = load i32, i32* @queryflag, align 4
  %cmp2717 = icmp sge i32 %1501, 0
  %cond2719 = select i1 %cmp2717, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2720

cond.end.2720:                                    ; preds = %cond.false.2716, %cond.true.2715
  %cond2721 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2715 ], [ %cond2719, %cond.false.2716 ]
  %1502 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2721(i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.108, i32 0, i32 0), i8* %1502)
  br label %sw.epilog.7356

if.end.2722:                                      ; preds = %if.then.2705
  br label %if.end.2723

if.end.2723:                                      ; preds = %if.end.2722, %if.then.2701
  call void @CheckEscape()
  br label %sw.epilog.7356

sw.bb.2724:                                       ; preds = %land.end
  %1503 = load i8**, i8*** %args, align 8
  %1504 = load i8*, i8** %1503, align 8
  %tobool2725 = icmp ne i8* %1504, null
  br i1 %tobool2725, label %cond.true.2726, label %cond.false.2727

cond.true.2726:                                   ; preds = %sw.bb.2724
  %1505 = load i8**, i8*** %args, align 8
  %1506 = load i8*, i8** %1505, align 8
  br label %cond.end.2728

cond.false.2727:                                  ; preds = %sw.bb.2724
  %1507 = load i8*, i8** @home, align 8
  br label %cond.end.2728

cond.end.2728:                                    ; preds = %cond.false.2727, %cond.true.2726
  %cond2729 = phi i8* [ %1506, %cond.true.2726 ], [ %1507, %cond.false.2727 ]
  store i8* %cond2729, i8** %s, align 8
  %1508 = load i8*, i8** %s, align 8
  %call2730 = call i32 @chdir(i8* %1508) #4
  %cmp2731 = icmp eq i32 %call2730, -1
  br i1 %cmp2731, label %if.then.2733, label %if.end.2744

if.then.2733:                                     ; preds = %cond.end.2728
  %1509 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2734 = getelementptr inbounds %struct.action, %struct.action* %1509, i32 0, i32 3
  %1510 = load i32, i32* %quiet2734, align 4
  %tobool2735 = icmp ne i32 %1510, 0
  br i1 %tobool2735, label %cond.false.2737, label %cond.true.2736

cond.true.2736:                                   ; preds = %if.then.2733
  br label %cond.end.2741

cond.false.2737:                                  ; preds = %if.then.2733
  %1511 = load i32, i32* @queryflag, align 4
  %cmp2738 = icmp sge i32 %1511, 0
  %cond2740 = select i1 %cmp2738, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2741

cond.end.2741:                                    ; preds = %cond.false.2737, %cond.true.2736
  %cond2742 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2736 ], [ %cond2740, %cond.false.2737 ]
  %call2743 = call i32* @__errno_location() #9
  %1512 = load i32, i32* %call2743, align 4
  %1513 = load i8*, i8** %s, align 8
  call void (i32, i8*, ...) %cond2742(i32 %1512, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %1513)
  br label %if.end.2744

if.end.2744:                                      ; preds = %cond.end.2741, %cond.end.2728
  br label %sw.epilog.7356

sw.bb.2745:                                       ; preds = %land.end, %land.end
  %1514 = load %struct.action*, %struct.action** %act.addr, align 8
  %call2746 = call i32 @ParseSaveStr(%struct.action* %1514, i8** @ShellProg)
  %cmp2747 = icmp eq i32 %call2746, 0
  br i1 %cmp2747, label %if.then.2749, label %if.end.2750

if.then.2749:                                     ; preds = %sw.bb.2745
  %1515 = load i8*, i8** @ShellProg, align 8
  store i8* %1515, i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @ShellArgs, i32 0, i64 0), align 8
  br label %if.end.2750

if.end.2750:                                      ; preds = %if.then.2749, %sw.bb.2745
  br label %sw.epilog.7356

sw.bb.2751:                                       ; preds = %land.end
  %1516 = load i8**, i8*** %args, align 8
  %1517 = load i8*, i8** %1516, align 8
  %tobool2752 = icmp ne i8* %1517, null
  br i1 %tobool2752, label %if.then.2753, label %if.end.2755

if.then.2753:                                     ; preds = %sw.bb.2751
  %1518 = load %struct.action*, %struct.action** %act.addr, align 8
  %call2754 = call i32 @ParseSaveStr(%struct.action* %1518, i8** @hardcopydir)
  br label %if.end.2755

if.end.2755:                                      ; preds = %if.then.2753, %sw.bb.2751
  %1519 = load i32, i32* %msgok, align 4
  %tobool2756 = icmp ne i32 %1519, 0
  br i1 %tobool2756, label %if.then.2757, label %if.end.2775

if.then.2757:                                     ; preds = %if.end.2755
  %1520 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2758 = getelementptr inbounds %struct.action, %struct.action* %1520, i32 0, i32 3
  %1521 = load i32, i32* %quiet2758, align 4
  %tobool2759 = icmp ne i32 %1521, 0
  br i1 %tobool2759, label %cond.false.2761, label %cond.true.2760

cond.true.2760:                                   ; preds = %if.then.2757
  br label %cond.end.2765

cond.false.2761:                                  ; preds = %if.then.2757
  %1522 = load i32, i32* @queryflag, align 4
  %cmp2762 = icmp sge i32 %1522, 0
  %cond2764 = select i1 %cmp2762, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2765

cond.end.2765:                                    ; preds = %cond.false.2761, %cond.true.2760
  %cond2766 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2760 ], [ %cond2764, %cond.false.2761 ]
  %1523 = load i8*, i8** @hardcopydir, align 8
  %tobool2767 = icmp ne i8* %1523, null
  br i1 %tobool2767, label %land.lhs.true.2768, label %cond.false.2772

land.lhs.true.2768:                               ; preds = %cond.end.2765
  %1524 = load i8*, i8** @hardcopydir, align 8
  %1525 = load i8, i8* %1524, align 1
  %conv2769 = sext i8 %1525 to i32
  %tobool2770 = icmp ne i32 %conv2769, 0
  br i1 %tobool2770, label %cond.true.2771, label %cond.false.2772

cond.true.2771:                                   ; preds = %land.lhs.true.2768
  %1526 = load i8*, i8** @hardcopydir, align 8
  br label %cond.end.2773

cond.false.2772:                                  ; preds = %land.lhs.true.2768, %cond.end.2765
  br label %cond.end.2773

cond.end.2773:                                    ; preds = %cond.false.2772, %cond.true.2771
  %cond2774 = phi i8* [ %1526, %cond.true.2771 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i32 0, i32 0), %cond.false.2772 ]
  call void (i32, i8*, ...) %cond2766(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.109, i32 0, i32 0), i8* %cond2774)
  br label %if.end.2775

if.end.2775:                                      ; preds = %cond.end.2773, %if.end.2755
  br label %sw.epilog.7356

sw.bb.2776:                                       ; preds = %land.end
  %1527 = load i8**, i8*** %args, align 8
  %1528 = load i8*, i8** %1527, align 8
  %tobool2777 = icmp ne i8* %1528, null
  br i1 %tobool2777, label %if.then.2778, label %if.end.2829

if.then.2778:                                     ; preds = %sw.bb.2776
  %1529 = load i8**, i8*** %args, align 8
  %arrayidx2780 = getelementptr inbounds i8*, i8** %1529, i64 1
  %1530 = load i8*, i8** %arrayidx2780, align 8
  %tobool2781 = icmp ne i8* %1530, null
  br i1 %tobool2781, label %land.lhs.true.2782, label %if.end.2800

land.lhs.true.2782:                               ; preds = %if.then.2778
  %1531 = load i8**, i8*** %args, align 8
  %1532 = load i8*, i8** %1531, align 8
  %call2783 = call i32 @strcmp(i8* %1532, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0)) #8
  %tobool2784 = icmp ne i32 %call2783, 0
  br i1 %tobool2784, label %if.end.2800, label %if.then.2785

if.then.2785:                                     ; preds = %land.lhs.true.2782
  %1533 = load i8**, i8*** %args, align 8
  %arrayidx2786 = getelementptr inbounds i8*, i8** %1533, i64 1
  %1534 = load i8*, i8** %arrayidx2786, align 8
  %call2787 = call i32 @atoi(i8* %1534) #8
  store i32 %call2787, i32* @log_flush, align 4
  %1535 = load i32, i32* %msgok, align 4
  %tobool2788 = icmp ne i32 %1535, 0
  br i1 %tobool2788, label %if.then.2789, label %if.end.2799

if.then.2789:                                     ; preds = %if.then.2785
  %1536 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2790 = getelementptr inbounds %struct.action, %struct.action* %1536, i32 0, i32 3
  %1537 = load i32, i32* %quiet2790, align 4
  %tobool2791 = icmp ne i32 %1537, 0
  br i1 %tobool2791, label %cond.false.2793, label %cond.true.2792

cond.true.2792:                                   ; preds = %if.then.2789
  br label %cond.end.2797

cond.false.2793:                                  ; preds = %if.then.2789
  %1538 = load i32, i32* @queryflag, align 4
  %cmp2794 = icmp sge i32 %1538, 0
  %cond2796 = select i1 %cmp2794, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2797

cond.end.2797:                                    ; preds = %cond.false.2793, %cond.true.2792
  %cond2798 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2792 ], [ %cond2796, %cond.false.2793 ]
  %1539 = load i32, i32* @log_flush, align 4
  call void (i32, i8*, ...) %cond2798(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.112, i32 0, i32 0), i32 %1539)
  br label %if.end.2799

if.end.2799:                                      ; preds = %cond.end.2797, %if.then.2785
  br label %sw.epilog.7356

if.end.2800:                                      ; preds = %land.lhs.true.2782, %if.then.2778
  %1540 = load %struct.action*, %struct.action** %act.addr, align 8
  %call2801 = call i32 @ParseSaveStr(%struct.action* %1540, i8** @screenlogfile)
  %tobool2802 = icmp ne i32 %call2801, 0
  br i1 %tobool2802, label %if.then.2803, label %if.end.2804

if.then.2803:                                     ; preds = %if.end.2800
  br label %sw.epilog.7356

if.end.2804:                                      ; preds = %if.end.2800
  %1541 = load %struct.win*, %struct.win** @fore, align 8
  %tobool2805 = icmp ne %struct.win* %1541, null
  br i1 %tobool2805, label %land.lhs.true.2806, label %if.end.2825

land.lhs.true.2806:                               ; preds = %if.end.2804
  %1542 = load %struct.win*, %struct.win** @fore, align 8
  %w_log2807 = getelementptr inbounds %struct.win, %struct.win* %1542, i32 0, i32 68
  %1543 = load %struct.logfile*, %struct.logfile** %w_log2807, align 8
  %tobool2808 = icmp ne %struct.logfile* %1543, null
  br i1 %tobool2808, label %if.then.2809, label %if.end.2825

if.then.2809:                                     ; preds = %land.lhs.true.2806
  %1544 = load %struct.win*, %struct.win** @fore, align 8
  %arraydecay2810 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf2779, i32 0, i32 0
  %call2811 = call i32 @DoStartLog(%struct.win* %1544, i8* %arraydecay2810, i32 1024)
  %tobool2812 = icmp ne i32 %call2811, 0
  br i1 %tobool2812, label %if.then.2813, label %if.end.2824

if.then.2813:                                     ; preds = %if.then.2809
  %1545 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2814 = getelementptr inbounds %struct.action, %struct.action* %1545, i32 0, i32 3
  %1546 = load i32, i32* %quiet2814, align 4
  %tobool2815 = icmp ne i32 %1546, 0
  br i1 %tobool2815, label %cond.false.2817, label %cond.true.2816

cond.true.2816:                                   ; preds = %if.then.2813
  br label %cond.end.2821

cond.false.2817:                                  ; preds = %if.then.2813
  %1547 = load i32, i32* @queryflag, align 4
  %cmp2818 = icmp sge i32 %1547, 0
  %cond2820 = select i1 %cmp2818, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2821

cond.end.2821:                                    ; preds = %cond.false.2817, %cond.true.2816
  %cond2822 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2816 ], [ %cond2820, %cond.false.2817 ]
  %arraydecay2823 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf2779, i32 0, i32 0
  call void (i32, i8*, ...) %cond2822(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.113, i32 0, i32 0), i8* %arraydecay2823)
  br label %if.end.2824

if.end.2824:                                      ; preds = %cond.end.2821, %if.then.2809
  br label %if.end.2825

if.end.2825:                                      ; preds = %if.end.2824, %land.lhs.true.2806, %if.end.2804
  %1548 = load i32, i32* %msgok, align 4
  %tobool2826 = icmp ne i32 %1548, 0
  br i1 %tobool2826, label %if.end.2828, label %if.then.2827

if.then.2827:                                     ; preds = %if.end.2825
  br label %sw.epilog.7356

if.end.2828:                                      ; preds = %if.end.2825
  br label %if.end.2829

if.end.2829:                                      ; preds = %if.end.2828, %sw.bb.2776
  %1549 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2830 = getelementptr inbounds %struct.action, %struct.action* %1549, i32 0, i32 3
  %1550 = load i32, i32* %quiet2830, align 4
  %tobool2831 = icmp ne i32 %1550, 0
  br i1 %tobool2831, label %cond.false.2833, label %cond.true.2832

cond.true.2832:                                   ; preds = %if.end.2829
  br label %cond.end.2837

cond.false.2833:                                  ; preds = %if.end.2829
  %1551 = load i32, i32* @queryflag, align 4
  %cmp2834 = icmp sge i32 %1551, 0
  %cond2836 = select i1 %cmp2834, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2837

cond.end.2837:                                    ; preds = %cond.false.2833, %cond.true.2832
  %cond2838 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2832 ], [ %cond2836, %cond.false.2833 ]
  %1552 = load i8*, i8** @screenlogfile, align 8
  call void (i32, i8*, ...) %cond2838(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i32 0, i32 0), i8* %1552)
  br label %sw.epilog.7356

sw.bb.2839:                                       ; preds = %land.end
  %1553 = load i8**, i8*** %args, align 8
  %1554 = load i8*, i8** %1553, align 8
  %tobool2840 = icmp ne i8* %1554, null
  br i1 %tobool2840, label %lor.lhs.false.2841, label %if.then.2847

lor.lhs.false.2841:                               ; preds = %sw.bb.2839
  %1555 = load i8**, i8*** %args, align 8
  %1556 = load i8*, i8** %1555, align 8
  %call2842 = call i32 @strcmp(i8* %1556, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #8
  %tobool2843 = icmp ne i32 %call2842, 0
  br i1 %tobool2843, label %lor.lhs.false.2844, label %if.then.2847

lor.lhs.false.2844:                               ; preds = %lor.lhs.false.2841
  %1557 = load i8**, i8*** %args, align 8
  %1558 = load i8*, i8** %1557, align 8
  %call2845 = call i32 @strcmp(i8* %1558, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)) #8
  %tobool2846 = icmp ne i32 %call2845, 0
  br i1 %tobool2846, label %if.else.2866, label %if.then.2847

if.then.2847:                                     ; preds = %lor.lhs.false.2844, %lor.lhs.false.2841, %sw.bb.2839
  %1559 = load %struct.action*, %struct.action** %act.addr, align 8
  %call2848 = call i32 @ParseSwitch(%struct.action* %1559, i32* @logtstamp_on)
  %cmp2849 = icmp eq i32 %call2848, 0
  br i1 %cmp2849, label %land.lhs.true.2851, label %if.end.2865

land.lhs.true.2851:                               ; preds = %if.then.2847
  %1560 = load i32, i32* %msgok, align 4
  %tobool2852 = icmp ne i32 %1560, 0
  br i1 %tobool2852, label %if.then.2853, label %if.end.2865

if.then.2853:                                     ; preds = %land.lhs.true.2851
  %1561 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2854 = getelementptr inbounds %struct.action, %struct.action* %1561, i32 0, i32 3
  %1562 = load i32, i32* %quiet2854, align 4
  %tobool2855 = icmp ne i32 %1562, 0
  br i1 %tobool2855, label %cond.false.2857, label %cond.true.2856

cond.true.2856:                                   ; preds = %if.then.2853
  br label %cond.end.2861

cond.false.2857:                                  ; preds = %if.then.2853
  %1563 = load i32, i32* @queryflag, align 4
  %cmp2858 = icmp sge i32 %1563, 0
  %cond2860 = select i1 %cmp2858, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2861

cond.end.2861:                                    ; preds = %cond.false.2857, %cond.true.2856
  %cond2862 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2856 ], [ %cond2860, %cond.false.2857 ]
  %1564 = load i32, i32* @logtstamp_on, align 4
  %tobool2863 = icmp ne i32 %1564, 0
  %cond2864 = select i1 %tobool2863, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)
  call void (i32, i8*, ...) %cond2862(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.115, i32 0, i32 0), i8* %cond2864)
  br label %if.end.2865

if.end.2865:                                      ; preds = %cond.end.2861, %land.lhs.true.2851, %if.then.2847
  br label %if.end.2925

if.else.2866:                                     ; preds = %lor.lhs.false.2844
  %1565 = load i8**, i8*** %args, align 8
  %1566 = load i8*, i8** %1565, align 8
  %call2867 = call i32 @strcmp(i8* %1566, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0)) #8
  %tobool2868 = icmp ne i32 %call2867, 0
  br i1 %tobool2868, label %if.else.2891, label %if.then.2869

if.then.2869:                                     ; preds = %if.else.2866
  %1567 = load i8**, i8*** %args, align 8
  %arrayidx2870 = getelementptr inbounds i8*, i8** %1567, i64 1
  %1568 = load i8*, i8** %arrayidx2870, align 8
  %tobool2871 = icmp ne i8* %1568, null
  br i1 %tobool2871, label %if.then.2872, label %if.end.2878

if.then.2872:                                     ; preds = %if.then.2869
  %1569 = load i8*, i8** @logtstamp_string, align 8
  %tobool2873 = icmp ne i8* %1569, null
  br i1 %tobool2873, label %if.then.2874, label %if.end.2875

if.then.2874:                                     ; preds = %if.then.2872
  %1570 = load i8*, i8** @logtstamp_string, align 8
  call void @free(i8* %1570) #4
  br label %if.end.2875

if.end.2875:                                      ; preds = %if.then.2874, %if.then.2872
  %1571 = load i8**, i8*** %args, align 8
  %arrayidx2876 = getelementptr inbounds i8*, i8** %1571, i64 1
  %1572 = load i8*, i8** %arrayidx2876, align 8
  %call2877 = call i8* @SaveStr(i8* %1572)
  store i8* %call2877, i8** @logtstamp_string, align 8
  br label %if.end.2878

if.end.2878:                                      ; preds = %if.end.2875, %if.then.2869
  %1573 = load i32, i32* %msgok, align 4
  %tobool2879 = icmp ne i32 %1573, 0
  br i1 %tobool2879, label %if.then.2880, label %if.end.2890

if.then.2880:                                     ; preds = %if.end.2878
  %1574 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2881 = getelementptr inbounds %struct.action, %struct.action* %1574, i32 0, i32 3
  %1575 = load i32, i32* %quiet2881, align 4
  %tobool2882 = icmp ne i32 %1575, 0
  br i1 %tobool2882, label %cond.false.2884, label %cond.true.2883

cond.true.2883:                                   ; preds = %if.then.2880
  br label %cond.end.2888

cond.false.2884:                                  ; preds = %if.then.2880
  %1576 = load i32, i32* @queryflag, align 4
  %cmp2885 = icmp sge i32 %1576, 0
  %cond2887 = select i1 %cmp2885, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2888

cond.end.2888:                                    ; preds = %cond.false.2884, %cond.true.2883
  %cond2889 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2883 ], [ %cond2887, %cond.false.2884 ]
  %1577 = load i8*, i8** @logtstamp_string, align 8
  call void (i32, i8*, ...) %cond2889(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.116, i32 0, i32 0), i8* %1577)
  br label %if.end.2890

if.end.2890:                                      ; preds = %cond.end.2888, %if.end.2878
  br label %if.end.2924

if.else.2891:                                     ; preds = %if.else.2866
  %1578 = load i8**, i8*** %args, align 8
  %1579 = load i8*, i8** %1578, align 8
  %call2892 = call i32 @strcmp(i8* %1579, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.117, i32 0, i32 0)) #8
  %tobool2893 = icmp ne i32 %call2892, 0
  br i1 %tobool2893, label %if.else.2913, label %if.then.2894

if.then.2894:                                     ; preds = %if.else.2891
  %1580 = load i8**, i8*** %args, align 8
  %arrayidx2895 = getelementptr inbounds i8*, i8** %1580, i64 1
  %1581 = load i8*, i8** %arrayidx2895, align 8
  %tobool2896 = icmp ne i8* %1581, null
  br i1 %tobool2896, label %if.then.2897, label %if.end.2903

if.then.2897:                                     ; preds = %if.then.2894
  %1582 = load i8**, i8*** %args, align 8
  %arrayidx2898 = getelementptr inbounds i8*, i8** %1582, i64 1
  %1583 = load i8*, i8** %arrayidx2898, align 8
  %call2899 = call i32 @atoi(i8* %1583) #8
  store i32 %call2899, i32* @logtstamp_after, align 4
  %1584 = load i32, i32* %msgok, align 4
  %tobool2900 = icmp ne i32 %1584, 0
  br i1 %tobool2900, label %if.end.2902, label %if.then.2901

if.then.2901:                                     ; preds = %if.then.2897
  br label %sw.epilog.7356

if.end.2902:                                      ; preds = %if.then.2897
  br label %if.end.2903

if.end.2903:                                      ; preds = %if.end.2902, %if.then.2894
  %1585 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2904 = getelementptr inbounds %struct.action, %struct.action* %1585, i32 0, i32 3
  %1586 = load i32, i32* %quiet2904, align 4
  %tobool2905 = icmp ne i32 %1586, 0
  br i1 %tobool2905, label %cond.false.2907, label %cond.true.2906

cond.true.2906:                                   ; preds = %if.end.2903
  br label %cond.end.2911

cond.false.2907:                                  ; preds = %if.end.2903
  %1587 = load i32, i32* @queryflag, align 4
  %cmp2908 = icmp sge i32 %1587, 0
  %cond2910 = select i1 %cmp2908, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2911

cond.end.2911:                                    ; preds = %cond.false.2907, %cond.true.2906
  %cond2912 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2906 ], [ %cond2910, %cond.false.2907 ]
  %1588 = load i32, i32* @logtstamp_after, align 4
  call void (i32, i8*, ...) %cond2912(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.118, i32 0, i32 0), i32 %1588)
  br label %if.end.2923

if.else.2913:                                     ; preds = %if.else.2891
  %1589 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2914 = getelementptr inbounds %struct.action, %struct.action* %1589, i32 0, i32 3
  %1590 = load i32, i32* %quiet2914, align 4
  %tobool2915 = icmp ne i32 %1590, 0
  br i1 %tobool2915, label %cond.false.2917, label %cond.true.2916

cond.true.2916:                                   ; preds = %if.else.2913
  br label %cond.end.2921

cond.false.2917:                                  ; preds = %if.else.2913
  %1591 = load i32, i32* @queryflag, align 4
  %cmp2918 = icmp sge i32 %1591, 0
  %cond2920 = select i1 %cmp2918, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2921

cond.end.2921:                                    ; preds = %cond.false.2917, %cond.true.2916
  %cond2922 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2916 ], [ %cond2920, %cond.false.2917 ]
  call void (i32, i8*, ...) %cond2922(i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.119, i32 0, i32 0))
  br label %if.end.2923

if.end.2923:                                      ; preds = %cond.end.2921, %cond.end.2911
  br label %if.end.2924

if.end.2924:                                      ; preds = %if.end.2923, %if.end.2890
  br label %if.end.2925

if.end.2925:                                      ; preds = %if.end.2924, %if.end.2865
  br label %sw.epilog.7356

sw.bb.2926:                                       ; preds = %land.end
  %1592 = load %struct.action*, %struct.action** %act.addr, align 8
  %call2927 = call i32 @ParseSaveStr(%struct.action* %1592, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 1))
  br label %sw.epilog.7356

sw.bb.2928:                                       ; preds = %land.end, %land.end, %land.end
  %1593 = load i8*, i8** @rc_name, align 8
  %tobool2929 = icmp ne i8* %1593, null
  br i1 %tobool2929, label %lor.lhs.false.2930, label %if.then.2932

lor.lhs.false.2930:                               ; preds = %sw.bb.2928
  %1594 = load i8*, i8** @rc_name, align 8
  %1595 = load i8, i8* %1594, align 1
  %tobool2931 = icmp ne i8 %1595, 0
  br i1 %tobool2931, label %if.end.2942, label %if.then.2932

if.then.2932:                                     ; preds = %lor.lhs.false.2930, %sw.bb.2928
  %1596 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2933 = getelementptr inbounds %struct.action, %struct.action* %1596, i32 0, i32 3
  %1597 = load i32, i32* %quiet2933, align 4
  %tobool2934 = icmp ne i32 %1597, 0
  br i1 %tobool2934, label %cond.false.2936, label %cond.true.2935

cond.true.2935:                                   ; preds = %if.then.2932
  br label %cond.end.2940

cond.false.2936:                                  ; preds = %if.then.2932
  %1598 = load i32, i32* @queryflag, align 4
  %cmp2937 = icmp sge i32 %1598, 0
  %cond2939 = select i1 %cmp2937, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2940

cond.end.2940:                                    ; preds = %cond.false.2936, %cond.true.2935
  %cond2941 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2935 ], [ %cond2939, %cond.false.2936 ]
  call void (i32, i8*, ...) %cond2941(i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.120, i32 0, i32 0))
  br label %if.end.2942

if.end.2942:                                      ; preds = %cond.end.2940, %lor.lhs.false.2930
  br label %sw.epilog.7356

sw.bb.2943:                                       ; preds = %land.end
  br label %sw.epilog.7356

sw.bb.2944:                                       ; preds = %land.end
  store i8* null, i8** %s, align 8
  %1599 = load %struct.action*, %struct.action** %act.addr, align 8
  %call2945 = call i32 @ParseSaveStr(%struct.action* %1599, i8** %s)
  %tobool2946 = icmp ne i32 %call2945, 0
  br i1 %tobool2946, label %if.then.2947, label %if.end.2948

if.then.2947:                                     ; preds = %sw.bb.2944
  br label %sw.epilog.7356

if.end.2948:                                      ; preds = %sw.bb.2944
  %1600 = load i8*, i8** %s, align 8
  %call2949 = call i64 @strlen(i8* %1600) #8
  %cmp2950 = icmp ugt i64 %call2949, 32
  br i1 %cmp2950, label %if.then.2952, label %if.end.2962

if.then.2952:                                     ; preds = %if.end.2948
  %1601 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet2953 = getelementptr inbounds %struct.action, %struct.action* %1601, i32 0, i32 3
  %1602 = load i32, i32* %quiet2953, align 4
  %tobool2954 = icmp ne i32 %1602, 0
  br i1 %tobool2954, label %cond.false.2956, label %cond.true.2955

cond.true.2955:                                   ; preds = %if.then.2952
  br label %cond.end.2960

cond.false.2956:                                  ; preds = %if.then.2952
  %1603 = load i32, i32* @queryflag, align 4
  %cmp2957 = icmp sge i32 %1603, 0
  %cond2959 = select i1 %cmp2957, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.2960

cond.end.2960:                                    ; preds = %cond.false.2956, %cond.true.2955
  %cond2961 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.2955 ], [ %cond2959, %cond.false.2956 ]
  %1604 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond2961(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.121, i32 0, i32 0), i8* %1604, i32 32)
  %1605 = load i8*, i8** %s, align 8
  call void @free(i8* %1605) #4
  br label %sw.epilog.7356

if.end.2962:                                      ; preds = %if.end.2948
  %1606 = load i8*, i8** %s, align 8
  %call2963 = call i8* @strncpy(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @screenterm, i32 0, i32 0), i8* %1606, i64 32) #4
  store i8 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @screenterm, i32 0, i64 32), align 1
  %1607 = load i8*, i8** %s, align 8
  call void @free(i8* %1607) #4
  br label %do.body.2964

do.body.2964:                                     ; preds = %if.end.2962
  br label %do.end.2965

do.end.2965:                                      ; preds = %do.body.2964
  %1608 = load %struct.display*, %struct.display** @display, align 8
  %cmp2966 = icmp eq %struct.display* %1608, null
  %conv2967 = zext i1 %cmp2966 to i32
  %call2968 = call i8* @MakeTermcap(i32 %conv2967)
  br label %do.body.2969

do.body.2969:                                     ; preds = %do.end.2965
  br label %do.end.2970

do.end.2970:                                      ; preds = %do.body.2969
  br label %sw.epilog.7356

sw.bb.2971:                                       ; preds = %land.end
  %1609 = load i32, i32* %msgok, align 4
  %tobool2972 = icmp ne i32 %1609, 0
  br i1 %tobool2972, label %if.end.2979, label %land.lhs.true.2973

land.lhs.true.2973:                               ; preds = %sw.bb.2971
  %1610 = load i8*, i8** @rc_name, align 8
  %tobool2974 = icmp ne i8* %1610, null
  br i1 %tobool2974, label %lor.lhs.false.2975, label %if.then.2978

lor.lhs.false.2975:                               ; preds = %land.lhs.true.2973
  %1611 = load i8*, i8** @rc_name, align 8
  %call2976 = call i32 @strcmp(i8* %1611, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.122, i32 0, i32 0)) #8
  %tobool2977 = icmp ne i32 %call2976, 0
  br i1 %tobool2977, label %if.then.2978, label %if.end.2979

if.then.2978:                                     ; preds = %lor.lhs.false.2975, %land.lhs.true.2973
  br label %sw.epilog.7356

if.end.2979:                                      ; preds = %lor.lhs.false.2975, %sw.bb.2971
  %1612 = load i32, i32* %argc, align 4
  %cmp2980 = icmp sgt i32 %1612, 1
  br i1 %cmp2980, label %land.lhs.true.2982, label %if.end.2988

land.lhs.true.2982:                               ; preds = %if.end.2979
  %1613 = load i8**, i8*** %args, align 8
  %1614 = load i8*, i8** %1613, align 8
  %call2983 = call i32 @strcmp(i8* %1614, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.123, i32 0, i32 0)) #8
  %tobool2984 = icmp ne i32 %call2983, 0
  br i1 %tobool2984, label %if.end.2988, label %if.then.2985

if.then.2985:                                     ; preds = %land.lhs.true.2982
  %1615 = load i8**, i8*** %args, align 8
  %incdec.ptr2986 = getelementptr inbounds i8*, i8** %1615, i32 1
  store i8** %incdec.ptr2986, i8*** %args, align 8
  %1616 = load i32, i32* %argc, align 4
  %dec2987 = add nsw i32 %1616, -1
  store i32 %dec2987, i32* %argc, align 4
  br label %if.end.2988

if.end.2988:                                      ; preds = %if.then.2985, %land.lhs.true.2982, %if.end.2979
  %1617 = load i8**, i8*** %args, align 8
  %1618 = load i8*, i8** %1617, align 8
  store i8* %1618, i8** %s, align 8
  %1619 = load i32, i32* %argc, align 4
  %cmp2989 = icmp sgt i32 %1619, 1
  br i1 %cmp2989, label %land.lhs.true.2991, label %if.end.3001

land.lhs.true.2991:                               ; preds = %if.end.2988
  %1620 = load i8**, i8*** %args, align 8
  %1621 = load i8*, i8** %1620, align 8
  %call2992 = call i32 @strcmp(i8* %1621, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i32 0, i32 0)) #8
  %tobool2993 = icmp ne i32 %call2992, 0
  br i1 %tobool2993, label %if.end.3001, label %if.then.2994

if.then.2994:                                     ; preds = %land.lhs.true.2991
  %1622 = load i8**, i8*** %args, align 8
  %incdec.ptr2995 = getelementptr inbounds i8*, i8** %1622, i32 1
  store i8** %incdec.ptr2995, i8*** %args, align 8
  %1623 = load i32, i32* %argc, align 4
  %dec2996 = add nsw i32 %1623, -1
  store i32 %dec2996, i32* %argc, align 4
  %1624 = load i8**, i8*** %args, align 8
  %1625 = load i8*, i8** %1624, align 8
  store i8* %1625, i8** %s, align 8
  %1626 = load i8*, i8** %s, align 8
  %tobool2997 = icmp ne i8* %1626, null
  br i1 %tobool2997, label %if.then.2998, label %if.end.3000

if.then.2998:                                     ; preds = %if.then.2994
  %1627 = load i8*, i8** %s, align 8
  %1628 = load %struct.win*, %struct.win** @fore, align 8
  %call2999 = call i8* @MakeWinMsg(i8* %1627, %struct.win* %1628, i32 37)
  store i8* %call2999, i8** %s, align 8
  br label %if.end.3000

if.end.3000:                                      ; preds = %if.then.2998, %if.then.2994
  br label %if.end.3001

if.end.3001:                                      ; preds = %if.end.3000, %land.lhs.true.2991, %if.end.2988
  %1629 = load i8*, i8** %s, align 8
  %tobool3002 = icmp ne i8* %1629, null
  br i1 %tobool3002, label %if.then.3003, label %if.else.3013

if.then.3003:                                     ; preds = %if.end.3001
  %1630 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3004 = getelementptr inbounds %struct.action, %struct.action* %1630, i32 0, i32 3
  %1631 = load i32, i32* %quiet3004, align 4
  %tobool3005 = icmp ne i32 %1631, 0
  br i1 %tobool3005, label %cond.false.3007, label %cond.true.3006

cond.true.3006:                                   ; preds = %if.then.3003
  br label %cond.end.3011

cond.false.3007:                                  ; preds = %if.then.3003
  %1632 = load i32, i32* @queryflag, align 4
  %cmp3008 = icmp sge i32 %1632, 0
  %cond3010 = select i1 %cmp3008, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3011

cond.end.3011:                                    ; preds = %cond.false.3007, %cond.true.3006
  %cond3012 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3006 ], [ %cond3010, %cond.false.3007 ]
  %1633 = load i8*, i8** %s, align 8
  call void (i32, i8*, ...) %cond3012(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %1633)
  br label %if.end.3023

if.else.3013:                                     ; preds = %if.end.3001
  %1634 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3014 = getelementptr inbounds %struct.action, %struct.action* %1634, i32 0, i32 3
  %1635 = load i32, i32* %quiet3014, align 4
  %tobool3015 = icmp ne i32 %1635, 0
  br i1 %tobool3015, label %cond.false.3017, label %cond.true.3016

cond.true.3016:                                   ; preds = %if.else.3013
  br label %cond.end.3021

cond.false.3017:                                  ; preds = %if.else.3013
  %1636 = load i32, i32* @queryflag, align 4
  %cmp3018 = icmp sge i32 %1636, 0
  %cond3020 = select i1 %cmp3018, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3021

cond.end.3021:                                    ; preds = %cond.false.3017, %cond.true.3016
  %cond3022 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3016 ], [ %cond3020, %cond.false.3017 ]
  %1637 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond3022(i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.125, i32 0, i32 0), i8* %1637)
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.3023

if.end.3023:                                      ; preds = %cond.end.3021, %cond.end.3011
  br label %sw.epilog.7356

sw.bb.3024:                                       ; preds = %land.end, %land.end
  %1638 = load i8**, i8*** %args, align 8
  %1639 = load i8*, i8** %1638, align 8
  %cmp3025 = icmp eq i8* %1639, null
  br i1 %cmp3025, label %if.then.3027, label %if.end.3041

if.then.3027:                                     ; preds = %sw.bb.3024
  %arraydecay3029 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3028, i32 0, i32 0
  %1640 = load i8*, i8** @BellString, align 8
  %call3030 = call i32 @AddXChars(i8* %arraydecay3029, i32 256, i8* %1640)
  %1641 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3031 = getelementptr inbounds %struct.action, %struct.action* %1641, i32 0, i32 3
  %1642 = load i32, i32* %quiet3031, align 4
  %tobool3032 = icmp ne i32 %1642, 0
  br i1 %tobool3032, label %cond.false.3034, label %cond.true.3033

cond.true.3033:                                   ; preds = %if.then.3027
  br label %cond.end.3038

cond.false.3034:                                  ; preds = %if.then.3027
  %1643 = load i32, i32* @queryflag, align 4
  %cmp3035 = icmp sge i32 %1643, 0
  %cond3037 = select i1 %cmp3035, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3038

cond.end.3038:                                    ; preds = %cond.false.3034, %cond.true.3033
  %cond3039 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3033 ], [ %cond3037, %cond.false.3034 ]
  %arraydecay3040 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3028, i32 0, i32 0
  call void (i32, i8*, ...) %cond3039(i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i32 0, i32 0), i8* %arraydecay3040)
  br label %sw.epilog.7356

if.end.3041:                                      ; preds = %sw.bb.3024
  %1644 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3042 = call i32 @ParseSaveStr(%struct.action* %1644, i8** @BellString)
  br label %sw.epilog.7356

sw.bb.3043:                                       ; preds = %land.end
  %1645 = load i8**, i8*** %args, align 8
  %1646 = load i8*, i8** %1645, align 8
  %cmp3044 = icmp eq i8* %1646, null
  br i1 %cmp3044, label %if.then.3046, label %if.else.3048

if.then.3046:                                     ; preds = %sw.bb.3043
  %call3047 = call i8* @SaveStr(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.127, i32 0, i32 0))
  store i8* %call3047, i8** @BufferFile, align 8
  br label %if.end.3053

if.else.3048:                                     ; preds = %sw.bb.3043
  %1647 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3049 = call i32 @ParseSaveStr(%struct.action* %1647, i8** @BufferFile)
  %tobool3050 = icmp ne i32 %call3049, 0
  br i1 %tobool3050, label %if.then.3051, label %if.end.3052

if.then.3051:                                     ; preds = %if.else.3048
  br label %sw.epilog.7356

if.end.3052:                                      ; preds = %if.else.3048
  br label %if.end.3053

if.end.3053:                                      ; preds = %if.end.3052, %if.then.3046
  %1648 = load i32, i32* %msgok, align 4
  %tobool3054 = icmp ne i32 %1648, 0
  br i1 %tobool3054, label %if.then.3055, label %if.end.3065

if.then.3055:                                     ; preds = %if.end.3053
  %1649 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3056 = getelementptr inbounds %struct.action, %struct.action* %1649, i32 0, i32 3
  %1650 = load i32, i32* %quiet3056, align 4
  %tobool3057 = icmp ne i32 %1650, 0
  br i1 %tobool3057, label %cond.false.3059, label %cond.true.3058

cond.true.3058:                                   ; preds = %if.then.3055
  br label %cond.end.3063

cond.false.3059:                                  ; preds = %if.then.3055
  %1651 = load i32, i32* @queryflag, align 4
  %cmp3060 = icmp sge i32 %1651, 0
  %cond3062 = select i1 %cmp3060, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3063

cond.end.3063:                                    ; preds = %cond.false.3059, %cond.true.3058
  %cond3064 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3058 ], [ %cond3062, %cond.false.3059 ]
  %1652 = load i8*, i8** @BufferFile, align 8
  call void (i32, i8*, ...) %cond3064(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.128, i32 0, i32 0), i8* %1652)
  br label %if.end.3065

if.end.3065:                                      ; preds = %cond.end.3063, %if.end.3053
  br label %sw.epilog.7356

sw.bb.3066:                                       ; preds = %land.end
  %1653 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3067 = call i32 @ParseSaveStr(%struct.action* %1653, i8** @ActivityString)
  br label %sw.epilog.7356

sw.bb.3068:                                       ; preds = %land.end
  %1654 = load i8**, i8*** %args, align 8
  %1655 = load i8*, i8** %1654, align 8
  %cmp3069 = icmp eq i8* %1655, null
  br i1 %cmp3069, label %if.then.3071, label %if.end.3085

if.then.3071:                                     ; preds = %sw.bb.3068
  %arraydecay3073 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3072, i32 0, i32 0
  %1656 = load i8*, i8** @PowDetachString, align 8
  %call3074 = call i32 @AddXChars(i8* %arraydecay3073, i32 256, i8* %1656)
  %1657 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3075 = getelementptr inbounds %struct.action, %struct.action* %1657, i32 0, i32 3
  %1658 = load i32, i32* %quiet3075, align 4
  %tobool3076 = icmp ne i32 %1658, 0
  br i1 %tobool3076, label %cond.false.3078, label %cond.true.3077

cond.true.3077:                                   ; preds = %if.then.3071
  br label %cond.end.3082

cond.false.3078:                                  ; preds = %if.then.3071
  %1659 = load i32, i32* @queryflag, align 4
  %cmp3079 = icmp sge i32 %1659, 0
  %cond3081 = select i1 %cmp3079, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3082

cond.end.3082:                                    ; preds = %cond.false.3078, %cond.true.3077
  %cond3083 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3077 ], [ %cond3081, %cond.false.3078 ]
  %arraydecay3084 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3072, i32 0, i32 0
  call void (i32, i8*, ...) %cond3083(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.129, i32 0, i32 0), i8* %arraydecay3084)
  br label %sw.epilog.7356

if.end.3085:                                      ; preds = %sw.bb.3068
  %1660 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3086 = call i32 @ParseSaveStr(%struct.action* %1660, i8** @PowDetachString)
  br label %sw.epilog.7356

sw.bb.3087:                                       ; preds = %land.end
  %1661 = load %struct.win*, %struct.win** @fore, align 8
  %w_slot = getelementptr inbounds %struct.win, %struct.win* %1661, i32 0, i32 87
  %1662 = load i8*, i8** %w_slot, align 8
  %cmp3088 = icmp ne i8* %1662, inttoptr (i64 -1 to i8*)
  %conv3089 = zext i1 %cmp3088 to i32
  store i32 %conv3089, i32* %n, align 4
  %1663 = load i8**, i8*** %args, align 8
  %1664 = load i8*, i8** %1663, align 8
  %tobool3090 = icmp ne i8* %1664, null
  br i1 %tobool3090, label %land.lhs.true.3091, label %if.end.3100

land.lhs.true.3091:                               ; preds = %sw.bb.3087
  %1665 = load i8**, i8*** %args, align 8
  %1666 = load i8*, i8** %1665, align 8
  %call3092 = call i32 @strcmp(i8* %1666, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0)) #8
  %tobool3093 = icmp ne i32 %call3092, 0
  br i1 %tobool3093, label %if.end.3100, label %if.then.3094

if.then.3094:                                     ; preds = %land.lhs.true.3091
  %1667 = load %struct.win*, %struct.win** @fore, align 8
  %w_lflag = getelementptr inbounds %struct.win, %struct.win* %1667, i32 0, i32 86
  store i32 3, i32* %w_lflag, align 4
  %1668 = load %struct.display*, %struct.display** @displays, align 8
  %tobool3095 = icmp ne %struct.display* %1668, null
  br i1 %tobool3095, label %if.end.3099, label %land.lhs.true.3096

land.lhs.true.3096:                               ; preds = %if.then.3094
  %1669 = load i32, i32* %n, align 4
  %tobool3097 = icmp ne i32 %1669, 0
  br i1 %tobool3097, label %if.then.3098, label %if.end.3099

if.then.3098:                                     ; preds = %land.lhs.true.3096
  %1670 = load i32, i32* %n, align 4
  call void @SlotToggle(i32 %1670)
  br label %if.end.3099

if.end.3099:                                      ; preds = %if.then.3098, %land.lhs.true.3096, %if.then.3094
  br label %sw.epilog.7356

if.end.3100:                                      ; preds = %land.lhs.true.3091, %sw.bb.3087
  %1671 = load i8**, i8*** %args, align 8
  %1672 = load i8*, i8** %1671, align 8
  %tobool3101 = icmp ne i8* %1672, null
  br i1 %tobool3101, label %land.lhs.true.3102, label %if.end.3112

land.lhs.true.3102:                               ; preds = %if.end.3100
  %1673 = load i8**, i8*** %args, align 8
  %1674 = load i8*, i8** %1673, align 8
  %call3103 = call i32 @strcmp(i8* %1674, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i32 0, i32 0)) #8
  %tobool3104 = icmp ne i32 %call3103, 0
  br i1 %tobool3104, label %if.end.3112, label %if.then.3105

if.then.3105:                                     ; preds = %land.lhs.true.3102
  %1675 = load %struct.win*, %struct.win** @fore, align 8
  %w_lflag3106 = getelementptr inbounds %struct.win, %struct.win* %1675, i32 0, i32 86
  store i32 1, i32* %w_lflag3106, align 4
  %1676 = load %struct.display*, %struct.display** @displays, align 8
  %tobool3107 = icmp ne %struct.display* %1676, null
  br i1 %tobool3107, label %if.end.3111, label %land.lhs.true.3108

land.lhs.true.3108:                               ; preds = %if.then.3105
  %1677 = load i32, i32* %n, align 4
  %tobool3109 = icmp ne i32 %1677, 0
  br i1 %tobool3109, label %if.then.3110, label %if.end.3111

if.then.3110:                                     ; preds = %land.lhs.true.3108
  call void @SlotToggle(i32 0)
  br label %if.end.3111

if.end.3111:                                      ; preds = %if.then.3110, %land.lhs.true.3108, %if.then.3105
  br label %sw.epilog.7356

if.end.3112:                                      ; preds = %land.lhs.true.3102, %if.end.3100
  %1678 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3113 = call i32 @ParseSwitch(%struct.action* %1678, i32* %n)
  %cmp3114 = icmp eq i32 %call3113, 0
  br i1 %cmp3114, label %if.then.3116, label %if.end.3117

if.then.3116:                                     ; preds = %if.end.3112
  %1679 = load i32, i32* %n, align 4
  call void @SlotToggle(i32 %1679)
  br label %if.end.3117

if.end.3117:                                      ; preds = %if.then.3116, %if.end.3112
  br label %sw.epilog.7356

sw.bb.3118:                                       ; preds = %land.end
  %1680 = load i8**, i8*** %args, align 8
  %1681 = load i8*, i8** %1680, align 8
  %call3119 = call i32 @strcmp(i8* %1681, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0)) #8
  %tobool3120 = icmp ne i32 %call3119, 0
  br i1 %tobool3120, label %if.else.3123, label %if.then.3121

if.then.3121:                                     ; preds = %sw.bb.3118
  %1682 = load i32, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 7), align 4
  %or3122 = or i32 %1682, 2
  store i32 %or3122, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 7), align 4
  br label %if.end.3131

if.else.3123:                                     ; preds = %sw.bb.3118
  %1683 = load i8**, i8*** %args, align 8
  %1684 = load i8*, i8** %1683, align 8
  %call3124 = call i32 @strcmp(i8* %1684, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i32 0, i32 0)) #8
  %tobool3125 = icmp ne i32 %call3124, 0
  br i1 %tobool3125, label %if.else.3128, label %if.then.3126

if.then.3126:                                     ; preds = %if.else.3123
  %1685 = load i32, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 7), align 4
  %and3127 = and i32 %1685, -3
  store i32 %and3127, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 7), align 4
  br label %if.end.3130

if.else.3128:                                     ; preds = %if.else.3123
  %1686 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3129 = call i32 @ParseOnOff(%struct.action* %1686, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 7))
  br label %if.end.3130

if.end.3130:                                      ; preds = %if.else.3128, %if.then.3126
  br label %if.end.3131

if.end.3131:                                      ; preds = %if.end.3130, %if.then.3121
  br label %sw.epilog.7356

sw.bb.3132:                                       ; preds = %land.end
  %1687 = load i8**, i8*** %args, align 8
  %arrayidx3133 = getelementptr inbounds i8*, i8** %1687, i64 0
  %1688 = load i8*, i8** %arrayidx3133, align 8
  %tobool3134 = icmp ne i8* %1688, null
  br i1 %tobool3134, label %land.lhs.true.3135, label %if.end.3162

land.lhs.true.3135:                               ; preds = %sw.bb.3132
  %1689 = load i8**, i8*** %args, align 8
  %arrayidx3136 = getelementptr inbounds i8*, i8** %1689, i64 1
  %1690 = load i8*, i8** %arrayidx3136, align 8
  %tobool3137 = icmp ne i8* %1690, null
  br i1 %tobool3137, label %land.lhs.true.3138, label %if.end.3162

land.lhs.true.3138:                               ; preds = %land.lhs.true.3135
  %1691 = load i8**, i8*** %args, align 8
  %arrayidx3139 = getelementptr inbounds i8*, i8** %1691, i64 1
  %1692 = load i8*, i8** %arrayidx3139, align 8
  %arrayidx3140 = getelementptr inbounds i8, i8* %1692, i64 0
  %1693 = load i8, i8* %arrayidx3140, align 1
  %conv3141 = sext i8 %1693 to i32
  %cmp3142 = icmp eq i32 %conv3141, 105
  br i1 %cmp3142, label %if.then.3144, label %if.end.3162

if.then.3144:                                     ; preds = %land.lhs.true.3138
  store i32 1, i32* @iflag, align 4
  %1694 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %1694, %struct.display** @display, align 8
  br label %for.cond.3145

for.cond.3145:                                    ; preds = %for.inc.3159, %if.then.3144
  %1695 = load %struct.display*, %struct.display** @display, align 8
  %tobool3146 = icmp ne %struct.display* %1695, null
  br i1 %tobool3146, label %for.body.3147, label %for.end.3161

for.body.3147:                                    ; preds = %for.cond.3145
  %1696 = load %struct.display*, %struct.display** @display, align 8
  %d_flow = getelementptr inbounds %struct.display, %struct.display* %1696, i32 0, i32 65
  %1697 = load i32, i32* %d_flow, align 4
  %tobool3148 = icmp ne i32 %1697, 0
  br i1 %tobool3148, label %if.end.3150, label %if.then.3149

if.then.3149:                                     ; preds = %for.body.3147
  br label %for.inc.3159

if.end.3150:                                      ; preds = %for.body.3147
  %1698 = load %struct.display*, %struct.display** @display, align 8
  %d_OldMode = getelementptr inbounds %struct.display, %struct.display* %1698, i32 0, i32 63
  %tio = getelementptr inbounds %struct.mode, %struct.mode* %d_OldMode, i32 0, i32 0
  %c_cc = getelementptr inbounds %struct.termios, %struct.termios* %tio, i32 0, i32 5
  %arrayidx3151 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc, i32 0, i64 0
  %1699 = load i8, i8* %arrayidx3151, align 1
  %1700 = load %struct.display*, %struct.display** @display, align 8
  %d_NewMode = getelementptr inbounds %struct.display, %struct.display* %1700, i32 0, i32 64
  %tio3152 = getelementptr inbounds %struct.mode, %struct.mode* %d_NewMode, i32 0, i32 0
  %c_cc3153 = getelementptr inbounds %struct.termios, %struct.termios* %tio3152, i32 0, i32 5
  %arrayidx3154 = getelementptr inbounds [32 x i8], [32 x i8]* %c_cc3153, i32 0, i64 0
  store i8 %1699, i8* %arrayidx3154, align 1
  %1701 = load %struct.display*, %struct.display** @display, align 8
  %d_NewMode3155 = getelementptr inbounds %struct.display, %struct.display* %1701, i32 0, i32 64
  %tio3156 = getelementptr inbounds %struct.mode, %struct.mode* %d_NewMode3155, i32 0, i32 0
  %c_lflag = getelementptr inbounds %struct.termios, %struct.termios* %tio3156, i32 0, i32 3
  %1702 = load i32, i32* %c_lflag, align 4
  %or3157 = or i32 %1702, 1
  store i32 %or3157, i32* %c_lflag, align 4
  %1703 = load %struct.display*, %struct.display** @display, align 8
  %d_userfd = getelementptr inbounds %struct.display, %struct.display* %1703, i32 0, i32 59
  %1704 = load i32, i32* %d_userfd, align 4
  %1705 = load %struct.display*, %struct.display** @display, align 8
  %d_NewMode3158 = getelementptr inbounds %struct.display, %struct.display* %1705, i32 0, i32 64
  call void @SetTTY(i32 %1704, %struct.mode* %d_NewMode3158)
  br label %for.inc.3159

for.inc.3159:                                     ; preds = %if.end.3150, %if.then.3149
  %1706 = load %struct.display*, %struct.display** @display, align 8
  %d_next3160 = getelementptr inbounds %struct.display, %struct.display* %1706, i32 0, i32 0
  %1707 = load %struct.display*, %struct.display** %d_next3160, align 8
  store %struct.display* %1707, %struct.display** @display, align 8
  br label %for.cond.3145

for.end.3161:                                     ; preds = %for.cond.3145
  br label %if.end.3162

if.end.3162:                                      ; preds = %for.end.3161, %land.lhs.true.3138, %land.lhs.true.3135, %sw.bb.3132
  %1708 = load i8**, i8*** %args, align 8
  %arrayidx3163 = getelementptr inbounds i8*, i8** %1708, i64 0
  %1709 = load i8*, i8** %arrayidx3163, align 8
  %tobool3164 = icmp ne i8* %1709, null
  br i1 %tobool3164, label %land.lhs.true.3165, label %if.else.3172

land.lhs.true.3165:                               ; preds = %if.end.3162
  %1710 = load i8**, i8*** %args, align 8
  %arrayidx3166 = getelementptr inbounds i8*, i8** %1710, i64 0
  %1711 = load i8*, i8** %arrayidx3166, align 8
  %arrayidx3167 = getelementptr inbounds i8, i8* %1711, i64 0
  %1712 = load i8, i8* %arrayidx3167, align 1
  %conv3168 = sext i8 %1712 to i32
  %cmp3169 = icmp eq i32 %conv3168, 97
  br i1 %cmp3169, label %if.then.3171, label %if.else.3172

if.then.3171:                                     ; preds = %land.lhs.true.3165
  store i32 4, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 6), align 4
  br label %if.end.3174

if.else.3172:                                     ; preds = %land.lhs.true.3165, %if.end.3162
  %1713 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3173 = call i32 @ParseOnOff(%struct.action* %1713, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 6))
  br label %if.end.3174

if.end.3174:                                      ; preds = %if.else.3172, %if.then.3171
  br label %sw.epilog.7356

sw.bb.3175:                                       ; preds = %land.end
  %1714 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3176 = call i32 @ParseOnOff(%struct.action* %1714, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 12))
  br label %sw.epilog.7356

sw.bb.3177:                                       ; preds = %land.end
  %1715 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3178 = call i32 @ParseOnOff(%struct.action* %1715, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 16))
  br label %sw.epilog.7356

sw.bb.3179:                                       ; preds = %land.end
  %1716 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3180 = call i32 @ParseOnOff(%struct.action* %1716, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 17))
  br label %sw.epilog.7356

sw.bb.3181:                                       ; preds = %land.end
  %1717 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3182 = call i32 @ParseOnOff(%struct.action* %1717, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 15))
  br label %sw.epilog.7356

sw.bb.3183:                                       ; preds = %land.end
  %1718 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3184 = call i32 @ParseOnOff(%struct.action* %1718, i32* %n)
  %cmp3185 = icmp eq i32 %call3184, 0
  br i1 %cmp3185, label %if.then.3187, label %if.end.3191

if.then.3187:                                     ; preds = %sw.bb.3183
  %1719 = load i32, i32* %n, align 4
  %cmp3188 = icmp eq i32 %1719, 0
  %cond3190 = select i1 %cmp3188, i32 0, i32 1
  store i32 %cond3190, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 9), align 4
  br label %if.end.3191

if.end.3191:                                      ; preds = %if.then.3187, %sw.bb.3183
  br label %sw.epilog.7356

sw.bb.3192:                                       ; preds = %land.end
  %1720 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3193 = call i32 @ParseOnOff(%struct.action* %1720, i32* %n)
  %cmp3194 = icmp eq i32 %call3193, 0
  br i1 %cmp3194, label %if.then.3196, label %if.end.3200

if.then.3196:                                     ; preds = %sw.bb.3192
  %1721 = load i32, i32* %n, align 4
  %cmp3197 = icmp eq i32 %1721, 0
  %cond3199 = select i1 %cmp3197, i32 0, i32 1000
  store i32 %cond3199, i32* @defmousetrack, align 4
  br label %if.end.3200

if.end.3200:                                      ; preds = %if.then.3196, %sw.bb.3192
  br label %sw.epilog.7356

sw.bb.3201:                                       ; preds = %land.end
  %1722 = load i8**, i8*** %args, align 8
  %arrayidx3202 = getelementptr inbounds i8*, i8** %1722, i64 0
  %1723 = load i8*, i8** %arrayidx3202, align 8
  %tobool3203 = icmp ne i8* %1723, null
  br i1 %tobool3203, label %if.else.3216, label %if.then.3204

if.then.3204:                                     ; preds = %sw.bb.3201
  %1724 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3205 = getelementptr inbounds %struct.action, %struct.action* %1724, i32 0, i32 3
  %1725 = load i32, i32* %quiet3205, align 4
  %tobool3206 = icmp ne i32 %1725, 0
  br i1 %tobool3206, label %cond.false.3208, label %cond.true.3207

cond.true.3207:                                   ; preds = %if.then.3204
  br label %cond.end.3212

cond.false.3208:                                  ; preds = %if.then.3204
  %1726 = load i32, i32* @queryflag, align 4
  %cmp3209 = icmp sge i32 %1726, 0
  %cond3211 = select i1 %cmp3209, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3212

cond.end.3212:                                    ; preds = %cond.false.3208, %cond.true.3207
  %cond3213 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3207 ], [ %cond3211, %cond.false.3208 ]
  %1727 = load %struct.display*, %struct.display** @display, align 8
  %d_mousetrack = getelementptr inbounds %struct.display, %struct.display* %1727, i32 0, i32 40
  %1728 = load i32, i32* %d_mousetrack, align 4
  %tobool3214 = icmp ne i32 %1728, 0
  %cond3215 = select i1 %tobool3214, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)
  call void (i32, i8*, ...) %cond3213(i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.132, i32 0, i32 0), i8* %cond3215)
  br label %if.end.3231

if.else.3216:                                     ; preds = %sw.bb.3201
  %1729 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3217 = call i32 @ParseOnOff(%struct.action* %1729, i32* %n)
  %cmp3218 = icmp eq i32 %call3217, 0
  br i1 %cmp3218, label %if.then.3220, label %if.end.3230

if.then.3220:                                     ; preds = %if.else.3216
  %1730 = load i32, i32* %n, align 4
  %cmp3221 = icmp eq i32 %1730, 0
  %cond3223 = select i1 %cmp3221, i32 0, i32 1000
  %1731 = load %struct.display*, %struct.display** @display, align 8
  %d_mousetrack3224 = getelementptr inbounds %struct.display, %struct.display* %1731, i32 0, i32 40
  store i32 %cond3223, i32* %d_mousetrack3224, align 4
  %1732 = load %struct.display*, %struct.display** @display, align 8
  %d_fore3225 = getelementptr inbounds %struct.display, %struct.display* %1732, i32 0, i32 10
  %1733 = load %struct.win*, %struct.win** %d_fore3225, align 8
  %tobool3226 = icmp ne %struct.win* %1733, null
  br i1 %tobool3226, label %if.then.3227, label %if.end.3229

if.then.3227:                                     ; preds = %if.then.3220
  %1734 = load %struct.display*, %struct.display** @display, align 8
  %d_fore3228 = getelementptr inbounds %struct.display, %struct.display* %1734, i32 0, i32 10
  %1735 = load %struct.win*, %struct.win** %d_fore3228, align 8
  %w_mouse = getelementptr inbounds %struct.win, %struct.win* %1735, i32 0, i32 75
  %1736 = load i32, i32* %w_mouse, align 4
  call void @MouseMode(i32 %1736)
  br label %if.end.3229

if.end.3229:                                      ; preds = %if.then.3227, %if.then.3220
  br label %if.end.3230

if.end.3230:                                      ; preds = %if.end.3229, %if.else.3216
  br label %if.end.3231

if.end.3231:                                      ; preds = %if.end.3230, %cond.end.3212
  br label %sw.epilog.7356

sw.bb.3232:                                       ; preds = %land.end
  %1737 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3233 = call i32 @ParseOnOff(%struct.action* %1737, i32* %n)
  %cmp3234 = icmp eq i32 %call3233, 0
  br i1 %cmp3234, label %if.then.3236, label %if.end.3240

if.then.3236:                                     ; preds = %sw.bb.3232
  %1738 = load i32, i32* %n, align 4
  %cmp3237 = icmp eq i32 %1738, 0
  %cond3239 = select i1 %cmp3237, i32 0, i32 1
  store i32 %cond3239, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 11), align 4
  br label %if.end.3240

if.end.3240:                                      ; preds = %if.then.3236, %sw.bb.3232
  br label %sw.epilog.7356

sw.bb.3241:                                       ; preds = %land.end
  %1739 = load i8**, i8*** %args, align 8
  %1740 = load i8*, i8** %1739, align 8
  %tobool3242 = icmp ne i8* %1740, null
  br i1 %tobool3242, label %if.else.3255, label %if.then.3243

if.then.3243:                                     ; preds = %sw.bb.3241
  %1741 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3244 = getelementptr inbounds %struct.action, %struct.action* %1741, i32 0, i32 3
  %1742 = load i32, i32* %quiet3244, align 4
  %tobool3245 = icmp ne i32 %1742, 0
  br i1 %tobool3245, label %cond.false.3247, label %cond.true.3246

cond.true.3246:                                   ; preds = %if.then.3243
  br label %cond.end.3251

cond.false.3247:                                  ; preds = %if.then.3243
  %1743 = load i32, i32* @queryflag, align 4
  %cmp3248 = icmp sge i32 %1743, 0
  %cond3250 = select i1 %cmp3248, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3251

cond.end.3251:                                    ; preds = %cond.false.3247, %cond.true.3246
  %cond3252 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3246 ], [ %cond3250, %cond.false.3247 ]
  %1744 = load i32, i32* @VerboseCreate, align 4
  %tobool3253 = icmp ne i32 %1744, 0
  %cond3254 = select i1 %tobool3253, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i32 0, i32 0)
  call void (i32, i8*, ...) %cond3252(i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.133, i32 0, i32 0), i8* %cond3254)
  br label %if.end.3261

if.else.3255:                                     ; preds = %sw.bb.3241
  %1745 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3256 = call i32 @ParseOnOff(%struct.action* %1745, i32* %n)
  %cmp3257 = icmp eq i32 %call3256, 0
  br i1 %cmp3257, label %if.then.3259, label %if.end.3260

if.then.3259:                                     ; preds = %if.else.3255
  %1746 = load i32, i32* %n, align 4
  store i32 %1746, i32* @VerboseCreate, align 4
  br label %if.end.3260

if.end.3260:                                      ; preds = %if.then.3259, %if.else.3255
  br label %if.end.3261

if.end.3261:                                      ; preds = %if.end.3260, %cond.end.3251
  br label %sw.epilog.7356

sw.bb.3262:                                       ; preds = %land.end
  %1747 = load %struct.display*, %struct.display** @display, align 8
  %tobool3263 = icmp ne %struct.display* %1747, null
  br i1 %tobool3263, label %if.then.3264, label %if.end.3274

if.then.3264:                                     ; preds = %sw.bb.3262
  %1748 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3265 = getelementptr inbounds %struct.action, %struct.action* %1748, i32 0, i32 3
  %1749 = load i32, i32* %quiet3265, align 4
  %tobool3266 = icmp ne i32 %1749, 0
  br i1 %tobool3266, label %cond.false.3268, label %cond.true.3267

cond.true.3267:                                   ; preds = %if.then.3264
  br label %cond.end.3272

cond.false.3268:                                  ; preds = %if.then.3264
  %1750 = load i32, i32* @queryflag, align 4
  %cmp3269 = icmp sge i32 %1750, 0
  %cond3271 = select i1 %cmp3269, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3272

cond.end.3272:                                    ; preds = %cond.false.3268, %cond.true.3267
  %cond3273 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3267 ], [ %cond3271, %cond.false.3268 ]
  call void (i32, i8*, ...) %cond3273(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0))
  call void @RemoveStatus()
  br label %if.end.3274

if.end.3274:                                      ; preds = %cond.end.3272, %sw.bb.3262
  %1751 = load i8**, i8*** %args, align 8
  %arrayidx3275 = getelementptr inbounds i8*, i8** %1751, i64 0
  %1752 = load i8*, i8** %arrayidx3275, align 8
  %tobool3276 = icmp ne i8* %1752, null
  br i1 %tobool3276, label %land.lhs.true.3277, label %if.end.3416

land.lhs.true.3277:                               ; preds = %if.end.3274
  %1753 = load i8**, i8*** %args, align 8
  %arrayidx3278 = getelementptr inbounds i8*, i8** %1753, i64 0
  %1754 = load i8*, i8** %arrayidx3278, align 8
  %call3279 = call i32 @strcmp(i8* %1754, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #8
  %tobool3280 = icmp ne i32 %call3279, 0
  br i1 %tobool3280, label %land.lhs.true.3281, label %if.end.3416

land.lhs.true.3281:                               ; preds = %land.lhs.true.3277
  %1755 = load i8**, i8*** %args, align 8
  %arrayidx3282 = getelementptr inbounds i8*, i8** %1755, i64 0
  %1756 = load i8*, i8** %arrayidx3282, align 8
  %call3283 = call i32 @strcmp(i8* %1756, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)) #8
  %tobool3284 = icmp ne i32 %call3283, 0
  br i1 %tobool3284, label %if.then.3285, label %if.end.3416

if.then.3285:                                     ; preds = %land.lhs.true.3281
  %1757 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %1757, %struct.display** %olddisplay3286, align 8
  store i32 -1, i32* %new_use, align 4
  %1758 = load i8**, i8*** %args, align 8
  %arrayidx3287 = getelementptr inbounds i8*, i8** %1758, i64 0
  %1759 = load i8*, i8** %arrayidx3287, align 8
  store i8* %1759, i8** %s, align 8
  %1760 = load i8*, i8** %s, align 8
  %call3288 = call i32 @strncmp(i8* %1760, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0), i64 6) #8
  %tobool3289 = icmp ne i32 %call3288, 0
  br i1 %tobool3289, label %if.end.3292, label %if.then.3290

if.then.3290:                                     ; preds = %if.then.3285
  %1761 = load i8*, i8** %s, align 8
  %add.ptr3291 = getelementptr inbounds i8, i8* %1761, i64 6
  store i8* %add.ptr3291, i8** %s, align 8
  br label %if.end.3292

if.end.3292:                                      ; preds = %if.then.3290, %if.then.3285
  %1762 = load i8*, i8** %s, align 8
  %call3293 = call i32 @strcmp(i8* %1762, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i32 0, i32 0)) #8
  %tobool3294 = icmp ne i32 %call3293, 0
  br i1 %tobool3294, label %if.else.3296, label %if.then.3295

if.then.3295:                                     ; preds = %if.end.3292
  store i32 4, i32* %new_use, align 4
  br label %if.end.3344

if.else.3296:                                     ; preds = %if.end.3292
  %1763 = load i8*, i8** %s, align 8
  %call3297 = call i32 @strcmp(i8* %1763, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.137, i32 0, i32 0)) #8
  %tobool3298 = icmp ne i32 %call3297, 0
  br i1 %tobool3298, label %if.else.3300, label %if.then.3299

if.then.3299:                                     ; preds = %if.else.3296
  store i32 1, i32* %new_use, align 4
  br label %if.end.3343

if.else.3300:                                     ; preds = %if.else.3296
  %1764 = load i8*, i8** %s, align 8
  %call3301 = call i32 @strcmp(i8* %1764, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0)) #8
  %tobool3302 = icmp ne i32 %call3301, 0
  br i1 %tobool3302, label %if.else.3304, label %if.then.3303

if.then.3303:                                     ; preds = %if.else.3300
  store i32 0, i32* %new_use, align 4
  br label %if.end.3342

if.else.3304:                                     ; preds = %if.else.3300
  %1765 = load i8*, i8** %s, align 8
  %call3305 = call i32 @strcmp(i8* %1765, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.139, i32 0, i32 0)) #8
  %tobool3306 = icmp ne i32 %call3305, 0
  br i1 %tobool3306, label %if.else.3308, label %if.then.3307

if.then.3307:                                     ; preds = %if.else.3304
  store i32 2, i32* %new_use, align 4
  br label %if.end.3341

if.else.3308:                                     ; preds = %if.else.3304
  %1766 = load i8**, i8*** %args, align 8
  %arrayidx3309 = getelementptr inbounds i8*, i8** %1766, i64 0
  %1767 = load i8*, i8** %arrayidx3309, align 8
  %call3310 = call i32 @strcmp(i8* %1767, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0)) #8
  %tobool3311 = icmp ne i32 %call3310, 0
  br i1 %tobool3311, label %if.else.3330, label %if.then.3312

if.then.3312:                                     ; preds = %if.else.3308
  %1768 = load i8**, i8*** %args, align 8
  %arrayidx3313 = getelementptr inbounds i8*, i8** %1768, i64 1
  %1769 = load i8*, i8** %arrayidx3313, align 8
  %tobool3314 = icmp ne i8* %1769, null
  br i1 %tobool3314, label %if.end.3329, label %if.then.3315

if.then.3315:                                     ; preds = %if.then.3312
  %arraydecay3317 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3316, i32 0, i32 0
  %1770 = load i8*, i8** @hstatusstring, align 8
  %call3318 = call i32 @AddXChars(i8* %arraydecay3317, i32 256, i8* %1770)
  %1771 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3319 = getelementptr inbounds %struct.action, %struct.action* %1771, i32 0, i32 3
  %1772 = load i32, i32* %quiet3319, align 4
  %tobool3320 = icmp ne i32 %1772, 0
  br i1 %tobool3320, label %cond.false.3322, label %cond.true.3321

cond.true.3321:                                   ; preds = %if.then.3315
  br label %cond.end.3326

cond.false.3322:                                  ; preds = %if.then.3315
  %1773 = load i32, i32* @queryflag, align 4
  %cmp3323 = icmp sge i32 %1773, 0
  %cond3325 = select i1 %cmp3323, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3326

cond.end.3326:                                    ; preds = %cond.false.3322, %cond.true.3321
  %cond3327 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3321 ], [ %cond3325, %cond.false.3322 ]
  %arraydecay3328 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3316, i32 0, i32 0
  call void (i32, i8*, ...) %cond3327(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.140, i32 0, i32 0), i8* %arraydecay3328)
  br label %sw.epilog.7356

if.end.3329:                                      ; preds = %if.then.3312
  br label %if.end.3340

if.else.3330:                                     ; preds = %if.else.3308
  %1774 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3331 = getelementptr inbounds %struct.action, %struct.action* %1774, i32 0, i32 3
  %1775 = load i32, i32* %quiet3331, align 4
  %tobool3332 = icmp ne i32 %1775, 0
  br i1 %tobool3332, label %cond.false.3334, label %cond.true.3333

cond.true.3333:                                   ; preds = %if.else.3330
  br label %cond.end.3338

cond.false.3334:                                  ; preds = %if.else.3330
  %1776 = load i32, i32* @queryflag, align 4
  %cmp3335 = icmp sge i32 %1776, 0
  %cond3337 = select i1 %cmp3335, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3338

cond.end.3338:                                    ; preds = %cond.false.3334, %cond.true.3333
  %cond3339 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3333 ], [ %cond3337, %cond.false.3334 ]
  %1777 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond3339(i32 0, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.141, i32 0, i32 0), i8* %1777)
  br label %sw.epilog.7356

if.end.3340:                                      ; preds = %if.end.3329
  br label %if.end.3341

if.end.3341:                                      ; preds = %if.end.3340, %if.then.3307
  br label %if.end.3342

if.end.3342:                                      ; preds = %if.end.3341, %if.then.3303
  br label %if.end.3343

if.end.3343:                                      ; preds = %if.end.3342, %if.then.3299
  br label %if.end.3344

if.end.3344:                                      ; preds = %if.end.3343, %if.then.3295
  %1778 = load i32, i32* %new_use, align 4
  %cmp3345 = icmp ne i32 %1778, -1
  br i1 %cmp3345, label %if.then.3347, label %if.end.3400

if.then.3347:                                     ; preds = %if.end.3344
  %1779 = load i32, i32* %new_use, align 4
  %1780 = load i8*, i8** %s, align 8
  %1781 = load i8**, i8*** %args, align 8
  %arrayidx3348 = getelementptr inbounds i8*, i8** %1781, i64 0
  %1782 = load i8*, i8** %arrayidx3348, align 8
  %cmp3349 = icmp eq i8* %1780, %1782
  %cond3351 = select i1 %cmp3349, i32 0, i32 8
  %or3352 = or i32 %1779, %cond3351
  store i32 %or3352, i32* @hardstatusemu, align 4
  %1783 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %1783, %struct.display** @display, align 8
  br label %for.cond.3353

for.cond.3353:                                    ; preds = %for.inc.3397, %if.then.3347
  %1784 = load %struct.display*, %struct.display** @display, align 8
  %tobool3354 = icmp ne %struct.display* %1784, null
  br i1 %tobool3354, label %for.body.3355, label %for.end.3399

for.body.3355:                                    ; preds = %for.cond.3353
  call void @RemoveStatus()
  %1785 = load i32, i32* @hardstatusemu, align 4
  %and3356 = and i32 %1785, -9
  store i32 %and3356, i32* %new_use, align 4
  %1786 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs3357 = getelementptr inbounds %struct.display, %struct.display* %1786, i32 0, i32 83
  %arrayidx3358 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs3357, i32 0, i64 75
  %flg = bitcast %union.tcu* %arrayidx3358 to i32*
  %1787 = load i32, i32* %flg, align 4
  %tobool3359 = icmp ne i32 %1787, 0
  br i1 %tobool3359, label %land.lhs.true.3360, label %if.end.3365

land.lhs.true.3360:                               ; preds = %for.body.3355
  %1788 = load i8*, i8** %s, align 8
  %1789 = load i8**, i8*** %args, align 8
  %arrayidx3361 = getelementptr inbounds i8*, i8** %1789, i64 0
  %1790 = load i8*, i8** %arrayidx3361, align 8
  %cmp3362 = icmp eq i8* %1788, %1790
  br i1 %cmp3362, label %if.then.3364, label %if.end.3365

if.then.3364:                                     ; preds = %land.lhs.true.3360
  store i32 3, i32* %new_use, align 4
  br label %if.end.3365

if.end.3365:                                      ; preds = %if.then.3364, %land.lhs.true.3360, %for.body.3355
  call void @ShowHStatus(i8* null)
  %1791 = load %struct.display*, %struct.display** @display, align 8
  %d_has_hstatus = getelementptr inbounds %struct.display, %struct.display* %1791, i32 0, i32 36
  %1792 = load i32, i32* %d_has_hstatus, align 4
  store i32 %1792, i32* %old_use, align 4
  %1793 = load i32, i32* %new_use, align 4
  %1794 = load %struct.display*, %struct.display** @display, align 8
  %d_has_hstatus3366 = getelementptr inbounds %struct.display, %struct.display* %1794, i32 0, i32 36
  store i32 %1793, i32* %d_has_hstatus3366, align 4
  %1795 = load i32, i32* %new_use, align 4
  %cmp3367 = icmp eq i32 %1795, 1
  br i1 %cmp3367, label %land.lhs.true.3369, label %lor.lhs.false.3372

land.lhs.true.3369:                               ; preds = %if.end.3365
  %1796 = load i32, i32* %old_use, align 4
  %cmp3370 = icmp ne i32 %1796, 1
  br i1 %cmp3370, label %if.then.3378, label %lor.lhs.false.3372

lor.lhs.false.3372:                               ; preds = %land.lhs.true.3369, %if.end.3365
  %1797 = load i32, i32* %new_use, align 4
  %cmp3373 = icmp ne i32 %1797, 1
  br i1 %cmp3373, label %land.lhs.true.3375, label %if.end.3381

land.lhs.true.3375:                               ; preds = %lor.lhs.false.3372
  %1798 = load i32, i32* %old_use, align 4
  %cmp3376 = icmp eq i32 %1798, 1
  br i1 %cmp3376, label %if.then.3378, label %if.end.3381

if.then.3378:                                     ; preds = %land.lhs.true.3375, %land.lhs.true.3369
  %1799 = load %struct.display*, %struct.display** @display, align 8
  %d_width3379 = getelementptr inbounds %struct.display, %struct.display* %1799, i32 0, i32 16
  %1800 = load i32, i32* %d_width3379, align 4
  %1801 = load %struct.display*, %struct.display** @display, align 8
  %d_height3380 = getelementptr inbounds %struct.display, %struct.display* %1801, i32 0, i32 17
  %1802 = load i32, i32* %d_height3380, align 4
  call void @ChangeScreenSize(i32 %1800, i32 %1802, i32 1)
  br label %if.end.3381

if.end.3381:                                      ; preds = %if.then.3378, %land.lhs.true.3375, %lor.lhs.false.3372
  %1803 = load i32, i32* %new_use, align 4
  %cmp3382 = icmp eq i32 %1803, 4
  br i1 %cmp3382, label %land.lhs.true.3384, label %lor.lhs.false.3387

land.lhs.true.3384:                               ; preds = %if.end.3381
  %1804 = load i32, i32* %old_use, align 4
  %cmp3385 = icmp ne i32 %1804, 4
  br i1 %cmp3385, label %if.then.3393, label %lor.lhs.false.3387

lor.lhs.false.3387:                               ; preds = %land.lhs.true.3384, %if.end.3381
  %1805 = load i32, i32* %new_use, align 4
  %cmp3388 = icmp ne i32 %1805, 4
  br i1 %cmp3388, label %land.lhs.true.3390, label %if.end.3396

land.lhs.true.3390:                               ; preds = %lor.lhs.false.3387
  %1806 = load i32, i32* %old_use, align 4
  %cmp3391 = icmp eq i32 %1806, 4
  br i1 %cmp3391, label %if.then.3393, label %if.end.3396

if.then.3393:                                     ; preds = %land.lhs.true.3390, %land.lhs.true.3384
  %1807 = load %struct.display*, %struct.display** @display, align 8
  %d_width3394 = getelementptr inbounds %struct.display, %struct.display* %1807, i32 0, i32 16
  %1808 = load i32, i32* %d_width3394, align 4
  %1809 = load %struct.display*, %struct.display** @display, align 8
  %d_height3395 = getelementptr inbounds %struct.display, %struct.display* %1809, i32 0, i32 17
  %1810 = load i32, i32* %d_height3395, align 4
  call void @ChangeScreenSize(i32 %1808, i32 %1810, i32 1)
  br label %if.end.3396

if.end.3396:                                      ; preds = %if.then.3393, %land.lhs.true.3390, %lor.lhs.false.3387
  call void @RefreshHStatus()
  br label %for.inc.3397

for.inc.3397:                                     ; preds = %if.end.3396
  %1811 = load %struct.display*, %struct.display** @display, align 8
  %d_next3398 = getelementptr inbounds %struct.display, %struct.display* %1811, i32 0, i32 0
  %1812 = load %struct.display*, %struct.display** %d_next3398, align 8
  store %struct.display* %1812, %struct.display** @display, align 8
  br label %for.cond.3353

for.end.3399:                                     ; preds = %for.cond.3353
  br label %if.end.3400

if.end.3400:                                      ; preds = %for.end.3399, %if.end.3344
  %1813 = load i8**, i8*** %args, align 8
  %arrayidx3401 = getelementptr inbounds i8*, i8** %1813, i64 1
  %1814 = load i8*, i8** %arrayidx3401, align 8
  %tobool3402 = icmp ne i8* %1814, null
  br i1 %tobool3402, label %if.then.3403, label %if.end.3415

if.then.3403:                                     ; preds = %if.end.3400
  %1815 = load i8*, i8** @hstatusstring, align 8
  %tobool3404 = icmp ne i8* %1815, null
  br i1 %tobool3404, label %if.then.3405, label %if.end.3406

if.then.3405:                                     ; preds = %if.then.3403
  %1816 = load i8*, i8** @hstatusstring, align 8
  call void @free(i8* %1816) #4
  br label %if.end.3406

if.end.3406:                                      ; preds = %if.then.3405, %if.then.3403
  %1817 = load i8**, i8*** %args, align 8
  %arrayidx3407 = getelementptr inbounds i8*, i8** %1817, i64 1
  %1818 = load i8*, i8** %arrayidx3407, align 8
  %call3408 = call i8* @SaveStr(i8* %1818)
  store i8* %call3408, i8** @hstatusstring, align 8
  %1819 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %1819, %struct.display** @display, align 8
  br label %for.cond.3409

for.cond.3409:                                    ; preds = %for.inc.3412, %if.end.3406
  %1820 = load %struct.display*, %struct.display** @display, align 8
  %tobool3410 = icmp ne %struct.display* %1820, null
  br i1 %tobool3410, label %for.body.3411, label %for.end.3414

for.body.3411:                                    ; preds = %for.cond.3409
  call void @RefreshHStatus()
  br label %for.inc.3412

for.inc.3412:                                     ; preds = %for.body.3411
  %1821 = load %struct.display*, %struct.display** @display, align 8
  %d_next3413 = getelementptr inbounds %struct.display, %struct.display* %1821, i32 0, i32 0
  %1822 = load %struct.display*, %struct.display** %d_next3413, align 8
  store %struct.display* %1822, %struct.display** @display, align 8
  br label %for.cond.3409

for.end.3414:                                     ; preds = %for.cond.3409
  br label %if.end.3415

if.end.3415:                                      ; preds = %for.end.3414, %if.end.3400
  %1823 = load %struct.display*, %struct.display** %olddisplay3286, align 8
  store %struct.display* %1823, %struct.display** @display, align 8
  br label %sw.epilog.7356

if.end.3416:                                      ; preds = %land.lhs.true.3281, %land.lhs.true.3277, %if.end.3274
  %1824 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3417 = call i32 @ParseSwitch(%struct.action* %1824, i32* @use_hardstatus)
  %1825 = load i32, i32* %msgok, align 4
  %tobool3418 = icmp ne i32 %1825, 0
  br i1 %tobool3418, label %if.then.3419, label %if.end.3431

if.then.3419:                                     ; preds = %if.end.3416
  %1826 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3420 = getelementptr inbounds %struct.action, %struct.action* %1826, i32 0, i32 3
  %1827 = load i32, i32* %quiet3420, align 4
  %tobool3421 = icmp ne i32 %1827, 0
  br i1 %tobool3421, label %cond.false.3423, label %cond.true.3422

cond.true.3422:                                   ; preds = %if.then.3419
  br label %cond.end.3427

cond.false.3423:                                  ; preds = %if.then.3419
  %1828 = load i32, i32* @queryflag, align 4
  %cmp3424 = icmp sge i32 %1828, 0
  %cond3426 = select i1 %cmp3424, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3427

cond.end.3427:                                    ; preds = %cond.false.3423, %cond.true.3422
  %cond3428 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3422 ], [ %cond3426, %cond.false.3423 ]
  %1829 = load i32, i32* @use_hardstatus, align 4
  %tobool3429 = icmp ne i32 %1829, 0
  %cond3430 = select i1 %tobool3429, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0)
  call void (i32, i8*, ...) %cond3428(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.142, i32 0, i32 0), i8* %cond3430)
  br label %if.end.3431

if.end.3431:                                      ; preds = %cond.end.3427, %if.end.3416
  br label %sw.epilog.7356

sw.bb.3432:                                       ; preds = %land.end
  %1830 = load i8**, i8*** %args, align 8
  %arrayidx3433 = getelementptr inbounds i8*, i8** %1830, i64 0
  %1831 = load i8*, i8** %arrayidx3433, align 8
  %call3434 = call i32 @strcmp(i8* %1831, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i32 0, i32 0)) #8
  %cmp3435 = icmp eq i32 %call3434, 0
  br i1 %cmp3435, label %if.then.3442, label %lor.lhs.false.3437

lor.lhs.false.3437:                               ; preds = %sw.bb.3432
  %1832 = load i8**, i8*** %args, align 8
  %arrayidx3438 = getelementptr inbounds i8*, i8** %1832, i64 0
  %1833 = load i8*, i8** %arrayidx3438, align 8
  %call3439 = call i32 @strcmp(i8* %1833, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i32 0, i32 0)) #8
  %cmp3440 = icmp eq i32 %call3439, 0
  br i1 %cmp3440, label %if.then.3442, label %if.else.3457

if.then.3442:                                     ; preds = %lor.lhs.false.3437, %sw.bb.3432
  %1834 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %1834, %struct.display** %olddisplay3443, align 8
  %1835 = load i8**, i8*** %args, align 8
  %arrayidx3444 = getelementptr inbounds i8*, i8** %1835, i64 0
  %1836 = load i8*, i8** %arrayidx3444, align 8
  %arrayidx3445 = getelementptr inbounds i8, i8* %1836, i64 0
  %1837 = load i8, i8* %arrayidx3445, align 1
  %conv3446 = sext i8 %1837 to i32
  %cmp3447 = icmp eq i32 %conv3446, 97
  %conv3448 = zext i1 %cmp3447 to i32
  store i32 %conv3448, i32* @captionalways, align 4
  %1838 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %1838, %struct.display** @display, align 8
  br label %for.cond.3449

for.cond.3449:                                    ; preds = %for.inc.3454, %if.then.3442
  %1839 = load %struct.display*, %struct.display** @display, align 8
  %tobool3450 = icmp ne %struct.display* %1839, null
  br i1 %tobool3450, label %for.body.3451, label %for.end.3456

for.body.3451:                                    ; preds = %for.cond.3449
  %1840 = load %struct.display*, %struct.display** @display, align 8
  %d_width3452 = getelementptr inbounds %struct.display, %struct.display* %1840, i32 0, i32 16
  %1841 = load i32, i32* %d_width3452, align 4
  %1842 = load %struct.display*, %struct.display** @display, align 8
  %d_height3453 = getelementptr inbounds %struct.display, %struct.display* %1842, i32 0, i32 17
  %1843 = load i32, i32* %d_height3453, align 4
  call void @ChangeScreenSize(i32 %1841, i32 %1843, i32 1)
  br label %for.inc.3454

for.inc.3454:                                     ; preds = %for.body.3451
  %1844 = load %struct.display*, %struct.display** @display, align 8
  %d_next3455 = getelementptr inbounds %struct.display, %struct.display* %1844, i32 0, i32 0
  %1845 = load %struct.display*, %struct.display** %d_next3455, align 8
  store %struct.display* %1845, %struct.display** @display, align 8
  br label %for.cond.3449

for.end.3456:                                     ; preds = %for.cond.3449
  %1846 = load %struct.display*, %struct.display** %olddisplay3443, align 8
  store %struct.display* %1846, %struct.display** @display, align 8
  br label %if.end.3491

if.else.3457:                                     ; preds = %lor.lhs.false.3437
  %1847 = load i8**, i8*** %args, align 8
  %arrayidx3458 = getelementptr inbounds i8*, i8** %1847, i64 0
  %1848 = load i8*, i8** %arrayidx3458, align 8
  %call3459 = call i32 @strcmp(i8* %1848, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0)) #8
  %cmp3460 = icmp eq i32 %call3459, 0
  br i1 %cmp3460, label %if.then.3462, label %if.else.3480

if.then.3462:                                     ; preds = %if.else.3457
  %1849 = load i8**, i8*** %args, align 8
  %arrayidx3463 = getelementptr inbounds i8*, i8** %1849, i64 1
  %1850 = load i8*, i8** %arrayidx3463, align 8
  %tobool3464 = icmp ne i8* %1850, null
  br i1 %tobool3464, label %if.end.3479, label %if.then.3465

if.then.3465:                                     ; preds = %if.then.3462
  %arraydecay3467 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3466, i32 0, i32 0
  %1851 = load i8*, i8** @captionstring, align 8
  %call3468 = call i32 @AddXChars(i8* %arraydecay3467, i32 256, i8* %1851)
  %1852 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3469 = getelementptr inbounds %struct.action, %struct.action* %1852, i32 0, i32 3
  %1853 = load i32, i32* %quiet3469, align 4
  %tobool3470 = icmp ne i32 %1853, 0
  br i1 %tobool3470, label %cond.false.3472, label %cond.true.3471

cond.true.3471:                                   ; preds = %if.then.3465
  br label %cond.end.3476

cond.false.3472:                                  ; preds = %if.then.3465
  %1854 = load i32, i32* @queryflag, align 4
  %cmp3473 = icmp sge i32 %1854, 0
  %cond3475 = select i1 %cmp3473, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3476

cond.end.3476:                                    ; preds = %cond.false.3472, %cond.true.3471
  %cond3477 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3471 ], [ %cond3475, %cond.false.3472 ]
  %arraydecay3478 = getelementptr inbounds [256 x i8], [256 x i8]* %buf3466, i32 0, i32 0
  call void (i32, i8*, ...) %cond3477(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.146, i32 0, i32 0), i8* %arraydecay3478)
  br label %sw.epilog.7356

if.end.3479:                                      ; preds = %if.then.3462
  br label %if.end.3490

if.else.3480:                                     ; preds = %if.else.3457
  %1855 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3481 = getelementptr inbounds %struct.action, %struct.action* %1855, i32 0, i32 3
  %1856 = load i32, i32* %quiet3481, align 4
  %tobool3482 = icmp ne i32 %1856, 0
  br i1 %tobool3482, label %cond.false.3484, label %cond.true.3483

cond.true.3483:                                   ; preds = %if.else.3480
  br label %cond.end.3488

cond.false.3484:                                  ; preds = %if.else.3480
  %1857 = load i32, i32* @queryflag, align 4
  %cmp3485 = icmp sge i32 %1857, 0
  %cond3487 = select i1 %cmp3485, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3488

cond.end.3488:                                    ; preds = %cond.false.3484, %cond.true.3483
  %cond3489 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3483 ], [ %cond3487, %cond.false.3484 ]
  %1858 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond3489(i32 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.147, i32 0, i32 0), i8* %1858)
  br label %sw.epilog.7356

if.end.3490:                                      ; preds = %if.end.3479
  br label %if.end.3491

if.end.3491:                                      ; preds = %if.end.3490, %for.end.3456
  %1859 = load i8**, i8*** %args, align 8
  %arrayidx3492 = getelementptr inbounds i8*, i8** %1859, i64 1
  %1860 = load i8*, i8** %arrayidx3492, align 8
  %tobool3493 = icmp ne i8* %1860, null
  br i1 %tobool3493, label %if.end.3495, label %if.then.3494

if.then.3494:                                     ; preds = %if.end.3491
  br label %sw.epilog.7356

if.end.3495:                                      ; preds = %if.end.3491
  %1861 = load i8*, i8** @captionstring, align 8
  %tobool3496 = icmp ne i8* %1861, null
  br i1 %tobool3496, label %if.then.3497, label %if.end.3498

if.then.3497:                                     ; preds = %if.end.3495
  %1862 = load i8*, i8** @captionstring, align 8
  call void @free(i8* %1862) #4
  br label %if.end.3498

if.end.3498:                                      ; preds = %if.then.3497, %if.end.3495
  %1863 = load i8**, i8*** %args, align 8
  %arrayidx3499 = getelementptr inbounds i8*, i8** %1863, i64 1
  %1864 = load i8*, i8** %arrayidx3499, align 8
  %call3500 = call i8* @SaveStr(i8* %1864)
  store i8* %call3500, i8** @captionstring, align 8
  call void @RedisplayDisplays(i32 0)
  br label %sw.epilog.7356

sw.bb.3501:                                       ; preds = %land.end
  %1865 = load %struct.win*, %struct.win** @console_window, align 8
  %cmp3502 = icmp ne %struct.win* %1865, null
  %conv3503 = zext i1 %cmp3502 to i32
  store i32 %conv3503, i32* %n, align 4
  %1866 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3504 = call i32 @ParseSwitch(%struct.action* %1866, i32* %n)
  %tobool3505 = icmp ne i32 %call3504, 0
  br i1 %tobool3505, label %if.then.3506, label %if.end.3507

if.then.3506:                                     ; preds = %sw.bb.3501
  br label %sw.epilog.7356

if.end.3507:                                      ; preds = %sw.bb.3501
  %1867 = load %struct.win*, %struct.win** @fore, align 8
  %w_ptyfd = getelementptr inbounds %struct.win, %struct.win* %1867, i32 0, i32 15
  %1868 = load i32, i32* %w_ptyfd, align 4
  %1869 = load i32, i32* %n, align 4
  %1870 = load i8*, i8** @rc_name, align 8
  %call3508 = call i32 @TtyGrabConsole(i32 %1868, i32 %1869, i8* %1870)
  %tobool3509 = icmp ne i32 %call3508, 0
  br i1 %tobool3509, label %if.then.3510, label %if.end.3511

if.then.3510:                                     ; preds = %if.end.3507
  br label %sw.epilog.7356

if.end.3511:                                      ; preds = %if.end.3507
  %1871 = load i32, i32* %n, align 4
  %cmp3512 = icmp eq i32 %1871, 0
  br i1 %cmp3512, label %if.then.3514, label %if.else.3524

if.then.3514:                                     ; preds = %if.end.3511
  %1872 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3515 = getelementptr inbounds %struct.action, %struct.action* %1872, i32 0, i32 3
  %1873 = load i32, i32* %quiet3515, align 4
  %tobool3516 = icmp ne i32 %1873, 0
  br i1 %tobool3516, label %cond.false.3518, label %cond.true.3517

cond.true.3517:                                   ; preds = %if.then.3514
  br label %cond.end.3522

cond.false.3518:                                  ; preds = %if.then.3514
  %1874 = load i32, i32* @queryflag, align 4
  %cmp3519 = icmp sge i32 %1874, 0
  %cond3521 = select i1 %cmp3519, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3522

cond.end.3522:                                    ; preds = %cond.false.3518, %cond.true.3517
  %cond3523 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3517 ], [ %cond3521, %cond.false.3518 ]
  %1875 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond3523(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.148, i32 0, i32 0), i8* %1875, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @HostName, i32 0, i32 0))
  br label %if.end.3549

if.else.3524:                                     ; preds = %if.end.3511
  %1876 = load %struct.win*, %struct.win** @console_window, align 8
  %tobool3525 = icmp ne %struct.win* %1876, null
  br i1 %tobool3525, label %if.then.3526, label %if.else.3538

if.then.3526:                                     ; preds = %if.else.3524
  %1877 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3527 = getelementptr inbounds %struct.action, %struct.action* %1877, i32 0, i32 3
  %1878 = load i32, i32* %quiet3527, align 4
  %tobool3528 = icmp ne i32 %1878, 0
  br i1 %tobool3528, label %cond.false.3530, label %cond.true.3529

cond.true.3529:                                   ; preds = %if.then.3526
  br label %cond.end.3534

cond.false.3530:                                  ; preds = %if.then.3526
  %1879 = load i32, i32* @queryflag, align 4
  %cmp3531 = icmp sge i32 %1879, 0
  %cond3533 = select i1 %cmp3531, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3534

cond.end.3534:                                    ; preds = %cond.false.3530, %cond.true.3529
  %cond3535 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3529 ], [ %cond3533, %cond.false.3530 ]
  %1880 = load i8*, i8** @rc_name, align 8
  %1881 = load %struct.win*, %struct.win** @console_window, align 8
  %w_number3536 = getelementptr inbounds %struct.win, %struct.win* %1881, i32 0, i32 9
  %1882 = load i32, i32* %w_number3536, align 4
  %1883 = load %struct.win*, %struct.win** @console_window, align 8
  %w_title3537 = getelementptr inbounds %struct.win, %struct.win* %1883, i32 0, i32 21
  %1884 = load i8*, i8** %w_title3537, align 8
  call void (i32, i8*, ...) %cond3535(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.149, i32 0, i32 0), i8* %1880, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @HostName, i32 0, i32 0), i32 %1882, i8* %1884)
  br label %if.end.3548

if.else.3538:                                     ; preds = %if.else.3524
  %1885 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3539 = getelementptr inbounds %struct.action, %struct.action* %1885, i32 0, i32 3
  %1886 = load i32, i32* %quiet3539, align 4
  %tobool3540 = icmp ne i32 %1886, 0
  br i1 %tobool3540, label %cond.false.3542, label %cond.true.3541

cond.true.3541:                                   ; preds = %if.else.3538
  br label %cond.end.3546

cond.false.3542:                                  ; preds = %if.else.3538
  %1887 = load i32, i32* @queryflag, align 4
  %cmp3543 = icmp sge i32 %1887, 0
  %cond3545 = select i1 %cmp3543, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3546

cond.end.3546:                                    ; preds = %cond.false.3542, %cond.true.3541
  %cond3547 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3541 ], [ %cond3545, %cond.false.3542 ]
  %1888 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond3547(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.150, i32 0, i32 0), i8* %1888, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @HostName, i32 0, i32 0))
  br label %if.end.3548

if.end.3548:                                      ; preds = %cond.end.3546, %cond.end.3534
  br label %if.end.3549

if.end.3549:                                      ; preds = %if.end.3548, %cond.end.3522
  %1889 = load i32, i32* %n, align 4
  %tobool3550 = icmp ne i32 %1889, 0
  br i1 %tobool3550, label %cond.true.3551, label %cond.false.3552

cond.true.3551:                                   ; preds = %if.end.3549
  %1890 = load %struct.win*, %struct.win** @fore, align 8
  br label %cond.end.3553

cond.false.3552:                                  ; preds = %if.end.3549
  br label %cond.end.3553

cond.end.3553:                                    ; preds = %cond.false.3552, %cond.true.3551
  %cond3554 = phi %struct.win* [ %1890, %cond.true.3551 ], [ null, %cond.false.3552 ]
  store %struct.win* %cond3554, %struct.win** @console_window, align 8
  br label %sw.epilog.7356

sw.bb.3555:                                       ; preds = %land.end
  %1891 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3556 = call i32 @ParseOnOff(%struct.action* %1891, i32* @all_norefresh)
  %tobool3557 = icmp ne i32 %call3556, 0
  br i1 %tobool3557, label %if.then.3558, label %if.end.3559

if.then.3558:                                     ; preds = %sw.bb.3555
  br label %sw.epilog.7356

if.end.3559:                                      ; preds = %sw.bb.3555
  %1892 = load i32, i32* @all_norefresh, align 4
  %tobool3560 = icmp ne i32 %1892, 0
  br i1 %tobool3560, label %if.end.3564, label %land.lhs.true.3561

land.lhs.true.3561:                               ; preds = %if.end.3559
  %1893 = load %struct.win*, %struct.win** @fore, align 8
  %tobool3562 = icmp ne %struct.win* %1893, null
  br i1 %tobool3562, label %if.then.3563, label %if.end.3564

if.then.3563:                                     ; preds = %land.lhs.true.3561
  call void @Activate(i32 -1)
  br label %if.end.3564

if.end.3564:                                      ; preds = %if.then.3563, %land.lhs.true.3561, %if.end.3559
  %1894 = load i32, i32* %msgok, align 4
  %tobool3565 = icmp ne i32 %1894, 0
  br i1 %tobool3565, label %if.then.3566, label %if.end.3578

if.then.3566:                                     ; preds = %if.end.3564
  %1895 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3567 = getelementptr inbounds %struct.action, %struct.action* %1895, i32 0, i32 3
  %1896 = load i32, i32* %quiet3567, align 4
  %tobool3568 = icmp ne i32 %1896, 0
  br i1 %tobool3568, label %cond.false.3570, label %cond.true.3569

cond.true.3569:                                   ; preds = %if.then.3566
  br label %cond.end.3574

cond.false.3570:                                  ; preds = %if.then.3566
  %1897 = load i32, i32* @queryflag, align 4
  %cmp3571 = icmp sge i32 %1897, 0
  %cond3573 = select i1 %cmp3571, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3574

cond.end.3574:                                    ; preds = %cond.false.3570, %cond.true.3569
  %cond3575 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3569 ], [ %cond3573, %cond.false.3570 ]
  %1898 = load i32, i32* @all_norefresh, align 4
  %tobool3576 = icmp ne i32 %1898, 0
  %cond3577 = select i1 %tobool3576, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.152, i32 0, i32 0)
  call void (i32, i8*, ...) %cond3575(i32 0, i8* %cond3577)
  br label %if.end.3578

if.end.3578:                                      ; preds = %cond.end.3574, %if.end.3564
  br label %sw.epilog.7356

sw.bb.3579:                                       ; preds = %land.end
  %1899 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3580 = call i32 @ParseSwitch(%struct.action* %1899, i32* %n)
  %1900 = load i32, i32* %n, align 4
  %conv3581 = trunc i32 %1900 to i8
  %1901 = load %struct.win*, %struct.win** @fore, align 8
  %w_norefresh3582 = getelementptr inbounds %struct.win, %struct.win* %1901, i32 0, i32 74
  store i8 %conv3581, i8* %w_norefresh3582, align 1
  br label %sw.epilog.7356

sw.bb.3583:                                       ; preds = %land.end
  %1902 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3584 = call i32 @ParseSwitch(%struct.action* %1902, i32* @visual_bell)
  %tobool3585 = icmp ne i32 %call3584, 0
  br i1 %tobool3585, label %if.then.3588, label %lor.lhs.false.3586

lor.lhs.false.3586:                               ; preds = %sw.bb.3583
  %1903 = load i32, i32* %msgok, align 4
  %tobool3587 = icmp ne i32 %1903, 0
  br i1 %tobool3587, label %if.end.3589, label %if.then.3588

if.then.3588:                                     ; preds = %lor.lhs.false.3586, %sw.bb.3583
  br label %sw.epilog.7356

if.end.3589:                                      ; preds = %lor.lhs.false.3586
  %1904 = load i32, i32* @visual_bell, align 4
  %cmp3590 = icmp eq i32 %1904, 0
  br i1 %cmp3590, label %if.then.3592, label %if.else.3602

if.then.3592:                                     ; preds = %if.end.3589
  %1905 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3593 = getelementptr inbounds %struct.action, %struct.action* %1905, i32 0, i32 3
  %1906 = load i32, i32* %quiet3593, align 4
  %tobool3594 = icmp ne i32 %1906, 0
  br i1 %tobool3594, label %cond.false.3596, label %cond.true.3595

cond.true.3595:                                   ; preds = %if.then.3592
  br label %cond.end.3600

cond.false.3596:                                  ; preds = %if.then.3592
  %1907 = load i32, i32* @queryflag, align 4
  %cmp3597 = icmp sge i32 %1907, 0
  %cond3599 = select i1 %cmp3597, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3600

cond.end.3600:                                    ; preds = %cond.false.3596, %cond.true.3595
  %cond3601 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3595 ], [ %cond3599, %cond.false.3596 ]
  call void (i32, i8*, ...) %cond3601(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.153, i32 0, i32 0))
  br label %if.end.3612

if.else.3602:                                     ; preds = %if.end.3589
  %1908 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3603 = getelementptr inbounds %struct.action, %struct.action* %1908, i32 0, i32 3
  %1909 = load i32, i32* %quiet3603, align 4
  %tobool3604 = icmp ne i32 %1909, 0
  br i1 %tobool3604, label %cond.false.3606, label %cond.true.3605

cond.true.3605:                                   ; preds = %if.else.3602
  br label %cond.end.3610

cond.false.3606:                                  ; preds = %if.else.3602
  %1910 = load i32, i32* @queryflag, align 4
  %cmp3607 = icmp sge i32 %1910, 0
  %cond3609 = select i1 %cmp3607, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3610

cond.end.3610:                                    ; preds = %cond.false.3606, %cond.true.3605
  %cond3611 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3605 ], [ %cond3609, %cond.false.3606 ]
  call void (i32, i8*, ...) %cond3611(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.154, i32 0, i32 0))
  br label %if.end.3612

if.end.3612:                                      ; preds = %cond.end.3610, %cond.end.3600
  br label %sw.epilog.7356

sw.bb.3613:                                       ; preds = %land.end
  %1911 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3614 = call i32 @ParseNum1000(%struct.action* %1911, i32* @VBellWait)
  %cmp3615 = icmp eq i32 %call3614, 0
  br i1 %cmp3615, label %land.lhs.true.3617, label %if.end.3631

land.lhs.true.3617:                               ; preds = %sw.bb.3613
  %1912 = load i32, i32* %msgok, align 4
  %tobool3618 = icmp ne i32 %1912, 0
  br i1 %tobool3618, label %if.then.3619, label %if.end.3631

if.then.3619:                                     ; preds = %land.lhs.true.3617
  %1913 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3620 = getelementptr inbounds %struct.action, %struct.action* %1913, i32 0, i32 3
  %1914 = load i32, i32* %quiet3620, align 4
  %tobool3621 = icmp ne i32 %1914, 0
  br i1 %tobool3621, label %cond.false.3623, label %cond.true.3622

cond.true.3622:                                   ; preds = %if.then.3619
  br label %cond.end.3627

cond.false.3623:                                  ; preds = %if.then.3619
  %1915 = load i32, i32* @queryflag, align 4
  %cmp3624 = icmp sge i32 %1915, 0
  %cond3626 = select i1 %cmp3624, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3627

cond.end.3627:                                    ; preds = %cond.false.3623, %cond.true.3622
  %cond3628 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3622 ], [ %cond3626, %cond.false.3623 ]
  %1916 = load i32, i32* @VBellWait, align 4
  %conv3629 = sitofp i32 %1916 to double
  %div3630 = fdiv double %conv3629, 1.000000e+03
  call void (i32, i8*, ...) %cond3628(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.155, i32 0, i32 0), double %div3630)
  br label %if.end.3631

if.end.3631:                                      ; preds = %cond.end.3627, %land.lhs.true.3617, %sw.bb.3613
  br label %sw.epilog.7356

sw.bb.3632:                                       ; preds = %land.end
  %1917 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3633 = call i32 @ParseNum1000(%struct.action* %1917, i32* @MsgWait)
  %cmp3634 = icmp eq i32 %call3633, 0
  br i1 %cmp3634, label %land.lhs.true.3636, label %if.end.3650

land.lhs.true.3636:                               ; preds = %sw.bb.3632
  %1918 = load i32, i32* %msgok, align 4
  %tobool3637 = icmp ne i32 %1918, 0
  br i1 %tobool3637, label %if.then.3638, label %if.end.3650

if.then.3638:                                     ; preds = %land.lhs.true.3636
  %1919 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3639 = getelementptr inbounds %struct.action, %struct.action* %1919, i32 0, i32 3
  %1920 = load i32, i32* %quiet3639, align 4
  %tobool3640 = icmp ne i32 %1920, 0
  br i1 %tobool3640, label %cond.false.3642, label %cond.true.3641

cond.true.3641:                                   ; preds = %if.then.3638
  br label %cond.end.3646

cond.false.3642:                                  ; preds = %if.then.3638
  %1921 = load i32, i32* @queryflag, align 4
  %cmp3643 = icmp sge i32 %1921, 0
  %cond3645 = select i1 %cmp3643, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3646

cond.end.3646:                                    ; preds = %cond.false.3642, %cond.true.3641
  %cond3647 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3641 ], [ %cond3645, %cond.false.3642 ]
  %1922 = load i32, i32* @MsgWait, align 4
  %conv3648 = sitofp i32 %1922 to double
  %div3649 = fdiv double %conv3648, 1.000000e+03
  call void (i32, i8*, ...) %cond3647(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i32 0, i32 0), double %div3649)
  br label %if.end.3650

if.end.3650:                                      ; preds = %cond.end.3646, %land.lhs.true.3636, %sw.bb.3632
  br label %sw.epilog.7356

sw.bb.3651:                                       ; preds = %land.end
  %1923 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3652 = call i32 @ParseNum1000(%struct.action* %1923, i32* @MsgMinWait)
  %cmp3653 = icmp eq i32 %call3652, 0
  br i1 %cmp3653, label %land.lhs.true.3655, label %if.end.3669

land.lhs.true.3655:                               ; preds = %sw.bb.3651
  %1924 = load i32, i32* %msgok, align 4
  %tobool3656 = icmp ne i32 %1924, 0
  br i1 %tobool3656, label %if.then.3657, label %if.end.3669

if.then.3657:                                     ; preds = %land.lhs.true.3655
  %1925 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3658 = getelementptr inbounds %struct.action, %struct.action* %1925, i32 0, i32 3
  %1926 = load i32, i32* %quiet3658, align 4
  %tobool3659 = icmp ne i32 %1926, 0
  br i1 %tobool3659, label %cond.false.3661, label %cond.true.3660

cond.true.3660:                                   ; preds = %if.then.3657
  br label %cond.end.3665

cond.false.3661:                                  ; preds = %if.then.3657
  %1927 = load i32, i32* @queryflag, align 4
  %cmp3662 = icmp sge i32 %1927, 0
  %cond3664 = select i1 %cmp3662, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3665

cond.end.3665:                                    ; preds = %cond.false.3661, %cond.true.3660
  %cond3666 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3660 ], [ %cond3664, %cond.false.3661 ]
  %1928 = load i32, i32* @MsgMinWait, align 4
  %conv3667 = sitofp i32 %1928 to double
  %div3668 = fdiv double %conv3667, 1.000000e+03
  call void (i32, i8*, ...) %cond3666(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.157, i32 0, i32 0), double %div3668)
  br label %if.end.3669

if.end.3669:                                      ; preds = %cond.end.3665, %land.lhs.true.3655, %sw.bb.3651
  br label %sw.epilog.7356

sw.bb.3670:                                       ; preds = %land.end
  %1929 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3671 = call i32 @ParseNum(%struct.action* %1929, i32* @SilenceWait)
  %tobool3672 = icmp ne i32 %call3671, 0
  br i1 %tobool3672, label %if.then.3673, label %if.end.3674

if.then.3673:                                     ; preds = %sw.bb.3670
  br label %sw.epilog.7356

if.end.3674:                                      ; preds = %sw.bb.3670
  %1930 = load i32, i32* @SilenceWait, align 4
  %cmp3675 = icmp slt i32 %1930, 1
  br i1 %cmp3675, label %if.then.3677, label %if.end.3678

if.then.3677:                                     ; preds = %if.end.3674
  store i32 1, i32* @SilenceWait, align 4
  br label %if.end.3678

if.end.3678:                                      ; preds = %if.then.3677, %if.end.3674
  %1931 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %1931, %struct.win** %p, align 8
  br label %for.cond.3679

for.cond.3679:                                    ; preds = %for.inc.3682, %if.end.3678
  %1932 = load %struct.win*, %struct.win** %p, align 8
  %tobool3680 = icmp ne %struct.win* %1932, null
  br i1 %tobool3680, label %for.body.3681, label %for.end.3684

for.body.3681:                                    ; preds = %for.cond.3679
  %1933 = load i32, i32* @SilenceWait, align 4
  %1934 = load %struct.win*, %struct.win** %p, align 8
  %w_silencewait = getelementptr inbounds %struct.win, %struct.win* %1934, i32 0, i32 71
  store i32 %1933, i32* %w_silencewait, align 4
  br label %for.inc.3682

for.inc.3682:                                     ; preds = %for.body.3681
  %1935 = load %struct.win*, %struct.win** %p, align 8
  %w_next3683 = getelementptr inbounds %struct.win, %struct.win* %1935, i32 0, i32 0
  %1936 = load %struct.win*, %struct.win** %w_next3683, align 8
  store %struct.win* %1936, %struct.win** %p, align 8
  br label %for.cond.3679

for.end.3684:                                     ; preds = %for.cond.3679
  %1937 = load i32, i32* %msgok, align 4
  %tobool3685 = icmp ne i32 %1937, 0
  br i1 %tobool3685, label %if.then.3686, label %if.end.3696

if.then.3686:                                     ; preds = %for.end.3684
  %1938 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3687 = getelementptr inbounds %struct.action, %struct.action* %1938, i32 0, i32 3
  %1939 = load i32, i32* %quiet3687, align 4
  %tobool3688 = icmp ne i32 %1939, 0
  br i1 %tobool3688, label %cond.false.3690, label %cond.true.3689

cond.true.3689:                                   ; preds = %if.then.3686
  br label %cond.end.3694

cond.false.3690:                                  ; preds = %if.then.3686
  %1940 = load i32, i32* @queryflag, align 4
  %cmp3691 = icmp sge i32 %1940, 0
  %cond3693 = select i1 %cmp3691, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3694

cond.end.3694:                                    ; preds = %cond.false.3690, %cond.true.3689
  %cond3695 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3689 ], [ %cond3693, %cond.false.3690 ]
  %1941 = load i32, i32* @SilenceWait, align 4
  call void (i32, i8*, ...) %cond3695(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.158, i32 0, i32 0), i32 %1941)
  br label %if.end.3696

if.end.3696:                                      ; preds = %cond.end.3694, %for.end.3684
  br label %sw.epilog.7356

sw.bb.3697:                                       ; preds = %land.end
  %1942 = load %struct.win*, %struct.win** @fore, align 8
  %w_number3698 = getelementptr inbounds %struct.win, %struct.win* %1942, i32 0, i32 9
  %1943 = load i32, i32* %w_number3698, align 4
  %call3699 = call i32 @NextWindow()
  %cmp3700 = icmp slt i32 %1943, %call3699
  br i1 %cmp3700, label %if.then.3702, label %if.end.3706

if.then.3702:                                     ; preds = %sw.bb.3697
  %1944 = load %struct.win*, %struct.win** @fore, align 8
  %w_number3703 = getelementptr inbounds %struct.win, %struct.win* %1944, i32 0, i32 9
  %1945 = load i32, i32* %w_number3703, align 4
  %call3704 = call i32 @NextWindow()
  %call3705 = call i32 @WindowChangeNumber(i32 %1945, i32 %call3704)
  br label %if.end.3706

if.end.3706:                                      ; preds = %if.then.3702, %sw.bb.3697
  br label %sw.epilog.7356

sw.bb.3707:                                       ; preds = %land.end
  %1946 = load %struct.win*, %struct.win** @fore, align 8
  %w_number3708 = getelementptr inbounds %struct.win, %struct.win* %1946, i32 0, i32 9
  %1947 = load i32, i32* %w_number3708, align 4
  %call3709 = call i32 @PreviousWindow()
  %cmp3710 = icmp sgt i32 %1947, %call3709
  br i1 %cmp3710, label %if.then.3712, label %if.end.3716

if.then.3712:                                     ; preds = %sw.bb.3707
  %1948 = load %struct.win*, %struct.win** @fore, align 8
  %w_number3713 = getelementptr inbounds %struct.win, %struct.win* %1948, i32 0, i32 9
  %1949 = load i32, i32* %w_number3713, align 4
  %call3714 = call i32 @PreviousWindow()
  %call3715 = call i32 @WindowChangeNumber(i32 %1949, i32 %call3714)
  br label %if.end.3716

if.end.3716:                                      ; preds = %if.then.3712, %sw.bb.3707
  br label %sw.epilog.7356

sw.bb.3717:                                       ; preds = %land.end
  call void @CollapseWindowlist()
  br label %sw.epilog.7356

sw.bb.3718:                                       ; preds = %land.end
  %1950 = load i8**, i8*** %args, align 8
  %1951 = load i8*, i8** %1950, align 8
  %cmp3719 = icmp eq i8* %1951, null
  br i1 %cmp3719, label %if.then.3721, label %if.else.3736

if.then.3721:                                     ; preds = %sw.bb.3718
  %1952 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3722 = getelementptr inbounds %struct.action, %struct.action* %1952, i32 0, i32 3
  %1953 = load i32, i32* %quiet3722, align 4
  %tobool3723 = icmp ne i32 %1953, 0
  br i1 %tobool3723, label %cond.false.3725, label %cond.true.3724

cond.true.3724:                                   ; preds = %if.then.3721
  br label %cond.end.3729

cond.false.3725:                                  ; preds = %if.then.3721
  %1954 = load i32, i32* @queryflag, align 4
  %cmp3726 = icmp sge i32 %1954, 0
  %cond3728 = select i1 %cmp3726, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3729

cond.end.3729:                                    ; preds = %cond.false.3725, %cond.true.3724
  %cond3730 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3724 ], [ %cond3728, %cond.false.3725 ]
  %1955 = load i32, i32* @queryflag, align 4
  %cmp3731 = icmp sge i32 %1955, 0
  %cond3733 = select i1 %cmp3731, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.160, i32 0, i32 0)
  %1956 = load %struct.win*, %struct.win** @fore, align 8
  %w_number3734 = getelementptr inbounds %struct.win, %struct.win* %1956, i32 0, i32 9
  %1957 = load i32, i32* %w_number3734, align 4
  %1958 = load %struct.win*, %struct.win** @fore, align 8
  %w_title3735 = getelementptr inbounds %struct.win, %struct.win* %1958, i32 0, i32 21
  %1959 = load i8*, i8** %w_title3735, align 8
  call void (i32, i8*, ...) %cond3730(i32 0, i8* %cond3733, i32 %1957, i8* %1959)
  br label %if.end.3784

if.else.3736:                                     ; preds = %sw.bb.3718
  %1960 = load %struct.win*, %struct.win** @fore, align 8
  %w_number3737 = getelementptr inbounds %struct.win, %struct.win* %1960, i32 0, i32 9
  %1961 = load i32, i32* %w_number3737, align 4
  store i32 %1961, i32* %old, align 4
  store i32 0, i32* %rel, align 4
  %1962 = load i8**, i8*** %args, align 8
  %arrayidx3738 = getelementptr inbounds i8*, i8** %1962, i64 0
  %1963 = load i8*, i8** %arrayidx3738, align 8
  %arrayidx3739 = getelementptr inbounds i8, i8* %1963, i64 0
  %1964 = load i8, i8* %arrayidx3739, align 1
  %conv3740 = sext i8 %1964 to i32
  %cmp3741 = icmp eq i32 %conv3740, 43
  br i1 %cmp3741, label %if.then.3743, label %if.else.3744

if.then.3743:                                     ; preds = %if.else.3736
  store i32 1, i32* %rel, align 4
  br label %if.end.3752

if.else.3744:                                     ; preds = %if.else.3736
  %1965 = load i8**, i8*** %args, align 8
  %arrayidx3745 = getelementptr inbounds i8*, i8** %1965, i64 0
  %1966 = load i8*, i8** %arrayidx3745, align 8
  %arrayidx3746 = getelementptr inbounds i8, i8* %1966, i64 0
  %1967 = load i8, i8* %arrayidx3746, align 1
  %conv3747 = sext i8 %1967 to i32
  %cmp3748 = icmp eq i32 %conv3747, 45
  br i1 %cmp3748, label %if.then.3750, label %if.end.3751

if.then.3750:                                     ; preds = %if.else.3744
  store i32 -1, i32* %rel, align 4
  br label %if.end.3751

if.end.3751:                                      ; preds = %if.then.3750, %if.else.3744
  br label %if.end.3752

if.end.3752:                                      ; preds = %if.end.3751, %if.then.3743
  %1968 = load i32, i32* %rel, align 4
  %tobool3753 = icmp ne i32 %1968, 0
  br i1 %tobool3753, label %if.then.3754, label %if.end.3758

if.then.3754:                                     ; preds = %if.end.3752
  %1969 = load %struct.action*, %struct.action** %act.addr, align 8
  %args3755 = getelementptr inbounds %struct.action, %struct.action* %1969, i32 0, i32 1
  %1970 = load i8**, i8*** %args3755, align 8
  %arrayidx3756 = getelementptr inbounds i8*, i8** %1970, i64 0
  %1971 = load i8*, i8** %arrayidx3756, align 8
  %incdec.ptr3757 = getelementptr inbounds i8, i8* %1971, i32 1
  store i8* %incdec.ptr3757, i8** %arrayidx3756, align 8
  br label %if.end.3758

if.end.3758:                                      ; preds = %if.then.3754, %if.end.3752
  %1972 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3759 = call i32 @ParseNum(%struct.action* %1972, i32* %n)
  store i32 %call3759, i32* %parse, align 4
  %1973 = load i32, i32* %rel, align 4
  %tobool3760 = icmp ne i32 %1973, 0
  br i1 %tobool3760, label %if.then.3761, label %if.end.3765

if.then.3761:                                     ; preds = %if.end.3758
  %1974 = load %struct.action*, %struct.action** %act.addr, align 8
  %args3762 = getelementptr inbounds %struct.action, %struct.action* %1974, i32 0, i32 1
  %1975 = load i8**, i8*** %args3762, align 8
  %arrayidx3763 = getelementptr inbounds i8*, i8** %1975, i64 0
  %1976 = load i8*, i8** %arrayidx3763, align 8
  %incdec.ptr3764 = getelementptr inbounds i8, i8* %1976, i32 -1
  store i8* %incdec.ptr3764, i8** %arrayidx3763, align 8
  br label %if.end.3765

if.end.3765:                                      ; preds = %if.then.3761, %if.end.3758
  %1977 = load i32, i32* %parse, align 4
  %tobool3766 = icmp ne i32 %1977, 0
  br i1 %tobool3766, label %if.then.3767, label %if.end.3768

if.then.3767:                                     ; preds = %if.end.3765
  br label %sw.epilog.7356

if.end.3768:                                      ; preds = %if.end.3765
  %1978 = load i32, i32* %rel, align 4
  %cmp3769 = icmp sgt i32 %1978, 0
  br i1 %cmp3769, label %if.then.3771, label %if.else.3773

if.then.3771:                                     ; preds = %if.end.3768
  %1979 = load i32, i32* %old, align 4
  %1980 = load i32, i32* %n, align 4
  %add3772 = add nsw i32 %1980, %1979
  store i32 %add3772, i32* %n, align 4
  br label %if.end.3779

if.else.3773:                                     ; preds = %if.end.3768
  %1981 = load i32, i32* %rel, align 4
  %cmp3774 = icmp slt i32 %1981, 0
  br i1 %cmp3774, label %if.then.3776, label %if.end.3778

if.then.3776:                                     ; preds = %if.else.3773
  %1982 = load i32, i32* %old, align 4
  %1983 = load i32, i32* %n, align 4
  %sub3777 = sub nsw i32 %1982, %1983
  store i32 %sub3777, i32* %n, align 4
  br label %if.end.3778

if.end.3778:                                      ; preds = %if.then.3776, %if.else.3773
  br label %if.end.3779

if.end.3779:                                      ; preds = %if.end.3778, %if.then.3771
  %1984 = load i32, i32* %old, align 4
  %1985 = load i32, i32* %n, align 4
  %call3780 = call i32 @WindowChangeNumber(i32 %1984, i32 %1985)
  %tobool3781 = icmp ne i32 %call3780, 0
  br i1 %tobool3781, label %if.end.3783, label %if.then.3782

if.then.3782:                                     ; preds = %if.end.3779
  store i32 -1, i32* @queryflag, align 4
  br label %if.end.7370

if.end.3783:                                      ; preds = %if.end.3779
  br label %if.end.3784

if.end.3784:                                      ; preds = %if.end.3783, %cond.end.3729
  br label %sw.epilog.7356

sw.bb.3785:                                       ; preds = %land.end
  %1986 = load i32, i32* %argc, align 4
  %cmp3786 = icmp ne i32 %1986, 1
  br i1 %cmp3786, label %if.then.3788, label %if.end.3789

if.then.3788:                                     ; preds = %sw.bb.3785
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.161, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.3789:                                      ; preds = %sw.bb.3785
  %1987 = load i8**, i8*** %args, align 8
  %arrayidx3790 = getelementptr inbounds i8*, i8** %1987, i64 0
  %1988 = load i8*, i8** %arrayidx3790, align 8
  %call3791 = call i32 @atoi(i8* %1988) #8
  store i32 %call3791, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 21), align 4
  %1989 = load %struct.win*, %struct.win** @fore, align 8
  %tobool3792 = icmp ne %struct.win* %1989, null
  br i1 %tobool3792, label %if.then.3793, label %if.end.3794

if.then.3793:                                     ; preds = %if.end.3789
  %1990 = load i32, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 21), align 4
  %1991 = load %struct.win*, %struct.win** @fore, align 8
  %w_poll_zombie_timeout = getelementptr inbounds %struct.win, %struct.win* %1991, i32 0, i32 14
  store i32 %1990, i32* %w_poll_zombie_timeout, align 4
  br label %if.end.3794

if.end.3794:                                      ; preds = %if.then.3793, %if.end.3789
  br label %do.body.3795

do.body.3795:                                     ; preds = %if.end.3794
  br label %do.end.3796

do.end.3796:                                      ; preds = %do.body.3795
  br label %sw.epilog.7356

sw.bb.3797:                                       ; preds = %land.end
  %1992 = load %struct.win*, %struct.win** @fore, align 8
  %tobool3798 = icmp ne %struct.win* %1992, null
  br i1 %tobool3798, label %if.then.3799, label %if.end.3800

if.then.3799:                                     ; preds = %sw.bb.3797
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.162, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.3800:                                      ; preds = %sw.bb.3797
  store i32 0, i32* %i, align 4
  br label %for.cond.3801

for.cond.3801:                                    ; preds = %for.inc.3858, %if.end.3800
  %1993 = load i32, i32* %i, align 4
  %1994 = load i32, i32* @maxwin, align 4
  %cmp3802 = icmp slt i32 %1993, %1994
  br i1 %cmp3802, label %for.body.3804, label %for.end.3860

for.body.3804:                                    ; preds = %for.cond.3801
  %1995 = load i32, i32* %i, align 4
  %idxprom3805 = sext i32 %1995 to i64
  %1996 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3806 = getelementptr inbounds %struct.win*, %struct.win** %1996, i64 %idxprom3805
  %1997 = load %struct.win*, %struct.win** %arrayidx3806, align 8
  %cmp3807 = icmp eq %struct.win* %1997, null
  br i1 %cmp3807, label %if.then.3809, label %if.end.3810

if.then.3809:                                     ; preds = %for.body.3804
  br label %for.inc.3858

if.end.3810:                                      ; preds = %for.body.3804
  %1998 = load i32, i32* %i, align 4
  store i32 %1998, i32* %n, align 4
  %1999 = load i32, i32* %i, align 4
  %add3811 = add nsw i32 %1999, 1
  store i32 %add3811, i32* %nr, align 4
  br label %for.cond.3812

for.cond.3812:                                    ; preds = %for.inc.3835, %if.end.3810
  %2000 = load i32, i32* %nr, align 4
  %2001 = load i32, i32* @maxwin, align 4
  %cmp3813 = icmp slt i32 %2000, %2001
  br i1 %cmp3813, label %for.body.3815, label %for.end.3837

for.body.3815:                                    ; preds = %for.cond.3812
  %2002 = load i32, i32* %nr, align 4
  %idxprom3816 = sext i32 %2002 to i64
  %2003 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3817 = getelementptr inbounds %struct.win*, %struct.win** %2003, i64 %idxprom3816
  %2004 = load %struct.win*, %struct.win** %arrayidx3817, align 8
  %cmp3818 = icmp eq %struct.win* %2004, null
  br i1 %cmp3818, label %if.then.3820, label %if.end.3821

if.then.3820:                                     ; preds = %for.body.3815
  br label %for.inc.3835

if.end.3821:                                      ; preds = %for.body.3815
  br label %do.body.3822

do.body.3822:                                     ; preds = %if.end.3821
  br label %do.end.3823

do.end.3823:                                      ; preds = %do.body.3822
  %2005 = load i32, i32* %nr, align 4
  %idxprom3824 = sext i32 %2005 to i64
  %2006 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3825 = getelementptr inbounds %struct.win*, %struct.win** %2006, i64 %idxprom3824
  %2007 = load %struct.win*, %struct.win** %arrayidx3825, align 8
  %w_title3826 = getelementptr inbounds %struct.win, %struct.win* %2007, i32 0, i32 21
  %2008 = load i8*, i8** %w_title3826, align 8
  %2009 = load i32, i32* %n, align 4
  %idxprom3827 = sext i32 %2009 to i64
  %2010 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3828 = getelementptr inbounds %struct.win*, %struct.win** %2010, i64 %idxprom3827
  %2011 = load %struct.win*, %struct.win** %arrayidx3828, align 8
  %w_title3829 = getelementptr inbounds %struct.win, %struct.win* %2011, i32 0, i32 21
  %2012 = load i8*, i8** %w_title3829, align 8
  %call3830 = call i32 @strcmp(i8* %2008, i8* %2012) #8
  %cmp3831 = icmp slt i32 %call3830, 0
  br i1 %cmp3831, label %if.then.3833, label %if.end.3834

if.then.3833:                                     ; preds = %do.end.3823
  %2013 = load i32, i32* %nr, align 4
  store i32 %2013, i32* %n, align 4
  br label %if.end.3834

if.end.3834:                                      ; preds = %if.then.3833, %do.end.3823
  br label %for.inc.3835

for.inc.3835:                                     ; preds = %if.end.3834, %if.then.3820
  %2014 = load i32, i32* %nr, align 4
  %inc3836 = add nsw i32 %2014, 1
  store i32 %inc3836, i32* %nr, align 4
  br label %for.cond.3812

for.end.3837:                                     ; preds = %for.cond.3812
  %2015 = load i32, i32* %n, align 4
  %2016 = load i32, i32* %i, align 4
  %cmp3838 = icmp ne i32 %2015, %2016
  br i1 %cmp3838, label %if.then.3840, label %if.end.3857

if.then.3840:                                     ; preds = %for.end.3837
  br label %do.body.3841

do.body.3841:                                     ; preds = %if.then.3840
  br label %do.end.3842

do.end.3842:                                      ; preds = %do.body.3841
  %2017 = load i32, i32* %n, align 4
  %idxprom3843 = sext i32 %2017 to i64
  %2018 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3844 = getelementptr inbounds %struct.win*, %struct.win** %2018, i64 %idxprom3843
  %2019 = load %struct.win*, %struct.win** %arrayidx3844, align 8
  store %struct.win* %2019, %struct.win** %p, align 8
  %2020 = load i32, i32* %i, align 4
  %idxprom3845 = sext i32 %2020 to i64
  %2021 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3846 = getelementptr inbounds %struct.win*, %struct.win** %2021, i64 %idxprom3845
  %2022 = load %struct.win*, %struct.win** %arrayidx3846, align 8
  %2023 = load i32, i32* %n, align 4
  %idxprom3847 = sext i32 %2023 to i64
  %2024 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3848 = getelementptr inbounds %struct.win*, %struct.win** %2024, i64 %idxprom3847
  store %struct.win* %2022, %struct.win** %arrayidx3848, align 8
  %2025 = load %struct.win*, %struct.win** %p, align 8
  %2026 = load i32, i32* %i, align 4
  %idxprom3849 = sext i32 %2026 to i64
  %2027 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3850 = getelementptr inbounds %struct.win*, %struct.win** %2027, i64 %idxprom3849
  store %struct.win* %2025, %struct.win** %arrayidx3850, align 8
  %2028 = load i32, i32* %n, align 4
  %2029 = load i32, i32* %n, align 4
  %idxprom3851 = sext i32 %2029 to i64
  %2030 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3852 = getelementptr inbounds %struct.win*, %struct.win** %2030, i64 %idxprom3851
  %2031 = load %struct.win*, %struct.win** %arrayidx3852, align 8
  %w_number3853 = getelementptr inbounds %struct.win, %struct.win* %2031, i32 0, i32 9
  store i32 %2028, i32* %w_number3853, align 4
  %2032 = load i32, i32* %i, align 4
  %2033 = load i32, i32* %i, align 4
  %idxprom3854 = sext i32 %2033 to i64
  %2034 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx3855 = getelementptr inbounds %struct.win*, %struct.win** %2034, i64 %idxprom3854
  %2035 = load %struct.win*, %struct.win** %arrayidx3855, align 8
  %w_number3856 = getelementptr inbounds %struct.win, %struct.win* %2035, i32 0, i32 9
  store i32 %2032, i32* %w_number3856, align 4
  %2036 = load i32, i32* %i, align 4
  %2037 = load i32, i32* %n, align 4
  call void @AclWinSwap(i32 %2036, i32 %2037)
  br label %if.end.3857

if.end.3857:                                      ; preds = %do.end.3842, %for.end.3837
  br label %for.inc.3858

for.inc.3858:                                     ; preds = %if.end.3857, %if.then.3809
  %2038 = load i32, i32* %i, align 4
  %inc3859 = add nsw i32 %2038, 1
  store i32 %inc3859, i32* %i, align 4
  br label %for.cond.3801

for.end.3860:                                     ; preds = %for.cond.3801
  call void @WindowChanged(%struct.win* null, i32 0)
  br label %sw.epilog.7356

sw.bb.3861:                                       ; preds = %land.end
  %2039 = load %struct.win*, %struct.win** @fore, align 8
  %w_silence = getelementptr inbounds %struct.win, %struct.win* %2039, i32 0, i32 72
  %2040 = load i32, i32* %w_silence, align 4
  %cmp3862 = icmp ne i32 %2040, 0
  %conv3863 = zext i1 %cmp3862 to i32
  store i32 %conv3863, i32* %n, align 4
  %2041 = load %struct.win*, %struct.win** @fore, align 8
  %w_silencewait3864 = getelementptr inbounds %struct.win, %struct.win* %2041, i32 0, i32 71
  %2042 = load i32, i32* %w_silencewait3864, align 4
  store i32 %2042, i32* %i, align 4
  %2043 = load i8**, i8*** %args, align 8
  %arrayidx3865 = getelementptr inbounds i8*, i8** %2043, i64 0
  %2044 = load i8*, i8** %arrayidx3865, align 8
  %tobool3866 = icmp ne i8* %2044, null
  br i1 %tobool3866, label %land.lhs.true.3867, label %if.else.3892

land.lhs.true.3867:                               ; preds = %sw.bb.3861
  %2045 = load i8**, i8*** %args, align 8
  %arrayidx3868 = getelementptr inbounds i8*, i8** %2045, i64 0
  %2046 = load i8*, i8** %arrayidx3868, align 8
  %arrayidx3869 = getelementptr inbounds i8, i8* %2046, i64 0
  %2047 = load i8, i8* %arrayidx3869, align 1
  %conv3870 = sext i8 %2047 to i32
  %cmp3871 = icmp eq i32 %conv3870, 45
  br i1 %cmp3871, label %if.then.3885, label %lor.lhs.false.3873

lor.lhs.false.3873:                               ; preds = %land.lhs.true.3867
  %2048 = load i8**, i8*** %args, align 8
  %arrayidx3874 = getelementptr inbounds i8*, i8** %2048, i64 0
  %2049 = load i8*, i8** %arrayidx3874, align 8
  %arrayidx3875 = getelementptr inbounds i8, i8* %2049, i64 0
  %2050 = load i8, i8* %arrayidx3875, align 1
  %conv3876 = sext i8 %2050 to i32
  %cmp3877 = icmp sge i32 %conv3876, 48
  br i1 %cmp3877, label %land.lhs.true.3879, label %if.else.3892

land.lhs.true.3879:                               ; preds = %lor.lhs.false.3873
  %2051 = load i8**, i8*** %args, align 8
  %arrayidx3880 = getelementptr inbounds i8*, i8** %2051, i64 0
  %2052 = load i8*, i8** %arrayidx3880, align 8
  %arrayidx3881 = getelementptr inbounds i8, i8* %2052, i64 0
  %2053 = load i8, i8* %arrayidx3881, align 1
  %conv3882 = sext i8 %2053 to i32
  %cmp3883 = icmp sle i32 %conv3882, 57
  br i1 %cmp3883, label %if.then.3885, label %if.else.3892

if.then.3885:                                     ; preds = %land.lhs.true.3879, %land.lhs.true.3867
  %2054 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3886 = call i32 @ParseNum(%struct.action* %2054, i32* %i)
  %tobool3887 = icmp ne i32 %call3886, 0
  br i1 %tobool3887, label %if.then.3888, label %if.end.3889

if.then.3888:                                     ; preds = %if.then.3885
  br label %sw.epilog.7356

if.end.3889:                                      ; preds = %if.then.3885
  %2055 = load i32, i32* %i, align 4
  %cmp3890 = icmp sgt i32 %2055, 0
  %conv3891 = zext i1 %cmp3890 to i32
  store i32 %conv3891, i32* %n, align 4
  br label %if.end.3897

if.else.3892:                                     ; preds = %land.lhs.true.3879, %lor.lhs.false.3873, %sw.bb.3861
  %2056 = load %struct.action*, %struct.action** %act.addr, align 8
  %call3893 = call i32 @ParseSwitch(%struct.action* %2056, i32* %n)
  %tobool3894 = icmp ne i32 %call3893, 0
  br i1 %tobool3894, label %if.then.3895, label %if.end.3896

if.then.3895:                                     ; preds = %if.else.3892
  br label %sw.epilog.7356

if.end.3896:                                      ; preds = %if.else.3892
  br label %if.end.3897

if.end.3897:                                      ; preds = %if.end.3896, %if.end.3889
  %2057 = load i32, i32* %n, align 4
  %tobool3898 = icmp ne i32 %2057, 0
  br i1 %tobool3898, label %if.then.3899, label %if.else.3949

if.then.3899:                                     ; preds = %if.end.3897
  %2058 = load %struct.display*, %struct.display** @display, align 8
  %tobool3900 = icmp ne %struct.display* %2058, null
  br i1 %tobool3900, label %if.then.3901, label %if.else.3914

if.then.3901:                                     ; preds = %if.then.3899
  %2059 = load %struct.display*, %struct.display** @display, align 8
  %d_user3902 = getelementptr inbounds %struct.display, %struct.display* %2059, i32 0, i32 1
  %2060 = load %struct.acluser*, %struct.acluser** %d_user3902, align 8
  %u_id3903 = getelementptr inbounds %struct.acluser, %struct.acluser* %2060, i32 0, i32 9
  %2061 = load i32, i32* %u_id3903, align 4
  %and3904 = and i32 %2061, 7
  %shr3905 = ashr i32 128, %and3904
  %2062 = load %struct.display*, %struct.display** @display, align 8
  %d_user3906 = getelementptr inbounds %struct.display, %struct.display* %2062, i32 0, i32 1
  %2063 = load %struct.acluser*, %struct.acluser** %d_user3906, align 8
  %u_id3907 = getelementptr inbounds %struct.acluser, %struct.acluser* %2063, i32 0, i32 9
  %2064 = load i32, i32* %u_id3907, align 4
  %shr3908 = ashr i32 %2064, 3
  %idxprom3909 = sext i32 %shr3908 to i64
  %2065 = load %struct.win*, %struct.win** @fore, align 8
  %w_lio_notify = getelementptr inbounds %struct.win, %struct.win* %2065, i32 0, i32 32
  %2066 = load i8*, i8** %w_lio_notify, align 8
  %arrayidx3910 = getelementptr inbounds i8, i8* %2066, i64 %idxprom3909
  %2067 = load i8, i8* %arrayidx3910, align 1
  %conv3911 = zext i8 %2067 to i32
  %or3912 = or i32 %conv3911, %shr3905
  %conv3913 = trunc i32 %or3912 to i8
  store i8 %conv3913, i8* %arrayidx3910, align 1
  br label %if.end.3931

if.else.3914:                                     ; preds = %if.then.3899
  store i32 0, i32* %n, align 4
  br label %for.cond.3915

for.cond.3915:                                    ; preds = %for.inc.3928, %if.else.3914
  %2068 = load i32, i32* %n, align 4
  %2069 = load i32, i32* @maxusercount, align 4
  %cmp3916 = icmp slt i32 %2068, %2069
  br i1 %cmp3916, label %for.body.3918, label %for.end.3930

for.body.3918:                                    ; preds = %for.cond.3915
  %2070 = load i32, i32* %n, align 4
  %and3919 = and i32 %2070, 7
  %shr3920 = ashr i32 128, %and3919
  %2071 = load i32, i32* %n, align 4
  %shr3921 = ashr i32 %2071, 3
  %idxprom3922 = sext i32 %shr3921 to i64
  %2072 = load %struct.win*, %struct.win** @fore, align 8
  %w_lio_notify3923 = getelementptr inbounds %struct.win, %struct.win* %2072, i32 0, i32 32
  %2073 = load i8*, i8** %w_lio_notify3923, align 8
  %arrayidx3924 = getelementptr inbounds i8, i8* %2073, i64 %idxprom3922
  %2074 = load i8, i8* %arrayidx3924, align 1
  %conv3925 = zext i8 %2074 to i32
  %or3926 = or i32 %conv3925, %shr3920
  %conv3927 = trunc i32 %or3926 to i8
  store i8 %conv3927, i8* %arrayidx3924, align 1
  br label %for.inc.3928

for.inc.3928:                                     ; preds = %for.body.3918
  %2075 = load i32, i32* %n, align 4
  %inc3929 = add nsw i32 %2075, 1
  store i32 %inc3929, i32* %n, align 4
  br label %for.cond.3915

for.end.3930:                                     ; preds = %for.cond.3915
  br label %if.end.3931

if.end.3931:                                      ; preds = %for.end.3930, %if.then.3901
  %2076 = load i32, i32* %i, align 4
  %2077 = load %struct.win*, %struct.win** @fore, align 8
  %w_silencewait3932 = getelementptr inbounds %struct.win, %struct.win* %2077, i32 0, i32 71
  store i32 %2076, i32* %w_silencewait3932, align 4
  %2078 = load %struct.win*, %struct.win** @fore, align 8
  %w_silence3933 = getelementptr inbounds %struct.win, %struct.win* %2078, i32 0, i32 72
  store i32 1, i32* %w_silence3933, align 4
  %2079 = load %struct.win*, %struct.win** @fore, align 8
  %w_silenceev = getelementptr inbounds %struct.win, %struct.win* %2079, i32 0, i32 12
  %2080 = load %struct.win*, %struct.win** @fore, align 8
  %w_silencewait3934 = getelementptr inbounds %struct.win, %struct.win* %2080, i32 0, i32 71
  %2081 = load i32, i32* %w_silencewait3934, align 4
  %mul = mul nsw i32 %2081, 1000
  call void @SetTimeout(%struct.event* %w_silenceev, i32 %mul)
  %2082 = load %struct.win*, %struct.win** @fore, align 8
  %w_silenceev3935 = getelementptr inbounds %struct.win, %struct.win* %2082, i32 0, i32 12
  call void @evenq(%struct.event* %w_silenceev3935)
  %2083 = load i32, i32* %msgok, align 4
  %tobool3936 = icmp ne i32 %2083, 0
  br i1 %tobool3936, label %if.end.3938, label %if.then.3937

if.then.3937:                                     ; preds = %if.end.3931
  br label %sw.epilog.7356

if.end.3938:                                      ; preds = %if.end.3931
  %2084 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet3939 = getelementptr inbounds %struct.action, %struct.action* %2084, i32 0, i32 3
  %2085 = load i32, i32* %quiet3939, align 4
  %tobool3940 = icmp ne i32 %2085, 0
  br i1 %tobool3940, label %cond.false.3942, label %cond.true.3941

cond.true.3941:                                   ; preds = %if.end.3938
  br label %cond.end.3946

cond.false.3942:                                  ; preds = %if.end.3938
  %2086 = load i32, i32* @queryflag, align 4
  %cmp3943 = icmp sge i32 %2086, 0
  %cond3945 = select i1 %cmp3943, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.3946

cond.end.3946:                                    ; preds = %cond.false.3942, %cond.true.3941
  %cond3947 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.3941 ], [ %cond3945, %cond.false.3942 ]
  %2087 = load %struct.win*, %struct.win** @fore, align 8
  %w_silencewait3948 = getelementptr inbounds %struct.win, %struct.win* %2087, i32 0, i32 71
  %2088 = load i32, i32* %w_silencewait3948, align 4
  call void (i32, i8*, ...) %cond3947(i32 0, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.163, i32 0, i32 0), i32 %2088)
  br label %if.end.4018

if.else.3949:                                     ; preds = %if.end.3897
  %2089 = load %struct.display*, %struct.display** @display, align 8
  %tobool3950 = icmp ne %struct.display* %2089, null
  br i1 %tobool3950, label %if.then.3951, label %if.else.3966

if.then.3951:                                     ; preds = %if.else.3949
  %2090 = load %struct.display*, %struct.display** @display, align 8
  %d_user3952 = getelementptr inbounds %struct.display, %struct.display* %2090, i32 0, i32 1
  %2091 = load %struct.acluser*, %struct.acluser** %d_user3952, align 8
  %u_id3953 = getelementptr inbounds %struct.acluser, %struct.acluser* %2091, i32 0, i32 9
  %2092 = load i32, i32* %u_id3953, align 4
  %and3954 = and i32 %2092, 7
  %shr3955 = ashr i32 128, %and3954
  %neg3956 = xor i32 %shr3955, -1
  %2093 = load %struct.display*, %struct.display** @display, align 8
  %d_user3957 = getelementptr inbounds %struct.display, %struct.display* %2093, i32 0, i32 1
  %2094 = load %struct.acluser*, %struct.acluser** %d_user3957, align 8
  %u_id3958 = getelementptr inbounds %struct.acluser, %struct.acluser* %2094, i32 0, i32 9
  %2095 = load i32, i32* %u_id3958, align 4
  %shr3959 = ashr i32 %2095, 3
  %idxprom3960 = sext i32 %shr3959 to i64
  %2096 = load %struct.win*, %struct.win** @fore, align 8
  %w_lio_notify3961 = getelementptr inbounds %struct.win, %struct.win* %2096, i32 0, i32 32
  %2097 = load i8*, i8** %w_lio_notify3961, align 8
  %arrayidx3962 = getelementptr inbounds i8, i8* %2097, i64 %idxprom3960
  %2098 = load i8, i8* %arrayidx3962, align 1
  %conv3963 = zext i8 %2098 to i32
  %and3964 = and i32 %conv3963, %neg3956
  %conv3965 = trunc i32 %and3964 to i8
  store i8 %conv3965, i8* %arrayidx3962, align 1
  br label %if.end.3984

if.else.3966:                                     ; preds = %if.else.3949
  store i32 0, i32* %n, align 4
  br label %for.cond.3967

for.cond.3967:                                    ; preds = %for.inc.3981, %if.else.3966
  %2099 = load i32, i32* %n, align 4
  %2100 = load i32, i32* @maxusercount, align 4
  %cmp3968 = icmp slt i32 %2099, %2100
  br i1 %cmp3968, label %for.body.3970, label %for.end.3983

for.body.3970:                                    ; preds = %for.cond.3967
  %2101 = load i32, i32* %n, align 4
  %and3971 = and i32 %2101, 7
  %shr3972 = ashr i32 128, %and3971
  %neg3973 = xor i32 %shr3972, -1
  %2102 = load i32, i32* %n, align 4
  %shr3974 = ashr i32 %2102, 3
  %idxprom3975 = sext i32 %shr3974 to i64
  %2103 = load %struct.win*, %struct.win** @fore, align 8
  %w_lio_notify3976 = getelementptr inbounds %struct.win, %struct.win* %2103, i32 0, i32 32
  %2104 = load i8*, i8** %w_lio_notify3976, align 8
  %arrayidx3977 = getelementptr inbounds i8, i8* %2104, i64 %idxprom3975
  %2105 = load i8, i8* %arrayidx3977, align 1
  %conv3978 = zext i8 %2105 to i32
  %and3979 = and i32 %conv3978, %neg3973
  %conv3980 = trunc i32 %and3979 to i8
  store i8 %conv3980, i8* %arrayidx3977, align 1
  br label %for.inc.3981

for.inc.3981:                                     ; preds = %for.body.3970
  %2106 = load i32, i32* %n, align 4
  %inc3982 = add nsw i32 %2106, 1
  store i32 %inc3982, i32* %n, align 4
  br label %for.cond.3967

for.end.3983:                                     ; preds = %for.cond.3967
  br label %if.end.3984

if.end.3984:                                      ; preds = %for.end.3983, %if.then.3951
  %2107 = load i32, i32* @maxusercount, align 4
  %sub3985 = sub nsw i32 %2107, 1
  store i32 %sub3985, i32* %i, align 4
  br label %for.cond.3986

for.cond.3986:                                    ; preds = %for.inc.3997, %if.end.3984
  %2108 = load i32, i32* %i, align 4
  %cmp3987 = icmp sge i32 %2108, 0
  br i1 %cmp3987, label %for.body.3989, label %for.end.3999

for.body.3989:                                    ; preds = %for.cond.3986
  %2109 = load i32, i32* %i, align 4
  %shr3990 = ashr i32 %2109, 3
  %idxprom3991 = sext i32 %shr3990 to i64
  %2110 = load %struct.win*, %struct.win** @fore, align 8
  %w_lio_notify3992 = getelementptr inbounds %struct.win, %struct.win* %2110, i32 0, i32 32
  %2111 = load i8*, i8** %w_lio_notify3992, align 8
  %arrayidx3993 = getelementptr inbounds i8, i8* %2111, i64 %idxprom3991
  %2112 = load i8, i8* %arrayidx3993, align 1
  %tobool3994 = icmp ne i8 %2112, 0
  br i1 %tobool3994, label %if.then.3995, label %if.end.3996

if.then.3995:                                     ; preds = %for.body.3989
  br label %for.end.3999

if.end.3996:                                      ; preds = %for.body.3989
  br label %for.inc.3997

for.inc.3997:                                     ; preds = %if.end.3996
  %2113 = load i32, i32* %i, align 4
  %dec3998 = add nsw i32 %2113, -1
  store i32 %dec3998, i32* %i, align 4
  br label %for.cond.3986

for.end.3999:                                     ; preds = %if.then.3995, %for.cond.3986
  %2114 = load i32, i32* %i, align 4
  %cmp4000 = icmp slt i32 %2114, 0
  br i1 %cmp4000, label %if.then.4002, label %if.end.4005

if.then.4002:                                     ; preds = %for.end.3999
  %2115 = load %struct.win*, %struct.win** @fore, align 8
  %w_silence4003 = getelementptr inbounds %struct.win, %struct.win* %2115, i32 0, i32 72
  store i32 0, i32* %w_silence4003, align 4
  %2116 = load %struct.win*, %struct.win** @fore, align 8
  %w_silenceev4004 = getelementptr inbounds %struct.win, %struct.win* %2116, i32 0, i32 12
  call void @evdeq(%struct.event* %w_silenceev4004)
  br label %if.end.4005

if.end.4005:                                      ; preds = %if.then.4002, %for.end.3999
  %2117 = load i32, i32* %msgok, align 4
  %tobool4006 = icmp ne i32 %2117, 0
  br i1 %tobool4006, label %if.end.4008, label %if.then.4007

if.then.4007:                                     ; preds = %if.end.4005
  br label %sw.epilog.7356

if.end.4008:                                      ; preds = %if.end.4005
  %2118 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4009 = getelementptr inbounds %struct.action, %struct.action* %2118, i32 0, i32 3
  %2119 = load i32, i32* %quiet4009, align 4
  %tobool4010 = icmp ne i32 %2119, 0
  br i1 %tobool4010, label %cond.false.4012, label %cond.true.4011

cond.true.4011:                                   ; preds = %if.end.4008
  br label %cond.end.4016

cond.false.4012:                                  ; preds = %if.end.4008
  %2120 = load i32, i32* @queryflag, align 4
  %cmp4013 = icmp sge i32 %2120, 0
  %cond4015 = select i1 %cmp4013, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4016

cond.end.4016:                                    ; preds = %cond.false.4012, %cond.true.4011
  %cond4017 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4011 ], [ %cond4015, %cond.false.4012 ]
  call void (i32, i8*, ...) %cond4017(i32 0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.164, i32 0, i32 0))
  br label %if.end.4018

if.end.4018:                                      ; preds = %cond.end.4016, %cond.end.3946
  br label %sw.epilog.7356

sw.bb.4019:                                       ; preds = %land.end
  %2121 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4020 = call i32 @ParseNum(%struct.action* %2121, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 8))
  br label %sw.epilog.7356

sw.bb.4021:                                       ; preds = %land.end
  %2122 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn4022 = getelementptr inbounds %struct.layer, %struct.layer* %2122, i32 0, i32 6
  %2123 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn4022, align 8
  %cmp4023 = icmp eq %struct.LayFuncs* %2123, @MarkLf
  br i1 %cmp4023, label %if.then.4025, label %if.end.4035

if.then.4025:                                     ; preds = %sw.bb.4021
  %2124 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4026 = getelementptr inbounds %struct.action, %struct.action* %2124, i32 0, i32 3
  %2125 = load i32, i32* %quiet4026, align 4
  %tobool4027 = icmp ne i32 %2125, 0
  br i1 %tobool4027, label %cond.false.4029, label %cond.true.4028

cond.true.4028:                                   ; preds = %if.then.4025
  br label %cond.end.4033

cond.false.4029:                                  ; preds = %if.then.4025
  %2126 = load i32, i32* @queryflag, align 4
  %cmp4030 = icmp sge i32 %2126, 0
  %cond4032 = select i1 %cmp4030, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4033

cond.end.4033:                                    ; preds = %cond.false.4029, %cond.true.4028
  %cond4034 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4028 ], [ %cond4032, %cond.false.4029 ]
  call void (i32, i8*, ...) %cond4034(i32 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.165, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.4035:                                      ; preds = %sw.bb.4021
  %2127 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4036 = call i32 @ParseNum(%struct.action* %2127, i32* %n)
  %2128 = load %struct.win*, %struct.win** @fore, align 8
  %2129 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer4037 = getelementptr inbounds %struct.win, %struct.win* %2129, i32 0, i32 3
  %l_width4038 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer4037, i32 0, i32 1
  %2130 = load i32, i32* %l_width4038, align 4
  %2131 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer4039 = getelementptr inbounds %struct.win, %struct.win* %2131, i32 0, i32 3
  %l_height4040 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer4039, i32 0, i32 2
  %2132 = load i32, i32* %l_height4040, align 4
  %2133 = load i32, i32* %n, align 4
  %call4041 = call i32 @ChangeWindowSize(%struct.win* %2128, i32 %2130, i32 %2132, i32 %2133)
  %2134 = load i32, i32* %msgok, align 4
  %tobool4042 = icmp ne i32 %2134, 0
  br i1 %tobool4042, label %if.then.4043, label %if.end.4053

if.then.4043:                                     ; preds = %if.end.4035
  %2135 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4044 = getelementptr inbounds %struct.action, %struct.action* %2135, i32 0, i32 3
  %2136 = load i32, i32* %quiet4044, align 4
  %tobool4045 = icmp ne i32 %2136, 0
  br i1 %tobool4045, label %cond.false.4047, label %cond.true.4046

cond.true.4046:                                   ; preds = %if.then.4043
  br label %cond.end.4051

cond.false.4047:                                  ; preds = %if.then.4043
  %2137 = load i32, i32* @queryflag, align 4
  %cmp4048 = icmp sge i32 %2137, 0
  %cond4050 = select i1 %cmp4048, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4051

cond.end.4051:                                    ; preds = %cond.false.4047, %cond.true.4046
  %cond4052 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4046 ], [ %cond4050, %cond.false.4047 ]
  %2138 = load %struct.win*, %struct.win** @fore, align 8
  %w_histheight = getelementptr inbounds %struct.win, %struct.win* %2138, i32 0, i32 77
  %2139 = load i32, i32* %w_histheight, align 4
  call void (i32, i8*, ...) %cond4052(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.166, i32 0, i32 0), i32 %2139)
  br label %if.end.4053

if.end.4053:                                      ; preds = %cond.end.4051, %if.end.4035
  br label %sw.epilog.7356

sw.bb.4054:                                       ; preds = %land.end
  %2140 = load i8**, i8*** %args, align 8
  %2141 = load i8*, i8** %2140, align 8
  %cmp4055 = icmp eq i8* %2141, null
  br i1 %cmp4055, label %if.then.4057, label %if.else.4067

if.then.4057:                                     ; preds = %sw.bb.4054
  %2142 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4058 = getelementptr inbounds %struct.action, %struct.action* %2142, i32 0, i32 3
  %2143 = load i32, i32* %quiet4058, align 4
  %tobool4059 = icmp ne i32 %2143, 0
  br i1 %tobool4059, label %cond.false.4061, label %cond.true.4060

cond.true.4060:                                   ; preds = %if.then.4057
  br label %cond.end.4065

cond.false.4061:                                  ; preds = %if.then.4057
  %2144 = load i32, i32* @queryflag, align 4
  %cmp4062 = icmp sge i32 %2144, 0
  %cond4064 = select i1 %cmp4062, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4065

cond.end.4065:                                    ; preds = %cond.false.4061, %cond.true.4060
  %cond4066 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4060 ], [ %cond4064, %cond.false.4061 ]
  %2145 = load i8*, i8** @SockName, align 8
  call void (i32, i8*, ...) %cond4066(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.167, i32 0, i32 0), i8* %2145)
  br label %if.end.4143

if.else.4067:                                     ; preds = %sw.bb.4054
  store i8* null, i8** %s, align 8
  %2146 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4069 = call i32 @ParseSaveStr(%struct.action* %2146, i8** %s)
  %tobool4070 = icmp ne i32 %call4069, 0
  br i1 %tobool4070, label %if.then.4071, label %if.end.4072

if.then.4071:                                     ; preds = %if.else.4067
  br label %sw.epilog.7356

if.end.4072:                                      ; preds = %if.else.4067
  %2147 = load i8*, i8** %s, align 8
  %2148 = load i8, i8* %2147, align 1
  %tobool4073 = icmp ne i8 %2148, 0
  br i1 %tobool4073, label %lor.lhs.false.4074, label %if.then.4082

lor.lhs.false.4074:                               ; preds = %if.end.4072
  %2149 = load i8*, i8** %s, align 8
  %call4075 = call i64 @strlen(i8* %2149) #8
  %2150 = load i8*, i8** @SockName, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %2150 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, ptrtoint ([0 x i8]* @SockPath to i64)
  %add4076 = add i64 %call4075, %sub.ptr.sub
  %cmp4077 = icmp ugt i64 %add4076, 4083
  br i1 %cmp4077, label %if.then.4082, label %lor.lhs.false.4079

lor.lhs.false.4079:                               ; preds = %lor.lhs.false.4074
  %2151 = load i8*, i8** %s, align 8
  %call4080 = call i8* @index(i8* %2151, i32 47) #8
  %tobool4081 = icmp ne i8* %call4080, null
  br i1 %tobool4081, label %if.then.4082, label %if.end.4092

if.then.4082:                                     ; preds = %lor.lhs.false.4079, %lor.lhs.false.4074, %if.end.4072
  %2152 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4083 = getelementptr inbounds %struct.action, %struct.action* %2152, i32 0, i32 3
  %2153 = load i32, i32* %quiet4083, align 4
  %tobool4084 = icmp ne i32 %2153, 0
  br i1 %tobool4084, label %cond.false.4086, label %cond.true.4085

cond.true.4085:                                   ; preds = %if.then.4082
  br label %cond.end.4090

cond.false.4086:                                  ; preds = %if.then.4082
  %2154 = load i32, i32* @queryflag, align 4
  %cmp4087 = icmp sge i32 %2154, 0
  %cond4089 = select i1 %cmp4087, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4090

cond.end.4090:                                    ; preds = %cond.false.4086, %cond.true.4085
  %cond4091 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4085 ], [ %cond4089, %cond.false.4086 ]
  %2155 = load i8*, i8** @rc_name, align 8
  %2156 = load i8*, i8** %s, align 8
  call void (i32, i8*, ...) %cond4091(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.168, i32 0, i32 0), i8* %2155, i8* %2156)
  %2157 = load i8*, i8** %s, align 8
  call void @free(i8* %2157) #4
  br label %sw.epilog.7356

if.end.4092:                                      ; preds = %lor.lhs.false.4079
  %arraydecay4093 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf4068, i32 0, i32 0
  %2158 = load i8*, i8** @SockName, align 8
  %sub.ptr.lhs.cast4094 = ptrtoint i8* %2158 to i64
  %sub.ptr.sub4095 = sub i64 %sub.ptr.lhs.cast4094, ptrtoint ([0 x i8]* @SockPath to i64)
  %call4096 = call i8* @strncpy(i8* %arraydecay4093, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @SockPath, i32 0, i32 0), i64 %sub.ptr.sub4095) #4
  %arraydecay4097 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf4068, i32 0, i32 0
  %2159 = load i8*, i8** @SockName, align 8
  %sub.ptr.lhs.cast4098 = ptrtoint i8* %2159 to i64
  %sub.ptr.sub4099 = sub i64 %sub.ptr.lhs.cast4098, ptrtoint ([0 x i8]* @SockPath to i64)
  %add.ptr4100 = getelementptr inbounds i8, i8* %arraydecay4097, i64 %sub.ptr.sub4099
  %call4101 = call i32 @getpid() #4
  %2160 = load i8*, i8** %s, align 8
  %call4102 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr4100, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i32 0, i32 0), i32 %call4101, i8* %2160) #4
  %2161 = load i8*, i8** %s, align 8
  call void @free(i8* %2161) #4
  %arraydecay4103 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf4068, i32 0, i32 0
  %call4104 = call i32 @access(i8* %arraydecay4103, i32 0) #4
  %cmp4105 = icmp eq i32 %call4104, 0
  br i1 %cmp4105, label %if.then.4111, label %lor.lhs.false.4107

lor.lhs.false.4107:                               ; preds = %if.end.4092
  %call4108 = call i32* @__errno_location() #9
  %2162 = load i32, i32* %call4108, align 4
  %cmp4109 = icmp ne i32 %2162, 2
  br i1 %cmp4109, label %if.then.4111, label %if.end.4122

if.then.4111:                                     ; preds = %lor.lhs.false.4107, %if.end.4092
  %2163 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4112 = getelementptr inbounds %struct.action, %struct.action* %2163, i32 0, i32 3
  %2164 = load i32, i32* %quiet4112, align 4
  %tobool4113 = icmp ne i32 %2164, 0
  br i1 %tobool4113, label %cond.false.4115, label %cond.true.4114

cond.true.4114:                                   ; preds = %if.then.4111
  br label %cond.end.4119

cond.false.4115:                                  ; preds = %if.then.4111
  %2165 = load i32, i32* @queryflag, align 4
  %cmp4116 = icmp sge i32 %2165, 0
  %cond4118 = select i1 %cmp4116, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4119

cond.end.4119:                                    ; preds = %cond.false.4115, %cond.true.4114
  %cond4120 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4114 ], [ %cond4118, %cond.false.4115 ]
  %2166 = load i8*, i8** @rc_name, align 8
  %arraydecay4121 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf4068, i32 0, i32 0
  call void (i32, i8*, ...) %cond4120(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.170, i32 0, i32 0), i8* %2166, i8* %arraydecay4121)
  br label %sw.epilog.7356

if.end.4122:                                      ; preds = %lor.lhs.false.4107
  %arraydecay4123 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf4068, i32 0, i32 0
  %call4124 = call i32 @rename(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @SockPath, i32 0, i32 0), i8* %arraydecay4123) #4
  %tobool4125 = icmp ne i32 %call4124, 0
  br i1 %tobool4125, label %if.then.4126, label %if.end.4138

if.then.4126:                                     ; preds = %if.end.4122
  %2167 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4127 = getelementptr inbounds %struct.action, %struct.action* %2167, i32 0, i32 3
  %2168 = load i32, i32* %quiet4127, align 4
  %tobool4128 = icmp ne i32 %2168, 0
  br i1 %tobool4128, label %cond.false.4130, label %cond.true.4129

cond.true.4129:                                   ; preds = %if.then.4126
  br label %cond.end.4134

cond.false.4130:                                  ; preds = %if.then.4126
  %2169 = load i32, i32* @queryflag, align 4
  %cmp4131 = icmp sge i32 %2169, 0
  %cond4133 = select i1 %cmp4131, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4134

cond.end.4134:                                    ; preds = %cond.false.4130, %cond.true.4129
  %cond4135 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4129 ], [ %cond4133, %cond.false.4130 ]
  %call4136 = call i32* @__errno_location() #9
  %2170 = load i32, i32* %call4136, align 4
  %2171 = load i8*, i8** @rc_name, align 8
  %arraydecay4137 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf4068, i32 0, i32 0
  call void (i32, i8*, ...) %cond4135(i32 %2170, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.171, i32 0, i32 0), i8* %2171, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @SockPath, i32 0, i32 0), i8* %arraydecay4137)
  br label %sw.epilog.7356

if.end.4138:                                      ; preds = %if.end.4122
  br label %do.body.4139

do.body.4139:                                     ; preds = %if.end.4138
  br label %do.end.4140

do.end.4140:                                      ; preds = %do.body.4139
  %arraydecay4141 = getelementptr inbounds [4096 x i8], [4096 x i8]* %buf4068, i32 0, i32 0
  %call4142 = call i8* @strcpy(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @SockPath, i32 0, i32 0), i8* %arraydecay4141) #4
  call void @MakeNewEnv()
  call void @WindowChanged(%struct.win* null, i32 83)
  br label %if.end.4143

if.end.4143:                                      ; preds = %do.end.4140, %cond.end.4065
  br label %sw.epilog.7356

sw.bb.4144:                                       ; preds = %land.end
  %2172 = load i8**, i8*** %args, align 8
  %arrayidx4145 = getelementptr inbounds i8*, i8** %2172, i64 0
  %2173 = load i8*, i8** %arrayidx4145, align 8
  %tobool4146 = icmp ne i8* %2173, null
  br i1 %tobool4146, label %lor.lhs.false.4147, label %if.then.4150

lor.lhs.false.4147:                               ; preds = %sw.bb.4144
  %2174 = load i8**, i8*** %args, align 8
  %arrayidx4148 = getelementptr inbounds i8*, i8** %2174, i64 1
  %2175 = load i8*, i8** %arrayidx4148, align 8
  %tobool4149 = icmp ne i8* %2175, null
  br i1 %tobool4149, label %if.else.4154, label %if.then.4150

if.then.4150:                                     ; preds = %lor.lhs.false.4147, %sw.bb.4144
  br label %do.body.4151

do.body.4151:                                     ; preds = %if.then.4150
  br label %do.end.4152

do.end.4152:                                      ; preds = %do.body.4151
  %2176 = load i8**, i8*** %args, align 8
  %arrayidx4153 = getelementptr inbounds i8*, i8** %2176, i64 0
  %2177 = load i8*, i8** %arrayidx4153, align 8
  call void @InputSetenv(i8* %2177)
  br label %if.end.4157

if.else.4154:                                     ; preds = %lor.lhs.false.4147
  %2178 = load i8**, i8*** %args, align 8
  %arrayidx4155 = getelementptr inbounds i8*, i8** %2178, i64 0
  %2179 = load i8*, i8** %arrayidx4155, align 8
  %2180 = load i8**, i8*** %args, align 8
  %arrayidx4156 = getelementptr inbounds i8*, i8** %2180, i64 1
  %2181 = load i8*, i8** %arrayidx4156, align 8
  call void @xsetenv(i8* %2179, i8* %2181)
  call void @MakeNewEnv()
  br label %if.end.4157

if.end.4157:                                      ; preds = %if.else.4154, %do.end.4152
  br label %sw.epilog.7356

sw.bb.4158:                                       ; preds = %land.end
  %2182 = load i8**, i8*** %args, align 8
  %2183 = load i8*, i8** %2182, align 8
  %call4159 = call i32 @unsetenv(i8* %2183) #4
  call void @MakeNewEnv()
  br label %sw.epilog.7356

sw.bb.4160:                                       ; preds = %land.end
  %2184 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4161 = call i32 @ParseNum(%struct.action* %2184, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 14))
  br label %sw.epilog.7356

sw.bb.4162:                                       ; preds = %land.end
  %2185 = load i8**, i8*** %args, align 8
  %2186 = load i8*, i8** %2185, align 8
  %cmp4163 = icmp eq i8* %2186, null
  br i1 %cmp4163, label %if.then.4165, label %if.else.4179

if.then.4165:                                     ; preds = %sw.bb.4162
  %2187 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4166 = getelementptr inbounds %struct.action, %struct.action* %2187, i32 0, i32 3
  %2188 = load i32, i32* %quiet4166, align 4
  %tobool4167 = icmp ne i32 %2188, 0
  br i1 %tobool4167, label %cond.false.4169, label %cond.true.4168

cond.true.4168:                                   ; preds = %if.then.4165
  br label %cond.end.4173

cond.false.4169:                                  ; preds = %if.then.4165
  %2189 = load i32, i32* @queryflag, align 4
  %cmp4170 = icmp sge i32 %2189, 0
  %cond4172 = select i1 %cmp4170, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4173

cond.end.4173:                                    ; preds = %cond.false.4169, %cond.true.4168
  %cond4174 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4168 ], [ %cond4172, %cond.false.4169 ]
  %2190 = load %struct.win*, %struct.win** @fore, align 8
  %w_slowpaste = getelementptr inbounds %struct.win, %struct.win* %2190, i32 0, i32 76
  %2191 = load i32, i32* %w_slowpaste, align 4
  %tobool4175 = icmp ne i32 %2191, 0
  %cond4176 = select i1 %tobool4175, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.173, i32 0, i32 0)
  %2192 = load %struct.win*, %struct.win** @fore, align 8
  %w_number4177 = getelementptr inbounds %struct.win, %struct.win* %2192, i32 0, i32 9
  %2193 = load i32, i32* %w_number4177, align 4
  %2194 = load %struct.win*, %struct.win** @fore, align 8
  %w_slowpaste4178 = getelementptr inbounds %struct.win, %struct.win* %2194, i32 0, i32 76
  %2195 = load i32, i32* %w_slowpaste4178, align 4
  call void (i32, i8*, ...) %cond4174(i32 0, i8* %cond4176, i32 %2193, i32 %2195)
  br label %if.end.4202

if.else.4179:                                     ; preds = %sw.bb.4162
  %2196 = load %struct.action*, %struct.action** %act.addr, align 8
  %2197 = load %struct.win*, %struct.win** @fore, align 8
  %w_slowpaste4180 = getelementptr inbounds %struct.win, %struct.win* %2197, i32 0, i32 76
  %call4181 = call i32 @ParseNum(%struct.action* %2196, i32* %w_slowpaste4180)
  %cmp4182 = icmp eq i32 %call4181, 0
  br i1 %cmp4182, label %land.lhs.true.4184, label %if.end.4201

land.lhs.true.4184:                               ; preds = %if.else.4179
  %2198 = load i32, i32* %msgok, align 4
  %tobool4185 = icmp ne i32 %2198, 0
  br i1 %tobool4185, label %if.then.4186, label %if.end.4201

if.then.4186:                                     ; preds = %land.lhs.true.4184
  %2199 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4187 = getelementptr inbounds %struct.action, %struct.action* %2199, i32 0, i32 3
  %2200 = load i32, i32* %quiet4187, align 4
  %tobool4188 = icmp ne i32 %2200, 0
  br i1 %tobool4188, label %cond.false.4190, label %cond.true.4189

cond.true.4189:                                   ; preds = %if.then.4186
  br label %cond.end.4194

cond.false.4190:                                  ; preds = %if.then.4186
  %2201 = load i32, i32* @queryflag, align 4
  %cmp4191 = icmp sge i32 %2201, 0
  %cond4193 = select i1 %cmp4191, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4194

cond.end.4194:                                    ; preds = %cond.false.4190, %cond.true.4189
  %cond4195 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4189 ], [ %cond4193, %cond.false.4190 ]
  %2202 = load %struct.win*, %struct.win** @fore, align 8
  %w_slowpaste4196 = getelementptr inbounds %struct.win, %struct.win* %2202, i32 0, i32 76
  %2203 = load i32, i32* %w_slowpaste4196, align 4
  %tobool4197 = icmp ne i32 %2203, 0
  %cond4198 = select i1 %tobool4197, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i32 0, i32 0)
  %2204 = load %struct.win*, %struct.win** @fore, align 8
  %w_number4199 = getelementptr inbounds %struct.win, %struct.win* %2204, i32 0, i32 9
  %2205 = load i32, i32* %w_number4199, align 4
  %2206 = load %struct.win*, %struct.win** @fore, align 8
  %w_slowpaste4200 = getelementptr inbounds %struct.win, %struct.win* %2206, i32 0, i32 76
  %2207 = load i32, i32* %w_slowpaste4200, align 4
  call void (i32, i8*, ...) %cond4195(i32 0, i8* %cond4198, i32 %2205, i32 %2207)
  br label %if.end.4201

if.end.4201:                                      ; preds = %cond.end.4194, %land.lhs.true.4184, %if.else.4179
  br label %if.end.4202

if.end.4202:                                      ; preds = %if.end.4201, %cond.end.4173
  br label %sw.epilog.7356

sw.bb.4203:                                       ; preds = %land.end
  %2208 = load i8**, i8*** %args, align 8
  %2209 = load i8*, i8** %2208, align 8
  %2210 = load i32*, i32** %argl, align 8
  %2211 = load i32, i32* %2210, align 4
  %call4204 = call i32 @CompileKeys(i8* %2209, i32 %2211, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @mark_key_tab, i32 0, i32 0))
  %tobool4205 = icmp ne i32 %call4204, 0
  br i1 %tobool4205, label %if.then.4206, label %if.end.4216

if.then.4206:                                     ; preds = %sw.bb.4203
  %2212 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4207 = getelementptr inbounds %struct.action, %struct.action* %2212, i32 0, i32 3
  %2213 = load i32, i32* %quiet4207, align 4
  %tobool4208 = icmp ne i32 %2213, 0
  br i1 %tobool4208, label %cond.false.4210, label %cond.true.4209

cond.true.4209:                                   ; preds = %if.then.4206
  br label %cond.end.4214

cond.false.4210:                                  ; preds = %if.then.4206
  %2214 = load i32, i32* @queryflag, align 4
  %cmp4211 = icmp sge i32 %2214, 0
  %cond4213 = select i1 %cmp4211, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4214

cond.end.4214:                                    ; preds = %cond.false.4210, %cond.true.4209
  %cond4215 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4209 ], [ %cond4213, %cond.false.4210 ]
  %2215 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond4215(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.176, i32 0, i32 0), i8* %2215)
  br label %sw.epilog.7356

if.end.4216:                                      ; preds = %sw.bb.4203
  br label %do.body.4217

do.body.4217:                                     ; preds = %if.end.4216
  br label %do.end.4218

do.end.4218:                                      ; preds = %do.body.4217
  br label %sw.epilog.7356

sw.bb.4219:                                       ; preds = %land.end
  %2216 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4220 = call i32 @ParseSwitch(%struct.action* %2216, i32* @pastefont)
  %cmp4221 = icmp eq i32 %call4220, 0
  br i1 %cmp4221, label %land.lhs.true.4223, label %if.end.4237

land.lhs.true.4223:                               ; preds = %sw.bb.4219
  %2217 = load i32, i32* %msgok, align 4
  %tobool4224 = icmp ne i32 %2217, 0
  br i1 %tobool4224, label %if.then.4225, label %if.end.4237

if.then.4225:                                     ; preds = %land.lhs.true.4223
  %2218 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4226 = getelementptr inbounds %struct.action, %struct.action* %2218, i32 0, i32 3
  %2219 = load i32, i32* %quiet4226, align 4
  %tobool4227 = icmp ne i32 %2219, 0
  br i1 %tobool4227, label %cond.false.4229, label %cond.true.4228

cond.true.4228:                                   ; preds = %if.then.4225
  br label %cond.end.4233

cond.false.4229:                                  ; preds = %if.then.4225
  %2220 = load i32, i32* @queryflag, align 4
  %cmp4230 = icmp sge i32 %2220, 0
  %cond4232 = select i1 %cmp4230, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4233

cond.end.4233:                                    ; preds = %cond.false.4229, %cond.true.4228
  %cond4234 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4228 ], [ %cond4232, %cond.false.4229 ]
  %2221 = load i32, i32* @pastefont, align 4
  %tobool4235 = icmp ne i32 %2221, 0
  %cond4236 = select i1 %tobool4235, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond4234(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.177, i32 0, i32 0), i8* %cond4236)
  br label %if.end.4237

if.end.4237:                                      ; preds = %cond.end.4233, %land.lhs.true.4223, %sw.bb.4219
  br label %sw.epilog.7356

sw.bb.4238:                                       ; preds = %land.end
  %2222 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4239 = call i32 @ParseSwitch(%struct.action* %2222, i32* @join_with_cr)
  br label %sw.epilog.7356

sw.bb.4240:                                       ; preds = %land.end
  %2223 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4241 = call i32 @ParseSwitch(%struct.action* %2223, i32* @compacthist)
  %cmp4242 = icmp eq i32 %call4241, 0
  br i1 %cmp4242, label %land.lhs.true.4244, label %if.end.4258

land.lhs.true.4244:                               ; preds = %sw.bb.4240
  %2224 = load i32, i32* %msgok, align 4
  %tobool4245 = icmp ne i32 %2224, 0
  br i1 %tobool4245, label %if.then.4246, label %if.end.4258

if.then.4246:                                     ; preds = %land.lhs.true.4244
  %2225 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4247 = getelementptr inbounds %struct.action, %struct.action* %2225, i32 0, i32 3
  %2226 = load i32, i32* %quiet4247, align 4
  %tobool4248 = icmp ne i32 %2226, 0
  br i1 %tobool4248, label %cond.false.4250, label %cond.true.4249

cond.true.4249:                                   ; preds = %if.then.4246
  br label %cond.end.4254

cond.false.4250:                                  ; preds = %if.then.4246
  %2227 = load i32, i32* @queryflag, align 4
  %cmp4251 = icmp sge i32 %2227, 0
  %cond4253 = select i1 %cmp4251, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4254

cond.end.4254:                                    ; preds = %cond.false.4250, %cond.true.4249
  %cond4255 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4249 ], [ %cond4253, %cond.false.4250 ]
  %2228 = load i32, i32* @compacthist, align 4
  %tobool4256 = icmp ne i32 %2228, 0
  %cond4257 = select i1 %tobool4256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond4255(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.178, i32 0, i32 0), i8* %cond4257)
  br label %if.end.4258

if.end.4258:                                      ; preds = %cond.end.4254, %land.lhs.true.4244, %sw.bb.4240
  br label %sw.epilog.7356

sw.bb.4259:                                       ; preds = %land.end
  %2229 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4260 = call i32 @ParseOnOff(%struct.action* %2229, i32* @nethackflag)
  br label %sw.epilog.7356

sw.bb.4261:                                       ; preds = %land.end
  %2230 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4262 = call i32 @ParseOnOff(%struct.action* %2230, i32* @hardcopy_append)
  br label %sw.epilog.7356

sw.bb.4263:                                       ; preds = %land.end
  %2231 = load i8**, i8*** %args, align 8
  %2232 = load i8*, i8** %2231, align 8
  %cmp4264 = icmp eq i8* %2232, null
  br i1 %cmp4264, label %if.then.4266, label %if.end.4280

if.then.4266:                                     ; preds = %sw.bb.4263
  %arraydecay4268 = getelementptr inbounds [256 x i8], [256 x i8]* %buf4267, i32 0, i32 0
  %2233 = load i8*, i8** @VisualBellString, align 8
  %call4269 = call i32 @AddXChars(i8* %arraydecay4268, i32 256, i8* %2233)
  %2234 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4270 = getelementptr inbounds %struct.action, %struct.action* %2234, i32 0, i32 3
  %2235 = load i32, i32* %quiet4270, align 4
  %tobool4271 = icmp ne i32 %2235, 0
  br i1 %tobool4271, label %cond.false.4273, label %cond.true.4272

cond.true.4272:                                   ; preds = %if.then.4266
  br label %cond.end.4277

cond.false.4273:                                  ; preds = %if.then.4266
  %2236 = load i32, i32* @queryflag, align 4
  %cmp4274 = icmp sge i32 %2236, 0
  %cond4276 = select i1 %cmp4274, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4277

cond.end.4277:                                    ; preds = %cond.false.4273, %cond.true.4272
  %cond4278 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4272 ], [ %cond4276, %cond.false.4273 ]
  %arraydecay4279 = getelementptr inbounds [256 x i8], [256 x i8]* %buf4267, i32 0, i32 0
  call void (i32, i8*, ...) %cond4278(i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.179, i32 0, i32 0), i8* %arraydecay4279)
  br label %sw.epilog.7356

if.end.4280:                                      ; preds = %sw.bb.4263
  %2237 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4281 = call i32 @ParseSaveStr(%struct.action* %2237, i8** @VisualBellString)
  br label %do.body.4282

do.body.4282:                                     ; preds = %if.end.4280
  br label %do.end.4283

do.end.4283:                                      ; preds = %do.body.4282
  br label %sw.epilog.7356

sw.bb.4284:                                       ; preds = %land.end
  %2238 = load %struct.action*, %struct.action** %act.addr, align 8
  %2239 = load i8**, i8*** %args, align 8
  %2240 = load i8*, i8** %2239, align 8
  %call4285 = call i32 @ParseBase(%struct.action* %2238, i8* %2240, i32* %n, i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i32 0, i32 0))
  %tobool4286 = icmp ne i32 %call4285, 0
  br i1 %tobool4286, label %if.then.4287, label %if.end.4288

if.then.4287:                                     ; preds = %sw.bb.4284
  br label %sw.epilog.7356

if.end.4288:                                      ; preds = %sw.bb.4284
  %2241 = load i32, i32* %n, align 4
  %cmp4289 = icmp slt i32 %2241, 0
  br i1 %cmp4289, label %if.then.4294, label %lor.lhs.false.4291

lor.lhs.false.4291:                               ; preds = %if.end.4288
  %2242 = load i32, i32* %n, align 4
  %cmp4292 = icmp sgt i32 %2242, 511
  br i1 %cmp4292, label %if.then.4294, label %if.end.4304

if.then.4294:                                     ; preds = %lor.lhs.false.4291, %if.end.4288
  %2243 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4295 = getelementptr inbounds %struct.action, %struct.action* %2243, i32 0, i32 3
  %2244 = load i32, i32* %quiet4295, align 4
  %tobool4296 = icmp ne i32 %2244, 0
  br i1 %tobool4296, label %cond.false.4298, label %cond.true.4297

cond.true.4297:                                   ; preds = %if.then.4294
  br label %cond.end.4302

cond.false.4298:                                  ; preds = %if.then.4294
  %2245 = load i32, i32* @queryflag, align 4
  %cmp4299 = icmp sge i32 %2245, 0
  %cond4301 = select i1 %cmp4299, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4302

cond.end.4302:                                    ; preds = %cond.false.4298, %cond.true.4297
  %cond4303 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4297 ], [ %cond4301, %cond.false.4298 ]
  %2246 = load i8*, i8** @rc_name, align 8
  %2247 = load i32, i32* %n, align 4
  call void (i32, i8*, ...) %cond4303(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.181, i32 0, i32 0), i8* %2246, i32 %2247)
  br label %sw.epilog.7356

if.end.4304:                                      ; preds = %lor.lhs.false.4291
  %2248 = load i32, i32* %n, align 4
  store i32 %2248, i32* @TtyMode, align 4
  %2249 = load i32, i32* %msgok, align 4
  %tobool4305 = icmp ne i32 %2249, 0
  br i1 %tobool4305, label %if.then.4306, label %if.end.4316

if.then.4306:                                     ; preds = %if.end.4304
  %2250 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4307 = getelementptr inbounds %struct.action, %struct.action* %2250, i32 0, i32 3
  %2251 = load i32, i32* %quiet4307, align 4
  %tobool4308 = icmp ne i32 %2251, 0
  br i1 %tobool4308, label %cond.false.4310, label %cond.true.4309

cond.true.4309:                                   ; preds = %if.then.4306
  br label %cond.end.4314

cond.false.4310:                                  ; preds = %if.then.4306
  %2252 = load i32, i32* @queryflag, align 4
  %cmp4311 = icmp sge i32 %2252, 0
  %cond4313 = select i1 %cmp4311, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4314

cond.end.4314:                                    ; preds = %cond.false.4310, %cond.true.4309
  %cond4315 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4309 ], [ %cond4313, %cond.false.4310 ]
  %2253 = load i32, i32* @TtyMode, align 4
  call void (i32, i8*, ...) %cond4315(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.182, i32 0, i32 0), i32 %2253)
  br label %if.end.4316

if.end.4316:                                      ; preds = %cond.end.4314, %if.end.4304
  br label %sw.epilog.7356

sw.bb.4317:                                       ; preds = %land.end
  %2254 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4318 = call i32 @ParseOnOff(%struct.action* %2254, i32* @auto_detach)
  br label %sw.epilog.7356

sw.bb.4319:                                       ; preds = %land.end
  %2255 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4320 = call i32 @ParseOnOff(%struct.action* %2255, i32* @default_startup)
  br label %sw.epilog.7356

sw.bb.4321:                                       ; preds = %land.end
  %2256 = load i8**, i8*** %args, align 8
  %2257 = load i8*, i8** %2256, align 8
  %tobool4322 = icmp ne i8* %2257, null
  br i1 %tobool4322, label %if.then.4323, label %if.else.4354

if.then.4323:                                     ; preds = %sw.bb.4321
  %2258 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_password = getelementptr inbounds %struct.acluser, %struct.acluser* %2258, i32 0, i32 2
  %2259 = load i8*, i8** %u_password, align 8
  %2260 = load i8, i8* %2259, align 1
  %conv4324 = sext i8 %2260 to i32
  %tobool4325 = icmp ne i32 %conv4324, 0
  %cond4326 = select i1 %tobool4325, i32 1, i32 0
  store i32 %cond4326, i32* %n, align 4
  %2261 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_password4327 = getelementptr inbounds %struct.acluser, %struct.acluser* %2261, i32 0, i32 2
  %2262 = load i8*, i8** %u_password4327, align 8
  %cmp4328 = icmp ne i8* %2262, getelementptr inbounds ([1 x i8], [1 x i8]* @NullStr, i32 0, i32 0)
  br i1 %cmp4328, label %if.then.4330, label %if.end.4332

if.then.4330:                                     ; preds = %if.then.4323
  %2263 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_password4331 = getelementptr inbounds %struct.acluser, %struct.acluser* %2263, i32 0, i32 2
  %2264 = load i8*, i8** %u_password4331, align 8
  call void @free(i8* %2264) #4
  br label %if.end.4332

if.end.4332:                                      ; preds = %if.then.4330, %if.then.4323
  %2265 = load i8**, i8*** %args, align 8
  %2266 = load i8*, i8** %2265, align 8
  %call4333 = call i8* @SaveStr(i8* %2266)
  %2267 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_password4334 = getelementptr inbounds %struct.acluser, %struct.acluser* %2267, i32 0, i32 2
  store i8* %call4333, i8** %u_password4334, align 8
  %2268 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_password4335 = getelementptr inbounds %struct.acluser, %struct.acluser* %2268, i32 0, i32 2
  %2269 = load i8*, i8** %u_password4335, align 8
  %call4336 = call i32 @strcmp(i8* %2269, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i32 0, i32 0)) #8
  %tobool4337 = icmp ne i32 %call4336, 0
  br i1 %tobool4337, label %if.end.4353, label %if.then.4338

if.then.4338:                                     ; preds = %if.end.4332
  %2270 = load i32, i32* %n, align 4
  %tobool4339 = icmp ne i32 %2270, 0
  br i1 %tobool4339, label %if.then.4340, label %if.end.4350

if.then.4340:                                     ; preds = %if.then.4338
  %2271 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4341 = getelementptr inbounds %struct.action, %struct.action* %2271, i32 0, i32 3
  %2272 = load i32, i32* %quiet4341, align 4
  %tobool4342 = icmp ne i32 %2272, 0
  br i1 %tobool4342, label %cond.false.4344, label %cond.true.4343

cond.true.4343:                                   ; preds = %if.then.4340
  br label %cond.end.4348

cond.false.4344:                                  ; preds = %if.then.4340
  %2273 = load i32, i32* @queryflag, align 4
  %cmp4345 = icmp sge i32 %2273, 0
  %cond4347 = select i1 %cmp4345, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4348

cond.end.4348:                                    ; preds = %cond.false.4344, %cond.true.4343
  %cond4349 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4343 ], [ %cond4347, %cond.false.4344 ]
  call void (i32, i8*, ...) %cond4349(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.184, i32 0, i32 0))
  br label %if.end.4350

if.end.4350:                                      ; preds = %cond.end.4348, %if.then.4338
  %2274 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_password4351 = getelementptr inbounds %struct.acluser, %struct.acluser* %2274, i32 0, i32 2
  %2275 = load i8*, i8** %u_password4351, align 8
  call void @free(i8* %2275) #4
  %2276 = load %struct.acluser*, %struct.acluser** %user, align 8
  %u_password4352 = getelementptr inbounds %struct.acluser, %struct.acluser* %2276, i32 0, i32 2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @NullStr, i32 0, i32 0), i8** %u_password4352, align 8
  br label %if.end.4353

if.end.4353:                                      ; preds = %if.end.4350, %if.end.4332
  br label %if.end.4373

if.else.4354:                                     ; preds = %sw.bb.4321
  %2277 = load %struct.win*, %struct.win** @fore, align 8
  %tobool4355 = icmp ne %struct.win* %2277, null
  br i1 %tobool4355, label %if.end.4366, label %if.then.4356

if.then.4356:                                     ; preds = %if.else.4354
  %2278 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4357 = getelementptr inbounds %struct.action, %struct.action* %2278, i32 0, i32 3
  %2279 = load i32, i32* %quiet4357, align 4
  %tobool4358 = icmp ne i32 %2279, 0
  br i1 %tobool4358, label %cond.false.4360, label %cond.true.4359

cond.true.4359:                                   ; preds = %if.then.4356
  br label %cond.end.4364

cond.false.4360:                                  ; preds = %if.then.4356
  %2280 = load i32, i32* @queryflag, align 4
  %cmp4361 = icmp sge i32 %2280, 0
  %cond4363 = select i1 %cmp4361, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4364

cond.end.4364:                                    ; preds = %cond.false.4360, %cond.true.4359
  %cond4365 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4359 ], [ %cond4363, %cond.false.4360 ]
  %2281 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond4365(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.185, i32 0, i32 0), i8* %2281)
  br label %sw.epilog.7356

if.end.4366:                                      ; preds = %if.else.4354
  %2282 = load %struct.display*, %struct.display** @display, align 8
  %tobool4367 = icmp ne %struct.display* %2282, null
  br i1 %tobool4367, label %cond.true.4368, label %cond.false.4370

cond.true.4368:                                   ; preds = %if.end.4366
  %2283 = load %struct.display*, %struct.display** @display, align 8
  %d_user4369 = getelementptr inbounds %struct.display, %struct.display* %2283, i32 0, i32 1
  %2284 = load %struct.acluser*, %struct.acluser** %d_user4369, align 8
  %2285 = bitcast %struct.acluser* %2284 to i8*
  br label %cond.end.4371

cond.false.4370:                                  ; preds = %if.end.4366
  %2286 = load %struct.acluser*, %struct.acluser** @users, align 8
  %2287 = bitcast %struct.acluser* %2286 to i8*
  br label %cond.end.4371

cond.end.4371:                                    ; preds = %cond.false.4370, %cond.true.4368
  %cond4372 = phi i8* [ %2285, %cond.true.4368 ], [ %2287, %cond.false.4370 ]
  call void @Input(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.186, i32 0, i32 0), i32 100, i32 1, void (i8*, i32, i8*)* @pass1, i8* %cond4372, i32 0)
  br label %if.end.4373

if.end.4373:                                      ; preds = %cond.end.4371, %if.end.4353
  br label %sw.epilog.7356

sw.bb.4374:                                       ; preds = %land.end
  store %struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0), %struct.action** %ktabp4375, align 8
  store i32 0, i32* %kflag, align 4
  br label %for.cond.4376

for.cond.4376:                                    ; preds = %if.end.4404, %sw.bb.4374
  %2288 = load i32, i32* %argc, align 4
  %cmp4377 = icmp sgt i32 %2288, 2
  br i1 %cmp4377, label %land.lhs.true.4379, label %if.else.4392

land.lhs.true.4379:                               ; preds = %for.cond.4376
  %2289 = load i8**, i8*** %args, align 8
  %2290 = load i8*, i8** %2289, align 8
  %call4380 = call i32 @strcmp(i8* %2290, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0)) #8
  %tobool4381 = icmp ne i32 %call4380, 0
  br i1 %tobool4381, label %if.else.4392, label %if.then.4382

if.then.4382:                                     ; preds = %land.lhs.true.4379
  %2291 = load i8**, i8*** %args, align 8
  %arrayidx4383 = getelementptr inbounds i8*, i8** %2291, i64 1
  %2292 = load i8*, i8** %arrayidx4383, align 8
  %call4384 = call %struct.action* @FindKtab(i8* %2292, i32 1)
  store %struct.action* %call4384, %struct.action** %ktabp4375, align 8
  %2293 = load %struct.action*, %struct.action** %ktabp4375, align 8
  %cmp4385 = icmp eq %struct.action* %2293, null
  br i1 %cmp4385, label %if.then.4387, label %if.end.4388

if.then.4387:                                     ; preds = %if.then.4382
  br label %for.end.4405

if.end.4388:                                      ; preds = %if.then.4382
  %2294 = load i8**, i8*** %args, align 8
  %add.ptr4389 = getelementptr inbounds i8*, i8** %2294, i64 2
  store i8** %add.ptr4389, i8*** %args, align 8
  %2295 = load i32*, i32** %argl, align 8
  %add.ptr4390 = getelementptr inbounds i32, i32* %2295, i64 2
  store i32* %add.ptr4390, i32** %argl, align 8
  %2296 = load i32, i32* %argc, align 4
  %sub4391 = sub nsw i32 %2296, 2
  store i32 %sub4391, i32* %argc, align 4
  br label %if.end.4404

if.else.4392:                                     ; preds = %land.lhs.true.4379, %for.cond.4376
  %2297 = load i32, i32* %argc, align 4
  %cmp4393 = icmp sgt i32 %2297, 1
  br i1 %cmp4393, label %land.lhs.true.4395, label %if.else.4402

land.lhs.true.4395:                               ; preds = %if.else.4392
  %2298 = load i8**, i8*** %args, align 8
  %2299 = load i8*, i8** %2298, align 8
  %call4396 = call i32 @strcmp(i8* %2299, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0)) #8
  %tobool4397 = icmp ne i32 %call4396, 0
  br i1 %tobool4397, label %if.else.4402, label %if.then.4398

if.then.4398:                                     ; preds = %land.lhs.true.4395
  store i32 1, i32* %kflag, align 4
  %2300 = load i8**, i8*** %args, align 8
  %incdec.ptr4399 = getelementptr inbounds i8*, i8** %2300, i32 1
  store i8** %incdec.ptr4399, i8*** %args, align 8
  %2301 = load i32*, i32** %argl, align 8
  %incdec.ptr4400 = getelementptr inbounds i32, i32* %2301, i32 1
  store i32* %incdec.ptr4400, i32** %argl, align 8
  %2302 = load i32, i32* %argc, align 4
  %dec4401 = add nsw i32 %2302, -1
  store i32 %dec4401, i32* %argc, align 4
  br label %if.end.4403

if.else.4402:                                     ; preds = %land.lhs.true.4395, %if.else.4392
  br label %for.end.4405

if.end.4403:                                      ; preds = %if.then.4398
  br label %if.end.4404

if.end.4404:                                      ; preds = %if.end.4403, %if.end.4388
  br label %for.cond.4376

for.end.4405:                                     ; preds = %if.else.4402, %if.then.4387
  %2303 = load i32, i32* %kflag, align 4
  %tobool4406 = icmp ne i32 %2303, 0
  br i1 %tobool4406, label %if.then.4407, label %if.else.4438

if.then.4407:                                     ; preds = %for.end.4405
  store i32 0, i32* %n, align 4
  br label %for.cond.4408

for.cond.4408:                                    ; preds = %for.inc.4421, %if.then.4407
  %2304 = load i32, i32* %n, align 4
  %cmp4409 = icmp slt i32 %2304, 82
  br i1 %cmp4409, label %for.body.4411, label %for.end.4423

for.body.4411:                                    ; preds = %for.cond.4408
  %2305 = load i32, i32* %n, align 4
  %add4412 = add nsw i32 %2305, 106
  %idxprom4413 = sext i32 %add4412 to i64
  %arrayidx4414 = getelementptr inbounds [0 x %struct.term], [0 x %struct.term]* @term, i32 0, i64 %idxprom4413
  %tcname4415 = getelementptr inbounds %struct.term, %struct.term* %arrayidx4414, i32 0, i32 0
  %2306 = load i8*, i8** %tcname4415, align 8
  %2307 = load i8**, i8*** %args, align 8
  %2308 = load i8*, i8** %2307, align 8
  %call4416 = call i32 @strcmp(i8* %2306, i8* %2308) #8
  %cmp4417 = icmp eq i32 %call4416, 0
  br i1 %cmp4417, label %if.then.4419, label %if.end.4420

if.then.4419:                                     ; preds = %for.body.4411
  br label %for.end.4423

if.end.4420:                                      ; preds = %for.body.4411
  br label %for.inc.4421

for.inc.4421:                                     ; preds = %if.end.4420
  %2309 = load i32, i32* %n, align 4
  %inc4422 = add nsw i32 %2309, 1
  store i32 %inc4422, i32* %n, align 4
  br label %for.cond.4408

for.end.4423:                                     ; preds = %if.then.4419, %for.cond.4408
  %2310 = load i32, i32* %n, align 4
  %cmp4424 = icmp eq i32 %2310, 82
  br i1 %cmp4424, label %if.then.4426, label %if.end.4436

if.then.4426:                                     ; preds = %for.end.4423
  %2311 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4427 = getelementptr inbounds %struct.action, %struct.action* %2311, i32 0, i32 3
  %2312 = load i32, i32* %quiet4427, align 4
  %tobool4428 = icmp ne i32 %2312, 0
  br i1 %tobool4428, label %cond.false.4430, label %cond.true.4429

cond.true.4429:                                   ; preds = %if.then.4426
  br label %cond.end.4434

cond.false.4430:                                  ; preds = %if.then.4426
  %2313 = load i32, i32* @queryflag, align 4
  %cmp4431 = icmp sge i32 %2313, 0
  %cond4433 = select i1 %cmp4431, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4434

cond.end.4434:                                    ; preds = %cond.false.4430, %cond.true.4429
  %cond4435 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4429 ], [ %cond4433, %cond.false.4430 ]
  %2314 = load i8*, i8** @rc_name, align 8
  %2315 = load i8**, i8*** %args, align 8
  %2316 = load i8*, i8** %2315, align 8
  call void (i32, i8*, ...) %cond4435(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i32 0, i32 0), i8* %2314, i8* %2316)
  br label %sw.epilog.7356

if.end.4436:                                      ; preds = %for.end.4423
  %2317 = load i32, i32* %n, align 4
  %add4437 = add nsw i32 %2317, 256
  store i32 %add4437, i32* %n, align 4
  br label %if.end.4456

if.else.4438:                                     ; preds = %for.end.4405
  %2318 = load i32*, i32** %argl, align 8
  %2319 = load i32, i32* %2318, align 4
  %cmp4439 = icmp ne i32 %2319, 1
  br i1 %cmp4439, label %if.then.4441, label %if.else.4451

if.then.4441:                                     ; preds = %if.else.4438
  %2320 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4442 = getelementptr inbounds %struct.action, %struct.action* %2320, i32 0, i32 3
  %2321 = load i32, i32* %quiet4442, align 4
  %tobool4443 = icmp ne i32 %2321, 0
  br i1 %tobool4443, label %cond.false.4445, label %cond.true.4444

cond.true.4444:                                   ; preds = %if.then.4441
  br label %cond.end.4449

cond.false.4445:                                  ; preds = %if.then.4441
  %2322 = load i32, i32* @queryflag, align 4
  %cmp4446 = icmp sge i32 %2322, 0
  %cond4448 = select i1 %cmp4446, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4449

cond.end.4449:                                    ; preds = %cond.false.4445, %cond.true.4444
  %cond4450 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4444 ], [ %cond4448, %cond.false.4445 ]
  %2323 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond4450(i32 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.188, i32 0, i32 0), i8* %2323)
  br label %sw.epilog.7356

if.else.4451:                                     ; preds = %if.else.4438
  %2324 = load i8**, i8*** %args, align 8
  %arrayidx4452 = getelementptr inbounds i8*, i8** %2324, i64 0
  %2325 = load i8*, i8** %arrayidx4452, align 8
  %arrayidx4453 = getelementptr inbounds i8, i8* %2325, i64 0
  %2326 = load i8, i8* %arrayidx4453, align 1
  %conv4454 = zext i8 %2326 to i32
  store i32 %conv4454, i32* %n, align 4
  br label %if.end.4455

if.end.4455:                                      ; preds = %if.else.4451
  br label %if.end.4456

if.end.4456:                                      ; preds = %if.end.4455, %if.end.4436
  %2327 = load i8**, i8*** %args, align 8
  %arrayidx4457 = getelementptr inbounds i8*, i8** %2327, i64 1
  %2328 = load i8*, i8** %arrayidx4457, align 8
  %tobool4458 = icmp ne i8* %2328, null
  br i1 %tobool4458, label %if.then.4459, label %if.else.4488

if.then.4459:                                     ; preds = %if.end.4456
  %2329 = load i8**, i8*** %args, align 8
  %arrayidx4460 = getelementptr inbounds i8*, i8** %2329, i64 1
  %2330 = load i8*, i8** %arrayidx4460, align 8
  %call4461 = call i32 @FindCommnr(i8* %2330)
  store i32 %call4461, i32* %i, align 4
  %cmp4462 = icmp eq i32 %call4461, -1
  br i1 %cmp4462, label %if.then.4464, label %if.end.4475

if.then.4464:                                     ; preds = %if.then.4459
  %2331 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4465 = getelementptr inbounds %struct.action, %struct.action* %2331, i32 0, i32 3
  %2332 = load i32, i32* %quiet4465, align 4
  %tobool4466 = icmp ne i32 %2332, 0
  br i1 %tobool4466, label %cond.false.4468, label %cond.true.4467

cond.true.4467:                                   ; preds = %if.then.4464
  br label %cond.end.4472

cond.false.4468:                                  ; preds = %if.then.4464
  %2333 = load i32, i32* @queryflag, align 4
  %cmp4469 = icmp sge i32 %2333, 0
  %cond4471 = select i1 %cmp4469, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4472

cond.end.4472:                                    ; preds = %cond.false.4468, %cond.true.4467
  %cond4473 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4467 ], [ %cond4471, %cond.false.4468 ]
  %2334 = load i8*, i8** @rc_name, align 8
  %2335 = load i8**, i8*** %args, align 8
  %arrayidx4474 = getelementptr inbounds i8*, i8** %2335, i64 1
  %2336 = load i8*, i8** %arrayidx4474, align 8
  call void (i32, i8*, ...) %cond4473(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.189, i32 0, i32 0), i8* %2334, i8* %2336)
  br label %sw.epilog.7356

if.end.4475:                                      ; preds = %if.then.4459
  %2337 = load i32, i32* %i, align 4
  %2338 = load i8**, i8*** %args, align 8
  %add.ptr4476 = getelementptr inbounds i8*, i8** %2338, i64 2
  %call4477 = call i32 @CheckArgNum(i32 %2337, i8** %add.ptr4476)
  %cmp4478 = icmp slt i32 %call4477, 0
  br i1 %cmp4478, label %if.then.4480, label %if.end.4481

if.then.4480:                                     ; preds = %if.end.4475
  br label %sw.epilog.7356

if.end.4481:                                      ; preds = %if.end.4475
  %2339 = load i32, i32* %n, align 4
  %idxprom4482 = sext i32 %2339 to i64
  %2340 = load %struct.action*, %struct.action** %ktabp4375, align 8
  %arrayidx4483 = getelementptr inbounds %struct.action, %struct.action* %2340, i64 %idxprom4482
  call void @ClearAction(%struct.action* %arrayidx4483)
  %2341 = load %struct.action*, %struct.action** %ktabp4375, align 8
  %2342 = load i32, i32* %n, align 4
  %idx.ext4484 = sext i32 %2342 to i64
  %add.ptr4485 = getelementptr inbounds %struct.action, %struct.action* %2341, i64 %idx.ext4484
  %2343 = load i32, i32* %i, align 4
  %2344 = load i8**, i8*** %args, align 8
  %add.ptr4486 = getelementptr inbounds i8*, i8** %2344, i64 2
  %2345 = load i32*, i32** %argl, align 8
  %add.ptr4487 = getelementptr inbounds i32, i32* %2345, i64 2
  call void @SaveAction(%struct.action* %add.ptr4485, i32 %2343, i8** %add.ptr4486, i32* %add.ptr4487)
  br label %if.end.4491

if.else.4488:                                     ; preds = %if.end.4456
  %2346 = load i32, i32* %n, align 4
  %idxprom4489 = sext i32 %2346 to i64
  %2347 = load %struct.action*, %struct.action** %ktabp4375, align 8
  %arrayidx4490 = getelementptr inbounds %struct.action, %struct.action* %2347, i64 %idxprom4489
  call void @ClearAction(%struct.action* %arrayidx4490)
  br label %if.end.4491

if.end.4491:                                      ; preds = %if.else.4488, %if.end.4481
  br label %sw.epilog.7356

sw.bb.4492:                                       ; preds = %land.end
  store i32 0, i32* %fl, align 4
  store i32 0, i32* %kf, align 4
  store i32 0, i32* %af, align 4
  store i32 0, i32* %df, align 4
  store i32 0, i32* %mf, align 4
  %2348 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %2348, %struct.display** %odisp, align 8
  store i32 0, i32* %used, align 4
  store %struct.kmap_ext* null, %struct.kmap_ext** %kme, align 8
  br label %for.cond.4493

for.cond.4493:                                    ; preds = %for.inc.4548, %sw.bb.4492
  %2349 = load i8**, i8*** %args, align 8
  %2350 = load i8*, i8** %2349, align 8
  %tobool4494 = icmp ne i8* %2350, null
  br i1 %tobool4494, label %land.rhs.4495, label %land.end.4499

land.rhs.4495:                                    ; preds = %for.cond.4493
  %2351 = load i8**, i8*** %args, align 8
  %2352 = load i8*, i8** %2351, align 8
  %2353 = load i8, i8* %2352, align 1
  %conv4496 = sext i8 %2353 to i32
  %cmp4497 = icmp eq i32 %conv4496, 45
  br label %land.end.4499

land.end.4499:                                    ; preds = %land.rhs.4495, %for.cond.4493
  %2354 = phi i1 [ false, %for.cond.4493 ], [ %cmp4497, %land.rhs.4495 ]
  br i1 %2354, label %for.body.4501, label %for.end.4551

for.body.4501:                                    ; preds = %land.end.4499
  %2355 = load i8**, i8*** %args, align 8
  %2356 = load i8*, i8** %2355, align 8
  %call4502 = call i32 @strcmp(i8* %2356, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0)) #8
  %cmp4503 = icmp eq i32 %call4502, 0
  br i1 %cmp4503, label %if.then.4505, label %if.else.4506

if.then.4505:                                     ; preds = %for.body.4501
  store i32 16384, i32* %fl, align 4
  br label %if.end.4547

if.else.4506:                                     ; preds = %for.body.4501
  %2357 = load i8**, i8*** %args, align 8
  %2358 = load i8*, i8** %2357, align 8
  %call4507 = call i32 @strcmp(i8* %2358, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0)) #8
  %cmp4508 = icmp eq i32 %call4507, 0
  br i1 %cmp4508, label %if.then.4510, label %if.else.4511

if.then.4510:                                     ; preds = %if.else.4506
  store i32 1, i32* %kf, align 4
  br label %if.end.4546

if.else.4511:                                     ; preds = %if.else.4506
  %2359 = load i8**, i8*** %args, align 8
  %2360 = load i8*, i8** %2359, align 8
  %call4512 = call i32 @strcmp(i8* %2360, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.191, i32 0, i32 0)) #8
  %cmp4513 = icmp eq i32 %call4512, 0
  br i1 %cmp4513, label %if.then.4515, label %if.else.4516

if.then.4515:                                     ; preds = %if.else.4511
  store i32 1, i32* %af, align 4
  br label %if.end.4545

if.else.4516:                                     ; preds = %if.else.4511
  %2361 = load i8**, i8*** %args, align 8
  %2362 = load i8*, i8** %2361, align 8
  %call4517 = call i32 @strcmp(i8* %2362, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0)) #8
  %cmp4518 = icmp eq i32 %call4517, 0
  br i1 %cmp4518, label %if.then.4520, label %if.else.4521

if.then.4520:                                     ; preds = %if.else.4516
  store i32 1, i32* %df, align 4
  br label %if.end.4544

if.else.4521:                                     ; preds = %if.else.4516
  %2363 = load i8**, i8*** %args, align 8
  %2364 = load i8*, i8** %2363, align 8
  %call4522 = call i32 @strcmp(i8* %2364, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.94, i32 0, i32 0)) #8
  %cmp4523 = icmp eq i32 %call4522, 0
  br i1 %cmp4523, label %if.then.4525, label %if.else.4526

if.then.4525:                                     ; preds = %if.else.4521
  store i32 1, i32* %mf, align 4
  br label %if.end.4543

if.else.4526:                                     ; preds = %if.else.4521
  %2365 = load i8**, i8*** %args, align 8
  %2366 = load i8*, i8** %2365, align 8
  %call4527 = call i32 @strcmp(i8* %2366, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0)) #8
  %cmp4528 = icmp eq i32 %call4527, 0
  br i1 %cmp4528, label %if.then.4530, label %if.else.4533

if.then.4530:                                     ; preds = %if.else.4526
  %2367 = load i8**, i8*** %args, align 8
  %incdec.ptr4531 = getelementptr inbounds i8*, i8** %2367, i32 1
  store i8** %incdec.ptr4531, i8*** %args, align 8
  %2368 = load i32*, i32** %argl, align 8
  %incdec.ptr4532 = getelementptr inbounds i32, i32* %2368, i32 1
  store i32* %incdec.ptr4532, i32** %argl, align 8
  br label %for.end.4551

if.else.4533:                                     ; preds = %if.else.4526
  %2369 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4534 = getelementptr inbounds %struct.action, %struct.action* %2369, i32 0, i32 3
  %2370 = load i32, i32* %quiet4534, align 4
  %tobool4535 = icmp ne i32 %2370, 0
  br i1 %tobool4535, label %cond.false.4537, label %cond.true.4536

cond.true.4536:                                   ; preds = %if.else.4533
  br label %cond.end.4541

cond.false.4537:                                  ; preds = %if.else.4533
  %2371 = load i32, i32* @queryflag, align 4
  %cmp4538 = icmp sge i32 %2371, 0
  %cond4540 = select i1 %cmp4538, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4541

cond.end.4541:                                    ; preds = %cond.false.4537, %cond.true.4536
  %cond4542 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4536 ], [ %cond4540, %cond.false.4537 ]
  %2372 = load i8*, i8** @rc_name, align 8
  %2373 = load i8**, i8*** %args, align 8
  %2374 = load i8*, i8** %2373, align 8
  call void (i32, i8*, ...) %cond4542(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.192, i32 0, i32 0), i8* %2372, i8* %2374)
  br label %if.end.7370

if.end.4543:                                      ; preds = %if.then.4525
  br label %if.end.4544

if.end.4544:                                      ; preds = %if.end.4543, %if.then.4520
  br label %if.end.4545

if.end.4545:                                      ; preds = %if.end.4544, %if.then.4515
  br label %if.end.4546

if.end.4546:                                      ; preds = %if.end.4545, %if.then.4510
  br label %if.end.4547

if.end.4547:                                      ; preds = %if.end.4546, %if.then.4505
  br label %for.inc.4548

for.inc.4548:                                     ; preds = %if.end.4547
  %2375 = load i8**, i8*** %args, align 8
  %incdec.ptr4549 = getelementptr inbounds i8*, i8** %2375, i32 1
  store i8** %incdec.ptr4549, i8*** %args, align 8
  %2376 = load i32*, i32** %argl, align 8
  %incdec.ptr4550 = getelementptr inbounds i32, i32* %2376, i32 1
  store i32* %incdec.ptr4550, i32** %argl, align 8
  br label %for.cond.4493

for.end.4551:                                     ; preds = %if.then.4530, %land.end.4499
  %2377 = load i32, i32* %df, align 4
  %tobool4552 = icmp ne i32 %2377, 0
  br i1 %tobool4552, label %land.lhs.true.4553, label %if.end.4565

land.lhs.true.4553:                               ; preds = %for.end.4551
  %2378 = load i32, i32* %mf, align 4
  %tobool4554 = icmp ne i32 %2378, 0
  br i1 %tobool4554, label %if.then.4555, label %if.end.4565

if.then.4555:                                     ; preds = %land.lhs.true.4553
  %2379 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4556 = getelementptr inbounds %struct.action, %struct.action* %2379, i32 0, i32 3
  %2380 = load i32, i32* %quiet4556, align 4
  %tobool4557 = icmp ne i32 %2380, 0
  br i1 %tobool4557, label %cond.false.4559, label %cond.true.4558

cond.true.4558:                                   ; preds = %if.then.4555
  br label %cond.end.4563

cond.false.4559:                                  ; preds = %if.then.4555
  %2381 = load i32, i32* @queryflag, align 4
  %cmp4560 = icmp sge i32 %2381, 0
  %cond4562 = select i1 %cmp4560, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4563

cond.end.4563:                                    ; preds = %cond.false.4559, %cond.true.4558
  %cond4564 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4558 ], [ %cond4562, %cond.false.4559 ]
  %2382 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond4564(i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.193, i32 0, i32 0), i8* %2382)
  br label %sw.epilog.7356

if.end.4565:                                      ; preds = %land.lhs.true.4553, %for.end.4551
  %2383 = load i8**, i8*** %args, align 8
  %2384 = load i8*, i8** %2383, align 8
  %cmp4566 = icmp eq i8* %2384, null
  br i1 %cmp4566, label %if.then.4568, label %if.end.4577

if.then.4568:                                     ; preds = %if.end.4565
  %2385 = load i32, i32* %mf, align 4
  %tobool4569 = icmp ne i32 %2385, 0
  br i1 %tobool4569, label %if.then.4570, label %if.else.4571

if.then.4570:                                     ; preds = %if.then.4568
  call void @display_bindkey(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.194, i32 0, i32 0), %struct.action* getelementptr inbounds ([104 x %struct.action], [104 x %struct.action]* @mmtab, i32 0, i32 0))
  br label %if.end.4576

if.else.4571:                                     ; preds = %if.then.4568
  %2386 = load i32, i32* %df, align 4
  %tobool4572 = icmp ne i32 %2386, 0
  br i1 %tobool4572, label %if.then.4573, label %if.else.4574

if.then.4573:                                     ; preds = %if.else.4571
  call void @display_bindkey(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i32 0, i32 0), %struct.action* getelementptr inbounds ([104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i32 0))
  br label %if.end.4575

if.else.4574:                                     ; preds = %if.else.4571
  call void @display_bindkey(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.196, i32 0, i32 0), %struct.action* getelementptr inbounds ([104 x %struct.action], [104 x %struct.action]* @umtab, i32 0, i32 0))
  br label %if.end.4575

if.end.4575:                                      ; preds = %if.else.4574, %if.then.4573
  br label %if.end.4576

if.end.4576:                                      ; preds = %if.end.4575, %if.then.4570
  br label %sw.epilog.7356

if.end.4577:                                      ; preds = %if.end.4565
  %2387 = load i32, i32* %kf, align 4
  %cmp4578 = icmp eq i32 %2387, 0
  br i1 %cmp4578, label %if.then.4580, label %if.else.4728

if.then.4580:                                     ; preds = %if.end.4577
  %2388 = load i32, i32* %af, align 4
  %tobool4581 = icmp ne i32 %2388, 0
  br i1 %tobool4581, label %if.then.4582, label %if.end.4592

if.then.4582:                                     ; preds = %if.then.4580
  %2389 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4583 = getelementptr inbounds %struct.action, %struct.action* %2389, i32 0, i32 3
  %2390 = load i32, i32* %quiet4583, align 4
  %tobool4584 = icmp ne i32 %2390, 0
  br i1 %tobool4584, label %cond.false.4586, label %cond.true.4585

cond.true.4585:                                   ; preds = %if.then.4582
  br label %cond.end.4590

cond.false.4586:                                  ; preds = %if.then.4582
  %2391 = load i32, i32* @queryflag, align 4
  %cmp4587 = icmp sge i32 %2391, 0
  %cond4589 = select i1 %cmp4587, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4590

cond.end.4590:                                    ; preds = %cond.false.4586, %cond.true.4585
  %cond4591 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4585 ], [ %cond4589, %cond.false.4586 ]
  %2392 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond4591(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.197, i32 0, i32 0), i8* %2392)
  br label %sw.epilog.7356

if.end.4592:                                      ; preds = %if.then.4580
  %2393 = load i32*, i32** %argl, align 8
  %2394 = load i32, i32* %2393, align 4
  %cmp4593 = icmp eq i32 %2394, 0
  br i1 %cmp4593, label %if.then.4595, label %if.end.4605

if.then.4595:                                     ; preds = %if.end.4592
  %2395 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4596 = getelementptr inbounds %struct.action, %struct.action* %2395, i32 0, i32 3
  %2396 = load i32, i32* %quiet4596, align 4
  %tobool4597 = icmp ne i32 %2396, 0
  br i1 %tobool4597, label %cond.false.4599, label %cond.true.4598

cond.true.4598:                                   ; preds = %if.then.4595
  br label %cond.end.4603

cond.false.4599:                                  ; preds = %if.then.4595
  %2397 = load i32, i32* @queryflag, align 4
  %cmp4600 = icmp sge i32 %2397, 0
  %cond4602 = select i1 %cmp4600, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4603

cond.end.4603:                                    ; preds = %cond.false.4599, %cond.true.4598
  %cond4604 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4598 ], [ %cond4602, %cond.false.4599 ]
  %2398 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond4604(i32 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.198, i32 0, i32 0), i8* %2398)
  br label %sw.epilog.7356

if.end.4605:                                      ; preds = %if.end.4592
  store i32 0, i32* %i, align 4
  %2399 = load %struct.kmap_ext*, %struct.kmap_ext** @kmap_exts, align 8
  store %struct.kmap_ext* %2399, %struct.kmap_ext** %kme, align 8
  br label %for.cond.4606

for.cond.4606:                                    ; preds = %for.inc.4632, %if.end.4605
  %2400 = load i32, i32* %i, align 4
  %2401 = load i32, i32* @kmap_extn, align 4
  %cmp4607 = icmp slt i32 %2400, %2401
  br i1 %cmp4607, label %for.body.4609, label %for.end.4635

for.body.4609:                                    ; preds = %for.cond.4606
  %2402 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4610 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2402, i32 0, i32 0
  %2403 = load i8*, i8** %str4610, align 8
  %cmp4611 = icmp eq i8* %2403, null
  br i1 %cmp4611, label %if.then.4613, label %if.else.4618

if.then.4613:                                     ; preds = %for.body.4609
  %2404 = load i8**, i8*** %args, align 8
  %arrayidx4614 = getelementptr inbounds i8*, i8** %2404, i64 1
  %2405 = load i8*, i8** %arrayidx4614, align 8
  %tobool4615 = icmp ne i8* %2405, null
  br i1 %tobool4615, label %if.then.4616, label %if.end.4617

if.then.4616:                                     ; preds = %if.then.4613
  br label %for.end.4635

if.end.4617:                                      ; preds = %if.then.4613
  br label %if.end.4631

if.else.4618:                                     ; preds = %for.body.4609
  %2406 = load i32*, i32** %argl, align 8
  %2407 = load i32, i32* %2406, align 4
  %2408 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %fl4619 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2408, i32 0, i32 1
  %2409 = load i32, i32* %fl4619, align 4
  %and4620 = and i32 %2409, -16385
  %cmp4621 = icmp eq i32 %2407, %and4620
  br i1 %cmp4621, label %land.lhs.true.4623, label %if.end.4630

land.lhs.true.4623:                               ; preds = %if.else.4618
  %2410 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4624 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2410, i32 0, i32 0
  %2411 = load i8*, i8** %str4624, align 8
  %2412 = load i8**, i8*** %args, align 8
  %2413 = load i8*, i8** %2412, align 8
  %2414 = load i32*, i32** %argl, align 8
  %2415 = load i32, i32* %2414, align 4
  %conv4625 = sext i32 %2415 to i64
  %call4626 = call i32 @bcmp(i8* %2411, i8* %2413, i64 %conv4625) #8
  %cmp4627 = icmp eq i32 %call4626, 0
  br i1 %cmp4627, label %if.then.4629, label %if.end.4630

if.then.4629:                                     ; preds = %land.lhs.true.4623
  br label %for.end.4635

if.end.4630:                                      ; preds = %land.lhs.true.4623, %if.else.4618
  br label %if.end.4631

if.end.4631:                                      ; preds = %if.end.4630, %if.end.4617
  br label %for.inc.4632

for.inc.4632:                                     ; preds = %if.end.4631
  %2416 = load i32, i32* %i, align 4
  %inc4633 = add nsw i32 %2416, 1
  store i32 %inc4633, i32* %i, align 4
  %2417 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %incdec.ptr4634 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2417, i32 1
  store %struct.kmap_ext* %incdec.ptr4634, %struct.kmap_ext** %kme, align 8
  br label %for.cond.4606

for.end.4635:                                     ; preds = %if.then.4629, %if.then.4616, %for.cond.4606
  %2418 = load i32, i32* %i, align 4
  %2419 = load i32, i32* @kmap_extn, align 4
  %cmp4636 = icmp eq i32 %2418, %2419
  br i1 %cmp4636, label %if.then.4638, label %if.end.4685

if.then.4638:                                     ; preds = %for.end.4635
  %2420 = load i8**, i8*** %args, align 8
  %arrayidx4639 = getelementptr inbounds i8*, i8** %2420, i64 1
  %2421 = load i8*, i8** %arrayidx4639, align 8
  %tobool4640 = icmp ne i8* %2421, null
  br i1 %tobool4640, label %if.end.4651, label %if.then.4641

if.then.4641:                                     ; preds = %if.then.4638
  %2422 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4642 = getelementptr inbounds %struct.action, %struct.action* %2422, i32 0, i32 3
  %2423 = load i32, i32* %quiet4642, align 4
  %tobool4643 = icmp ne i32 %2423, 0
  br i1 %tobool4643, label %cond.false.4645, label %cond.true.4644

cond.true.4644:                                   ; preds = %if.then.4641
  br label %cond.end.4649

cond.false.4645:                                  ; preds = %if.then.4641
  %2424 = load i32, i32* @queryflag, align 4
  %cmp4646 = icmp sge i32 %2424, 0
  %cond4648 = select i1 %cmp4646, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4649

cond.end.4649:                                    ; preds = %cond.false.4645, %cond.true.4644
  %cond4650 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4644 ], [ %cond4648, %cond.false.4645 ]
  %2425 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond4650(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.199, i32 0, i32 0), i8* %2425)
  br label %sw.epilog.7356

if.end.4651:                                      ; preds = %if.then.4638
  %2426 = load i32, i32* @kmap_extn, align 4
  %add4652 = add nsw i32 %2426, 8
  store i32 %add4652, i32* @kmap_extn, align 4
  %2427 = load %struct.kmap_ext*, %struct.kmap_ext** @kmap_exts, align 8
  %2428 = bitcast %struct.kmap_ext* %2427 to i8*
  %2429 = load i32, i32* @kmap_extn, align 4
  %conv4653 = sext i32 %2429 to i64
  %mul4654 = mul i64 %conv4653, 112
  %conv4655 = trunc i64 %mul4654 to i32
  %call4656 = call i8* @xrealloc(i8* %2428, i32 %conv4655)
  %2430 = bitcast i8* %call4656 to %struct.kmap_ext*
  store %struct.kmap_ext* %2430, %struct.kmap_ext** @kmap_exts, align 8
  %2431 = load %struct.kmap_ext*, %struct.kmap_ext** @kmap_exts, align 8
  %2432 = load i32, i32* %i, align 4
  %idx.ext4657 = sext i32 %2432 to i64
  %add.ptr4658 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2431, i64 %idx.ext4657
  store %struct.kmap_ext* %add.ptr4658, %struct.kmap_ext** %kme, align 8
  %2433 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %2434 = bitcast %struct.kmap_ext* %2433 to i8*
  call void @llvm.memset.p0i8.i64(i8* %2434, i8 0, i64 896, i32 1, i1 false)
  br label %for.cond.4659

for.cond.4659:                                    ; preds = %for.inc.4679, %if.end.4651
  %2435 = load i32, i32* %i, align 4
  %2436 = load i32, i32* @kmap_extn, align 4
  %cmp4660 = icmp slt i32 %2435, %2436
  br i1 %cmp4660, label %for.body.4662, label %for.end.4682

for.body.4662:                                    ; preds = %for.cond.4659
  %2437 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4663 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2437, i32 0, i32 0
  store i8* null, i8** %str4663, align 8
  %2438 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %um = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2438, i32 0, i32 2
  %nr4664 = getelementptr inbounds %struct.action, %struct.action* %um, i32 0, i32 0
  store i32 -1, i32* %nr4664, align 4
  %2439 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %mm = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2439, i32 0, i32 4
  %nr4665 = getelementptr inbounds %struct.action, %struct.action* %mm, i32 0, i32 0
  store i32 -1, i32* %nr4665, align 4
  %2440 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %dm = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2440, i32 0, i32 3
  %nr4666 = getelementptr inbounds %struct.action, %struct.action* %dm, i32 0, i32 0
  store i32 -1, i32* %nr4666, align 4
  %2441 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %um4667 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2441, i32 0, i32 2
  %args4668 = getelementptr inbounds %struct.action, %struct.action* %um4667, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args4668, align 8
  %2442 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %mm4669 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2442, i32 0, i32 4
  %args4670 = getelementptr inbounds %struct.action, %struct.action* %mm4669, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args4670, align 8
  %2443 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %dm4671 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2443, i32 0, i32 3
  %args4672 = getelementptr inbounds %struct.action, %struct.action* %dm4671, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args4672, align 8
  %2444 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %um4673 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2444, i32 0, i32 2
  %argl4674 = getelementptr inbounds %struct.action, %struct.action* %um4673, i32 0, i32 2
  store i32* null, i32** %argl4674, align 8
  %2445 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %mm4675 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2445, i32 0, i32 4
  %argl4676 = getelementptr inbounds %struct.action, %struct.action* %mm4675, i32 0, i32 2
  store i32* null, i32** %argl4676, align 8
  %2446 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %dm4677 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2446, i32 0, i32 3
  %argl4678 = getelementptr inbounds %struct.action, %struct.action* %dm4677, i32 0, i32 2
  store i32* null, i32** %argl4678, align 8
  br label %for.inc.4679

for.inc.4679:                                     ; preds = %for.body.4662
  %2447 = load i32, i32* %i, align 4
  %inc4680 = add nsw i32 %2447, 1
  store i32 %inc4680, i32* %i, align 4
  %2448 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %incdec.ptr4681 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2448, i32 1
  store %struct.kmap_ext* %incdec.ptr4681, %struct.kmap_ext** %kme, align 8
  br label %for.cond.4659

for.end.4682:                                     ; preds = %for.cond.4659
  %2449 = load i32, i32* %i, align 4
  %sub4683 = sub nsw i32 %2449, 8
  store i32 %sub4683, i32* %i, align 4
  %2450 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %add.ptr4684 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2450, i64 -8
  store %struct.kmap_ext* %add.ptr4684, %struct.kmap_ext** %kme, align 8
  br label %if.end.4685

if.end.4685:                                      ; preds = %for.end.4682, %for.end.4635
  %2451 = load i32, i32* %df, align 4
  %cmp4686 = icmp eq i32 %2451, 0
  br i1 %cmp4686, label %land.lhs.true.4688, label %if.end.4694

land.lhs.true.4688:                               ; preds = %if.end.4685
  %2452 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %dm4689 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2452, i32 0, i32 3
  %nr4690 = getelementptr inbounds %struct.action, %struct.action* %dm4689, i32 0, i32 0
  %2453 = load i32, i32* %nr4690, align 4
  %cmp4691 = icmp ne i32 %2453, -1
  br i1 %cmp4691, label %if.then.4693, label %if.end.4694

if.then.4693:                                     ; preds = %land.lhs.true.4688
  store i32 1, i32* %used, align 4
  br label %if.end.4694

if.end.4694:                                      ; preds = %if.then.4693, %land.lhs.true.4688, %if.end.4685
  %2454 = load i32, i32* %mf, align 4
  %cmp4695 = icmp eq i32 %2454, 0
  br i1 %cmp4695, label %land.lhs.true.4697, label %if.end.4703

land.lhs.true.4697:                               ; preds = %if.end.4694
  %2455 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %mm4698 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2455, i32 0, i32 4
  %nr4699 = getelementptr inbounds %struct.action, %struct.action* %mm4698, i32 0, i32 0
  %2456 = load i32, i32* %nr4699, align 4
  %cmp4700 = icmp ne i32 %2456, -1
  br i1 %cmp4700, label %if.then.4702, label %if.end.4703

if.then.4702:                                     ; preds = %land.lhs.true.4697
  store i32 1, i32* %used, align 4
  br label %if.end.4703

if.end.4703:                                      ; preds = %if.then.4702, %land.lhs.true.4697, %if.end.4694
  %2457 = load i32, i32* %df, align 4
  %tobool4704 = icmp ne i32 %2457, 0
  br i1 %tobool4704, label %land.lhs.true.4707, label %lor.lhs.false.4705

lor.lhs.false.4705:                               ; preds = %if.end.4703
  %2458 = load i32, i32* %mf, align 4
  %tobool4706 = icmp ne i32 %2458, 0
  br i1 %tobool4706, label %land.lhs.true.4707, label %if.end.4713

land.lhs.true.4707:                               ; preds = %lor.lhs.false.4705, %if.end.4703
  %2459 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %um4708 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2459, i32 0, i32 2
  %nr4709 = getelementptr inbounds %struct.action, %struct.action* %um4708, i32 0, i32 0
  %2460 = load i32, i32* %nr4709, align 4
  %cmp4710 = icmp ne i32 %2460, -1
  br i1 %cmp4710, label %if.then.4712, label %if.end.4713

if.then.4712:                                     ; preds = %land.lhs.true.4707
  store i32 1, i32* %used, align 4
  br label %if.end.4713

if.end.4713:                                      ; preds = %if.then.4712, %land.lhs.true.4707, %lor.lhs.false.4705
  %2461 = load i32, i32* %i, align 4
  %add4714 = add nsw i32 %2461, 104
  store i32 %add4714, i32* %i, align 4
  %2462 = load i32, i32* %df, align 4
  %tobool4715 = icmp ne i32 %2462, 0
  br i1 %tobool4715, label %cond.true.4716, label %cond.false.4718

cond.true.4716:                                   ; preds = %if.end.4713
  %2463 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %dm4717 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2463, i32 0, i32 3
  br label %cond.end.4726

cond.false.4718:                                  ; preds = %if.end.4713
  %2464 = load i32, i32* %mf, align 4
  %tobool4719 = icmp ne i32 %2464, 0
  br i1 %tobool4719, label %cond.true.4720, label %cond.false.4722

cond.true.4720:                                   ; preds = %cond.false.4718
  %2465 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %mm4721 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2465, i32 0, i32 4
  br label %cond.end.4724

cond.false.4722:                                  ; preds = %cond.false.4718
  %2466 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %um4723 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2466, i32 0, i32 2
  br label %cond.end.4724

cond.end.4724:                                    ; preds = %cond.false.4722, %cond.true.4720
  %cond4725 = phi %struct.action* [ %mm4721, %cond.true.4720 ], [ %um4723, %cond.false.4722 ]
  br label %cond.end.4726

cond.end.4726:                                    ; preds = %cond.end.4724, %cond.true.4716
  %cond4727 = phi %struct.action* [ %dm4717, %cond.true.4716 ], [ %cond4725, %cond.end.4724 ]
  store %struct.action* %cond4727, %struct.action** %newact, align 8
  br label %if.end.4785

if.else.4728:                                     ; preds = %if.end.4577
  store i32 106, i32* %i, align 4
  br label %for.cond.4729

for.cond.4729:                                    ; preds = %for.inc.4741, %if.else.4728
  %2467 = load i32, i32* %i, align 4
  %cmp4730 = icmp slt i32 %2467, 188
  br i1 %cmp4730, label %for.body.4732, label %for.end.4743

for.body.4732:                                    ; preds = %for.cond.4729
  %2468 = load i32, i32* %i, align 4
  %idxprom4733 = sext i32 %2468 to i64
  %arrayidx4734 = getelementptr inbounds [0 x %struct.term], [0 x %struct.term]* @term, i32 0, i64 %idxprom4733
  %tcname4735 = getelementptr inbounds %struct.term, %struct.term* %arrayidx4734, i32 0, i32 0
  %2469 = load i8*, i8** %tcname4735, align 8
  %2470 = load i8**, i8*** %args, align 8
  %2471 = load i8*, i8** %2470, align 8
  %call4736 = call i32 @strcmp(i8* %2469, i8* %2471) #8
  %cmp4737 = icmp eq i32 %call4736, 0
  br i1 %cmp4737, label %if.then.4739, label %if.end.4740

if.then.4739:                                     ; preds = %for.body.4732
  br label %for.end.4743

if.end.4740:                                      ; preds = %for.body.4732
  br label %for.inc.4741

for.inc.4741:                                     ; preds = %if.end.4740
  %2472 = load i32, i32* %i, align 4
  %inc4742 = add nsw i32 %2472, 1
  store i32 %inc4742, i32* %i, align 4
  br label %for.cond.4729

for.end.4743:                                     ; preds = %if.then.4739, %for.cond.4729
  %2473 = load i32, i32* %i, align 4
  %cmp4744 = icmp eq i32 %2473, 188
  br i1 %cmp4744, label %if.then.4746, label %if.end.4756

if.then.4746:                                     ; preds = %for.end.4743
  %2474 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4747 = getelementptr inbounds %struct.action, %struct.action* %2474, i32 0, i32 3
  %2475 = load i32, i32* %quiet4747, align 4
  %tobool4748 = icmp ne i32 %2475, 0
  br i1 %tobool4748, label %cond.false.4750, label %cond.true.4749

cond.true.4749:                                   ; preds = %if.then.4746
  br label %cond.end.4754

cond.false.4750:                                  ; preds = %if.then.4746
  %2476 = load i32, i32* @queryflag, align 4
  %cmp4751 = icmp sge i32 %2476, 0
  %cond4753 = select i1 %cmp4751, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4754

cond.end.4754:                                    ; preds = %cond.false.4750, %cond.true.4749
  %cond4755 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4749 ], [ %cond4753, %cond.false.4750 ]
  %2477 = load i8*, i8** @rc_name, align 8
  %2478 = load i8**, i8*** %args, align 8
  %2479 = load i8*, i8** %2478, align 8
  call void (i32, i8*, ...) %cond4755(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.200, i32 0, i32 0), i8* %2477, i8* %2479)
  br label %sw.epilog.7356

if.end.4756:                                      ; preds = %for.end.4743
  %2480 = load i32, i32* %af, align 4
  %tobool4757 = icmp ne i32 %2480, 0
  br i1 %tobool4757, label %land.lhs.true.4758, label %if.else.4766

land.lhs.true.4758:                               ; preds = %if.end.4756
  %2481 = load i32, i32* %i, align 4
  %cmp4759 = icmp sge i32 %2481, 166
  br i1 %cmp4759, label %land.lhs.true.4761, label %if.else.4766

land.lhs.true.4761:                               ; preds = %land.lhs.true.4758
  %2482 = load i32, i32* %i, align 4
  %cmp4762 = icmp slt i32 %2482, 188
  br i1 %cmp4762, label %if.then.4764, label %if.else.4766

if.then.4764:                                     ; preds = %land.lhs.true.4761
  %2483 = load i32, i32* %i, align 4
  %sub4765 = sub nsw i32 %2483, 84
  store i32 %sub4765, i32* %i, align 4
  br label %if.end.4768

if.else.4766:                                     ; preds = %land.lhs.true.4761, %land.lhs.true.4758, %if.end.4756
  %2484 = load i32, i32* %i, align 4
  %sub4767 = sub nsw i32 %2484, 106
  store i32 %sub4767, i32* %i, align 4
  br label %if.end.4768

if.end.4768:                                      ; preds = %if.else.4766, %if.then.4764
  %2485 = load i32, i32* %df, align 4
  %tobool4769 = icmp ne i32 %2485, 0
  br i1 %tobool4769, label %cond.true.4770, label %cond.false.4773

cond.true.4770:                                   ; preds = %if.end.4768
  %2486 = load i32, i32* %i, align 4
  %idxprom4771 = sext i32 %2486 to i64
  %arrayidx4772 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @dmtab, i32 0, i64 %idxprom4771
  br label %cond.end.4783

cond.false.4773:                                  ; preds = %if.end.4768
  %2487 = load i32, i32* %mf, align 4
  %tobool4774 = icmp ne i32 %2487, 0
  br i1 %tobool4774, label %cond.true.4775, label %cond.false.4778

cond.true.4775:                                   ; preds = %cond.false.4773
  %2488 = load i32, i32* %i, align 4
  %idxprom4776 = sext i32 %2488 to i64
  %arrayidx4777 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @mmtab, i32 0, i64 %idxprom4776
  br label %cond.end.4781

cond.false.4778:                                  ; preds = %cond.false.4773
  %2489 = load i32, i32* %i, align 4
  %idxprom4779 = sext i32 %2489 to i64
  %arrayidx4780 = getelementptr inbounds [104 x %struct.action], [104 x %struct.action]* @umtab, i32 0, i64 %idxprom4779
  br label %cond.end.4781

cond.end.4781:                                    ; preds = %cond.false.4778, %cond.true.4775
  %cond4782 = phi %struct.action* [ %arrayidx4777, %cond.true.4775 ], [ %arrayidx4780, %cond.false.4778 ]
  br label %cond.end.4783

cond.end.4783:                                    ; preds = %cond.end.4781, %cond.true.4770
  %cond4784 = phi %struct.action* [ %arrayidx4772, %cond.true.4770 ], [ %cond4782, %cond.end.4781 ]
  store %struct.action* %cond4784, %struct.action** %newact, align 8
  br label %if.end.4785

if.end.4785:                                      ; preds = %cond.end.4783, %cond.end.4726
  %2490 = load i8**, i8*** %args, align 8
  %arrayidx4786 = getelementptr inbounds i8*, i8** %2490, i64 1
  %2491 = load i8*, i8** %arrayidx4786, align 8
  %tobool4787 = icmp ne i8* %2491, null
  br i1 %tobool4787, label %if.then.4788, label %if.else.4829

if.then.4788:                                     ; preds = %if.end.4785
  %2492 = load i8**, i8*** %args, align 8
  %arrayidx4789 = getelementptr inbounds i8*, i8** %2492, i64 1
  %2493 = load i8*, i8** %arrayidx4789, align 8
  %call4790 = call i32 @FindCommnr(i8* %2493)
  store i32 %call4790, i32* %newnr, align 4
  %cmp4791 = icmp eq i32 %call4790, -1
  br i1 %cmp4791, label %if.then.4793, label %if.end.4804

if.then.4793:                                     ; preds = %if.then.4788
  %2494 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4794 = getelementptr inbounds %struct.action, %struct.action* %2494, i32 0, i32 3
  %2495 = load i32, i32* %quiet4794, align 4
  %tobool4795 = icmp ne i32 %2495, 0
  br i1 %tobool4795, label %cond.false.4797, label %cond.true.4796

cond.true.4796:                                   ; preds = %if.then.4793
  br label %cond.end.4801

cond.false.4797:                                  ; preds = %if.then.4793
  %2496 = load i32, i32* @queryflag, align 4
  %cmp4798 = icmp sge i32 %2496, 0
  %cond4800 = select i1 %cmp4798, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4801

cond.end.4801:                                    ; preds = %cond.false.4797, %cond.true.4796
  %cond4802 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4796 ], [ %cond4800, %cond.false.4797 ]
  %2497 = load i8*, i8** @rc_name, align 8
  %2498 = load i8**, i8*** %args, align 8
  %arrayidx4803 = getelementptr inbounds i8*, i8** %2498, i64 1
  %2499 = load i8*, i8** %arrayidx4803, align 8
  call void (i32, i8*, ...) %cond4802(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.201, i32 0, i32 0), i8* %2497, i8* %2499)
  br label %sw.epilog.7356

if.end.4804:                                      ; preds = %if.then.4788
  %2500 = load i32, i32* %newnr, align 4
  %2501 = load i8**, i8*** %args, align 8
  %add.ptr4805 = getelementptr inbounds i8*, i8** %2501, i64 2
  %call4806 = call i32 @CheckArgNum(i32 %2500, i8** %add.ptr4805)
  %cmp4807 = icmp slt i32 %call4806, 0
  br i1 %cmp4807, label %if.then.4809, label %if.end.4810

if.then.4809:                                     ; preds = %if.end.4804
  br label %sw.epilog.7356

if.end.4810:                                      ; preds = %if.end.4804
  %2502 = load %struct.action*, %struct.action** %newact, align 8
  call void @ClearAction(%struct.action* %2502)
  %2503 = load %struct.action*, %struct.action** %newact, align 8
  %2504 = load i32, i32* %newnr, align 4
  %2505 = load i8**, i8*** %args, align 8
  %add.ptr4811 = getelementptr inbounds i8*, i8** %2505, i64 2
  %2506 = load i32*, i32** %argl, align 8
  %add.ptr4812 = getelementptr inbounds i32, i32* %2506, i64 2
  call void @SaveAction(%struct.action* %2503, i32 %2504, i8** %add.ptr4811, i32* %add.ptr4812)
  %2507 = load i32, i32* %kf, align 4
  %cmp4813 = icmp eq i32 %2507, 0
  br i1 %cmp4813, label %land.lhs.true.4815, label %if.end.4828

land.lhs.true.4815:                               ; preds = %if.end.4810
  %2508 = load i8**, i8*** %args, align 8
  %arrayidx4816 = getelementptr inbounds i8*, i8** %2508, i64 1
  %2509 = load i8*, i8** %arrayidx4816, align 8
  %tobool4817 = icmp ne i8* %2509, null
  br i1 %tobool4817, label %if.then.4818, label %if.end.4828

if.then.4818:                                     ; preds = %land.lhs.true.4815
  %2510 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4819 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2510, i32 0, i32 0
  %2511 = load i8*, i8** %str4819, align 8
  %tobool4820 = icmp ne i8* %2511, null
  br i1 %tobool4820, label %if.then.4821, label %if.end.4823

if.then.4821:                                     ; preds = %if.then.4818
  %2512 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4822 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2512, i32 0, i32 0
  %2513 = load i8*, i8** %str4822, align 8
  call void @free(i8* %2513) #4
  br label %if.end.4823

if.end.4823:                                      ; preds = %if.then.4821, %if.then.4818
  %2514 = load i8**, i8*** %args, align 8
  %2515 = load i8*, i8** %2514, align 8
  %2516 = load i32*, i32** %argl, align 8
  %2517 = load i32, i32* %2516, align 4
  %call4824 = call i8* @SaveStrn(i8* %2515, i32 %2517)
  %2518 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4825 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2518, i32 0, i32 0
  store i8* %call4824, i8** %str4825, align 8
  %2519 = load i32, i32* %fl, align 4
  %2520 = load i32*, i32** %argl, align 8
  %2521 = load i32, i32* %2520, align 4
  %or4826 = or i32 %2519, %2521
  %2522 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %fl4827 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2522, i32 0, i32 1
  store i32 %or4826, i32* %fl4827, align 4
  br label %if.end.4828

if.end.4828:                                      ; preds = %if.end.4823, %land.lhs.true.4815, %if.end.4810
  br label %if.end.4830

if.else.4829:                                     ; preds = %if.end.4785
  %2523 = load %struct.action*, %struct.action** %newact, align 8
  call void @ClearAction(%struct.action* %2523)
  br label %if.end.4830

if.end.4830:                                      ; preds = %if.else.4829, %if.end.4828
  %2524 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %2524, %struct.display** @display, align 8
  br label %for.cond.4831

for.cond.4831:                                    ; preds = %for.inc.4838, %if.end.4830
  %2525 = load %struct.display*, %struct.display** @display, align 8
  %tobool4832 = icmp ne %struct.display* %2525, null
  br i1 %tobool4832, label %for.body.4833, label %for.end.4840

for.body.4833:                                    ; preds = %for.cond.4831
  %2526 = load i32, i32* %i, align 4
  %2527 = load i8**, i8*** %args, align 8
  %arrayidx4834 = getelementptr inbounds i8*, i8** %2527, i64 1
  %2528 = load i8*, i8** %arrayidx4834, align 8
  %tobool4835 = icmp ne i8* %2528, null
  %cond4836 = select i1 %tobool4835, i32 1, i32 0
  %call4837 = call i32 @remap(i32 %2526, i32 %cond4836)
  br label %for.inc.4838

for.inc.4838:                                     ; preds = %for.body.4833
  %2529 = load %struct.display*, %struct.display** @display, align 8
  %d_next4839 = getelementptr inbounds %struct.display, %struct.display* %2529, i32 0, i32 0
  %2530 = load %struct.display*, %struct.display** %d_next4839, align 8
  store %struct.display* %2530, %struct.display** @display, align 8
  br label %for.cond.4831

for.end.4840:                                     ; preds = %for.cond.4831
  %2531 = load i32, i32* %kf, align 4
  %cmp4841 = icmp eq i32 %2531, 0
  br i1 %cmp4841, label %land.lhs.true.4843, label %if.end.4856

land.lhs.true.4843:                               ; preds = %for.end.4840
  %2532 = load i8**, i8*** %args, align 8
  %arrayidx4844 = getelementptr inbounds i8*, i8** %2532, i64 1
  %2533 = load i8*, i8** %arrayidx4844, align 8
  %tobool4845 = icmp ne i8* %2533, null
  br i1 %tobool4845, label %if.end.4856, label %if.then.4846

if.then.4846:                                     ; preds = %land.lhs.true.4843
  %2534 = load i32, i32* %used, align 4
  %tobool4847 = icmp ne i32 %2534, 0
  br i1 %tobool4847, label %if.end.4855, label %land.lhs.true.4848

land.lhs.true.4848:                               ; preds = %if.then.4846
  %2535 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4849 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2535, i32 0, i32 0
  %2536 = load i8*, i8** %str4849, align 8
  %tobool4850 = icmp ne i8* %2536, null
  br i1 %tobool4850, label %if.then.4851, label %if.end.4855

if.then.4851:                                     ; preds = %land.lhs.true.4848
  %2537 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4852 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2537, i32 0, i32 0
  %2538 = load i8*, i8** %str4852, align 8
  call void @free(i8* %2538) #4
  %2539 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %str4853 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2539, i32 0, i32 0
  store i8* null, i8** %str4853, align 8
  %2540 = load %struct.kmap_ext*, %struct.kmap_ext** %kme, align 8
  %fl4854 = getelementptr inbounds %struct.kmap_ext, %struct.kmap_ext* %2540, i32 0, i32 1
  store i32 0, i32* %fl4854, align 4
  br label %if.end.4855

if.end.4855:                                      ; preds = %if.then.4851, %land.lhs.true.4848, %if.then.4846
  br label %if.end.4856

if.end.4856:                                      ; preds = %if.end.4855, %land.lhs.true.4843, %for.end.4840
  %2541 = load %struct.display*, %struct.display** %odisp, align 8
  store %struct.display* %2541, %struct.display** @display, align 8
  br label %sw.epilog.7356

sw.bb.4857:                                       ; preds = %land.end
  %2542 = load i8**, i8*** %args, align 8
  %2543 = load i8*, i8** %2542, align 8
  %tobool4858 = icmp ne i8* %2543, null
  br i1 %tobool4858, label %if.then.4859, label %if.end.4877

if.then.4859:                                     ; preds = %sw.bb.4857
  %2544 = load %struct.action*, %struct.action** %act.addr, align 8
  %call4860 = call i32 @ParseNum(%struct.action* %2544, i32* %n)
  %tobool4861 = icmp ne i32 %call4860, 0
  br i1 %tobool4861, label %if.then.4862, label %if.end.4863

if.then.4862:                                     ; preds = %if.then.4859
  br label %sw.epilog.7356

if.end.4863:                                      ; preds = %if.then.4859
  %2545 = load i32, i32* %n, align 4
  %cmp4864 = icmp slt i32 %2545, 0
  br i1 %cmp4864, label %if.then.4866, label %if.end.4876

if.then.4866:                                     ; preds = %if.end.4863
  %2546 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4867 = getelementptr inbounds %struct.action, %struct.action* %2546, i32 0, i32 3
  %2547 = load i32, i32* %quiet4867, align 4
  %tobool4868 = icmp ne i32 %2547, 0
  br i1 %tobool4868, label %cond.false.4870, label %cond.true.4869

cond.true.4869:                                   ; preds = %if.then.4866
  br label %cond.end.4874

cond.false.4870:                                  ; preds = %if.then.4866
  %2548 = load i32, i32* @queryflag, align 4
  %cmp4871 = icmp sge i32 %2548, 0
  %cond4873 = select i1 %cmp4871, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4874

cond.end.4874:                                    ; preds = %cond.false.4870, %cond.true.4869
  %cond4875 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4869 ], [ %cond4873, %cond.false.4870 ]
  %2549 = load i8*, i8** @rc_name, align 8
  %2550 = load i32, i32* %n, align 4
  call void (i32, i8*, ...) %cond4875(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.202, i32 0, i32 0), i8* %2549, i32 %2550)
  br label %sw.epilog.7356

if.end.4876:                                      ; preds = %if.end.4863
  %2551 = load i32, i32* %n, align 4
  store i32 %2551, i32* @maptimeout, align 4
  br label %if.end.4877

if.end.4877:                                      ; preds = %if.end.4876, %sw.bb.4857
  %2552 = load i8**, i8*** %args, align 8
  %2553 = load i8*, i8** %2552, align 8
  %cmp4878 = icmp eq i8* %2553, null
  br i1 %cmp4878, label %if.then.4882, label %lor.lhs.false.4880

lor.lhs.false.4880:                               ; preds = %if.end.4877
  %2554 = load i32, i32* %msgok, align 4
  %tobool4881 = icmp ne i32 %2554, 0
  br i1 %tobool4881, label %if.then.4882, label %if.end.4892

if.then.4882:                                     ; preds = %lor.lhs.false.4880, %if.end.4877
  %2555 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4883 = getelementptr inbounds %struct.action, %struct.action* %2555, i32 0, i32 3
  %2556 = load i32, i32* %quiet4883, align 4
  %tobool4884 = icmp ne i32 %2556, 0
  br i1 %tobool4884, label %cond.false.4886, label %cond.true.4885

cond.true.4885:                                   ; preds = %if.then.4882
  br label %cond.end.4890

cond.false.4886:                                  ; preds = %if.then.4882
  %2557 = load i32, i32* @queryflag, align 4
  %cmp4887 = icmp sge i32 %2557, 0
  %cond4889 = select i1 %cmp4887, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4890

cond.end.4890:                                    ; preds = %cond.false.4886, %cond.true.4885
  %cond4891 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4885 ], [ %cond4889, %cond.false.4886 ]
  %2558 = load i32, i32* @maptimeout, align 4
  call void (i32, i8*, ...) %cond4891(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.203, i32 0, i32 0), i32 %2558)
  br label %if.end.4892

if.end.4892:                                      ; preds = %cond.end.4890, %lor.lhs.false.4880
  br label %sw.epilog.7356

sw.bb.4893:                                       ; preds = %land.end
  %2559 = load %struct.display*, %struct.display** @display, align 8
  %d_dontmap = getelementptr inbounds %struct.display, %struct.display* %2559, i32 0, i32 81
  store i32 1, i32* %d_dontmap, align 4
  br label %sw.epilog.7356

sw.bb.4894:                                       ; preds = %land.end
  %2560 = load %struct.display*, %struct.display** @display, align 8
  %d_mapdefault = getelementptr inbounds %struct.display, %struct.display* %2560, i32 0, i32 82
  store i32 1, i32* %d_mapdefault, align 4
  br label %sw.epilog.7356

sw.bb.4895:                                       ; preds = %land.end, %land.end, %land.end, %land.end
  %2561 = load i32, i32* %argc, align 4
  %2562 = load i8**, i8*** %args, align 8
  %call4896 = call i32 @UsersAcl(%struct.acluser* null, i32 %2561, i8** %2562)
  br label %sw.epilog.7356

sw.bb.4897:                                       ; preds = %land.end
  %2563 = load i8**, i8*** %args, align 8
  %arrayidx4898 = getelementptr inbounds i8*, i8** %2563, i64 0
  %2564 = load i8*, i8** %arrayidx4898, align 8
  %call4899 = call i32 @UserDel(i8* %2564, %struct.acluser** null)
  %tobool4900 = icmp ne i32 %call4899, 0
  br i1 %tobool4900, label %if.then.4901, label %if.end.4902

if.then.4901:                                     ; preds = %sw.bb.4897
  br label %sw.epilog.7356

if.end.4902:                                      ; preds = %sw.bb.4897
  %2565 = load i32, i32* %msgok, align 4
  %tobool4903 = icmp ne i32 %2565, 0
  br i1 %tobool4903, label %if.then.4904, label %if.end.4915

if.then.4904:                                     ; preds = %if.end.4902
  %2566 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4905 = getelementptr inbounds %struct.action, %struct.action* %2566, i32 0, i32 3
  %2567 = load i32, i32* %quiet4905, align 4
  %tobool4906 = icmp ne i32 %2567, 0
  br i1 %tobool4906, label %cond.false.4908, label %cond.true.4907

cond.true.4907:                                   ; preds = %if.then.4904
  br label %cond.end.4912

cond.false.4908:                                  ; preds = %if.then.4904
  %2568 = load i32, i32* @queryflag, align 4
  %cmp4909 = icmp sge i32 %2568, 0
  %cond4911 = select i1 %cmp4909, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4912

cond.end.4912:                                    ; preds = %cond.false.4908, %cond.true.4907
  %cond4913 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4907 ], [ %cond4911, %cond.false.4908 ]
  %2569 = load i8**, i8*** %args, align 8
  %arrayidx4914 = getelementptr inbounds i8*, i8** %2569, i64 0
  %2570 = load i8*, i8** %arrayidx4914, align 8
  call void (i32, i8*, ...) %cond4913(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.204, i32 0, i32 0), i8* %2570)
  br label %if.end.4915

if.end.4915:                                      ; preds = %cond.end.4912, %if.end.4902
  br label %sw.epilog.7356

sw.bb.4916:                                       ; preds = %land.end
  %2571 = load i8**, i8*** %args, align 8
  %arrayidx4917 = getelementptr inbounds i8*, i8** %2571, i64 1
  %2572 = load i8*, i8** %arrayidx4917, align 8
  %tobool4918 = icmp ne i8* %2572, null
  br i1 %tobool4918, label %if.then.4919, label %if.else.4957

if.then.4919:                                     ; preds = %sw.bb.4916
  %2573 = load i8**, i8*** %args, align 8
  %arrayidx4920 = getelementptr inbounds i8*, i8** %2573, i64 1
  %2574 = load i8*, i8** %arrayidx4920, align 8
  %call4921 = call i32 @strcmp(i8* %2574, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i32 0, i32 0)) #8
  %tobool4922 = icmp ne i32 %call4921, 0
  br i1 %tobool4922, label %if.then.4923, label %if.else.4944

if.then.4923:                                     ; preds = %if.then.4919
  %2575 = load i8**, i8*** %args, align 8
  %arrayidx4924 = getelementptr inbounds i8*, i8** %2575, i64 0
  %2576 = load i8*, i8** %arrayidx4924, align 8
  %2577 = load i8**, i8*** %args, align 8
  %arrayidx4925 = getelementptr inbounds i8*, i8** %2577, i64 1
  %2578 = load i8*, i8** %arrayidx4925, align 8
  %call4926 = call i32 @AclLinkUser(i8* %2576, i8* %2578)
  %tobool4927 = icmp ne i32 %call4926, 0
  br i1 %tobool4927, label %if.then.4928, label %if.end.4929

if.then.4928:                                     ; preds = %if.then.4923
  br label %sw.epilog.7356

if.end.4929:                                      ; preds = %if.then.4923
  %2579 = load i32, i32* %msgok, align 4
  %tobool4930 = icmp ne i32 %2579, 0
  br i1 %tobool4930, label %if.then.4931, label %if.end.4943

if.then.4931:                                     ; preds = %if.end.4929
  %2580 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4932 = getelementptr inbounds %struct.action, %struct.action* %2580, i32 0, i32 3
  %2581 = load i32, i32* %quiet4932, align 4
  %tobool4933 = icmp ne i32 %2581, 0
  br i1 %tobool4933, label %cond.false.4935, label %cond.true.4934

cond.true.4934:                                   ; preds = %if.then.4931
  br label %cond.end.4939

cond.false.4935:                                  ; preds = %if.then.4931
  %2582 = load i32, i32* @queryflag, align 4
  %cmp4936 = icmp sge i32 %2582, 0
  %cond4938 = select i1 %cmp4936, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4939

cond.end.4939:                                    ; preds = %cond.false.4935, %cond.true.4934
  %cond4940 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4934 ], [ %cond4938, %cond.false.4935 ]
  %2583 = load i8**, i8*** %args, align 8
  %arrayidx4941 = getelementptr inbounds i8*, i8** %2583, i64 0
  %2584 = load i8*, i8** %arrayidx4941, align 8
  %2585 = load i8**, i8*** %args, align 8
  %arrayidx4942 = getelementptr inbounds i8*, i8** %2585, i64 1
  %2586 = load i8*, i8** %arrayidx4942, align 8
  call void (i32, i8*, ...) %cond4940(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.205, i32 0, i32 0), i8* %2584, i8* %2586)
  br label %if.end.4943

if.end.4943:                                      ; preds = %cond.end.4939, %if.end.4929
  br label %if.end.4956

if.else.4944:                                     ; preds = %if.then.4919
  %2587 = load i8**, i8*** %args, align 8
  %arrayidx4946 = getelementptr inbounds i8*, i8** %2587, i64 0
  %2588 = load i8*, i8** %arrayidx4946, align 8
  %call4947 = call %struct.acluser** @FindUserPtr(i8* %2588)
  %2589 = load %struct.acluser*, %struct.acluser** %call4947, align 8
  store %struct.acluser* %2589, %struct.acluser** %u4945, align 8
  %tobool4948 = icmp ne %struct.acluser* %2589, null
  br i1 %tobool4948, label %if.end.4950, label %if.then.4949

if.then.4949:                                     ; preds = %if.else.4944
  br label %sw.epilog.7356

if.end.4950:                                      ; preds = %if.else.4944
  br label %while.cond.4951

while.cond.4951:                                  ; preds = %while.body.4953, %if.end.4950
  %2590 = load %struct.acluser*, %struct.acluser** %u4945, align 8
  %u_group = getelementptr inbounds %struct.acluser, %struct.acluser* %2590, i32 0, i32 11
  %2591 = load %struct.aclusergroup*, %struct.aclusergroup** %u_group, align 8
  store %struct.aclusergroup* %2591, %struct.aclusergroup** %g, align 8
  %tobool4952 = icmp ne %struct.aclusergroup* %2591, null
  br i1 %tobool4952, label %while.body.4953, label %while.end.4955

while.body.4953:                                  ; preds = %while.cond.4951
  %2592 = load %struct.aclusergroup*, %struct.aclusergroup** %g, align 8
  %next = getelementptr inbounds %struct.aclusergroup, %struct.aclusergroup* %2592, i32 0, i32 1
  %2593 = load %struct.aclusergroup*, %struct.aclusergroup** %next, align 8
  %2594 = load %struct.acluser*, %struct.acluser** %u4945, align 8
  %u_group4954 = getelementptr inbounds %struct.acluser, %struct.acluser* %2594, i32 0, i32 11
  store %struct.aclusergroup* %2593, %struct.aclusergroup** %u_group4954, align 8
  %2595 = load %struct.aclusergroup*, %struct.aclusergroup** %g, align 8
  %2596 = bitcast %struct.aclusergroup* %2595 to i8*
  call void @free(i8* %2596) #4
  br label %while.cond.4951

while.end.4955:                                   ; preds = %while.cond.4951
  br label %if.end.4956

if.end.4956:                                      ; preds = %while.end.4955, %if.end.4943
  br label %if.end.5024

if.else.4957:                                     ; preds = %sw.bb.4916
  %arraydecay4960 = getelementptr inbounds [256 x i8], [256 x i8]* %buf4958, i32 0, i32 0
  store i8* %arraydecay4960, i8** %p4959, align 8
  store i32 0, i32* %ngroups, align 4
  %2597 = load i8**, i8*** %args, align 8
  %arrayidx4963 = getelementptr inbounds i8*, i8** %2597, i64 0
  %2598 = load i8*, i8** %arrayidx4963, align 8
  %call4964 = call %struct.acluser** @FindUserPtr(i8* %2598)
  %2599 = load %struct.acluser*, %struct.acluser** %call4964, align 8
  store %struct.acluser* %2599, %struct.acluser** %u4961, align 8
  %tobool4965 = icmp ne %struct.acluser* %2599, null
  br i1 %tobool4965, label %if.end.4980, label %if.then.4966

if.then.4966:                                     ; preds = %if.else.4957
  %2600 = load i32, i32* %msgok, align 4
  %tobool4967 = icmp ne i32 %2600, 0
  br i1 %tobool4967, label %if.then.4968, label %if.end.4979

if.then.4968:                                     ; preds = %if.then.4966
  %2601 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet4969 = getelementptr inbounds %struct.action, %struct.action* %2601, i32 0, i32 3
  %2602 = load i32, i32* %quiet4969, align 4
  %tobool4970 = icmp ne i32 %2602, 0
  br i1 %tobool4970, label %cond.false.4972, label %cond.true.4971

cond.true.4971:                                   ; preds = %if.then.4968
  br label %cond.end.4976

cond.false.4972:                                  ; preds = %if.then.4968
  %2603 = load i32, i32* @queryflag, align 4
  %cmp4973 = icmp sge i32 %2603, 0
  %cond4975 = select i1 %cmp4973, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.4976

cond.end.4976:                                    ; preds = %cond.false.4972, %cond.true.4971
  %cond4977 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.4971 ], [ %cond4975, %cond.false.4972 ]
  %2604 = load i8**, i8*** %args, align 8
  %arrayidx4978 = getelementptr inbounds i8*, i8** %2604, i64 0
  %2605 = load i8*, i8** %arrayidx4978, align 8
  call void (i32, i8*, ...) %cond4977(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.206, i32 0, i32 0), i8* %2605)
  br label %if.end.4979

if.end.4979:                                      ; preds = %cond.end.4976, %if.then.4966
  br label %sw.epilog.7356

if.end.4980:                                      ; preds = %if.else.4957
  %2606 = load %struct.acluser*, %struct.acluser** %u4961, align 8
  %u_group4981 = getelementptr inbounds %struct.acluser, %struct.acluser* %2606, i32 0, i32 11
  %2607 = load %struct.aclusergroup*, %struct.aclusergroup** %u_group4981, align 8
  store %struct.aclusergroup* %2607, %struct.aclusergroup** %g4962, align 8
  br label %while.cond.4982

while.cond.4982:                                  ; preds = %if.end.4997, %if.end.4980
  %2608 = load %struct.aclusergroup*, %struct.aclusergroup** %g4962, align 8
  %tobool4983 = icmp ne %struct.aclusergroup* %2608, null
  br i1 %tobool4983, label %while.body.4984, label %while.end.4999

while.body.4984:                                  ; preds = %while.cond.4982
  %2609 = load i32, i32* %ngroups, align 4
  %inc4985 = add nsw i32 %2609, 1
  store i32 %inc4985, i32* %ngroups, align 4
  %2610 = load i8*, i8** %p4959, align 8
  %2611 = load %struct.aclusergroup*, %struct.aclusergroup** %g4962, align 8
  %u4986 = getelementptr inbounds %struct.aclusergroup, %struct.aclusergroup* %2611, i32 0, i32 0
  %2612 = load %struct.acluser*, %struct.acluser** %u4986, align 8
  %u_name4987 = getelementptr inbounds %struct.acluser, %struct.acluser* %2612, i32 0, i32 1
  %arraydecay4988 = getelementptr inbounds [257 x i8], [257 x i8]* %u_name4987, i32 0, i32 0
  %call4989 = call i32 (i8*, i8*, ...) @sprintf(i8* %2610, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.207, i32 0, i32 0), i8* %arraydecay4988) #4
  %2613 = load i8*, i8** %p4959, align 8
  %call4990 = call i64 @strlen(i8* %2613) #8
  %2614 = load i8*, i8** %p4959, align 8
  %add.ptr4991 = getelementptr inbounds i8, i8* %2614, i64 %call4990
  store i8* %add.ptr4991, i8** %p4959, align 8
  %2615 = load i8*, i8** %p4959, align 8
  %arraydecay4992 = getelementptr inbounds [256 x i8], [256 x i8]* %buf4958, i32 0, i32 0
  %add.ptr4993 = getelementptr inbounds i8, i8* %arraydecay4992, i64 200
  %cmp4994 = icmp ugt i8* %2615, %add.ptr4993
  br i1 %cmp4994, label %if.then.4996, label %if.end.4997

if.then.4996:                                     ; preds = %while.body.4984
  br label %while.end.4999

if.end.4997:                                      ; preds = %while.body.4984
  %2616 = load %struct.aclusergroup*, %struct.aclusergroup** %g4962, align 8
  %next4998 = getelementptr inbounds %struct.aclusergroup, %struct.aclusergroup* %2616, i32 0, i32 1
  %2617 = load %struct.aclusergroup*, %struct.aclusergroup** %next4998, align 8
  store %struct.aclusergroup* %2617, %struct.aclusergroup** %g4962, align 8
  br label %while.cond.4982

while.end.4999:                                   ; preds = %if.then.4996, %while.cond.4982
  %2618 = load i32, i32* %ngroups, align 4
  %tobool5000 = icmp ne i32 %2618, 0
  br i1 %tobool5000, label %if.then.5001, label %if.end.5003

if.then.5001:                                     ; preds = %while.end.4999
  %2619 = load i8*, i8** %p4959, align 8
  %incdec.ptr5002 = getelementptr inbounds i8, i8* %2619, i32 -1
  store i8* %incdec.ptr5002, i8** %p4959, align 8
  store i8 0, i8* %incdec.ptr5002, align 1
  br label %if.end.5003

if.end.5003:                                      ; preds = %if.then.5001, %while.end.4999
  %2620 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5004 = getelementptr inbounds %struct.action, %struct.action* %2620, i32 0, i32 3
  %2621 = load i32, i32* %quiet5004, align 4
  %tobool5005 = icmp ne i32 %2621, 0
  br i1 %tobool5005, label %cond.false.5007, label %cond.true.5006

cond.true.5006:                                   ; preds = %if.end.5003
  br label %cond.end.5011

cond.false.5007:                                  ; preds = %if.end.5003
  %2622 = load i32, i32* @queryflag, align 4
  %cmp5008 = icmp sge i32 %2622, 0
  %cond5010 = select i1 %cmp5008, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5011

cond.end.5011:                                    ; preds = %cond.false.5007, %cond.true.5006
  %cond5012 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5006 ], [ %cond5010, %cond.false.5007 ]
  %2623 = load i8**, i8*** %args, align 8
  %arrayidx5013 = getelementptr inbounds i8*, i8** %2623, i64 0
  %2624 = load i8*, i8** %arrayidx5013, align 8
  %2625 = load i32, i32* %ngroups, align 4
  %cmp5014 = icmp eq i32 %2625, 1
  %cond5016 = select i1 %cmp5014, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0)
  %2626 = load i32, i32* %ngroups, align 4
  %cmp5017 = icmp eq i32 %2626, 0
  br i1 %cmp5017, label %cond.true.5019, label %cond.false.5020

cond.true.5019:                                   ; preds = %cond.end.5011
  br label %cond.end.5022

cond.false.5020:                                  ; preds = %cond.end.5011
  %arraydecay5021 = getelementptr inbounds [256 x i8], [256 x i8]* %buf4958, i32 0, i32 0
  br label %cond.end.5022

cond.end.5022:                                    ; preds = %cond.false.5020, %cond.true.5019
  %cond5023 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.183, i32 0, i32 0), %cond.true.5019 ], [ %arraydecay5021, %cond.false.5020 ]
  call void (i32, i8*, ...) %cond5012(i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.208, i32 0, i32 0), i8* %2624, i8* %cond5016, i8* %cond5023)
  br label %if.end.5024

if.end.5024:                                      ; preds = %cond.end.5022, %if.end.4956
  br label %sw.epilog.7356

sw.bb.5025:                                       ; preds = %land.end, %land.end
  br label %while.cond.5026

while.cond.5026:                                  ; preds = %if.end.5048, %sw.bb.5025
  %2627 = load i8**, i8*** %args, align 8
  %incdec.ptr5027 = getelementptr inbounds i8*, i8** %2627, i32 1
  store i8** %incdec.ptr5027, i8*** %args, align 8
  %2628 = load i8*, i8** %2627, align 8
  store i8* %2628, i8** %s, align 8
  %tobool5028 = icmp ne i8* %2628, null
  br i1 %tobool5028, label %while.body.5029, label %while.end.5049

while.body.5029:                                  ; preds = %while.cond.5026
  store i8* null, i8** %err, align 8
  %2629 = load %struct.display*, %struct.display** @display, align 8
  %tobool5030 = icmp ne %struct.display* %2629, null
  br i1 %tobool5030, label %cond.true.5031, label %cond.false.5033

cond.true.5031:                                   ; preds = %while.body.5029
  %2630 = load %struct.display*, %struct.display** @display, align 8
  %d_user5032 = getelementptr inbounds %struct.display, %struct.display* %2630, i32 0, i32 1
  %2631 = load %struct.acluser*, %struct.acluser** %d_user5032, align 8
  br label %cond.end.5034

cond.false.5033:                                  ; preds = %while.body.5029
  %2632 = load %struct.acluser*, %struct.acluser** @users, align 8
  br label %cond.end.5034

cond.end.5034:                                    ; preds = %cond.false.5033, %cond.true.5031
  %cond5035 = phi %struct.acluser* [ %2631, %cond.true.5031 ], [ %2632, %cond.false.5033 ]
  %2633 = load i8*, i8** %s, align 8
  %call5036 = call i32 @AclUmask(%struct.acluser* %cond5035, i8* %2633, i8** %err)
  %tobool5037 = icmp ne i32 %call5036, 0
  br i1 %tobool5037, label %if.then.5038, label %if.end.5048

if.then.5038:                                     ; preds = %cond.end.5034
  %2634 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5039 = getelementptr inbounds %struct.action, %struct.action* %2634, i32 0, i32 3
  %2635 = load i32, i32* %quiet5039, align 4
  %tobool5040 = icmp ne i32 %2635, 0
  br i1 %tobool5040, label %cond.false.5042, label %cond.true.5041

cond.true.5041:                                   ; preds = %if.then.5038
  br label %cond.end.5046

cond.false.5042:                                  ; preds = %if.then.5038
  %2636 = load i32, i32* @queryflag, align 4
  %cmp5043 = icmp sge i32 %2636, 0
  %cond5045 = select i1 %cmp5043, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5046

cond.end.5046:                                    ; preds = %cond.false.5042, %cond.true.5041
  %cond5047 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5041 ], [ %cond5045, %cond.false.5042 ]
  %2637 = load i8*, i8** %err, align 8
  call void (i32, i8*, ...) %cond5047(i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.210, i32 0, i32 0), i8* %2637)
  br label %if.end.5048

if.end.5048:                                      ; preds = %cond.end.5046, %cond.end.5034
  br label %while.cond.5026

while.end.5049:                                   ; preds = %while.cond.5026
  br label %sw.epilog.7356

sw.bb.5050:                                       ; preds = %land.end
  %2638 = load %struct.action*, %struct.action** %act.addr, align 8
  %call5051 = call i32 @ParseOnOff(%struct.action* %2638, i32* %n)
  %tobool5052 = icmp ne i32 %call5051, 0
  br i1 %tobool5052, label %if.then.5053, label %if.end.5054

if.then.5053:                                     ; preds = %sw.bb.5050
  br label %sw.epilog.7356

if.end.5054:                                      ; preds = %sw.bb.5050
  %2639 = load i32, i32* %n, align 4
  %tobool5055 = icmp ne i32 %2639, 0
  %cond5056 = select i1 %tobool5055, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* null
  store i8* %cond5056, i8** @multi, align 8
  %call5057 = call i32 @chsock()
  %2640 = load i32, i32* %msgok, align 4
  %tobool5058 = icmp ne i32 %2640, 0
  br i1 %tobool5058, label %if.then.5059, label %if.end.5071

if.then.5059:                                     ; preds = %if.end.5054
  %2641 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5060 = getelementptr inbounds %struct.action, %struct.action* %2641, i32 0, i32 3
  %2642 = load i32, i32* %quiet5060, align 4
  %tobool5061 = icmp ne i32 %2642, 0
  br i1 %tobool5061, label %cond.false.5063, label %cond.true.5062

cond.true.5062:                                   ; preds = %if.then.5059
  br label %cond.end.5067

cond.false.5063:                                  ; preds = %if.then.5059
  %2643 = load i32, i32* @queryflag, align 4
  %cmp5064 = icmp sge i32 %2643, 0
  %cond5066 = select i1 %cmp5064, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5067

cond.end.5067:                                    ; preds = %cond.false.5063, %cond.true.5062
  %cond5068 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5062 ], [ %cond5066, %cond.false.5063 ]
  %2644 = load i8*, i8** @multi, align 8
  %tobool5069 = icmp ne i8* %2644, null
  %cond5070 = select i1 %tobool5069, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.213, i32 0, i32 0)
  call void (i32, i8*, ...) %cond5068(i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.211, i32 0, i32 0), i8* %cond5070)
  br label %if.end.5071

if.end.5071:                                      ; preds = %cond.end.5067, %if.end.5054
  br label %sw.epilog.7356

sw.bb.5072:                                       ; preds = %land.end
  %2645 = load i8**, i8*** %args, align 8
  %call5073 = call i32 @winexec(i8** %2645)
  br label %sw.epilog.7356

sw.bb.5074:                                       ; preds = %land.end
  %2646 = load %struct.display*, %struct.display** @display, align 8
  %d_nonblock = getelementptr inbounds %struct.display, %struct.display* %2646, i32 0, i32 12
  %2647 = load i32, i32* %d_nonblock, align 4
  %cmp5075 = icmp sge i32 %2647, 0
  %conv5076 = zext i1 %cmp5075 to i32
  store i32 %conv5076, i32* %i, align 4
  %2648 = load i8**, i8*** %args, align 8
  %2649 = load i8*, i8** %2648, align 8
  %tobool5077 = icmp ne i8* %2649, null
  br i1 %tobool5077, label %land.lhs.true.5078, label %if.else.5101

land.lhs.true.5078:                               ; preds = %sw.bb.5074
  %2650 = load i8**, i8*** %args, align 8
  %arrayidx5079 = getelementptr inbounds i8*, i8** %2650, i64 0
  %2651 = load i8*, i8** %arrayidx5079, align 8
  %arrayidx5080 = getelementptr inbounds i8, i8* %2651, i64 0
  %2652 = load i8, i8* %arrayidx5080, align 1
  %conv5081 = sext i8 %2652 to i32
  %cmp5082 = icmp sge i32 %conv5081, 48
  br i1 %cmp5082, label %land.lhs.true.5084, label %lor.lhs.false.5090

land.lhs.true.5084:                               ; preds = %land.lhs.true.5078
  %2653 = load i8**, i8*** %args, align 8
  %arrayidx5085 = getelementptr inbounds i8*, i8** %2653, i64 0
  %2654 = load i8*, i8** %arrayidx5085, align 8
  %arrayidx5086 = getelementptr inbounds i8, i8* %2654, i64 0
  %2655 = load i8, i8* %arrayidx5086, align 1
  %conv5087 = sext i8 %2655 to i32
  %cmp5088 = icmp sle i32 %conv5087, 57
  br i1 %cmp5088, label %if.then.5096, label %lor.lhs.false.5090

lor.lhs.false.5090:                               ; preds = %land.lhs.true.5084, %land.lhs.true.5078
  %2656 = load i8**, i8*** %args, align 8
  %arrayidx5091 = getelementptr inbounds i8*, i8** %2656, i64 0
  %2657 = load i8*, i8** %arrayidx5091, align 8
  %arrayidx5092 = getelementptr inbounds i8, i8* %2657, i64 0
  %2658 = load i8, i8* %arrayidx5092, align 1
  %conv5093 = sext i8 %2658 to i32
  %cmp5094 = icmp eq i32 %conv5093, 46
  br i1 %cmp5094, label %if.then.5096, label %if.else.5101

if.then.5096:                                     ; preds = %lor.lhs.false.5090, %land.lhs.true.5084
  %2659 = load %struct.action*, %struct.action** %act.addr, align 8
  %call5097 = call i32 @ParseNum1000(%struct.action* %2659, i32* %i)
  %tobool5098 = icmp ne i32 %call5097, 0
  br i1 %tobool5098, label %if.then.5099, label %if.end.5100

if.then.5099:                                     ; preds = %if.then.5096
  br label %sw.epilog.7356

if.end.5100:                                      ; preds = %if.then.5096
  br label %if.end.5110

if.else.5101:                                     ; preds = %lor.lhs.false.5090, %sw.bb.5074
  %2660 = load %struct.action*, %struct.action** %act.addr, align 8
  %call5102 = call i32 @ParseSwitch(%struct.action* %2660, i32* %i)
  %tobool5103 = icmp ne i32 %call5102, 0
  br i1 %tobool5103, label %if.else.5108, label %if.then.5104

if.then.5104:                                     ; preds = %if.else.5101
  %2661 = load i32, i32* %i, align 4
  %cmp5105 = icmp eq i32 %2661, 0
  %cond5107 = select i1 %cmp5105, i32 -1, i32 1000
  store i32 %cond5107, i32* %i, align 4
  br label %if.end.5109

if.else.5108:                                     ; preds = %if.else.5101
  br label %sw.epilog.7356

if.end.5109:                                      ; preds = %if.then.5104
  br label %if.end.5110

if.end.5110:                                      ; preds = %if.end.5109, %if.end.5100
  %2662 = load i32, i32* %msgok, align 4
  %tobool5111 = icmp ne i32 %2662, 0
  br i1 %tobool5111, label %land.lhs.true.5112, label %if.else.5125

land.lhs.true.5112:                               ; preds = %if.end.5110
  %2663 = load i32, i32* %i, align 4
  %cmp5113 = icmp eq i32 %2663, -1
  br i1 %cmp5113, label %if.then.5115, label %if.else.5125

if.then.5115:                                     ; preds = %land.lhs.true.5112
  %2664 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5116 = getelementptr inbounds %struct.action, %struct.action* %2664, i32 0, i32 3
  %2665 = load i32, i32* %quiet5116, align 4
  %tobool5117 = icmp ne i32 %2665, 0
  br i1 %tobool5117, label %cond.false.5119, label %cond.true.5118

cond.true.5118:                                   ; preds = %if.then.5115
  br label %cond.end.5123

cond.false.5119:                                  ; preds = %if.then.5115
  %2666 = load i32, i32* @queryflag, align 4
  %cmp5120 = icmp sge i32 %2666, 0
  %cond5122 = select i1 %cmp5120, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5123

cond.end.5123:                                    ; preds = %cond.false.5119, %cond.true.5118
  %cond5124 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5118 ], [ %cond5122, %cond.false.5119 ]
  call void (i32, i8*, ...) %cond5124(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.214, i32 0, i32 0))
  br label %if.end.5156

if.else.5125:                                     ; preds = %land.lhs.true.5112, %if.end.5110
  %2667 = load i32, i32* %msgok, align 4
  %tobool5126 = icmp ne i32 %2667, 0
  br i1 %tobool5126, label %land.lhs.true.5127, label %if.else.5140

land.lhs.true.5127:                               ; preds = %if.else.5125
  %2668 = load i32, i32* %i, align 4
  %cmp5128 = icmp eq i32 %2668, 0
  br i1 %cmp5128, label %if.then.5130, label %if.else.5140

if.then.5130:                                     ; preds = %land.lhs.true.5127
  %2669 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5131 = getelementptr inbounds %struct.action, %struct.action* %2669, i32 0, i32 3
  %2670 = load i32, i32* %quiet5131, align 4
  %tobool5132 = icmp ne i32 %2670, 0
  br i1 %tobool5132, label %cond.false.5134, label %cond.true.5133

cond.true.5133:                                   ; preds = %if.then.5130
  br label %cond.end.5138

cond.false.5134:                                  ; preds = %if.then.5130
  %2671 = load i32, i32* @queryflag, align 4
  %cmp5135 = icmp sge i32 %2671, 0
  %cond5137 = select i1 %cmp5135, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5138

cond.end.5138:                                    ; preds = %cond.false.5134, %cond.true.5133
  %cond5139 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5133 ], [ %cond5137, %cond.false.5134 ]
  call void (i32, i8*, ...) %cond5139(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.215, i32 0, i32 0))
  br label %if.end.5155

if.else.5140:                                     ; preds = %land.lhs.true.5127, %if.else.5125
  %2672 = load i32, i32* %msgok, align 4
  %tobool5141 = icmp ne i32 %2672, 0
  br i1 %tobool5141, label %if.then.5142, label %if.end.5154

if.then.5142:                                     ; preds = %if.else.5140
  %2673 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5143 = getelementptr inbounds %struct.action, %struct.action* %2673, i32 0, i32 3
  %2674 = load i32, i32* %quiet5143, align 4
  %tobool5144 = icmp ne i32 %2674, 0
  br i1 %tobool5144, label %cond.false.5146, label %cond.true.5145

cond.true.5145:                                   ; preds = %if.then.5142
  br label %cond.end.5150

cond.false.5146:                                  ; preds = %if.then.5142
  %2675 = load i32, i32* @queryflag, align 4
  %cmp5147 = icmp sge i32 %2675, 0
  %cond5149 = select i1 %cmp5147, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5150

cond.end.5150:                                    ; preds = %cond.false.5146, %cond.true.5145
  %cond5151 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5145 ], [ %cond5149, %cond.false.5146 ]
  %2676 = load i32, i32* %i, align 4
  %conv5152 = sitofp i32 %2676 to double
  %div5153 = fdiv double %conv5152, 1.000000e+03
  call void (i32, i8*, ...) %cond5151(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.216, i32 0, i32 0), double %div5153)
  br label %if.end.5154

if.end.5154:                                      ; preds = %cond.end.5150, %if.else.5140
  br label %if.end.5155

if.end.5155:                                      ; preds = %if.end.5154, %cond.end.5138
  br label %if.end.5156

if.end.5156:                                      ; preds = %if.end.5155, %cond.end.5123
  %2677 = load i32, i32* %i, align 4
  %2678 = load %struct.display*, %struct.display** @display, align 8
  %d_nonblock5157 = getelementptr inbounds %struct.display, %struct.display* %2678, i32 0, i32 12
  store i32 %2677, i32* %d_nonblock5157, align 4
  %2679 = load %struct.display*, %struct.display** @display, align 8
  %d_nonblock5158 = getelementptr inbounds %struct.display, %struct.display* %2679, i32 0, i32 12
  %2680 = load i32, i32* %d_nonblock5158, align 4
  %cmp5159 = icmp sle i32 %2680, 0
  br i1 %cmp5159, label %if.then.5161, label %if.end.5162

if.then.5161:                                     ; preds = %if.end.5156
  %2681 = load %struct.display*, %struct.display** @display, align 8
  %d_blockedev = getelementptr inbounds %struct.display, %struct.display* %2681, i32 0, i32 62
  call void @evdeq(%struct.event* %d_blockedev)
  br label %if.end.5162

if.end.5162:                                      ; preds = %if.then.5161, %if.end.5156
  br label %sw.epilog.7356

sw.bb.5163:                                       ; preds = %land.end
  %2682 = load i8**, i8*** %args, align 8
  %2683 = load i8*, i8** %2682, align 8
  %tobool5164 = icmp ne i8* %2683, null
  br i1 %tobool5164, label %land.lhs.true.5165, label %if.else.5188

land.lhs.true.5165:                               ; preds = %sw.bb.5163
  %2684 = load i8**, i8*** %args, align 8
  %arrayidx5166 = getelementptr inbounds i8*, i8** %2684, i64 0
  %2685 = load i8*, i8** %arrayidx5166, align 8
  %arrayidx5167 = getelementptr inbounds i8, i8* %2685, i64 0
  %2686 = load i8, i8* %arrayidx5167, align 1
  %conv5168 = sext i8 %2686 to i32
  %cmp5169 = icmp sge i32 %conv5168, 48
  br i1 %cmp5169, label %land.lhs.true.5171, label %lor.lhs.false.5177

land.lhs.true.5171:                               ; preds = %land.lhs.true.5165
  %2687 = load i8**, i8*** %args, align 8
  %arrayidx5172 = getelementptr inbounds i8*, i8** %2687, i64 0
  %2688 = load i8*, i8** %arrayidx5172, align 8
  %arrayidx5173 = getelementptr inbounds i8, i8* %2688, i64 0
  %2689 = load i8, i8* %arrayidx5173, align 1
  %conv5174 = sext i8 %2689 to i32
  %cmp5175 = icmp sle i32 %conv5174, 57
  br i1 %cmp5175, label %if.then.5183, label %lor.lhs.false.5177

lor.lhs.false.5177:                               ; preds = %land.lhs.true.5171, %land.lhs.true.5165
  %2690 = load i8**, i8*** %args, align 8
  %arrayidx5178 = getelementptr inbounds i8*, i8** %2690, i64 0
  %2691 = load i8*, i8** %arrayidx5178, align 8
  %arrayidx5179 = getelementptr inbounds i8, i8* %2691, i64 0
  %2692 = load i8, i8* %arrayidx5179, align 1
  %conv5180 = sext i8 %2692 to i32
  %cmp5181 = icmp eq i32 %conv5180, 46
  br i1 %cmp5181, label %if.then.5183, label %if.else.5188

if.then.5183:                                     ; preds = %lor.lhs.false.5177, %land.lhs.true.5171
  %2693 = load %struct.action*, %struct.action** %act.addr, align 8
  %call5184 = call i32 @ParseNum1000(%struct.action* %2693, i32* @defnonblock)
  %tobool5185 = icmp ne i32 %call5184, 0
  br i1 %tobool5185, label %if.then.5186, label %if.end.5187

if.then.5186:                                     ; preds = %if.then.5183
  br label %sw.epilog.7356

if.end.5187:                                      ; preds = %if.then.5183
  br label %if.end.5197

if.else.5188:                                     ; preds = %lor.lhs.false.5177, %sw.bb.5163
  %2694 = load %struct.action*, %struct.action** %act.addr, align 8
  %call5189 = call i32 @ParseOnOff(%struct.action* %2694, i32* @defnonblock)
  %tobool5190 = icmp ne i32 %call5189, 0
  br i1 %tobool5190, label %if.else.5195, label %if.then.5191

if.then.5191:                                     ; preds = %if.else.5188
  %2695 = load i32, i32* @defnonblock, align 4
  %cmp5192 = icmp eq i32 %2695, 0
  %cond5194 = select i1 %cmp5192, i32 -1, i32 1000
  store i32 %cond5194, i32* @defnonblock, align 4
  br label %if.end.5196

if.else.5195:                                     ; preds = %if.else.5188
  br label %sw.epilog.7356

if.end.5196:                                      ; preds = %if.then.5191
  br label %if.end.5197

if.end.5197:                                      ; preds = %if.end.5196, %if.end.5187
  %2696 = load %struct.display*, %struct.display** @display, align 8
  %tobool5198 = icmp ne %struct.display* %2696, null
  br i1 %tobool5198, label %land.lhs.true.5199, label %if.end.5210

land.lhs.true.5199:                               ; preds = %if.end.5197
  %2697 = load i8*, i8** @rc_name, align 8
  %2698 = load i8, i8* %2697, align 1
  %conv5200 = sext i8 %2698 to i32
  %tobool5201 = icmp ne i32 %conv5200, 0
  br i1 %tobool5201, label %if.then.5202, label %if.end.5210

if.then.5202:                                     ; preds = %land.lhs.true.5199
  %2699 = load i32, i32* @defnonblock, align 4
  %2700 = load %struct.display*, %struct.display** @display, align 8
  %d_nonblock5203 = getelementptr inbounds %struct.display, %struct.display* %2700, i32 0, i32 12
  store i32 %2699, i32* %d_nonblock5203, align 4
  %2701 = load %struct.display*, %struct.display** @display, align 8
  %d_nonblock5204 = getelementptr inbounds %struct.display, %struct.display* %2701, i32 0, i32 12
  %2702 = load i32, i32* %d_nonblock5204, align 4
  %cmp5205 = icmp sle i32 %2702, 0
  br i1 %cmp5205, label %if.then.5207, label %if.end.5209

if.then.5207:                                     ; preds = %if.then.5202
  %2703 = load %struct.display*, %struct.display** @display, align 8
  %d_blockedev5208 = getelementptr inbounds %struct.display, %struct.display* %2703, i32 0, i32 62
  call void @evdeq(%struct.event* %d_blockedev5208)
  br label %if.end.5209

if.end.5209:                                      ; preds = %if.then.5207, %if.then.5202
  br label %if.end.5210

if.end.5210:                                      ; preds = %if.end.5209, %land.lhs.true.5199, %if.end.5197
  br label %sw.epilog.7356

sw.bb.5211:                                       ; preds = %land.end
  %2704 = load %struct.win*, %struct.win** @fore, align 8
  %w_gr = getelementptr inbounds %struct.win, %struct.win* %2704, i32 0, i32 58
  %2705 = load i32, i32* %w_gr, align 4
  %cmp5212 = icmp eq i32 %2705, 2
  br i1 %cmp5212, label %if.then.5214, label %if.end.5216

if.then.5214:                                     ; preds = %sw.bb.5211
  %2706 = load %struct.win*, %struct.win** @fore, align 8
  %w_gr5215 = getelementptr inbounds %struct.win, %struct.win* %2706, i32 0, i32 58
  store i32 0, i32* %w_gr5215, align 4
  br label %if.end.5216

if.end.5216:                                      ; preds = %if.then.5214, %sw.bb.5211
  %2707 = load %struct.action*, %struct.action** %act.addr, align 8
  %2708 = load %struct.win*, %struct.win** @fore, align 8
  %w_gr5217 = getelementptr inbounds %struct.win, %struct.win* %2708, i32 0, i32 58
  %call5218 = call i32 @ParseSwitch(%struct.action* %2707, i32* %w_gr5217)
  %cmp5219 = icmp eq i32 %call5218, 0
  br i1 %cmp5219, label %land.lhs.true.5221, label %if.end.5236

land.lhs.true.5221:                               ; preds = %if.end.5216
  %2709 = load i32, i32* %msgok, align 4
  %tobool5222 = icmp ne i32 %2709, 0
  br i1 %tobool5222, label %if.then.5223, label %if.end.5236

if.then.5223:                                     ; preds = %land.lhs.true.5221
  %2710 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5224 = getelementptr inbounds %struct.action, %struct.action* %2710, i32 0, i32 3
  %2711 = load i32, i32* %quiet5224, align 4
  %tobool5225 = icmp ne i32 %2711, 0
  br i1 %tobool5225, label %cond.false.5227, label %cond.true.5226

cond.true.5226:                                   ; preds = %if.then.5223
  br label %cond.end.5231

cond.false.5227:                                  ; preds = %if.then.5223
  %2712 = load i32, i32* @queryflag, align 4
  %cmp5228 = icmp sge i32 %2712, 0
  %cond5230 = select i1 %cmp5228, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5231

cond.end.5231:                                    ; preds = %cond.false.5227, %cond.true.5226
  %cond5232 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5226 ], [ %cond5230, %cond.false.5227 ]
  %2713 = load %struct.win*, %struct.win** @fore, align 8
  %w_gr5233 = getelementptr inbounds %struct.win, %struct.win* %2713, i32 0, i32 58
  %2714 = load i32, i32* %w_gr5233, align 4
  %tobool5234 = icmp ne i32 %2714, 0
  %cond5235 = select i1 %tobool5234, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond5232(i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.217, i32 0, i32 0), i8* %cond5235)
  br label %if.end.5236

if.end.5236:                                      ; preds = %cond.end.5231, %land.lhs.true.5221, %if.end.5216
  %2715 = load %struct.win*, %struct.win** @fore, align 8
  %w_gr5237 = getelementptr inbounds %struct.win, %struct.win* %2715, i32 0, i32 58
  %2716 = load i32, i32* %w_gr5237, align 4
  %cmp5238 = icmp eq i32 %2716, 0
  br i1 %cmp5238, label %land.lhs.true.5240, label %if.end.5245

land.lhs.true.5240:                               ; preds = %if.end.5236
  %2717 = load %struct.win*, %struct.win** @fore, align 8
  %w_FontE = getelementptr inbounds %struct.win, %struct.win* %2717, i32 0, i32 40
  %2718 = load i8, i8* %w_FontE, align 1
  %conv5241 = sext i8 %2718 to i32
  %tobool5242 = icmp ne i32 %conv5241, 0
  br i1 %tobool5242, label %if.then.5243, label %if.end.5245

if.then.5243:                                     ; preds = %land.lhs.true.5240
  %2719 = load %struct.win*, %struct.win** @fore, align 8
  %w_gr5244 = getelementptr inbounds %struct.win, %struct.win* %2719, i32 0, i32 58
  store i32 2, i32* %w_gr5244, align 4
  br label %if.end.5245

if.end.5245:                                      ; preds = %if.then.5243, %land.lhs.true.5240, %if.end.5236
  br label %sw.epilog.7356

sw.bb.5246:                                       ; preds = %land.end
  %2720 = load %struct.action*, %struct.action** %act.addr, align 8
  %2721 = load %struct.win*, %struct.win** @fore, align 8
  %w_c1 = getelementptr inbounds %struct.win, %struct.win* %2721, i32 0, i32 59
  %call5247 = call i32 @ParseSwitch(%struct.action* %2720, i32* %w_c1)
  %cmp5248 = icmp eq i32 %call5247, 0
  br i1 %cmp5248, label %land.lhs.true.5250, label %if.end.5265

land.lhs.true.5250:                               ; preds = %sw.bb.5246
  %2722 = load i32, i32* %msgok, align 4
  %tobool5251 = icmp ne i32 %2722, 0
  br i1 %tobool5251, label %if.then.5252, label %if.end.5265

if.then.5252:                                     ; preds = %land.lhs.true.5250
  %2723 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5253 = getelementptr inbounds %struct.action, %struct.action* %2723, i32 0, i32 3
  %2724 = load i32, i32* %quiet5253, align 4
  %tobool5254 = icmp ne i32 %2724, 0
  br i1 %tobool5254, label %cond.false.5256, label %cond.true.5255

cond.true.5255:                                   ; preds = %if.then.5252
  br label %cond.end.5260

cond.false.5256:                                  ; preds = %if.then.5252
  %2725 = load i32, i32* @queryflag, align 4
  %cmp5257 = icmp sge i32 %2725, 0
  %cond5259 = select i1 %cmp5257, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5260

cond.end.5260:                                    ; preds = %cond.false.5256, %cond.true.5255
  %cond5261 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5255 ], [ %cond5259, %cond.false.5256 ]
  %2726 = load %struct.win*, %struct.win** @fore, align 8
  %w_c15262 = getelementptr inbounds %struct.win, %struct.win* %2726, i32 0, i32 59
  %2727 = load i32, i32* %w_c15262, align 4
  %tobool5263 = icmp ne i32 %2727, 0
  %cond5264 = select i1 %tobool5263, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond5261(i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.218, i32 0, i32 0), i8* %cond5264)
  br label %if.end.5265

if.end.5265:                                      ; preds = %cond.end.5260, %land.lhs.true.5250, %sw.bb.5246
  br label %sw.epilog.7356

sw.bb.5266:                                       ; preds = %land.end
  %2728 = load %struct.action*, %struct.action** %act.addr, align 8
  %2729 = load %struct.win*, %struct.win** @fore, align 8
  %w_bce = getelementptr inbounds %struct.win, %struct.win* %2729, i32 0, i32 60
  %call5267 = call i32 @ParseSwitch(%struct.action* %2728, i32* %w_bce)
  %cmp5268 = icmp eq i32 %call5267, 0
  br i1 %cmp5268, label %land.lhs.true.5270, label %if.end.5285

land.lhs.true.5270:                               ; preds = %sw.bb.5266
  %2730 = load i32, i32* %msgok, align 4
  %tobool5271 = icmp ne i32 %2730, 0
  br i1 %tobool5271, label %if.then.5272, label %if.end.5285

if.then.5272:                                     ; preds = %land.lhs.true.5270
  %2731 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5273 = getelementptr inbounds %struct.action, %struct.action* %2731, i32 0, i32 3
  %2732 = load i32, i32* %quiet5273, align 4
  %tobool5274 = icmp ne i32 %2732, 0
  br i1 %tobool5274, label %cond.false.5276, label %cond.true.5275

cond.true.5275:                                   ; preds = %if.then.5272
  br label %cond.end.5280

cond.false.5276:                                  ; preds = %if.then.5272
  %2733 = load i32, i32* @queryflag, align 4
  %cmp5277 = icmp sge i32 %2733, 0
  %cond5279 = select i1 %cmp5277, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5280

cond.end.5280:                                    ; preds = %cond.false.5276, %cond.true.5275
  %cond5281 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5275 ], [ %cond5279, %cond.false.5276 ]
  %2734 = load %struct.win*, %struct.win** @fore, align 8
  %w_bce5282 = getelementptr inbounds %struct.win, %struct.win* %2734, i32 0, i32 60
  %2735 = load i32, i32* %w_bce5282, align 4
  %tobool5283 = icmp ne i32 %2735, 0
  %cond5284 = select i1 %tobool5283, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond5281(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.219, i32 0, i32 0), i8* %cond5284)
  br label %if.end.5285

if.end.5285:                                      ; preds = %cond.end.5280, %land.lhs.true.5270, %sw.bb.5266
  br label %sw.epilog.7356

sw.bb.5286:                                       ; preds = %land.end, %land.end
  %2736 = load i8**, i8*** %args, align 8
  %2737 = load i8*, i8** %2736, align 8
  %tobool5287 = icmp ne i8* %2737, null
  br i1 %tobool5287, label %land.lhs.true.5288, label %if.end.5314

land.lhs.true.5288:                               ; preds = %sw.bb.5286
  %2738 = load i8**, i8*** %args, align 8
  %arrayidx5289 = getelementptr inbounds i8*, i8** %2738, i64 0
  %2739 = load i8*, i8** %arrayidx5289, align 8
  %call5290 = call i32 @strcmp(i8* %2739, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i32 0, i32 0)) #8
  %tobool5291 = icmp ne i32 %call5290, 0
  br i1 %tobool5291, label %if.end.5314, label %if.then.5292

if.then.5292:                                     ; preds = %land.lhs.true.5288
  %2740 = load i8**, i8*** %args, align 8
  %arrayidx5293 = getelementptr inbounds i8*, i8** %2740, i64 1
  %2741 = load i8*, i8** %arrayidx5293, align 8
  %tobool5294 = icmp ne i8* %2741, null
  br i1 %tobool5294, label %if.else.5310, label %if.then.5295

if.then.5295:                                     ; preds = %if.then.5292
  %2742 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5296 = getelementptr inbounds %struct.action, %struct.action* %2742, i32 0, i32 3
  %2743 = load i32, i32* %quiet5296, align 4
  %tobool5297 = icmp ne i32 %2743, 0
  br i1 %tobool5297, label %cond.false.5299, label %cond.true.5298

cond.true.5298:                                   ; preds = %if.then.5295
  br label %cond.end.5303

cond.false.5299:                                  ; preds = %if.then.5295
  %2744 = load i32, i32* @queryflag, align 4
  %cmp5300 = icmp sge i32 %2744, 0
  %cond5302 = select i1 %cmp5300, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5303

cond.end.5303:                                    ; preds = %cond.false.5299, %cond.true.5298
  %cond5304 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5298 ], [ %cond5302, %cond.false.5299 ]
  %2745 = load i8*, i8** @screenencodings, align 8
  %tobool5305 = icmp ne i8* %2745, null
  br i1 %tobool5305, label %cond.true.5306, label %cond.false.5307

cond.true.5306:                                   ; preds = %cond.end.5303
  %2746 = load i8*, i8** @screenencodings, align 8
  br label %cond.end.5308

cond.false.5307:                                  ; preds = %cond.end.5303
  br label %cond.end.5308

cond.end.5308:                                    ; preds = %cond.false.5307, %cond.true.5306
  %cond5309 = phi i8* [ %2746, %cond.true.5306 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.221, i32 0, i32 0), %cond.false.5307 ]
  call void (i32, i8*, ...) %cond5304(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.220, i32 0, i32 0), i8* %cond5309)
  br label %if.end.5313

if.else.5310:                                     ; preds = %if.then.5292
  %2747 = load i8*, i8** @screenencodings, align 8
  call void @free(i8* %2747) #4
  %2748 = load i8**, i8*** %args, align 8
  %arrayidx5311 = getelementptr inbounds i8*, i8** %2748, i64 1
  %2749 = load i8*, i8** %arrayidx5311, align 8
  %call5312 = call i8* @SaveStr(i8* %2749)
  store i8* %call5312, i8** @screenencodings, align 8
  br label %if.end.5313

if.end.5313:                                      ; preds = %if.else.5310, %cond.end.5308
  br label %sw.epilog.7356

if.end.5314:                                      ; preds = %land.lhs.true.5288, %sw.bb.5286
  %2750 = load i8**, i8*** %args, align 8
  %2751 = load i8*, i8** %2750, align 8
  %tobool5315 = icmp ne i8* %2751, null
  br i1 %tobool5315, label %land.lhs.true.5316, label %if.end.5362

land.lhs.true.5316:                               ; preds = %if.end.5314
  %2752 = load i8**, i8*** %args, align 8
  %arrayidx5317 = getelementptr inbounds i8*, i8** %2752, i64 0
  %2753 = load i8*, i8** %arrayidx5317, align 8
  %call5318 = call i32 @strcmp(i8* %2753, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.222, i32 0, i32 0)) #8
  %tobool5319 = icmp ne i32 %call5318, 0
  br i1 %tobool5319, label %if.end.5362, label %if.then.5320

if.then.5320:                                     ; preds = %land.lhs.true.5316
  %2754 = load i8**, i8*** %args, align 8
  %arrayidx5321 = getelementptr inbounds i8*, i8** %2754, i64 1
  %2755 = load i8*, i8** %arrayidx5321, align 8
  %tobool5322 = icmp ne i8* %2755, null
  br i1 %tobool5322, label %if.else.5333, label %if.then.5323

if.then.5323:                                     ; preds = %if.then.5320
  %2756 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5324 = getelementptr inbounds %struct.action, %struct.action* %2756, i32 0, i32 3
  %2757 = load i32, i32* %quiet5324, align 4
  %tobool5325 = icmp ne i32 %2757, 0
  br i1 %tobool5325, label %cond.false.5327, label %cond.true.5326

cond.true.5326:                                   ; preds = %if.then.5323
  br label %cond.end.5331

cond.false.5327:                                  ; preds = %if.then.5323
  %2758 = load i32, i32* @queryflag, align 4
  %cmp5328 = icmp sge i32 %2758, 0
  %cond5330 = select i1 %cmp5328, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5331

cond.end.5331:                                    ; preds = %cond.false.5327, %cond.true.5326
  %cond5332 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5326 ], [ %cond5330, %cond.false.5327 ]
  call void (i32, i8*, ...) %cond5332(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.223, i32 0, i32 0))
  br label %if.end.5361

if.else.5333:                                     ; preds = %if.then.5320
  %2759 = load i8**, i8*** %args, align 8
  %arrayidx5334 = getelementptr inbounds i8*, i8** %2759, i64 1
  %2760 = load i8*, i8** %arrayidx5334, align 8
  %call5335 = call i32 @LoadFontTranslation(i32 -1, i8* %2760)
  %tobool5336 = icmp ne i32 %call5335, 0
  br i1 %tobool5336, label %if.then.5337, label %if.else.5347

if.then.5337:                                     ; preds = %if.else.5333
  %2761 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5338 = getelementptr inbounds %struct.action, %struct.action* %2761, i32 0, i32 3
  %2762 = load i32, i32* %quiet5338, align 4
  %tobool5339 = icmp ne i32 %2762, 0
  br i1 %tobool5339, label %cond.false.5341, label %cond.true.5340

cond.true.5340:                                   ; preds = %if.then.5337
  br label %cond.end.5345

cond.false.5341:                                  ; preds = %if.then.5337
  %2763 = load i32, i32* @queryflag, align 4
  %cmp5342 = icmp sge i32 %2763, 0
  %cond5344 = select i1 %cmp5342, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5345

cond.end.5345:                                    ; preds = %cond.false.5341, %cond.true.5340
  %cond5346 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5340 ], [ %cond5344, %cond.false.5341 ]
  call void (i32, i8*, ...) %cond5346(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.224, i32 0, i32 0))
  br label %if.end.5360

if.else.5347:                                     ; preds = %if.else.5333
  %2764 = load i32, i32* %msgok, align 4
  %tobool5348 = icmp ne i32 %2764, 0
  br i1 %tobool5348, label %if.then.5349, label %if.end.5359

if.then.5349:                                     ; preds = %if.else.5347
  %2765 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5350 = getelementptr inbounds %struct.action, %struct.action* %2765, i32 0, i32 3
  %2766 = load i32, i32* %quiet5350, align 4
  %tobool5351 = icmp ne i32 %2766, 0
  br i1 %tobool5351, label %cond.false.5353, label %cond.true.5352

cond.true.5352:                                   ; preds = %if.then.5349
  br label %cond.end.5357

cond.false.5353:                                  ; preds = %if.then.5349
  %2767 = load i32, i32* @queryflag, align 4
  %cmp5354 = icmp sge i32 %2767, 0
  %cond5356 = select i1 %cmp5354, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5357

cond.end.5357:                                    ; preds = %cond.false.5353, %cond.true.5352
  %cond5358 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5352 ], [ %cond5356, %cond.false.5353 ]
  call void (i32, i8*, ...) %cond5358(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.225, i32 0, i32 0))
  br label %if.end.5359

if.end.5359:                                      ; preds = %cond.end.5357, %if.else.5347
  br label %if.end.5360

if.end.5360:                                      ; preds = %if.end.5359, %cond.end.5345
  br label %if.end.5361

if.end.5361:                                      ; preds = %if.end.5360, %cond.end.5331
  br label %sw.epilog.7356

if.end.5362:                                      ; preds = %land.lhs.true.5316, %if.end.5314
  store i32 0, i32* %i, align 4
  br label %for.cond.5363

for.cond.5363:                                    ; preds = %for.inc.5410, %if.end.5362
  %2768 = load i32, i32* %i, align 4
  %cmp5364 = icmp slt i32 %2768, 2
  br i1 %cmp5364, label %for.body.5366, label %for.end.5412

for.body.5366:                                    ; preds = %for.cond.5363
  %2769 = load i32, i32* %i, align 4
  %idxprom5367 = sext i32 %2769 to i64
  %2770 = load i8**, i8*** %args, align 8
  %arrayidx5368 = getelementptr inbounds i8*, i8** %2770, i64 %idxprom5367
  %2771 = load i8*, i8** %arrayidx5368, align 8
  %cmp5369 = icmp eq i8* %2771, null
  br i1 %cmp5369, label %if.then.5371, label %if.end.5372

if.then.5371:                                     ; preds = %for.body.5366
  br label %for.end.5412

if.end.5372:                                      ; preds = %for.body.5366
  %2772 = load i32, i32* %i, align 4
  %idxprom5373 = sext i32 %2772 to i64
  %2773 = load i8**, i8*** %args, align 8
  %arrayidx5374 = getelementptr inbounds i8*, i8** %2773, i64 %idxprom5373
  %2774 = load i8*, i8** %arrayidx5374, align 8
  %call5375 = call i32 @strcmp(i8* %2774, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0)) #8
  %tobool5376 = icmp ne i32 %call5375, 0
  br i1 %tobool5376, label %if.end.5378, label %if.then.5377

if.then.5377:                                     ; preds = %if.end.5372
  br label %for.inc.5410

if.end.5378:                                      ; preds = %if.end.5372
  %2775 = load i32, i32* %i, align 4
  %idxprom5379 = sext i32 %2775 to i64
  %2776 = load i8**, i8*** %args, align 8
  %arrayidx5380 = getelementptr inbounds i8*, i8** %2776, i64 %idxprom5379
  %2777 = load i8*, i8** %arrayidx5380, align 8
  %call5381 = call i32 @FindEncoding(i8* %2777)
  store i32 %call5381, i32* %n, align 4
  %2778 = load i32, i32* %n, align 4
  %cmp5382 = icmp eq i32 %2778, -1
  br i1 %cmp5382, label %if.then.5384, label %if.end.5396

if.then.5384:                                     ; preds = %if.end.5378
  %2779 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5385 = getelementptr inbounds %struct.action, %struct.action* %2779, i32 0, i32 3
  %2780 = load i32, i32* %quiet5385, align 4
  %tobool5386 = icmp ne i32 %2780, 0
  br i1 %tobool5386, label %cond.false.5388, label %cond.true.5387

cond.true.5387:                                   ; preds = %if.then.5384
  br label %cond.end.5392

cond.false.5388:                                  ; preds = %if.then.5384
  %2781 = load i32, i32* @queryflag, align 4
  %cmp5389 = icmp sge i32 %2781, 0
  %cond5391 = select i1 %cmp5389, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5392

cond.end.5392:                                    ; preds = %cond.false.5388, %cond.true.5387
  %cond5393 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5387 ], [ %cond5391, %cond.false.5388 ]
  %2782 = load i32, i32* %i, align 4
  %idxprom5394 = sext i32 %2782 to i64
  %2783 = load i8**, i8*** %args, align 8
  %arrayidx5395 = getelementptr inbounds i8*, i8** %2783, i64 %idxprom5394
  %2784 = load i8*, i8** %arrayidx5395, align 8
  call void (i32, i8*, ...) %cond5393(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.226, i32 0, i32 0), i8* %2784)
  br label %for.end.5412

if.end.5396:                                      ; preds = %if.end.5378
  %2785 = load i32, i32* %i, align 4
  %cmp5397 = icmp eq i32 %2785, 0
  br i1 %cmp5397, label %land.lhs.true.5399, label %if.else.5402

land.lhs.true.5399:                               ; preds = %if.end.5396
  %2786 = load %struct.win*, %struct.win** @fore, align 8
  %tobool5400 = icmp ne %struct.win* %2786, null
  br i1 %tobool5400, label %if.then.5401, label %if.else.5402

if.then.5401:                                     ; preds = %land.lhs.true.5399
  %2787 = load %struct.win*, %struct.win** @fore, align 8
  %2788 = load i32, i32* %n, align 4
  call void @WinSwitchEncoding(%struct.win* %2787, i32 %2788)
  %2789 = load %struct.win*, %struct.win** @fore, align 8
  call void @ResetCharsets(%struct.win* %2789)
  br label %if.end.5409

if.else.5402:                                     ; preds = %land.lhs.true.5399, %if.end.5396
  %2790 = load i32, i32* %i, align 4
  %tobool5403 = icmp ne i32 %2790, 0
  br i1 %tobool5403, label %land.lhs.true.5404, label %if.end.5408

land.lhs.true.5404:                               ; preds = %if.else.5402
  %2791 = load %struct.display*, %struct.display** @display, align 8
  %tobool5405 = icmp ne %struct.display* %2791, null
  br i1 %tobool5405, label %if.then.5406, label %if.end.5408

if.then.5406:                                     ; preds = %land.lhs.true.5404
  %2792 = load i32, i32* %n, align 4
  %2793 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding5407 = getelementptr inbounds %struct.display, %struct.display* %2793, i32 0, i32 28
  store i32 %2792, i32* %d_encoding5407, align 4
  br label %if.end.5408

if.end.5408:                                      ; preds = %if.then.5406, %land.lhs.true.5404, %if.else.5402
  br label %if.end.5409

if.end.5409:                                      ; preds = %if.end.5408, %if.then.5401
  br label %for.inc.5410

for.inc.5410:                                     ; preds = %if.end.5409, %if.then.5377
  %2794 = load i32, i32* %i, align 4
  %inc5411 = add nsw i32 %2794, 1
  store i32 %inc5411, i32* %i, align 4
  br label %for.cond.5363

for.end.5412:                                     ; preds = %cond.end.5392, %if.then.5371, %for.cond.5363
  br label %sw.epilog.7356

sw.bb.5413:                                       ; preds = %land.end, %land.end
  %2795 = load i8**, i8*** %args, align 8
  %2796 = load i8*, i8** %2795, align 8
  %call5414 = call i32 @FindEncoding(i8* %2796)
  store i32 %call5414, i32* %n, align 4
  %2797 = load i32, i32* %n, align 4
  %cmp5415 = icmp eq i32 %2797, -1
  br i1 %cmp5415, label %if.then.5417, label %if.end.5427

if.then.5417:                                     ; preds = %sw.bb.5413
  %2798 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5418 = getelementptr inbounds %struct.action, %struct.action* %2798, i32 0, i32 3
  %2799 = load i32, i32* %quiet5418, align 4
  %tobool5419 = icmp ne i32 %2799, 0
  br i1 %tobool5419, label %cond.false.5421, label %cond.true.5420

cond.true.5420:                                   ; preds = %if.then.5417
  br label %cond.end.5425

cond.false.5421:                                  ; preds = %if.then.5417
  %2800 = load i32, i32* @queryflag, align 4
  %cmp5422 = icmp sge i32 %2800, 0
  %cond5424 = select i1 %cmp5422, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5425

cond.end.5425:                                    ; preds = %cond.false.5421, %cond.true.5420
  %cond5426 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5420 ], [ %cond5424, %cond.false.5421 ]
  %2801 = load i8**, i8*** %args, align 8
  %2802 = load i8*, i8** %2801, align 8
  call void (i32, i8*, ...) %cond5426(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.227, i32 0, i32 0), i8* %2802)
  br label %sw.epilog.7356

if.end.5427:                                      ; preds = %sw.bb.5413
  %2803 = load i32, i32* %n, align 4
  store i32 %2803, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 18), align 4
  br label %sw.epilog.7356

sw.bb.5428:                                       ; preds = %land.end
  %2804 = load i32, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 18), align 4
  %cmp5429 = icmp eq i32 %2804, 8
  %conv5430 = zext i1 %cmp5429 to i32
  store i32 %conv5430, i32* %n, align 4
  %2805 = load %struct.action*, %struct.action** %act.addr, align 8
  %call5431 = call i32 @ParseSwitch(%struct.action* %2805, i32* %n)
  %cmp5432 = icmp eq i32 %call5431, 0
  br i1 %cmp5432, label %if.then.5434, label %if.end.5451

if.then.5434:                                     ; preds = %sw.bb.5428
  %2806 = load i32, i32* %n, align 4
  %tobool5435 = icmp ne i32 %2806, 0
  %cond5436 = select i1 %tobool5435, i32 8, i32 0
  store i32 %cond5436, i32* getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 18), align 4
  %2807 = load i32, i32* %msgok, align 4
  %tobool5437 = icmp ne i32 %2807, 0
  br i1 %tobool5437, label %if.then.5438, label %if.end.5450

if.then.5438:                                     ; preds = %if.then.5434
  %2808 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5439 = getelementptr inbounds %struct.action, %struct.action* %2808, i32 0, i32 3
  %2809 = load i32, i32* %quiet5439, align 4
  %tobool5440 = icmp ne i32 %2809, 0
  br i1 %tobool5440, label %cond.false.5442, label %cond.true.5441

cond.true.5441:                                   ; preds = %if.then.5438
  br label %cond.end.5446

cond.false.5442:                                  ; preds = %if.then.5438
  %2810 = load i32, i32* @queryflag, align 4
  %cmp5443 = icmp sge i32 %2810, 0
  %cond5445 = select i1 %cmp5443, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5446

cond.end.5446:                                    ; preds = %cond.false.5442, %cond.true.5441
  %cond5447 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5441 ], [ %cond5445, %cond.false.5442 ]
  %2811 = load i32, i32* %n, align 4
  %tobool5448 = icmp ne i32 %2811, 0
  %cond5449 = select i1 %tobool5448, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond5447(i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.228, i32 0, i32 0), i8* %cond5449)
  br label %if.end.5450

if.end.5450:                                      ; preds = %cond.end.5446, %if.then.5434
  br label %if.end.5451

if.end.5451:                                      ; preds = %if.end.5450, %sw.bb.5428
  br label %sw.epilog.7356

sw.bb.5452:                                       ; preds = %land.end
  store i32 0, i32* %i, align 4
  br label %for.cond.5453

for.cond.5453:                                    ; preds = %for.inc.5536, %sw.bb.5452
  %2812 = load i32, i32* %i, align 4
  %cmp5454 = icmp slt i32 %2812, 2
  br i1 %cmp5454, label %for.body.5456, label %for.end.5538

for.body.5456:                                    ; preds = %for.cond.5453
  %2813 = load i32, i32* %i, align 4
  %tobool5457 = icmp ne i32 %2813, 0
  br i1 %tobool5457, label %land.lhs.true.5458, label %if.end.5464

land.lhs.true.5458:                               ; preds = %for.body.5456
  %2814 = load i32, i32* %i, align 4
  %idxprom5459 = sext i32 %2814 to i64
  %2815 = load i8**, i8*** %args, align 8
  %arrayidx5460 = getelementptr inbounds i8*, i8** %2815, i64 %idxprom5459
  %2816 = load i8*, i8** %arrayidx5460, align 8
  %cmp5461 = icmp eq i8* %2816, null
  br i1 %cmp5461, label %if.then.5463, label %if.end.5464

if.then.5463:                                     ; preds = %land.lhs.true.5458
  br label %for.end.5538

if.end.5464:                                      ; preds = %land.lhs.true.5458, %for.body.5456
  %2817 = load i32, i32* %i, align 4
  %idxprom5465 = sext i32 %2817 to i64
  %2818 = load i8**, i8*** %args, align 8
  %arrayidx5466 = getelementptr inbounds i8*, i8** %2818, i64 %idxprom5465
  %2819 = load i8*, i8** %arrayidx5466, align 8
  %cmp5467 = icmp eq i8* %2819, null
  br i1 %cmp5467, label %if.then.5469, label %if.else.5474

if.then.5469:                                     ; preds = %if.end.5464
  %2820 = load %struct.win*, %struct.win** @fore, align 8
  %w_layer5470 = getelementptr inbounds %struct.win, %struct.win* %2820, i32 0, i32 3
  %l_encoding5471 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer5470, i32 0, i32 5
  %2821 = load i32, i32* %l_encoding5471, align 4
  %cmp5472 = icmp ne i32 %2821, 8
  %conv5473 = zext i1 %cmp5472 to i32
  store i32 %conv5473, i32* %n, align 4
  br label %if.end.5502

if.else.5474:                                     ; preds = %if.end.5464
  %2822 = load i32, i32* %i, align 4
  %idxprom5475 = sext i32 %2822 to i64
  %2823 = load i8**, i8*** %args, align 8
  %arrayidx5476 = getelementptr inbounds i8*, i8** %2823, i64 %idxprom5475
  %2824 = load i8*, i8** %arrayidx5476, align 8
  %call5477 = call i32 @strcmp(i8* %2824, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)) #8
  %cmp5478 = icmp eq i32 %call5477, 0
  br i1 %cmp5478, label %if.then.5480, label %if.else.5481

if.then.5480:                                     ; preds = %if.else.5474
  store i32 0, i32* %n, align 4
  br label %if.end.5501

if.else.5481:                                     ; preds = %if.else.5474
  %2825 = load i32, i32* %i, align 4
  %idxprom5482 = sext i32 %2825 to i64
  %2826 = load i8**, i8*** %args, align 8
  %arrayidx5483 = getelementptr inbounds i8*, i8** %2826, i64 %idxprom5482
  %2827 = load i8*, i8** %arrayidx5483, align 8
  %call5484 = call i32 @strcmp(i8* %2827, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #8
  %cmp5485 = icmp eq i32 %call5484, 0
  br i1 %cmp5485, label %if.then.5487, label %if.else.5488

if.then.5487:                                     ; preds = %if.else.5481
  store i32 1, i32* %n, align 4
  br label %if.end.5500

if.else.5488:                                     ; preds = %if.else.5481
  %2828 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5489 = getelementptr inbounds %struct.action, %struct.action* %2828, i32 0, i32 3
  %2829 = load i32, i32* %quiet5489, align 4
  %tobool5490 = icmp ne i32 %2829, 0
  br i1 %tobool5490, label %cond.false.5492, label %cond.true.5491

cond.true.5491:                                   ; preds = %if.else.5488
  br label %cond.end.5496

cond.false.5492:                                  ; preds = %if.else.5488
  %2830 = load i32, i32* @queryflag, align 4
  %cmp5493 = icmp sge i32 %2830, 0
  %cond5495 = select i1 %cmp5493, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5496

cond.end.5496:                                    ; preds = %cond.false.5492, %cond.true.5491
  %cond5497 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5491 ], [ %cond5495, %cond.false.5492 ]
  %2831 = load i32, i32* %i, align 4
  %idxprom5498 = sext i32 %2831 to i64
  %2832 = load i8**, i8*** %args, align 8
  %arrayidx5499 = getelementptr inbounds i8*, i8** %2832, i64 %idxprom5498
  %2833 = load i8*, i8** %arrayidx5499, align 8
  call void (i32, i8*, ...) %cond5497(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.229, i32 0, i32 0), i8* %2833)
  br label %for.end.5538

if.end.5500:                                      ; preds = %if.then.5487
  br label %if.end.5501

if.end.5501:                                      ; preds = %if.end.5500, %if.then.5480
  br label %if.end.5502

if.end.5502:                                      ; preds = %if.end.5501, %if.then.5469
  %2834 = load i32, i32* %i, align 4
  %cmp5503 = icmp eq i32 %2834, 0
  br i1 %cmp5503, label %if.then.5505, label %if.else.5522

if.then.5505:                                     ; preds = %if.end.5502
  %2835 = load %struct.win*, %struct.win** @fore, align 8
  %2836 = load i32, i32* %n, align 4
  %tobool5506 = icmp ne i32 %2836, 0
  %cond5507 = select i1 %tobool5506, i32 8, i32 0
  call void @WinSwitchEncoding(%struct.win* %2835, i32 %cond5507)
  %2837 = load i32, i32* %msgok, align 4
  %tobool5508 = icmp ne i32 %2837, 0
  br i1 %tobool5508, label %if.then.5509, label %if.end.5521

if.then.5509:                                     ; preds = %if.then.5505
  %2838 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5510 = getelementptr inbounds %struct.action, %struct.action* %2838, i32 0, i32 3
  %2839 = load i32, i32* %quiet5510, align 4
  %tobool5511 = icmp ne i32 %2839, 0
  br i1 %tobool5511, label %cond.false.5513, label %cond.true.5512

cond.true.5512:                                   ; preds = %if.then.5509
  br label %cond.end.5517

cond.false.5513:                                  ; preds = %if.then.5509
  %2840 = load i32, i32* @queryflag, align 4
  %cmp5514 = icmp sge i32 %2840, 0
  %cond5516 = select i1 %cmp5514, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5517

cond.end.5517:                                    ; preds = %cond.false.5513, %cond.true.5512
  %cond5518 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5512 ], [ %cond5516, %cond.false.5513 ]
  %2841 = load i32, i32* %n, align 4
  %tobool5519 = icmp ne i32 %2841, 0
  %cond5520 = select i1 %tobool5519, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond5518(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.230, i32 0, i32 0), i8* %cond5520)
  br label %if.end.5521

if.end.5521:                                      ; preds = %cond.end.5517, %if.then.5505
  br label %if.end.5529

if.else.5522:                                     ; preds = %if.end.5502
  %2842 = load %struct.display*, %struct.display** @display, align 8
  %tobool5523 = icmp ne %struct.display* %2842, null
  br i1 %tobool5523, label %if.then.5524, label %if.end.5528

if.then.5524:                                     ; preds = %if.else.5522
  %2843 = load i32, i32* %n, align 4
  %tobool5525 = icmp ne i32 %2843, 0
  %cond5526 = select i1 %tobool5525, i32 8, i32 0
  %2844 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding5527 = getelementptr inbounds %struct.display, %struct.display* %2844, i32 0, i32 28
  store i32 %cond5526, i32* %d_encoding5527, align 4
  br label %if.end.5528

if.end.5528:                                      ; preds = %if.then.5524, %if.else.5522
  br label %if.end.5529

if.end.5529:                                      ; preds = %if.end.5528, %if.end.5521
  %2845 = load i32, i32* %i, align 4
  %idxprom5530 = sext i32 %2845 to i64
  %2846 = load i8**, i8*** %args, align 8
  %arrayidx5531 = getelementptr inbounds i8*, i8** %2846, i64 %idxprom5530
  %2847 = load i8*, i8** %arrayidx5531, align 8
  %cmp5532 = icmp eq i8* %2847, null
  br i1 %cmp5532, label %if.then.5534, label %if.end.5535

if.then.5534:                                     ; preds = %if.end.5529
  br label %for.end.5538

if.end.5535:                                      ; preds = %if.end.5529
  br label %for.inc.5536

for.inc.5536:                                     ; preds = %if.end.5535
  %2848 = load i32, i32* %i, align 4
  %inc5537 = add nsw i32 %2848, 1
  store i32 %inc5537, i32* %i, align 4
  br label %for.cond.5453

for.end.5538:                                     ; preds = %if.then.5534, %cond.end.5496, %if.then.5463, %for.cond.5453
  br label %sw.epilog.7356

sw.bb.5539:                                       ; preds = %land.end
  %2849 = load i8**, i8*** %args, align 8
  %2850 = load i8*, i8** %2849, align 8
  %tobool5540 = icmp ne i8* %2850, null
  br i1 %tobool5540, label %if.then.5541, label %if.end.5549

if.then.5541:                                     ; preds = %sw.bb.5539
  %2851 = load i8*, i8** @printcmd, align 8
  %tobool5542 = icmp ne i8* %2851, null
  br i1 %tobool5542, label %if.then.5543, label %if.end.5544

if.then.5543:                                     ; preds = %if.then.5541
  %2852 = load i8*, i8** @printcmd, align 8
  call void @free(i8* %2852) #4
  br label %if.end.5544

if.end.5544:                                      ; preds = %if.then.5543, %if.then.5541
  store i8* null, i8** @printcmd, align 8
  %2853 = load i8**, i8*** %args, align 8
  %2854 = load i8*, i8** %2853, align 8
  %2855 = load i8, i8* %2854, align 1
  %tobool5545 = icmp ne i8 %2855, 0
  br i1 %tobool5545, label %if.then.5546, label %if.end.5548

if.then.5546:                                     ; preds = %if.end.5544
  %2856 = load i8**, i8*** %args, align 8
  %2857 = load i8*, i8** %2856, align 8
  %call5547 = call i8* @SaveStr(i8* %2857)
  store i8* %call5547, i8** @printcmd, align 8
  br label %if.end.5548

if.end.5548:                                      ; preds = %if.then.5546, %if.end.5544
  br label %if.end.5549

if.end.5549:                                      ; preds = %if.end.5548, %sw.bb.5539
  %2858 = load i8**, i8*** %args, align 8
  %2859 = load i8*, i8** %2858, align 8
  %cmp5550 = icmp eq i8* %2859, null
  br i1 %cmp5550, label %if.then.5554, label %lor.lhs.false.5552

lor.lhs.false.5552:                               ; preds = %if.end.5549
  %2860 = load i32, i32* %msgok, align 4
  %tobool5553 = icmp ne i32 %2860, 0
  br i1 %tobool5553, label %if.then.5554, label %if.end.5577

if.then.5554:                                     ; preds = %lor.lhs.false.5552, %if.end.5549
  %2861 = load i8*, i8** @printcmd, align 8
  %tobool5555 = icmp ne i8* %2861, null
  br i1 %tobool5555, label %if.then.5556, label %if.else.5566

if.then.5556:                                     ; preds = %if.then.5554
  %2862 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5557 = getelementptr inbounds %struct.action, %struct.action* %2862, i32 0, i32 3
  %2863 = load i32, i32* %quiet5557, align 4
  %tobool5558 = icmp ne i32 %2863, 0
  br i1 %tobool5558, label %cond.false.5560, label %cond.true.5559

cond.true.5559:                                   ; preds = %if.then.5556
  br label %cond.end.5564

cond.false.5560:                                  ; preds = %if.then.5556
  %2864 = load i32, i32* @queryflag, align 4
  %cmp5561 = icmp sge i32 %2864, 0
  %cond5563 = select i1 %cmp5561, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5564

cond.end.5564:                                    ; preds = %cond.false.5560, %cond.true.5559
  %cond5565 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5559 ], [ %cond5563, %cond.false.5560 ]
  %2865 = load i8*, i8** @printcmd, align 8
  call void (i32, i8*, ...) %cond5565(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.231, i32 0, i32 0), i8* %2865)
  br label %if.end.5576

if.else.5566:                                     ; preds = %if.then.5554
  %2866 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5567 = getelementptr inbounds %struct.action, %struct.action* %2866, i32 0, i32 3
  %2867 = load i32, i32* %quiet5567, align 4
  %tobool5568 = icmp ne i32 %2867, 0
  br i1 %tobool5568, label %cond.false.5570, label %cond.true.5569

cond.true.5569:                                   ; preds = %if.else.5566
  br label %cond.end.5574

cond.false.5570:                                  ; preds = %if.else.5566
  %2868 = load i32, i32* @queryflag, align 4
  %cmp5571 = icmp sge i32 %2868, 0
  %cond5573 = select i1 %cmp5571, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5574

cond.end.5574:                                    ; preds = %cond.false.5570, %cond.true.5569
  %cond5575 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5569 ], [ %cond5573, %cond.false.5570 ]
  call void (i32, i8*, ...) %cond5575(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.232, i32 0, i32 0))
  br label %if.end.5576

if.end.5576:                                      ; preds = %cond.end.5574, %cond.end.5564
  br label %sw.epilog.7356

if.end.5577:                                      ; preds = %lor.lhs.false.5552
  br label %sw.epilog.7356

sw.bb.5578:                                       ; preds = %land.end
  %2869 = load i32*, i32** %argl, align 8
  %tobool5579 = icmp ne i32* %2869, null
  br i1 %tobool5579, label %land.lhs.true.5580, label %if.end.5674

land.lhs.true.5580:                               ; preds = %sw.bb.5578
  %2870 = load i32*, i32** %argl, align 8
  %arrayidx5581 = getelementptr inbounds i32, i32* %2870, i64 0
  %2871 = load i32, i32* %arrayidx5581, align 4
  %cmp5582 = icmp sgt i32 %2871, 0
  br i1 %cmp5582, label %land.lhs.true.5584, label %if.end.5674

land.lhs.true.5584:                               ; preds = %land.lhs.true.5580
  %2872 = load i32*, i32** %argl, align 8
  %arrayidx5585 = getelementptr inbounds i32, i32* %2872, i64 1
  %2873 = load i32, i32* %arrayidx5585, align 4
  %cmp5586 = icmp sgt i32 %2873, 0
  br i1 %cmp5586, label %if.then.5588, label %if.end.5674

if.then.5588:                                     ; preds = %land.lhs.true.5584
  %2874 = load i32*, i32** %argl, align 8
  %arrayidx5589 = getelementptr inbounds i32, i32* %2874, i64 0
  %2875 = load i32, i32* %arrayidx5589, align 4
  %cmp5590 = icmp ne i32 %2875, 2
  br i1 %cmp5590, label %if.then.5592, label %if.end.5602

if.then.5592:                                     ; preds = %if.then.5588
  %2876 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5593 = getelementptr inbounds %struct.action, %struct.action* %2876, i32 0, i32 3
  %2877 = load i32, i32* %quiet5593, align 4
  %tobool5594 = icmp ne i32 %2877, 0
  br i1 %tobool5594, label %cond.false.5596, label %cond.true.5595

cond.true.5595:                                   ; preds = %if.then.5592
  br label %cond.end.5600

cond.false.5596:                                  ; preds = %if.then.5592
  %2878 = load i32, i32* @queryflag, align 4
  %cmp5597 = icmp sge i32 %2878, 0
  %cond5599 = select i1 %cmp5597, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5600

cond.end.5600:                                    ; preds = %cond.false.5596, %cond.true.5595
  %cond5601 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5595 ], [ %cond5599, %cond.false.5596 ]
  call void (i32, i8*, ...) %cond5601(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.233, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.5602:                                      ; preds = %if.then.5588
  %2879 = load i8**, i8*** %args, align 8
  %arrayidx5603 = getelementptr inbounds i8*, i8** %2879, i64 0
  %2880 = load i8*, i8** %arrayidx5603, align 8
  %call5604 = call i32 @digraph_find(i8* %2880)
  store i32 %call5604, i32* %i, align 4
  %2881 = load i8**, i8*** %args, align 8
  %arrayidx5605 = getelementptr inbounds i8*, i8** %2881, i64 0
  %2882 = load i8*, i8** %arrayidx5605, align 8
  %arrayidx5606 = getelementptr inbounds i8, i8* %2882, i64 0
  %2883 = load i8, i8* %arrayidx5606, align 1
  %2884 = load i32, i32* %i, align 4
  %idxprom5607 = sext i32 %2884 to i64
  %arrayidx5608 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5607
  %d = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5608, i32 0, i32 0
  %arrayidx5609 = getelementptr inbounds [2 x i8], [2 x i8]* %d, i32 0, i64 0
  store i8 %2883, i8* %arrayidx5609, align 1
  %2885 = load i8**, i8*** %args, align 8
  %arrayidx5610 = getelementptr inbounds i8*, i8** %2885, i64 0
  %2886 = load i8*, i8** %arrayidx5610, align 8
  %arrayidx5611 = getelementptr inbounds i8, i8* %2886, i64 1
  %2887 = load i8, i8* %arrayidx5611, align 1
  %2888 = load i32, i32* %i, align 4
  %idxprom5612 = sext i32 %2888 to i64
  %arrayidx5613 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5612
  %d5614 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5613, i32 0, i32 0
  %arrayidx5615 = getelementptr inbounds [2 x i8], [2 x i8]* %d5614, i32 0, i64 1
  store i8 %2887, i8* %arrayidx5615, align 1
  %2889 = load i8**, i8*** %args, align 8
  %arrayidx5616 = getelementptr inbounds i8*, i8** %2889, i64 1
  %2890 = load i8*, i8** %arrayidx5616, align 8
  %2891 = load i32*, i32** %argl, align 8
  %arrayidx5617 = getelementptr inbounds i32, i32* %2891, i64 1
  %2892 = load i32, i32* %arrayidx5617, align 4
  %2893 = load i32, i32* %i, align 4
  %idxprom5618 = sext i32 %2893 to i64
  %arrayidx5619 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5618
  %value = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5619, i32 0, i32 1
  %call5620 = call i32 @parse_input_int(i8* %2890, i32 %2892, i32* %value)
  %tobool5621 = icmp ne i32 %call5620, 0
  br i1 %tobool5621, label %if.end.5673, label %if.then.5622

if.then.5622:                                     ; preds = %if.end.5602
  %2894 = load i8**, i8*** %args, align 8
  %arrayidx5623 = getelementptr inbounds i8*, i8** %2894, i64 1
  %2895 = load i8*, i8** %arrayidx5623, align 8
  %call5624 = call i32 @atoi(i8* %2895) #8
  %2896 = load i32, i32* %i, align 4
  %idxprom5625 = sext i32 %2896 to i64
  %arrayidx5626 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5625
  %value5627 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5626, i32 0, i32 1
  store i32 %call5624, i32* %value5627, align 4
  %tobool5628 = icmp ne i32 %call5624, 0
  br i1 %tobool5628, label %if.end.5672, label %if.then.5629

if.then.5629:                                     ; preds = %if.then.5622
  %2897 = load i8**, i8*** %args, align 8
  %arrayidx5630 = getelementptr inbounds i8*, i8** %2897, i64 1
  %2898 = load i8*, i8** %arrayidx5630, align 8
  %arrayidx5631 = getelementptr inbounds i8, i8* %2898, i64 1
  %2899 = load i8, i8* %arrayidx5631, align 1
  %tobool5632 = icmp ne i8 %2899, 0
  br i1 %tobool5632, label %if.else.5640, label %if.then.5633

if.then.5633:                                     ; preds = %if.then.5629
  %2900 = load i8**, i8*** %args, align 8
  %arrayidx5634 = getelementptr inbounds i8*, i8** %2900, i64 1
  %2901 = load i8*, i8** %arrayidx5634, align 8
  %arrayidx5635 = getelementptr inbounds i8, i8* %2901, i64 0
  %2902 = load i8, i8* %arrayidx5635, align 1
  %conv5636 = sext i8 %2902 to i32
  %2903 = load i32, i32* %i, align 4
  %idxprom5637 = sext i32 %2903 to i64
  %arrayidx5638 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5637
  %value5639 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5638, i32 0, i32 1
  store i32 %conv5636, i32* %value5639, align 4
  br label %if.end.5671

if.else.5640:                                     ; preds = %if.then.5629
  %2904 = load i8**, i8*** %args, align 8
  %arrayidx5642 = getelementptr inbounds i8*, i8** %2904, i64 1
  %2905 = load i8*, i8** %arrayidx5642, align 8
  store i8* %2905, i8** %s5641, align 8
  %2906 = load i32, i32* %i, align 4
  %idxprom5643 = sext i32 %2906 to i64
  %arrayidx5644 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5643
  %value5645 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5644, i32 0, i32 1
  store i32 0, i32* %value5645, align 4
  br label %while.cond.5646

while.cond.5646:                                  ; preds = %if.then.5657, %if.else.5640
  %2907 = load i8*, i8** %s5641, align 8
  %2908 = load i8, i8* %2907, align 1
  %tobool5647 = icmp ne i8 %2908, 0
  br i1 %tobool5647, label %while.body.5648, label %while.end.5670

while.body.5648:                                  ; preds = %while.cond.5646
  %2909 = load i8*, i8** %s5641, align 8
  %incdec.ptr5649 = getelementptr inbounds i8, i8* %2909, i32 1
  store i8* %incdec.ptr5649, i8** %s5641, align 8
  %2910 = load i8, i8* %2909, align 1
  %conv5650 = zext i8 %2910 to i32
  %2911 = load i32, i32* %i, align 4
  %idxprom5651 = sext i32 %2911 to i64
  %arrayidx5652 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5651
  %value5653 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5652, i32 0, i32 1
  %call5654 = call i32 @FromUtf8(i32 %conv5650, i32* %value5653)
  store i32 %call5654, i32* %t, align 4
  %2912 = load i32, i32* %t, align 4
  %cmp5655 = icmp eq i32 %2912, -1
  br i1 %cmp5655, label %if.then.5657, label %if.end.5658

if.then.5657:                                     ; preds = %while.body.5648
  br label %while.cond.5646

if.end.5658:                                      ; preds = %while.body.5648
  %2913 = load i32, i32* %t, align 4
  %cmp5659 = icmp eq i32 %2913, -2
  br i1 %cmp5659, label %if.then.5661, label %if.else.5665

if.then.5661:                                     ; preds = %if.end.5658
  %2914 = load i32, i32* %i, align 4
  %idxprom5662 = sext i32 %2914 to i64
  %arrayidx5663 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5662
  %value5664 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5663, i32 0, i32 1
  store i32 0, i32* %value5664, align 4
  br label %if.end.5669

if.else.5665:                                     ; preds = %if.end.5658
  %2915 = load i32, i32* %t, align 4
  %2916 = load i32, i32* %i, align 4
  %idxprom5666 = sext i32 %2916 to i64
  %arrayidx5667 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom5666
  %value5668 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx5667, i32 0, i32 1
  store i32 %2915, i32* %value5668, align 4
  br label %if.end.5669

if.end.5669:                                      ; preds = %if.else.5665, %if.then.5661
  br label %while.end.5670

while.end.5670:                                   ; preds = %if.end.5669, %while.cond.5646
  br label %if.end.5671

if.end.5671:                                      ; preds = %while.end.5670, %if.then.5633
  br label %if.end.5672

if.end.5672:                                      ; preds = %if.end.5671, %if.then.5622
  br label %if.end.5673

if.end.5673:                                      ; preds = %if.end.5672, %if.end.5602
  br label %sw.epilog.7356

if.end.5674:                                      ; preds = %land.lhs.true.5584, %land.lhs.true.5580, %sw.bb.5578
  call void @Input(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.234, i32 0, i32 0), i32 10, i32 4, void (i8*, i32, i8*)* @digraph_fn, i8* null, i32 0)
  %2917 = load i8**, i8*** %args, align 8
  %2918 = load i8*, i8** %2917, align 8
  %tobool5675 = icmp ne i8* %2918, null
  br i1 %tobool5675, label %land.lhs.true.5676, label %if.end.5684

land.lhs.true.5676:                               ; preds = %if.end.5674
  %2919 = load i8**, i8*** %args, align 8
  %2920 = load i8*, i8** %2919, align 8
  %2921 = load i8, i8* %2920, align 1
  %conv5677 = sext i8 %2921 to i32
  %tobool5678 = icmp ne i32 %conv5677, 0
  br i1 %tobool5678, label %if.then.5679, label %if.end.5684

if.then.5679:                                     ; preds = %land.lhs.true.5676
  %2922 = load i8**, i8*** %args, align 8
  %2923 = load i8*, i8** %2922, align 8
  store i8* %2923, i8** %s, align 8
  %2924 = load i8*, i8** %s, align 8
  %call5680 = call i64 @strlen(i8* %2924) #8
  %conv5681 = trunc i64 %call5680 to i32
  store i32 %conv5681, i32* %n, align 4
  %2925 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn5682 = getelementptr inbounds %struct.layer, %struct.layer* %2925, i32 0, i32 6
  %2926 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn5682, align 8
  %lf_LayProcess5683 = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %2926, i32 0, i32 0
  %2927 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess5683, align 8
  call void %2927(i8** %s, i32* %n)
  br label %if.end.5684

if.end.5684:                                      ; preds = %if.then.5679, %land.lhs.true.5676, %if.end.5674
  br label %sw.epilog.7356

sw.bb.5685:                                       ; preds = %land.end
  %2928 = load i8**, i8*** %args, align 8
  %2929 = load i8*, i8** %2928, align 8
  %cmp5686 = icmp eq i8* %2929, null
  br i1 %cmp5686, label %if.then.5688, label %if.end.5706

if.then.5688:                                     ; preds = %sw.bb.5685
  %arraydecay5690 = getelementptr inbounds [256 x i8], [256 x i8]* %buf5689, i32 0, i32 0
  store i8 0, i8* %arraydecay5690, align 1
  %2930 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 19), align 8
  %tobool5691 = icmp ne i8* %2930, null
  br i1 %tobool5691, label %if.then.5692, label %if.end.5695

if.then.5692:                                     ; preds = %if.then.5688
  %arraydecay5693 = getelementptr inbounds [256 x i8], [256 x i8]* %buf5689, i32 0, i32 0
  %2931 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 19), align 8
  %call5694 = call i32 @AddXChars(i8* %arraydecay5693, i32 256, i8* %2931)
  br label %if.end.5695

if.end.5695:                                      ; preds = %if.then.5692, %if.then.5688
  %2932 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5696 = getelementptr inbounds %struct.action, %struct.action* %2932, i32 0, i32 3
  %2933 = load i32, i32* %quiet5696, align 4
  %tobool5697 = icmp ne i32 %2933, 0
  br i1 %tobool5697, label %cond.false.5699, label %cond.true.5698

cond.true.5698:                                   ; preds = %if.end.5695
  br label %cond.end.5703

cond.false.5699:                                  ; preds = %if.end.5695
  %2934 = load i32, i32* @queryflag, align 4
  %cmp5700 = icmp sge i32 %2934, 0
  %cond5702 = select i1 %cmp5700, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5703

cond.end.5703:                                    ; preds = %cond.false.5699, %cond.true.5698
  %cond5704 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5698 ], [ %cond5702, %cond.false.5699 ]
  %arraydecay5705 = getelementptr inbounds [256 x i8], [256 x i8]* %buf5689, i32 0, i32 0
  call void (i32, i8*, ...) %cond5704(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.235, i32 0, i32 0), i8* %arraydecay5705)
  br label %sw.epilog.7356

if.end.5706:                                      ; preds = %sw.bb.5685
  %2935 = load %struct.action*, %struct.action** %act.addr, align 8
  %call5707 = call i32 @ParseSaveStr(%struct.action* %2935, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 19))
  %2936 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 19), align 8
  %2937 = load i8, i8* %2936, align 1
  %conv5708 = sext i8 %2937 to i32
  %cmp5709 = icmp eq i32 %conv5708, 0
  br i1 %cmp5709, label %if.then.5711, label %if.end.5712

if.then.5711:                                     ; preds = %if.end.5706
  %2938 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 19), align 8
  call void @free(i8* %2938) #4
  store i8* null, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 19), align 8
  br label %if.end.5712

if.end.5712:                                      ; preds = %if.then.5711, %if.end.5706
  br label %sw.epilog.7356

sw.bb.5713:                                       ; preds = %land.end
  %2939 = load %struct.action*, %struct.action** %act.addr, align 8
  %2940 = load %struct.win*, %struct.win** @fore, align 8
  %w_hstatus = getelementptr inbounds %struct.win, %struct.win* %2940, i32 0, i32 57
  %call5714 = call i32 @ParseSaveStr(%struct.action* %2939, i8** %w_hstatus)
  %2941 = load %struct.win*, %struct.win** @fore, align 8
  %w_hstatus5715 = getelementptr inbounds %struct.win, %struct.win* %2941, i32 0, i32 57
  %2942 = load i8*, i8** %w_hstatus5715, align 8
  %2943 = load i8, i8* %2942, align 1
  %conv5716 = sext i8 %2943 to i32
  %cmp5717 = icmp eq i32 %conv5716, 0
  br i1 %cmp5717, label %if.then.5719, label %if.end.5722

if.then.5719:                                     ; preds = %sw.bb.5713
  %2944 = load %struct.win*, %struct.win** @fore, align 8
  %w_hstatus5720 = getelementptr inbounds %struct.win, %struct.win* %2944, i32 0, i32 57
  %2945 = load i8*, i8** %w_hstatus5720, align 8
  call void @free(i8* %2945) #4
  %2946 = load %struct.win*, %struct.win** @fore, align 8
  %w_hstatus5721 = getelementptr inbounds %struct.win, %struct.win* %2946, i32 0, i32 57
  store i8* null, i8** %w_hstatus5721, align 8
  br label %if.end.5722

if.end.5722:                                      ; preds = %if.then.5719, %sw.bb.5713
  %2947 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %2947, i32 104)
  br label %sw.epilog.7356

sw.bb.5723:                                       ; preds = %land.end, %land.end
  %2948 = load i8**, i8*** %args, align 8
  %2949 = load i8*, i8** %2948, align 8
  %cmp5724 = icmp eq i8* %2949, null
  br i1 %cmp5724, label %if.then.5726, label %if.end.5744

if.then.5726:                                     ; preds = %sw.bb.5723
  %arraydecay5728 = getelementptr inbounds [256 x i8], [256 x i8]* %buf5727, i32 0, i32 0
  store i8 0, i8* %arraydecay5728, align 1
  %2950 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 20), align 8
  %tobool5729 = icmp ne i8* %2950, null
  br i1 %tobool5729, label %if.then.5730, label %if.end.5733

if.then.5730:                                     ; preds = %if.then.5726
  %arraydecay5731 = getelementptr inbounds [256 x i8], [256 x i8]* %buf5727, i32 0, i32 0
  %2951 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 20), align 8
  %call5732 = call i32 @AddXChars(i8* %arraydecay5731, i32 256, i8* %2951)
  br label %if.end.5733

if.end.5733:                                      ; preds = %if.then.5730, %if.then.5726
  %2952 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5734 = getelementptr inbounds %struct.action, %struct.action* %2952, i32 0, i32 3
  %2953 = load i32, i32* %quiet5734, align 4
  %tobool5735 = icmp ne i32 %2953, 0
  br i1 %tobool5735, label %cond.false.5737, label %cond.true.5736

cond.true.5736:                                   ; preds = %if.end.5733
  br label %cond.end.5741

cond.false.5737:                                  ; preds = %if.end.5733
  %2954 = load i32, i32* @queryflag, align 4
  %cmp5738 = icmp sge i32 %2954, 0
  %cond5740 = select i1 %cmp5738, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5741

cond.end.5741:                                    ; preds = %cond.false.5737, %cond.true.5736
  %cond5742 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5736 ], [ %cond5740, %cond.false.5737 ]
  %arraydecay5743 = getelementptr inbounds [256 x i8], [256 x i8]* %buf5727, i32 0, i32 0
  call void (i32, i8*, ...) %cond5742(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.236, i32 0, i32 0), i8* %arraydecay5743)
  br label %sw.epilog.7356

if.end.5744:                                      ; preds = %sw.bb.5723
  %2955 = load i8**, i8*** %args, align 8
  %2956 = load i8*, i8** %2955, align 8
  %call5745 = call i64 @strlen(i8* %2956) #8
  %conv5746 = trunc i64 %call5745 to i32
  store i32 %conv5746, i32* %n, align 4
  %2957 = load i32, i32* %n, align 4
  %cmp5747 = icmp eq i32 %2957, 0
  br i1 %cmp5747, label %if.then.5752, label %lor.lhs.false.5749

lor.lhs.false.5749:                               ; preds = %if.end.5744
  %2958 = load i32, i32* %n, align 4
  %cmp5750 = icmp sgt i32 %2958, 6
  br i1 %cmp5750, label %if.then.5752, label %if.end.5765

if.then.5752:                                     ; preds = %lor.lhs.false.5749, %if.end.5744
  %2959 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5753 = getelementptr inbounds %struct.action, %struct.action* %2959, i32 0, i32 3
  %2960 = load i32, i32* %quiet5753, align 4
  %tobool5754 = icmp ne i32 %2960, 0
  br i1 %tobool5754, label %cond.false.5756, label %cond.true.5755

cond.true.5755:                                   ; preds = %if.then.5752
  br label %cond.end.5760

cond.false.5756:                                  ; preds = %if.then.5752
  %2961 = load i32, i32* @queryflag, align 4
  %cmp5757 = icmp sge i32 %2961, 0
  %cond5759 = select i1 %cmp5757, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5760

cond.end.5760:                                    ; preds = %cond.false.5756, %cond.true.5755
  %cond5761 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5755 ], [ %cond5759, %cond.false.5756 ]
  %2962 = load i8*, i8** @rc_name, align 8
  %2963 = load i32, i32* %nr, align 4
  %idxprom5762 = sext i32 %2963 to i64
  %arrayidx5763 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom5762
  %name5764 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx5763, i32 0, i32 0
  %2964 = load i8*, i8** %name5764, align 8
  call void (i32, i8*, ...) %cond5761(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.237, i32 0, i32 0), i8* %2962, i8* %2964)
  br label %sw.epilog.7356

if.end.5765:                                      ; preds = %lor.lhs.false.5749
  %2965 = load i32, i32* %n, align 4
  %cmp5766 = icmp sgt i32 %2965, 4
  br i1 %cmp5766, label %land.lhs.true.5768, label %if.end.5822

land.lhs.true.5768:                               ; preds = %if.end.5765
  %2966 = load i8**, i8*** %args, align 8
  %arrayidx5769 = getelementptr inbounds i8*, i8** %2966, i64 0
  %2967 = load i8*, i8** %arrayidx5769, align 8
  %arrayidx5770 = getelementptr inbounds i8, i8* %2967, i64 4
  %2968 = load i8, i8* %arrayidx5770, align 1
  %conv5771 = sext i8 %2968 to i32
  %cmp5772 = icmp slt i32 %conv5771, 48
  br i1 %cmp5772, label %land.lhs.true.5780, label %lor.lhs.false.5774

lor.lhs.false.5774:                               ; preds = %land.lhs.true.5768
  %2969 = load i8**, i8*** %args, align 8
  %arrayidx5775 = getelementptr inbounds i8*, i8** %2969, i64 0
  %2970 = load i8*, i8** %arrayidx5775, align 8
  %arrayidx5776 = getelementptr inbounds i8, i8* %2970, i64 4
  %2971 = load i8, i8* %arrayidx5776, align 1
  %conv5777 = sext i8 %2971 to i32
  %cmp5778 = icmp sgt i32 %conv5777, 51
  br i1 %cmp5778, label %land.lhs.true.5780, label %lor.lhs.false.5786

land.lhs.true.5780:                               ; preds = %lor.lhs.false.5774, %land.lhs.true.5768
  %2972 = load i8**, i8*** %args, align 8
  %arrayidx5781 = getelementptr inbounds i8*, i8** %2972, i64 0
  %2973 = load i8*, i8** %arrayidx5781, align 8
  %arrayidx5782 = getelementptr inbounds i8, i8* %2973, i64 4
  %2974 = load i8, i8* %arrayidx5782, align 1
  %conv5783 = sext i8 %2974 to i32
  %cmp5784 = icmp ne i32 %conv5783, 46
  br i1 %cmp5784, label %if.then.5809, label %lor.lhs.false.5786

lor.lhs.false.5786:                               ; preds = %land.lhs.true.5780, %lor.lhs.false.5774
  %2975 = load i8**, i8*** %args, align 8
  %arrayidx5787 = getelementptr inbounds i8*, i8** %2975, i64 0
  %2976 = load i8*, i8** %arrayidx5787, align 8
  %arrayidx5788 = getelementptr inbounds i8, i8* %2976, i64 5
  %2977 = load i8, i8* %arrayidx5788, align 1
  %conv5789 = sext i8 %2977 to i32
  %cmp5790 = icmp slt i32 %conv5789, 48
  br i1 %cmp5790, label %land.lhs.true.5798, label %lor.lhs.false.5792

lor.lhs.false.5792:                               ; preds = %lor.lhs.false.5786
  %2978 = load i8**, i8*** %args, align 8
  %arrayidx5793 = getelementptr inbounds i8*, i8** %2978, i64 0
  %2979 = load i8*, i8** %arrayidx5793, align 8
  %arrayidx5794 = getelementptr inbounds i8, i8* %2979, i64 5
  %2980 = load i8, i8* %arrayidx5794, align 1
  %conv5795 = sext i8 %2980 to i32
  %cmp5796 = icmp sgt i32 %conv5795, 51
  br i1 %cmp5796, label %land.lhs.true.5798, label %if.end.5822

land.lhs.true.5798:                               ; preds = %lor.lhs.false.5792, %lor.lhs.false.5786
  %2981 = load i8**, i8*** %args, align 8
  %arrayidx5799 = getelementptr inbounds i8*, i8** %2981, i64 0
  %2982 = load i8*, i8** %arrayidx5799, align 8
  %arrayidx5800 = getelementptr inbounds i8, i8* %2982, i64 5
  %2983 = load i8, i8* %arrayidx5800, align 1
  %conv5801 = sext i8 %2983 to i32
  %tobool5802 = icmp ne i32 %conv5801, 0
  br i1 %tobool5802, label %land.lhs.true.5803, label %if.end.5822

land.lhs.true.5803:                               ; preds = %land.lhs.true.5798
  %2984 = load i8**, i8*** %args, align 8
  %arrayidx5804 = getelementptr inbounds i8*, i8** %2984, i64 0
  %2985 = load i8*, i8** %arrayidx5804, align 8
  %arrayidx5805 = getelementptr inbounds i8, i8* %2985, i64 5
  %2986 = load i8, i8* %arrayidx5805, align 1
  %conv5806 = sext i8 %2986 to i32
  %cmp5807 = icmp ne i32 %conv5806, 46
  br i1 %cmp5807, label %if.then.5809, label %if.end.5822

if.then.5809:                                     ; preds = %land.lhs.true.5803, %land.lhs.true.5780
  %2987 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5810 = getelementptr inbounds %struct.action, %struct.action* %2987, i32 0, i32 3
  %2988 = load i32, i32* %quiet5810, align 4
  %tobool5811 = icmp ne i32 %2988, 0
  br i1 %tobool5811, label %cond.false.5813, label %cond.true.5812

cond.true.5812:                                   ; preds = %if.then.5809
  br label %cond.end.5817

cond.false.5813:                                  ; preds = %if.then.5809
  %2989 = load i32, i32* @queryflag, align 4
  %cmp5814 = icmp sge i32 %2989, 0
  %cond5816 = select i1 %cmp5814, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5817

cond.end.5817:                                    ; preds = %cond.false.5813, %cond.true.5812
  %cond5818 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5812 ], [ %cond5816, %cond.false.5813 ]
  %2990 = load i8*, i8** @rc_name, align 8
  %2991 = load i32, i32* %nr, align 4
  %idxprom5819 = sext i32 %2991 to i64
  %arrayidx5820 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom5819
  %name5821 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx5820, i32 0, i32 0
  %2992 = load i8*, i8** %name5821, align 8
  call void (i32, i8*, ...) %cond5818(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.238, i32 0, i32 0), i8* %2990, i8* %2992)
  br label %sw.epilog.7356

if.end.5822:                                      ; preds = %land.lhs.true.5803, %land.lhs.true.5798, %lor.lhs.false.5792, %if.end.5765
  %2993 = load i32, i32* %nr, align 4
  %cmp5823 = icmp eq i32 %2993, 29
  br i1 %cmp5823, label %if.then.5825, label %if.end.5826

if.then.5825:                                     ; preds = %if.end.5822
  %2994 = load %struct.win*, %struct.win** @fore, align 8
  %2995 = load i8**, i8*** %args, align 8
  %2996 = load i8*, i8** %2995, align 8
  call void @SetCharsets(%struct.win* %2994, i8* %2996)
  br label %sw.epilog.7356

if.end.5826:                                      ; preds = %if.end.5822
  %2997 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 20), align 8
  %tobool5827 = icmp ne i8* %2997, null
  br i1 %tobool5827, label %if.then.5828, label %if.end.5829

if.then.5828:                                     ; preds = %if.end.5826
  %2998 = load i8*, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 20), align 8
  call void @free(i8* %2998) #4
  br label %if.end.5829

if.end.5829:                                      ; preds = %if.then.5828, %if.end.5826
  %2999 = load i8**, i8*** %args, align 8
  %3000 = load i8*, i8** %2999, align 8
  %call5830 = call i8* @SaveStr(i8* %3000)
  store i8* %call5830, i8** getelementptr inbounds (%struct.NewWindow, %struct.NewWindow* @nwin_default, i32 0, i32 20), align 8
  br label %sw.epilog.7356

sw.bb.5831:                                       ; preds = %land.end
  %3001 = load i8**, i8*** %args, align 8
  %arrayidx5832 = getelementptr inbounds i8*, i8** %3001, i64 0
  %3002 = load i8*, i8** %arrayidx5832, align 8
  store i8* %3002, i8** %s, align 8
  %3003 = load i8*, i8** %s, align 8
  %3004 = load i8, i8* %3003, align 1
  %conv5833 = sext i8 %3004 to i32
  %cmp5834 = icmp sge i32 %conv5833, 48
  br i1 %cmp5834, label %land.lhs.true.5836, label %if.else.5843

land.lhs.true.5836:                               ; preds = %sw.bb.5831
  %3005 = load i8*, i8** %s, align 8
  %3006 = load i8, i8* %3005, align 1
  %conv5837 = sext i8 %3006 to i32
  %cmp5838 = icmp sle i32 %conv5837, 57
  br i1 %cmp5838, label %if.then.5840, label %if.else.5843

if.then.5840:                                     ; preds = %land.lhs.true.5836
  %3007 = load i8*, i8** %s, align 8
  %3008 = load i8, i8* %3007, align 1
  %conv5841 = sext i8 %3008 to i32
  %sub5842 = sub nsw i32 %conv5841, 48
  store i32 %sub5842, i32* %i, align 4
  br label %if.end.5859

if.else.5843:                                     ; preds = %land.lhs.true.5836, %sw.bb.5831
  store i32 0, i32* %i, align 4
  br label %for.cond.5844

for.cond.5844:                                    ; preds = %for.inc.5856, %if.else.5843
  %3009 = load i32, i32* %i, align 4
  %cmp5845 = icmp slt i32 %3009, 8
  br i1 %cmp5845, label %for.body.5847, label %for.end.5858

for.body.5847:                                    ; preds = %for.cond.5844
  %3010 = load i8*, i8** %s, align 8
  %3011 = load i8, i8* %3010, align 1
  %conv5848 = sext i8 %3011 to i32
  %3012 = load i32, i32* %i, align 4
  %idxprom5849 = sext i32 %3012 to i64
  %arrayidx5850 = getelementptr inbounds [9 x i8], [9 x i8]* @.str.239, i32 0, i64 %idxprom5849
  %3013 = load i8, i8* %arrayidx5850, align 1
  %conv5851 = sext i8 %3013 to i32
  %cmp5852 = icmp eq i32 %conv5848, %conv5851
  br i1 %cmp5852, label %if.then.5854, label %if.end.5855

if.then.5854:                                     ; preds = %for.body.5847
  br label %for.end.5858

if.end.5855:                                      ; preds = %for.body.5847
  br label %for.inc.5856

for.inc.5856:                                     ; preds = %if.end.5855
  %3014 = load i32, i32* %i, align 4
  %inc5857 = add nsw i32 %3014, 1
  store i32 %inc5857, i32* %i, align 4
  br label %for.cond.5844

for.end.5858:                                     ; preds = %if.then.5854, %for.cond.5844
  br label %if.end.5859

if.end.5859:                                      ; preds = %for.end.5858, %if.then.5840
  %3015 = load i8*, i8** %s, align 8
  %incdec.ptr5860 = getelementptr inbounds i8, i8* %3015, i32 1
  store i8* %incdec.ptr5860, i8** %s, align 8
  store i32 0, i32* %nr, align 4
  %3016 = load i8*, i8** %s, align 8
  %3017 = load i8, i8* %3016, align 1
  %conv5861 = sext i8 %3017 to i32
  %tobool5862 = icmp ne i32 %conv5861, 0
  br i1 %tobool5862, label %land.lhs.true.5863, label %if.end.5916

land.lhs.true.5863:                               ; preds = %if.end.5859
  %3018 = load i8*, i8** %s, align 8
  %arrayidx5864 = getelementptr inbounds i8, i8* %3018, i64 1
  %3019 = load i8, i8* %arrayidx5864, align 1
  %conv5865 = sext i8 %3019 to i32
  %tobool5866 = icmp ne i32 %conv5865, 0
  br i1 %tobool5866, label %land.lhs.true.5867, label %if.end.5916

land.lhs.true.5867:                               ; preds = %land.lhs.true.5863
  %3020 = load i8*, i8** %s, align 8
  %arrayidx5868 = getelementptr inbounds i8, i8* %3020, i64 2
  %3021 = load i8, i8* %arrayidx5868, align 1
  %tobool5869 = icmp ne i8 %3021, 0
  br i1 %tobool5869, label %if.end.5916, label %if.then.5870

if.then.5870:                                     ; preds = %land.lhs.true.5867
  %3022 = load i8*, i8** %s, align 8
  %3023 = load i8, i8* %3022, align 1
  %conv5871 = sext i8 %3023 to i32
  %cmp5872 = icmp eq i32 %conv5871, 100
  br i1 %cmp5872, label %land.lhs.true.5874, label %if.else.5880

land.lhs.true.5874:                               ; preds = %if.then.5870
  %3024 = load i8*, i8** %s, align 8
  %arrayidx5875 = getelementptr inbounds i8, i8* %3024, i64 1
  %3025 = load i8, i8* %arrayidx5875, align 1
  %conv5876 = sext i8 %3025 to i32
  %cmp5877 = icmp eq i32 %conv5876, 100
  br i1 %cmp5877, label %if.then.5879, label %if.else.5880

if.then.5879:                                     ; preds = %land.lhs.true.5874
  store i32 3, i32* %nr, align 4
  br label %if.end.5914

if.else.5880:                                     ; preds = %land.lhs.true.5874, %if.then.5870
  %3026 = load i8*, i8** %s, align 8
  %3027 = load i8, i8* %3026, align 1
  %conv5881 = sext i8 %3027 to i32
  %cmp5882 = icmp eq i32 %conv5881, 46
  br i1 %cmp5882, label %land.lhs.true.5884, label %if.else.5890

land.lhs.true.5884:                               ; preds = %if.else.5880
  %3028 = load i8*, i8** %s, align 8
  %arrayidx5885 = getelementptr inbounds i8, i8* %3028, i64 1
  %3029 = load i8, i8* %arrayidx5885, align 1
  %conv5886 = sext i8 %3029 to i32
  %cmp5887 = icmp eq i32 %conv5886, 100
  br i1 %cmp5887, label %if.then.5889, label %if.else.5890

if.then.5889:                                     ; preds = %land.lhs.true.5884
  store i32 2, i32* %nr, align 4
  br label %if.end.5913

if.else.5890:                                     ; preds = %land.lhs.true.5884, %if.else.5880
  %3030 = load i8*, i8** %s, align 8
  %3031 = load i8, i8* %3030, align 1
  %conv5891 = sext i8 %3031 to i32
  %cmp5892 = icmp eq i32 %conv5891, 100
  br i1 %cmp5892, label %land.lhs.true.5894, label %if.else.5900

land.lhs.true.5894:                               ; preds = %if.else.5890
  %3032 = load i8*, i8** %s, align 8
  %arrayidx5895 = getelementptr inbounds i8, i8* %3032, i64 1
  %3033 = load i8, i8* %arrayidx5895, align 1
  %conv5896 = sext i8 %3033 to i32
  %cmp5897 = icmp eq i32 %conv5896, 46
  br i1 %cmp5897, label %if.then.5899, label %if.else.5900

if.then.5899:                                     ; preds = %land.lhs.true.5894
  store i32 1, i32* %nr, align 4
  br label %if.end.5912

if.else.5900:                                     ; preds = %land.lhs.true.5894, %if.else.5890
  %3034 = load i8*, i8** %s, align 8
  %3035 = load i8, i8* %3034, align 1
  %conv5901 = sext i8 %3035 to i32
  %cmp5902 = icmp ne i32 %conv5901, 46
  br i1 %cmp5902, label %if.then.5909, label %lor.lhs.false.5904

lor.lhs.false.5904:                               ; preds = %if.else.5900
  %3036 = load i8*, i8** %s, align 8
  %arrayidx5905 = getelementptr inbounds i8, i8* %3036, i64 1
  %3037 = load i8, i8* %arrayidx5905, align 1
  %conv5906 = sext i8 %3037 to i32
  %cmp5907 = icmp ne i32 %conv5906, 46
  br i1 %cmp5907, label %if.then.5909, label %if.end.5911

if.then.5909:                                     ; preds = %lor.lhs.false.5904, %if.else.5900
  %3038 = load i8*, i8** %s, align 8
  %incdec.ptr5910 = getelementptr inbounds i8, i8* %3038, i32 -1
  store i8* %incdec.ptr5910, i8** %s, align 8
  br label %if.end.5911

if.end.5911:                                      ; preds = %if.then.5909, %lor.lhs.false.5904
  br label %if.end.5912

if.end.5912:                                      ; preds = %if.end.5911, %if.then.5899
  br label %if.end.5913

if.end.5913:                                      ; preds = %if.end.5912, %if.then.5889
  br label %if.end.5914

if.end.5914:                                      ; preds = %if.end.5913, %if.then.5879
  %3039 = load i8*, i8** %s, align 8
  %add.ptr5915 = getelementptr inbounds i8, i8* %3039, i64 2
  store i8* %add.ptr5915, i8** %s, align 8
  br label %if.end.5916

if.end.5916:                                      ; preds = %if.end.5914, %land.lhs.true.5867, %land.lhs.true.5863, %if.end.5859
  %3040 = load i8*, i8** %s, align 8
  %3041 = load i8, i8* %3040, align 1
  %conv5917 = sext i8 %3041 to i32
  %tobool5918 = icmp ne i32 %conv5917, 0
  br i1 %tobool5918, label %if.then.5925, label %lor.lhs.false.5919

lor.lhs.false.5919:                               ; preds = %if.end.5916
  %3042 = load i32, i32* %i, align 4
  %cmp5920 = icmp slt i32 %3042, 0
  br i1 %cmp5920, label %if.then.5925, label %lor.lhs.false.5922

lor.lhs.false.5922:                               ; preds = %lor.lhs.false.5919
  %3043 = load i32, i32* %i, align 4
  %cmp5923 = icmp sge i32 %3043, 8
  br i1 %cmp5923, label %if.then.5925, label %if.end.5936

if.then.5925:                                     ; preds = %lor.lhs.false.5922, %lor.lhs.false.5919, %if.end.5916
  %3044 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet5926 = getelementptr inbounds %struct.action, %struct.action* %3044, i32 0, i32 3
  %3045 = load i32, i32* %quiet5926, align 4
  %tobool5927 = icmp ne i32 %3045, 0
  br i1 %tobool5927, label %cond.false.5929, label %cond.true.5928

cond.true.5928:                                   ; preds = %if.then.5925
  br label %cond.end.5933

cond.false.5929:                                  ; preds = %if.then.5925
  %3046 = load i32, i32* @queryflag, align 4
  %cmp5930 = icmp sge i32 %3046, 0
  %cond5932 = select i1 %cmp5930, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.5933

cond.end.5933:                                    ; preds = %cond.false.5929, %cond.true.5928
  %cond5934 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.5928 ], [ %cond5932, %cond.false.5929 ]
  %3047 = load i8*, i8** @rc_name, align 8
  %3048 = load i8**, i8*** %args, align 8
  %arrayidx5935 = getelementptr inbounds i8*, i8** %3048, i64 0
  %3049 = load i8*, i8** %arrayidx5935, align 8
  call void (i32, i8*, ...) %cond5934(i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.240, i32 0, i32 0), i8* %3047, i8* %3049)
  br label %sw.epilog.7356

if.end.5936:                                      ; preds = %lor.lhs.false.5922
  store i32 0, i32* %n, align 4
  %3050 = load i8**, i8*** %args, align 8
  %arrayidx5937 = getelementptr inbounds i8*, i8** %3050, i64 1
  %3051 = load i8*, i8** %arrayidx5937, align 8
  %tobool5938 = icmp ne i8* %3051, null
  br i1 %tobool5938, label %if.then.5939, label %if.end.5943

if.then.5939:                                     ; preds = %if.end.5936
  %3052 = load i8**, i8*** %args, align 8
  %arrayidx5940 = getelementptr inbounds i8*, i8** %3052, i64 1
  %3053 = load i8*, i8** %arrayidx5940, align 8
  %3054 = load i8**, i8*** %args, align 8
  %arrayidx5941 = getelementptr inbounds i8*, i8** %3054, i64 2
  %3055 = load i8*, i8** %arrayidx5941, align 8
  %call5942 = call i32 @ParseAttrColor(i8* %3053, i8* %3055, i32 1)
  store i32 %call5942, i32* %n, align 4
  br label %if.end.5943

if.end.5943:                                      ; preds = %if.then.5939, %if.end.5936
  %3056 = load i32, i32* %n, align 4
  %cmp5944 = icmp eq i32 %3056, -1
  br i1 %cmp5944, label %if.then.5946, label %if.end.5947

if.then.5946:                                     ; preds = %if.end.5943
  br label %sw.epilog.7356

if.end.5947:                                      ; preds = %if.end.5943
  %3057 = load i32, i32* %n, align 4
  %3058 = load i32, i32* %nr, align 4
  %idxprom5948 = sext i32 %3058 to i64
  %3059 = load i32, i32* %i, align 4
  %idxprom5949 = sext i32 %3059 to i64
  %arrayidx5950 = getelementptr inbounds [0 x [4 x i32]], [0 x [4 x i32]]* @attr2color, i32 0, i64 %idxprom5949
  %arrayidx5951 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx5950, i32 0, i64 %idxprom5948
  store i32 %3057, i32* %arrayidx5951, align 4
  store i32 0, i32* %n, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond.5952

for.cond.5952:                                    ; preds = %for.inc.5978, %if.end.5947
  %3060 = load i32, i32* %i, align 4
  %cmp5953 = icmp slt i32 %3060, 8
  br i1 %cmp5953, label %for.body.5955, label %for.end.5980

for.body.5955:                                    ; preds = %for.cond.5952
  %3061 = load i32, i32* %i, align 4
  %idxprom5956 = sext i32 %3061 to i64
  %arrayidx5957 = getelementptr inbounds [0 x [4 x i32]], [0 x [4 x i32]]* @attr2color, i32 0, i64 %idxprom5956
  %arrayidx5958 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx5957, i32 0, i64 0
  %3062 = load i32, i32* %arrayidx5958, align 4
  %tobool5959 = icmp ne i32 %3062, 0
  br i1 %tobool5959, label %if.then.5975, label %lor.lhs.false.5960

lor.lhs.false.5960:                               ; preds = %for.body.5955
  %3063 = load i32, i32* %i, align 4
  %idxprom5961 = sext i32 %3063 to i64
  %arrayidx5962 = getelementptr inbounds [0 x [4 x i32]], [0 x [4 x i32]]* @attr2color, i32 0, i64 %idxprom5961
  %arrayidx5963 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx5962, i32 0, i64 1
  %3064 = load i32, i32* %arrayidx5963, align 4
  %tobool5964 = icmp ne i32 %3064, 0
  br i1 %tobool5964, label %if.then.5975, label %lor.lhs.false.5965

lor.lhs.false.5965:                               ; preds = %lor.lhs.false.5960
  %3065 = load i32, i32* %i, align 4
  %idxprom5966 = sext i32 %3065 to i64
  %arrayidx5967 = getelementptr inbounds [0 x [4 x i32]], [0 x [4 x i32]]* @attr2color, i32 0, i64 %idxprom5966
  %arrayidx5968 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx5967, i32 0, i64 2
  %3066 = load i32, i32* %arrayidx5968, align 4
  %tobool5969 = icmp ne i32 %3066, 0
  br i1 %tobool5969, label %if.then.5975, label %lor.lhs.false.5970

lor.lhs.false.5970:                               ; preds = %lor.lhs.false.5965
  %3067 = load i32, i32* %i, align 4
  %idxprom5971 = sext i32 %3067 to i64
  %arrayidx5972 = getelementptr inbounds [0 x [4 x i32]], [0 x [4 x i32]]* @attr2color, i32 0, i64 %idxprom5971
  %arrayidx5973 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx5972, i32 0, i64 3
  %3068 = load i32, i32* %arrayidx5973, align 4
  %tobool5974 = icmp ne i32 %3068, 0
  br i1 %tobool5974, label %if.then.5975, label %if.end.5977

if.then.5975:                                     ; preds = %lor.lhs.false.5970, %lor.lhs.false.5965, %lor.lhs.false.5960, %for.body.5955
  %3069 = load i32, i32* %i, align 4
  %shl = shl i32 1, %3069
  %3070 = load i32, i32* %n, align 4
  %or5976 = or i32 %3070, %shl
  store i32 %or5976, i32* %n, align 4
  br label %if.end.5977

if.end.5977:                                      ; preds = %if.then.5975, %lor.lhs.false.5970
  br label %for.inc.5978

for.inc.5978:                                     ; preds = %if.end.5977
  %3071 = load i32, i32* %i, align 4
  %inc5979 = add nsw i32 %3071, 1
  store i32 %inc5979, i32* %i, align 4
  br label %for.cond.5952

for.end.5980:                                     ; preds = %for.cond.5952
  %3072 = load i32, i32* %n, align 4
  store i32 %3072, i32* @nattr2color, align 4
  br label %sw.epilog.7356

sw.bb.5981:                                       ; preds = %land.end
  store i32 -1, i32* %i, align 4
  %3073 = load i8**, i8*** %args, align 8
  %arrayidx5982 = getelementptr inbounds i8*, i8** %3073, i64 0
  %3074 = load i8*, i8** %arrayidx5982, align 8
  %call5983 = call i32 @strcmp(i8* %3074, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.241, i32 0, i32 0)) #8
  %cmp5984 = icmp eq i32 %call5983, 0
  br i1 %cmp5984, label %if.then.5986, label %if.else.5987

if.then.5986:                                     ; preds = %sw.bb.5981
  store i32 0, i32* %i, align 4
  br label %if.end.6018

if.else.5987:                                     ; preds = %sw.bb.5981
  %3075 = load i8**, i8*** %args, align 8
  %arrayidx5988 = getelementptr inbounds i8*, i8** %3075, i64 0
  %3076 = load i8*, i8** %arrayidx5988, align 8
  %call5989 = call i32 @strcmp(i8* %3076, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.242, i32 0, i32 0)) #8
  %cmp5990 = icmp eq i32 %call5989, 0
  br i1 %cmp5990, label %if.then.5992, label %if.else.5993

if.then.5992:                                     ; preds = %if.else.5987
  store i32 1, i32* %i, align 4
  br label %if.end.6017

if.else.5993:                                     ; preds = %if.else.5987
  %3077 = load i8**, i8*** %args, align 8
  %arrayidx5994 = getelementptr inbounds i8*, i8** %3077, i64 0
  %3078 = load i8*, i8** %arrayidx5994, align 8
  %call5995 = call i32 @strcmp(i8* %3078, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.243, i32 0, i32 0)) #8
  %cmp5996 = icmp eq i32 %call5995, 0
  br i1 %cmp5996, label %if.then.5998, label %if.else.5999

if.then.5998:                                     ; preds = %if.else.5993
  store i32 2, i32* %i, align 4
  br label %if.end.6016

if.else.5999:                                     ; preds = %if.else.5993
  %3079 = load i8**, i8*** %args, align 8
  %arrayidx6000 = getelementptr inbounds i8*, i8** %3079, i64 0
  %3080 = load i8*, i8** %arrayidx6000, align 8
  %call6001 = call i32 @strcmp(i8* %3080, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.244, i32 0, i32 0)) #8
  %cmp6002 = icmp ne i32 %call6001, 0
  br i1 %cmp6002, label %if.then.6004, label %if.end.6015

if.then.6004:                                     ; preds = %if.else.5999
  %3081 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6005 = getelementptr inbounds %struct.action, %struct.action* %3081, i32 0, i32 3
  %3082 = load i32, i32* %quiet6005, align 4
  %tobool6006 = icmp ne i32 %3082, 0
  br i1 %tobool6006, label %cond.false.6008, label %cond.true.6007

cond.true.6007:                                   ; preds = %if.then.6004
  br label %cond.end.6012

cond.false.6008:                                  ; preds = %if.then.6004
  %3083 = load i32, i32* @queryflag, align 4
  %cmp6009 = icmp sge i32 %3083, 0
  %cond6011 = select i1 %cmp6009, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6012

cond.end.6012:                                    ; preds = %cond.false.6008, %cond.true.6007
  %cond6013 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6007 ], [ %cond6011, %cond.false.6008 ]
  %3084 = load i8**, i8*** %args, align 8
  %arrayidx6014 = getelementptr inbounds i8*, i8** %3084, i64 0
  %3085 = load i8*, i8** %arrayidx6014, align 8
  call void (i32, i8*, ...) %cond6013(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.245, i32 0, i32 0), i8* %3085)
  br label %sw.epilog.7356

if.end.6015:                                      ; preds = %if.else.5999
  br label %if.end.6016

if.end.6016:                                      ; preds = %if.end.6015, %if.then.5998
  br label %if.end.6017

if.end.6017:                                      ; preds = %if.end.6016, %if.then.5992
  br label %if.end.6018

if.end.6018:                                      ; preds = %if.end.6017, %if.then.5986
  %3086 = load i8**, i8*** %args, align 8
  %incdec.ptr6019 = getelementptr inbounds i8*, i8** %3086, i32 1
  store i8** %incdec.ptr6019, i8*** %args, align 8
  %3087 = load i32*, i32** %argl, align 8
  %incdec.ptr6020 = getelementptr inbounds i32, i32* %3087, i32 1
  store i32* %incdec.ptr6020, i32** %argl, align 8
  %3088 = load i32, i32* %i, align 4
  %cmp6021 = icmp ne i32 %3088, -1
  br i1 %cmp6021, label %if.then.6023, label %if.end.6029

if.then.6023:                                     ; preds = %if.end.6018
  %3089 = load i8**, i8*** %args, align 8
  %arrayidx6024 = getelementptr inbounds i8*, i8** %3089, i64 0
  %3090 = load i8*, i8** %arrayidx6024, align 8
  %3091 = load i8**, i8*** %args, align 8
  %arrayidx6025 = getelementptr inbounds i8*, i8** %3091, i64 1
  %3092 = load i8*, i8** %arrayidx6025, align 8
  %call6026 = call i32 @ParseAttrColor(i8* %3090, i8* %3092, i32 1)
  %3093 = load i32, i32* %i, align 4
  %idxprom6027 = sext i32 %3093 to i64
  %arrayidx6028 = getelementptr inbounds [0 x i32], [0 x i32]* @renditions, i32 0, i64 %idxprom6027
  store i32 %call6026, i32* %arrayidx6028, align 4
  call void @WindowChanged(%struct.win* null, i32 119)
  call void @WindowChanged(%struct.win* null, i32 87)
  call void @WindowChanged(%struct.win* null, i32 0)
  br label %sw.epilog.7356

if.end.6029:                                      ; preds = %if.end.6018
  br label %sw.bb.6030

sw.bb.6030:                                       ; preds = %land.end, %if.end.6029
  store i32 0, i32* %i, align 4
  %3094 = load i8**, i8*** %args, align 8
  %3095 = load i8*, i8** %3094, align 8
  %tobool6031 = icmp ne i8* %3095, null
  br i1 %tobool6031, label %if.then.6032, label %if.end.6041

if.then.6032:                                     ; preds = %sw.bb.6030
  %3096 = load i8**, i8*** %args, align 8
  %3097 = load i8*, i8** %3096, align 8
  %3098 = load i8**, i8*** %args, align 8
  %arrayidx6033 = getelementptr inbounds i8*, i8** %3098, i64 1
  %3099 = load i8*, i8** %arrayidx6033, align 8
  %call6034 = call i32 @ParseAttrColor(i8* %3097, i8* %3099, i32 1)
  store i32 %call6034, i32* %i, align 4
  %3100 = load i32, i32* %i, align 4
  %cmp6035 = icmp eq i32 %3100, -1
  br i1 %cmp6035, label %if.then.6037, label %if.end.6038

if.then.6037:                                     ; preds = %if.then.6032
  br label %sw.epilog.7356

if.end.6038:                                      ; preds = %if.then.6032
  %3101 = load i32, i32* %i, align 4
  call void @ApplyAttrColor(i32 %3101, %struct.mchar* @mchar_so)
  call void @WindowChanged(%struct.win* null, i32 0)
  br label %do.body.6039

do.body.6039:                                     ; preds = %if.end.6038
  br label %do.end.6040

do.end.6040:                                      ; preds = %do.body.6039
  br label %if.end.6041

if.end.6041:                                      ; preds = %do.end.6040, %sw.bb.6030
  %3102 = load i32, i32* %msgok, align 4
  %tobool6042 = icmp ne i32 %3102, 0
  br i1 %tobool6042, label %if.then.6043, label %if.end.6055

if.then.6043:                                     ; preds = %if.end.6041
  %3103 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6044 = getelementptr inbounds %struct.action, %struct.action* %3103, i32 0, i32 3
  %3104 = load i32, i32* %quiet6044, align 4
  %tobool6045 = icmp ne i32 %3104, 0
  br i1 %tobool6045, label %cond.false.6047, label %cond.true.6046

cond.true.6046:                                   ; preds = %if.then.6043
  br label %cond.end.6051

cond.false.6047:                                  ; preds = %if.then.6043
  %3105 = load i32, i32* @queryflag, align 4
  %cmp6048 = icmp sge i32 %3105, 0
  %cond6050 = select i1 %cmp6048, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6051

cond.end.6051:                                    ; preds = %cond.false.6047, %cond.true.6046
  %cond6052 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6046 ], [ %cond6050, %cond.false.6047 ]
  %3106 = load i8, i8* getelementptr inbounds (%struct.mchar, %struct.mchar* @mchar_so, i32 0, i32 1), align 1
  %conv6053 = zext i8 %3106 to i32
  %3107 = load i8, i8* getelementptr inbounds (%struct.mchar, %struct.mchar* @mchar_so, i32 0, i32 4), align 1
  %conv6054 = zext i8 %3107 to i32
  %xor = xor i32 153, %conv6054
  call void (i32, i8*, ...) %cond6052(i32 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.246, i32 0, i32 0), i32 %conv6053, i32 %xor)
  br label %if.end.6055

if.end.6055:                                      ; preds = %cond.end.6051, %if.end.6041
  br label %sw.epilog.7356

sw.bb.6056:                                       ; preds = %land.end
  %3108 = load i8**, i8*** %args, align 8
  %3109 = load i8*, i8** %3108, align 8
  call void @do_source(i8* %3109)
  br label %sw.epilog.7356

sw.bb.6057:                                       ; preds = %land.end
  store i8* null, i8** %s, align 8
  %3110 = load i8**, i8*** %args, align 8
  %3111 = load i8*, i8** %3110, align 8
  %tobool6058 = icmp ne i8* %3111, null
  br i1 %tobool6058, label %if.else.6072, label %if.then.6059

if.then.6059:                                     ; preds = %sw.bb.6057
  %3112 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6060 = getelementptr inbounds %struct.action, %struct.action* %3112, i32 0, i32 3
  %3113 = load i32, i32* %quiet6060, align 4
  %tobool6061 = icmp ne i32 %3113, 0
  br i1 %tobool6061, label %cond.false.6063, label %cond.true.6062

cond.true.6062:                                   ; preds = %if.then.6059
  br label %cond.end.6067

cond.false.6063:                                  ; preds = %if.then.6059
  %3114 = load i32, i32* @queryflag, align 4
  %cmp6064 = icmp sge i32 %3114, 0
  %cond6066 = select i1 %cmp6064, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6067

cond.end.6067:                                    ; preds = %cond.false.6063, %cond.true.6062
  %cond6068 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6062 ], [ %cond6066, %cond.false.6063 ]
  call void (i32, i8*, ...) %cond6068(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @HostName, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @SockPath, i32 0, i32 0))
  %3115 = load %struct.display*, %struct.display** @display, align 8
  %d_fore6069 = getelementptr inbounds %struct.display, %struct.display* %3115, i32 0, i32 10
  %3116 = load %struct.win*, %struct.win** %d_fore6069, align 8
  %3117 = load %struct.display*, %struct.display** @display, align 8
  %d_user6070 = getelementptr inbounds %struct.display, %struct.display* %3117, i32 0, i32 1
  %call6071 = call i32 @InputSu(%struct.win* %3116, %struct.acluser** %d_user6070, i8* null)
  br label %if.end.6096

if.else.6072:                                     ; preds = %sw.bb.6057
  %3118 = load i8**, i8*** %args, align 8
  %arrayidx6073 = getelementptr inbounds i8*, i8** %3118, i64 1
  %3119 = load i8*, i8** %arrayidx6073, align 8
  %tobool6074 = icmp ne i8* %3119, null
  br i1 %tobool6074, label %if.else.6080, label %if.then.6075

if.then.6075:                                     ; preds = %if.else.6072
  %3120 = load %struct.display*, %struct.display** @display, align 8
  %d_fore6076 = getelementptr inbounds %struct.display, %struct.display* %3120, i32 0, i32 10
  %3121 = load %struct.win*, %struct.win** %d_fore6076, align 8
  %3122 = load %struct.display*, %struct.display** @display, align 8
  %d_user6077 = getelementptr inbounds %struct.display, %struct.display* %3122, i32 0, i32 1
  %3123 = load i8**, i8*** %args, align 8
  %arrayidx6078 = getelementptr inbounds i8*, i8** %3123, i64 0
  %3124 = load i8*, i8** %arrayidx6078, align 8
  %call6079 = call i32 @InputSu(%struct.win* %3121, %struct.acluser** %d_user6077, i8* %3124)
  br label %if.end.6095

if.else.6080:                                     ; preds = %if.else.6072
  %3125 = load i8**, i8*** %args, align 8
  %arrayidx6081 = getelementptr inbounds i8*, i8** %3125, i64 2
  %3126 = load i8*, i8** %arrayidx6081, align 8
  %tobool6082 = icmp ne i8* %3126, null
  br i1 %tobool6082, label %if.else.6088, label %if.then.6083

if.then.6083:                                     ; preds = %if.else.6080
  %3127 = load %struct.display*, %struct.display** @display, align 8
  %d_user6084 = getelementptr inbounds %struct.display, %struct.display* %3127, i32 0, i32 1
  %3128 = load i8**, i8*** %args, align 8
  %arrayidx6085 = getelementptr inbounds i8*, i8** %3128, i64 0
  %3129 = load i8*, i8** %arrayidx6085, align 8
  %3130 = load i8**, i8*** %args, align 8
  %arrayidx6086 = getelementptr inbounds i8*, i8** %3130, i64 1
  %3131 = load i8*, i8** %arrayidx6086, align 8
  %call6087 = call i8* @DoSu(%struct.acluser** %d_user6084, i8* %3129, i8* %3131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.248, i32 0, i32 0))
  store i8* %call6087, i8** %s, align 8
  br label %if.end.6094

if.else.6088:                                     ; preds = %if.else.6080
  %3132 = load %struct.display*, %struct.display** @display, align 8
  %d_user6089 = getelementptr inbounds %struct.display, %struct.display* %3132, i32 0, i32 1
  %3133 = load i8**, i8*** %args, align 8
  %arrayidx6090 = getelementptr inbounds i8*, i8** %3133, i64 0
  %3134 = load i8*, i8** %arrayidx6090, align 8
  %3135 = load i8**, i8*** %args, align 8
  %arrayidx6091 = getelementptr inbounds i8*, i8** %3135, i64 1
  %3136 = load i8*, i8** %arrayidx6091, align 8
  %3137 = load i8**, i8*** %args, align 8
  %arrayidx6092 = getelementptr inbounds i8*, i8** %3137, i64 2
  %3138 = load i8*, i8** %arrayidx6092, align 8
  %call6093 = call i8* @DoSu(%struct.acluser** %d_user6089, i8* %3134, i8* %3136, i8* %3138)
  store i8* %call6093, i8** %s, align 8
  br label %if.end.6094

if.end.6094:                                      ; preds = %if.else.6088, %if.then.6083
  br label %if.end.6095

if.end.6095:                                      ; preds = %if.end.6094, %if.then.6075
  br label %if.end.6096

if.end.6096:                                      ; preds = %if.end.6095, %cond.end.6067
  %3139 = load i8*, i8** %s, align 8
  %tobool6097 = icmp ne i8* %3139, null
  br i1 %tobool6097, label %if.then.6098, label %if.end.6108

if.then.6098:                                     ; preds = %if.end.6096
  %3140 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6099 = getelementptr inbounds %struct.action, %struct.action* %3140, i32 0, i32 3
  %3141 = load i32, i32* %quiet6099, align 4
  %tobool6100 = icmp ne i32 %3141, 0
  br i1 %tobool6100, label %cond.false.6102, label %cond.true.6101

cond.true.6101:                                   ; preds = %if.then.6098
  br label %cond.end.6106

cond.false.6102:                                  ; preds = %if.then.6098
  %3142 = load i32, i32* @queryflag, align 4
  %cmp6103 = icmp sge i32 %3142, 0
  %cond6105 = select i1 %cmp6103, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6106

cond.end.6106:                                    ; preds = %cond.false.6102, %cond.true.6101
  %cond6107 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6101 ], [ %cond6105, %cond.false.6102 ]
  %3143 = load i8*, i8** %s, align 8
  call void (i32, i8*, ...) %cond6107(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %3143)
  br label %if.end.6108

if.end.6108:                                      ; preds = %cond.end.6106, %if.end.6096
  br label %sw.epilog.7356

sw.bb.6109:                                       ; preds = %land.end
  %3144 = load i8**, i8*** %args, align 8
  %arrayidx6110 = getelementptr inbounds i8*, i8** %3144, i64 0
  %3145 = load i8*, i8** %arrayidx6110, align 8
  store i8* %3145, i8** %s, align 8
  %3146 = load i8*, i8** %s, align 8
  %tobool6111 = icmp ne i8* %3146, null
  br i1 %tobool6111, label %land.lhs.true.6112, label %if.else.6117

land.lhs.true.6112:                               ; preds = %sw.bb.6109
  %3147 = load i8*, i8** %s, align 8
  %call6113 = call i32 @strcmp(i8* %3147, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)) #8
  %tobool6114 = icmp ne i32 %call6113, 0
  br i1 %tobool6114, label %if.else.6117, label %if.then.6115

if.then.6115:                                     ; preds = %land.lhs.true.6112
  %call6116 = call i32 @AddCanvas(i32 2)
  br label %if.end.6119

if.else.6117:                                     ; preds = %land.lhs.true.6112, %sw.bb.6109
  %call6118 = call i32 @AddCanvas(i32 1)
  br label %if.end.6119

if.end.6119:                                      ; preds = %if.else.6117, %if.then.6115
  call void @Activate(i32 -1)
  br label %sw.epilog.7356

sw.bb.6120:                                       ; preds = %land.end
  call void @RemCanvas()
  call void @Activate(i32 -1)
  br label %sw.epilog.7356

sw.bb.6121:                                       ; preds = %land.end
  call void @OneCanvas()
  call void @Activate(i32 -1)
  br label %sw.epilog.7356

sw.bb.6122:                                       ; preds = %land.end
  %3148 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6123 = getelementptr inbounds %struct.display, %struct.display* %3148, i32 0, i32 4
  %3149 = load %struct.canvas*, %struct.canvas** %d_forecv6123, align 8
  %c_xs6124 = getelementptr inbounds %struct.canvas, %struct.canvas* %3149, i32 0, i32 14
  %3150 = load i32, i32* %c_xs6124, align 4
  %3151 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6125 = getelementptr inbounds %struct.display, %struct.display* %3151, i32 0, i32 4
  %3152 = load %struct.canvas*, %struct.canvas** %d_forecv6125, align 8
  %c_xoff = getelementptr inbounds %struct.canvas, %struct.canvas* %3152, i32 0, i32 12
  store i32 %3150, i32* %c_xoff, align 4
  %3153 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6126 = getelementptr inbounds %struct.display, %struct.display* %3153, i32 0, i32 4
  %3154 = load %struct.canvas*, %struct.canvas** %d_forecv6126, align 8
  %c_ys6127 = getelementptr inbounds %struct.canvas, %struct.canvas* %3154, i32 0, i32 16
  %3155 = load i32, i32* %c_ys6127, align 4
  %3156 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6128 = getelementptr inbounds %struct.display, %struct.display* %3156, i32 0, i32 4
  %3157 = load %struct.canvas*, %struct.canvas** %d_forecv6128, align 8
  %c_yoff = getelementptr inbounds %struct.canvas, %struct.canvas* %3157, i32 0, i32 13
  store i32 %3155, i32* %c_yoff, align 4
  %3158 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6129 = getelementptr inbounds %struct.display, %struct.display* %3158, i32 0, i32 4
  %3159 = load %struct.canvas*, %struct.canvas** %d_forecv6129, align 8
  call void @RethinkViewportOffsets(%struct.canvas* %3159)
  %3160 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6130 = getelementptr inbounds %struct.display, %struct.display* %3160, i32 0, i32 4
  %3161 = load %struct.canvas*, %struct.canvas** %d_forecv6130, align 8
  %c_layer6131 = getelementptr inbounds %struct.canvas, %struct.canvas* %3161, i32 0, i32 9
  %3162 = load %struct.layer*, %struct.layer** %c_layer6131, align 8
  %3163 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6132 = getelementptr inbounds %struct.display, %struct.display* %3163, i32 0, i32 4
  %3164 = load %struct.canvas*, %struct.canvas** %d_forecv6132, align 8
  %c_xe6133 = getelementptr inbounds %struct.canvas, %struct.canvas* %3164, i32 0, i32 15
  %3165 = load i32, i32* %c_xe6133, align 4
  %3166 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6134 = getelementptr inbounds %struct.display, %struct.display* %3166, i32 0, i32 4
  %3167 = load %struct.canvas*, %struct.canvas** %d_forecv6134, align 8
  %c_xs6135 = getelementptr inbounds %struct.canvas, %struct.canvas* %3167, i32 0, i32 14
  %3168 = load i32, i32* %c_xs6135, align 4
  %sub6136 = sub nsw i32 %3165, %3168
  %add6137 = add nsw i32 %sub6136, 1
  %3169 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6138 = getelementptr inbounds %struct.display, %struct.display* %3169, i32 0, i32 4
  %3170 = load %struct.canvas*, %struct.canvas** %d_forecv6138, align 8
  %c_ye6139 = getelementptr inbounds %struct.canvas, %struct.canvas* %3170, i32 0, i32 17
  %3171 = load i32, i32* %c_ye6139, align 4
  %3172 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6140 = getelementptr inbounds %struct.display, %struct.display* %3172, i32 0, i32 4
  %3173 = load %struct.canvas*, %struct.canvas** %d_forecv6140, align 8
  %c_ys6141 = getelementptr inbounds %struct.canvas, %struct.canvas* %3173, i32 0, i32 16
  %3174 = load i32, i32* %c_ys6141, align 4
  %sub6142 = sub nsw i32 %3171, %3174
  %add6143 = add nsw i32 %sub6142, 1
  call void @ResizeLayer(%struct.layer* %3162, i32 %add6137, i32 %add6143, %struct.display* null)
  %3175 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6144 = getelementptr inbounds %struct.display, %struct.display* %3175, i32 0, i32 4
  %3176 = load %struct.canvas*, %struct.canvas** %d_forecv6144, align 8
  %c_layer6145 = getelementptr inbounds %struct.canvas, %struct.canvas* %3176, i32 0, i32 9
  %3177 = load %struct.layer*, %struct.layer** %c_layer6145, align 8
  store %struct.layer* %3177, %struct.layer** @flayer, align 8
  %3178 = load %struct.layer*, %struct.layer** @flayer, align 8
  %3179 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_x = getelementptr inbounds %struct.layer, %struct.layer* %3179, i32 0, i32 3
  %3180 = load i32, i32* %l_x, align 4
  %3181 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_y = getelementptr inbounds %struct.layer, %struct.layer* %3181, i32 0, i32 4
  %3182 = load i32, i32* %l_y, align 4
  call void @LGotoPos(%struct.layer* %3178, i32 %3180, i32 %3182)
  br label %sw.epilog.7356

sw.bb.6146:                                       ; preds = %land.end
  store %struct.canvas* null, %struct.canvas** %cv, align 8
  %3183 = load i8**, i8*** %args, align 8
  %3184 = load i8*, i8** %3183, align 8
  %tobool6147 = icmp ne i8* %3184, null
  br i1 %tobool6147, label %lor.lhs.false.6148, label %if.then.6151

lor.lhs.false.6148:                               ; preds = %sw.bb.6146
  %3185 = load i8**, i8*** %args, align 8
  %3186 = load i8*, i8** %3185, align 8
  %call6149 = call i32 @strcmp(i8* %3186, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.249, i32 0, i32 0)) #8
  %tobool6150 = icmp ne i32 %call6149, 0
  br i1 %tobool6150, label %if.else.6160, label %if.then.6151

if.then.6151:                                     ; preds = %lor.lhs.false.6148, %sw.bb.6146
  %3187 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6152 = getelementptr inbounds %struct.display, %struct.display* %3187, i32 0, i32 4
  %3188 = load %struct.canvas*, %struct.canvas** %d_forecv6152, align 8
  %c_next = getelementptr inbounds %struct.canvas, %struct.canvas* %3188, i32 0, i32 0
  %3189 = load %struct.canvas*, %struct.canvas** %c_next, align 8
  %tobool6153 = icmp ne %struct.canvas* %3189, null
  br i1 %tobool6153, label %cond.true.6154, label %cond.false.6157

cond.true.6154:                                   ; preds = %if.then.6151
  %3190 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6155 = getelementptr inbounds %struct.display, %struct.display* %3190, i32 0, i32 4
  %3191 = load %struct.canvas*, %struct.canvas** %d_forecv6155, align 8
  %c_next6156 = getelementptr inbounds %struct.canvas, %struct.canvas* %3191, i32 0, i32 0
  %3192 = load %struct.canvas*, %struct.canvas** %c_next6156, align 8
  br label %cond.end.6158

cond.false.6157:                                  ; preds = %if.then.6151
  %3193 = load %struct.display*, %struct.display** @display, align 8
  %d_cvlist = getelementptr inbounds %struct.display, %struct.display* %3193, i32 0, i32 3
  %3194 = load %struct.canvas*, %struct.canvas** %d_cvlist, align 8
  br label %cond.end.6158

cond.end.6158:                                    ; preds = %cond.false.6157, %cond.true.6154
  %cond6159 = phi %struct.canvas* [ %3192, %cond.true.6154 ], [ %3194, %cond.false.6157 ]
  store %struct.canvas* %cond6159, %struct.canvas** %cv, align 8
  br label %if.end.6253

if.else.6160:                                     ; preds = %lor.lhs.false.6148
  %3195 = load i8**, i8*** %args, align 8
  %3196 = load i8*, i8** %3195, align 8
  %call6161 = call i32 @strcmp(i8* %3196, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0)) #8
  %tobool6162 = icmp ne i32 %call6161, 0
  br i1 %tobool6162, label %if.else.6179, label %if.then.6163

if.then.6163:                                     ; preds = %if.else.6160
  %3197 = load %struct.display*, %struct.display** @display, align 8
  %d_cvlist6164 = getelementptr inbounds %struct.display, %struct.display* %3197, i32 0, i32 3
  %3198 = load %struct.canvas*, %struct.canvas** %d_cvlist6164, align 8
  store %struct.canvas* %3198, %struct.canvas** %cv, align 8
  br label %for.cond.6165

for.cond.6165:                                    ; preds = %for.inc.6176, %if.then.6163
  %3199 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next6166 = getelementptr inbounds %struct.canvas, %struct.canvas* %3199, i32 0, i32 0
  %3200 = load %struct.canvas*, %struct.canvas** %c_next6166, align 8
  %tobool6167 = icmp ne %struct.canvas* %3200, null
  br i1 %tobool6167, label %land.rhs.6168, label %land.end.6173

land.rhs.6168:                                    ; preds = %for.cond.6165
  %3201 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next6169 = getelementptr inbounds %struct.canvas, %struct.canvas* %3201, i32 0, i32 0
  %3202 = load %struct.canvas*, %struct.canvas** %c_next6169, align 8
  %3203 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6170 = getelementptr inbounds %struct.display, %struct.display* %3203, i32 0, i32 4
  %3204 = load %struct.canvas*, %struct.canvas** %d_forecv6170, align 8
  %cmp6171 = icmp ne %struct.canvas* %3202, %3204
  br label %land.end.6173

land.end.6173:                                    ; preds = %land.rhs.6168, %for.cond.6165
  %3205 = phi i1 [ false, %for.cond.6165 ], [ %cmp6171, %land.rhs.6168 ]
  br i1 %3205, label %for.body.6175, label %for.end.6178

for.body.6175:                                    ; preds = %land.end.6173
  br label %for.inc.6176

for.inc.6176:                                     ; preds = %for.body.6175
  %3206 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next6177 = getelementptr inbounds %struct.canvas, %struct.canvas* %3206, i32 0, i32 0
  %3207 = load %struct.canvas*, %struct.canvas** %c_next6177, align 8
  store %struct.canvas* %3207, %struct.canvas** %cv, align 8
  br label %for.cond.6165

for.end.6178:                                     ; preds = %land.end.6173
  br label %if.end.6252

if.else.6179:                                     ; preds = %if.else.6160
  %3208 = load i8**, i8*** %args, align 8
  %3209 = load i8*, i8** %3208, align 8
  %call6180 = call i32 @strcmp(i8* %3209, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.250, i32 0, i32 0)) #8
  %tobool6181 = icmp ne i32 %call6180, 0
  br i1 %tobool6181, label %if.else.6184, label %if.then.6182

if.then.6182:                                     ; preds = %if.else.6179
  %3210 = load %struct.display*, %struct.display** @display, align 8
  %d_cvlist6183 = getelementptr inbounds %struct.display, %struct.display* %3210, i32 0, i32 3
  %3211 = load %struct.canvas*, %struct.canvas** %d_cvlist6183, align 8
  store %struct.canvas* %3211, %struct.canvas** %cv, align 8
  br label %if.end.6251

if.else.6184:                                     ; preds = %if.else.6179
  %3212 = load i8**, i8*** %args, align 8
  %3213 = load i8*, i8** %3212, align 8
  %call6185 = call i32 @strcmp(i8* %3213, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.251, i32 0, i32 0)) #8
  %tobool6186 = icmp ne i32 %call6185, 0
  br i1 %tobool6186, label %if.else.6196, label %if.then.6187

if.then.6187:                                     ; preds = %if.else.6184
  %3214 = load %struct.display*, %struct.display** @display, align 8
  %d_cvlist6188 = getelementptr inbounds %struct.display, %struct.display* %3214, i32 0, i32 3
  %3215 = load %struct.canvas*, %struct.canvas** %d_cvlist6188, align 8
  store %struct.canvas* %3215, %struct.canvas** %cv, align 8
  br label %for.cond.6189

for.cond.6189:                                    ; preds = %for.inc.6193, %if.then.6187
  %3216 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next6190 = getelementptr inbounds %struct.canvas, %struct.canvas* %3216, i32 0, i32 0
  %3217 = load %struct.canvas*, %struct.canvas** %c_next6190, align 8
  %tobool6191 = icmp ne %struct.canvas* %3217, null
  br i1 %tobool6191, label %for.body.6192, label %for.end.6195

for.body.6192:                                    ; preds = %for.cond.6189
  br label %for.inc.6193

for.inc.6193:                                     ; preds = %for.body.6192
  %3218 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next6194 = getelementptr inbounds %struct.canvas, %struct.canvas* %3218, i32 0, i32 0
  %3219 = load %struct.canvas*, %struct.canvas** %c_next6194, align 8
  store %struct.canvas* %3219, %struct.canvas** %cv, align 8
  br label %for.cond.6189

for.end.6195:                                     ; preds = %for.cond.6189
  br label %if.end.6250

if.else.6196:                                     ; preds = %if.else.6184
  %3220 = load i8**, i8*** %args, align 8
  %3221 = load i8*, i8** %3220, align 8
  %call6197 = call i32 @strcmp(i8* %3221, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.252, i32 0, i32 0)) #8
  %tobool6198 = icmp ne i32 %call6197, 0
  br i1 %tobool6198, label %if.else.6206, label %if.then.6199

if.then.6199:                                     ; preds = %if.else.6196
  %3222 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6200 = getelementptr inbounds %struct.display, %struct.display* %3222, i32 0, i32 4
  %3223 = load %struct.canvas*, %struct.canvas** %d_forecv6200, align 8
  %c_xs6201 = getelementptr inbounds %struct.canvas, %struct.canvas* %3223, i32 0, i32 14
  %3224 = load i32, i32* %c_xs6201, align 4
  %3225 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6202 = getelementptr inbounds %struct.display, %struct.display* %3225, i32 0, i32 4
  %3226 = load %struct.canvas*, %struct.canvas** %d_forecv6202, align 8
  %c_ys6203 = getelementptr inbounds %struct.canvas, %struct.canvas* %3226, i32 0, i32 16
  %3227 = load i32, i32* %c_ys6203, align 4
  %sub6204 = sub nsw i32 %3227, 1
  %call6205 = call %struct.canvas* @FindCanvas(i32 %3224, i32 %sub6204)
  store %struct.canvas* %call6205, %struct.canvas** %cv, align 8
  br label %if.end.6249

if.else.6206:                                     ; preds = %if.else.6196
  %3228 = load i8**, i8*** %args, align 8
  %3229 = load i8*, i8** %3228, align 8
  %call6207 = call i32 @strcmp(i8* %3229, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.253, i32 0, i32 0)) #8
  %tobool6208 = icmp ne i32 %call6207, 0
  br i1 %tobool6208, label %if.else.6216, label %if.then.6209

if.then.6209:                                     ; preds = %if.else.6206
  %3230 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6210 = getelementptr inbounds %struct.display, %struct.display* %3230, i32 0, i32 4
  %3231 = load %struct.canvas*, %struct.canvas** %d_forecv6210, align 8
  %c_xs6211 = getelementptr inbounds %struct.canvas, %struct.canvas* %3231, i32 0, i32 14
  %3232 = load i32, i32* %c_xs6211, align 4
  %3233 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6212 = getelementptr inbounds %struct.display, %struct.display* %3233, i32 0, i32 4
  %3234 = load %struct.canvas*, %struct.canvas** %d_forecv6212, align 8
  %c_ye6213 = getelementptr inbounds %struct.canvas, %struct.canvas* %3234, i32 0, i32 17
  %3235 = load i32, i32* %c_ye6213, align 4
  %add6214 = add nsw i32 %3235, 2
  %call6215 = call %struct.canvas* @FindCanvas(i32 %3232, i32 %add6214)
  store %struct.canvas* %call6215, %struct.canvas** %cv, align 8
  br label %if.end.6248

if.else.6216:                                     ; preds = %if.else.6206
  %3236 = load i8**, i8*** %args, align 8
  %3237 = load i8*, i8** %3236, align 8
  %call6217 = call i32 @strcmp(i8* %3237, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.254, i32 0, i32 0)) #8
  %tobool6218 = icmp ne i32 %call6217, 0
  br i1 %tobool6218, label %if.else.6226, label %if.then.6219

if.then.6219:                                     ; preds = %if.else.6216
  %3238 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6220 = getelementptr inbounds %struct.display, %struct.display* %3238, i32 0, i32 4
  %3239 = load %struct.canvas*, %struct.canvas** %d_forecv6220, align 8
  %c_xs6221 = getelementptr inbounds %struct.canvas, %struct.canvas* %3239, i32 0, i32 14
  %3240 = load i32, i32* %c_xs6221, align 4
  %sub6222 = sub nsw i32 %3240, 1
  %3241 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6223 = getelementptr inbounds %struct.display, %struct.display* %3241, i32 0, i32 4
  %3242 = load %struct.canvas*, %struct.canvas** %d_forecv6223, align 8
  %c_ys6224 = getelementptr inbounds %struct.canvas, %struct.canvas* %3242, i32 0, i32 16
  %3243 = load i32, i32* %c_ys6224, align 4
  %call6225 = call %struct.canvas* @FindCanvas(i32 %sub6222, i32 %3243)
  store %struct.canvas* %call6225, %struct.canvas** %cv, align 8
  br label %if.end.6247

if.else.6226:                                     ; preds = %if.else.6216
  %3244 = load i8**, i8*** %args, align 8
  %3245 = load i8*, i8** %3244, align 8
  %call6227 = call i32 @strcmp(i8* %3245, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.255, i32 0, i32 0)) #8
  %tobool6228 = icmp ne i32 %call6227, 0
  br i1 %tobool6228, label %if.else.6236, label %if.then.6229

if.then.6229:                                     ; preds = %if.else.6226
  %3246 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6230 = getelementptr inbounds %struct.display, %struct.display* %3246, i32 0, i32 4
  %3247 = load %struct.canvas*, %struct.canvas** %d_forecv6230, align 8
  %c_xe6231 = getelementptr inbounds %struct.canvas, %struct.canvas* %3247, i32 0, i32 15
  %3248 = load i32, i32* %c_xe6231, align 4
  %add6232 = add nsw i32 %3248, 1
  %3249 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6233 = getelementptr inbounds %struct.display, %struct.display* %3249, i32 0, i32 4
  %3250 = load %struct.canvas*, %struct.canvas** %d_forecv6233, align 8
  %c_ys6234 = getelementptr inbounds %struct.canvas, %struct.canvas* %3250, i32 0, i32 16
  %3251 = load i32, i32* %c_ys6234, align 4
  %call6235 = call %struct.canvas* @FindCanvas(i32 %add6232, i32 %3251)
  store %struct.canvas* %call6235, %struct.canvas** %cv, align 8
  br label %if.end.6246

if.else.6236:                                     ; preds = %if.else.6226
  %3252 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6237 = getelementptr inbounds %struct.action, %struct.action* %3252, i32 0, i32 3
  %3253 = load i32, i32* %quiet6237, align 4
  %tobool6238 = icmp ne i32 %3253, 0
  br i1 %tobool6238, label %cond.false.6240, label %cond.true.6239

cond.true.6239:                                   ; preds = %if.else.6236
  br label %cond.end.6244

cond.false.6240:                                  ; preds = %if.else.6236
  %3254 = load i32, i32* @queryflag, align 4
  %cmp6241 = icmp sge i32 %3254, 0
  %cond6243 = select i1 %cmp6241, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6244

cond.end.6244:                                    ; preds = %cond.false.6240, %cond.true.6239
  %cond6245 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6239 ], [ %cond6243, %cond.false.6240 ]
  %3255 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond6245(i32 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.256, i32 0, i32 0), i8* %3255)
  br label %sw.epilog.7356

if.end.6246:                                      ; preds = %if.then.6229
  br label %if.end.6247

if.end.6247:                                      ; preds = %if.end.6246, %if.then.6219
  br label %if.end.6248

if.end.6248:                                      ; preds = %if.end.6247, %if.then.6209
  br label %if.end.6249

if.end.6249:                                      ; preds = %if.end.6248, %if.then.6199
  br label %if.end.6250

if.end.6250:                                      ; preds = %if.end.6249, %for.end.6195
  br label %if.end.6251

if.end.6251:                                      ; preds = %if.end.6250, %if.then.6182
  br label %if.end.6252

if.end.6252:                                      ; preds = %if.end.6251, %for.end.6178
  br label %if.end.6253

if.end.6253:                                      ; preds = %if.end.6252, %cond.end.6158
  %3256 = load %struct.display*, %struct.display** @display, align 8
  %3257 = load %struct.canvas*, %struct.canvas** %cv, align 8
  call void @SetForeCanvas(%struct.display* %3256, %struct.canvas* %3257)
  br label %sw.epilog.7356

sw.bb.6254:                                       ; preds = %land.end
  store i32 0, i32* %i, align 4
  %3258 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6255 = getelementptr inbounds %struct.display, %struct.display* %3258, i32 0, i32 4
  %3259 = load %struct.canvas*, %struct.canvas** %d_forecv6255, align 8
  %c_slorient = getelementptr inbounds %struct.canvas, %struct.canvas* %3259, i32 0, i32 6
  %3260 = load i32, i32* %c_slorient, align 4
  %cmp6256 = icmp eq i32 %3260, 0
  br i1 %cmp6256, label %if.then.6258, label %if.end.6268

if.then.6258:                                     ; preds = %sw.bb.6254
  %3261 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6259 = getelementptr inbounds %struct.action, %struct.action* %3261, i32 0, i32 3
  %3262 = load i32, i32* %quiet6259, align 4
  %tobool6260 = icmp ne i32 %3262, 0
  br i1 %tobool6260, label %cond.false.6262, label %cond.true.6261

cond.true.6261:                                   ; preds = %if.then.6258
  br label %cond.end.6266

cond.false.6262:                                  ; preds = %if.then.6258
  %3263 = load i32, i32* @queryflag, align 4
  %cmp6263 = icmp sge i32 %3263, 0
  %cond6265 = select i1 %cmp6263, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6266

cond.end.6266:                                    ; preds = %cond.false.6262, %cond.true.6261
  %cond6267 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6261 ], [ %cond6265, %cond.false.6262 ]
  call void (i32, i8*, ...) %cond6267(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.257, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.6268:                                      ; preds = %sw.bb.6254
  br label %for.cond.6269

for.cond.6269:                                    ; preds = %for.inc.6307, %if.end.6268
  %3264 = load i8**, i8*** %args, align 8
  %3265 = load i8*, i8** %3264, align 8
  %tobool6270 = icmp ne i8* %3265, null
  br i1 %tobool6270, label %for.body.6271, label %for.end.6309

for.body.6271:                                    ; preds = %for.cond.6269
  %3266 = load i8**, i8*** %args, align 8
  %3267 = load i8*, i8** %3266, align 8
  %call6272 = call i32 @strcmp(i8* %3267, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0)) #8
  %tobool6273 = icmp ne i32 %call6272, 0
  br i1 %tobool6273, label %if.else.6276, label %if.then.6274

if.then.6274:                                     ; preds = %for.body.6271
  %3268 = load i32, i32* %i, align 4
  %or6275 = or i32 %3268, 1
  store i32 %or6275, i32* %i, align 4
  br label %if.end.6306

if.else.6276:                                     ; preds = %for.body.6271
  %3269 = load i8**, i8*** %args, align 8
  %3270 = load i8*, i8** %3269, align 8
  %call6277 = call i32 @strcmp(i8* %3270, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)) #8
  %tobool6278 = icmp ne i32 %call6277, 0
  br i1 %tobool6278, label %if.else.6281, label %if.then.6279

if.then.6279:                                     ; preds = %if.else.6276
  %3271 = load i32, i32* %i, align 4
  %or6280 = or i32 %3271, 2
  store i32 %or6280, i32* %i, align 4
  br label %if.end.6305

if.else.6281:                                     ; preds = %if.else.6276
  %3272 = load i8**, i8*** %args, align 8
  %3273 = load i8*, i8** %3272, align 8
  %call6282 = call i32 @strcmp(i8* %3273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0)) #8
  %tobool6283 = icmp ne i32 %call6282, 0
  br i1 %tobool6283, label %if.else.6286, label %if.then.6284

if.then.6284:                                     ; preds = %if.else.6281
  %3274 = load i32, i32* %i, align 4
  %or6285 = or i32 %3274, 3
  store i32 %or6285, i32* %i, align 4
  br label %if.end.6304

if.else.6286:                                     ; preds = %if.else.6281
  %3275 = load i8**, i8*** %args, align 8
  %3276 = load i8*, i8** %3275, align 8
  %call6287 = call i32 @strcmp(i8* %3276, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.124, i32 0, i32 0)) #8
  %tobool6288 = icmp ne i32 %call6287, 0
  br i1 %tobool6288, label %if.else.6296, label %if.then.6289

if.then.6289:                                     ; preds = %if.else.6286
  %3277 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv6290 = getelementptr inbounds %struct.display, %struct.display* %3277, i32 0, i32 4
  %3278 = load %struct.canvas*, %struct.canvas** %d_forecv6290, align 8
  %c_slorient6291 = getelementptr inbounds %struct.canvas, %struct.canvas* %3278, i32 0, i32 6
  %3279 = load i32, i32* %c_slorient6291, align 4
  %cmp6292 = icmp eq i32 %3279, 1
  %cond6294 = select i1 %cmp6292, i32 1, i32 2
  %3280 = load i32, i32* %i, align 4
  %or6295 = or i32 %3280, %cond6294
  store i32 %or6295, i32* %i, align 4
  br label %if.end.6303

if.else.6296:                                     ; preds = %if.else.6286
  %3281 = load i8**, i8*** %args, align 8
  %3282 = load i8*, i8** %3281, align 8
  %call6297 = call i32 @strcmp(i8* %3282, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.222, i32 0, i32 0)) #8
  %tobool6298 = icmp ne i32 %call6297, 0
  br i1 %tobool6298, label %if.else.6301, label %if.then.6299

if.then.6299:                                     ; preds = %if.else.6296
  %3283 = load i32, i32* %i, align 4
  %or6300 = or i32 %3283, 4
  store i32 %or6300, i32* %i, align 4
  br label %if.end.6302

if.else.6301:                                     ; preds = %if.else.6296
  br label %for.end.6309

if.end.6302:                                      ; preds = %if.then.6299
  br label %if.end.6303

if.end.6303:                                      ; preds = %if.end.6302, %if.then.6289
  br label %if.end.6304

if.end.6304:                                      ; preds = %if.end.6303, %if.then.6284
  br label %if.end.6305

if.end.6305:                                      ; preds = %if.end.6304, %if.then.6279
  br label %if.end.6306

if.end.6306:                                      ; preds = %if.end.6305, %if.then.6274
  br label %for.inc.6307

for.inc.6307:                                     ; preds = %if.end.6306
  %3284 = load i8**, i8*** %args, align 8
  %incdec.ptr6308 = getelementptr inbounds i8*, i8** %3284, i32 1
  store i8** %incdec.ptr6308, i8*** %args, align 8
  br label %for.cond.6269

for.end.6309:                                     ; preds = %if.else.6301, %for.cond.6269
  %3285 = load i8**, i8*** %args, align 8
  %3286 = load i8*, i8** %3285, align 8
  %tobool6310 = icmp ne i8* %3286, null
  br i1 %tobool6310, label %land.lhs.true.6311, label %if.end.6324

land.lhs.true.6311:                               ; preds = %for.end.6309
  %3287 = load i8**, i8*** %args, align 8
  %arrayidx6312 = getelementptr inbounds i8*, i8** %3287, i64 1
  %3288 = load i8*, i8** %arrayidx6312, align 8
  %tobool6313 = icmp ne i8* %3288, null
  br i1 %tobool6313, label %if.then.6314, label %if.end.6324

if.then.6314:                                     ; preds = %land.lhs.true.6311
  %3289 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6315 = getelementptr inbounds %struct.action, %struct.action* %3289, i32 0, i32 3
  %3290 = load i32, i32* %quiet6315, align 4
  %tobool6316 = icmp ne i32 %3290, 0
  br i1 %tobool6316, label %cond.false.6318, label %cond.true.6317

cond.true.6317:                                   ; preds = %if.then.6314
  br label %cond.end.6322

cond.false.6318:                                  ; preds = %if.then.6314
  %3291 = load i32, i32* @queryflag, align 4
  %cmp6319 = icmp sge i32 %3291, 0
  %cond6321 = select i1 %cmp6319, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6322

cond.end.6322:                                    ; preds = %cond.false.6318, %cond.true.6317
  %cond6323 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6317 ], [ %cond6321, %cond.false.6318 ]
  %3292 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond6323(i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.258, i32 0, i32 0), i8* %3292)
  br label %sw.epilog.7356

if.end.6324:                                      ; preds = %land.lhs.true.6311, %for.end.6309
  %3293 = load i8**, i8*** %args, align 8
  %3294 = load i8*, i8** %3293, align 8
  %tobool6325 = icmp ne i8* %3294, null
  br i1 %tobool6325, label %if.then.6326, label %if.else.6327

if.then.6326:                                     ; preds = %if.end.6324
  %3295 = load i8**, i8*** %args, align 8
  %3296 = load i8*, i8** %3295, align 8
  %3297 = load i32, i32* %i, align 4
  call void @ResizeRegions(i8* %3296, i32 %3297)
  br label %if.end.6330

if.else.6327:                                     ; preds = %if.end.6324
  %3298 = load i32, i32* %i, align 4
  %idxprom6328 = sext i32 %3298 to i64
  %arrayidx6329 = getelementptr inbounds [8 x i8*], [8 x i8*]* @resizeprompts, i32 0, i64 %idxprom6328
  %3299 = load i8*, i8** %arrayidx6329, align 8
  %3300 = load i32, i32* %i, align 4
  call void @Input(i8* %3299, i32 20, i32 4, void (i8*, i32, i8*)* @ResizeFin, i8* null, i32 %3300)
  br label %if.end.6330

if.end.6330:                                      ; preds = %if.else.6327, %if.then.6326
  br label %sw.epilog.7356

sw.bb.6331:                                       ; preds = %land.end
  %3301 = load %struct.action*, %struct.action** %act.addr, align 8
  %call6332 = call i32 @ParseSwitch(%struct.action* %3301, i32* @separate_sids)
  br label %sw.epilog.7356

sw.bb.6333:                                       ; preds = %land.end
  %3302 = load i8**, i8*** %args, align 8
  %call6334 = call i8** @SaveArgs(i8** %3302)
  store i8** %call6334, i8*** %args, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.6335

for.cond.6335:                                    ; preds = %for.inc.6354, %sw.bb.6333
  %3303 = load i32, i32* %i, align 4
  %idxprom6336 = sext i32 %3303 to i64
  %3304 = load i8**, i8*** %args, align 8
  %arrayidx6337 = getelementptr inbounds i8*, i8** %3304, i64 %idxprom6336
  %3305 = load i8*, i8** %arrayidx6337, align 8
  %tobool6338 = icmp ne i8* %3305, null
  br i1 %tobool6338, label %for.body.6339, label %for.end.6356

for.body.6339:                                    ; preds = %for.cond.6335
  %3306 = load i32, i32* %i, align 4
  %idxprom6340 = sext i32 %3306 to i64
  %3307 = load i8**, i8*** %args, align 8
  %arrayidx6341 = getelementptr inbounds i8*, i8** %3307, i64 %idxprom6340
  %3308 = load i8*, i8** %arrayidx6341, align 8
  %arrayidx6342 = getelementptr inbounds i8, i8* %3308, i64 0
  %3309 = load i8, i8* %arrayidx6342, align 1
  %tobool6343 = icmp ne i8 %3309, 0
  br i1 %tobool6343, label %if.then.6344, label %if.end.6351

if.then.6344:                                     ; preds = %for.body.6339
  %3310 = load i32, i32* %i, align 4
  %idxprom6345 = sext i32 %3310 to i64
  %3311 = load i8**, i8*** %args, align 8
  %arrayidx6346 = getelementptr inbounds i8*, i8** %3311, i64 %idxprom6345
  %3312 = load i8*, i8** %arrayidx6346, align 8
  %3313 = load i32, i32* %i, align 4
  %idxprom6347 = sext i32 %3313 to i64
  %3314 = load i8**, i8*** %args, align 8
  %arrayidx6348 = getelementptr inbounds i8*, i8** %3314, i64 %idxprom6347
  %3315 = load i8*, i8** %arrayidx6348, align 8
  %call6349 = call i64 @strlen(i8* %3315) #8
  %conv6350 = trunc i64 %call6349 to i32
  call void @Colonfin(i8* %3312, i32 %conv6350, i8* null)
  br label %if.end.6351

if.end.6351:                                      ; preds = %if.then.6344, %for.body.6339
  %3316 = load i32, i32* %i, align 4
  %idxprom6352 = sext i32 %3316 to i64
  %3317 = load i8**, i8*** %args, align 8
  %arrayidx6353 = getelementptr inbounds i8*, i8** %3317, i64 %idxprom6352
  %3318 = load i8*, i8** %arrayidx6353, align 8
  call void @free(i8* %3318) #4
  br label %for.inc.6354

for.inc.6354:                                     ; preds = %if.end.6351
  %3319 = load i32, i32* %i, align 4
  %inc6355 = add nsw i32 %3319, 1
  store i32 %inc6355, i32* %i, align 4
  br label %for.cond.6335

for.end.6356:                                     ; preds = %for.cond.6335
  %3320 = load i8**, i8*** %args, align 8
  %3321 = bitcast i8** %3320 to i8*
  call void @free(i8* %3321) #4
  br label %sw.epilog.7356

sw.bb.6357:                                       ; preds = %land.end
  %3322 = load %struct.action*, %struct.action** %act.addr, align 8
  %call6358 = call i32 @ParseSwitch(%struct.action* %3322, i32* @use_altscreen)
  %3323 = load i32, i32* %msgok, align 4
  %tobool6359 = icmp ne i32 %3323, 0
  br i1 %tobool6359, label %if.then.6360, label %if.end.6372

if.then.6360:                                     ; preds = %sw.bb.6357
  %3324 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6361 = getelementptr inbounds %struct.action, %struct.action* %3324, i32 0, i32 3
  %3325 = load i32, i32* %quiet6361, align 4
  %tobool6362 = icmp ne i32 %3325, 0
  br i1 %tobool6362, label %cond.false.6364, label %cond.true.6363

cond.true.6363:                                   ; preds = %if.then.6360
  br label %cond.end.6368

cond.false.6364:                                  ; preds = %if.then.6360
  %3326 = load i32, i32* @queryflag, align 4
  %cmp6365 = icmp sge i32 %3326, 0
  %cond6367 = select i1 %cmp6365, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6368

cond.end.6368:                                    ; preds = %cond.false.6364, %cond.true.6363
  %cond6369 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6363 ], [ %cond6367, %cond.false.6364 ]
  %3327 = load i32, i32* @use_altscreen, align 4
  %tobool6370 = icmp ne i32 %3327, 0
  %cond6371 = select i1 %tobool6370, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.106, i32 0, i32 0)
  call void (i32, i8*, ...) %cond6369(i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.259, i32 0, i32 0), i8* %cond6371)
  br label %if.end.6372

if.end.6372:                                      ; preds = %cond.end.6368, %sw.bb.6357
  br label %sw.epilog.7356

sw.bb.6373:                                       ; preds = %land.end
  %3328 = load i8**, i8*** %args, align 8
  %arrayidx6374 = getelementptr inbounds i8*, i8** %3328, i64 0
  %3329 = load i8*, i8** %arrayidx6374, align 8
  %tobool6375 = icmp ne i8* %3329, null
  br i1 %tobool6375, label %if.end.6386, label %if.then.6376

if.then.6376:                                     ; preds = %sw.bb.6373
  %3330 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6377 = getelementptr inbounds %struct.action, %struct.action* %3330, i32 0, i32 3
  %3331 = load i32, i32* %quiet6377, align 4
  %tobool6378 = icmp ne i32 %3331, 0
  br i1 %tobool6378, label %cond.false.6380, label %cond.true.6379

cond.true.6379:                                   ; preds = %if.then.6376
  br label %cond.end.6384

cond.false.6380:                                  ; preds = %if.then.6376
  %3332 = load i32, i32* @queryflag, align 4
  %cmp6381 = icmp sge i32 %3332, 0
  %cond6383 = select i1 %cmp6381, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6384

cond.end.6384:                                    ; preds = %cond.false.6380, %cond.true.6379
  %cond6385 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6379 ], [ %cond6383, %cond.false.6380 ]
  %3333 = load i32, i32* @maxwin, align 4
  call void (i32, i8*, ...) %cond6385(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.260, i32 0, i32 0), i32 %3333)
  br label %sw.epilog.7356

if.end.6386:                                      ; preds = %sw.bb.6373
  %3334 = load %struct.action*, %struct.action** %act.addr, align 8
  %call6387 = call i32 @ParseNum(%struct.action* %3334, i32* %n)
  %tobool6388 = icmp ne i32 %call6387, 0
  br i1 %tobool6388, label %if.then.6389, label %if.end.6390

if.then.6389:                                     ; preds = %if.end.6386
  br label %sw.epilog.7356

if.end.6390:                                      ; preds = %if.end.6386
  %3335 = load i32, i32* %n, align 4
  %cmp6391 = icmp slt i32 %3335, 1
  br i1 %cmp6391, label %if.then.6393, label %if.else.6403

if.then.6393:                                     ; preds = %if.end.6390
  %3336 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6394 = getelementptr inbounds %struct.action, %struct.action* %3336, i32 0, i32 3
  %3337 = load i32, i32* %quiet6394, align 4
  %tobool6395 = icmp ne i32 %3337, 0
  br i1 %tobool6395, label %cond.false.6397, label %cond.true.6396

cond.true.6396:                                   ; preds = %if.then.6393
  br label %cond.end.6401

cond.false.6397:                                  ; preds = %if.then.6393
  %3338 = load i32, i32* @queryflag, align 4
  %cmp6398 = icmp sge i32 %3338, 0
  %cond6400 = select i1 %cmp6398, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6401

cond.end.6401:                                    ; preds = %cond.false.6397, %cond.true.6396
  %cond6402 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6396 ], [ %cond6400, %cond.false.6397 ]
  call void (i32, i8*, ...) %cond6402(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.261, i32 0, i32 0))
  br label %if.end.6442

if.else.6403:                                     ; preds = %if.end.6390
  %3339 = load i32, i32* %n, align 4
  %cmp6404 = icmp sgt i32 %3339, 2048
  br i1 %cmp6404, label %if.then.6406, label %if.else.6416

if.then.6406:                                     ; preds = %if.else.6403
  %3340 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6407 = getelementptr inbounds %struct.action, %struct.action* %3340, i32 0, i32 3
  %3341 = load i32, i32* %quiet6407, align 4
  %tobool6408 = icmp ne i32 %3341, 0
  br i1 %tobool6408, label %cond.false.6410, label %cond.true.6409

cond.true.6409:                                   ; preds = %if.then.6406
  br label %cond.end.6414

cond.false.6410:                                  ; preds = %if.then.6406
  %3342 = load i32, i32* @queryflag, align 4
  %cmp6411 = icmp sge i32 %3342, 0
  %cond6413 = select i1 %cmp6411, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6414

cond.end.6414:                                    ; preds = %cond.false.6410, %cond.true.6409
  %cond6415 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6409 ], [ %cond6413, %cond.false.6410 ]
  call void (i32, i8*, ...) %cond6415(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0))
  br label %if.end.6441

if.else.6416:                                     ; preds = %if.else.6403
  %3343 = load i32, i32* %n, align 4
  %3344 = load i32, i32* @maxwin, align 4
  %cmp6417 = icmp sgt i32 %3343, %3344
  br i1 %cmp6417, label %land.lhs.true.6419, label %if.else.6431

land.lhs.true.6419:                               ; preds = %if.else.6416
  %3345 = load %struct.win*, %struct.win** @windows, align 8
  %tobool6420 = icmp ne %struct.win* %3345, null
  br i1 %tobool6420, label %if.then.6421, label %if.else.6431

if.then.6421:                                     ; preds = %land.lhs.true.6419
  %3346 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6422 = getelementptr inbounds %struct.action, %struct.action* %3346, i32 0, i32 3
  %3347 = load i32, i32* %quiet6422, align 4
  %tobool6423 = icmp ne i32 %3347, 0
  br i1 %tobool6423, label %cond.false.6425, label %cond.true.6424

cond.true.6424:                                   ; preds = %if.then.6421
  br label %cond.end.6429

cond.false.6425:                                  ; preds = %if.then.6421
  %3348 = load i32, i32* @queryflag, align 4
  %cmp6426 = icmp sge i32 %3348, 0
  %cond6428 = select i1 %cmp6426, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6429

cond.end.6429:                                    ; preds = %cond.false.6425, %cond.true.6424
  %cond6430 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6424 ], [ %cond6428, %cond.false.6425 ]
  call void (i32, i8*, ...) %cond6430(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.263, i32 0, i32 0))
  br label %if.end.6440

if.else.6431:                                     ; preds = %land.lhs.true.6419, %if.else.6416
  %3349 = load %struct.win*, %struct.win** @windows, align 8
  %tobool6432 = icmp ne %struct.win* %3349, null
  br i1 %tobool6432, label %if.end.6439, label %if.then.6433

if.then.6433:                                     ; preds = %if.else.6431
  %3350 = load %struct.win**, %struct.win*** @wtab, align 8
  %3351 = bitcast %struct.win** %3350 to i8*
  %3352 = load i32, i32* %n, align 4
  %conv6434 = sext i32 %3352 to i64
  %mul6435 = mul i64 %conv6434, 8
  %call6436 = call i8* @realloc(i8* %3351, i64 %mul6435) #4
  %3353 = bitcast i8* %call6436 to %struct.win**
  store %struct.win** %3353, %struct.win*** @wtab, align 8
  %3354 = load %struct.win**, %struct.win*** @wtab, align 8
  %3355 = bitcast %struct.win** %3354 to i8*
  %3356 = load i32, i32* %n, align 4
  %conv6437 = sext i32 %3356 to i64
  %mul6438 = mul i64 %conv6437, 8
  call void @llvm.memset.p0i8.i64(i8* %3355, i8 0, i64 %mul6438, i32 8, i1 false)
  br label %if.end.6439

if.end.6439:                                      ; preds = %if.then.6433, %if.else.6431
  %3357 = load i32, i32* %n, align 4
  store i32 %3357, i32* @maxwin, align 4
  br label %if.end.6440

if.end.6440:                                      ; preds = %if.end.6439, %cond.end.6429
  br label %if.end.6441

if.end.6441:                                      ; preds = %if.end.6440, %cond.end.6414
  br label %if.end.6442

if.end.6442:                                      ; preds = %if.end.6441, %cond.end.6401
  br label %sw.epilog.7356

sw.bb.6443:                                       ; preds = %land.end
  %3358 = load %struct.action*, %struct.action** %act.addr, align 8
  %3359 = load i8**, i8*** %args, align 8
  %3360 = load i8*, i8** %3359, align 8
  %call6444 = call i32 @ParseBase(%struct.action* %3358, i8* %3360, i32* %n, i32 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.264, i32 0, i32 0))
  %tobool6445 = icmp ne i32 %call6444, 0
  br i1 %tobool6445, label %if.then.6446, label %if.end.6447

if.then.6446:                                     ; preds = %sw.bb.6443
  br label %sw.epilog.7356

if.end.6447:                                      ; preds = %sw.bb.6443
  %3361 = load i8**, i8*** %args, align 8
  %arrayidx6448 = getelementptr inbounds i8*, i8** %3361, i64 1
  %3362 = load i8*, i8** %arrayidx6448, align 8
  %tobool6449 = icmp ne i8* %3362, null
  br i1 %tobool6449, label %if.else.6451, label %if.then.6450

if.then.6450:                                     ; preds = %if.end.6447
  %3363 = load i32, i32* %n, align 4
  call void @setbacktick(i32 %3363, i32 0, i32 0, i8** null)
  br label %if.end.6477

if.else.6451:                                     ; preds = %if.end.6447
  %3364 = load i32, i32* %argc, align 4
  %cmp6452 = icmp slt i32 %3364, 4
  br i1 %cmp6452, label %if.then.6454, label %if.end.6464

if.then.6454:                                     ; preds = %if.else.6451
  %3365 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6455 = getelementptr inbounds %struct.action, %struct.action* %3365, i32 0, i32 3
  %3366 = load i32, i32* %quiet6455, align 4
  %tobool6456 = icmp ne i32 %3366, 0
  br i1 %tobool6456, label %cond.false.6458, label %cond.true.6457

cond.true.6457:                                   ; preds = %if.then.6454
  br label %cond.end.6462

cond.false.6458:                                  ; preds = %if.then.6454
  %3367 = load i32, i32* @queryflag, align 4
  %cmp6459 = icmp sge i32 %3367, 0
  %cond6461 = select i1 %cmp6459, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6462

cond.end.6462:                                    ; preds = %cond.false.6458, %cond.true.6457
  %cond6463 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6457 ], [ %cond6461, %cond.false.6458 ]
  %3368 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) %cond6463(i32 0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.265, i32 0, i32 0), i8* %3368)
  br label %sw.epilog.7356

if.end.6464:                                      ; preds = %if.else.6451
  %3369 = load %struct.action*, %struct.action** %act.addr, align 8
  %3370 = load i8**, i8*** %args, align 8
  %arrayidx6465 = getelementptr inbounds i8*, i8** %3370, i64 1
  %3371 = load i8*, i8** %arrayidx6465, align 8
  %call6466 = call i32 @ParseBase(%struct.action* %3369, i8* %3371, i32* %lifespan, i32 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.264, i32 0, i32 0))
  %tobool6467 = icmp ne i32 %call6466, 0
  br i1 %tobool6467, label %if.then.6468, label %if.end.6469

if.then.6468:                                     ; preds = %if.end.6464
  br label %sw.epilog.7356

if.end.6469:                                      ; preds = %if.end.6464
  %3372 = load %struct.action*, %struct.action** %act.addr, align 8
  %3373 = load i8**, i8*** %args, align 8
  %arrayidx6470 = getelementptr inbounds i8*, i8** %3373, i64 2
  %3374 = load i8*, i8** %arrayidx6470, align 8
  %call6471 = call i32 @ParseBase(%struct.action* %3372, i8* %3374, i32* %tick, i32 10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.264, i32 0, i32 0))
  %tobool6472 = icmp ne i32 %call6471, 0
  br i1 %tobool6472, label %if.then.6473, label %if.end.6474

if.then.6473:                                     ; preds = %if.end.6469
  br label %sw.epilog.7356

if.end.6474:                                      ; preds = %if.end.6469
  %3375 = load i32, i32* %n, align 4
  %3376 = load i32, i32* %lifespan, align 4
  %3377 = load i32, i32* %tick, align 4
  %3378 = load i8**, i8*** %args, align 8
  %add.ptr6475 = getelementptr inbounds i8*, i8** %3378, i64 3
  %call6476 = call i8** @SaveArgs(i8** %add.ptr6475)
  call void @setbacktick(i32 %3375, i32 %3376, i32 %3377, i8** %call6476)
  br label %if.end.6477

if.end.6477:                                      ; preds = %if.end.6474, %if.then.6450
  call void @WindowChanged(%struct.win* null, i32 96)
  br label %sw.epilog.7356

sw.bb.6478:                                       ; preds = %land.end
  %3379 = load i8**, i8*** @blankerprg, align 8
  %tobool6479 = icmp ne i8** %3379, null
  br i1 %tobool6479, label %if.then.6480, label %if.end.6481

if.then.6480:                                     ; preds = %sw.bb.6478
  %3380 = load i8**, i8*** @blankerprg, align 8
  call void @RunBlanker(i8** %3380)
  br label %sw.epilog.7356

if.end.6481:                                      ; preds = %sw.bb.6478
  call void @ClearAll()
  call void @CursorVisibility(i32 -1)
  %3381 = load %struct.display*, %struct.display** @display, align 8
  %d_blocked = getelementptr inbounds %struct.display, %struct.display* %3381, i32 0, i32 102
  store i32 4, i32* %d_blocked, align 4
  br label %sw.epilog.7356

sw.bb.6482:                                       ; preds = %land.end
  %3382 = load i8**, i8*** %args, align 8
  %arrayidx6483 = getelementptr inbounds i8*, i8** %3382, i64 0
  %3383 = load i8*, i8** %arrayidx6483, align 8
  %tobool6484 = icmp ne i8* %3383, null
  br i1 %tobool6484, label %if.end.6527, label %if.then.6485

if.then.6485:                                     ; preds = %sw.bb.6482
  %3384 = load i8**, i8*** @blankerprg, align 8
  %tobool6486 = icmp ne i8** %3384, null
  br i1 %tobool6486, label %if.then.6487, label %if.else.6516

if.then.6487:                                     ; preds = %if.then.6485
  %arraydecay6489 = getelementptr inbounds [4096 x i8], [4096 x i8]* %path, i32 0, i32 0
  store i8* %arraydecay6489, i8** %p6488, align 8
  %3385 = load i8**, i8*** @blankerprg, align 8
  store i8** %3385, i8*** %pp6490, align 8
  br label %for.cond.6491

for.cond.6491:                                    ; preds = %for.inc.6502, %if.then.6487
  %3386 = load i8**, i8*** %pp6490, align 8
  %3387 = load i8*, i8** %3386, align 8
  %tobool6492 = icmp ne i8* %3387, null
  br i1 %tobool6492, label %for.body.6493, label %for.end.6504

for.body.6493:                                    ; preds = %for.cond.6491
  %3388 = load i8*, i8** %p6488, align 8
  %3389 = load i8*, i8** %p6488, align 8
  %arraydecay6494 = getelementptr inbounds [4096 x i8], [4096 x i8]* %path, i32 0, i32 0
  %sub.ptr.lhs.cast6495 = ptrtoint i8* %3389 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay6494 to i64
  %sub.ptr.sub6496 = sub i64 %sub.ptr.lhs.cast6495, %sub.ptr.rhs.cast
  %sub6497 = sub i64 4096, %sub.ptr.sub6496
  %sub6498 = sub i64 %sub6497, 1
  %3390 = load i8**, i8*** %pp6490, align 8
  %3391 = load i8*, i8** %3390, align 8
  %call6499 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %3388, i64 %sub6498, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.207, i32 0, i32 0), i8* %3391) #4
  %3392 = load i8*, i8** %p6488, align 8
  %idx.ext6500 = sext i32 %call6499 to i64
  %add.ptr6501 = getelementptr inbounds i8, i8* %3392, i64 %idx.ext6500
  store i8* %add.ptr6501, i8** %p6488, align 8
  br label %for.inc.6502

for.inc.6502:                                     ; preds = %for.body.6493
  %3393 = load i8**, i8*** %pp6490, align 8
  %incdec.ptr6503 = getelementptr inbounds i8*, i8** %3393, i32 1
  store i8** %incdec.ptr6503, i8*** %pp6490, align 8
  br label %for.cond.6491

for.end.6504:                                     ; preds = %for.cond.6491
  %3394 = load i8*, i8** %p6488, align 8
  %add.ptr6505 = getelementptr inbounds i8, i8* %3394, i64 -1
  store i8 0, i8* %add.ptr6505, align 1
  %3395 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6506 = getelementptr inbounds %struct.action, %struct.action* %3395, i32 0, i32 3
  %3396 = load i32, i32* %quiet6506, align 4
  %tobool6507 = icmp ne i32 %3396, 0
  br i1 %tobool6507, label %cond.false.6509, label %cond.true.6508

cond.true.6508:                                   ; preds = %for.end.6504
  br label %cond.end.6513

cond.false.6509:                                  ; preds = %for.end.6504
  %3397 = load i32, i32* @queryflag, align 4
  %cmp6510 = icmp sge i32 %3397, 0
  %cond6512 = select i1 %cmp6510, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6513

cond.end.6513:                                    ; preds = %cond.false.6509, %cond.true.6508
  %cond6514 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6508 ], [ %cond6512, %cond.false.6509 ]
  %arraydecay6515 = getelementptr inbounds [4096 x i8], [4096 x i8]* %path, i32 0, i32 0
  call void (i32, i8*, ...) %cond6514(i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.266, i32 0, i32 0), i8* %arraydecay6515)
  br label %if.end.6526

if.else.6516:                                     ; preds = %if.then.6485
  %3398 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6517 = getelementptr inbounds %struct.action, %struct.action* %3398, i32 0, i32 3
  %3399 = load i32, i32* %quiet6517, align 4
  %tobool6518 = icmp ne i32 %3399, 0
  br i1 %tobool6518, label %cond.false.6520, label %cond.true.6519

cond.true.6519:                                   ; preds = %if.else.6516
  br label %cond.end.6524

cond.false.6520:                                  ; preds = %if.else.6516
  %3400 = load i32, i32* @queryflag, align 4
  %cmp6521 = icmp sge i32 %3400, 0
  %cond6523 = select i1 %cmp6521, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6524

cond.end.6524:                                    ; preds = %cond.false.6520, %cond.true.6519
  %cond6525 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6519 ], [ %cond6523, %cond.false.6520 ]
  call void (i32, i8*, ...) %cond6525(i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.267, i32 0, i32 0))
  br label %if.end.6526

if.end.6526:                                      ; preds = %cond.end.6524, %cond.end.6513
  br label %sw.epilog.7356

if.end.6527:                                      ; preds = %sw.bb.6482
  %3401 = load i8**, i8*** @blankerprg, align 8
  %tobool6528 = icmp ne i8** %3401, null
  br i1 %tobool6528, label %if.then.6529, label %if.end.6537

if.then.6529:                                     ; preds = %if.end.6527
  %3402 = load i8**, i8*** @blankerprg, align 8
  store i8** %3402, i8*** %pp6530, align 8
  br label %for.cond.6531

for.cond.6531:                                    ; preds = %for.inc.6534, %if.then.6529
  %3403 = load i8**, i8*** %pp6530, align 8
  %3404 = load i8*, i8** %3403, align 8
  %tobool6532 = icmp ne i8* %3404, null
  br i1 %tobool6532, label %for.body.6533, label %for.end.6536

for.body.6533:                                    ; preds = %for.cond.6531
  %3405 = load i8**, i8*** %pp6530, align 8
  %3406 = load i8*, i8** %3405, align 8
  call void @free(i8* %3406) #4
  br label %for.inc.6534

for.inc.6534:                                     ; preds = %for.body.6533
  %3407 = load i8**, i8*** %pp6530, align 8
  %incdec.ptr6535 = getelementptr inbounds i8*, i8** %3407, i32 1
  store i8** %incdec.ptr6535, i8*** %pp6530, align 8
  br label %for.cond.6531

for.end.6536:                                     ; preds = %for.cond.6531
  %3408 = load i8**, i8*** @blankerprg, align 8
  %3409 = bitcast i8** %3408 to i8*
  call void @free(i8* %3409) #4
  store i8** null, i8*** @blankerprg, align 8
  br label %if.end.6537

if.end.6537:                                      ; preds = %for.end.6536, %if.end.6527
  %3410 = load i8**, i8*** %args, align 8
  %arrayidx6538 = getelementptr inbounds i8*, i8** %3410, i64 0
  %3411 = load i8*, i8** %arrayidx6538, align 8
  %arrayidx6539 = getelementptr inbounds i8, i8* %3411, i64 0
  %3412 = load i8, i8* %arrayidx6539, align 1
  %tobool6540 = icmp ne i8 %3412, 0
  br i1 %tobool6540, label %if.then.6541, label %if.end.6543

if.then.6541:                                     ; preds = %if.end.6537
  %3413 = load i8**, i8*** %args, align 8
  %call6542 = call i8** @SaveArgs(i8** %3413)
  store i8** %call6542, i8*** @blankerprg, align 8
  br label %if.end.6543

if.end.6543:                                      ; preds = %if.then.6541, %if.end.6537
  br label %sw.epilog.7356

sw.bb.6544:                                       ; preds = %land.end
  %3414 = load i8**, i8*** %args, align 8
  %3415 = load i8*, i8** %3414, align 8
  %tobool6545 = icmp ne i8* %3415, null
  br i1 %tobool6545, label %if.then.6546, label %if.end.6594

if.then.6546:                                     ; preds = %sw.bb.6544
  %3416 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %3416, %struct.display** %olddisplay6547, align 8
  %3417 = load i8**, i8*** %args, align 8
  %3418 = load i8*, i8** %3417, align 8
  %call6548 = call i32 @strcmp(i8* %3418, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)) #8
  %tobool6549 = icmp ne i32 %call6548, 0
  br i1 %tobool6549, label %if.else.6551, label %if.then.6550

if.then.6550:                                     ; preds = %if.then.6546
  store i32 0, i32* @idletimo, align 4
  br label %if.end.6559

if.else.6551:                                     ; preds = %if.then.6546
  %3419 = load i8**, i8*** %args, align 8
  %arrayidx6552 = getelementptr inbounds i8*, i8** %3419, i64 0
  %3420 = load i8*, i8** %arrayidx6552, align 8
  %arrayidx6553 = getelementptr inbounds i8, i8* %3420, i64 0
  %3421 = load i8, i8* %arrayidx6553, align 1
  %tobool6554 = icmp ne i8 %3421, 0
  br i1 %tobool6554, label %if.then.6555, label %if.end.6558

if.then.6555:                                     ; preds = %if.else.6551
  %3422 = load i8**, i8*** %args, align 8
  %3423 = load i8*, i8** %3422, align 8
  %call6556 = call i32 @atoi(i8* %3423) #8
  %mul6557 = mul nsw i32 %call6556, 1000
  store i32 %mul6557, i32* @idletimo, align 4
  br label %if.end.6558

if.end.6558:                                      ; preds = %if.then.6555, %if.else.6551
  br label %if.end.6559

if.end.6559:                                      ; preds = %if.end.6558, %if.then.6550
  %3424 = load i32, i32* %argc, align 4
  %cmp6560 = icmp sgt i32 %3424, 1
  br i1 %cmp6560, label %if.then.6562, label %if.end.6587

if.then.6562:                                     ; preds = %if.end.6559
  %3425 = load i8**, i8*** %args, align 8
  %arrayidx6563 = getelementptr inbounds i8*, i8** %3425, i64 1
  %3426 = load i8*, i8** %arrayidx6563, align 8
  %call6564 = call i32 @FindCommnr(i8* %3426)
  store i32 %call6564, i32* %i, align 4
  %cmp6565 = icmp eq i32 %call6564, -1
  br i1 %cmp6565, label %if.then.6567, label %if.end.6578

if.then.6567:                                     ; preds = %if.then.6562
  %3427 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6568 = getelementptr inbounds %struct.action, %struct.action* %3427, i32 0, i32 3
  %3428 = load i32, i32* %quiet6568, align 4
  %tobool6569 = icmp ne i32 %3428, 0
  br i1 %tobool6569, label %cond.false.6571, label %cond.true.6570

cond.true.6570:                                   ; preds = %if.then.6567
  br label %cond.end.6575

cond.false.6571:                                  ; preds = %if.then.6567
  %3429 = load i32, i32* @queryflag, align 4
  %cmp6572 = icmp sge i32 %3429, 0
  %cond6574 = select i1 %cmp6572, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6575

cond.end.6575:                                    ; preds = %cond.false.6571, %cond.true.6570
  %cond6576 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6570 ], [ %cond6574, %cond.false.6571 ]
  %3430 = load i8*, i8** @rc_name, align 8
  %3431 = load i8**, i8*** %args, align 8
  %arrayidx6577 = getelementptr inbounds i8*, i8** %3431, i64 1
  %3432 = load i8*, i8** %arrayidx6577, align 8
  call void (i32, i8*, ...) %cond6576(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.268, i32 0, i32 0), i8* %3430, i8* %3432)
  br label %sw.epilog.7356

if.end.6578:                                      ; preds = %if.then.6562
  %3433 = load i32, i32* %i, align 4
  %3434 = load i8**, i8*** %args, align 8
  %add.ptr6579 = getelementptr inbounds i8*, i8** %3434, i64 2
  %call6580 = call i32 @CheckArgNum(i32 %3433, i8** %add.ptr6579)
  %cmp6581 = icmp slt i32 %call6580, 0
  br i1 %cmp6581, label %if.then.6583, label %if.end.6584

if.then.6583:                                     ; preds = %if.end.6578
  br label %sw.epilog.7356

if.end.6584:                                      ; preds = %if.end.6578
  call void @ClearAction(%struct.action* @idleaction)
  %3435 = load i32, i32* %i, align 4
  %3436 = load i8**, i8*** %args, align 8
  %add.ptr6585 = getelementptr inbounds i8*, i8** %3436, i64 2
  %3437 = load i32*, i32** %argl, align 8
  %add.ptr6586 = getelementptr inbounds i32, i32* %3437, i64 2
  call void @SaveAction(%struct.action* @idleaction, i32 %3435, i8** %add.ptr6585, i32* %add.ptr6586)
  br label %if.end.6587

if.end.6587:                                      ; preds = %if.end.6584, %if.end.6559
  %3438 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %3438, %struct.display** @display, align 8
  br label %for.cond.6588

for.cond.6588:                                    ; preds = %for.inc.6591, %if.end.6587
  %3439 = load %struct.display*, %struct.display** @display, align 8
  %tobool6589 = icmp ne %struct.display* %3439, null
  br i1 %tobool6589, label %for.body.6590, label %for.end.6593

for.body.6590:                                    ; preds = %for.cond.6588
  call void @ResetIdle()
  br label %for.inc.6591

for.inc.6591:                                     ; preds = %for.body.6590
  %3440 = load %struct.display*, %struct.display** @display, align 8
  %d_next6592 = getelementptr inbounds %struct.display, %struct.display* %3440, i32 0, i32 0
  %3441 = load %struct.display*, %struct.display** %d_next6592, align 8
  store %struct.display* %3441, %struct.display** @display, align 8
  br label %for.cond.6588

for.end.6593:                                     ; preds = %for.cond.6588
  %3442 = load %struct.display*, %struct.display** %olddisplay6547, align 8
  store %struct.display* %3442, %struct.display** @display, align 8
  br label %if.end.6594

if.end.6594:                                      ; preds = %for.end.6593, %sw.bb.6544
  %3443 = load i32, i32* %msgok, align 4
  %tobool6595 = icmp ne i32 %3443, 0
  br i1 %tobool6595, label %if.then.6596, label %if.end.6623

if.then.6596:                                     ; preds = %if.end.6594
  %3444 = load i32, i32* @idletimo, align 4
  %tobool6597 = icmp ne i32 %3444, 0
  br i1 %tobool6597, label %if.then.6598, label %if.else.6612

if.then.6598:                                     ; preds = %if.then.6596
  %3445 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6599 = getelementptr inbounds %struct.action, %struct.action* %3445, i32 0, i32 3
  %3446 = load i32, i32* %quiet6599, align 4
  %tobool6600 = icmp ne i32 %3446, 0
  br i1 %tobool6600, label %cond.false.6602, label %cond.true.6601

cond.true.6601:                                   ; preds = %if.then.6598
  br label %cond.end.6606

cond.false.6602:                                  ; preds = %if.then.6598
  %3447 = load i32, i32* @queryflag, align 4
  %cmp6603 = icmp sge i32 %3447, 0
  %cond6605 = select i1 %cmp6603, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6606

cond.end.6606:                                    ; preds = %cond.false.6602, %cond.true.6601
  %cond6607 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6601 ], [ %cond6605, %cond.false.6602 ]
  %3448 = load i32, i32* @idletimo, align 4
  %div6608 = sdiv i32 %3448, 1000
  %3449 = load i32, i32* getelementptr inbounds (%struct.action, %struct.action* @idleaction, i32 0, i32 0), align 4
  %idxprom6609 = sext i32 %3449 to i64
  %arrayidx6610 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom6609
  %name6611 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx6610, i32 0, i32 0
  %3450 = load i8*, i8** %name6611, align 8
  call void (i32, i8*, ...) %cond6607(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.269, i32 0, i32 0), i32 %div6608, i8* %3450)
  br label %if.end.6622

if.else.6612:                                     ; preds = %if.then.6596
  %3451 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6613 = getelementptr inbounds %struct.action, %struct.action* %3451, i32 0, i32 3
  %3452 = load i32, i32* %quiet6613, align 4
  %tobool6614 = icmp ne i32 %3452, 0
  br i1 %tobool6614, label %cond.false.6616, label %cond.true.6615

cond.true.6615:                                   ; preds = %if.else.6612
  br label %cond.end.6620

cond.false.6616:                                  ; preds = %if.else.6612
  %3453 = load i32, i32* @queryflag, align 4
  %cmp6617 = icmp sge i32 %3453, 0
  %cond6619 = select i1 %cmp6617, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6620

cond.end.6620:                                    ; preds = %cond.false.6616, %cond.true.6615
  %cond6621 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6615 ], [ %cond6619, %cond.false.6616 ]
  call void (i32, i8*, ...) %cond6621(i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.270, i32 0, i32 0))
  br label %if.end.6622

if.end.6622:                                      ; preds = %cond.end.6620, %cond.end.6606
  br label %if.end.6623

if.end.6623:                                      ; preds = %if.end.6622, %if.end.6594
  br label %sw.epilog.7356

sw.bb.6624:                                       ; preds = %land.end
  store i32 0, i32* %i, align 4
  br label %for.cond.6625

for.cond.6625:                                    ; preds = %for.inc.6655, %sw.bb.6624
  %3454 = load i32, i32* %i, align 4
  %cmp6626 = icmp slt i32 %3454, 2
  br i1 %cmp6626, label %land.rhs.6628, label %land.end.6632

land.rhs.6628:                                    ; preds = %for.cond.6625
  %3455 = load i32, i32* %i, align 4
  %idxprom6629 = sext i32 %3455 to i64
  %3456 = load i8**, i8*** %args, align 8
  %arrayidx6630 = getelementptr inbounds i8*, i8** %3456, i64 %idxprom6629
  %3457 = load i8*, i8** %arrayidx6630, align 8
  %tobool6631 = icmp ne i8* %3457, null
  br label %land.end.6632

land.end.6632:                                    ; preds = %land.rhs.6628, %for.cond.6625
  %3458 = phi i1 [ false, %for.cond.6625 ], [ %tobool6631, %land.rhs.6628 ]
  br i1 %3458, label %for.body.6634, label %for.end.6657

for.body.6634:                                    ; preds = %land.end.6632
  %3459 = load i32, i32* %i, align 4
  %idxprom6635 = sext i32 %3459 to i64
  %3460 = load i8**, i8*** %args, align 8
  %arrayidx6636 = getelementptr inbounds i8*, i8** %3460, i64 %idxprom6635
  %3461 = load i8*, i8** %arrayidx6636, align 8
  %call6637 = call i32 @strcmp(i8* %3461, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.271, i32 0, i32 0)) #8
  %tobool6638 = icmp ne i32 %call6637, 0
  br i1 %tobool6638, label %lor.lhs.false.6639, label %if.then.6644

lor.lhs.false.6639:                               ; preds = %for.body.6634
  %3462 = load i32, i32* %i, align 4
  %idxprom6640 = sext i32 %3462 to i64
  %3463 = load i8**, i8*** %args, align 8
  %arrayidx6641 = getelementptr inbounds i8*, i8** %3463, i64 %idxprom6640
  %3464 = load i8*, i8** %arrayidx6641, align 8
  %call6642 = call i32 @strcmp(i8* %3464, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.272, i32 0, i32 0)) #8
  %tobool6643 = icmp ne i32 %call6642, 0
  br i1 %tobool6643, label %if.else.6645, label %if.then.6644

if.then.6644:                                     ; preds = %lor.lhs.false.6639, %for.body.6634
  store i32 -1, i32* %n, align 4
  br label %if.end.6649

if.else.6645:                                     ; preds = %lor.lhs.false.6639
  %3465 = load i32, i32* %i, align 4
  %idxprom6646 = sext i32 %3465 to i64
  %3466 = load i8**, i8*** %args, align 8
  %arrayidx6647 = getelementptr inbounds i8*, i8** %3466, i64 %idxprom6646
  %3467 = load i8*, i8** %arrayidx6647, align 8
  %call6648 = call i32 @atoi(i8* %3467) #8
  store i32 %call6648, i32* %n, align 4
  br label %if.end.6649

if.end.6649:                                      ; preds = %if.else.6645, %if.then.6644
  %3468 = load i32, i32* %i, align 4
  %cmp6650 = icmp eq i32 %3468, 0
  br i1 %cmp6650, label %if.then.6652, label %if.else.6653

if.then.6652:                                     ; preds = %if.end.6649
  %3469 = load i32, i32* %n, align 4
  store i32 %3469, i32* @focusminwidth, align 4
  br label %if.end.6654

if.else.6653:                                     ; preds = %if.end.6649
  %3470 = load i32, i32* %n, align 4
  store i32 %3470, i32* @focusminheight, align 4
  br label %if.end.6654

if.end.6654:                                      ; preds = %if.else.6653, %if.then.6652
  br label %for.inc.6655

for.inc.6655:                                     ; preds = %if.end.6654
  %3471 = load i32, i32* %i, align 4
  %inc6656 = add nsw i32 %3471, 1
  store i32 %inc6656, i32* %i, align 4
  br label %for.cond.6625

for.end.6657:                                     ; preds = %land.end.6632
  %3472 = load i32, i32* %msgok, align 4
  %tobool6658 = icmp ne i32 %3472, 0
  br i1 %tobool6658, label %if.then.6659, label %if.end.6699

if.then.6659:                                     ; preds = %for.end.6657
  store i32 0, i32* %i, align 4
  br label %for.cond.6660

for.cond.6660:                                    ; preds = %for.inc.6683, %if.then.6659
  %3473 = load i32, i32* %i, align 4
  %cmp6661 = icmp slt i32 %3473, 2
  br i1 %cmp6661, label %for.body.6663, label %for.end.6685

for.body.6663:                                    ; preds = %for.cond.6660
  %3474 = load i32, i32* %i, align 4
  %cmp6664 = icmp eq i32 %3474, 0
  br i1 %cmp6664, label %cond.true.6666, label %cond.false.6667

cond.true.6666:                                   ; preds = %for.body.6663
  %3475 = load i32, i32* @focusminwidth, align 4
  br label %cond.end.6668

cond.false.6667:                                  ; preds = %for.body.6663
  %3476 = load i32, i32* @focusminheight, align 4
  br label %cond.end.6668

cond.end.6668:                                    ; preds = %cond.false.6667, %cond.true.6666
  %cond6669 = phi i32 [ %3475, %cond.true.6666 ], [ %3476, %cond.false.6667 ]
  store i32 %cond6669, i32* %n, align 4
  %3477 = load i32, i32* %n, align 4
  %cmp6670 = icmp eq i32 %3477, -1
  br i1 %cmp6670, label %if.then.6672, label %if.else.6677

if.then.6672:                                     ; preds = %cond.end.6668
  %3478 = load i32, i32* %i, align 4
  %idxprom6673 = sext i32 %3478 to i64
  %arrayidx6674 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* %b, i32 0, i64 %idxprom6673
  %arraydecay6675 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx6674, i32 0, i32 0
  %call6676 = call i8* @strcpy(i8* %arraydecay6675, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.271, i32 0, i32 0)) #4
  br label %if.end.6682

if.else.6677:                                     ; preds = %cond.end.6668
  %3479 = load i32, i32* %i, align 4
  %idxprom6678 = sext i32 %3479 to i64
  %arrayidx6679 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* %b, i32 0, i64 %idxprom6678
  %arraydecay6680 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx6679, i32 0, i32 0
  %3480 = load i32, i32* %n, align 4
  %call6681 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay6680, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %3480) #4
  br label %if.end.6682

if.end.6682:                                      ; preds = %if.else.6677, %if.then.6672
  br label %for.inc.6683

for.inc.6683:                                     ; preds = %if.end.6682
  %3481 = load i32, i32* %i, align 4
  %inc6684 = add nsw i32 %3481, 1
  store i32 %inc6684, i32* %i, align 4
  br label %for.cond.6660

for.end.6685:                                     ; preds = %for.cond.6660
  %3482 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6686 = getelementptr inbounds %struct.action, %struct.action* %3482, i32 0, i32 3
  %3483 = load i32, i32* %quiet6686, align 4
  %tobool6687 = icmp ne i32 %3483, 0
  br i1 %tobool6687, label %cond.false.6689, label %cond.true.6688

cond.true.6688:                                   ; preds = %for.end.6685
  br label %cond.end.6693

cond.false.6689:                                  ; preds = %for.end.6685
  %3484 = load i32, i32* @queryflag, align 4
  %cmp6690 = icmp sge i32 %3484, 0
  %cond6692 = select i1 %cmp6690, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6693

cond.end.6693:                                    ; preds = %cond.false.6689, %cond.true.6688
  %cond6694 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6688 ], [ %cond6692, %cond.false.6689 ]
  %arrayidx6695 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* %b, i32 0, i64 0
  %arraydecay6696 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx6695, i32 0, i32 0
  %arrayidx6697 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* %b, i32 0, i64 1
  %arraydecay6698 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx6697, i32 0, i32 0
  call void (i32, i8*, ...) %cond6694(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.273, i32 0, i32 0), i8* %arraydecay6696, i8* %arraydecay6698)
  br label %if.end.6699

if.end.6699:                                      ; preds = %cond.end.6693, %for.end.6657
  br label %sw.epilog.7356

sw.bb.6700:                                       ; preds = %land.end
  %3485 = load i8**, i8*** %args, align 8
  %3486 = load i8*, i8** %3485, align 8
  %tobool6701 = icmp ne i8* %3486, null
  br i1 %tobool6701, label %if.then.6702, label %if.end.6723

if.then.6702:                                     ; preds = %sw.bb.6700
  %3487 = load %struct.win*, %struct.win** @fore, align 8
  %w_group = getelementptr inbounds %struct.win, %struct.win* %3487, i32 0, i32 25
  store %struct.win* null, %struct.win** %w_group, align 8
  %3488 = load i8**, i8*** %args, align 8
  %arrayidx6703 = getelementptr inbounds i8*, i8** %3488, i64 0
  %3489 = load i8*, i8** %arrayidx6703, align 8
  %arrayidx6704 = getelementptr inbounds i8, i8* %3489, i64 0
  %3490 = load i8, i8* %arrayidx6704, align 1
  %tobool6705 = icmp ne i8 %3490, 0
  br i1 %tobool6705, label %if.then.6706, label %if.end.6722

if.then.6706:                                     ; preds = %if.then.6702
  %3491 = load i8**, i8*** %args, align 8
  %3492 = load i8*, i8** %3491, align 8
  %call6707 = call %struct.win* @WindowByName(i8* %3492)
  %3493 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6708 = getelementptr inbounds %struct.win, %struct.win* %3493, i32 0, i32 25
  store %struct.win* %call6707, %struct.win** %w_group6708, align 8
  %3494 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6709 = getelementptr inbounds %struct.win, %struct.win* %3494, i32 0, i32 25
  %3495 = load %struct.win*, %struct.win** %w_group6709, align 8
  %3496 = load %struct.win*, %struct.win** @fore, align 8
  %cmp6710 = icmp eq %struct.win* %3495, %3496
  br i1 %cmp6710, label %if.then.6719, label %lor.lhs.false.6712

lor.lhs.false.6712:                               ; preds = %if.then.6706
  %3497 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6713 = getelementptr inbounds %struct.win, %struct.win* %3497, i32 0, i32 25
  %3498 = load %struct.win*, %struct.win** %w_group6713, align 8
  %tobool6714 = icmp ne %struct.win* %3498, null
  br i1 %tobool6714, label %land.lhs.true.6715, label %if.end.6721

land.lhs.true.6715:                               ; preds = %lor.lhs.false.6712
  %3499 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6716 = getelementptr inbounds %struct.win, %struct.win* %3499, i32 0, i32 25
  %3500 = load %struct.win*, %struct.win** %w_group6716, align 8
  %w_type = getelementptr inbounds %struct.win, %struct.win* %3500, i32 0, i32 1
  %3501 = load i32, i32* %w_type, align 4
  %cmp6717 = icmp ne i32 %3501, 3
  br i1 %cmp6717, label %if.then.6719, label %if.end.6721

if.then.6719:                                     ; preds = %land.lhs.true.6715, %if.then.6706
  %3502 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6720 = getelementptr inbounds %struct.win, %struct.win* %3502, i32 0, i32 25
  store %struct.win* null, %struct.win** %w_group6720, align 8
  br label %if.end.6721

if.end.6721:                                      ; preds = %if.then.6719, %land.lhs.true.6715, %lor.lhs.false.6712
  br label %if.end.6722

if.end.6722:                                      ; preds = %if.end.6721, %if.then.6702
  call void @WindowChanged(%struct.win* null, i32 119)
  call void @WindowChanged(%struct.win* null, i32 87)
  call void @WindowChanged(%struct.win* null, i32 0)
  br label %if.end.6723

if.end.6723:                                      ; preds = %if.end.6722, %sw.bb.6700
  %3503 = load i32, i32* %msgok, align 4
  %tobool6724 = icmp ne i32 %3503, 0
  br i1 %tobool6724, label %if.then.6725, label %if.end.6753

if.then.6725:                                     ; preds = %if.end.6723
  %3504 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6726 = getelementptr inbounds %struct.win, %struct.win* %3504, i32 0, i32 25
  %3505 = load %struct.win*, %struct.win** %w_group6726, align 8
  %tobool6727 = icmp ne %struct.win* %3505, null
  br i1 %tobool6727, label %if.then.6728, label %if.else.6742

if.then.6728:                                     ; preds = %if.then.6725
  %3506 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6729 = getelementptr inbounds %struct.action, %struct.action* %3506, i32 0, i32 3
  %3507 = load i32, i32* %quiet6729, align 4
  %tobool6730 = icmp ne i32 %3507, 0
  br i1 %tobool6730, label %cond.false.6732, label %cond.true.6731

cond.true.6731:                                   ; preds = %if.then.6728
  br label %cond.end.6736

cond.false.6732:                                  ; preds = %if.then.6728
  %3508 = load i32, i32* @queryflag, align 4
  %cmp6733 = icmp sge i32 %3508, 0
  %cond6735 = select i1 %cmp6733, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6736

cond.end.6736:                                    ; preds = %cond.false.6732, %cond.true.6731
  %cond6737 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6731 ], [ %cond6735, %cond.false.6732 ]
  %3509 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6738 = getelementptr inbounds %struct.win, %struct.win* %3509, i32 0, i32 25
  %3510 = load %struct.win*, %struct.win** %w_group6738, align 8
  %w_number6739 = getelementptr inbounds %struct.win, %struct.win* %3510, i32 0, i32 9
  %3511 = load i32, i32* %w_number6739, align 4
  %3512 = load %struct.win*, %struct.win** @fore, align 8
  %w_group6740 = getelementptr inbounds %struct.win, %struct.win* %3512, i32 0, i32 25
  %3513 = load %struct.win*, %struct.win** %w_group6740, align 8
  %w_title6741 = getelementptr inbounds %struct.win, %struct.win* %3513, i32 0, i32 21
  %3514 = load i8*, i8** %w_title6741, align 8
  call void (i32, i8*, ...) %cond6737(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.274, i32 0, i32 0), i32 %3511, i8* %3514)
  br label %if.end.6752

if.else.6742:                                     ; preds = %if.then.6725
  %3515 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6743 = getelementptr inbounds %struct.action, %struct.action* %3515, i32 0, i32 3
  %3516 = load i32, i32* %quiet6743, align 4
  %tobool6744 = icmp ne i32 %3516, 0
  br i1 %tobool6744, label %cond.false.6746, label %cond.true.6745

cond.true.6745:                                   ; preds = %if.else.6742
  br label %cond.end.6750

cond.false.6746:                                  ; preds = %if.else.6742
  %3517 = load i32, i32* @queryflag, align 4
  %cmp6747 = icmp sge i32 %3517, 0
  %cond6749 = select i1 %cmp6747, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6750

cond.end.6750:                                    ; preds = %cond.false.6746, %cond.true.6745
  %cond6751 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6745 ], [ %cond6749, %cond.false.6746 ]
  call void (i32, i8*, ...) %cond6751(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.275, i32 0, i32 0))
  br label %if.end.6752

if.end.6752:                                      ; preds = %cond.end.6750, %cond.end.6736
  br label %if.end.6753

if.end.6753:                                      ; preds = %if.end.6752, %if.end.6723
  br label %sw.epilog.7356

sw.bb.6754:                                       ; preds = %land.end
  %3518 = load i8**, i8*** %args, align 8
  %arrayidx6755 = getelementptr inbounds i8*, i8** %3518, i64 0
  %3519 = load i8*, i8** %arrayidx6755, align 8
  %call6756 = call i32 @strcmp(i8* %3519, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i32 0, i32 0)) #8
  %tobool6757 = icmp ne i32 %call6756, 0
  br i1 %tobool6757, label %if.else.6805, label %if.then.6758

if.then.6758:                                     ; preds = %sw.bb.6754
  %3520 = load %struct.display*, %struct.display** @display, align 8
  %tobool6759 = icmp ne %struct.display* %3520, null
  br i1 %tobool6759, label %if.end.6775, label %if.then.6760

if.then.6760:                                     ; preds = %if.then.6758
  %3521 = load i8**, i8*** %args, align 8
  %arrayidx6761 = getelementptr inbounds i8*, i8** %3521, i64 1
  %3522 = load i8*, i8** %arrayidx6761, align 8
  %tobool6762 = icmp ne i8* %3522, null
  br i1 %tobool6762, label %if.end.6764, label %if.then.6763

if.then.6763:                                     ; preds = %if.then.6760
  br label %sw.epilog.7356

if.end.6764:                                      ; preds = %if.then.6760
  %3523 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %tobool6765 = icmp ne %struct.layout* %3523, null
  br i1 %tobool6765, label %lor.lhs.false.6766, label %if.then.6769

lor.lhs.false.6766:                               ; preds = %if.end.6764
  %3524 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %cmp6767 = icmp eq %struct.layout* %3524, @layout_last_marker
  br i1 %cmp6767, label %if.then.6769, label %if.else.6772

if.then.6769:                                     ; preds = %lor.lhs.false.6766, %if.end.6764
  %3525 = load i8**, i8*** %args, align 8
  %arrayidx6770 = getelementptr inbounds i8*, i8** %3525, i64 1
  %3526 = load i8*, i8** %arrayidx6770, align 8
  %call6771 = call %struct.layout* @CreateLayout(i8* %3526, i32 0)
  store %struct.layout* %call6771, %struct.layout** @layout_attach, align 8
  br label %if.end.6774

if.else.6772:                                     ; preds = %lor.lhs.false.6766
  %3527 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %3528 = load i8**, i8*** %args, align 8
  %arrayidx6773 = getelementptr inbounds i8*, i8** %3528, i64 1
  %3529 = load i8*, i8** %arrayidx6773, align 8
  call void @RenameLayout(%struct.layout* %3527, i8* %3529)
  br label %if.end.6774

if.end.6774:                                      ; preds = %if.else.6772, %if.then.6769
  br label %sw.epilog.7356

if.end.6775:                                      ; preds = %if.then.6758
  %3530 = load %struct.display*, %struct.display** @display, align 8
  %d_layout = getelementptr inbounds %struct.display, %struct.display* %3530, i32 0, i32 5
  %3531 = load %struct.layout*, %struct.layout** %d_layout, align 8
  %tobool6776 = icmp ne %struct.layout* %3531, null
  br i1 %tobool6776, label %if.end.6787, label %if.then.6777

if.then.6777:                                     ; preds = %if.end.6775
  %3532 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6778 = getelementptr inbounds %struct.action, %struct.action* %3532, i32 0, i32 3
  %3533 = load i32, i32* %quiet6778, align 4
  %tobool6779 = icmp ne i32 %3533, 0
  br i1 %tobool6779, label %cond.false.6781, label %cond.true.6780

cond.true.6780:                                   ; preds = %if.then.6777
  br label %cond.end.6785

cond.false.6781:                                  ; preds = %if.then.6777
  %3534 = load i32, i32* @queryflag, align 4
  %cmp6782 = icmp sge i32 %3534, 0
  %cond6784 = select i1 %cmp6782, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6785

cond.end.6785:                                    ; preds = %cond.false.6781, %cond.true.6780
  %cond6786 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6780 ], [ %cond6784, %cond.false.6781 ]
  call void (i32, i8*, ...) %cond6786(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.276, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.6787:                                      ; preds = %if.end.6775
  %3535 = load i8**, i8*** %args, align 8
  %arrayidx6788 = getelementptr inbounds i8*, i8** %3535, i64 1
  %3536 = load i8*, i8** %arrayidx6788, align 8
  %tobool6789 = icmp ne i8* %3536, null
  br i1 %tobool6789, label %if.end.6802, label %if.then.6790

if.then.6790:                                     ; preds = %if.end.6787
  %3537 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6791 = getelementptr inbounds %struct.action, %struct.action* %3537, i32 0, i32 3
  %3538 = load i32, i32* %quiet6791, align 4
  %tobool6792 = icmp ne i32 %3538, 0
  br i1 %tobool6792, label %cond.false.6794, label %cond.true.6793

cond.true.6793:                                   ; preds = %if.then.6790
  br label %cond.end.6798

cond.false.6794:                                  ; preds = %if.then.6790
  %3539 = load i32, i32* @queryflag, align 4
  %cmp6795 = icmp sge i32 %3539, 0
  %cond6797 = select i1 %cmp6795, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6798

cond.end.6798:                                    ; preds = %cond.false.6794, %cond.true.6793
  %cond6799 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6793 ], [ %cond6797, %cond.false.6794 ]
  %3540 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6800 = getelementptr inbounds %struct.display, %struct.display* %3540, i32 0, i32 5
  %3541 = load %struct.layout*, %struct.layout** %d_layout6800, align 8
  %lay_number = getelementptr inbounds %struct.layout, %struct.layout* %3541, i32 0, i32 2
  %3542 = load i32, i32* %lay_number, align 4
  %3543 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6801 = getelementptr inbounds %struct.display, %struct.display* %3543, i32 0, i32 5
  %3544 = load %struct.layout*, %struct.layout** %d_layout6801, align 8
  %lay_title = getelementptr inbounds %struct.layout, %struct.layout* %3544, i32 0, i32 1
  %3545 = load i8*, i8** %lay_title, align 8
  call void (i32, i8*, ...) %cond6799(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.277, i32 0, i32 0), i32 %3542, i8* %3545)
  br label %sw.epilog.7356

if.end.6802:                                      ; preds = %if.end.6787
  %3546 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6803 = getelementptr inbounds %struct.display, %struct.display* %3546, i32 0, i32 5
  %3547 = load %struct.layout*, %struct.layout** %d_layout6803, align 8
  %3548 = load i8**, i8*** %args, align 8
  %arrayidx6804 = getelementptr inbounds i8*, i8** %3548, i64 1
  %3549 = load i8*, i8** %arrayidx6804, align 8
  call void @RenameLayout(%struct.layout* %3547, i8* %3549)
  br label %if.end.7334

if.else.6805:                                     ; preds = %sw.bb.6754
  %3550 = load i8**, i8*** %args, align 8
  %arrayidx6806 = getelementptr inbounds i8*, i8** %3550, i64 0
  %3551 = load i8*, i8** %arrayidx6806, align 8
  %call6807 = call i32 @strcmp(i8* %3551, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i32 0, i32 0)) #8
  %tobool6808 = icmp ne i32 %call6807, 0
  br i1 %tobool6808, label %if.else.6859, label %if.then.6809

if.then.6809:                                     ; preds = %if.else.6805
  %3552 = load %struct.display*, %struct.display** @display, align 8
  %tobool6810 = icmp ne %struct.display* %3552, null
  br i1 %tobool6810, label %if.end.6824, label %if.then.6811

if.then.6811:                                     ; preds = %if.then.6809
  %3553 = load i8**, i8*** %args, align 8
  %arrayidx6812 = getelementptr inbounds i8*, i8** %3553, i64 1
  %3554 = load i8*, i8** %arrayidx6812, align 8
  %tobool6813 = icmp ne i8* %3554, null
  br i1 %tobool6813, label %land.lhs.true.6814, label %if.end.6823

land.lhs.true.6814:                               ; preds = %if.then.6811
  %3555 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %tobool6815 = icmp ne %struct.layout* %3555, null
  br i1 %tobool6815, label %land.lhs.true.6816, label %if.end.6823

land.lhs.true.6816:                               ; preds = %land.lhs.true.6814
  %3556 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %cmp6817 = icmp ne %struct.layout* %3556, @layout_last_marker
  br i1 %cmp6817, label %if.then.6819, label %if.end.6823

if.then.6819:                                     ; preds = %land.lhs.true.6816
  %3557 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %3558 = load i8**, i8*** %args, align 8
  %arrayidx6820 = getelementptr inbounds i8*, i8** %3558, i64 1
  %3559 = load i8*, i8** %arrayidx6820, align 8
  %call6821 = call i32 @atoi(i8* %3559) #8
  %call6822 = call i32 @RenumberLayout(%struct.layout* %3557, i32 %call6821)
  br label %if.end.6823

if.end.6823:                                      ; preds = %if.then.6819, %land.lhs.true.6816, %land.lhs.true.6814, %if.then.6811
  br label %sw.epilog.7356

if.end.6824:                                      ; preds = %if.then.6809
  %3560 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6825 = getelementptr inbounds %struct.display, %struct.display* %3560, i32 0, i32 5
  %3561 = load %struct.layout*, %struct.layout** %d_layout6825, align 8
  %tobool6826 = icmp ne %struct.layout* %3561, null
  br i1 %tobool6826, label %if.end.6837, label %if.then.6827

if.then.6827:                                     ; preds = %if.end.6824
  %3562 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6828 = getelementptr inbounds %struct.action, %struct.action* %3562, i32 0, i32 3
  %3563 = load i32, i32* %quiet6828, align 4
  %tobool6829 = icmp ne i32 %3563, 0
  br i1 %tobool6829, label %cond.false.6831, label %cond.true.6830

cond.true.6830:                                   ; preds = %if.then.6827
  br label %cond.end.6835

cond.false.6831:                                  ; preds = %if.then.6827
  %3564 = load i32, i32* @queryflag, align 4
  %cmp6832 = icmp sge i32 %3564, 0
  %cond6834 = select i1 %cmp6832, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6835

cond.end.6835:                                    ; preds = %cond.false.6831, %cond.true.6830
  %cond6836 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6830 ], [ %cond6834, %cond.false.6831 ]
  call void (i32, i8*, ...) %cond6836(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.276, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.6837:                                      ; preds = %if.end.6824
  %3565 = load i8**, i8*** %args, align 8
  %arrayidx6838 = getelementptr inbounds i8*, i8** %3565, i64 1
  %3566 = load i8*, i8** %arrayidx6838, align 8
  %tobool6839 = icmp ne i8* %3566, null
  br i1 %tobool6839, label %if.end.6854, label %if.then.6840

if.then.6840:                                     ; preds = %if.end.6837
  %3567 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6841 = getelementptr inbounds %struct.action, %struct.action* %3567, i32 0, i32 3
  %3568 = load i32, i32* %quiet6841, align 4
  %tobool6842 = icmp ne i32 %3568, 0
  br i1 %tobool6842, label %cond.false.6844, label %cond.true.6843

cond.true.6843:                                   ; preds = %if.then.6840
  br label %cond.end.6848

cond.false.6844:                                  ; preds = %if.then.6840
  %3569 = load i32, i32* @queryflag, align 4
  %cmp6845 = icmp sge i32 %3569, 0
  %cond6847 = select i1 %cmp6845, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6848

cond.end.6848:                                    ; preds = %cond.false.6844, %cond.true.6843
  %cond6849 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6843 ], [ %cond6847, %cond.false.6844 ]
  %3570 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6850 = getelementptr inbounds %struct.display, %struct.display* %3570, i32 0, i32 5
  %3571 = load %struct.layout*, %struct.layout** %d_layout6850, align 8
  %lay_number6851 = getelementptr inbounds %struct.layout, %struct.layout* %3571, i32 0, i32 2
  %3572 = load i32, i32* %lay_number6851, align 4
  %3573 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6852 = getelementptr inbounds %struct.display, %struct.display* %3573, i32 0, i32 5
  %3574 = load %struct.layout*, %struct.layout** %d_layout6852, align 8
  %lay_title6853 = getelementptr inbounds %struct.layout, %struct.layout* %3574, i32 0, i32 1
  %3575 = load i8*, i8** %lay_title6853, align 8
  call void (i32, i8*, ...) %cond6849(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.279, i32 0, i32 0), i32 %3572, i8* %3575)
  br label %sw.epilog.7356

if.end.6854:                                      ; preds = %if.end.6837
  %3576 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6855 = getelementptr inbounds %struct.display, %struct.display* %3576, i32 0, i32 5
  %3577 = load %struct.layout*, %struct.layout** %d_layout6855, align 8
  %3578 = load i8**, i8*** %args, align 8
  %arrayidx6856 = getelementptr inbounds i8*, i8** %3578, i64 1
  %3579 = load i8*, i8** %arrayidx6856, align 8
  %call6857 = call i32 @atoi(i8* %3579) #8
  %call6858 = call i32 @RenumberLayout(%struct.layout* %3577, i32 %call6857)
  br label %sw.epilog.7356

if.else.6859:                                     ; preds = %if.else.6805
  %3580 = load i8**, i8*** %args, align 8
  %arrayidx6860 = getelementptr inbounds i8*, i8** %3580, i64 0
  %3581 = load i8*, i8** %arrayidx6860, align 8
  %call6861 = call i32 @strcmp(i8* %3581, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.280, i32 0, i32 0)) #8
  %tobool6862 = icmp ne i32 %call6861, 0
  br i1 %tobool6862, label %if.else.6946, label %if.then.6863

if.then.6863:                                     ; preds = %if.else.6859
  %3582 = load %struct.display*, %struct.display** @display, align 8
  %tobool6864 = icmp ne %struct.display* %3582, null
  br i1 %tobool6864, label %if.end.6887, label %if.then.6865

if.then.6865:                                     ; preds = %if.then.6863
  %3583 = load i8**, i8*** %args, align 8
  %arrayidx6866 = getelementptr inbounds i8*, i8** %3583, i64 1
  %3584 = load i8*, i8** %arrayidx6866, align 8
  %tobool6867 = icmp ne i8* %3584, null
  br i1 %tobool6867, label %land.lhs.true.6868, label %if.end.6886

land.lhs.true.6868:                               ; preds = %if.then.6865
  %3585 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %tobool6869 = icmp ne %struct.layout* %3585, null
  br i1 %tobool6869, label %land.lhs.true.6870, label %if.end.6886

land.lhs.true.6870:                               ; preds = %land.lhs.true.6868
  %3586 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %cmp6871 = icmp ne %struct.layout* %3586, @layout_last_marker
  br i1 %cmp6871, label %if.then.6873, label %if.end.6886

if.then.6873:                                     ; preds = %land.lhs.true.6870
  %3587 = load i8**, i8*** %args, align 8
  %arrayidx6874 = getelementptr inbounds i8*, i8** %3587, i64 1
  %3588 = load i8*, i8** %arrayidx6874, align 8
  %call6875 = call i32 @strcmp(i8* %3588, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #8
  %tobool6876 = icmp ne i32 %call6875, 0
  br i1 %tobool6876, label %if.else.6878, label %if.then.6877

if.then.6877:                                     ; preds = %if.then.6873
  %3589 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %lay_autosave = getelementptr inbounds %struct.layout, %struct.layout* %3589, i32 0, i32 6
  store i32 1, i32* %lay_autosave, align 4
  br label %if.end.6885

if.else.6878:                                     ; preds = %if.then.6873
  %3590 = load i8**, i8*** %args, align 8
  %arrayidx6879 = getelementptr inbounds i8*, i8** %3590, i64 1
  %3591 = load i8*, i8** %arrayidx6879, align 8
  %call6880 = call i32 @strcmp(i8* %3591, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)) #8
  %tobool6881 = icmp ne i32 %call6880, 0
  br i1 %tobool6881, label %if.end.6884, label %if.then.6882

if.then.6882:                                     ; preds = %if.else.6878
  %3592 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %lay_autosave6883 = getelementptr inbounds %struct.layout, %struct.layout* %3592, i32 0, i32 6
  store i32 0, i32* %lay_autosave6883, align 4
  br label %if.end.6884

if.end.6884:                                      ; preds = %if.then.6882, %if.else.6878
  br label %if.end.6885

if.end.6885:                                      ; preds = %if.end.6884, %if.then.6877
  br label %if.end.6886

if.end.6886:                                      ; preds = %if.end.6885, %land.lhs.true.6870, %land.lhs.true.6868, %if.then.6865
  br label %sw.epilog.7356

if.end.6887:                                      ; preds = %if.then.6863
  %3593 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6888 = getelementptr inbounds %struct.display, %struct.display* %3593, i32 0, i32 5
  %3594 = load %struct.layout*, %struct.layout** %d_layout6888, align 8
  %tobool6889 = icmp ne %struct.layout* %3594, null
  br i1 %tobool6889, label %if.end.6900, label %if.then.6890

if.then.6890:                                     ; preds = %if.end.6887
  %3595 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6891 = getelementptr inbounds %struct.action, %struct.action* %3595, i32 0, i32 3
  %3596 = load i32, i32* %quiet6891, align 4
  %tobool6892 = icmp ne i32 %3596, 0
  br i1 %tobool6892, label %cond.false.6894, label %cond.true.6893

cond.true.6893:                                   ; preds = %if.then.6890
  br label %cond.end.6898

cond.false.6894:                                  ; preds = %if.then.6890
  %3597 = load i32, i32* @queryflag, align 4
  %cmp6895 = icmp sge i32 %3597, 0
  %cond6897 = select i1 %cmp6895, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6898

cond.end.6898:                                    ; preds = %cond.false.6894, %cond.true.6893
  %cond6899 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6893 ], [ %cond6897, %cond.false.6894 ]
  call void (i32, i8*, ...) %cond6899(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.276, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.6900:                                      ; preds = %if.end.6887
  %3598 = load i8**, i8*** %args, align 8
  %arrayidx6901 = getelementptr inbounds i8*, i8** %3598, i64 1
  %3599 = load i8*, i8** %arrayidx6901, align 8
  %tobool6902 = icmp ne i8* %3599, null
  br i1 %tobool6902, label %if.then.6903, label %if.end.6929

if.then.6903:                                     ; preds = %if.end.6900
  %3600 = load i8**, i8*** %args, align 8
  %arrayidx6904 = getelementptr inbounds i8*, i8** %3600, i64 1
  %3601 = load i8*, i8** %arrayidx6904, align 8
  %call6905 = call i32 @strcmp(i8* %3601, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #8
  %tobool6906 = icmp ne i32 %call6905, 0
  br i1 %tobool6906, label %if.else.6910, label %if.then.6907

if.then.6907:                                     ; preds = %if.then.6903
  %3602 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6908 = getelementptr inbounds %struct.display, %struct.display* %3602, i32 0, i32 5
  %3603 = load %struct.layout*, %struct.layout** %d_layout6908, align 8
  %lay_autosave6909 = getelementptr inbounds %struct.layout, %struct.layout* %3603, i32 0, i32 6
  store i32 1, i32* %lay_autosave6909, align 4
  br label %if.end.6928

if.else.6910:                                     ; preds = %if.then.6903
  %3604 = load i8**, i8*** %args, align 8
  %arrayidx6911 = getelementptr inbounds i8*, i8** %3604, i64 1
  %3605 = load i8*, i8** %arrayidx6911, align 8
  %call6912 = call i32 @strcmp(i8* %3605, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)) #8
  %tobool6913 = icmp ne i32 %call6912, 0
  br i1 %tobool6913, label %if.else.6917, label %if.then.6914

if.then.6914:                                     ; preds = %if.else.6910
  %3606 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6915 = getelementptr inbounds %struct.display, %struct.display* %3606, i32 0, i32 5
  %3607 = load %struct.layout*, %struct.layout** %d_layout6915, align 8
  %lay_autosave6916 = getelementptr inbounds %struct.layout, %struct.layout* %3607, i32 0, i32 6
  store i32 0, i32* %lay_autosave6916, align 4
  br label %if.end.6927

if.else.6917:                                     ; preds = %if.else.6910
  %3608 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6918 = getelementptr inbounds %struct.action, %struct.action* %3608, i32 0, i32 3
  %3609 = load i32, i32* %quiet6918, align 4
  %tobool6919 = icmp ne i32 %3609, 0
  br i1 %tobool6919, label %cond.false.6921, label %cond.true.6920

cond.true.6920:                                   ; preds = %if.else.6917
  br label %cond.end.6925

cond.false.6921:                                  ; preds = %if.else.6917
  %3610 = load i32, i32* @queryflag, align 4
  %cmp6922 = icmp sge i32 %3610, 0
  %cond6924 = select i1 %cmp6922, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6925

cond.end.6925:                                    ; preds = %cond.false.6921, %cond.true.6920
  %cond6926 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6920 ], [ %cond6924, %cond.false.6921 ]
  call void (i32, i8*, ...) %cond6926(i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.281, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.6927:                                      ; preds = %if.then.6914
  br label %if.end.6928

if.end.6928:                                      ; preds = %if.end.6927, %if.then.6907
  br label %if.end.6929

if.end.6929:                                      ; preds = %if.end.6928, %if.end.6900
  %3611 = load i32, i32* %msgok, align 4
  %tobool6930 = icmp ne i32 %3611, 0
  br i1 %tobool6930, label %if.then.6931, label %if.end.6945

if.then.6931:                                     ; preds = %if.end.6929
  %3612 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet6932 = getelementptr inbounds %struct.action, %struct.action* %3612, i32 0, i32 3
  %3613 = load i32, i32* %quiet6932, align 4
  %tobool6933 = icmp ne i32 %3613, 0
  br i1 %tobool6933, label %cond.false.6935, label %cond.true.6934

cond.true.6934:                                   ; preds = %if.then.6931
  br label %cond.end.6939

cond.false.6935:                                  ; preds = %if.then.6931
  %3614 = load i32, i32* @queryflag, align 4
  %cmp6936 = icmp sge i32 %3614, 0
  %cond6938 = select i1 %cmp6936, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.6939

cond.end.6939:                                    ; preds = %cond.false.6935, %cond.true.6934
  %cond6940 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.6934 ], [ %cond6938, %cond.false.6935 ]
  %3615 = load %struct.display*, %struct.display** @display, align 8
  %d_layout6941 = getelementptr inbounds %struct.display, %struct.display* %3615, i32 0, i32 5
  %3616 = load %struct.layout*, %struct.layout** %d_layout6941, align 8
  %lay_autosave6942 = getelementptr inbounds %struct.layout, %struct.layout* %3616, i32 0, i32 6
  %3617 = load i32, i32* %lay_autosave6942, align 4
  %tobool6943 = icmp ne i32 %3617, 0
  %cond6944 = select i1 %tobool6943, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)
  call void (i32, i8*, ...) %cond6940(i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.282, i32 0, i32 0), i8* %cond6944)
  br label %if.end.6945

if.end.6945:                                      ; preds = %cond.end.6939, %if.end.6929
  br label %if.end.7332

if.else.6946:                                     ; preds = %if.else.6859
  %3618 = load i8**, i8*** %args, align 8
  %arrayidx6947 = getelementptr inbounds i8*, i8** %3618, i64 0
  %3619 = load i8*, i8** %arrayidx6947, align 8
  %call6948 = call i32 @strcmp(i8* %3619, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.283, i32 0, i32 0)) #8
  %tobool6949 = icmp ne i32 %call6948, 0
  br i1 %tobool6949, label %if.else.6993, label %if.then.6950

if.then.6950:                                     ; preds = %if.else.6946
  %3620 = load i8**, i8*** %args, align 8
  %arrayidx6952 = getelementptr inbounds i8*, i8** %3620, i64 1
  %3621 = load i8*, i8** %arrayidx6952, align 8
  store i8* %3621, i8** %t6951, align 8
  store i32 0, i32* %n, align 4
  %3622 = load i8*, i8** %t6951, align 8
  %tobool6953 = icmp ne i8* %3622, null
  br i1 %tobool6953, label %if.then.6954, label %if.end.6987

if.then.6954:                                     ; preds = %if.then.6950
  br label %while.cond.6955

while.cond.6955:                                  ; preds = %while.body.6965, %if.then.6954
  %3623 = load i8*, i8** %t6951, align 8
  %3624 = load i8, i8* %3623, align 1
  %conv6956 = sext i8 %3624 to i32
  %cmp6957 = icmp sge i32 %conv6956, 48
  br i1 %cmp6957, label %land.rhs.6959, label %land.end.6963

land.rhs.6959:                                    ; preds = %while.cond.6955
  %3625 = load i8*, i8** %t6951, align 8
  %3626 = load i8, i8* %3625, align 1
  %conv6960 = sext i8 %3626 to i32
  %cmp6961 = icmp sle i32 %conv6960, 57
  br label %land.end.6963

land.end.6963:                                    ; preds = %land.rhs.6959, %while.cond.6955
  %3627 = phi i1 [ false, %while.cond.6955 ], [ %cmp6961, %land.rhs.6959 ]
  br i1 %3627, label %while.body.6965, label %while.end.6967

while.body.6965:                                  ; preds = %land.end.6963
  %3628 = load i8*, i8** %t6951, align 8
  %incdec.ptr6966 = getelementptr inbounds i8, i8* %3628, i32 1
  store i8* %incdec.ptr6966, i8** %t6951, align 8
  br label %while.cond.6955

while.end.6967:                                   ; preds = %land.end.6963
  %3629 = load i8*, i8** %t6951, align 8
  %3630 = load i8**, i8*** %args, align 8
  %arrayidx6968 = getelementptr inbounds i8*, i8** %3630, i64 1
  %3631 = load i8*, i8** %arrayidx6968, align 8
  %cmp6969 = icmp ne i8* %3629, %3631
  br i1 %cmp6969, label %land.lhs.true.6971, label %if.else.6984

land.lhs.true.6971:                               ; preds = %while.end.6967
  %3632 = load i8*, i8** %t6951, align 8
  %3633 = load i8, i8* %3632, align 1
  %tobool6972 = icmp ne i8 %3633, 0
  br i1 %tobool6972, label %lor.lhs.false.6973, label %if.then.6977

lor.lhs.false.6973:                               ; preds = %land.lhs.true.6971
  %3634 = load i8*, i8** %t6951, align 8
  %3635 = load i8, i8* %3634, align 1
  %conv6974 = sext i8 %3635 to i32
  %cmp6975 = icmp eq i32 %conv6974, 58
  br i1 %cmp6975, label %if.then.6977, label %if.else.6984

if.then.6977:                                     ; preds = %lor.lhs.false.6973, %land.lhs.true.6971
  %3636 = load i8**, i8*** %args, align 8
  %arrayidx6978 = getelementptr inbounds i8*, i8** %3636, i64 1
  %3637 = load i8*, i8** %arrayidx6978, align 8
  %call6979 = call i32 @atoi(i8* %3637) #8
  store i32 %call6979, i32* %n, align 4
  %3638 = load i8*, i8** %t6951, align 8
  %3639 = load i8, i8* %3638, align 1
  %tobool6980 = icmp ne i8 %3639, 0
  br i1 %tobool6980, label %if.then.6981, label %if.end.6983

if.then.6981:                                     ; preds = %if.then.6977
  %3640 = load i8*, i8** %t6951, align 8
  %incdec.ptr6982 = getelementptr inbounds i8, i8* %3640, i32 1
  store i8* %incdec.ptr6982, i8** %t6951, align 8
  br label %if.end.6983

if.end.6983:                                      ; preds = %if.then.6981, %if.then.6977
  br label %if.end.6986

if.else.6984:                                     ; preds = %lor.lhs.false.6973, %while.end.6967
  %3641 = load i8**, i8*** %args, align 8
  %arrayidx6985 = getelementptr inbounds i8*, i8** %3641, i64 1
  %3642 = load i8*, i8** %arrayidx6985, align 8
  store i8* %3642, i8** %t6951, align 8
  br label %if.end.6986

if.end.6986:                                      ; preds = %if.else.6984, %if.end.6983
  br label %if.end.6987

if.end.6987:                                      ; preds = %if.end.6986, %if.then.6950
  %3643 = load i8*, i8** %t6951, align 8
  %tobool6988 = icmp ne i8* %3643, null
  br i1 %tobool6988, label %lor.lhs.false.6989, label %if.then.6991

lor.lhs.false.6989:                               ; preds = %if.end.6987
  %3644 = load i8*, i8** %t6951, align 8
  %3645 = load i8, i8* %3644, align 1
  %tobool6990 = icmp ne i8 %3645, 0
  br i1 %tobool6990, label %if.end.6992, label %if.then.6991

if.then.6991:                                     ; preds = %lor.lhs.false.6989, %if.end.6987
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.284, i32 0, i32 0), i8** %t6951, align 8
  br label %if.end.6992

if.end.6992:                                      ; preds = %if.then.6991, %lor.lhs.false.6989
  %3646 = load i8*, i8** %t6951, align 8
  %3647 = load i32, i32* %n, align 4
  call void @NewLayout(i8* %3646, i32 %3647)
  call void @Activate(i32 -1)
  br label %if.end.7331

if.else.6993:                                     ; preds = %if.else.6946
  %3648 = load i8**, i8*** %args, align 8
  %arrayidx6994 = getelementptr inbounds i8*, i8** %3648, i64 0
  %3649 = load i8*, i8** %arrayidx6994, align 8
  %call6995 = call i32 @strcmp(i8* %3649, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.285, i32 0, i32 0)) #8
  %tobool6996 = icmp ne i32 %call6995, 0
  br i1 %tobool6996, label %if.else.7015, label %if.then.6997

if.then.6997:                                     ; preds = %if.else.6993
  %3650 = load i8**, i8*** %args, align 8
  %arrayidx6998 = getelementptr inbounds i8*, i8** %3650, i64 1
  %3651 = load i8*, i8** %arrayidx6998, align 8
  %tobool6999 = icmp ne i8* %3651, null
  br i1 %tobool6999, label %if.end.7010, label %if.then.7000

if.then.7000:                                     ; preds = %if.then.6997
  %3652 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7001 = getelementptr inbounds %struct.action, %struct.action* %3652, i32 0, i32 3
  %3653 = load i32, i32* %quiet7001, align 4
  %tobool7002 = icmp ne i32 %3653, 0
  br i1 %tobool7002, label %cond.false.7004, label %cond.true.7003

cond.true.7003:                                   ; preds = %if.then.7000
  br label %cond.end.7008

cond.false.7004:                                  ; preds = %if.then.7000
  %3654 = load i32, i32* @queryflag, align 4
  %cmp7005 = icmp sge i32 %3654, 0
  %cond7007 = select i1 %cmp7005, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7008

cond.end.7008:                                    ; preds = %cond.false.7004, %cond.true.7003
  %cond7009 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7003 ], [ %cond7007, %cond.false.7004 ]
  call void (i32, i8*, ...) %cond7009(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.286, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.7010:                                      ; preds = %if.then.6997
  %3655 = load %struct.display*, %struct.display** @display, align 8
  %tobool7011 = icmp ne %struct.display* %3655, null
  br i1 %tobool7011, label %if.then.7012, label %if.end.7014

if.then.7012:                                     ; preds = %if.end.7010
  %3656 = load i8**, i8*** %args, align 8
  %arrayidx7013 = getelementptr inbounds i8*, i8** %3656, i64 1
  %3657 = load i8*, i8** %arrayidx7013, align 8
  %3658 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas = getelementptr inbounds %struct.display, %struct.display* %3658, i32 0, i32 2
  call void @SaveLayout(i8* %3657, %struct.canvas* %d_canvas)
  br label %if.end.7014

if.end.7014:                                      ; preds = %if.then.7012, %if.end.7010
  br label %if.end.7330

if.else.7015:                                     ; preds = %if.else.6993
  %3659 = load i8**, i8*** %args, align 8
  %arrayidx7016 = getelementptr inbounds i8*, i8** %3659, i64 0
  %3660 = load i8*, i8** %arrayidx7016, align 8
  %call7017 = call i32 @strcmp(i8* %3660, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.287, i32 0, i32 0)) #8
  %tobool7018 = icmp ne i32 %call7017, 0
  br i1 %tobool7018, label %if.else.7037, label %if.then.7019

if.then.7019:                                     ; preds = %if.else.7015
  %3661 = load %struct.display*, %struct.display** @display, align 8
  %tobool7020 = icmp ne %struct.display* %3661, null
  br i1 %tobool7020, label %if.end.7028, label %if.then.7021

if.then.7021:                                     ; preds = %if.then.7019
  %3662 = load i8**, i8*** %args, align 8
  %arrayidx7022 = getelementptr inbounds i8*, i8** %3662, i64 1
  %3663 = load i8*, i8** %arrayidx7022, align 8
  %tobool7023 = icmp ne i8* %3663, null
  br i1 %tobool7023, label %if.then.7024, label %if.end.7027

if.then.7024:                                     ; preds = %if.then.7021
  %3664 = load i8**, i8*** %args, align 8
  %arrayidx7025 = getelementptr inbounds i8*, i8** %3664, i64 1
  %3665 = load i8*, i8** %arrayidx7025, align 8
  %call7026 = call %struct.layout* @FindLayout(i8* %3665)
  store %struct.layout* %call7026, %struct.layout** @layout_attach, align 8
  br label %if.end.7027

if.end.7027:                                      ; preds = %if.then.7024, %if.then.7021
  br label %sw.epilog.7356

if.end.7028:                                      ; preds = %if.then.7019
  %3666 = load i8**, i8*** %args, align 8
  %arrayidx7029 = getelementptr inbounds i8*, i8** %3666, i64 1
  %3667 = load i8*, i8** %arrayidx7029, align 8
  %tobool7030 = icmp ne i8* %3667, null
  br i1 %tobool7030, label %if.end.7032, label %if.then.7031

if.then.7031:                                     ; preds = %if.end.7028
  call void @Input(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.288, i32 0, i32 0), i32 20, i32 0, void (i8*, i32, i8*)* @SelectLayoutFin, i8* null, i32 0)
  br label %sw.epilog.7356

if.end.7032:                                      ; preds = %if.end.7028
  %3668 = load i8**, i8*** %args, align 8
  %arrayidx7033 = getelementptr inbounds i8*, i8** %3668, i64 1
  %3669 = load i8*, i8** %arrayidx7033, align 8
  %3670 = load i8**, i8*** %args, align 8
  %arrayidx7034 = getelementptr inbounds i8*, i8** %3670, i64 1
  %3671 = load i8*, i8** %arrayidx7034, align 8
  %call7035 = call i64 @strlen(i8* %3671) #8
  %conv7036 = trunc i64 %call7035 to i32
  call void @SelectLayoutFin(i8* %3669, i32 %conv7036, i8* null)
  br label %if.end.7329

if.else.7037:                                     ; preds = %if.else.7015
  %3672 = load i8**, i8*** %args, align 8
  %arrayidx7038 = getelementptr inbounds i8*, i8** %3672, i64 0
  %3673 = load i8*, i8** %arrayidx7038, align 8
  %call7039 = call i32 @strcmp(i8* %3673, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.249, i32 0, i32 0)) #8
  %tobool7040 = icmp ne i32 %call7039, 0
  br i1 %tobool7040, label %if.else.7087, label %if.then.7041

if.then.7041:                                     ; preds = %if.else.7037
  %3674 = load %struct.display*, %struct.display** @display, align 8
  %tobool7042 = icmp ne %struct.display* %3674, null
  br i1 %tobool7042, label %if.end.7056, label %if.then.7043

if.then.7043:                                     ; preds = %if.then.7041
  %3675 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %tobool7044 = icmp ne %struct.layout* %3675, null
  br i1 %tobool7044, label %land.lhs.true.7045, label %if.end.7055

land.lhs.true.7045:                               ; preds = %if.then.7043
  %3676 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %cmp7046 = icmp ne %struct.layout* %3676, @layout_last_marker
  br i1 %cmp7046, label %if.then.7048, label %if.end.7055

if.then.7048:                                     ; preds = %land.lhs.true.7045
  %3677 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %lay_next = getelementptr inbounds %struct.layout, %struct.layout* %3677, i32 0, i32 0
  %3678 = load %struct.layout*, %struct.layout** %lay_next, align 8
  %tobool7049 = icmp ne %struct.layout* %3678, null
  br i1 %tobool7049, label %cond.true.7050, label %cond.false.7052

cond.true.7050:                                   ; preds = %if.then.7048
  %3679 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %lay_next7051 = getelementptr inbounds %struct.layout, %struct.layout* %3679, i32 0, i32 0
  %3680 = load %struct.layout*, %struct.layout** %lay_next7051, align 8
  br label %cond.end.7053

cond.false.7052:                                  ; preds = %if.then.7048
  %3681 = load %struct.layout*, %struct.layout** @layouts, align 8
  br label %cond.end.7053

cond.end.7053:                                    ; preds = %cond.false.7052, %cond.true.7050
  %cond7054 = phi %struct.layout* [ %3680, %cond.true.7050 ], [ %3681, %cond.false.7052 ]
  store %struct.layout* %cond7054, %struct.layout** @layout_attach, align 8
  br label %if.end.7055

if.end.7055:                                      ; preds = %cond.end.7053, %land.lhs.true.7045, %if.then.7043
  br label %sw.epilog.7356

if.end.7056:                                      ; preds = %if.then.7041
  %3682 = load %struct.display*, %struct.display** @display, align 8
  %d_layout7057 = getelementptr inbounds %struct.display, %struct.display* %3682, i32 0, i32 5
  %3683 = load %struct.layout*, %struct.layout** %d_layout7057, align 8
  store %struct.layout* %3683, %struct.layout** %lay, align 8
  %3684 = load %struct.layout*, %struct.layout** %lay, align 8
  %tobool7058 = icmp ne %struct.layout* %3684, null
  br i1 %tobool7058, label %if.then.7059, label %if.else.7067

if.then.7059:                                     ; preds = %if.end.7056
  %3685 = load %struct.layout*, %struct.layout** %lay, align 8
  %lay_next7060 = getelementptr inbounds %struct.layout, %struct.layout* %3685, i32 0, i32 0
  %3686 = load %struct.layout*, %struct.layout** %lay_next7060, align 8
  %tobool7061 = icmp ne %struct.layout* %3686, null
  br i1 %tobool7061, label %cond.true.7062, label %cond.false.7064

cond.true.7062:                                   ; preds = %if.then.7059
  %3687 = load %struct.layout*, %struct.layout** %lay, align 8
  %lay_next7063 = getelementptr inbounds %struct.layout, %struct.layout* %3687, i32 0, i32 0
  %3688 = load %struct.layout*, %struct.layout** %lay_next7063, align 8
  br label %cond.end.7065

cond.false.7064:                                  ; preds = %if.then.7059
  %3689 = load %struct.layout*, %struct.layout** @layouts, align 8
  br label %cond.end.7065

cond.end.7065:                                    ; preds = %cond.false.7064, %cond.true.7062
  %cond7066 = phi %struct.layout* [ %3688, %cond.true.7062 ], [ %3689, %cond.false.7064 ]
  store %struct.layout* %cond7066, %struct.layout** %lay, align 8
  br label %if.end.7068

if.else.7067:                                     ; preds = %if.end.7056
  %3690 = load %struct.layout*, %struct.layout** @layouts, align 8
  store %struct.layout* %3690, %struct.layout** %lay, align 8
  br label %if.end.7068

if.end.7068:                                      ; preds = %if.else.7067, %cond.end.7065
  %3691 = load %struct.layout*, %struct.layout** %lay, align 8
  %tobool7069 = icmp ne %struct.layout* %3691, null
  br i1 %tobool7069, label %if.end.7080, label %if.then.7070

if.then.7070:                                     ; preds = %if.end.7068
  %3692 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7071 = getelementptr inbounds %struct.action, %struct.action* %3692, i32 0, i32 3
  %3693 = load i32, i32* %quiet7071, align 4
  %tobool7072 = icmp ne i32 %3693, 0
  br i1 %tobool7072, label %cond.false.7074, label %cond.true.7073

cond.true.7073:                                   ; preds = %if.then.7070
  br label %cond.end.7078

cond.false.7074:                                  ; preds = %if.then.7070
  %3694 = load i32, i32* @queryflag, align 4
  %cmp7075 = icmp sge i32 %3694, 0
  %cond7077 = select i1 %cmp7075, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7078

cond.end.7078:                                    ; preds = %cond.false.7074, %cond.true.7073
  %cond7079 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7073 ], [ %cond7077, %cond.false.7074 ]
  call void (i32, i8*, ...) %cond7079(i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.289, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.7080:                                      ; preds = %if.end.7068
  %3695 = load %struct.layout*, %struct.layout** %lay, align 8
  %3696 = load %struct.display*, %struct.display** @display, align 8
  %d_layout7081 = getelementptr inbounds %struct.display, %struct.display* %3696, i32 0, i32 5
  %3697 = load %struct.layout*, %struct.layout** %d_layout7081, align 8
  %cmp7082 = icmp eq %struct.layout* %3695, %3697
  br i1 %cmp7082, label %if.then.7084, label %if.end.7085

if.then.7084:                                     ; preds = %if.end.7080
  br label %sw.epilog.7356

if.end.7085:                                      ; preds = %if.end.7080
  %3698 = load %struct.layout*, %struct.layout** %lay, align 8
  %3699 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas7086 = getelementptr inbounds %struct.display, %struct.display* %3699, i32 0, i32 2
  call void @LoadLayout(%struct.layout* %3698, %struct.canvas* %d_canvas7086)
  call void @Activate(i32 -1)
  br label %if.end.7328

if.else.7087:                                     ; preds = %if.else.7037
  %3700 = load i8**, i8*** %args, align 8
  %arrayidx7088 = getelementptr inbounds i8*, i8** %3700, i64 0
  %3701 = load i8*, i8** %arrayidx7088, align 8
  %call7089 = call i32 @strcmp(i8* %3701, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0)) #8
  %tobool7090 = icmp ne i32 %call7089, 0
  br i1 %tobool7090, label %if.else.7137, label %if.then.7091

if.then.7091:                                     ; preds = %if.else.7087
  %3702 = load %struct.display*, %struct.display** @display, align 8
  %tobool7093 = icmp ne %struct.display* %3702, null
  br i1 %tobool7093, label %cond.true.7094, label %cond.false.7096

cond.true.7094:                                   ; preds = %if.then.7091
  %3703 = load %struct.display*, %struct.display** @display, align 8
  %d_layout7095 = getelementptr inbounds %struct.display, %struct.display* %3703, i32 0, i32 5
  %3704 = load %struct.layout*, %struct.layout** %d_layout7095, align 8
  br label %cond.end.7097

cond.false.7096:                                  ; preds = %if.then.7091
  %3705 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  br label %cond.end.7097

cond.end.7097:                                    ; preds = %cond.false.7096, %cond.true.7094
  %cond7098 = phi %struct.layout* [ %3704, %cond.true.7094 ], [ %3705, %cond.false.7096 ]
  store %struct.layout* %cond7098, %struct.layout** %lay7092, align 8
  %3706 = load %struct.layout*, %struct.layout** %lay7092, align 8
  store %struct.layout* %3706, %struct.layout** %target, align 8
  %3707 = load %struct.layout*, %struct.layout** %lay7092, align 8
  %tobool7099 = icmp ne %struct.layout* %3707, null
  br i1 %tobool7099, label %if.then.7100, label %if.else.7114

if.then.7100:                                     ; preds = %cond.end.7097
  %3708 = load %struct.layout*, %struct.layout** @layouts, align 8
  store %struct.layout* %3708, %struct.layout** %lay7092, align 8
  br label %for.cond.7101

for.cond.7101:                                    ; preds = %for.inc.7111, %if.then.7100
  %3709 = load %struct.layout*, %struct.layout** %lay7092, align 8
  %lay_next7102 = getelementptr inbounds %struct.layout, %struct.layout* %3709, i32 0, i32 0
  %3710 = load %struct.layout*, %struct.layout** %lay_next7102, align 8
  %tobool7103 = icmp ne %struct.layout* %3710, null
  br i1 %tobool7103, label %land.rhs.7104, label %land.end.7108

land.rhs.7104:                                    ; preds = %for.cond.7101
  %3711 = load %struct.layout*, %struct.layout** %lay7092, align 8
  %lay_next7105 = getelementptr inbounds %struct.layout, %struct.layout* %3711, i32 0, i32 0
  %3712 = load %struct.layout*, %struct.layout** %lay_next7105, align 8
  %3713 = load %struct.layout*, %struct.layout** %target, align 8
  %cmp7106 = icmp ne %struct.layout* %3712, %3713
  br label %land.end.7108

land.end.7108:                                    ; preds = %land.rhs.7104, %for.cond.7101
  %3714 = phi i1 [ false, %for.cond.7101 ], [ %cmp7106, %land.rhs.7104 ]
  br i1 %3714, label %for.body.7110, label %for.end.7113

for.body.7110:                                    ; preds = %land.end.7108
  br label %for.inc.7111

for.inc.7111:                                     ; preds = %for.body.7110
  %3715 = load %struct.layout*, %struct.layout** %lay7092, align 8
  %lay_next7112 = getelementptr inbounds %struct.layout, %struct.layout* %3715, i32 0, i32 0
  %3716 = load %struct.layout*, %struct.layout** %lay_next7112, align 8
  store %struct.layout* %3716, %struct.layout** %lay7092, align 8
  br label %for.cond.7101

for.end.7113:                                     ; preds = %land.end.7108
  br label %if.end.7115

if.else.7114:                                     ; preds = %cond.end.7097
  %3717 = load %struct.layout*, %struct.layout** @layouts, align 8
  store %struct.layout* %3717, %struct.layout** %lay7092, align 8
  br label %if.end.7115

if.end.7115:                                      ; preds = %if.else.7114, %for.end.7113
  %3718 = load %struct.display*, %struct.display** @display, align 8
  %tobool7116 = icmp ne %struct.display* %3718, null
  br i1 %tobool7116, label %if.end.7118, label %if.then.7117

if.then.7117:                                     ; preds = %if.end.7115
  %3719 = load %struct.layout*, %struct.layout** %lay7092, align 8
  store %struct.layout* %3719, %struct.layout** @layout_attach, align 8
  br label %sw.epilog.7356

if.end.7118:                                      ; preds = %if.end.7115
  %3720 = load %struct.layout*, %struct.layout** %lay7092, align 8
  %tobool7119 = icmp ne %struct.layout* %3720, null
  br i1 %tobool7119, label %if.end.7130, label %if.then.7120

if.then.7120:                                     ; preds = %if.end.7118
  %3721 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7121 = getelementptr inbounds %struct.action, %struct.action* %3721, i32 0, i32 3
  %3722 = load i32, i32* %quiet7121, align 4
  %tobool7122 = icmp ne i32 %3722, 0
  br i1 %tobool7122, label %cond.false.7124, label %cond.true.7123

cond.true.7123:                                   ; preds = %if.then.7120
  br label %cond.end.7128

cond.false.7124:                                  ; preds = %if.then.7120
  %3723 = load i32, i32* @queryflag, align 4
  %cmp7125 = icmp sge i32 %3723, 0
  %cond7127 = select i1 %cmp7125, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7128

cond.end.7128:                                    ; preds = %cond.false.7124, %cond.true.7123
  %cond7129 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7123 ], [ %cond7127, %cond.false.7124 ]
  call void (i32, i8*, ...) %cond7129(i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.289, i32 0, i32 0))
  br label %sw.epilog.7356

if.end.7130:                                      ; preds = %if.end.7118
  %3724 = load %struct.layout*, %struct.layout** %lay7092, align 8
  %3725 = load %struct.display*, %struct.display** @display, align 8
  %d_layout7131 = getelementptr inbounds %struct.display, %struct.display* %3725, i32 0, i32 5
  %3726 = load %struct.layout*, %struct.layout** %d_layout7131, align 8
  %cmp7132 = icmp eq %struct.layout* %3724, %3726
  br i1 %cmp7132, label %if.then.7134, label %if.end.7135

if.then.7134:                                     ; preds = %if.end.7130
  br label %sw.epilog.7356

if.end.7135:                                      ; preds = %if.end.7130
  %3727 = load %struct.layout*, %struct.layout** %lay7092, align 8
  %3728 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas7136 = getelementptr inbounds %struct.display, %struct.display* %3728, i32 0, i32 2
  call void @LoadLayout(%struct.layout* %3727, %struct.canvas* %d_canvas7136)
  call void @Activate(i32 -1)
  br label %if.end.7327

if.else.7137:                                     ; preds = %if.else.7087
  %3729 = load i8**, i8*** %args, align 8
  %arrayidx7138 = getelementptr inbounds i8*, i8** %3729, i64 0
  %3730 = load i8*, i8** %arrayidx7138, align 8
  %call7139 = call i32 @strcmp(i8* %3730, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.290, i32 0, i32 0)) #8
  %tobool7140 = icmp ne i32 %call7139, 0
  br i1 %tobool7140, label %if.else.7212, label %if.then.7141

if.then.7141:                                     ; preds = %if.else.7137
  %3731 = load i8**, i8*** %args, align 8
  %arrayidx7142 = getelementptr inbounds i8*, i8** %3731, i64 1
  %3732 = load i8*, i8** %arrayidx7142, align 8
  %tobool7143 = icmp ne i8* %3732, null
  br i1 %tobool7143, label %if.end.7183, label %if.then.7144

if.then.7144:                                     ; preds = %if.then.7141
  %3733 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %tobool7145 = icmp ne %struct.layout* %3733, null
  br i1 %tobool7145, label %if.else.7156, label %if.then.7146

if.then.7146:                                     ; preds = %if.then.7144
  %3734 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7147 = getelementptr inbounds %struct.action, %struct.action* %3734, i32 0, i32 3
  %3735 = load i32, i32* %quiet7147, align 4
  %tobool7148 = icmp ne i32 %3735, 0
  br i1 %tobool7148, label %cond.false.7150, label %cond.true.7149

cond.true.7149:                                   ; preds = %if.then.7146
  br label %cond.end.7154

cond.false.7150:                                  ; preds = %if.then.7146
  %3736 = load i32, i32* @queryflag, align 4
  %cmp7151 = icmp sge i32 %3736, 0
  %cond7153 = select i1 %cmp7151, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7154

cond.end.7154:                                    ; preds = %cond.false.7150, %cond.true.7149
  %cond7155 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7149 ], [ %cond7153, %cond.false.7150 ]
  call void (i32, i8*, ...) %cond7155(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.291, i32 0, i32 0))
  br label %if.end.7182

if.else.7156:                                     ; preds = %if.then.7144
  %3737 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %cmp7157 = icmp eq %struct.layout* %3737, @layout_last_marker
  br i1 %cmp7157, label %if.then.7159, label %if.else.7169

if.then.7159:                                     ; preds = %if.else.7156
  %3738 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7160 = getelementptr inbounds %struct.action, %struct.action* %3738, i32 0, i32 3
  %3739 = load i32, i32* %quiet7160, align 4
  %tobool7161 = icmp ne i32 %3739, 0
  br i1 %tobool7161, label %cond.false.7163, label %cond.true.7162

cond.true.7162:                                   ; preds = %if.then.7159
  br label %cond.end.7167

cond.false.7163:                                  ; preds = %if.then.7159
  %3740 = load i32, i32* @queryflag, align 4
  %cmp7164 = icmp sge i32 %3740, 0
  %cond7166 = select i1 %cmp7164, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7167

cond.end.7167:                                    ; preds = %cond.false.7163, %cond.true.7162
  %cond7168 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7162 ], [ %cond7166, %cond.false.7163 ]
  call void (i32, i8*, ...) %cond7168(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.292, i32 0, i32 0))
  br label %if.end.7181

if.else.7169:                                     ; preds = %if.else.7156
  %3741 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7170 = getelementptr inbounds %struct.action, %struct.action* %3741, i32 0, i32 3
  %3742 = load i32, i32* %quiet7170, align 4
  %tobool7171 = icmp ne i32 %3742, 0
  br i1 %tobool7171, label %cond.false.7173, label %cond.true.7172

cond.true.7172:                                   ; preds = %if.else.7169
  br label %cond.end.7177

cond.false.7173:                                  ; preds = %if.else.7169
  %3743 = load i32, i32* @queryflag, align 4
  %cmp7174 = icmp sge i32 %3743, 0
  %cond7176 = select i1 %cmp7174, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7177

cond.end.7177:                                    ; preds = %cond.false.7173, %cond.true.7172
  %cond7178 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7172 ], [ %cond7176, %cond.false.7173 ]
  %3744 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %lay_number7179 = getelementptr inbounds %struct.layout, %struct.layout* %3744, i32 0, i32 2
  %3745 = load i32, i32* %lay_number7179, align 4
  %3746 = load %struct.layout*, %struct.layout** @layout_attach, align 8
  %lay_title7180 = getelementptr inbounds %struct.layout, %struct.layout* %3746, i32 0, i32 1
  %3747 = load i8*, i8** %lay_title7180, align 8
  call void (i32, i8*, ...) %cond7178(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.293, i32 0, i32 0), i32 %3745, i8* %3747)
  br label %if.end.7181

if.end.7181:                                      ; preds = %cond.end.7177, %cond.end.7167
  br label %if.end.7182

if.end.7182:                                      ; preds = %if.end.7181, %cond.end.7154
  br label %sw.epilog.7356

if.end.7183:                                      ; preds = %if.then.7141
  %3748 = load i8**, i8*** %args, align 8
  %arrayidx7184 = getelementptr inbounds i8*, i8** %3748, i64 1
  %3749 = load i8*, i8** %arrayidx7184, align 8
  %call7185 = call i32 @strcmp(i8* %3749, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.294, i32 0, i32 0)) #8
  %tobool7186 = icmp ne i32 %call7185, 0
  br i1 %tobool7186, label %if.else.7188, label %if.then.7187

if.then.7187:                                     ; preds = %if.end.7183
  store %struct.layout* @layout_last_marker, %struct.layout** @layout_attach, align 8
  br label %if.end.7211

if.else.7188:                                     ; preds = %if.end.7183
  %3750 = load i8**, i8*** %args, align 8
  %arrayidx7189 = getelementptr inbounds i8*, i8** %3750, i64 1
  %3751 = load i8*, i8** %arrayidx7189, align 8
  %arrayidx7190 = getelementptr inbounds i8, i8* %3751, i64 0
  %3752 = load i8, i8* %arrayidx7190, align 1
  %tobool7191 = icmp ne i8 %3752, 0
  br i1 %tobool7191, label %if.else.7193, label %if.then.7192

if.then.7192:                                     ; preds = %if.else.7188
  store %struct.layout* null, %struct.layout** @layout_attach, align 8
  br label %if.end.7210

if.else.7193:                                     ; preds = %if.else.7188
  %3753 = load i8**, i8*** %args, align 8
  %arrayidx7195 = getelementptr inbounds i8*, i8** %3753, i64 1
  %3754 = load i8*, i8** %arrayidx7195, align 8
  %call7196 = call %struct.layout* @FindLayout(i8* %3754)
  store %struct.layout* %call7196, %struct.layout** %lay7194, align 8
  %3755 = load %struct.layout*, %struct.layout** %lay7194, align 8
  %tobool7197 = icmp ne %struct.layout* %3755, null
  br i1 %tobool7197, label %if.end.7209, label %if.then.7198

if.then.7198:                                     ; preds = %if.else.7193
  %3756 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7199 = getelementptr inbounds %struct.action, %struct.action* %3756, i32 0, i32 3
  %3757 = load i32, i32* %quiet7199, align 4
  %tobool7200 = icmp ne i32 %3757, 0
  br i1 %tobool7200, label %cond.false.7202, label %cond.true.7201

cond.true.7201:                                   ; preds = %if.then.7198
  br label %cond.end.7206

cond.false.7202:                                  ; preds = %if.then.7198
  %3758 = load i32, i32* @queryflag, align 4
  %cmp7203 = icmp sge i32 %3758, 0
  %cond7205 = select i1 %cmp7203, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7206

cond.end.7206:                                    ; preds = %cond.false.7202, %cond.true.7201
  %cond7207 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7201 ], [ %cond7205, %cond.false.7202 ]
  %3759 = load i8**, i8*** %args, align 8
  %arrayidx7208 = getelementptr inbounds i8*, i8** %3759, i64 1
  %3760 = load i8*, i8** %arrayidx7208, align 8
  call void (i32, i8*, ...) %cond7207(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.295, i32 0, i32 0), i8* %3760)
  br label %sw.epilog.7356

if.end.7209:                                      ; preds = %if.else.7193
  %3761 = load %struct.layout*, %struct.layout** %lay7194, align 8
  store %struct.layout* %3761, %struct.layout** @layout_attach, align 8
  br label %if.end.7210

if.end.7210:                                      ; preds = %if.end.7209, %if.then.7192
  br label %if.end.7211

if.end.7211:                                      ; preds = %if.end.7210, %if.then.7187
  br label %if.end.7326

if.else.7212:                                     ; preds = %if.else.7137
  %3762 = load i8**, i8*** %args, align 8
  %arrayidx7213 = getelementptr inbounds i8*, i8** %3762, i64 0
  %3763 = load i8*, i8** %arrayidx7213, align 8
  %call7214 = call i32 @strcmp(i8* %3763, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.296, i32 0, i32 0)) #8
  %tobool7215 = icmp ne i32 %call7214, 0
  br i1 %tobool7215, label %if.else.7217, label %if.then.7216

if.then.7216:                                     ; preds = %if.else.7212
  call void @ShowLayouts(i32 -1)
  br label %if.end.7325

if.else.7217:                                     ; preds = %if.else.7212
  %3764 = load i8**, i8*** %args, align 8
  %arrayidx7218 = getelementptr inbounds i8*, i8** %3764, i64 0
  %3765 = load i8*, i8** %arrayidx7218, align 8
  %call7219 = call i32 @strcmp(i8* %3765, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.297, i32 0, i32 0)) #8
  %tobool7220 = icmp ne i32 %call7219, 0
  br i1 %tobool7220, label %if.else.7256, label %if.then.7221

if.then.7221:                                     ; preds = %if.else.7217
  %3766 = load %struct.display*, %struct.display** @display, align 8
  %tobool7223 = icmp ne %struct.display* %3766, null
  br i1 %tobool7223, label %cond.true.7224, label %cond.false.7226

cond.true.7224:                                   ; preds = %if.then.7221
  %3767 = load %struct.display*, %struct.display** @display, align 8
  %d_layout7225 = getelementptr inbounds %struct.display, %struct.display* %3767, i32 0, i32 5
  %3768 = load %struct.layout*, %struct.layout** %d_layout7225, align 8
  br label %cond.end.7227

cond.false.7226:                                  ; preds = %if.then.7221
  %3769 = load %struct.layout*, %struct.layout** @layouts, align 8
  br label %cond.end.7227

cond.end.7227:                                    ; preds = %cond.false.7226, %cond.true.7224
  %cond7228 = phi %struct.layout* [ %3768, %cond.true.7224 ], [ %3769, %cond.false.7226 ]
  store %struct.layout* %cond7228, %struct.layout** %lay7222, align 8
  %3770 = load i8**, i8*** %args, align 8
  %arrayidx7229 = getelementptr inbounds i8*, i8** %3770, i64 1
  %3771 = load i8*, i8** %arrayidx7229, align 8
  %tobool7230 = icmp ne i8* %3771, null
  br i1 %tobool7230, label %if.then.7231, label %if.end.7252

if.then.7231:                                     ; preds = %cond.end.7227
  %3772 = load %struct.layout*, %struct.layout** @layouts, align 8
  %tobool7232 = icmp ne %struct.layout* %3772, null
  br i1 %tobool7232, label %cond.true.7233, label %cond.false.7236

cond.true.7233:                                   ; preds = %if.then.7231
  %3773 = load i8**, i8*** %args, align 8
  %arrayidx7234 = getelementptr inbounds i8*, i8** %3773, i64 1
  %3774 = load i8*, i8** %arrayidx7234, align 8
  %call7235 = call %struct.layout* @FindLayout(i8* %3774)
  br label %cond.end.7237

cond.false.7236:                                  ; preds = %if.then.7231
  br label %cond.end.7237

cond.end.7237:                                    ; preds = %cond.false.7236, %cond.true.7233
  %cond7238 = phi %struct.layout* [ %call7235, %cond.true.7233 ], [ null, %cond.false.7236 ]
  store %struct.layout* %cond7238, %struct.layout** %lay7222, align 8
  %3775 = load %struct.layout*, %struct.layout** %lay7222, align 8
  %tobool7239 = icmp ne %struct.layout* %3775, null
  br i1 %tobool7239, label %if.end.7251, label %if.then.7240

if.then.7240:                                     ; preds = %cond.end.7237
  %3776 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7241 = getelementptr inbounds %struct.action, %struct.action* %3776, i32 0, i32 3
  %3777 = load i32, i32* %quiet7241, align 4
  %tobool7242 = icmp ne i32 %3777, 0
  br i1 %tobool7242, label %cond.false.7244, label %cond.true.7243

cond.true.7243:                                   ; preds = %if.then.7240
  br label %cond.end.7248

cond.false.7244:                                  ; preds = %if.then.7240
  %3778 = load i32, i32* @queryflag, align 4
  %cmp7245 = icmp sge i32 %3778, 0
  %cond7247 = select i1 %cmp7245, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7248

cond.end.7248:                                    ; preds = %cond.false.7244, %cond.true.7243
  %cond7249 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7243 ], [ %cond7247, %cond.false.7244 ]
  %3779 = load i8**, i8*** %args, align 8
  %arrayidx7250 = getelementptr inbounds i8*, i8** %3779, i64 1
  %3780 = load i8*, i8** %arrayidx7250, align 8
  call void (i32, i8*, ...) %cond7249(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.295, i32 0, i32 0), i8* %3780)
  br label %sw.epilog.7356

if.end.7251:                                      ; preds = %cond.end.7237
  br label %if.end.7252

if.end.7252:                                      ; preds = %if.end.7251, %cond.end.7227
  %3781 = load %struct.layout*, %struct.layout** %lay7222, align 8
  %tobool7253 = icmp ne %struct.layout* %3781, null
  br i1 %tobool7253, label %if.then.7254, label %if.end.7255

if.then.7254:                                     ; preds = %if.end.7252
  %3782 = load %struct.layout*, %struct.layout** %lay7222, align 8
  call void @RemoveLayout(%struct.layout* %3782)
  br label %if.end.7255

if.end.7255:                                      ; preds = %if.then.7254, %if.end.7252
  br label %if.end.7324

if.else.7256:                                     ; preds = %if.else.7217
  %3783 = load i8**, i8*** %args, align 8
  %arrayidx7257 = getelementptr inbounds i8*, i8** %3783, i64 0
  %3784 = load i8*, i8** %arrayidx7257, align 8
  %call7258 = call i32 @strcmp(i8* %3784, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.298, i32 0, i32 0)) #8
  %tobool7259 = icmp ne i32 %call7258, 0
  br i1 %tobool7259, label %if.else.7313, label %if.then.7260

if.then.7260:                                     ; preds = %if.else.7256
  %3785 = load %struct.display*, %struct.display** @display, align 8
  %tobool7261 = icmp ne %struct.display* %3785, null
  br i1 %tobool7261, label %if.else.7272, label %if.then.7262

if.then.7262:                                     ; preds = %if.then.7260
  %3786 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7263 = getelementptr inbounds %struct.action, %struct.action* %3786, i32 0, i32 3
  %3787 = load i32, i32* %quiet7263, align 4
  %tobool7264 = icmp ne i32 %3787, 0
  br i1 %tobool7264, label %cond.false.7266, label %cond.true.7265

cond.true.7265:                                   ; preds = %if.then.7262
  br label %cond.end.7270

cond.false.7266:                                  ; preds = %if.then.7262
  %3788 = load i32, i32* @queryflag, align 4
  %cmp7267 = icmp sge i32 %3788, 0
  %cond7269 = select i1 %cmp7267, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7270

cond.end.7270:                                    ; preds = %cond.false.7266, %cond.true.7265
  %cond7271 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7265 ], [ %cond7269, %cond.false.7266 ]
  call void (i32, i8*, ...) %cond7271(i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.299, i32 0, i32 0))
  br label %if.end.7312

if.else.7272:                                     ; preds = %if.then.7260
  %3789 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas7273 = getelementptr inbounds %struct.display, %struct.display* %3789, i32 0, i32 2
  %3790 = load i8**, i8*** %args, align 8
  %arrayidx7274 = getelementptr inbounds i8*, i8** %3790, i64 1
  %3791 = load i8*, i8** %arrayidx7274, align 8
  %tobool7275 = icmp ne i8* %3791, null
  br i1 %tobool7275, label %cond.true.7276, label %cond.false.7278

cond.true.7276:                                   ; preds = %if.else.7272
  %3792 = load i8**, i8*** %args, align 8
  %arrayidx7277 = getelementptr inbounds i8*, i8** %3792, i64 1
  %3793 = load i8*, i8** %arrayidx7277, align 8
  br label %cond.end.7279

cond.false.7278:                                  ; preds = %if.else.7272
  br label %cond.end.7279

cond.end.7279:                                    ; preds = %cond.false.7278, %cond.true.7276
  %cond7280 = phi i8* [ %3793, %cond.true.7276 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i32 0, i32 0), %cond.false.7278 ]
  %call7281 = call i32 @LayoutDumpCanvas(%struct.canvas* %d_canvas7273, i8* %cond7280)
  %tobool7282 = icmp ne i32 %call7281, 0
  br i1 %tobool7282, label %if.else.7294, label %if.then.7283

if.then.7283:                                     ; preds = %cond.end.7279
  %3794 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7284 = getelementptr inbounds %struct.action, %struct.action* %3794, i32 0, i32 3
  %3795 = load i32, i32* %quiet7284, align 4
  %tobool7285 = icmp ne i32 %3795, 0
  br i1 %tobool7285, label %cond.false.7287, label %cond.true.7286

cond.true.7286:                                   ; preds = %if.then.7283
  br label %cond.end.7291

cond.false.7287:                                  ; preds = %if.then.7283
  %3796 = load i32, i32* @queryflag, align 4
  %cmp7288 = icmp sge i32 %3796, 0
  %cond7290 = select i1 %cmp7288, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7291

cond.end.7291:                                    ; preds = %cond.false.7287, %cond.true.7286
  %cond7292 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7286 ], [ %cond7290, %cond.false.7287 ]
  %call7293 = call i32* @__errno_location() #9
  %3797 = load i32, i32* %call7293, align 4
  call void (i32, i8*, ...) %cond7292(i32 %3797, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.301, i32 0, i32 0))
  br label %if.end.7311

if.else.7294:                                     ; preds = %cond.end.7279
  %3798 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7295 = getelementptr inbounds %struct.action, %struct.action* %3798, i32 0, i32 3
  %3799 = load i32, i32* %quiet7295, align 4
  %tobool7296 = icmp ne i32 %3799, 0
  br i1 %tobool7296, label %cond.false.7298, label %cond.true.7297

cond.true.7297:                                   ; preds = %if.else.7294
  br label %cond.end.7302

cond.false.7298:                                  ; preds = %if.else.7294
  %3800 = load i32, i32* @queryflag, align 4
  %cmp7299 = icmp sge i32 %3800, 0
  %cond7301 = select i1 %cmp7299, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7302

cond.end.7302:                                    ; preds = %cond.false.7298, %cond.true.7297
  %cond7303 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7297 ], [ %cond7301, %cond.false.7298 ]
  %3801 = load i8**, i8*** %args, align 8
  %arrayidx7304 = getelementptr inbounds i8*, i8** %3801, i64 1
  %3802 = load i8*, i8** %arrayidx7304, align 8
  %tobool7305 = icmp ne i8* %3802, null
  br i1 %tobool7305, label %cond.true.7306, label %cond.false.7308

cond.true.7306:                                   ; preds = %cond.end.7302
  %3803 = load i8**, i8*** %args, align 8
  %arrayidx7307 = getelementptr inbounds i8*, i8** %3803, i64 1
  %3804 = load i8*, i8** %arrayidx7307, align 8
  br label %cond.end.7309

cond.false.7308:                                  ; preds = %cond.end.7302
  br label %cond.end.7309

cond.end.7309:                                    ; preds = %cond.false.7308, %cond.true.7306
  %cond7310 = phi i8* [ %3804, %cond.true.7306 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i32 0, i32 0), %cond.false.7308 ]
  call void (i32, i8*, ...) %cond7303(i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.302, i32 0, i32 0), i8* %cond7310)
  br label %if.end.7311

if.end.7311:                                      ; preds = %cond.end.7309, %cond.end.7291
  br label %if.end.7312

if.end.7312:                                      ; preds = %if.end.7311, %cond.end.7270
  br label %if.end.7323

if.else.7313:                                     ; preds = %if.else.7256
  %3805 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7314 = getelementptr inbounds %struct.action, %struct.action* %3805, i32 0, i32 3
  %3806 = load i32, i32* %quiet7314, align 4
  %tobool7315 = icmp ne i32 %3806, 0
  br i1 %tobool7315, label %cond.false.7317, label %cond.true.7316

cond.true.7316:                                   ; preds = %if.else.7313
  br label %cond.end.7321

cond.false.7317:                                  ; preds = %if.else.7313
  %3807 = load i32, i32* @queryflag, align 4
  %cmp7318 = icmp sge i32 %3807, 0
  %cond7320 = select i1 %cmp7318, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7321

cond.end.7321:                                    ; preds = %cond.false.7317, %cond.true.7316
  %cond7322 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7316 ], [ %cond7320, %cond.false.7317 ]
  call void (i32, i8*, ...) %cond7322(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.303, i32 0, i32 0))
  br label %if.end.7323

if.end.7323:                                      ; preds = %cond.end.7321, %if.end.7312
  br label %if.end.7324

if.end.7324:                                      ; preds = %if.end.7323, %if.end.7255
  br label %if.end.7325

if.end.7325:                                      ; preds = %if.end.7324, %if.then.7216
  br label %if.end.7326

if.end.7326:                                      ; preds = %if.end.7325, %if.end.7211
  br label %if.end.7327

if.end.7327:                                      ; preds = %if.end.7326, %if.end.7135
  br label %if.end.7328

if.end.7328:                                      ; preds = %if.end.7327, %if.end.7085
  br label %if.end.7329

if.end.7329:                                      ; preds = %if.end.7328, %if.end.7032
  br label %if.end.7330

if.end.7330:                                      ; preds = %if.end.7329, %if.end.7014
  br label %if.end.7331

if.end.7331:                                      ; preds = %if.end.7330, %if.end.6992
  br label %if.end.7332

if.end.7332:                                      ; preds = %if.end.7331, %if.end.6945
  br label %if.end.7333

if.end.7333:                                      ; preds = %if.end.7332
  br label %if.end.7334

if.end.7334:                                      ; preds = %if.end.7333, %if.end.6802
  br label %sw.epilog.7356

sw.bb.7335:                                       ; preds = %land.end
  %3808 = load %struct.action*, %struct.action** %act.addr, align 8
  %call7336 = call i32 @ParseSwitch(%struct.action* %3808, i32* @cjkwidth)
  %cmp7337 = icmp eq i32 %call7336, 0
  br i1 %cmp7337, label %if.then.7339, label %if.end.7354

if.then.7339:                                     ; preds = %sw.bb.7335
  %3809 = load i32, i32* %msgok, align 4
  %tobool7340 = icmp ne i32 %3809, 0
  br i1 %tobool7340, label %if.then.7341, label %if.end.7353

if.then.7341:                                     ; preds = %if.then.7339
  %3810 = load %struct.action*, %struct.action** %act.addr, align 8
  %quiet7342 = getelementptr inbounds %struct.action, %struct.action* %3810, i32 0, i32 3
  %3811 = load i32, i32* %quiet7342, align 4
  %tobool7343 = icmp ne i32 %3811, 0
  br i1 %tobool7343, label %cond.false.7345, label %cond.true.7344

cond.true.7344:                                   ; preds = %if.then.7341
  br label %cond.end.7349

cond.false.7345:                                  ; preds = %if.then.7341
  %3812 = load i32, i32* @queryflag, align 4
  %cmp7346 = icmp sge i32 %3812, 0
  %cond7348 = select i1 %cmp7346, void (i32, i8*, ...)* @QueryMsg, void (i32, i8*, ...)* @Dummy
  br label %cond.end.7349

cond.end.7349:                                    ; preds = %cond.false.7345, %cond.true.7344
  %cond7350 = phi void (i32, i8*, ...)* [ @Msg, %cond.true.7344 ], [ %cond7348, %cond.false.7345 ]
  %3813 = load i32, i32* @cjkwidth, align 4
  %tobool7351 = icmp ne i32 %3813, 0
  %cond7352 = select i1 %tobool7351, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.306, i32 0, i32 0)
  call void (i32, i8*, ...) %cond7350(i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.304, i32 0, i32 0), i8* %cond7352)
  br label %if.end.7353

if.end.7353:                                      ; preds = %cond.end.7349, %if.then.7339
  br label %if.end.7354

if.end.7354:                                      ; preds = %if.end.7353, %sw.bb.7335
  br label %sw.epilog.7356

sw.default.7355:                                  ; preds = %land.end
  br label %sw.epilog.7356

sw.epilog.7356:                                   ; preds = %sw.default.7355, %if.end.7354, %if.end.7334, %cond.end.7248, %cond.end.7206, %if.end.7182, %if.then.7134, %cond.end.7128, %if.then.7117, %if.then.7084, %cond.end.7078, %if.end.7055, %if.then.7031, %if.end.7027, %cond.end.7008, %cond.end.6925, %cond.end.6898, %if.end.6886, %if.end.6854, %cond.end.6848, %cond.end.6835, %if.end.6823, %cond.end.6798, %cond.end.6785, %if.end.6774, %if.then.6763, %if.end.6753, %if.end.6699, %if.end.6623, %if.then.6583, %cond.end.6575, %if.end.6543, %if.end.6526, %if.end.6481, %if.then.6480, %if.end.6477, %if.then.6473, %if.then.6468, %cond.end.6462, %if.then.6446, %if.end.6442, %if.then.6389, %cond.end.6384, %if.end.6372, %for.end.6356, %sw.bb.6331, %if.end.6330, %cond.end.6322, %cond.end.6266, %if.end.6253, %cond.end.6244, %sw.bb.6122, %sw.bb.6121, %sw.bb.6120, %if.end.6119, %if.end.6108, %sw.bb.6056, %if.end.6055, %if.then.6037, %if.then.6023, %cond.end.6012, %for.end.5980, %if.then.5946, %cond.end.5933, %if.end.5829, %if.then.5825, %cond.end.5817, %cond.end.5760, %cond.end.5741, %if.end.5722, %if.end.5712, %cond.end.5703, %if.end.5684, %if.end.5673, %cond.end.5600, %if.end.5577, %if.end.5576, %for.end.5538, %if.end.5451, %if.end.5427, %cond.end.5425, %for.end.5412, %if.end.5361, %if.end.5313, %if.end.5285, %if.end.5265, %if.end.5245, %if.end.5210, %if.else.5195, %if.then.5186, %if.end.5162, %if.else.5108, %if.then.5099, %sw.bb.5072, %if.end.5071, %if.then.5053, %while.end.5049, %if.end.5024, %if.end.4979, %if.then.4949, %if.then.4928, %if.end.4915, %if.then.4901, %sw.bb.4895, %sw.bb.4894, %sw.bb.4893, %if.end.4892, %cond.end.4874, %if.then.4862, %if.end.4856, %if.then.4809, %cond.end.4801, %cond.end.4754, %cond.end.4649, %cond.end.4603, %cond.end.4590, %if.end.4576, %cond.end.4563, %if.end.4491, %if.then.4480, %cond.end.4472, %cond.end.4449, %cond.end.4434, %if.end.4373, %cond.end.4364, %sw.bb.4319, %sw.bb.4317, %if.end.4316, %cond.end.4302, %if.then.4287, %do.end.4283, %cond.end.4277, %sw.bb.4261, %sw.bb.4259, %if.end.4258, %sw.bb.4238, %if.end.4237, %do.end.4218, %cond.end.4214, %if.end.4202, %sw.bb.4160, %sw.bb.4158, %if.end.4157, %if.end.4143, %cond.end.4134, %cond.end.4119, %cond.end.4090, %if.then.4071, %if.end.4053, %cond.end.4033, %sw.bb.4019, %if.end.4018, %if.then.4007, %if.then.3937, %if.then.3895, %if.then.3888, %for.end.3860, %if.then.3799, %do.end.3796, %if.then.3788, %if.end.3784, %if.then.3767, %sw.bb.3717, %if.end.3716, %if.end.3706, %if.end.3696, %if.then.3673, %if.end.3669, %if.end.3650, %if.end.3631, %if.end.3612, %if.then.3588, %sw.bb.3579, %if.end.3578, %if.then.3558, %cond.end.3553, %if.then.3510, %if.then.3506, %if.end.3498, %if.then.3494, %cond.end.3488, %cond.end.3476, %if.end.3431, %if.end.3415, %cond.end.3338, %cond.end.3326, %if.end.3261, %if.end.3240, %if.end.3231, %if.end.3200, %if.end.3191, %sw.bb.3181, %sw.bb.3179, %sw.bb.3177, %sw.bb.3175, %if.end.3174, %if.end.3131, %if.end.3117, %if.end.3111, %if.end.3099, %if.end.3085, %cond.end.3082, %sw.bb.3066, %if.end.3065, %if.then.3051, %if.end.3041, %cond.end.3038, %if.end.3023, %if.then.2978, %do.end.2970, %cond.end.2960, %if.then.2947, %sw.bb.2943, %if.end.2942, %sw.bb.2926, %if.end.2925, %if.then.2901, %cond.end.2837, %if.then.2827, %if.then.2803, %if.end.2799, %if.end.2775, %if.end.2750, %if.end.2744, %if.end.2723, %cond.end.2720, %if.then.2696, %cond.end.2688, %if.end.2665, %sw.bb.2649, %if.end.2648, %cond.end.2623, %cond.end.2605, %if.end.2567, %cond.end.2525, %cond.end.2502, %cond.end.2474, %if.end.2461, %cond.end.2382, %cond.end.2366, %cond.end.2327, %cond.end.2236, %if.then.2220, %if.then.2213, %if.then.2207, %if.then.2201, %cond.end.2195, %if.end.2182, %cond.end.2180, %sw.bb.2167, %if.end.2166, %cond.end.2160, %if.end.2139, %sw.bb.2033, %if.end.2032, %if.then.1912, %if.end.1889, %sw.bb.1884, %cond.end.1882, %if.then.1851, %if.end.1838, %if.then.1834, %if.end.1823, %if.then.1772, %if.end.1755, %sw.bb.1735, %if.end.1734, %if.end.1720, %if.end.1709, %if.end.1701, %if.end.1683, %cond.end.1631, %if.then.1615, %if.end.1606, %if.then.1605, %cond.end.1592, %cond.end.1579, %cond.end.1563, %cond.end.1484, %cond.end.1462, %cond.end.1446, %sw.bb.1408, %if.end.1405, %if.then.1404, %if.end.1398, %sw.bb.1296, %sw.bb.1293, %if.end.1288, %if.then.1287, %if.end.1283, %if.end.1262, %cond.end.1246, %sw.bb.1226, %sw.bb.1225, %cond.end.1222, %if.then.1212, %cond.end.1208, %if.end.1199, %if.then.1197, %sw.bb.1193, %while.end, %if.then.1187, %if.then.1176, %cond.end.1169, %cond.end.1141, %if.then.1126, %if.end.1120, %cond.end.1118, %if.then.1106, %if.end.1102, %cond.end.1052, %cond.end.1039, %cond.end.1023, %if.end.986, %cond.end.970, %cond.end.952, %if.then.940, %cond.end.933, %sw.epilog, %if.then.571, %cond.end.567, %cond.end.554, %cond.end.539, %cond.end.521, %if.then.506, %cond.end.502, %if.end.482, %cond.end.465, %if.end.436, %if.end.412, %if.end.388, %if.end.372, %if.end.365, %if.then.356, %if.end.352, %cond.end.337, %if.then.323, %if.end.318, %if.end.312, %sw.bb.306, %sw.bb.302, %sw.bb.300, %if.end.299, %cond.end.297, %sw.bb.258, %if.end.253, %if.end.218, %if.end.194, %if.end.173, %if.end.148
  %3814 = load %struct.display*, %struct.display** @display, align 8
  %3815 = load %struct.display*, %struct.display** %odisplay, align 8
  %cmp7357 = icmp ne %struct.display* %3814, %3815
  br i1 %cmp7357, label %if.then.7359, label %if.end.7370

if.then.7359:                                     ; preds = %sw.epilog.7356
  %3816 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %3816, %struct.display** @display, align 8
  br label %for.cond.7360

for.cond.7360:                                    ; preds = %for.inc.7367, %if.then.7359
  %3817 = load %struct.display*, %struct.display** @display, align 8
  %tobool7361 = icmp ne %struct.display* %3817, null
  br i1 %tobool7361, label %for.body.7362, label %for.end.7369

for.body.7362:                                    ; preds = %for.cond.7360
  %3818 = load %struct.display*, %struct.display** @display, align 8
  %3819 = load %struct.display*, %struct.display** %odisplay, align 8
  %cmp7363 = icmp eq %struct.display* %3818, %3819
  br i1 %cmp7363, label %if.then.7365, label %if.end.7366

if.then.7365:                                     ; preds = %for.body.7362
  br label %for.end.7369

if.end.7366:                                      ; preds = %for.body.7362
  br label %for.inc.7367

for.inc.7367:                                     ; preds = %if.end.7366
  %3820 = load %struct.display*, %struct.display** @display, align 8
  %d_next7368 = getelementptr inbounds %struct.display, %struct.display* %3820, i32 0, i32 0
  %3821 = load %struct.display*, %struct.display** %d_next7368, align 8
  store %struct.display* %3821, %struct.display** @display, align 8
  br label %for.cond.7360

for.end.7369:                                     ; preds = %if.then.7365, %for.cond.7360
  br label %if.end.7370

if.end.7370:                                      ; preds = %do.end, %cond.end.12, %cond.end.28, %cond.end.45, %cond.end.62, %if.then.69, %cond.end.94, %if.then.3782, %cond.end.4541, %for.end.7369, %sw.epilog.7356
  ret void
}

declare void @WBell(%struct.win*, i32) #2

declare void @FreePaster(%struct.paster*) #2

; Function Attrs: nounwind uwtable
define i32 @FindCommnr(i8* %str) #0 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %x = alloca i32, align 4
  %m = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  store i32 0, i32* %l, align 4
  store i32 187, i32* %r, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.6, %entry
  %0 = load i32, i32* %l, align 4
  %1 = load i32, i32* %r, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %l, align 4
  %3 = load i32, i32* %r, align 4
  %add = add nsw i32 %2, %3
  %div = sdiv i32 %add, 2
  store i32 %div, i32* %m, align 4
  %4 = load i8*, i8** %str.addr, align 8
  %5 = load i32, i32* %m, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx, i32 0, i32 0
  %6 = load i8*, i8** %name, align 8
  %call = call i32 @strcmp(i8* %4, i8* %6) #8
  store i32 %call, i32* %x, align 4
  %7 = load i32, i32* %x, align 4
  %cmp1 = icmp sgt i32 %7, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %8 = load i32, i32* %m, align 4
  %add2 = add nsw i32 %8, 1
  store i32 %add2, i32* %l, align 4
  br label %if.end.6

if.else:                                          ; preds = %while.body
  %9 = load i32, i32* %x, align 4
  %cmp3 = icmp slt i32 %9, 0
  br i1 %cmp3, label %if.then.4, label %if.else.5

if.then.4:                                        ; preds = %if.else
  %10 = load i32, i32* %m, align 4
  %sub = sub nsw i32 %10, 1
  store i32 %sub, i32* %r, align 4
  br label %if.end

if.else.5:                                        ; preds = %if.else
  %11 = load i32, i32* %m, align 4
  store i32 %11, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then.4
  br label %if.end.6

if.end.6:                                         ; preds = %if.end, %if.then
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.else.5
  %12 = load i32, i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

declare void @Msg(i32, i8*, ...) #2

declare void @QueryMsg(i32, i8*, ...) #2

declare void @Dummy(i32, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @CheckArgNum(i32 %nr, i8** %args) #0 {
entry:
  %retval = alloca i32, align 4
  %nr.addr = alloca i32, align 4
  %args.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %nr, i32* %nr.addr, align 4
  store i8** %args, i8*** %args.addr, align 8
  %0 = load i32, i32* %nr.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %flags = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx, i32 0, i32 1
  %1 = load i32, i32* %flags, align 4
  %and = and i32 %1, 3
  store i32 %and, i32* %n, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %2 to i64
  %3 = load i8**, i8*** %args.addr, align 8
  %arrayidx2 = getelementptr inbounds i8*, i8** %3, i64 %idxprom1
  %4 = load i8*, i8** %arrayidx2, align 8
  %tobool = icmp ne i8* %4, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* %nr.addr, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom3
  %flags5 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx4, i32 0, i32 1
  %7 = load i32, i32* %flags5, align 4
  %and6 = and i32 %7, 32
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then, label %if.else

if.then:                                          ; preds = %for.end
  %8 = load i32, i32* %i, align 4
  %9 = load i32, i32* %n, align 4
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %if.then.8, label %if.end

if.then.8:                                        ; preds = %if.then
  %10 = load i8*, i8** @rc_name, align 8
  %11 = load i32, i32* %nr.addr, align 4
  %idxprom9 = sext i32 %11 to i64
  %arrayidx10 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom9
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx10, i32 0, i32 0
  %12 = load i8*, i8** %name, align 8
  %13 = load i32, i32* %n, align 4
  %idxprom11 = sext i32 %13 to i64
  %arrayidx12 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom11
  %14 = load i8*, i8** %arrayidx12, align 8
  %15 = load i32, i32* %n, align 4
  %cmp13 = icmp ne i32 %15, 1
  %cond = select i1 %cmp13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0)
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.345, i32 0, i32 0), i8* %10, i8* %12, i8* %14, i8* %cond)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end.238

if.else:                                          ; preds = %for.end
  %16 = load i32, i32* %nr.addr, align 4
  %idxprom14 = sext i32 %16 to i64
  %arrayidx15 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom14
  %flags16 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx15, i32 0, i32 1
  %17 = load i32, i32* %flags16, align 4
  %and17 = and i32 %17, 4
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %land.lhs.true, label %if.else.56

land.lhs.true:                                    ; preds = %if.else
  %18 = load i32, i32* %nr.addr, align 4
  %idxprom19 = sext i32 %18 to i64
  %arrayidx20 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom19
  %flags21 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx20, i32 0, i32 1
  %19 = load i32, i32* %flags21, align 4
  %and22 = and i32 %19, 8
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %land.lhs.true.24, label %if.else.56

land.lhs.true.24:                                 ; preds = %land.lhs.true
  %20 = load i32, i32* %nr.addr, align 4
  %idxprom25 = sext i32 %20 to i64
  %arrayidx26 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom25
  %flags27 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx26, i32 0, i32 1
  %21 = load i32, i32* %flags27, align 4
  %and28 = and i32 %21, 16
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %if.then.30, label %if.else.56

if.then.30:                                       ; preds = %land.lhs.true.24
  %22 = load i32, i32* %i, align 4
  %23 = load i32, i32* %n, align 4
  %cmp31 = icmp ne i32 %22, %23
  br i1 %cmp31, label %land.lhs.true.32, label %if.end.55

land.lhs.true.32:                                 ; preds = %if.then.30
  %24 = load i32, i32* %i, align 4
  %25 = load i32, i32* %n, align 4
  %add = add nsw i32 %25, 1
  %cmp33 = icmp ne i32 %24, %add
  br i1 %cmp33, label %land.lhs.true.34, label %if.end.55

land.lhs.true.34:                                 ; preds = %land.lhs.true.32
  %26 = load i32, i32* %i, align 4
  %27 = load i32, i32* %n, align 4
  %add35 = add nsw i32 %27, 2
  %cmp36 = icmp ne i32 %26, %add35
  br i1 %cmp36, label %land.lhs.true.37, label %if.end.55

land.lhs.true.37:                                 ; preds = %land.lhs.true.34
  %28 = load i32, i32* %i, align 4
  %29 = load i32, i32* %n, align 4
  %add38 = add nsw i32 %29, 3
  %cmp39 = icmp ne i32 %28, %add38
  br i1 %cmp39, label %if.then.40, label %if.end.55

if.then.40:                                       ; preds = %land.lhs.true.37
  %30 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 3), align 8
  %31 = load i8*, i8** @rc_name, align 8
  %32 = load i32, i32* %nr.addr, align 4
  %idxprom41 = sext i32 %32 to i64
  %arrayidx42 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom41
  %name43 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx42, i32 0, i32 0
  %33 = load i8*, i8** %name43, align 8
  %34 = load i32, i32* %n, align 4
  %idxprom44 = sext i32 %34 to i64
  %arrayidx45 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom44
  %35 = load i8*, i8** %arrayidx45, align 8
  %36 = load i32, i32* %n, align 4
  %add46 = add nsw i32 %36, 1
  %idxprom47 = sext i32 %add46 to i64
  %arrayidx48 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom47
  %37 = load i8*, i8** %arrayidx48, align 8
  %38 = load i32, i32* %n, align 4
  %add49 = add nsw i32 %38, 2
  %idxprom50 = sext i32 %add49 to i64
  %arrayidx51 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom50
  %39 = load i8*, i8** %arrayidx51, align 8
  %40 = load i32, i32* %n, align 4
  %add52 = add nsw i32 %40, 3
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom53
  %41 = load i8*, i8** %arrayidx54, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* %30, i8* %31, i8* %33, i8* %35, i8* %37, i8* %39, i8* %41, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.55:                                        ; preds = %land.lhs.true.37, %land.lhs.true.34, %land.lhs.true.32, %if.then.30
  br label %if.end.237

if.else.56:                                       ; preds = %land.lhs.true.24, %land.lhs.true, %if.else
  %42 = load i32, i32* %nr.addr, align 4
  %idxprom57 = sext i32 %42 to i64
  %arrayidx58 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom57
  %flags59 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx58, i32 0, i32 1
  %43 = load i32, i32* %flags59, align 4
  %and60 = and i32 %43, 4
  %tobool61 = icmp ne i32 %and60, 0
  br i1 %tobool61, label %land.lhs.true.62, label %if.else.89

land.lhs.true.62:                                 ; preds = %if.else.56
  %44 = load i32, i32* %nr.addr, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom63
  %flags65 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx64, i32 0, i32 1
  %45 = load i32, i32* %flags65, align 4
  %and66 = and i32 %45, 8
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then.68, label %if.else.89

if.then.68:                                       ; preds = %land.lhs.true.62
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* %n, align 4
  %cmp69 = icmp ne i32 %46, %47
  br i1 %cmp69, label %land.lhs.true.70, label %if.end.88

land.lhs.true.70:                                 ; preds = %if.then.68
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* %n, align 4
  %add71 = add nsw i32 %49, 1
  %cmp72 = icmp ne i32 %48, %add71
  br i1 %cmp72, label %land.lhs.true.73, label %if.end.88

land.lhs.true.73:                                 ; preds = %land.lhs.true.70
  %50 = load i32, i32* %i, align 4
  %51 = load i32, i32* %n, align 4
  %add74 = add nsw i32 %51, 2
  %cmp75 = icmp ne i32 %50, %add74
  br i1 %cmp75, label %if.then.76, label %if.end.88

if.then.76:                                       ; preds = %land.lhs.true.73
  %52 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 2), align 8
  %53 = load i8*, i8** @rc_name, align 8
  %54 = load i32, i32* %nr.addr, align 4
  %idxprom77 = sext i32 %54 to i64
  %arrayidx78 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom77
  %name79 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx78, i32 0, i32 0
  %55 = load i8*, i8** %name79, align 8
  %56 = load i32, i32* %n, align 4
  %idxprom80 = sext i32 %56 to i64
  %arrayidx81 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom80
  %57 = load i8*, i8** %arrayidx81, align 8
  %58 = load i32, i32* %n, align 4
  %add82 = add nsw i32 %58, 1
  %idxprom83 = sext i32 %add82 to i64
  %arrayidx84 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom83
  %59 = load i8*, i8** %arrayidx84, align 8
  %60 = load i32, i32* %n, align 4
  %add85 = add nsw i32 %60, 2
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* %52, i8* %53, i8* %55, i8* %57, i8* %59, i8* %61, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.88:                                        ; preds = %land.lhs.true.73, %land.lhs.true.70, %if.then.68
  br label %if.end.236

if.else.89:                                       ; preds = %land.lhs.true.62, %if.else.56
  %62 = load i32, i32* %nr.addr, align 4
  %idxprom90 = sext i32 %62 to i64
  %arrayidx91 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom90
  %flags92 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx91, i32 0, i32 1
  %63 = load i32, i32* %flags92, align 4
  %and93 = and i32 %63, 4
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %land.lhs.true.95, label %if.else.122

land.lhs.true.95:                                 ; preds = %if.else.89
  %64 = load i32, i32* %nr.addr, align 4
  %idxprom96 = sext i32 %64 to i64
  %arrayidx97 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom96
  %flags98 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx97, i32 0, i32 1
  %65 = load i32, i32* %flags98, align 4
  %and99 = and i32 %65, 16
  %tobool100 = icmp ne i32 %and99, 0
  br i1 %tobool100, label %if.then.101, label %if.else.122

if.then.101:                                      ; preds = %land.lhs.true.95
  %66 = load i32, i32* %i, align 4
  %67 = load i32, i32* %n, align 4
  %cmp102 = icmp ne i32 %66, %67
  br i1 %cmp102, label %land.lhs.true.103, label %if.end.121

land.lhs.true.103:                                ; preds = %if.then.101
  %68 = load i32, i32* %i, align 4
  %69 = load i32, i32* %n, align 4
  %add104 = add nsw i32 %69, 1
  %cmp105 = icmp ne i32 %68, %add104
  br i1 %cmp105, label %land.lhs.true.106, label %if.end.121

land.lhs.true.106:                                ; preds = %land.lhs.true.103
  %70 = load i32, i32* %i, align 4
  %71 = load i32, i32* %n, align 4
  %add107 = add nsw i32 %71, 3
  %cmp108 = icmp ne i32 %70, %add107
  br i1 %cmp108, label %if.then.109, label %if.end.121

if.then.109:                                      ; preds = %land.lhs.true.106
  %72 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 2), align 8
  %73 = load i8*, i8** @rc_name, align 8
  %74 = load i32, i32* %nr.addr, align 4
  %idxprom110 = sext i32 %74 to i64
  %arrayidx111 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom110
  %name112 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx111, i32 0, i32 0
  %75 = load i8*, i8** %name112, align 8
  %76 = load i32, i32* %n, align 4
  %idxprom113 = sext i32 %76 to i64
  %arrayidx114 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom113
  %77 = load i8*, i8** %arrayidx114, align 8
  %78 = load i32, i32* %n, align 4
  %add115 = add nsw i32 %78, 1
  %idxprom116 = sext i32 %add115 to i64
  %arrayidx117 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom116
  %79 = load i8*, i8** %arrayidx117, align 8
  %80 = load i32, i32* %n, align 4
  %add118 = add nsw i32 %80, 3
  %idxprom119 = sext i32 %add118 to i64
  %arrayidx120 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom119
  %81 = load i8*, i8** %arrayidx120, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* %72, i8* %73, i8* %75, i8* %77, i8* %79, i8* %81, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.121:                                       ; preds = %land.lhs.true.106, %land.lhs.true.103, %if.then.101
  br label %if.end.235

if.else.122:                                      ; preds = %land.lhs.true.95, %if.else.89
  %82 = load i32, i32* %nr.addr, align 4
  %idxprom123 = sext i32 %82 to i64
  %arrayidx124 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom123
  %flags125 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx124, i32 0, i32 1
  %83 = load i32, i32* %flags125, align 4
  %and126 = and i32 %83, 8
  %tobool127 = icmp ne i32 %and126, 0
  br i1 %tobool127, label %land.lhs.true.128, label %if.else.155

land.lhs.true.128:                                ; preds = %if.else.122
  %84 = load i32, i32* %nr.addr, align 4
  %idxprom129 = sext i32 %84 to i64
  %arrayidx130 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom129
  %flags131 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx130, i32 0, i32 1
  %85 = load i32, i32* %flags131, align 4
  %and132 = and i32 %85, 16
  %tobool133 = icmp ne i32 %and132, 0
  br i1 %tobool133, label %if.then.134, label %if.else.155

if.then.134:                                      ; preds = %land.lhs.true.128
  %86 = load i32, i32* %i, align 4
  %87 = load i32, i32* %n, align 4
  %cmp135 = icmp ne i32 %86, %87
  br i1 %cmp135, label %land.lhs.true.136, label %if.end.154

land.lhs.true.136:                                ; preds = %if.then.134
  %88 = load i32, i32* %i, align 4
  %89 = load i32, i32* %n, align 4
  %add137 = add nsw i32 %89, 2
  %cmp138 = icmp ne i32 %88, %add137
  br i1 %cmp138, label %land.lhs.true.139, label %if.end.154

land.lhs.true.139:                                ; preds = %land.lhs.true.136
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n, align 4
  %add140 = add nsw i32 %91, 3
  %cmp141 = icmp ne i32 %90, %add140
  br i1 %cmp141, label %if.then.142, label %if.end.154

if.then.142:                                      ; preds = %land.lhs.true.139
  %92 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 2), align 8
  %93 = load i8*, i8** @rc_name, align 8
  %94 = load i32, i32* %nr.addr, align 4
  %idxprom143 = sext i32 %94 to i64
  %arrayidx144 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom143
  %name145 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx144, i32 0, i32 0
  %95 = load i8*, i8** %name145, align 8
  %96 = load i32, i32* %n, align 4
  %idxprom146 = sext i32 %96 to i64
  %arrayidx147 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom146
  %97 = load i8*, i8** %arrayidx147, align 8
  %98 = load i32, i32* %n, align 4
  %add148 = add nsw i32 %98, 2
  %idxprom149 = sext i32 %add148 to i64
  %arrayidx150 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom149
  %99 = load i8*, i8** %arrayidx150, align 8
  %100 = load i32, i32* %n, align 4
  %add151 = add nsw i32 %100, 3
  %idxprom152 = sext i32 %add151 to i64
  %arrayidx153 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom152
  %101 = load i8*, i8** %arrayidx153, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* %92, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.154:                                       ; preds = %land.lhs.true.139, %land.lhs.true.136, %if.then.134
  br label %if.end.234

if.else.155:                                      ; preds = %land.lhs.true.128, %if.else.122
  %102 = load i32, i32* %nr.addr, align 4
  %idxprom156 = sext i32 %102 to i64
  %arrayidx157 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom156
  %flags158 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx157, i32 0, i32 1
  %103 = load i32, i32* %flags158, align 4
  %and159 = and i32 %103, 4
  %tobool160 = icmp ne i32 %and159, 0
  br i1 %tobool160, label %if.then.161, label %if.else.178

if.then.161:                                      ; preds = %if.else.155
  %104 = load i32, i32* %i, align 4
  %105 = load i32, i32* %n, align 4
  %cmp162 = icmp ne i32 %104, %105
  br i1 %cmp162, label %land.lhs.true.163, label %if.end.177

land.lhs.true.163:                                ; preds = %if.then.161
  %106 = load i32, i32* %i, align 4
  %107 = load i32, i32* %n, align 4
  %add164 = add nsw i32 %107, 1
  %cmp165 = icmp ne i32 %106, %add164
  br i1 %cmp165, label %if.then.166, label %if.end.177

if.then.166:                                      ; preds = %land.lhs.true.163
  %108 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 1), align 8
  %109 = load i8*, i8** @rc_name, align 8
  %110 = load i32, i32* %nr.addr, align 4
  %idxprom167 = sext i32 %110 to i64
  %arrayidx168 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom167
  %name169 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx168, i32 0, i32 0
  %111 = load i8*, i8** %name169, align 8
  %112 = load i32, i32* %n, align 4
  %idxprom170 = sext i32 %112 to i64
  %arrayidx171 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom170
  %113 = load i8*, i8** %arrayidx171, align 8
  %114 = load i32, i32* %n, align 4
  %add172 = add nsw i32 %114, 1
  %idxprom173 = sext i32 %add172 to i64
  %arrayidx174 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom173
  %115 = load i8*, i8** %arrayidx174, align 8
  %116 = load i32, i32* %n, align 4
  %cmp175 = icmp ne i32 %116, 0
  %cond176 = select i1 %cmp175, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0)
  call void (i32, i8*, ...) @Msg(i32 0, i8* %108, i8* %109, i8* %111, i8* %113, i8* %115, i8* %cond176)
  store i32 -1, i32* %retval
  br label %return

if.end.177:                                       ; preds = %land.lhs.true.163, %if.then.161
  br label %if.end.233

if.else.178:                                      ; preds = %if.else.155
  %117 = load i32, i32* %nr.addr, align 4
  %idxprom179 = sext i32 %117 to i64
  %arrayidx180 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom179
  %flags181 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx180, i32 0, i32 1
  %118 = load i32, i32* %flags181, align 4
  %and182 = and i32 %118, 8
  %tobool183 = icmp ne i32 %and182, 0
  br i1 %tobool183, label %if.then.184, label %if.else.199

if.then.184:                                      ; preds = %if.else.178
  %119 = load i32, i32* %i, align 4
  %120 = load i32, i32* %n, align 4
  %cmp185 = icmp ne i32 %119, %120
  br i1 %cmp185, label %land.lhs.true.186, label %if.end.198

land.lhs.true.186:                                ; preds = %if.then.184
  %121 = load i32, i32* %i, align 4
  %122 = load i32, i32* %n, align 4
  %add187 = add nsw i32 %122, 2
  %cmp188 = icmp ne i32 %121, %add187
  br i1 %cmp188, label %if.then.189, label %if.end.198

if.then.189:                                      ; preds = %land.lhs.true.186
  %123 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 1), align 8
  %124 = load i8*, i8** @rc_name, align 8
  %125 = load i32, i32* %nr.addr, align 4
  %idxprom190 = sext i32 %125 to i64
  %arrayidx191 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom190
  %name192 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx191, i32 0, i32 0
  %126 = load i8*, i8** %name192, align 8
  %127 = load i32, i32* %n, align 4
  %idxprom193 = sext i32 %127 to i64
  %arrayidx194 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom193
  %128 = load i8*, i8** %arrayidx194, align 8
  %129 = load i32, i32* %n, align 4
  %add195 = add nsw i32 %129, 2
  %idxprom196 = sext i32 %add195 to i64
  %arrayidx197 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom196
  %130 = load i8*, i8** %arrayidx197, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* %123, i8* %124, i8* %126, i8* %128, i8* %130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.198:                                       ; preds = %land.lhs.true.186, %if.then.184
  br label %if.end.232

if.else.199:                                      ; preds = %if.else.178
  %131 = load i32, i32* %nr.addr, align 4
  %idxprom200 = sext i32 %131 to i64
  %arrayidx201 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom200
  %flags202 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx201, i32 0, i32 1
  %132 = load i32, i32* %flags202, align 4
  %and203 = and i32 %132, 16
  %tobool204 = icmp ne i32 %and203, 0
  br i1 %tobool204, label %if.then.205, label %if.else.220

if.then.205:                                      ; preds = %if.else.199
  %133 = load i32, i32* %i, align 4
  %134 = load i32, i32* %n, align 4
  %cmp206 = icmp ne i32 %133, %134
  br i1 %cmp206, label %land.lhs.true.207, label %if.end.219

land.lhs.true.207:                                ; preds = %if.then.205
  %135 = load i32, i32* %i, align 4
  %136 = load i32, i32* %n, align 4
  %add208 = add nsw i32 %136, 3
  %cmp209 = icmp ne i32 %135, %add208
  br i1 %cmp209, label %if.then.210, label %if.end.219

if.then.210:                                      ; preds = %land.lhs.true.207
  %137 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 1), align 8
  %138 = load i8*, i8** @rc_name, align 8
  %139 = load i32, i32* %nr.addr, align 4
  %idxprom211 = sext i32 %139 to i64
  %arrayidx212 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom211
  %name213 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx212, i32 0, i32 0
  %140 = load i8*, i8** %name213, align 8
  %141 = load i32, i32* %n, align 4
  %idxprom214 = sext i32 %141 to i64
  %arrayidx215 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom214
  %142 = load i8*, i8** %arrayidx215, align 8
  %143 = load i32, i32* %n, align 4
  %add216 = add nsw i32 %143, 3
  %idxprom217 = sext i32 %add216 to i64
  %arrayidx218 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom217
  %144 = load i8*, i8** %arrayidx218, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* %137, i8* %138, i8* %140, i8* %142, i8* %144, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0))
  store i32 -1, i32* %retval
  br label %return

if.end.219:                                       ; preds = %land.lhs.true.207, %if.then.205
  br label %if.end.231

if.else.220:                                      ; preds = %if.else.199
  %145 = load i32, i32* %i, align 4
  %146 = load i32, i32* %n, align 4
  %cmp221 = icmp ne i32 %145, %146
  br i1 %cmp221, label %if.then.222, label %if.end.230

if.then.222:                                      ; preds = %if.else.220
  %147 = load i8*, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @CheckArgNum.orformat, i32 0, i64 0), align 8
  %148 = load i8*, i8** @rc_name, align 8
  %149 = load i32, i32* %nr.addr, align 4
  %idxprom223 = sext i32 %149 to i64
  %arrayidx224 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom223
  %name225 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx224, i32 0, i32 0
  %150 = load i8*, i8** %name225, align 8
  %151 = load i32, i32* %n, align 4
  %idxprom226 = sext i32 %151 to i64
  %arrayidx227 = getelementptr inbounds [6 x i8*], [6 x i8*]* @CheckArgNum.argss, i32 0, i64 %idxprom226
  %152 = load i8*, i8** %arrayidx227, align 8
  %153 = load i32, i32* %n, align 4
  %cmp228 = icmp ne i32 %153, 1
  %cond229 = select i1 %cmp228, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0)
  call void (i32, i8*, ...) @Msg(i32 0, i8* %147, i8* %148, i8* %150, i8* %152, i8* %cond229)
  store i32 -1, i32* %retval
  br label %return

if.end.230:                                       ; preds = %if.else.220
  br label %if.end.231

if.end.231:                                       ; preds = %if.end.230, %if.end.219
  br label %if.end.232

if.end.232:                                       ; preds = %if.end.231, %if.end.198
  br label %if.end.233

if.end.233:                                       ; preds = %if.end.232, %if.end.177
  br label %if.end.234

if.end.234:                                       ; preds = %if.end.233, %if.end.154
  br label %if.end.235

if.end.235:                                       ; preds = %if.end.234, %if.end.121
  br label %if.end.236

if.end.236:                                       ; preds = %if.end.235, %if.end.88
  br label %if.end.237

if.end.237:                                       ; preds = %if.end.236, %if.end.55
  br label %if.end.238

if.end.238:                                       ; preds = %if.end.237, %if.end
  %154 = load i32, i32* %i, align 4
  store i32 %154, i32* %retval
  br label %return

return:                                           ; preds = %if.end.238, %if.then.222, %if.then.210, %if.then.189, %if.then.166, %if.then.142, %if.then.109, %if.then.76, %if.then.40, %if.then.8
  %155 = load i32, i32* %retval
  ret i32 %155
}

declare i32 @AclCheckPermCmd(%struct.acluser*, i32, %struct.comm*) #2

; Function Attrs: nounwind uwtable
define internal void @InputSelect() #0 {
entry:
  call void @Input(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.402, i32 0, i32 0), i32 20, i32 0, void (i8*, i32, i8*)* @SelectFin, i8* null, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetForeWindow(%struct.win* %wi) #0 {
entry:
  %wi.addr = alloca %struct.win*, align 8
  %p = alloca %struct.win*, align 8
  store %struct.win* %wi, %struct.win** %wi.addr, align 8
  %0 = load %struct.display*, %struct.display** @display, align 8
  %cmp = icmp eq %struct.display* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.win*, %struct.win** %wi.addr, align 8
  store %struct.win* %1, %struct.win** @fore, align 8
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %2, i32 0, i32 4
  %3 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %3, i32 0, i32 9
  %4 = load %struct.layer*, %struct.layer** %c_layer, align 8
  %l_bottom = getelementptr inbounds %struct.layer, %struct.layer* %4, i32 0, i32 9
  %5 = load %struct.layer*, %struct.layer** %l_bottom, align 8
  %l_data = getelementptr inbounds %struct.layer, %struct.layer* %5, i32 0, i32 7
  %6 = load i8*, i8** %l_data, align 8
  %7 = bitcast i8* %6 to %struct.win*
  store %struct.win* %7, %struct.win** %p, align 8
  %8 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv1 = getelementptr inbounds %struct.display, %struct.display* %8, i32 0, i32 4
  %9 = load %struct.canvas*, %struct.canvas** %d_forecv1, align 8
  %10 = load %struct.win*, %struct.win** %wi.addr, align 8
  call void @SetCanvasWindow(%struct.canvas* %9, %struct.win* %10)
  %11 = load %struct.win*, %struct.win** %p, align 8
  %tobool = icmp ne %struct.win* %11, null
  br i1 %tobool, label %if.then.2, label %if.end.3

if.then.2:                                        ; preds = %if.end
  %12 = load %struct.win*, %struct.win** %p, align 8
  call void @WindowChanged(%struct.win* %12, i32 117)
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.2, %if.end
  %13 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool4 = icmp ne %struct.win* %13, null
  br i1 %tobool4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %if.end.3
  %14 = load %struct.win*, %struct.win** %wi.addr, align 8
  call void @WindowChanged(%struct.win* %14, i32 117)
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %if.end.3
  %15 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv7 = getelementptr inbounds %struct.display, %struct.display* %15, i32 0, i32 4
  %16 = load %struct.canvas*, %struct.canvas** %d_forecv7, align 8
  %c_layer8 = getelementptr inbounds %struct.canvas, %struct.canvas* %16, i32 0, i32 9
  %17 = load %struct.layer*, %struct.layer** %c_layer8, align 8
  store %struct.layer* %17, %struct.layer** @flayer, align 8
  br label %return

return:                                           ; preds = %if.end.6, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @Activate(i32 %norefresh) #0 {
entry:
  %norefresh.addr = alloca i32, align 4
  store i32 %norefresh, i32* %norefresh.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load %struct.display*, %struct.display** @display, align 8
  %cmp = icmp eq %struct.display* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.end
  br label %return

if.end:                                           ; preds = %do.end
  %1 = load %struct.display*, %struct.display** @display, align 8
  %d_status = getelementptr inbounds %struct.display, %struct.display* %1, i32 0, i32 43
  %2 = load i32, i32* %d_status, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0))
  call void @RemoveStatus()
  br label %if.end.2

if.end.2:                                         ; preds = %if.then.1, %if.end
  %3 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %3, i32 0, i32 4
  %4 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %4, i32 0, i32 9
  %5 = load %struct.layer*, %struct.layer** %c_layer, align 8
  %call = call i32 @MayResizeLayer(%struct.layer* %5)
  %tobool3 = icmp ne i32 %call, 0
  br i1 %tobool3, label %if.then.4, label %if.end.13

if.then.4:                                        ; preds = %if.end.2
  %6 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv5 = getelementptr inbounds %struct.display, %struct.display* %6, i32 0, i32 4
  %7 = load %struct.canvas*, %struct.canvas** %d_forecv5, align 8
  %c_layer6 = getelementptr inbounds %struct.canvas, %struct.canvas* %7, i32 0, i32 9
  %8 = load %struct.layer*, %struct.layer** %c_layer6, align 8
  %9 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv7 = getelementptr inbounds %struct.display, %struct.display* %9, i32 0, i32 4
  %10 = load %struct.canvas*, %struct.canvas** %d_forecv7, align 8
  %c_xe = getelementptr inbounds %struct.canvas, %struct.canvas* %10, i32 0, i32 15
  %11 = load i32, i32* %c_xe, align 4
  %12 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv8 = getelementptr inbounds %struct.display, %struct.display* %12, i32 0, i32 4
  %13 = load %struct.canvas*, %struct.canvas** %d_forecv8, align 8
  %c_xs = getelementptr inbounds %struct.canvas, %struct.canvas* %13, i32 0, i32 14
  %14 = load i32, i32* %c_xs, align 4
  %sub = sub nsw i32 %11, %14
  %add = add nsw i32 %sub, 1
  %15 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv9 = getelementptr inbounds %struct.display, %struct.display* %15, i32 0, i32 4
  %16 = load %struct.canvas*, %struct.canvas** %d_forecv9, align 8
  %c_ye = getelementptr inbounds %struct.canvas, %struct.canvas* %16, i32 0, i32 17
  %17 = load i32, i32* %c_ye, align 4
  %18 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv10 = getelementptr inbounds %struct.display, %struct.display* %18, i32 0, i32 4
  %19 = load %struct.canvas*, %struct.canvas** %d_forecv10, align 8
  %c_ys = getelementptr inbounds %struct.canvas, %struct.canvas* %19, i32 0, i32 16
  %20 = load i32, i32* %c_ys, align 4
  %sub11 = sub nsw i32 %17, %20
  %add12 = add nsw i32 %sub11, 1
  %21 = load %struct.display*, %struct.display** @display, align 8
  call void @ResizeLayer(%struct.layer* %8, i32 %add, i32 %add12, %struct.display* %21)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.4, %if.end.2
  %22 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %22, i32 0, i32 10
  %23 = load %struct.win*, %struct.win** %d_fore, align 8
  store %struct.win* %23, %struct.win** @fore, align 8
  %24 = load %struct.win*, %struct.win** @fore, align 8
  %tobool14 = icmp ne %struct.win* %24, null
  br i1 %tobool14, label %if.then.15, label %if.end.20

if.then.15:                                       ; preds = %if.end.13
  %25 = load %struct.win*, %struct.win** @fore, align 8
  %w_monitor = getelementptr inbounds %struct.win, %struct.win* %25, i32 0, i32 70
  %26 = load i32, i32* %w_monitor, align 4
  %cmp16 = icmp ne i32 %26, 0
  br i1 %cmp16, label %if.then.17, label %if.end.19

if.then.17:                                       ; preds = %if.then.15
  %27 = load %struct.win*, %struct.win** @fore, align 8
  %w_monitor18 = getelementptr inbounds %struct.win, %struct.win* %27, i32 0, i32 70
  store i32 1, i32* %w_monitor18, align 4
  br label %if.end.19

if.end.19:                                        ; preds = %if.then.17, %if.then.15
  %28 = load %struct.win*, %struct.win** @fore, align 8
  %w_bell = getelementptr inbounds %struct.win, %struct.win* %28, i32 0, i32 66
  store i32 0, i32* %w_bell, align 4
  %29 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %29, i32 102)
  br label %if.end.20

if.end.20:                                        ; preds = %if.end.19, %if.end.13
  %30 = load i32, i32* %norefresh.addr, align 4
  %31 = load i32, i32* @all_norefresh, align 4
  %add21 = add nsw i32 %30, %31
  call void @Redisplay(i32 %add21)
  br label %return

return:                                           ; preds = %if.end.20, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ParseWinNum(%struct.action* %act, i32* %var) #0 {
entry:
  %retval = alloca i32, align 4
  %act.addr = alloca %struct.action*, align 8
  %var.addr = alloca i32*, align 8
  %args = alloca i8**, align 8
  %i = alloca i32, align 4
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i32* %var, i32** %var.addr, align 8
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %args1 = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 1
  %1 = load i8**, i8*** %args1, align 8
  store i8** %1, i8*** %args, align 8
  store i32 0, i32* %i, align 4
  %2 = load i8**, i8*** %args, align 8
  %3 = load i8*, i8** %2, align 8
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8**, i8*** %args, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %4, i64 1
  %5 = load i8*, i8** %arrayidx, align 8
  %tobool = icmp ne i8* %5, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load i8*, i8** @rc_name, align 8
  %7 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %7, i32 0, i32 0
  %8 = load i32, i32* %nr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx2 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx2, i32 0, i32 0
  %9 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.321, i32 0, i32 0), i8* %6, i8* %9)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8**, i8*** %args, align 8
  %11 = load i8*, i8** %10, align 8
  %call = call i32 @WindowByNoN(i8* %11)
  store i32 %call, i32* %i, align 4
  %12 = load i32, i32* %i, align 4
  %cmp3 = icmp slt i32 %12, 0
  br i1 %cmp3, label %if.then.4, label %if.end.9

if.then.4:                                        ; preds = %if.end
  %13 = load i8*, i8** @rc_name, align 8
  %14 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr5 = getelementptr inbounds %struct.action, %struct.action* %14, i32 0, i32 0
  %15 = load i32, i32* %nr5, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom6
  %name8 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx7, i32 0, i32 0
  %16 = load i8*, i8** %name8, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.359, i32 0, i32 0), i8* %13, i8* %16)
  store i32 -1, i32* %retval
  br label %return

if.end.9:                                         ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %if.end.9
  br label %do.end

do.end:                                           ; preds = %do.body
  %17 = load i32, i32* %i, align 4
  %18 = load i32*, i32** %var.addr, align 8
  store i32 %17, i32* %18, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.4, %if.then
  %19 = load i32, i32* %retval
  ret i32 %19
}

; Function Attrs: nounwind uwtable
define void @SwitchWindow(i32 %n) #0 {
entry:
  %n.addr = alloca i32, align 4
  %p = alloca %struct.win*, align 8
  store i32 %n, i32* %n.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load i32, i32* %n.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %1 = load i32, i32* %n.addr, align 4
  %2 = load i32, i32* @maxwin, align 4
  %cmp1 = icmp sge i32 %1, %2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %do.end
  call void @ShowWindows(i32 -1)
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %n.addr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx = getelementptr inbounds %struct.win*, %struct.win** %4, i64 %idxprom
  %5 = load %struct.win*, %struct.win** %arrayidx, align 8
  store %struct.win* %5, %struct.win** %p, align 8
  %cmp2 = icmp eq %struct.win* %5, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  %6 = load i32, i32* %n.addr, align 4
  call void @ShowWindows(i32 %6)
  br label %return

if.end.4:                                         ; preds = %if.end
  %7 = load %struct.display*, %struct.display** @display, align 8
  %cmp5 = icmp eq %struct.display* %7, null
  br i1 %cmp5, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.4
  %8 = load %struct.win*, %struct.win** %p, align 8
  store %struct.win* %8, %struct.win** @fore, align 8
  br label %return

if.end.7:                                         ; preds = %if.end.4
  %9 = load %struct.win*, %struct.win** %p, align 8
  %10 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %10, i32 0, i32 10
  %11 = load %struct.win*, %struct.win** %d_fore, align 8
  %cmp8 = icmp eq %struct.win* %9, %11
  br i1 %cmp8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %if.end.7
  %12 = load i32, i32* %n.addr, align 4
  %13 = load %struct.win*, %struct.win** %p, align 8
  %w_title = getelementptr inbounds %struct.win, %struct.win* %13, i32 0, i32 21
  %14 = load i8*, i8** %w_title, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.324, i32 0, i32 0), i32 %12, i8* %14)
  br label %return

if.end.10:                                        ; preds = %if.end.7
  %15 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %15, i32 0, i32 1
  %16 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %17 = load %struct.win*, %struct.win** %p, align 8
  %call = call i32 @AclCheckPermWin(%struct.acluser* %16, i32 2, %struct.win* %17)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.10
  %18 = load %struct.win*, %struct.win** %p, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %18, i32 0, i32 9
  %19 = load i32, i32* %w_number, align 4
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.325, i32 0, i32 0), i32 %19)
  br label %return

if.end.12:                                        ; preds = %if.end.10
  %20 = load %struct.win*, %struct.win** %p, align 8
  call void @SetForeWindow(%struct.win* %20)
  %21 = load %struct.win*, %struct.win** @fore, align 8
  %w_norefresh = getelementptr inbounds %struct.win, %struct.win* %21, i32 0, i32 74
  %22 = load i8, i8* %w_norefresh, align 1
  %conv = sext i8 %22 to i32
  call void @Activate(i32 %conv)
  br label %return

return:                                           ; preds = %if.end.12, %if.then.11, %if.then.9, %if.then.6, %if.then.3, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ParseOnOff(%struct.action* %act, i32* %var) #0 {
entry:
  %retval = alloca i32, align 4
  %act.addr = alloca %struct.action*, align 8
  %var.addr = alloca i32*, align 8
  %num = alloca i32, align 4
  %args = alloca i8**, align 8
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i32* %var, i32** %var.addr, align 8
  store i32 -1, i32* %num, align 4
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %args1 = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 1
  %1 = load i8**, i8*** %args1, align 8
  store i8** %1, i8*** %args, align 8
  %2 = load i8**, i8*** %args, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 1
  %3 = load i8*, i8** %arrayidx, align 8
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %if.then, label %if.end.10

if.then:                                          ; preds = %entry
  %4 = load i8**, i8*** %args, align 8
  %arrayidx2 = getelementptr inbounds i8*, i8** %4, i64 0
  %5 = load i8*, i8** %arrayidx2, align 8
  %call = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #8
  %cmp3 = icmp eq i32 %call, 0
  br i1 %cmp3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.then
  store i32 1, i32* %num, align 4
  br label %if.end.9

if.else:                                          ; preds = %if.then
  %6 = load i8**, i8*** %args, align 8
  %arrayidx5 = getelementptr inbounds i8*, i8** %6, i64 0
  %7 = load i8*, i8** %arrayidx5, align 8
  %call6 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0)) #8
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then.8, label %if.end

if.then.8:                                        ; preds = %if.else
  store i32 0, i32* %num, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.8, %if.else
  br label %if.end.9

if.end.9:                                         ; preds = %if.end, %if.then.4
  br label %if.end.10

if.end.10:                                        ; preds = %if.end.9, %entry
  %8 = load i32, i32* %num, align 4
  %cmp11 = icmp slt i32 %8, 0
  br i1 %cmp11, label %if.then.12, label %if.end.14

if.then.12:                                       ; preds = %if.end.10
  %9 = load i8*, i8** @rc_name, align 8
  %10 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %10, i32 0, i32 0
  %11 = load i32, i32* %nr, align 4
  %idxprom = sext i32 %11 to i64
  %arrayidx13 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx13, i32 0, i32 0
  %12 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.357, i32 0, i32 0), i8* %9, i8* %12)
  store i32 -1, i32* %retval
  br label %return

if.end.14:                                        ; preds = %if.end.10
  %13 = load i32, i32* %num, align 4
  %14 = load i32*, i32** %var.addr, align 8
  store i32 %13, i32* %14, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.14, %if.then.12
  %15 = load i32, i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define i32 @ParseNum(%struct.action* %act, i32* %var) #0 {
entry:
  %retval = alloca i32, align 4
  %act.addr = alloca %struct.action*, align 8
  %var.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  %args = alloca i8**, align 8
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i32* %var, i32** %var.addr, align 8
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %args1 = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 1
  %1 = load i8**, i8*** %args1, align 8
  store i8** %1, i8*** %args, align 8
  %2 = load i8**, i8*** %args, align 8
  %3 = load i8*, i8** %2, align 8
  store i8* %3, i8** %p, align 8
  %4 = load i8*, i8** %p, align 8
  %cmp = icmp eq i8* %4, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %if.then, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %7 = load i8**, i8*** %args, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %7, i64 1
  %8 = load i8*, i8** %arrayidx, align 8
  %tobool = icmp ne i8* %8, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.4, %lor.lhs.false, %entry
  %9 = load i8*, i8** @rc_name, align 8
  %10 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %10, i32 0, i32 0
  %11 = load i32, i32* %nr, align 4
  %idxprom = sext i32 %11 to i64
  %arrayidx5 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx5, i32 0, i32 0
  %12 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.322, i32 0, i32 0), i8* %9, i8* %12)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.19, %if.end
  %13 = load i8*, i8** %p, align 8
  %14 = load i8, i8* %13, align 1
  %tobool6 = icmp ne i8 %14, 0
  br i1 %tobool6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %15 = load i8*, i8** %p, align 8
  %16 = load i8, i8* %15, align 1
  %conv7 = sext i8 %16 to i32
  %cmp8 = icmp sge i32 %conv7, 48
  br i1 %cmp8, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body
  %17 = load i8*, i8** %p, align 8
  %18 = load i8, i8* %17, align 1
  %conv10 = sext i8 %18 to i32
  %cmp11 = icmp sle i32 %conv10, 57
  br i1 %cmp11, label %if.then.13, label %if.else

if.then.13:                                       ; preds = %land.lhs.true
  %19 = load i32, i32* %i, align 4
  %mul = mul nsw i32 10, %19
  %20 = load i8*, i8** %p, align 8
  %21 = load i8, i8* %20, align 1
  %conv14 = sext i8 %21 to i32
  %sub = sub nsw i32 %conv14, 48
  %add = add nsw i32 %mul, %sub
  store i32 %add, i32* %i, align 4
  br label %if.end.19

if.else:                                          ; preds = %land.lhs.true, %while.body
  %22 = load i8*, i8** @rc_name, align 8
  %23 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr15 = getelementptr inbounds %struct.action, %struct.action* %23, i32 0, i32 0
  %24 = load i32, i32* %nr15, align 4
  %idxprom16 = sext i32 %24 to i64
  %arrayidx17 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom16
  %name18 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx17, i32 0, i32 0
  %25 = load i8*, i8** %name18, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.323, i32 0, i32 0), i8* %22, i8* %25)
  store i32 -1, i32* %retval
  br label %return

if.end.19:                                        ; preds = %if.then.13
  %26 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %26, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body

do.body:                                          ; preds = %while.end
  br label %do.end

do.end:                                           ; preds = %do.body
  %27 = load i32, i32* %i, align 4
  %28 = load i32*, i32** %var.addr, align 8
  store i32 %27, i32* %28, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.else, %if.then
  %29 = load i32, i32* %retval
  ret i32 %29
}

declare void @WriteFile(%struct.acluser*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @ParseSwitch(%struct.action* %act, i32* %var) #0 {
entry:
  %retval = alloca i32, align 4
  %act.addr = alloca %struct.action*, align 8
  %var.addr = alloca i32*, align 8
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i32* %var, i32** %var.addr, align 8
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %args = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 1
  %1 = load i8**, i8*** %args, align 8
  %2 = load i8*, i8** %1, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32*, i32** %var.addr, align 8
  %4 = load i32, i32* %3, align 4
  %xor = xor i32 %4, 1
  store i32 %xor, i32* %3, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct.action*, %struct.action** %act.addr, align 8
  %6 = load i32*, i32** %var.addr, align 8
  %call = call i32 @ParseOnOff(%struct.action* %5, i32* %6)
  store i32 %call, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal void @LogToggle(i32 %on) #0 {
entry:
  %on.addr = alloca i32, align 4
  %buf = alloca [1024 x i8], align 16
  store i32 %on, i32* %on.addr, align 4
  %0 = load %struct.win*, %struct.win** @fore, align 8
  %w_log = getelementptr inbounds %struct.win, %struct.win* %0, i32 0, i32 68
  %1 = load %struct.logfile*, %struct.logfile** %w_log, align 8
  %cmp = icmp ne %struct.logfile* %1, null
  %conv = zext i1 %cmp to i32
  %2 = load i32, i32* %on.addr, align 4
  %cmp1 = icmp eq i32 %conv, %2
  br i1 %cmp1, label %if.then, label %if.end.6

if.then:                                          ; preds = %entry
  %3 = load %struct.display*, %struct.display** @display, align 8
  %tobool = icmp ne %struct.display* %3, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %4 = load i8*, i8** @rc_name, align 8
  %5 = load i8, i8* %4, align 1
  %tobool3 = icmp ne i8 %5, 0
  br i1 %tobool3, label %if.end, label %if.then.4

if.then.4:                                        ; preds = %land.lhs.true
  %6 = load i32, i32* %on.addr, align 4
  %tobool5 = icmp ne i32 %6, 0
  %cond = select i1 %tobool5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.366, i32 0, i32 0)
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.364, i32 0, i32 0), i8* %cond)
  br label %if.end

if.end:                                           ; preds = %if.then.4, %land.lhs.true, %if.then
  br label %return

if.end.6:                                         ; preds = %entry
  %7 = load %struct.win*, %struct.win** @fore, align 8
  %w_log7 = getelementptr inbounds %struct.win, %struct.win* %7, i32 0, i32 68
  %8 = load %struct.logfile*, %struct.logfile** %w_log7, align 8
  %cmp8 = icmp ne %struct.logfile* %8, null
  br i1 %cmp8, label %if.then.10, label %if.end.14

if.then.10:                                       ; preds = %if.end.6
  %9 = load %struct.win*, %struct.win** @fore, align 8
  %w_log11 = getelementptr inbounds %struct.win, %struct.win* %9, i32 0, i32 68
  %10 = load %struct.logfile*, %struct.logfile** %w_log11, align 8
  %name = getelementptr inbounds %struct.logfile, %struct.logfile* %10, i32 0, i32 2
  %11 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.367, i32 0, i32 0), i8* %11)
  %12 = load %struct.win*, %struct.win** @fore, align 8
  %w_log12 = getelementptr inbounds %struct.win, %struct.win* %12, i32 0, i32 68
  %13 = load %struct.logfile*, %struct.logfile** %w_log12, align 8
  %call = call i32 @logfclose(%struct.logfile* %13)
  %14 = load %struct.win*, %struct.win** @fore, align 8
  %w_log13 = getelementptr inbounds %struct.win, %struct.win* %14, i32 0, i32 68
  store %struct.logfile* null, %struct.logfile** %w_log13, align 8
  %15 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %15, i32 102)
  br label %return

if.end.14:                                        ; preds = %if.end.6
  %16 = load %struct.win*, %struct.win** @fore, align 8
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %call15 = call i32 @DoStartLog(%struct.win* %16, i8* %arraydecay, i32 1024)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then.17, label %if.end.20

if.then.17:                                       ; preds = %if.end.14
  %call18 = call i32* @__errno_location() #9
  %17 = load i32, i32* %call18, align 4
  %arraydecay19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  call void (i32, i8*, ...) @Msg(i32 %17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.113, i32 0, i32 0), i8* %arraydecay19)
  br label %return

if.end.20:                                        ; preds = %if.end.14
  %18 = load %struct.win*, %struct.win** @fore, align 8
  %w_log21 = getelementptr inbounds %struct.win, %struct.win* %18, i32 0, i32 68
  %19 = load %struct.logfile*, %struct.logfile** %w_log21, align 8
  %fp = getelementptr inbounds %struct.logfile, %struct.logfile* %19, i32 0, i32 1
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call22 = call i64 @ftell(%struct._IO_FILE* %20)
  %cmp23 = icmp eq i64 %call22, 0
  br i1 %cmp23, label %if.then.25, label %if.else

if.then.25:                                       ; preds = %if.end.20
  %21 = load %struct.win*, %struct.win** @fore, align 8
  %w_log26 = getelementptr inbounds %struct.win, %struct.win* %21, i32 0, i32 68
  %22 = load %struct.logfile*, %struct.logfile** %w_log26, align 8
  %name27 = getelementptr inbounds %struct.logfile, %struct.logfile* %22, i32 0, i32 2
  %23 = load i8*, i8** %name27, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.368, i32 0, i32 0), i8* %23)
  br label %if.end.30

if.else:                                          ; preds = %if.end.20
  %24 = load %struct.win*, %struct.win** @fore, align 8
  %w_log28 = getelementptr inbounds %struct.win, %struct.win* %24, i32 0, i32 68
  %25 = load %struct.logfile*, %struct.logfile** %w_log28, align 8
  %name29 = getelementptr inbounds %struct.logfile, %struct.logfile* %25, i32 0, i32 2
  %26 = load i8*, i8** %name29, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.369, i32 0, i32 0), i8* %26)
  br label %if.end.30

if.end.30:                                        ; preds = %if.else, %if.then.25
  %27 = load %struct.win*, %struct.win** @fore, align 8
  call void @WindowChanged(%struct.win* %27, i32 102)
  br label %return

return:                                           ; preds = %if.end.30, %if.then.17, %if.then.10, %if.end
  ret void
}

declare void @Detach(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @MoreWindows() #0 {
entry:
  %retval = alloca i32, align 4
  %m = alloca i8*, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.362, i32 0, i32 0), i8** %m, align 8
  %0 = load %struct.win*, %struct.win** @windows, align 8
  %tobool = icmp ne %struct.win* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.win*, %struct.win** @fore, align 8
  %cmp = icmp eq %struct.win* %1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load %struct.win*, %struct.win** @windows, align 8
  %w_next = getelementptr inbounds %struct.win, %struct.win* %2, i32 0, i32 0
  %3 = load %struct.win*, %struct.win** %w_next, align 8
  %tobool1 = icmp ne %struct.win* %3, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false, %entry
  %4 = load %struct.win*, %struct.win** @fore, align 8
  %cmp2 = icmp eq %struct.win* %4, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %if.end
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.363, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end.4:                                         ; preds = %if.end
  %5 = load i8*, i8** %m, align 8
  %6 = load %struct.win*, %struct.win** @fore, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %6, i32 0, i32 9
  %7 = load i32, i32* %w_number, align 4
  call void (i32, i8*, ...) @Msg(i32 0, i8* %5, i32 %7)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.4, %if.then.3, %if.then
  %8 = load i32, i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @NextWindow() #0 {
entry:
  %retval = alloca i32, align 4
  %pp = alloca %struct.win**, align 8
  %n = alloca i32, align 4
  %group = alloca %struct.win*, align 8
  %0 = load %struct.win*, %struct.win** @fore, align 8
  %tobool = icmp ne %struct.win* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %struct.win*, %struct.win** @fore, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %1, i32 0, i32 9
  %2 = load i32, i32* %w_number, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* @maxwin, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ]
  store i32 %cond, i32* %n, align 4
  %4 = load %struct.win*, %struct.win** @fore, align 8
  %tobool1 = icmp ne %struct.win* %4, null
  br i1 %tobool1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  %5 = load %struct.win*, %struct.win** @fore, align 8
  %w_group = getelementptr inbounds %struct.win, %struct.win* %5, i32 0, i32 25
  %6 = load %struct.win*, %struct.win** %w_group, align 8
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  br label %cond.end.4

cond.end.4:                                       ; preds = %cond.false.3, %cond.true.2
  %cond5 = phi %struct.win* [ %6, %cond.true.2 ], [ null, %cond.false.3 ]
  store %struct.win* %cond5, %struct.win** %group, align 8
  %7 = load %struct.win*, %struct.win** @fore, align 8
  %tobool6 = icmp ne %struct.win* %7, null
  br i1 %tobool6, label %cond.true.7, label %cond.false.9

cond.true.7:                                      ; preds = %cond.end.4
  %8 = load %struct.win**, %struct.win*** @wtab, align 8
  %9 = load i32, i32* %n, align 4
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr inbounds %struct.win*, %struct.win** %8, i64 %idx.ext
  %add.ptr8 = getelementptr inbounds %struct.win*, %struct.win** %add.ptr, i64 1
  br label %cond.end.10

cond.false.9:                                     ; preds = %cond.end.4
  %10 = load %struct.win**, %struct.win*** @wtab, align 8
  br label %cond.end.10

cond.end.10:                                      ; preds = %cond.false.9, %cond.true.7
  %cond11 = phi %struct.win** [ %add.ptr8, %cond.true.7 ], [ %10, %cond.false.9 ]
  store %struct.win** %cond11, %struct.win*** %pp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.10
  %11 = load %struct.win**, %struct.win*** %pp, align 8
  %12 = load %struct.win**, %struct.win*** @wtab, align 8
  %13 = load i32, i32* %n, align 4
  %idx.ext12 = sext i32 %13 to i64
  %add.ptr13 = getelementptr inbounds %struct.win*, %struct.win** %12, i64 %idx.ext12
  %cmp = icmp ne %struct.win** %11, %add.ptr13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load %struct.win**, %struct.win*** %pp, align 8
  %15 = load %struct.win**, %struct.win*** @wtab, align 8
  %16 = load i32, i32* @maxwin, align 4
  %idx.ext14 = sext i32 %16 to i64
  %add.ptr15 = getelementptr inbounds %struct.win*, %struct.win** %15, i64 %idx.ext14
  %cmp16 = icmp eq %struct.win** %14, %add.ptr15
  br i1 %cmp16, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %17 = load %struct.win**, %struct.win*** @wtab, align 8
  store %struct.win** %17, %struct.win*** %pp, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %18 = load %struct.win**, %struct.win*** %pp, align 8
  %19 = load %struct.win*, %struct.win** %18, align 8
  %tobool17 = icmp ne %struct.win* %19, null
  br i1 %tobool17, label %if.then.18, label %if.end.24

if.then.18:                                       ; preds = %if.end
  %20 = load %struct.win*, %struct.win** @fore, align 8
  %tobool19 = icmp ne %struct.win* %20, null
  br i1 %tobool19, label %lor.lhs.false, label %if.then.22

lor.lhs.false:                                    ; preds = %if.then.18
  %21 = load %struct.win*, %struct.win** %group, align 8
  %22 = load %struct.win**, %struct.win*** %pp, align 8
  %23 = load %struct.win*, %struct.win** %22, align 8
  %w_group20 = getelementptr inbounds %struct.win, %struct.win* %23, i32 0, i32 25
  %24 = load %struct.win*, %struct.win** %w_group20, align 8
  %cmp21 = icmp eq %struct.win* %21, %24
  br i1 %cmp21, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %lor.lhs.false, %if.then.18
  br label %for.end

if.end.23:                                        ; preds = %lor.lhs.false
  br label %if.end.24

if.end.24:                                        ; preds = %if.end.23, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.24
  %25 = load %struct.win**, %struct.win*** %pp, align 8
  %incdec.ptr = getelementptr inbounds %struct.win*, %struct.win** %25, i32 1
  store %struct.win** %incdec.ptr, %struct.win*** %pp, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.22, %for.cond
  %26 = load %struct.win**, %struct.win*** %pp, align 8
  %27 = load %struct.win**, %struct.win*** @wtab, align 8
  %28 = load i32, i32* %n, align 4
  %idx.ext25 = sext i32 %28 to i64
  %add.ptr26 = getelementptr inbounds %struct.win*, %struct.win** %27, i64 %idx.ext25
  %cmp27 = icmp eq %struct.win** %26, %add.ptr26
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %for.end
  store i32 -1, i32* %retval
  br label %return

if.end.29:                                        ; preds = %for.end
  %29 = load %struct.win**, %struct.win*** %pp, align 8
  %30 = load %struct.win**, %struct.win*** @wtab, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.win** %29 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.win** %30 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %retval
  br label %return

return:                                           ; preds = %if.end.29, %if.then.28
  %31 = load i32, i32* %retval
  ret i32 %31
}

; Function Attrs: nounwind uwtable
define internal i32 @PreviousWindow() #0 {
entry:
  %retval = alloca i32, align 4
  %pp = alloca %struct.win**, align 8
  %n = alloca i32, align 4
  %group = alloca %struct.win*, align 8
  %0 = load %struct.win*, %struct.win** @fore, align 8
  %tobool = icmp ne %struct.win* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load %struct.win*, %struct.win** @fore, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %1, i32 0, i32 9
  %2 = load i32, i32* %w_number, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ -1, %cond.false ]
  store i32 %cond, i32* %n, align 4
  %3 = load %struct.win*, %struct.win** @fore, align 8
  %tobool1 = icmp ne %struct.win* %3, null
  br i1 %tobool1, label %cond.true.2, label %cond.false.3

cond.true.2:                                      ; preds = %cond.end
  %4 = load %struct.win*, %struct.win** @fore, align 8
  %w_group = getelementptr inbounds %struct.win, %struct.win* %4, i32 0, i32 25
  %5 = load %struct.win*, %struct.win** %w_group, align 8
  br label %cond.end.4

cond.false.3:                                     ; preds = %cond.end
  br label %cond.end.4

cond.end.4:                                       ; preds = %cond.false.3, %cond.true.2
  %cond5 = phi %struct.win* [ %5, %cond.true.2 ], [ null, %cond.false.3 ]
  store %struct.win* %cond5, %struct.win** %group, align 8
  %6 = load %struct.win**, %struct.win*** @wtab, align 8
  %7 = load i32, i32* %n, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds %struct.win*, %struct.win** %6, i64 %idx.ext
  %add.ptr6 = getelementptr inbounds %struct.win*, %struct.win** %add.ptr, i64 -1
  store %struct.win** %add.ptr6, %struct.win*** %pp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end.4
  %8 = load %struct.win**, %struct.win*** %pp, align 8
  %9 = load %struct.win**, %struct.win*** @wtab, align 8
  %10 = load i32, i32* %n, align 4
  %idx.ext7 = sext i32 %10 to i64
  %add.ptr8 = getelementptr inbounds %struct.win*, %struct.win** %9, i64 %idx.ext7
  %cmp = icmp ne %struct.win** %8, %add.ptr8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct.win**, %struct.win*** %pp, align 8
  %12 = load %struct.win**, %struct.win*** @wtab, align 8
  %add.ptr9 = getelementptr inbounds %struct.win*, %struct.win** %12, i64 -1
  %cmp10 = icmp eq %struct.win** %11, %add.ptr9
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %13 = load %struct.win**, %struct.win*** @wtab, align 8
  %14 = load i32, i32* @maxwin, align 4
  %idx.ext11 = sext i32 %14 to i64
  %add.ptr12 = getelementptr inbounds %struct.win*, %struct.win** %13, i64 %idx.ext11
  %add.ptr13 = getelementptr inbounds %struct.win*, %struct.win** %add.ptr12, i64 -1
  store %struct.win** %add.ptr13, %struct.win*** %pp, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %15 = load %struct.win**, %struct.win*** %pp, align 8
  %16 = load %struct.win*, %struct.win** %15, align 8
  %tobool14 = icmp ne %struct.win* %16, null
  br i1 %tobool14, label %if.then.15, label %if.end.21

if.then.15:                                       ; preds = %if.end
  %17 = load %struct.win*, %struct.win** @fore, align 8
  %tobool16 = icmp ne %struct.win* %17, null
  br i1 %tobool16, label %lor.lhs.false, label %if.then.19

lor.lhs.false:                                    ; preds = %if.then.15
  %18 = load %struct.win*, %struct.win** %group, align 8
  %19 = load %struct.win**, %struct.win*** %pp, align 8
  %20 = load %struct.win*, %struct.win** %19, align 8
  %w_group17 = getelementptr inbounds %struct.win, %struct.win* %20, i32 0, i32 25
  %21 = load %struct.win*, %struct.win** %w_group17, align 8
  %cmp18 = icmp eq %struct.win* %18, %21
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %lor.lhs.false, %if.then.15
  br label %for.end

if.end.20:                                        ; preds = %lor.lhs.false
  br label %if.end.21

if.end.21:                                        ; preds = %if.end.20, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end.21
  %22 = load %struct.win**, %struct.win*** %pp, align 8
  %incdec.ptr = getelementptr inbounds %struct.win*, %struct.win** %22, i32 -1
  store %struct.win** %incdec.ptr, %struct.win*** %pp, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.19, %for.cond
  %23 = load %struct.win**, %struct.win*** %pp, align 8
  %24 = load %struct.win**, %struct.win*** @wtab, align 8
  %25 = load i32, i32* %n, align 4
  %idx.ext22 = sext i32 %25 to i64
  %add.ptr23 = getelementptr inbounds %struct.win*, %struct.win** %24, i64 %idx.ext22
  %cmp24 = icmp eq %struct.win** %23, %add.ptr23
  br i1 %cmp24, label %if.then.25, label %if.end.26

if.then.25:                                       ; preds = %for.end
  store i32 -1, i32* %retval
  br label %return

if.end.26:                                        ; preds = %for.end
  %26 = load %struct.win**, %struct.win*** %pp, align 8
  %27 = load %struct.win**, %struct.win*** @wtab, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.win** %26 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.win** %27 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, i32* %retval
  br label %return

return:                                           ; preds = %if.end.26, %if.then.25
  %28 = load i32, i32* %retval
  ret i32 %28
}

declare void @Input(i8*, i32, i32, void (i8*, i32, i8*)*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @confirm_fn(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %act = alloca %struct.action, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp ne i32 %conv, 121
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load i8*, i8** %buf.addr, align 8
  %4 = load i8, i8* %3, align 1
  %conv2 = sext i8 %4 to i32
  %cmp3 = icmp ne i32 %conv2, 89
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %buf.addr, align 8
  store i8 0, i8* %5, align 1
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %6 = load i8*, i8** %data.addr, align 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %nr = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 0
  store i32 %8, i32* %nr, align 4
  %args = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args, align 8
  %argl = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 2
  store i32* null, i32** %argl, align 8
  %quiet = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 3
  store i32 0, i32* %quiet, align 4
  call void @DoAction(%struct.action* %act, i32 -1)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

declare void @FreePseudowin(%struct.win*) #2

declare i8* @SaveStr(i8*) #2

; Function Attrs: nounwind uwtable
define void @KillWindow(%struct.win* %wi) #0 {
entry:
  %wi.addr = alloca %struct.win*, align 8
  %pp = alloca %struct.win**, align 8
  %p = alloca %struct.win*, align 8
  %cv = alloca %struct.canvas*, align 8
  %gotone = alloca i32, align 4
  %lay = alloca %struct.layout*, align 8
  store %struct.win* %wi, %struct.win** %wi.addr, align 8
  store %struct.win** @windows, %struct.win*** %pp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.win**, %struct.win*** %pp, align 8
  %1 = load %struct.win*, %struct.win** %0, align 8
  store %struct.win* %1, %struct.win** %p, align 8
  %tobool = icmp ne %struct.win* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.win*, %struct.win** %p, align 8
  %3 = load %struct.win*, %struct.win** %wi.addr, align 8
  %cmp = icmp eq %struct.win* %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %4 = load %struct.win*, %struct.win** %p, align 8
  %w_next = getelementptr inbounds %struct.win, %struct.win* %4, i32 0, i32 0
  store %struct.win** %w_next, %struct.win*** %pp, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  br label %do.body

do.body:                                          ; preds = %for.end
  br label %do.end

do.end:                                           ; preds = %do.body
  %5 = load %struct.win*, %struct.win** %p, align 8
  %w_next1 = getelementptr inbounds %struct.win, %struct.win* %5, i32 0, i32 0
  %6 = load %struct.win*, %struct.win** %w_next1, align 8
  %7 = load %struct.win**, %struct.win*** %pp, align 8
  store %struct.win* %6, %struct.win** %7, align 8
  %8 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_inlen = getelementptr inbounds %struct.win, %struct.win* %8, i32 0, i32 17
  store i32 0, i32* %w_inlen, align 4
  %9 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %9, i32 0, i32 9
  %10 = load i32, i32* %w_number, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx = getelementptr inbounds %struct.win*, %struct.win** %11, i64 %idxprom
  store %struct.win* null, %struct.win** %arrayidx, align 8
  %12 = load %struct.win*, %struct.win** @windows, align 8
  %cmp2 = icmp eq %struct.win* %12, null
  br i1 %cmp2, label %if.then.3, label %if.end.4

if.then.3:                                        ; preds = %do.end
  %13 = load %struct.win*, %struct.win** %wi.addr, align 8
  call void @FreeWindow(%struct.win* %13)
  call void @Finit(i32 0)
  br label %if.end.4

if.end.4:                                         ; preds = %if.then.3, %do.end
  %14 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %14, %struct.display** @display, align 8
  br label %for.cond.5

for.cond.5:                                       ; preds = %for.inc.23, %if.end.4
  %15 = load %struct.display*, %struct.display** @display, align 8
  %tobool6 = icmp ne %struct.display* %15, null
  br i1 %tobool6, label %for.body.7, label %for.end.24

for.body.7:                                       ; preds = %for.cond.5
  store i32 0, i32* %gotone, align 4
  %16 = load %struct.display*, %struct.display** @display, align 8
  %d_cvlist = getelementptr inbounds %struct.display, %struct.display* %16, i32 0, i32 3
  %17 = load %struct.canvas*, %struct.canvas** %d_cvlist, align 8
  store %struct.canvas* %17, %struct.canvas** %cv, align 8
  br label %for.cond.8

for.cond.8:                                       ; preds = %for.inc.14, %for.body.7
  %18 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool9 = icmp ne %struct.canvas* %18, null
  br i1 %tobool9, label %for.body.10, label %for.end.15

for.body.10:                                      ; preds = %for.cond.8
  %19 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %19, i32 0, i32 9
  %20 = load %struct.layer*, %struct.layer** %c_layer, align 8
  %l_bottom = getelementptr inbounds %struct.layer, %struct.layer* %20, i32 0, i32 9
  %21 = load %struct.layer*, %struct.layer** %l_bottom, align 8
  %l_data = getelementptr inbounds %struct.layer, %struct.layer* %21, i32 0, i32 7
  %22 = load i8*, i8** %l_data, align 8
  %23 = bitcast i8* %22 to %struct.win*
  %24 = load %struct.win*, %struct.win** %wi.addr, align 8
  %cmp11 = icmp ne %struct.win* %23, %24
  br i1 %cmp11, label %if.then.12, label %if.end.13

if.then.12:                                       ; preds = %for.body.10
  br label %for.inc.14

if.end.13:                                        ; preds = %for.body.10
  %25 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %26 = load %struct.display*, %struct.display** @display, align 8
  %d_other = getelementptr inbounds %struct.display, %struct.display* %26, i32 0, i32 11
  %27 = load %struct.win*, %struct.win** %d_other, align 8
  %call = call %struct.win* @FindNiceWindow(%struct.win* %27, i8* null)
  call void @SetCanvasWindow(%struct.canvas* %25, %struct.win* %call)
  store i32 1, i32* %gotone, align 4
  br label %for.inc.14

for.inc.14:                                       ; preds = %if.end.13, %if.then.12
  %28 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next = getelementptr inbounds %struct.canvas, %struct.canvas* %28, i32 0, i32 0
  %29 = load %struct.canvas*, %struct.canvas** %c_next, align 8
  store %struct.canvas* %29, %struct.canvas** %cv, align 8
  br label %for.cond.8

for.end.15:                                       ; preds = %for.cond.8
  %30 = load i32, i32* %gotone, align 4
  %tobool16 = icmp ne i32 %30, 0
  br i1 %tobool16, label %if.then.17, label %if.end.22

if.then.17:                                       ; preds = %for.end.15
  %31 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_zdisplay = getelementptr inbounds %struct.win, %struct.win* %31, i32 0, i32 91
  %32 = load %struct.display*, %struct.display** %w_zdisplay, align 8
  %33 = load %struct.display*, %struct.display** @display, align 8
  %cmp18 = icmp eq %struct.display* %32, %33
  br i1 %cmp18, label %if.then.19, label %if.end.21

if.then.19:                                       ; preds = %if.then.17
  %34 = load %struct.display*, %struct.display** @display, align 8
  %d_blocked = getelementptr inbounds %struct.display, %struct.display* %34, i32 0, i32 102
  store i32 0, i32* %d_blocked, align 4
  %35 = load %struct.display*, %struct.display** @display, align 8
  %d_readev = getelementptr inbounds %struct.display, %struct.display* %35, i32 0, i32 60
  %condneg = getelementptr inbounds %struct.event, %struct.event* %d_readev, i32 0, i32 10
  store i32* null, i32** %condneg, align 8
  %36 = load %struct.display*, %struct.display** @display, align 8
  %d_readev20 = getelementptr inbounds %struct.display, %struct.display* %36, i32 0, i32 60
  %condpos = getelementptr inbounds %struct.event, %struct.event* %d_readev20, i32 0, i32 9
  store i32* null, i32** %condpos, align 8
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.19, %if.then.17
  call void @Activate(i32 -1)
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %for.end.15
  br label %for.inc.23

for.inc.23:                                       ; preds = %if.end.22
  %37 = load %struct.display*, %struct.display** @display, align 8
  %d_next = getelementptr inbounds %struct.display, %struct.display* %37, i32 0, i32 0
  %38 = load %struct.display*, %struct.display** %d_next, align 8
  store %struct.display* %38, %struct.display** @display, align 8
  br label %for.cond.5

for.end.24:                                       ; preds = %for.cond.5
  %39 = load %struct.layout*, %struct.layout** @layouts, align 8
  store %struct.layout* %39, %struct.layout** %lay, align 8
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc.28, %for.end.24
  %40 = load %struct.layout*, %struct.layout** %lay, align 8
  %tobool26 = icmp ne %struct.layout* %40, null
  br i1 %tobool26, label %for.body.27, label %for.end.29

for.body.27:                                      ; preds = %for.cond.25
  %41 = load %struct.layout*, %struct.layout** %lay, align 8
  %lay_canvas = getelementptr inbounds %struct.layout, %struct.layout* %41, i32 0, i32 3
  %42 = load %struct.win*, %struct.win** %wi.addr, align 8
  call void @UpdateLayoutCanvas(%struct.canvas* %lay_canvas, %struct.win* %42)
  br label %for.inc.28

for.inc.28:                                       ; preds = %for.body.27
  %43 = load %struct.layout*, %struct.layout** %lay, align 8
  %lay_next = getelementptr inbounds %struct.layout, %struct.layout* %43, i32 0, i32 0
  %44 = load %struct.layout*, %struct.layout** %lay_next, align 8
  store %struct.layout* %44, %struct.layout** %lay, align 8
  br label %for.cond.25

for.end.29:                                       ; preds = %for.cond.25
  %45 = load %struct.win*, %struct.win** %wi.addr, align 8
  call void @FreeWindow(%struct.win* %45)
  call void @WindowChanged(%struct.win* null, i32 119)
  call void @WindowChanged(%struct.win* null, i32 87)
  call void @WindowChanged(%struct.win* null, i32 0)
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #1

declare void @Finit(i32) #2

declare void @Hangup() #2

; Function Attrs: nounwind uwtable
define internal void @pow_detach_fn(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.end
  %1 = load i8*, i8** %buf.addr, align 8
  store i8 0, i8* %1, align 1
  br label %if.end.6

if.end:                                           ; preds = %do.end
  %2 = load i8*, i8** %buf.addr, align 8
  %3 = load i8, i8* %2, align 1
  %conv = zext i8 %3 to i32
  %idxprom = sext i32 %conv to i64
  %arrayidx = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom
  %nr = getelementptr inbounds %struct.action, %struct.action* %arrayidx, i32 0, i32 0
  %4 = load i32, i32* %nr, align 4
  %cmp = icmp ne i32 %4, 126
  br i1 %cmp, label %if.then.2, label %if.else

if.then.2:                                        ; preds = %if.end
  %5 = load %struct.display*, %struct.display** @display, align 8
  %tobool3 = icmp ne %struct.display* %5, null
  br i1 %tobool3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.then.2
  %6 = load %struct.display*, %struct.display** @display, align 8
  %d_userfd = getelementptr inbounds %struct.display, %struct.display* %6, i32 0, i32 59
  %7 = load i32, i32* %d_userfd, align 4
  %call = call i64 @write(i32 %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.405, i32 0, i32 0), i64 1)
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %if.then.2
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.406, i32 0, i32 0))
  br label %if.end.6

if.else:                                          ; preds = %if.end
  call void @Detach(i32 3)
  br label %if.end.6

if.end.6:                                         ; preds = %if.then, %if.else, %if.end.5
  ret void
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: nounwind uwtable
define void @DoCommand(i8** %argv, i32* %argl) #0 {
entry:
  %argv.addr = alloca i8**, align 8
  %argl.addr = alloca i32*, align 8
  %act = alloca %struct.action, align 8
  %cmd = alloca i8*, align 8
  store i8** %argv, i8*** %argv.addr, align 8
  store i32* %argl, i32** %argl.addr, align 8
  %0 = load i8**, i8*** %argv.addr, align 8
  %1 = load i8*, i8** %0, align 8
  store i8* %1, i8** %cmd, align 8
  %quiet = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 3
  store i32 0, i32* %quiet, align 4
  %2 = load i8*, i8** %cmd, align 8
  %3 = load i8, i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 64
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %quiet2 = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 3
  %4 = load i32, i32* %quiet2, align 4
  %or = or i32 %4, 1
  store i32 %or, i32* %quiet2, align 4
  %5 = load i8*, i8** %cmd, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1
  store i8* %incdec.ptr, i8** %cmd, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i8*, i8** %cmd, align 8
  %7 = load i8, i8* %6, align 1
  %conv3 = sext i8 %7 to i32
  %cmp4 = icmp eq i32 %conv3, 45
  br i1 %cmp4, label %if.then.6, label %if.end.10

if.then.6:                                        ; preds = %if.end
  %quiet7 = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 3
  %8 = load i32, i32* %quiet7, align 4
  %or8 = or i32 %8, 2
  store i32 %or8, i32* %quiet7, align 4
  %9 = load i8*, i8** %cmd, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %9, i32 1
  store i8* %incdec.ptr9, i8** %cmd, align 8
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.6, %if.end
  %10 = load i8*, i8** %cmd, align 8
  %call = call i32 @FindCommnr(i8* %10)
  %nr = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 0
  store i32 %call, i32* %nr, align 4
  %cmp11 = icmp eq i32 %call, -1
  br i1 %cmp11, label %if.then.13, label %if.end.14

if.then.13:                                       ; preds = %if.end.10
  %11 = load i8*, i8** @rc_name, align 8
  %12 = load i8*, i8** %cmd, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.307, i32 0, i32 0), i8* %11, i8* %12)
  br label %return

if.end.14:                                        ; preds = %if.end.10
  %13 = load i8**, i8*** %argv.addr, align 8
  %add.ptr = getelementptr inbounds i8*, i8** %13, i64 1
  %args = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 1
  store i8** %add.ptr, i8*** %args, align 8
  %14 = load i32*, i32** %argl.addr, align 8
  %add.ptr15 = getelementptr inbounds i32, i32* %14, i64 1
  %argl16 = getelementptr inbounds %struct.action, %struct.action* %act, i32 0, i32 2
  store i32* %add.ptr15, i32** %argl16, align 8
  call void @DoAction(%struct.action* %act, i32 -1)
  br label %return

return:                                           ; preds = %if.end.14, %if.then.13
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @WindowByNumber(i8* %str) #0 {
entry:
  %str.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %s = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i8*, i8** %str.addr, align 8
  store i8* %0, i8** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8
  %2 = load i8, i8* %1, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp slt i32 %conv, 48
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %s, align 8
  %6 = load i8, i8* %5, align 1
  %conv2 = sext i8 %6 to i32
  %cmp3 = icmp sgt i32 %conv2, 57
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  %7 = load i32, i32* %i, align 4
  %mul = mul nsw i32 %7, 10
  %8 = load i8*, i8** %s, align 8
  %9 = load i8, i8* %8, align 1
  %conv5 = sext i8 %9 to i32
  %sub = sub nsw i32 %conv5, 48
  %add = add nsw i32 %mul, %sub
  store i32 %add, i32* %i, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load i8*, i8** %s, align 8
  %12 = load i8, i8* %11, align 1
  %conv6 = sext i8 %12 to i32
  %tobool7 = icmp ne i32 %conv6, 0
  br i1 %tobool7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end
  br label %cond.end

cond.false:                                       ; preds = %for.end
  %13 = load i32, i32* %i, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %13, %cond.false ]
  ret i32 %cond
}

declare i32 @FindEncoding(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @copy_reg_fn(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %pp = alloca %struct.plop*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %buf.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = zext i8 %1 to i32
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds %struct.plop, %struct.plop* getelementptr inbounds ([256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i32 0), i64 %idx.ext
  store %struct.plop* %add.ptr, %struct.plop** %pp, align 8
  %2 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %buf.addr, align 8
  store i8 0, i8* %3, align 1
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf1 = getelementptr inbounds %struct.plop, %struct.plop* %4, i32 0, i32 0
  %5 = load i8*, i8** %buf1, align 8
  %tobool2 = icmp ne i8* %5, null
  br i1 %tobool2, label %if.then.3, label %if.end.5

if.then.3:                                        ; preds = %if.end
  %6 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf4 = getelementptr inbounds %struct.plop, %struct.plop* %6, i32 0, i32 0
  %7 = load i8*, i8** %buf4, align 8
  call void @free(i8* %7) #4
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.3, %if.end
  %8 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf6 = getelementptr inbounds %struct.plop, %struct.plop* %8, i32 0, i32 0
  store i8* null, i8** %buf6, align 8
  %9 = load %struct.plop*, %struct.plop** %pp, align 8
  %len7 = getelementptr inbounds %struct.plop, %struct.plop* %9, i32 0, i32 1
  store i32 0, i32* %len7, align 4
  %10 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %10, i32 0, i32 1
  %11 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %u_plop = getelementptr inbounds %struct.acluser, %struct.acluser* %11, i32 0, i32 8
  %len8 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop, i32 0, i32 1
  %12 = load i32, i32* %len8, align 4
  %tobool9 = icmp ne i32 %12, 0
  br i1 %tobool9, label %if.then.10, label %if.end.27

if.then.10:                                       ; preds = %if.end.5
  %13 = load %struct.display*, %struct.display** @display, align 8
  %d_user11 = getelementptr inbounds %struct.display, %struct.display* %13, i32 0, i32 1
  %14 = load %struct.acluser*, %struct.acluser** %d_user11, align 8
  %u_plop12 = getelementptr inbounds %struct.acluser, %struct.acluser* %14, i32 0, i32 8
  %len13 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop12, i32 0, i32 1
  %15 = load i32, i32* %len13, align 4
  %conv14 = sext i32 %15 to i64
  %call = call noalias i8* @malloc(i64 %conv14) #4
  %16 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf15 = getelementptr inbounds %struct.plop, %struct.plop* %16, i32 0, i32 0
  store i8* %call, i8** %buf15, align 8
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then.17, label %if.end.18

if.then.17:                                       ; preds = %if.then.10
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0))
  br label %return

if.end.18:                                        ; preds = %if.then.10
  %17 = load %struct.display*, %struct.display** @display, align 8
  %d_user19 = getelementptr inbounds %struct.display, %struct.display* %17, i32 0, i32 1
  %18 = load %struct.acluser*, %struct.acluser** %d_user19, align 8
  %u_plop20 = getelementptr inbounds %struct.acluser, %struct.acluser* %18, i32 0, i32 8
  %buf21 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop20, i32 0, i32 0
  %19 = load i8*, i8** %buf21, align 8
  %20 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf22 = getelementptr inbounds %struct.plop, %struct.plop* %20, i32 0, i32 0
  %21 = load i8*, i8** %buf22, align 8
  %22 = load %struct.display*, %struct.display** @display, align 8
  %d_user23 = getelementptr inbounds %struct.display, %struct.display* %22, i32 0, i32 1
  %23 = load %struct.acluser*, %struct.acluser** %d_user23, align 8
  %u_plop24 = getelementptr inbounds %struct.acluser, %struct.acluser* %23, i32 0, i32 8
  %len25 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop24, i32 0, i32 1
  %24 = load i32, i32* %len25, align 4
  %conv26 = sext i32 %24 to i64
  call void @bcopy(i8* %19, i8* %21, i64 %conv26) #4
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.18, %if.end.5
  %25 = load %struct.display*, %struct.display** @display, align 8
  %d_user28 = getelementptr inbounds %struct.display, %struct.display* %25, i32 0, i32 1
  %26 = load %struct.acluser*, %struct.acluser** %d_user28, align 8
  %u_plop29 = getelementptr inbounds %struct.acluser, %struct.acluser* %26, i32 0, i32 8
  %len30 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop29, i32 0, i32 1
  %27 = load i32, i32* %len30, align 4
  %28 = load %struct.plop*, %struct.plop** %pp, align 8
  %len31 = getelementptr inbounds %struct.plop, %struct.plop* %28, i32 0, i32 1
  store i32 %27, i32* %len31, align 4
  %29 = load %struct.display*, %struct.display** @display, align 8
  %d_user32 = getelementptr inbounds %struct.display, %struct.display* %29, i32 0, i32 1
  %30 = load %struct.acluser*, %struct.acluser** %d_user32, align 8
  %u_plop33 = getelementptr inbounds %struct.acluser, %struct.acluser* %30, i32 0, i32 8
  %enc = getelementptr inbounds %struct.plop, %struct.plop* %u_plop33, i32 0, i32 2
  %31 = load i32, i32* %enc, align 4
  %32 = load %struct.plop*, %struct.plop** %pp, align 8
  %enc34 = getelementptr inbounds %struct.plop, %struct.plop* %32, i32 0, i32 2
  store i32 %31, i32* %enc34, align 4
  %33 = load %struct.display*, %struct.display** @display, align 8
  %d_user35 = getelementptr inbounds %struct.display, %struct.display* %33, i32 0, i32 1
  %34 = load %struct.acluser*, %struct.acluser** %d_user35, align 8
  %u_plop36 = getelementptr inbounds %struct.acluser, %struct.acluser* %34, i32 0, i32 8
  %len37 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop36, i32 0, i32 1
  %35 = load i32, i32* %len37, align 4
  %36 = load i8*, i8** %buf.addr, align 8
  %37 = load i8, i8* %36, align 1
  %conv38 = sext i8 %37 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.407, i32 0, i32 0), i32 %35, i32 %conv38)
  br label %return

return:                                           ; preds = %if.end.27, %if.then.17, %if.then
  ret void
}

declare i8* @ReadFile(i8*, i32*) #2

declare i32 @UserFreeCopyBuffer(%struct.acluser*) #2

declare i8* @SaveStrn(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @process_fn(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %pp = alloca %struct.plop*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %buf.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = zext i8 %1 to i32
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds %struct.plop, %struct.plop* getelementptr inbounds ([256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i32 0), i64 %idx.ext
  store %struct.plop* %add.ptr, %struct.plop** %pp, align 8
  %2 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %buf.addr, align 8
  store i8 0, i8* %3, align 1
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf1 = getelementptr inbounds %struct.plop, %struct.plop* %4, i32 0, i32 0
  %5 = load i8*, i8** %buf1, align 8
  %tobool2 = icmp ne i8* %5, null
  br i1 %tobool2, label %if.then.3, label %if.end.6

if.then.3:                                        ; preds = %if.end
  %6 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf4 = getelementptr inbounds %struct.plop, %struct.plop* %6, i32 0, i32 0
  %7 = load i8*, i8** %buf4, align 8
  %8 = load %struct.plop*, %struct.plop** %pp, align 8
  %len5 = getelementptr inbounds %struct.plop, %struct.plop* %8, i32 0, i32 1
  %9 = load i32, i32* %len5, align 4
  call void @ProcessInput(i8* %7, i32 %9)
  br label %return

if.end.6:                                         ; preds = %if.end
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.409, i32 0, i32 0))
  br label %return

return:                                           ; preds = %if.end.6, %if.then.3, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @StuffFin(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load %struct.layer*, %struct.layer** @flayer, align 8
  %tobool = icmp ne %struct.layer* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %while.end

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %1 = load i32, i32* %len.addr, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn = getelementptr inbounds %struct.layer, %struct.layer* %2, i32 0, i32 6
  %3 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn, align 8
  %lf_LayProcess = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %3, i32 0, i32 0
  %4 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess, align 8
  call void %4(i8** %buf.addr, i32* %len.addr)
  br label %while.cond

while.end:                                        ; preds = %if.then, %while.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ShowWindowsX(i8* %str) #0 {
entry:
  %str.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @maxwin, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx = getelementptr inbounds %struct.win*, %struct.win** %3, i64 %idxprom
  %4 = load %struct.win*, %struct.win** %arrayidx, align 8
  %tobool = icmp ne %struct.win* %4, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body
  %5 = load i8*, i8** %str.addr, align 8
  %6 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %6 to i64
  %7 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx2 = getelementptr inbounds %struct.win*, %struct.win** %7, i64 %idxprom1
  %8 = load %struct.win*, %struct.win** %arrayidx2, align 8
  %call = call i8* @MakeWinMsg(i8* %5, %struct.win* %8, i32 37)
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %call)
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @ShowWindows(i32 %where) #0 {
entry:
  %where.addr = alloca i32, align 4
  %buf = alloca [1024 x i8], align 16
  %s = alloca i8*, align 8
  %ss = alloca i8*, align 8
  store i32 %where, i32* %where.addr, align 4
  %0 = load %struct.display*, %struct.display** @display, align 8
  %tobool = icmp ne %struct.display* %0, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %where.addr, align 4
  %cmp = icmp eq i32 %1, -1
  br i1 %cmp, label %land.lhs.true.1, label %if.end

land.lhs.true.1:                                  ; preds = %land.lhs.true
  %2 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %2, i32 0, i32 10
  %3 = load %struct.win*, %struct.win** %d_fore, align 8
  %tobool2 = icmp ne %struct.win* %3, null
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.1
  %4 = load %struct.display*, %struct.display** @display, align 8
  %d_fore3 = getelementptr inbounds %struct.display, %struct.display* %4, i32 0, i32 10
  %5 = load %struct.win*, %struct.win** %d_fore3, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %5, i32 0, i32 9
  %6 = load i32, i32* %w_number, align 4
  store i32 %6, i32* %where.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.1, %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %7 = load i32, i32* %where.addr, align 4
  %call = call i8* @AddWindows(i8* %arraydecay, i32 1024, i32 0, i32 %7)
  store i8* %call, i8** %ss, align 8
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %call6 = call i64 @strlen(i8* %arraydecay5) #8
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay4, i64 %call6
  store i8* %add.ptr, i8** %s, align 8
  %8 = load %struct.display*, %struct.display** @display, align 8
  %tobool7 = icmp ne %struct.display* %8, null
  br i1 %tobool7, label %land.lhs.true.8, label %if.else

land.lhs.true.8:                                  ; preds = %if.end
  %9 = load i8*, i8** %ss, align 8
  %arraydecay9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay9 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %10 = load %struct.display*, %struct.display** @display, align 8
  %d_width = getelementptr inbounds %struct.display, %struct.display* %10, i32 0, i32 16
  %11 = load i32, i32* %d_width, align 4
  %div = sdiv i32 %11, 2
  %conv = sext i32 %div to i64
  %cmp10 = icmp sgt i64 %sub.ptr.sub, %conv
  br i1 %cmp10, label %if.then.12, label %if.else

if.then.12:                                       ; preds = %land.lhs.true.8
  %12 = load %struct.display*, %struct.display** @display, align 8
  %d_width13 = getelementptr inbounds %struct.display, %struct.display* %12, i32 0, i32 16
  %13 = load i32, i32* %d_width13, align 4
  %div14 = sdiv i32 %13, 2
  %14 = load i8*, i8** %ss, align 8
  %idx.ext = sext i32 %div14 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr15 = getelementptr inbounds i8, i8* %14, i64 %idx.neg
  store i8* %add.ptr15, i8** %ss, align 8
  %15 = load i8*, i8** %s, align 8
  %16 = load i8*, i8** %ss, align 8
  %sub.ptr.lhs.cast16 = ptrtoint i8* %15 to i64
  %sub.ptr.rhs.cast17 = ptrtoint i8* %16 to i64
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17
  %17 = load %struct.display*, %struct.display** @display, align 8
  %d_width19 = getelementptr inbounds %struct.display, %struct.display* %17, i32 0, i32 16
  %18 = load i32, i32* %d_width19, align 4
  %conv20 = sext i32 %18 to i64
  %cmp21 = icmp slt i64 %sub.ptr.sub18, %conv20
  br i1 %cmp21, label %if.then.23, label %if.end.34

if.then.23:                                       ; preds = %if.then.12
  %19 = load i8*, i8** %s, align 8
  %20 = load %struct.display*, %struct.display** @display, align 8
  %d_width24 = getelementptr inbounds %struct.display, %struct.display* %20, i32 0, i32 16
  %21 = load i32, i32* %d_width24, align 4
  %idx.ext25 = sext i32 %21 to i64
  %idx.neg26 = sub i64 0, %idx.ext25
  %add.ptr27 = getelementptr inbounds i8, i8* %19, i64 %idx.neg26
  store i8* %add.ptr27, i8** %ss, align 8
  %22 = load i8*, i8** %ss, align 8
  %arraydecay28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %cmp29 = icmp ult i8* %22, %arraydecay28
  br i1 %cmp29, label %if.then.31, label %if.end.33

if.then.31:                                       ; preds = %if.then.23
  %arraydecay32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay32, i8** %ss, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %if.then.31, %if.then.23
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.then.12
  br label %if.end.36

if.else:                                          ; preds = %land.lhs.true.8, %if.end
  %arraydecay35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay35, i8** %ss, align 8
  br label %if.end.36

if.end.36:                                        ; preds = %if.else, %if.end.34
  %23 = load i8*, i8** %ss, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %23)
  ret void
}

declare i8* @MakeWinMsg(i8*, %struct.win*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @ShowInfo() #0 {
entry:
  %buf = alloca [512 x i8], align 16
  %p = alloca i8*, align 8
  %wp = alloca %struct.win*, align 8
  %i = alloca i32, align 4
  %0 = load %struct.win*, %struct.win** @fore, align 8
  store %struct.win* %0, %struct.win** %wp, align 8
  %1 = load %struct.win*, %struct.win** %wp, align 8
  %cmp = icmp eq %struct.win* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.display*, %struct.display** @display, align 8
  %d_x = getelementptr inbounds %struct.display, %struct.display* %2, i32 0, i32 22
  %3 = load i32, i32* %d_x, align 4
  %add = add nsw i32 %3, 1
  %4 = load %struct.display*, %struct.display** @display, align 8
  %d_y = getelementptr inbounds %struct.display, %struct.display* %4, i32 0, i32 23
  %5 = load i32, i32* %d_y, align 4
  %add1 = add nsw i32 %5, 1
  %6 = load %struct.display*, %struct.display** @display, align 8
  %d_width = getelementptr inbounds %struct.display, %struct.display* %6, i32 0, i32 16
  %7 = load i32, i32* %d_width, align 4
  %8 = load %struct.display*, %struct.display** @display, align 8
  %d_height = getelementptr inbounds %struct.display, %struct.display* %8, i32 0, i32 17
  %9 = load i32, i32* %d_height, align 4
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.370, i32 0, i32 0), i32 %add, i32 %add1, i32 %7, i32 %9)
  br label %return

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay, i8** %p, align 8
  %arraydecay2 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  %10 = load %struct.win*, %struct.win** %wp, align 8
  %11 = load i8*, i8** %p, align 8
  %call = call i32 @GetAnsiStatus(%struct.win* %10, i8* %11)
  %12 = load i8*, i8** %p, align 8
  %idx.ext = sext i32 %call to i64
  %add.ptr = getelementptr inbounds i8, i8* %12, i64 %idx.ext
  store i8* %add.ptr, i8** %p, align 8
  %cmp3 = icmp ult i8* %arraydecay2, %add.ptr
  br i1 %cmp3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  %13 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  store i8 32, i8* %13, align 1
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %if.end
  %14 = load i8*, i8** %p, align 8
  %15 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer = getelementptr inbounds %struct.win, %struct.win* %15, i32 0, i32 3
  %l_x = getelementptr inbounds %struct.layer, %struct.layer* %w_layer, i32 0, i32 3
  %16 = load i32, i32* %l_x, align 4
  %add6 = add nsw i32 %16, 1
  %17 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer7 = getelementptr inbounds %struct.win, %struct.win* %17, i32 0, i32 3
  %l_y = getelementptr inbounds %struct.layer, %struct.layer* %w_layer7, i32 0, i32 4
  %18 = load i32, i32* %l_y, align 4
  %add8 = add nsw i32 %18, 1
  %19 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer9 = getelementptr inbounds %struct.win, %struct.win* %19, i32 0, i32 3
  %l_width = getelementptr inbounds %struct.layer, %struct.layer* %w_layer9, i32 0, i32 1
  %20 = load i32, i32* %l_width, align 4
  %21 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer10 = getelementptr inbounds %struct.win, %struct.win* %21, i32 0, i32 3
  %l_height = getelementptr inbounds %struct.layer, %struct.layer* %w_layer10, i32 0, i32 2
  %22 = load i32, i32* %l_height, align 4
  %call11 = call i32 (i8*, i8*, ...) @sprintf(i8* %14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.371, i32 0, i32 0), i32 %add6, i32 %add8, i32 %20, i32 %22) #4
  %23 = load i8*, i8** %p, align 8
  %call12 = call i64 @strlen(i8* %23) #8
  %24 = load i8*, i8** %p, align 8
  %add.ptr13 = getelementptr inbounds i8, i8* %24, i64 %call12
  store i8* %add.ptr13, i8** %p, align 8
  %25 = load %struct.win*, %struct.win** %wp, align 8
  %w_histheight = getelementptr inbounds %struct.win, %struct.win* %25, i32 0, i32 77
  %26 = load i32, i32* %w_histheight, align 4
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.372, i32 0, i32 0), i32 %26) #4
  %27 = load i8*, i8** %p, align 8
  %call15 = call i64 @strlen(i8* %27) #8
  %28 = load i8*, i8** %p, align 8
  %add.ptr16 = getelementptr inbounds i8, i8* %28, i64 %call15
  store i8* %add.ptr16, i8** %p, align 8
  %29 = load %struct.win*, %struct.win** %wp, align 8
  %w_flow = getelementptr inbounds %struct.win, %struct.win* %29, i32 0, i32 67
  %30 = load i32, i32* %w_flow, align 4
  %and = and i32 %30, 1
  %tobool = icmp ne i32 %and, 0
  %cond = select i1 %tobool, i32 43, i32 45
  %31 = load %struct.win*, %struct.win** %wp, align 8
  %w_flow17 = getelementptr inbounds %struct.win, %struct.win* %31, i32 0, i32 67
  %32 = load i32, i32* %w_flow17, align 4
  %and18 = and i32 %32, 4
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end.5
  br label %cond.end

cond.false:                                       ; preds = %if.end.5
  %33 = load %struct.win*, %struct.win** %wp, align 8
  %w_flow20 = getelementptr inbounds %struct.win, %struct.win* %33, i32 0, i32 67
  %34 = load i32, i32* %w_flow20, align 4
  %and21 = and i32 %34, 2
  %tobool22 = icmp ne i32 %and21, 0
  %cond23 = select i1 %tobool22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.375, i32 0, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond24 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), %cond.true ], [ %cond23, %cond.false ]
  %call25 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.373, i32 0, i32 0), i32 %cond, i8* %cond24) #4
  %35 = load %struct.win*, %struct.win** %wp, align 8
  %w_wrap = getelementptr inbounds %struct.win, %struct.win* %35, i32 0, i32 48
  %36 = load i32, i32* %w_wrap, align 4
  %tobool26 = icmp ne i32 %36, 0
  br i1 %tobool26, label %if.end.31, label %if.then.27

if.then.27:                                       ; preds = %cond.end
  %37 = load i8*, i8** %p, align 8
  %call28 = call i64 @strlen(i8* %37) #8
  %38 = load i8*, i8** %p, align 8
  %add.ptr29 = getelementptr inbounds i8, i8* %38, i64 %call28
  store i8* %add.ptr29, i8** %p, align 8
  %call30 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.376, i32 0, i32 0)) #4
  br label %if.end.31

if.end.31:                                        ; preds = %if.then.27, %cond.end
  %39 = load %struct.win*, %struct.win** %wp, align 8
  %w_insert = getelementptr inbounds %struct.win, %struct.win* %39, i32 0, i32 50
  %40 = load i32, i32* %w_insert, align 4
  %tobool32 = icmp ne i32 %40, 0
  br i1 %tobool32, label %if.then.33, label %if.end.37

if.then.33:                                       ; preds = %if.end.31
  %41 = load i8*, i8** %p, align 8
  %call34 = call i64 @strlen(i8* %41) #8
  %42 = load i8*, i8** %p, align 8
  %add.ptr35 = getelementptr inbounds i8, i8* %42, i64 %call34
  store i8* %add.ptr35, i8** %p, align 8
  %call36 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.377, i32 0, i32 0)) #4
  br label %if.end.37

if.end.37:                                        ; preds = %if.then.33, %if.end.31
  %43 = load %struct.win*, %struct.win** %wp, align 8
  %w_origin = getelementptr inbounds %struct.win, %struct.win* %43, i32 0, i32 49
  %44 = load i32, i32* %w_origin, align 4
  %tobool38 = icmp ne i32 %44, 0
  br i1 %tobool38, label %if.then.39, label %if.end.43

if.then.39:                                       ; preds = %if.end.37
  %45 = load i8*, i8** %p, align 8
  %call40 = call i64 @strlen(i8* %45) #8
  %46 = load i8*, i8** %p, align 8
  %add.ptr41 = getelementptr inbounds i8, i8* %46, i64 %call40
  store i8* %add.ptr41, i8** %p, align 8
  %call42 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.378, i32 0, i32 0)) #4
  br label %if.end.43

if.end.43:                                        ; preds = %if.then.39, %if.end.37
  %47 = load %struct.win*, %struct.win** %wp, align 8
  %w_keypad = getelementptr inbounds %struct.win, %struct.win* %47, i32 0, i32 51
  %48 = load i32, i32* %w_keypad, align 4
  %tobool44 = icmp ne i32 %48, 0
  br i1 %tobool44, label %if.then.45, label %if.end.49

if.then.45:                                       ; preds = %if.end.43
  %49 = load i8*, i8** %p, align 8
  %call46 = call i64 @strlen(i8* %49) #8
  %50 = load i8*, i8** %p, align 8
  %add.ptr47 = getelementptr inbounds i8, i8* %50, i64 %call46
  store i8* %add.ptr47, i8** %p, align 8
  %call48 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr47, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.379, i32 0, i32 0)) #4
  br label %if.end.49

if.end.49:                                        ; preds = %if.then.45, %if.end.43
  %51 = load %struct.win*, %struct.win** %wp, align 8
  %w_log = getelementptr inbounds %struct.win, %struct.win* %51, i32 0, i32 68
  %52 = load %struct.logfile*, %struct.logfile** %w_log, align 8
  %tobool50 = icmp ne %struct.logfile* %52, null
  br i1 %tobool50, label %if.then.51, label %if.end.55

if.then.51:                                       ; preds = %if.end.49
  %53 = load i8*, i8** %p, align 8
  %call52 = call i64 @strlen(i8* %53) #8
  %54 = load i8*, i8** %p, align 8
  %add.ptr53 = getelementptr inbounds i8, i8* %54, i64 %call52
  store i8* %add.ptr53, i8** %p, align 8
  %call54 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.380, i32 0, i32 0)) #4
  br label %if.end.55

if.end.55:                                        ; preds = %if.then.51, %if.end.49
  %55 = load %struct.win*, %struct.win** %wp, align 8
  %w_monitor = getelementptr inbounds %struct.win, %struct.win* %55, i32 0, i32 70
  %56 = load i32, i32* %w_monitor, align 4
  %cmp56 = icmp ne i32 %56, 0
  br i1 %cmp56, label %land.lhs.true, label %if.end.67

land.lhs.true:                                    ; preds = %if.end.55
  %57 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %57, i32 0, i32 1
  %58 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %u_id = getelementptr inbounds %struct.acluser, %struct.acluser* %58, i32 0, i32 9
  %59 = load i32, i32* %u_id, align 4
  %shr = ashr i32 %59, 3
  %idxprom = sext i32 %shr to i64
  %60 = load %struct.win*, %struct.win** %wp, align 8
  %w_mon_notify = getelementptr inbounds %struct.win, %struct.win* %60, i32 0, i32 33
  %61 = load i8*, i8** %w_mon_notify, align 8
  %arrayidx = getelementptr inbounds i8, i8* %61, i64 %idxprom
  %62 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %62 to i32
  %63 = load %struct.display*, %struct.display** @display, align 8
  %d_user57 = getelementptr inbounds %struct.display, %struct.display* %63, i32 0, i32 1
  %64 = load %struct.acluser*, %struct.acluser** %d_user57, align 8
  %u_id58 = getelementptr inbounds %struct.acluser, %struct.acluser* %64, i32 0, i32 9
  %65 = load i32, i32* %u_id58, align 4
  %and59 = and i32 %65, 7
  %shr60 = ashr i32 128, %and59
  %and61 = and i32 %conv, %shr60
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %if.then.63, label %if.end.67

if.then.63:                                       ; preds = %land.lhs.true
  %66 = load i8*, i8** %p, align 8
  %call64 = call i64 @strlen(i8* %66) #8
  %67 = load i8*, i8** %p, align 8
  %add.ptr65 = getelementptr inbounds i8, i8* %67, i64 %call64
  store i8* %add.ptr65, i8** %p, align 8
  %call66 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.381, i32 0, i32 0)) #4
  br label %if.end.67

if.end.67:                                        ; preds = %if.then.63, %land.lhs.true, %if.end.55
  %68 = load %struct.win*, %struct.win** %wp, align 8
  %w_mouse = getelementptr inbounds %struct.win, %struct.win* %68, i32 0, i32 75
  %69 = load i32, i32* %w_mouse, align 4
  %tobool68 = icmp ne i32 %69, 0
  br i1 %tobool68, label %if.then.69, label %if.end.73

if.then.69:                                       ; preds = %if.end.67
  %70 = load i8*, i8** %p, align 8
  %call70 = call i64 @strlen(i8* %70) #8
  %71 = load i8*, i8** %p, align 8
  %add.ptr71 = getelementptr inbounds i8, i8* %71, i64 %call70
  store i8* %add.ptr71, i8** %p, align 8
  %call72 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr71, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.382, i32 0, i32 0)) #4
  br label %if.end.73

if.end.73:                                        ; preds = %if.then.69, %if.end.67
  %72 = load %struct.win*, %struct.win** %wp, align 8
  %w_bce = getelementptr inbounds %struct.win, %struct.win* %72, i32 0, i32 60
  %73 = load i32, i32* %w_bce, align 4
  %tobool74 = icmp ne i32 %73, 0
  br i1 %tobool74, label %if.then.75, label %if.end.79

if.then.75:                                       ; preds = %if.end.73
  %74 = load i8*, i8** %p, align 8
  %call76 = call i64 @strlen(i8* %74) #8
  %75 = load i8*, i8** %p, align 8
  %add.ptr77 = getelementptr inbounds i8, i8* %75, i64 %call76
  store i8* %add.ptr77, i8** %p, align 8
  %call78 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr77, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.383, i32 0, i32 0)) #4
  br label %if.end.79

if.end.79:                                        ; preds = %if.then.75, %if.end.73
  %76 = load %struct.win*, %struct.win** %wp, align 8
  %w_c1 = getelementptr inbounds %struct.win, %struct.win* %76, i32 0, i32 59
  %77 = load i32, i32* %w_c1, align 4
  %tobool80 = icmp ne i32 %77, 0
  br i1 %tobool80, label %if.end.85, label %if.then.81

if.then.81:                                       ; preds = %if.end.79
  %78 = load i8*, i8** %p, align 8
  %call82 = call i64 @strlen(i8* %78) #8
  %79 = load i8*, i8** %p, align 8
  %add.ptr83 = getelementptr inbounds i8, i8* %79, i64 %call82
  store i8* %add.ptr83, i8** %p, align 8
  %call84 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr83, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.384, i32 0, i32 0)) #4
  br label %if.end.85

if.end.85:                                        ; preds = %if.then.81, %if.end.79
  %80 = load %struct.win*, %struct.win** %wp, align 8
  %w_norefresh = getelementptr inbounds %struct.win, %struct.win* %80, i32 0, i32 74
  %81 = load i8, i8* %w_norefresh, align 1
  %tobool86 = icmp ne i8 %81, 0
  br i1 %tobool86, label %if.then.87, label %if.end.91

if.then.87:                                       ; preds = %if.end.85
  %82 = load i8*, i8** %p, align 8
  %call88 = call i64 @strlen(i8* %82) #8
  %83 = load i8*, i8** %p, align 8
  %add.ptr89 = getelementptr inbounds i8, i8* %83, i64 %call88
  store i8* %add.ptr89, i8** %p, align 8
  %call90 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.385, i32 0, i32 0)) #4
  br label %if.end.91

if.end.91:                                        ; preds = %if.then.87, %if.end.85
  %84 = load i8*, i8** %p, align 8
  %call92 = call i64 @strlen(i8* %84) #8
  %85 = load i8*, i8** %p, align 8
  %add.ptr93 = getelementptr inbounds i8, i8* %85, i64 %call92
  store i8* %add.ptr93, i8** %p, align 8
  %86 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer94 = getelementptr inbounds %struct.win, %struct.win* %86, i32 0, i32 3
  %l_encoding = getelementptr inbounds %struct.layer, %struct.layer* %w_layer94, i32 0, i32 5
  %87 = load i32, i32* %l_encoding, align 4
  %tobool95 = icmp ne i32 %87, 0
  br i1 %tobool95, label %land.lhs.true.96, label %if.end.117

land.lhs.true.96:                                 ; preds = %if.end.91
  %88 = load %struct.display*, %struct.display** @display, align 8
  %cmp97 = icmp eq %struct.display* %88, null
  br i1 %cmp97, label %if.then.109, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.96
  %89 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding = getelementptr inbounds %struct.display, %struct.display* %89, i32 0, i32 28
  %90 = load i32, i32* %d_encoding, align 4
  %91 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer99 = getelementptr inbounds %struct.win, %struct.win* %91, i32 0, i32 3
  %l_encoding100 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer99, i32 0, i32 5
  %92 = load i32, i32* %l_encoding100, align 4
  %cmp101 = icmp ne i32 %90, %92
  br i1 %cmp101, label %if.then.109, label %lor.lhs.false.103

lor.lhs.false.103:                                ; preds = %lor.lhs.false
  %93 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer104 = getelementptr inbounds %struct.win, %struct.win* %93, i32 0, i32 3
  %l_encoding105 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer104, i32 0, i32 5
  %94 = load i32, i32* %l_encoding105, align 4
  %call106 = call i32 @EncodingDefFont(i32 %94)
  %cmp107 = icmp sle i32 %call106, 0
  br i1 %cmp107, label %if.then.109, label %if.end.117

if.then.109:                                      ; preds = %lor.lhs.false.103, %lor.lhs.false, %land.lhs.true.96
  %95 = load i8*, i8** %p, align 8
  %incdec.ptr110 = getelementptr inbounds i8, i8* %95, i32 1
  store i8* %incdec.ptr110, i8** %p, align 8
  store i8 32, i8* %95, align 1
  %96 = load i8*, i8** %p, align 8
  %97 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer111 = getelementptr inbounds %struct.win, %struct.win* %97, i32 0, i32 3
  %l_encoding112 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer111, i32 0, i32 5
  %98 = load i32, i32* %l_encoding112, align 4
  %call113 = call i8* @EncodingName(i32 %98)
  %call114 = call i8* @strcpy(i8* %96, i8* %call113) #4
  %99 = load i8*, i8** %p, align 8
  %call115 = call i64 @strlen(i8* %99) #8
  %100 = load i8*, i8** %p, align 8
  %add.ptr116 = getelementptr inbounds i8, i8* %100, i64 %call115
  store i8* %add.ptr116, i8** %p, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.109, %lor.lhs.false.103, %if.end.91
  %101 = load %struct.win*, %struct.win** %wp, align 8
  %w_layer118 = getelementptr inbounds %struct.win, %struct.win* %101, i32 0, i32 3
  %l_encoding119 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer118, i32 0, i32 5
  %102 = load i32, i32* %l_encoding119, align 4
  %cmp120 = icmp ne i32 %102, 8
  br i1 %cmp120, label %if.then.122, label %if.end.205

if.then.122:                                      ; preds = %if.end.117
  %103 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs = getelementptr inbounds %struct.display, %struct.display* %103, i32 0, i32 83
  %arrayidx123 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs, i32 0, i64 100
  %str = bitcast %union.tcu* %arrayidx123 to i8**
  %104 = load i8*, i8** %str, align 8
  %tobool124 = icmp ne i8* %104, null
  br i1 %tobool124, label %if.then.136, label %lor.lhs.false.125

lor.lhs.false.125:                                ; preds = %if.then.122
  %105 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs126 = getelementptr inbounds %struct.display, %struct.display* %105, i32 0, i32 83
  %arrayidx127 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs126, i32 0, i64 98
  %str128 = bitcast %union.tcu* %arrayidx127 to i8**
  %106 = load i8*, i8** %str128, align 8
  %tobool129 = icmp ne i8* %106, null
  br i1 %tobool129, label %land.lhs.true.130, label %if.end.204

land.lhs.true.130:                                ; preds = %lor.lhs.false.125
  %107 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs131 = getelementptr inbounds %struct.display, %struct.display* %107, i32 0, i32 83
  %arrayidx132 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs131, i32 0, i64 98
  %str133 = bitcast %union.tcu* %arrayidx132 to i8**
  %108 = load i8*, i8** %str133, align 8
  %109 = load i8, i8* %108, align 1
  %conv134 = sext i8 %109 to i32
  %tobool135 = icmp ne i32 %conv134, 0
  br i1 %tobool135, label %if.then.136, label %if.end.204

if.then.136:                                      ; preds = %land.lhs.true.130, %if.then.122
  %110 = load %struct.win*, %struct.win** %wp, align 8
  %w_gr = getelementptr inbounds %struct.win, %struct.win* %110, i32 0, i32 58
  %111 = load i32, i32* %w_gr, align 4
  %cmp137 = icmp eq i32 %111, 2
  br i1 %cmp137, label %if.then.139, label %if.else.157

if.then.139:                                      ; preds = %if.then.136
  %112 = load i8*, i8** %p, align 8
  %113 = load %struct.win*, %struct.win** %wp, align 8
  %w_Charset = getelementptr inbounds %struct.win, %struct.win* %113, i32 0, i32 41
  %114 = load i32, i32* %w_Charset, align 4
  %add140 = add nsw i32 %114, 48
  %call141 = call i32 (i8*, i8*, ...) @sprintf(i8* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.386, i32 0, i32 0), i32 %add140) #4
  %115 = load %struct.win*, %struct.win** %wp, align 8
  %w_FontE = getelementptr inbounds %struct.win, %struct.win* %115, i32 0, i32 40
  %116 = load i8, i8* %w_FontE, align 1
  %conv142 = sext i8 %116 to i32
  %cmp143 = icmp sge i32 %conv142, 32
  br i1 %cmp143, label %if.then.145, label %if.else

if.then.145:                                      ; preds = %if.then.139
  %117 = load %struct.win*, %struct.win** %wp, align 8
  %w_FontE146 = getelementptr inbounds %struct.win, %struct.win* %117, i32 0, i32 40
  %118 = load i8, i8* %w_FontE146, align 1
  %119 = load i8*, i8** %p, align 8
  %arrayidx147 = getelementptr inbounds i8, i8* %119, i64 3
  store i8 %118, i8* %arrayidx147, align 1
  br label %if.end.154

if.else:                                          ; preds = %if.then.139
  %120 = load i8*, i8** %p, align 8
  %arrayidx148 = getelementptr inbounds i8, i8* %120, i64 3
  store i8 94, i8* %arrayidx148, align 1
  %121 = load %struct.win*, %struct.win** %wp, align 8
  %w_FontE149 = getelementptr inbounds %struct.win, %struct.win* %121, i32 0, i32 40
  %122 = load i8, i8* %w_FontE149, align 1
  %conv150 = sext i8 %122 to i32
  %xor = xor i32 %conv150, 64
  %conv151 = trunc i32 %xor to i8
  %123 = load i8*, i8** %p, align 8
  %arrayidx152 = getelementptr inbounds i8, i8* %123, i64 4
  store i8 %conv151, i8* %arrayidx152, align 1
  %124 = load i8*, i8** %p, align 8
  %incdec.ptr153 = getelementptr inbounds i8, i8* %124, i32 1
  store i8* %incdec.ptr153, i8** %p, align 8
  br label %if.end.154

if.end.154:                                       ; preds = %if.else, %if.then.145
  %125 = load i8*, i8** %p, align 8
  %arrayidx155 = getelementptr inbounds i8, i8* %125, i64 4
  store i8 91, i8* %arrayidx155, align 1
  %126 = load i8*, i8** %p, align 8
  %incdec.ptr156 = getelementptr inbounds i8, i8* %126, i32 1
  store i8* %incdec.ptr156, i8** %p, align 8
  br label %if.end.171

if.else.157:                                      ; preds = %if.then.136
  %127 = load %struct.win*, %struct.win** %wp, align 8
  %w_gr158 = getelementptr inbounds %struct.win, %struct.win* %127, i32 0, i32 58
  %128 = load i32, i32* %w_gr158, align 4
  %tobool159 = icmp ne i32 %128, 0
  br i1 %tobool159, label %if.then.160, label %if.else.166

if.then.160:                                      ; preds = %if.else.157
  %129 = load i8*, i8** %p, align 8
  %incdec.ptr161 = getelementptr inbounds i8, i8* %129, i32 1
  store i8* %incdec.ptr161, i8** %p, align 8
  %130 = load %struct.win*, %struct.win** %wp, align 8
  %w_Charset162 = getelementptr inbounds %struct.win, %struct.win* %130, i32 0, i32 41
  %131 = load i32, i32* %w_Charset162, align 4
  %add163 = add nsw i32 %131, 48
  %132 = load %struct.win*, %struct.win** %wp, align 8
  %w_CharsetR = getelementptr inbounds %struct.win, %struct.win* %132, i32 0, i32 42
  %133 = load i32, i32* %w_CharsetR, align 4
  %add164 = add nsw i32 %133, 48
  %call165 = call i32 (i8*, i8*, ...) @sprintf(i8* %129, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.387, i32 0, i32 0), i32 %add163, i32 %add164) #4
  br label %if.end.170

if.else.166:                                      ; preds = %if.else.157
  %134 = load i8*, i8** %p, align 8
  %135 = load %struct.win*, %struct.win** %wp, align 8
  %w_Charset167 = getelementptr inbounds %struct.win, %struct.win* %135, i32 0, i32 41
  %136 = load i32, i32* %w_Charset167, align 4
  %add168 = add nsw i32 %136, 48
  %call169 = call i32 (i8*, i8*, ...) @sprintf(i8* %134, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.388, i32 0, i32 0), i32 %add168) #4
  br label %if.end.170

if.end.170:                                       ; preds = %if.else.166, %if.then.160
  br label %if.end.171

if.end.171:                                       ; preds = %if.end.170, %if.end.154
  %137 = load i8*, i8** %p, align 8
  %add.ptr172 = getelementptr inbounds i8, i8* %137, i64 4
  store i8* %add.ptr172, i8** %p, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.171
  %138 = load i32, i32* %i, align 4
  %cmp173 = icmp slt i32 %138, 4
  br i1 %cmp173, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %139 = load i32, i32* %i, align 4
  %idxprom175 = sext i32 %139 to i64
  %140 = load %struct.win*, %struct.win** %wp, align 8
  %w_charsets = getelementptr inbounds %struct.win, %struct.win* %140, i32 0, i32 43
  %arrayidx176 = getelementptr inbounds [4 x i32], [4 x i32]* %w_charsets, i32 0, i64 %idxprom175
  %141 = load i32, i32* %arrayidx176, align 4
  %cmp177 = icmp eq i32 %141, 0
  br i1 %cmp177, label %if.then.179, label %if.else.181

if.then.179:                                      ; preds = %for.body
  %142 = load i8*, i8** %p, align 8
  %incdec.ptr180 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr180, i8** %p, align 8
  store i8 66, i8* %142, align 1
  br label %if.end.202

if.else.181:                                      ; preds = %for.body
  %143 = load i32, i32* %i, align 4
  %idxprom182 = sext i32 %143 to i64
  %144 = load %struct.win*, %struct.win** %wp, align 8
  %w_charsets183 = getelementptr inbounds %struct.win, %struct.win* %144, i32 0, i32 43
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %w_charsets183, i32 0, i64 %idxprom182
  %145 = load i32, i32* %arrayidx184, align 4
  %cmp185 = icmp sge i32 %145, 32
  br i1 %cmp185, label %if.then.187, label %if.else.193

if.then.187:                                      ; preds = %if.else.181
  %146 = load i32, i32* %i, align 4
  %idxprom188 = sext i32 %146 to i64
  %147 = load %struct.win*, %struct.win** %wp, align 8
  %w_charsets189 = getelementptr inbounds %struct.win, %struct.win* %147, i32 0, i32 43
  %arrayidx190 = getelementptr inbounds [4 x i32], [4 x i32]* %w_charsets189, i32 0, i64 %idxprom188
  %148 = load i32, i32* %arrayidx190, align 4
  %conv191 = trunc i32 %148 to i8
  %149 = load i8*, i8** %p, align 8
  %incdec.ptr192 = getelementptr inbounds i8, i8* %149, i32 1
  store i8* %incdec.ptr192, i8** %p, align 8
  store i8 %conv191, i8* %149, align 1
  br label %if.end.201

if.else.193:                                      ; preds = %if.else.181
  %150 = load i8*, i8** %p, align 8
  %incdec.ptr194 = getelementptr inbounds i8, i8* %150, i32 1
  store i8* %incdec.ptr194, i8** %p, align 8
  store i8 94, i8* %150, align 1
  %151 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %151 to i64
  %152 = load %struct.win*, %struct.win** %wp, align 8
  %w_charsets196 = getelementptr inbounds %struct.win, %struct.win* %152, i32 0, i32 43
  %arrayidx197 = getelementptr inbounds [4 x i32], [4 x i32]* %w_charsets196, i32 0, i64 %idxprom195
  %153 = load i32, i32* %arrayidx197, align 4
  %xor198 = xor i32 %153, 64
  %conv199 = trunc i32 %xor198 to i8
  %154 = load i8*, i8** %p, align 8
  %incdec.ptr200 = getelementptr inbounds i8, i8* %154, i32 1
  store i8* %incdec.ptr200, i8** %p, align 8
  store i8 %conv199, i8* %154, align 1
  br label %if.end.201

if.end.201:                                       ; preds = %if.else.193, %if.then.187
  br label %if.end.202

if.end.202:                                       ; preds = %if.end.201, %if.then.179
  br label %for.inc

for.inc:                                          ; preds = %if.end.202
  %155 = load i32, i32* %i, align 4
  %inc = add nsw i32 %155, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %156 = load i8*, i8** %p, align 8
  %incdec.ptr203 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %incdec.ptr203, i8** %p, align 8
  store i8 93, i8* %156, align 1
  %157 = load i8*, i8** %p, align 8
  store i8 0, i8* %157, align 1
  br label %if.end.204

if.end.204:                                       ; preds = %for.end, %land.lhs.true.130, %lor.lhs.false.125
  br label %if.end.205

if.end.205:                                       ; preds = %if.end.204, %if.end.117
  %158 = load %struct.win*, %struct.win** %wp, align 8
  %w_type = getelementptr inbounds %struct.win, %struct.win* %158, i32 0, i32 1
  %159 = load i32, i32* %w_type, align 4
  %cmp206 = icmp eq i32 %159, 1
  br i1 %cmp206, label %if.then.208, label %if.end.211

if.then.208:                                      ; preds = %if.end.205
  %160 = load i8*, i8** %p, align 8
  %incdec.ptr209 = getelementptr inbounds i8, i8* %160, i32 1
  store i8* %incdec.ptr209, i8** %p, align 8
  store i8 32, i8* %160, align 1
  %161 = load %struct.win*, %struct.win** %wp, align 8
  %w_ptyfd = getelementptr inbounds %struct.win, %struct.win* %161, i32 0, i32 15
  %162 = load i32, i32* %w_ptyfd, align 4
  %163 = load i8*, i8** %p, align 8
  %call210 = call i8* @TtyGetModemStatus(i32 %162, i8* %163)
  br label %if.end.211

if.end.211:                                       ; preds = %if.then.208, %if.end.205
  %arraydecay212 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  %164 = load %struct.win*, %struct.win** %wp, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %164, i32 0, i32 9
  %165 = load i32, i32* %w_number, align 4
  %166 = load %struct.win*, %struct.win** %wp, align 8
  %w_title = getelementptr inbounds %struct.win, %struct.win* %166, i32 0, i32 21
  %167 = load i8*, i8** %w_title, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.389, i32 0, i32 0), i8* %arraydecay212, i32 %165, i8* %167)
  br label %return

return:                                           ; preds = %if.end.211, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ShowDInfo() #0 {
entry:
  %buf = alloca [512 x i8], align 16
  %p = alloca i8*, align 8
  %0 = load %struct.display*, %struct.display** @display, align 8
  %cmp = icmp eq %struct.display* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  store i8* %arraydecay, i8** %p, align 8
  %1 = load i8*, i8** %p, align 8
  %2 = load %struct.display*, %struct.display** @display, align 8
  %d_width = getelementptr inbounds %struct.display, %struct.display* %2, i32 0, i32 16
  %3 = load i32, i32* %d_width, align 4
  %4 = load %struct.display*, %struct.display** @display, align 8
  %d_height = getelementptr inbounds %struct.display, %struct.display* %4, i32 0, i32 17
  %5 = load i32, i32* %d_height, align 4
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.390, i32 0, i32 0), i32 %3, i32 %5) #4
  %6 = load i8*, i8** %p, align 8
  %call1 = call i64 @strlen(i8* %6) #8
  %7 = load i8*, i8** %p, align 8
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %call1
  store i8* %add.ptr, i8** %p, align 8
  %8 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding = getelementptr inbounds %struct.display, %struct.display* %8, i32 0, i32 28
  %9 = load i32, i32* %d_encoding, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then.2, label %if.end.8

if.then.2:                                        ; preds = %if.end
  %10 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  store i8 32, i8* %10, align 1
  %11 = load i8*, i8** %p, align 8
  %12 = load %struct.display*, %struct.display** @display, align 8
  %d_encoding3 = getelementptr inbounds %struct.display, %struct.display* %12, i32 0, i32 28
  %13 = load i32, i32* %d_encoding3, align 4
  %call4 = call i8* @EncodingName(i32 %13)
  %call5 = call i8* @strcpy(i8* %11, i8* %call4) #4
  %14 = load i8*, i8** %p, align 8
  %call6 = call i64 @strlen(i8* %14) #8
  %15 = load i8*, i8** %p, align 8
  %add.ptr7 = getelementptr inbounds i8, i8* %15, i64 %call6
  store i8* %add.ptr7, i8** %p, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.2, %if.end
  %16 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs = getelementptr inbounds %struct.display, %struct.display* %16, i32 0, i32 83
  %arrayidx = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs, i32 0, i64 96
  %flg = bitcast %union.tcu* %arrayidx to i32*
  %17 = load i32, i32* %flg, align 4
  %tobool9 = icmp ne i32 %17, 0
  br i1 %tobool9, label %if.then.10, label %if.end.14

if.then.10:                                       ; preds = %if.end.8
  %18 = load i8*, i8** %p, align 8
  %call11 = call i8* @strcpy(i8* %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.391, i32 0, i32 0)) #4
  %19 = load i8*, i8** %p, align 8
  %call12 = call i64 @strlen(i8* %19) #8
  %20 = load i8*, i8** %p, align 8
  %add.ptr13 = getelementptr inbounds i8, i8* %20, i64 %call12
  store i8* %add.ptr13, i8** %p, align 8
  br label %if.end.14

if.end.14:                                        ; preds = %if.then.10, %if.end.8
  %21 = load %struct.display*, %struct.display** @display, align 8
  %d_hascolor = getelementptr inbounds %struct.display, %struct.display* %21, i32 0, i32 86
  %22 = load i32, i32* %d_hascolor, align 4
  %tobool15 = icmp ne i32 %22, 0
  br i1 %tobool15, label %if.then.16, label %if.end.20

if.then.16:                                       ; preds = %if.end.14
  %23 = load i8*, i8** %p, align 8
  %call17 = call i8* @strcpy(i8* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.392, i32 0, i32 0)) #4
  %24 = load i8*, i8** %p, align 8
  %call18 = call i64 @strlen(i8* %24) #8
  %25 = load i8*, i8** %p, align 8
  %add.ptr19 = getelementptr inbounds i8, i8* %25, i64 %call18
  store i8* %add.ptr19, i8** %p, align 8
  br label %if.end.20

if.end.20:                                        ; preds = %if.then.16, %if.end.14
  %26 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs21 = getelementptr inbounds %struct.display, %struct.display* %26, i32 0, i32 83
  %arrayidx22 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs21, i32 0, i64 97
  %flg23 = bitcast %union.tcu* %arrayidx22 to i32*
  %27 = load i32, i32* %flg23, align 4
  %tobool24 = icmp ne i32 %27, 0
  br i1 %tobool24, label %if.then.25, label %if.else

if.then.25:                                       ; preds = %if.end.20
  %28 = load i8*, i8** %p, align 8
  %call26 = call i8* @strcpy(i8* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.393, i32 0, i32 0)) #4
  %29 = load i8*, i8** %p, align 8
  %call27 = call i64 @strlen(i8* %29) #8
  %30 = load i8*, i8** %p, align 8
  %add.ptr28 = getelementptr inbounds i8, i8* %30, i64 %call27
  store i8* %add.ptr28, i8** %p, align 8
  br label %if.end.41

if.else:                                          ; preds = %if.end.20
  %31 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs29 = getelementptr inbounds %struct.display, %struct.display* %31, i32 0, i32 83
  %arrayidx30 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs29, i32 0, i64 98
  %str = bitcast %union.tcu* %arrayidx30 to i8**
  %32 = load i8*, i8** %str, align 8
  %tobool31 = icmp ne i8* %32, null
  br i1 %tobool31, label %land.lhs.true, label %if.end.40

land.lhs.true:                                    ; preds = %if.else
  %33 = load %struct.display*, %struct.display** @display, align 8
  %d_tcs32 = getelementptr inbounds %struct.display, %struct.display* %33, i32 0, i32 83
  %arrayidx33 = getelementptr inbounds [201 x %union.tcu], [201 x %union.tcu]* %d_tcs32, i32 0, i64 98
  %str34 = bitcast %union.tcu* %arrayidx33 to i8**
  %34 = load i8*, i8** %str34, align 8
  %35 = load i8, i8* %34, align 1
  %conv = sext i8 %35 to i32
  %tobool35 = icmp ne i32 %conv, 0
  br i1 %tobool35, label %if.then.36, label %if.end.40

if.then.36:                                       ; preds = %land.lhs.true
  %36 = load i8*, i8** %p, align 8
  %call37 = call i8* @strcpy(i8* %36, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.394, i32 0, i32 0)) #4
  %37 = load i8*, i8** %p, align 8
  %call38 = call i64 @strlen(i8* %37) #8
  %38 = load i8*, i8** %p, align 8
  %add.ptr39 = getelementptr inbounds i8, i8* %38, i64 %call38
  store i8* %add.ptr39, i8** %p, align 8
  br label %if.end.40

if.end.40:                                        ; preds = %if.then.36, %land.lhs.true, %if.else
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.then.25
  %arraydecay42 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %arraydecay42)
  br label %return

return:                                           ; preds = %if.end.41, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.action* @FindKtab(i8* %class, i32 %create) #0 {
entry:
  %retval = alloca %struct.action*, align 8
  %class.addr = alloca i8*, align 8
  %create.addr = alloca i32, align 4
  %kp = alloca %struct.kclass*, align 8
  %kpp = alloca %struct.kclass**, align 8
  %i = alloca i32, align 4
  store i8* %class, i8** %class.addr, align 8
  store i32 %create, i32* %create.addr, align 4
  %0 = load i8*, i8** %class.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.action* getelementptr inbounds ([338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i32 0), %struct.action** %retval
  br label %return

if.end:                                           ; preds = %entry
  store %struct.kclass** @kclasses, %struct.kclass*** %kpp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.kclass**, %struct.kclass*** %kpp, align 8
  %2 = load %struct.kclass*, %struct.kclass** %1, align 8
  store %struct.kclass* %2, %struct.kclass** %kp, align 8
  %cmp1 = icmp ne %struct.kclass* %2, null
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %name = getelementptr inbounds %struct.kclass, %struct.kclass* %3, i32 0, i32 1
  %4 = load i8*, i8** %name, align 8
  %5 = load i8*, i8** %class.addr, align 8
  %call = call i32 @strcmp(i8* %4, i8* %5) #8
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %for.body
  br label %for.end

if.end.3:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.3
  %6 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %next = getelementptr inbounds %struct.kclass, %struct.kclass* %6, i32 0, i32 0
  store %struct.kclass** %next, %struct.kclass*** %kpp, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.2, %for.cond
  %7 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %cmp4 = icmp eq %struct.kclass* %7, null
  br i1 %cmp4, label %if.then.5, label %if.end.34

if.then.5:                                        ; preds = %for.end
  %8 = load i32, i32* %create.addr, align 4
  %tobool6 = icmp ne i32 %8, 0
  br i1 %tobool6, label %if.end.8, label %if.then.7

if.then.7:                                        ; preds = %if.then.5
  store %struct.action* null, %struct.action** %retval
  br label %return

if.end.8:                                         ; preds = %if.then.5
  %9 = load i8*, i8** %class.addr, align 8
  %call9 = call i64 @strlen(i8* %9) #8
  %cmp10 = icmp ugt i64 %call9, 80
  br i1 %cmp10, label %if.then.11, label %if.end.12

if.then.11:                                       ; preds = %if.end.8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.348, i32 0, i32 0))
  store %struct.action* null, %struct.action** %retval
  br label %return

if.end.12:                                        ; preds = %if.end.8
  %call13 = call noalias i8* @malloc(i64 10832) #4
  %10 = bitcast i8* %call13 to %struct.kclass*
  store %struct.kclass* %10, %struct.kclass** %kp, align 8
  %11 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %cmp14 = icmp eq %struct.kclass* %11, null
  br i1 %cmp14, label %if.then.15, label %if.end.16

if.then.15:                                       ; preds = %if.end.12
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0))
  store %struct.action* null, %struct.action** %retval
  br label %return

if.end.16:                                        ; preds = %if.end.12
  %12 = load i8*, i8** %class.addr, align 8
  %call17 = call i8* @SaveStr(i8* %12)
  %13 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %name18 = getelementptr inbounds %struct.kclass, %struct.kclass* %13, i32 0, i32 1
  store i8* %call17, i8** %name18, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond.19

for.cond.19:                                      ; preds = %for.inc.31, %if.end.16
  %14 = load i32, i32* %i, align 4
  %cmp20 = icmp slt i32 %14, 338
  br i1 %cmp20, label %for.body.21, label %for.end.32

for.body.21:                                      ; preds = %for.cond.19
  %15 = load i32, i32* %i, align 4
  %idxprom = sext i32 %15 to i64
  %16 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %ktab = getelementptr inbounds %struct.kclass, %struct.kclass* %16, i32 0, i32 2
  %arrayidx = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* %ktab, i32 0, i64 %idxprom
  %nr = getelementptr inbounds %struct.action, %struct.action* %arrayidx, i32 0, i32 0
  store i32 -1, i32* %nr, align 4
  %17 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %17 to i64
  %18 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %ktab23 = getelementptr inbounds %struct.kclass, %struct.kclass* %18, i32 0, i32 2
  %arrayidx24 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* %ktab23, i32 0, i64 %idxprom22
  %args = getelementptr inbounds %struct.action, %struct.action* %arrayidx24, i32 0, i32 1
  store i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @noargs, i32 0, i32 0), i8*** %args, align 8
  %19 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %19 to i64
  %20 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %ktab26 = getelementptr inbounds %struct.kclass, %struct.kclass* %20, i32 0, i32 2
  %arrayidx27 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* %ktab26, i32 0, i64 %idxprom25
  %argl = getelementptr inbounds %struct.action, %struct.action* %arrayidx27, i32 0, i32 2
  store i32* null, i32** %argl, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %21 to i64
  %22 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %ktab29 = getelementptr inbounds %struct.kclass, %struct.kclass* %22, i32 0, i32 2
  %arrayidx30 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* %ktab29, i32 0, i64 %idxprom28
  %quiet = getelementptr inbounds %struct.action, %struct.action* %arrayidx30, i32 0, i32 3
  store i32 0, i32* %quiet, align 4
  br label %for.inc.31

for.inc.31:                                       ; preds = %for.body.21
  %23 = load i32, i32* %i, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond.19

for.end.32:                                       ; preds = %for.cond.19
  %24 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %next33 = getelementptr inbounds %struct.kclass, %struct.kclass* %24, i32 0, i32 0
  store %struct.kclass* null, %struct.kclass** %next33, align 8
  %25 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %26 = load %struct.kclass**, %struct.kclass*** %kpp, align 8
  store %struct.kclass* %25, %struct.kclass** %26, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %for.end.32, %for.end
  %27 = load %struct.kclass*, %struct.kclass** %kp, align 8
  %ktab35 = getelementptr inbounds %struct.kclass, %struct.kclass* %27, i32 0, i32 2
  %arraydecay = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* %ktab35, i32 0, i32 0
  store %struct.action* %arraydecay, %struct.action** %retval
  br label %return

return:                                           ; preds = %if.end.34, %if.then.15, %if.then.11, %if.then.7, %if.then
  %28 = load %struct.action*, %struct.action** %retval
  ret %struct.action* %28
}

declare void @SendBreak(%struct.win*, i32, i32) #2

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #3

declare void @ResizeLayer(%struct.layer*, i32, i32, %struct.display*) #2

declare void @ChangeScreenSize(i32, i32, i32) #2

declare i32 @ResizeDisplay(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @InputAKA() #0 {
entry:
  %s = alloca i8*, align 8
  %ss = alloca i8*, align 8
  %n = alloca i32, align 4
  %0 = load i32, i32* @enter_window_name_mode, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %for.end

if.end:                                           ; preds = %entry
  store i32 1, i32* @enter_window_name_mode, align 4
  call void @Input(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.395, i32 0, i32 0), i32 767, i32 0, void (i8*, i32, i8*)* @AKAfin, i8* null, i32 0)
  %1 = load %struct.win*, %struct.win** @fore, align 8
  %w_title = getelementptr inbounds %struct.win, %struct.win* %1, i32 0, i32 21
  %2 = load i8*, i8** %w_title, align 8
  store i8* %2, i8** %s, align 8
  %3 = load i8*, i8** %s, align 8
  %tobool = icmp ne i8* %3, null
  br i1 %tobool, label %if.end.2, label %if.then.1

if.then.1:                                        ; preds = %if.end
  br label %for.end

if.end.2:                                         ; preds = %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end.2
  %4 = load i8*, i8** %s, align 8
  %5 = load i8, i8* %4, align 1
  %tobool3 = icmp ne i8 %5, 0
  br i1 %tobool3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %s, align 8
  %7 = load i8, i8* %6, align 1
  %conv = zext i8 %7 to i32
  %and = and i32 %conv, 127
  %cmp4 = icmp slt i32 %and, 32
  br i1 %cmp4, label %if.then.9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %8 = load i8*, i8** %s, align 8
  %9 = load i8, i8* %8, align 1
  %conv6 = sext i8 %9 to i32
  %cmp7 = icmp eq i32 %conv6, 127
  br i1 %cmp7, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc

if.end.10:                                        ; preds = %lor.lhs.false
  %10 = load i8*, i8** %s, align 8
  store i8* %10, i8** %ss, align 8
  store i32 1, i32* %n, align 4
  %11 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn = getelementptr inbounds %struct.layer, %struct.layer* %11, i32 0, i32 6
  %12 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn, align 8
  %lf_LayProcess = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %12, i32 0, i32 0
  %13 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess, align 8
  call void %13(i8** %ss, i32* %n)
  br label %for.inc

for.inc:                                          ; preds = %if.end.10, %if.then.9
  %14 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then, %if.then.1, %for.cond
  ret void
}

declare void @ChangeAKA(%struct.win*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @Colonfin(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %mbuf = alloca [256 x i8], align 16
  %m = alloca i32, align 4
  %x = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %showmessage = alloca i32, align 4
  %s = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  call void @RemoveStatus()
  %0 = load i32, i32* %len.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i8*, i8** %buf.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 9
  br i1 %cmp, label %if.then, label %if.end.116

if.then:                                          ; preds = %entry
  store i32 0, i32* %l, align 4
  store i32 187, i32* %r, align 4
  store i32 0, i32* %showmessage, align 4
  %3 = load i8*, i8** %buf.addr, align 8
  store i8* %3, i8** %s, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end, %if.then
  %4 = load i8*, i8** %s, align 8
  %5 = load i8, i8* %4, align 1
  %conv2 = sext i8 %5 to i32
  %tobool = icmp ne i32 %conv2, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %6 = load i8*, i8** %s, align 8
  %7 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %8 = load i32, i32* %len.addr, align 4
  %conv3 = sext i32 %8 to i64
  %cmp4 = icmp slt i64 %sub.ptr.sub, %conv3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp4, %land.rhs ]
  br i1 %9, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %10 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  %11 = load i8, i8* %10, align 1
  %conv6 = sext i8 %11 to i32
  %cmp7 = icmp eq i32 %conv6, 32
  br i1 %cmp7, label %if.then.9, label %if.end

if.then.9:                                        ; preds = %while.body
  br label %if.end.135

if.end:                                           ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %land.end
  %12 = load %struct.display*, %struct.display** @display, align 8
  %tobool10 = icmp ne %struct.display* %12, null
  br i1 %tobool10, label %land.lhs.true, label %if.end.21

land.lhs.true:                                    ; preds = %while.end
  %13 = load i32, i32* @captionalways, align 4
  %tobool11 = icmp ne i32 %13, 0
  br i1 %tobool11, label %if.then.20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %14 = load %struct.display*, %struct.display** @display, align 8
  %d_has_hstatus = getelementptr inbounds %struct.display, %struct.display* %14, i32 0, i32 36
  %15 = load i32, i32* %d_has_hstatus, align 4
  %cmp12 = icmp eq i32 %15, 1
  br i1 %cmp12, label %if.then.20, label %lor.lhs.false.14

lor.lhs.false.14:                                 ; preds = %lor.lhs.false
  %16 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas = getelementptr inbounds %struct.display, %struct.display* %16, i32 0, i32 2
  %c_slperp = getelementptr inbounds %struct.canvas, %struct.canvas* %d_canvas, i32 0, i32 4
  %17 = load %struct.canvas*, %struct.canvas** %c_slperp, align 8
  %tobool15 = icmp ne %struct.canvas* %17, null
  br i1 %tobool15, label %land.lhs.true.16, label %if.end.21

land.lhs.true.16:                                 ; preds = %lor.lhs.false.14
  %18 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas17 = getelementptr inbounds %struct.display, %struct.display* %18, i32 0, i32 2
  %c_slperp18 = getelementptr inbounds %struct.canvas, %struct.canvas* %d_canvas17, i32 0, i32 4
  %19 = load %struct.canvas*, %struct.canvas** %c_slperp18, align 8
  %c_slnext = getelementptr inbounds %struct.canvas, %struct.canvas* %19, i32 0, i32 2
  %20 = load %struct.canvas*, %struct.canvas** %c_slnext, align 8
  %tobool19 = icmp ne %struct.canvas* %20, null
  br i1 %tobool19, label %if.then.20, label %if.end.21

if.then.20:                                       ; preds = %land.lhs.true.16, %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %showmessage, align 4
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.20, %land.lhs.true.16, %lor.lhs.false.14, %while.end
  br label %while.cond.22

while.cond.22:                                    ; preds = %if.end.108, %if.end.21
  %21 = load i32, i32* %l, align 4
  %22 = load i32, i32* %r, align 4
  %cmp23 = icmp sle i32 %21, %22
  br i1 %cmp23, label %while.body.25, label %while.end.109

while.body.25:                                    ; preds = %while.cond.22
  %23 = load i32, i32* %l, align 4
  %24 = load i32, i32* %r, align 4
  %add = add nsw i32 %23, %24
  %div = sdiv i32 %add, 2
  store i32 %div, i32* %m, align 4
  %25 = load i8*, i8** %buf.addr, align 8
  %26 = load i32, i32* %m, align 4
  %idxprom26 = sext i32 %26 to i64
  %arrayidx27 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom26
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx27, i32 0, i32 0
  %27 = load i8*, i8** %name, align 8
  %28 = load i32, i32* %len.addr, align 4
  %conv28 = sext i32 %28 to i64
  %call = call i32 @strncmp(i8* %25, i8* %27, i64 %conv28) #8
  store i32 %call, i32* %x, align 4
  %29 = load i32, i32* %x, align 4
  %cmp29 = icmp sgt i32 %29, 0
  br i1 %cmp29, label %if.then.31, label %if.else

if.then.31:                                       ; preds = %while.body.25
  %30 = load i32, i32* %m, align 4
  %add32 = add nsw i32 %30, 1
  store i32 %add32, i32* %l, align 4
  br label %if.end.108

if.else:                                          ; preds = %while.body.25
  %31 = load i32, i32* %x, align 4
  %cmp33 = icmp slt i32 %31, 0
  br i1 %cmp33, label %if.then.35, label %if.else.36

if.then.35:                                       ; preds = %if.else
  %32 = load i32, i32* %m, align 4
  %sub = sub nsw i32 %32, 1
  store i32 %sub, i32* %r, align 4
  br label %if.end.107

if.else.36:                                       ; preds = %if.else
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  store i8* %arraydecay, i8** %s, align 8
  %33 = load i32, i32* %m, align 4
  %sub37 = sub nsw i32 %33, 1
  store i32 %sub37, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else.36
  %34 = load i32, i32* %l, align 4
  %cmp38 = icmp sge i32 %34, 0
  br i1 %cmp38, label %land.rhs.40, label %land.end.48

land.rhs.40:                                      ; preds = %for.cond
  %35 = load i8*, i8** %buf.addr, align 8
  %36 = load i32, i32* %l, align 4
  %idxprom41 = sext i32 %36 to i64
  %arrayidx42 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom41
  %name43 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx42, i32 0, i32 0
  %37 = load i8*, i8** %name43, align 8
  %38 = load i32, i32* %len.addr, align 4
  %conv44 = sext i32 %38 to i64
  %call45 = call i32 @strncmp(i8* %35, i8* %37, i64 %conv44) #8
  %cmp46 = icmp eq i32 %call45, 0
  br label %land.end.48

land.end.48:                                      ; preds = %land.rhs.40, %for.cond
  %39 = phi i1 [ false, %for.cond ], [ %cmp46, %land.rhs.40 ]
  br i1 %39, label %for.body, label %for.end

for.body:                                         ; preds = %land.end.48
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %l, align 4
  %dec = add nsw i32 %40, -1
  store i32 %dec, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end.48
  %41 = load i32, i32* %l, align 4
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* %l, align 4
  store i32 %inc, i32* %m, align 4
  br label %for.cond.49

for.cond.49:                                      ; preds = %for.inc.78, %for.end
  %42 = load i32, i32* %m, align 4
  %43 = load i32, i32* %r, align 4
  %cmp50 = icmp sle i32 %42, %43
  br i1 %cmp50, label %land.lhs.true.52, label %land.end.67

land.lhs.true.52:                                 ; preds = %for.cond.49
  %44 = load i8*, i8** %buf.addr, align 8
  %45 = load i32, i32* %m, align 4
  %idxprom53 = sext i32 %45 to i64
  %arrayidx54 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom53
  %name55 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx54, i32 0, i32 0
  %46 = load i8*, i8** %name55, align 8
  %47 = load i32, i32* %len.addr, align 4
  %conv56 = sext i32 %47 to i64
  %call57 = call i32 @strncmp(i8* %44, i8* %46, i64 %conv56) #8
  %cmp58 = icmp eq i32 %call57, 0
  br i1 %cmp58, label %land.rhs.60, label %land.end.67

land.rhs.60:                                      ; preds = %land.lhs.true.52
  %48 = load i8*, i8** %s, align 8
  %arraydecay61 = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  %sub.ptr.lhs.cast62 = ptrtoint i8* %48 to i64
  %sub.ptr.rhs.cast63 = ptrtoint i8* %arraydecay61 to i64
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63
  %cmp65 = icmp ult i64 %sub.ptr.sub64, 256
  br label %land.end.67

land.end.67:                                      ; preds = %land.rhs.60, %land.lhs.true.52, %for.cond.49
  %49 = phi i1 [ false, %land.lhs.true.52 ], [ false, %for.cond.49 ], [ %cmp65, %land.rhs.60 ]
  br i1 %49, label %for.body.68, label %for.end.80

for.body.68:                                      ; preds = %land.end.67
  %50 = load i8*, i8** %s, align 8
  %51 = load i8*, i8** %s, align 8
  %arraydecay69 = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  %sub.ptr.lhs.cast70 = ptrtoint i8* %51 to i64
  %sub.ptr.rhs.cast71 = ptrtoint i8* %arraydecay69 to i64
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71
  %sub73 = sub i64 256, %sub.ptr.sub72
  %52 = load i32, i32* %m, align 4
  %idxprom74 = sext i32 %52 to i64
  %arrayidx75 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom74
  %name76 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx75, i32 0, i32 0
  %53 = load i8*, i8** %name76, align 8
  %call77 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %50, i64 %sub73, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.396, i32 0, i32 0), i8* %53) #4
  %54 = load i8*, i8** %s, align 8
  %idx.ext = sext i32 %call77 to i64
  %add.ptr = getelementptr inbounds i8, i8* %54, i64 %idx.ext
  store i8* %add.ptr, i8** %s, align 8
  br label %for.inc.78

for.inc.78:                                       ; preds = %for.body.68
  %55 = load i32, i32* %m, align 4
  %inc79 = add nsw i32 %55, 1
  store i32 %inc79, i32* %m, align 4
  br label %for.cond.49

for.end.80:                                       ; preds = %land.end.67
  %56 = load i32, i32* %l, align 4
  %57 = load i32, i32* %m, align 4
  %sub81 = sub nsw i32 %57, 1
  %cmp82 = icmp slt i32 %56, %sub81
  br i1 %cmp82, label %if.then.84, label %if.else.89

if.then.84:                                       ; preds = %for.end.80
  %58 = load i32, i32* %showmessage, align 4
  %tobool85 = icmp ne i32 %58, 0
  br i1 %tobool85, label %if.then.86, label %if.end.88

if.then.86:                                       ; preds = %if.then.84
  %arraydecay87 = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.397, i32 0, i32 0), i8* %arraydecay87)
  br label %if.end.88

if.end.88:                                        ; preds = %if.then.86, %if.then.84
  br label %if.end.106

if.else.89:                                       ; preds = %for.end.80
  %arraydecay90 = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  store i8* %arraydecay90, i8** %s, align 8
  %arraydecay91 = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  %59 = load i32, i32* %l, align 4
  %idxprom92 = sext i32 %59 to i64
  %arrayidx93 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom92
  %name94 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx93, i32 0, i32 0
  %60 = load i8*, i8** %name94, align 8
  %61 = load i32, i32* %len.addr, align 4
  %idx.ext95 = sext i32 %61 to i64
  %add.ptr96 = getelementptr inbounds i8, i8* %60, i64 %idx.ext95
  %call97 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay91, i64 256, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.398, i32 0, i32 0), i8* %add.ptr96) #4
  store i32 %call97, i32* %len.addr, align 4
  %62 = load i32, i32* %len.addr, align 4
  %cmp98 = icmp sgt i32 %62, 0
  br i1 %cmp98, label %land.lhs.true.100, label %if.end.105

land.lhs.true.100:                                ; preds = %if.else.89
  %63 = load i32, i32* %len.addr, align 4
  %conv101 = sext i32 %63 to i64
  %cmp102 = icmp ult i64 %conv101, 256
  br i1 %cmp102, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %land.lhs.true.100
  %64 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn = getelementptr inbounds %struct.layer, %struct.layer* %64, i32 0, i32 6
  %65 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn, align 8
  %lf_LayProcess = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %65, i32 0, i32 0
  %66 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess, align 8
  call void %66(i8** %s, i32* %len.addr)
  br label %if.end.105

if.end.105:                                       ; preds = %if.then.104, %land.lhs.true.100, %if.else.89
  br label %if.end.106

if.end.106:                                       ; preds = %if.end.105, %if.end.88
  br label %while.end.109

if.end.107:                                       ; preds = %if.then.35
  br label %if.end.108

if.end.108:                                       ; preds = %if.end.107, %if.then.31
  br label %while.cond.22

while.end.109:                                    ; preds = %if.end.106, %while.cond.22
  %67 = load i32, i32* %l, align 4
  %68 = load i32, i32* %r, align 4
  %cmp110 = icmp sgt i32 %67, %68
  br i1 %cmp110, label %land.lhs.true.112, label %if.end.115

land.lhs.true.112:                                ; preds = %while.end.109
  %69 = load i32, i32* %showmessage, align 4
  %tobool113 = icmp ne i32 %69, 0
  br i1 %tobool113, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %land.lhs.true.112
  %70 = load i32, i32* %len.addr, align 4
  %71 = load i8*, i8** %buf.addr, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.399, i32 0, i32 0), i32 %70, i8* %71)
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.114, %land.lhs.true.112, %while.end.109
  br label %if.end.135

if.end.116:                                       ; preds = %entry
  %72 = load i32, i32* %len.addr, align 4
  %tobool117 = icmp ne i32 %72, 0
  br i1 %tobool117, label %lor.lhs.false.118, label %if.then.123

lor.lhs.false.118:                                ; preds = %if.end.116
  %73 = load i32, i32* %len.addr, align 4
  %idxprom119 = sext i32 %73 to i64
  %74 = load i8*, i8** %buf.addr, align 8
  %arrayidx120 = getelementptr inbounds i8, i8* %74, i64 %idxprom119
  %75 = load i8, i8* %arrayidx120, align 1
  %conv121 = sext i8 %75 to i32
  %tobool122 = icmp ne i32 %conv121, 0
  br i1 %tobool122, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %lor.lhs.false.118, %if.end.116
  br label %if.end.135

if.end.124:                                       ; preds = %lor.lhs.false.118
  %76 = load i8*, i8** %buf.addr, align 8
  %call125 = call i64 @strlen(i8* %76) #8
  %add126 = add i64 %call125, 1
  %conv127 = trunc i64 %add126 to i32
  store i32 %conv127, i32* %len.addr, align 4
  %77 = load i32, i32* %len.addr, align 4
  %cmp128 = icmp sgt i32 %77, 256
  br i1 %cmp128, label %if.then.130, label %if.else.131

if.then.130:                                      ; preds = %if.end.124
  %78 = load i8*, i8** %buf.addr, align 8
  %79 = load i32, i32* %len.addr, align 4
  call void @RcLine(i8* %78, i32 %79)
  br label %if.end.135

if.else.131:                                      ; preds = %if.end.124
  %80 = load i8*, i8** %buf.addr, align 8
  %arraydecay132 = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  %81 = load i32, i32* %len.addr, align 4
  %conv133 = sext i32 %81 to i64
  call void @bcopy(i8* %80, i8* %arraydecay132, i64 %conv133) #4
  %arraydecay134 = getelementptr inbounds [256 x i8], [256 x i8]* %mbuf, i32 0, i32 0
  call void @RcLine(i8* %arraydecay134, i32 256)
  br label %if.end.135

if.end.135:                                       ; preds = %if.then.9, %if.end.115, %if.then.123, %if.else.131, %if.then.130
  ret void
}

; Function Attrs: nounwind uwtable
define void @DoScreen(i8* %fn, i8** %av) #0 {
entry:
  %fn.addr = alloca i8*, align 8
  %av.addr = alloca i8**, align 8
  %nwin = alloca %struct.NewWindow, align 8
  %num = alloca i32, align 4
  %buf = alloca [20 x i8], align 16
  store i8* %fn, i8** %fn.addr, align 8
  store i8** %av, i8*** %av.addr, align 8
  %0 = bitcast %struct.NewWindow* %nwin to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%struct.NewWindow* @nwin_undef to i8*), i64 120, i32 8, i1 false)
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog.85, %entry
  %1 = load i8**, i8*** %av.addr, align 8
  %tobool = icmp ne i8** %1, null
  br i1 %tobool, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %2 = load i8**, i8*** %av.addr, align 8
  %3 = load i8*, i8** %2, align 8
  %tobool1 = icmp ne i8* %3, null
  br i1 %tobool1, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load i8**, i8*** %av.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %4, i64 0
  %5 = load i8*, i8** %arrayidx, align 8
  %arrayidx2 = getelementptr inbounds i8, i8* %5, i64 0
  %6 = load i8, i8* %arrayidx2, align 1
  %conv = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv, 45
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %7 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp, %land.rhs ]
  br i1 %7, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %8 = load i8**, i8*** %av.addr, align 8
  %arrayidx4 = getelementptr inbounds i8*, i8** %8, i64 0
  %9 = load i8*, i8** %arrayidx4, align 8
  %arrayidx5 = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx5, align 1
  %conv6 = sext i8 %10 to i32
  %cmp7 = icmp eq i32 %conv6, 45
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %11 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr = getelementptr inbounds i8*, i8** %11, i32 1
  store i8** %incdec.ptr, i8*** %av.addr, align 8
  br label %while.end

if.end:                                           ; preds = %while.body
  %12 = load i8**, i8*** %av.addr, align 8
  %arrayidx9 = getelementptr inbounds i8*, i8** %12, i64 0
  %13 = load i8*, i8** %arrayidx9, align 8
  %arrayidx10 = getelementptr inbounds i8, i8* %13, i64 1
  %14 = load i8, i8* %arrayidx10, align 1
  %conv11 = sext i8 %14 to i32
  switch i32 %conv11, label %sw.default.81 [
    i32 102, label %sw.bb
    i32 116, label %sw.bb.20
    i32 84, label %sw.bb.35
    i32 104, label %sw.bb.51
    i32 108, label %sw.bb.67
    i32 97, label %sw.bb.78
    i32 77, label %sw.bb.79
    i32 76, label %sw.bb.80
  ]

sw.bb:                                            ; preds = %if.end
  %15 = load i8**, i8*** %av.addr, align 8
  %arrayidx12 = getelementptr inbounds i8*, i8** %15, i64 0
  %16 = load i8*, i8** %arrayidx12, align 8
  %arrayidx13 = getelementptr inbounds i8, i8* %16, i64 2
  %17 = load i8, i8* %arrayidx13, align 1
  %conv14 = sext i8 %17 to i32
  switch i32 %conv14, label %sw.default [
    i32 110, label %sw.bb.15
    i32 48, label %sw.bb.15
    i32 121, label %sw.bb.16
    i32 49, label %sw.bb.16
    i32 0, label %sw.bb.16
    i32 97, label %sw.bb.18
  ]

sw.bb.15:                                         ; preds = %sw.bb, %sw.bb
  %flowflag = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 6
  store i32 0, i32* %flowflag, align 4
  br label %sw.epilog

sw.bb.16:                                         ; preds = %sw.bb, %sw.bb, %sw.bb
  %flowflag17 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 6
  store i32 1, i32* %flowflag17, align 4
  br label %sw.epilog

sw.bb.18:                                         ; preds = %sw.bb
  %flowflag19 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 6
  store i32 4, i32* %flowflag19, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.18, %sw.bb.16, %sw.bb.15
  br label %sw.epilog.85

sw.bb.20:                                         ; preds = %if.end
  %18 = load i8**, i8*** %av.addr, align 8
  %arrayidx21 = getelementptr inbounds i8*, i8** %18, i64 0
  %19 = load i8*, i8** %arrayidx21, align 8
  %arrayidx22 = getelementptr inbounds i8, i8* %19, i64 2
  %20 = load i8, i8* %arrayidx22, align 1
  %tobool23 = icmp ne i8 %20, 0
  br i1 %tobool23, label %if.then.24, label %if.else

if.then.24:                                       ; preds = %sw.bb.20
  %21 = load i8**, i8*** %av.addr, align 8
  %arrayidx25 = getelementptr inbounds i8*, i8** %21, i64 0
  %22 = load i8*, i8** %arrayidx25, align 8
  %arrayidx26 = getelementptr inbounds i8, i8* %22, i64 2
  %aka = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 1
  store i8* %arrayidx26, i8** %aka, align 8
  br label %if.end.34

if.else:                                          ; preds = %sw.bb.20
  %23 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr27 = getelementptr inbounds i8*, i8** %23, i32 1
  store i8** %incdec.ptr27, i8*** %av.addr, align 8
  %24 = load i8*, i8** %incdec.ptr27, align 8
  %tobool28 = icmp ne i8* %24, null
  br i1 %tobool28, label %if.then.29, label %if.else.31

if.then.29:                                       ; preds = %if.else
  %25 = load i8**, i8*** %av.addr, align 8
  %26 = load i8*, i8** %25, align 8
  %aka30 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 1
  store i8* %26, i8** %aka30, align 8
  br label %if.end.33

if.else.31:                                       ; preds = %if.else
  %27 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr32 = getelementptr inbounds i8*, i8** %27, i32 -1
  store i8** %incdec.ptr32, i8*** %av.addr, align 8
  br label %if.end.33

if.end.33:                                        ; preds = %if.else.31, %if.then.29
  br label %if.end.34

if.end.34:                                        ; preds = %if.end.33, %if.then.24
  br label %sw.epilog.85

sw.bb.35:                                         ; preds = %if.end
  %28 = load i8**, i8*** %av.addr, align 8
  %arrayidx36 = getelementptr inbounds i8*, i8** %28, i64 0
  %29 = load i8*, i8** %arrayidx36, align 8
  %arrayidx37 = getelementptr inbounds i8, i8* %29, i64 2
  %30 = load i8, i8* %arrayidx37, align 1
  %tobool38 = icmp ne i8 %30, 0
  br i1 %tobool38, label %if.then.39, label %if.else.42

if.then.39:                                       ; preds = %sw.bb.35
  %31 = load i8**, i8*** %av.addr, align 8
  %arrayidx40 = getelementptr inbounds i8*, i8** %31, i64 0
  %32 = load i8*, i8** %arrayidx40, align 8
  %arrayidx41 = getelementptr inbounds i8, i8* %32, i64 2
  %term = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 4
  store i8* %arrayidx41, i8** %term, align 8
  br label %if.end.50

if.else.42:                                       ; preds = %sw.bb.35
  %33 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr43 = getelementptr inbounds i8*, i8** %33, i32 1
  store i8** %incdec.ptr43, i8*** %av.addr, align 8
  %34 = load i8*, i8** %incdec.ptr43, align 8
  %tobool44 = icmp ne i8* %34, null
  br i1 %tobool44, label %if.then.45, label %if.else.47

if.then.45:                                       ; preds = %if.else.42
  %35 = load i8**, i8*** %av.addr, align 8
  %36 = load i8*, i8** %35, align 8
  %term46 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 4
  store i8* %36, i8** %term46, align 8
  br label %if.end.49

if.else.47:                                       ; preds = %if.else.42
  %37 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr48 = getelementptr inbounds i8*, i8** %37, i32 -1
  store i8** %incdec.ptr48, i8*** %av.addr, align 8
  br label %if.end.49

if.end.49:                                        ; preds = %if.else.47, %if.then.45
  br label %if.end.50

if.end.50:                                        ; preds = %if.end.49, %if.then.39
  br label %sw.epilog.85

sw.bb.51:                                         ; preds = %if.end
  %38 = load i8**, i8*** %av.addr, align 8
  %arrayidx52 = getelementptr inbounds i8*, i8** %38, i64 0
  %39 = load i8*, i8** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i8, i8* %39, i64 2
  %40 = load i8, i8* %arrayidx53, align 1
  %tobool54 = icmp ne i8 %40, 0
  br i1 %tobool54, label %if.then.55, label %if.else.57

if.then.55:                                       ; preds = %sw.bb.51
  %41 = load i8**, i8*** %av.addr, align 8
  %arrayidx56 = getelementptr inbounds i8*, i8** %41, i64 0
  %42 = load i8*, i8** %arrayidx56, align 8
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 2
  %call = call i32 @atoi(i8* %add.ptr) #8
  %histheight = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 8
  store i32 %call, i32* %histheight, align 4
  br label %if.end.66

if.else.57:                                       ; preds = %sw.bb.51
  %43 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr58 = getelementptr inbounds i8*, i8** %43, i32 1
  store i8** %incdec.ptr58, i8*** %av.addr, align 8
  %44 = load i8*, i8** %incdec.ptr58, align 8
  %tobool59 = icmp ne i8* %44, null
  br i1 %tobool59, label %if.then.60, label %if.else.63

if.then.60:                                       ; preds = %if.else.57
  %45 = load i8**, i8*** %av.addr, align 8
  %46 = load i8*, i8** %45, align 8
  %call61 = call i32 @atoi(i8* %46) #8
  %histheight62 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 8
  store i32 %call61, i32* %histheight62, align 4
  br label %if.end.65

if.else.63:                                       ; preds = %if.else.57
  %47 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr64 = getelementptr inbounds i8*, i8** %47, i32 -1
  store i8** %incdec.ptr64, i8*** %av.addr, align 8
  br label %if.end.65

if.end.65:                                        ; preds = %if.else.63, %if.then.60
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.then.55
  br label %sw.epilog.85

sw.bb.67:                                         ; preds = %if.end
  %48 = load i8**, i8*** %av.addr, align 8
  %arrayidx68 = getelementptr inbounds i8*, i8** %48, i64 0
  %49 = load i8*, i8** %arrayidx68, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %49, i64 2
  %50 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %50 to i32
  switch i32 %conv70, label %sw.default.76 [
    i32 110, label %sw.bb.71
    i32 48, label %sw.bb.71
    i32 121, label %sw.bb.72
    i32 49, label %sw.bb.72
    i32 0, label %sw.bb.72
    i32 97, label %sw.bb.74
  ]

sw.bb.71:                                         ; preds = %sw.bb.67, %sw.bb.67
  %lflag = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 7
  store i32 0, i32* %lflag, align 4
  br label %sw.epilog.77

sw.bb.72:                                         ; preds = %sw.bb.67, %sw.bb.67, %sw.bb.67
  %lflag73 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 7
  store i32 1, i32* %lflag73, align 4
  br label %sw.epilog.77

sw.bb.74:                                         ; preds = %sw.bb.67
  %lflag75 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 7
  store i32 3, i32* %lflag75, align 4
  br label %sw.epilog.77

sw.default.76:                                    ; preds = %sw.bb.67
  br label %sw.epilog.77

sw.epilog.77:                                     ; preds = %sw.default.76, %sw.bb.74, %sw.bb.72, %sw.bb.71
  br label %sw.epilog.85

sw.bb.78:                                         ; preds = %if.end
  %aflag = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 5
  store i32 1, i32* %aflag, align 4
  br label %sw.epilog.85

sw.bb.79:                                         ; preds = %if.end
  %monitor = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 9
  store i32 1, i32* %monitor, align 4
  br label %sw.epilog.85

sw.bb.80:                                         ; preds = %if.end
  %Lflag = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 13
  store i32 1, i32* %Lflag, align 4
  br label %sw.epilog.85

sw.default.81:                                    ; preds = %if.end
  %51 = load i8*, i8** %fn.addr, align 8
  %52 = load i8**, i8*** %av.addr, align 8
  %arrayidx82 = getelementptr inbounds i8*, i8** %52, i64 0
  %53 = load i8*, i8** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i8, i8* %53, i64 1
  %54 = load i8, i8* %arrayidx83, align 1
  %conv84 = sext i8 %54 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.327, i32 0, i32 0), i8* %51, i32 %conv84)
  br label %sw.epilog.85

sw.epilog.85:                                     ; preds = %sw.default.81, %sw.bb.80, %sw.bb.79, %sw.bb.78, %sw.epilog.77, %if.end.66, %if.end.50, %if.end.34, %sw.epilog
  %55 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr86 = getelementptr inbounds i8*, i8** %55, i32 1
  store i8** %incdec.ptr86, i8*** %av.addr, align 8
  br label %while.cond

while.end:                                        ; preds = %if.then, %land.end
  store i32 0, i32* %num, align 4
  %56 = load i8**, i8*** %av.addr, align 8
  %tobool87 = icmp ne i8** %56, null
  br i1 %tobool87, label %land.lhs.true.88, label %if.end.117

land.lhs.true.88:                                 ; preds = %while.end
  %57 = load i8**, i8*** %av.addr, align 8
  %58 = load i8*, i8** %57, align 8
  %tobool89 = icmp ne i8* %58, null
  br i1 %tobool89, label %land.lhs.true.90, label %if.end.117

land.lhs.true.90:                                 ; preds = %land.lhs.true.88
  %59 = load i8**, i8*** %av.addr, align 8
  %60 = load i8*, i8** %59, align 8
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 0
  %call91 = call i32 @IsNumColon(i8* %60, i32 10, i8* %arraydecay, i32 20)
  %tobool92 = icmp ne i32 %call91, 0
  br i1 %tobool92, label %if.then.93, label %if.end.117

if.then.93:                                       ; preds = %land.lhs.true.90
  %arraydecay94 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 0
  %61 = load i8, i8* %arraydecay94, align 1
  %conv95 = sext i8 %61 to i32
  %cmp96 = icmp ne i32 %conv95, 0
  br i1 %cmp96, label %if.then.98, label %if.end.101

if.then.98:                                       ; preds = %if.then.93
  %arraydecay99 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i32 0, i32 0
  %aka100 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 1
  store i8* %arraydecay99, i8** %aka100, align 8
  br label %if.end.101

if.end.101:                                       ; preds = %if.then.98, %if.then.93
  %62 = load i8**, i8*** %av.addr, align 8
  %63 = load i8*, i8** %62, align 8
  %call102 = call i32 @atoi(i8* %63) #8
  store i32 %call102, i32* %num, align 4
  %64 = load i32, i32* %num, align 4
  %cmp103 = icmp slt i32 %64, 0
  br i1 %cmp103, label %if.then.114, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.101
  %65 = load i32, i32* @maxwin, align 4
  %tobool105 = icmp ne i32 %65, 0
  br i1 %tobool105, label %land.lhs.true.106, label %lor.lhs.false.109

land.lhs.true.106:                                ; preds = %lor.lhs.false
  %66 = load i32, i32* %num, align 4
  %67 = load i32, i32* @maxwin, align 4
  %sub = sub nsw i32 %67, 1
  %cmp107 = icmp sgt i32 %66, %sub
  br i1 %cmp107, label %if.then.114, label %lor.lhs.false.109

lor.lhs.false.109:                                ; preds = %land.lhs.true.106, %lor.lhs.false
  %68 = load i32, i32* @maxwin, align 4
  %tobool110 = icmp ne i32 %68, 0
  br i1 %tobool110, label %if.end.115, label %land.lhs.true.111

land.lhs.true.111:                                ; preds = %lor.lhs.false.109
  %69 = load i32, i32* %num, align 4
  %cmp112 = icmp sgt i32 %69, 99
  br i1 %cmp112, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %land.lhs.true.111, %land.lhs.true.106, %if.end.101
  %70 = load i8*, i8** %fn.addr, align 8
  %71 = load i32, i32* %num, align 4
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.328, i32 0, i32 0), i8* %70, i32 %71)
  store i32 0, i32* %num, align 4
  br label %if.end.115

if.end.115:                                       ; preds = %if.then.114, %land.lhs.true.111, %lor.lhs.false.109
  %72 = load i32, i32* %num, align 4
  %StartAt = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 0
  store i32 %72, i32* %StartAt, align 4
  %73 = load i8**, i8*** %av.addr, align 8
  %incdec.ptr116 = getelementptr inbounds i8*, i8** %73, i32 1
  store i8** %incdec.ptr116, i8*** %av.addr, align 8
  br label %if.end.117

if.end.117:                                       ; preds = %if.end.115, %land.lhs.true.90, %land.lhs.true.88, %while.end
  %74 = load i8**, i8*** %av.addr, align 8
  %tobool118 = icmp ne i8** %74, null
  br i1 %tobool118, label %land.lhs.true.119, label %if.end.128

land.lhs.true.119:                                ; preds = %if.end.117
  %75 = load i8**, i8*** %av.addr, align 8
  %76 = load i8*, i8** %75, align 8
  %tobool120 = icmp ne i8* %76, null
  br i1 %tobool120, label %if.then.121, label %if.end.128

if.then.121:                                      ; preds = %land.lhs.true.119
  %77 = load i8**, i8*** %av.addr, align 8
  %args = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 2
  store i8** %77, i8*** %args, align 8
  %aka122 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 1
  %78 = load i8*, i8** %aka122, align 8
  %tobool123 = icmp ne i8* %78, null
  br i1 %tobool123, label %if.end.127, label %if.then.124

if.then.124:                                      ; preds = %if.then.121
  %79 = load i8**, i8*** %av.addr, align 8
  %80 = load i8*, i8** %79, align 8
  %call125 = call i8* @Filename(i8* %80)
  %aka126 = getelementptr inbounds %struct.NewWindow, %struct.NewWindow* %nwin, i32 0, i32 1
  store i8* %call125, i8** %aka126, align 8
  br label %if.end.127

if.end.127:                                       ; preds = %if.then.124, %if.then.121
  br label %if.end.128

if.end.128:                                       ; preds = %if.end.127, %land.lhs.true.119, %if.end.117
  %call129 = call i32 @MakeWindow(%struct.NewWindow* %nwin)
  ret void
}

declare void @SetFlow(i32) #2

declare i32 @AclCheckPermWin(%struct.acluser*, i32, %struct.win*) #2

declare void @ResetAnsiState(%struct.win*) #2

declare void @WriteString(%struct.win*, i8*, i32) #2

declare void @zmodem_abort(%struct.win*, %struct.display*) #2

declare void @display_displays() #2

declare void @display_windows(i32, i32, %struct.win*) #2

declare void @display_help(i8*, %struct.action*) #2

declare void @display_copyright() #2

declare void @MarkRoutine() #2

declare i32 @GetHistory() #2

; Function Attrs: nounwind uwtable
define internal void @ins_reg_fn(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %pp = alloca %struct.plop*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %buf.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = zext i8 %1 to i32
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds %struct.plop, %struct.plop* getelementptr inbounds ([256 x %struct.plop], [256 x %struct.plop]* @plop_tab, i32 0, i32 0), i64 %idx.ext
  store %struct.plop* %add.ptr, %struct.plop** %pp, align 8
  %2 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %buf.addr, align 8
  store i8 0, i8* %3, align 1
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.win*, %struct.win** @fore, align 8
  %tobool1 = icmp ne %struct.win* %4, null
  br i1 %tobool1, label %if.end.3, label %if.then.2

if.then.2:                                        ; preds = %if.end
  br label %return

if.end.3:                                         ; preds = %if.end
  %5 = load i8*, i8** %buf.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv4 = sext i8 %6 to i32
  %cmp = icmp eq i32 %conv4, 46
  br i1 %cmp, label %if.then.6, label %if.end.7

if.then.6:                                        ; preds = %if.end.3
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.408, i32 0, i32 0))
  br label %if.end.7

if.end.7:                                         ; preds = %if.then.6, %if.end.3
  %7 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf8 = getelementptr inbounds %struct.plop, %struct.plop* %7, i32 0, i32 0
  %8 = load i8*, i8** %buf8, align 8
  %tobool9 = icmp ne i8* %8, null
  br i1 %tobool9, label %if.then.10, label %if.end.13

if.then.10:                                       ; preds = %if.end.7
  %9 = load %struct.win*, %struct.win** @fore, align 8
  %w_paster = getelementptr inbounds %struct.win, %struct.win* %9, i32 0, i32 80
  %10 = load %struct.plop*, %struct.plop** %pp, align 8
  %buf11 = getelementptr inbounds %struct.plop, %struct.plop* %10, i32 0, i32 0
  %11 = load i8*, i8** %buf11, align 8
  %12 = load %struct.plop*, %struct.plop** %pp, align 8
  %len12 = getelementptr inbounds %struct.plop, %struct.plop* %12, i32 0, i32 1
  %13 = load i32, i32* %len12, align 4
  call void @MakePaster(%struct.paster* %w_paster, i8* %11, i32 %13, i32 0)
  br label %return

if.end.13:                                        ; preds = %if.end.7
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.409, i32 0, i32 0))
  br label %return

return:                                           ; preds = %if.end.13, %if.then.10, %if.then.2, %if.then
  ret void
}

declare i32 @RecodeBuf(i8*, i32, i32, i32, i8*) #2

declare void @MakePaster(%struct.paster*, i8*, i32, i32) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: nounwind
declare void @bcopy(i8*, i8*, i64) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

declare void @KillBuffers() #2

; Function Attrs: nounwind uwtable
define void @SetEscape(%struct.acluser* %u, i32 %e, i32 %me) #0 {
entry:
  %u.addr = alloca %struct.acluser*, align 8
  %e.addr = alloca i32, align 4
  %me.addr = alloca i32, align 4
  store %struct.acluser* %u, %struct.acluser** %u.addr, align 8
  store i32 %e, i32* %e.addr, align 4
  store i32 %me, i32* %me.addr, align 4
  %0 = load %struct.acluser*, %struct.acluser** %u.addr, align 8
  %tobool = icmp ne %struct.acluser* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %e.addr, align 4
  %2 = load %struct.acluser*, %struct.acluser** %u.addr, align 8
  %u_Esc = getelementptr inbounds %struct.acluser, %struct.acluser* %2, i32 0, i32 6
  store i32 %1, i32* %u_Esc, align 4
  %3 = load i32, i32* %me.addr, align 4
  %4 = load %struct.acluser*, %struct.acluser** %u.addr, align 8
  %u_MetaEsc = getelementptr inbounds %struct.acluser, %struct.acluser* %4, i32 0, i32 7
  store i32 %3, i32* %u_MetaEsc, align 4
  br label %if.end.28

if.else:                                          ; preds = %entry
  %5 = load %struct.acluser*, %struct.acluser** @users, align 8
  %tobool1 = icmp ne %struct.acluser* %5, null
  br i1 %tobool1, label %if.then.2, label %if.end.9

if.then.2:                                        ; preds = %if.else
  %6 = load i32, i32* @DefaultEsc, align 4
  %cmp = icmp sge i32 %6, 0
  br i1 %cmp, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then.2
  %7 = load i32, i32* @DefaultEsc, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom
  call void @ClearAction(%struct.action* %arrayidx)
  br label %if.end

if.end:                                           ; preds = %if.then.3, %if.then.2
  %8 = load i32, i32* @DefaultMetaEsc, align 4
  %cmp4 = icmp sge i32 %8, 0
  br i1 %cmp4, label %if.then.5, label %if.end.8

if.then.5:                                        ; preds = %if.end
  %9 = load i32, i32* @DefaultMetaEsc, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom6
  call void @ClearAction(%struct.action* %arrayidx7)
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %if.end
  br label %if.end.9

if.end.9:                                         ; preds = %if.end.8, %if.else
  %10 = load i32, i32* %e.addr, align 4
  store i32 %10, i32* @DefaultEsc, align 4
  %11 = load i32, i32* %me.addr, align 4
  store i32 %11, i32* @DefaultMetaEsc, align 4
  %12 = load %struct.acluser*, %struct.acluser** @users, align 8
  %tobool10 = icmp ne %struct.acluser* %12, null
  br i1 %tobool10, label %if.then.11, label %if.end.27

if.then.11:                                       ; preds = %if.end.9
  %13 = load i32, i32* @DefaultEsc, align 4
  %cmp12 = icmp sge i32 %13, 0
  br i1 %cmp12, label %if.then.13, label %if.end.18

if.then.13:                                       ; preds = %if.then.11
  %14 = load i32, i32* @DefaultEsc, align 4
  %idxprom14 = sext i32 %14 to i64
  %arrayidx15 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom14
  call void @ClearAction(%struct.action* %arrayidx15)
  %15 = load i32, i32* @DefaultEsc, align 4
  %idxprom16 = sext i32 %15 to i64
  %arrayidx17 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom16
  %nr = getelementptr inbounds %struct.action, %struct.action* %arrayidx17, i32 0, i32 0
  store i32 120, i32* %nr, align 4
  br label %if.end.18

if.end.18:                                        ; preds = %if.then.13, %if.then.11
  %16 = load i32, i32* @DefaultMetaEsc, align 4
  %cmp19 = icmp sge i32 %16, 0
  br i1 %cmp19, label %if.then.20, label %if.end.26

if.then.20:                                       ; preds = %if.end.18
  %17 = load i32, i32* @DefaultMetaEsc, align 4
  %idxprom21 = sext i32 %17 to i64
  %arrayidx22 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom21
  call void @ClearAction(%struct.action* %arrayidx22)
  %18 = load i32, i32* @DefaultMetaEsc, align 4
  %idxprom23 = sext i32 %18 to i64
  %arrayidx24 = getelementptr inbounds [338 x %struct.action], [338 x %struct.action]* @ktab, i32 0, i64 %idxprom23
  %nr25 = getelementptr inbounds %struct.action, %struct.action* %arrayidx24, i32 0, i32 0
  store i32 108, i32* %nr25, align 4
  br label %if.end.26

if.end.26:                                        ; preds = %if.then.20, %if.end.18
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.end.9
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then
  ret void
}

declare void @CheckEscape() #2

; Function Attrs: nounwind
declare i32 @chdir(i8*) #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: nounwind uwtable
define i32 @ParseSaveStr(%struct.action* %act, i8** %var) #0 {
entry:
  %retval = alloca i32, align 4
  %act.addr = alloca %struct.action*, align 8
  %var.addr = alloca i8**, align 8
  %args = alloca i8**, align 8
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i8** %var, i8*** %var.addr, align 8
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %args1 = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 1
  %1 = load i8**, i8*** %args1, align 8
  store i8** %1, i8*** %args, align 8
  %2 = load i8**, i8*** %args, align 8
  %3 = load i8*, i8** %2, align 8
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8**, i8*** %args, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %4, i64 1
  %5 = load i8*, i8** %arrayidx, align 8
  %tobool = icmp ne i8* %5, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load i8*, i8** @rc_name, align 8
  %7 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %7, i32 0, i32 0
  %8 = load i32, i32* %nr, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx2 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx2, i32 0, i32 0
  %9 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.321, i32 0, i32 0), i8* %6, i8* %9)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8**, i8*** %var.addr, align 8
  %11 = load i8*, i8** %10, align 8
  %tobool3 = icmp ne i8* %11, null
  br i1 %tobool3, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %if.end
  %12 = load i8**, i8*** %var.addr, align 8
  %13 = load i8*, i8** %12, align 8
  call void @free(i8* %13) #4
  br label %if.end.5

if.end.5:                                         ; preds = %if.then.4, %if.end
  %14 = load i8**, i8*** %args, align 8
  %15 = load i8*, i8** %14, align 8
  %call = call i8* @SaveStr(i8* %15)
  %16 = load i8**, i8*** %var.addr, align 8
  store i8* %call, i8** %16, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.5, %if.then
  %17 = load i32, i32* %retval
  ret i32 %17
}

declare i32 @DoStartLog(%struct.win*, i8*, i32) #2

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #1

declare i8* @MakeTermcap(i32) #2

declare i32 @AddXChars(i8*, i32, i8*) #2

declare void @SlotToggle(i32) #2

declare void @SetTTY(i32, %struct.mode*) #2

declare void @MouseMode(i32) #2

declare void @RemoveStatus() #2

declare void @ShowHStatus(i8*) #2

declare void @RefreshHStatus() #2

declare void @RedisplayDisplays(i32) #2

declare i32 @TtyGrabConsole(i32, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ParseNum1000(%struct.action* %act, i32* %var) #0 {
entry:
  %retval = alloca i32, align 4
  %act.addr = alloca %struct.action*, align 8
  %var.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  %args = alloca i8**, align 8
  %dig = alloca i32, align 4
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i32* %var, i32** %var.addr, align 8
  %0 = load %struct.action*, %struct.action** %act.addr, align 8
  %args1 = getelementptr inbounds %struct.action, %struct.action* %0, i32 0, i32 1
  %1 = load i8**, i8*** %args1, align 8
  store i8** %1, i8*** %args, align 8
  store i32 0, i32* %dig, align 4
  %2 = load i8**, i8*** %args, align 8
  %3 = load i8*, i8** %2, align 8
  store i8* %3, i8** %p, align 8
  %4 = load i8*, i8** %p, align 8
  %cmp = icmp eq i8* %4, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %cmp2 = icmp eq i32 %conv, 0
  br i1 %cmp2, label %if.then, label %lor.lhs.false.4

lor.lhs.false.4:                                  ; preds = %lor.lhs.false
  %7 = load i8**, i8*** %args, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %7, i64 1
  %8 = load i8*, i8** %arrayidx, align 8
  %tobool = icmp ne i8* %8, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false.4, %lor.lhs.false, %entry
  %9 = load i8*, i8** @rc_name, align 8
  %10 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %10, i32 0, i32 0
  %11 = load i32, i32* %nr, align 4
  %idxprom = sext i32 %11 to i64
  %arrayidx5 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx5, i32 0, i32 0
  %12 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.322, i32 0, i32 0), i8* %9, i8* %12)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false.4
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.45, %if.end
  %13 = load i8*, i8** %p, align 8
  %14 = load i8, i8* %13, align 1
  %tobool6 = icmp ne i8 %14, 0
  br i1 %tobool6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %15 = load i8*, i8** %p, align 8
  %16 = load i8, i8* %15, align 1
  %conv7 = sext i8 %16 to i32
  %cmp8 = icmp sge i32 %conv7, 48
  br i1 %cmp8, label %land.lhs.true, label %if.else.31

land.lhs.true:                                    ; preds = %while.body
  %17 = load i8*, i8** %p, align 8
  %18 = load i8, i8* %17, align 1
  %conv10 = sext i8 %18 to i32
  %cmp11 = icmp sle i32 %conv10, 57
  br i1 %cmp11, label %if.then.13, label %if.else.31

if.then.13:                                       ; preds = %land.lhs.true
  %19 = load i32, i32* %dig, align 4
  %cmp14 = icmp slt i32 %19, 4
  br i1 %cmp14, label %if.then.16, label %if.else

if.then.16:                                       ; preds = %if.then.13
  %20 = load i32, i32* %i, align 4
  %mul = mul nsw i32 10, %20
  %21 = load i8*, i8** %p, align 8
  %22 = load i8, i8* %21, align 1
  %conv17 = sext i8 %22 to i32
  %sub = sub nsw i32 %conv17, 48
  %add = add nsw i32 %mul, %sub
  store i32 %add, i32* %i, align 4
  br label %if.end.26

if.else:                                          ; preds = %if.then.13
  %23 = load i32, i32* %dig, align 4
  %cmp18 = icmp eq i32 %23, 4
  br i1 %cmp18, label %land.lhs.true.20, label %if.end.25

land.lhs.true.20:                                 ; preds = %if.else
  %24 = load i8*, i8** %p, align 8
  %25 = load i8, i8* %24, align 1
  %conv21 = sext i8 %25 to i32
  %cmp22 = icmp sge i32 %conv21, 53
  br i1 %cmp22, label %if.then.24, label %if.end.25

if.then.24:                                       ; preds = %land.lhs.true.20
  %26 = load i32, i32* %i, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end.25

if.end.25:                                        ; preds = %if.then.24, %land.lhs.true.20, %if.else
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then.16
  %27 = load i32, i32* %dig, align 4
  %tobool27 = icmp ne i32 %27, 0
  br i1 %tobool27, label %if.then.28, label %if.end.30

if.then.28:                                       ; preds = %if.end.26
  %28 = load i32, i32* %dig, align 4
  %inc29 = add nsw i32 %28, 1
  store i32 %inc29, i32* %dig, align 4
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.28, %if.end.26
  br label %if.end.45

if.else.31:                                       ; preds = %land.lhs.true, %while.body
  %29 = load i8*, i8** %p, align 8
  %30 = load i8, i8* %29, align 1
  %conv32 = sext i8 %30 to i32
  %cmp33 = icmp eq i32 %conv32, 46
  br i1 %cmp33, label %land.lhs.true.35, label %if.else.39

land.lhs.true.35:                                 ; preds = %if.else.31
  %31 = load i32, i32* %dig, align 4
  %tobool36 = icmp ne i32 %31, 0
  br i1 %tobool36, label %if.else.39, label %if.then.37

if.then.37:                                       ; preds = %land.lhs.true.35
  %32 = load i32, i32* %dig, align 4
  %inc38 = add nsw i32 %32, 1
  store i32 %inc38, i32* %dig, align 4
  br label %if.end.44

if.else.39:                                       ; preds = %land.lhs.true.35, %if.else.31
  %33 = load i8*, i8** @rc_name, align 8
  %34 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr40 = getelementptr inbounds %struct.action, %struct.action* %34, i32 0, i32 0
  %35 = load i32, i32* %nr40, align 4
  %idxprom41 = sext i32 %35 to i64
  %arrayidx42 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom41
  %name43 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx42, i32 0, i32 0
  %36 = load i8*, i8** %name43, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.358, i32 0, i32 0), i8* %33, i8* %36)
  store i32 -1, i32* %retval
  br label %return

if.end.44:                                        ; preds = %if.then.37
  br label %if.end.45

if.end.45:                                        ; preds = %if.end.44, %if.end.30
  %37 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %38 = load i32, i32* %dig, align 4
  %cmp46 = icmp eq i32 %38, 0
  br i1 %cmp46, label %if.then.48, label %if.else.50

if.then.48:                                       ; preds = %while.end
  %39 = load i32, i32* %i, align 4
  %mul49 = mul nsw i32 %39, 1000
  store i32 %mul49, i32* %i, align 4
  br label %if.end.58

if.else.50:                                       ; preds = %while.end
  br label %while.cond.51

while.cond.51:                                    ; preds = %while.body.55, %if.else.50
  %40 = load i32, i32* %dig, align 4
  %inc52 = add nsw i32 %40, 1
  store i32 %inc52, i32* %dig, align 4
  %cmp53 = icmp slt i32 %40, 4
  br i1 %cmp53, label %while.body.55, label %while.end.57

while.body.55:                                    ; preds = %while.cond.51
  %41 = load i32, i32* %i, align 4
  %mul56 = mul nsw i32 %41, 10
  store i32 %mul56, i32* %i, align 4
  br label %while.cond.51

while.end.57:                                     ; preds = %while.cond.51
  br label %if.end.58

if.end.58:                                        ; preds = %while.end.57, %if.then.48
  %42 = load i32, i32* %i, align 4
  %cmp59 = icmp slt i32 %42, 0
  br i1 %cmp59, label %if.then.61, label %if.end.62

if.then.61:                                       ; preds = %if.end.58
  store i32 2147483647, i32* %i, align 4
  br label %if.end.62

if.end.62:                                        ; preds = %if.then.61, %if.end.58
  br label %do.body

do.body:                                          ; preds = %if.end.62
  br label %do.end

do.end:                                           ; preds = %do.body
  %43 = load i32, i32* %i, align 4
  %44 = load i32*, i32** %var.addr, align 8
  store i32 %43, i32* %44, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.else.39, %if.then
  %45 = load i32, i32* %retval
  ret i32 %45
}

declare i32 @WindowChangeNumber(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @CollapseWindowlist() #0 {
entry:
  %pos = alloca i32, align 4
  %moveto = alloca i32, align 4
  store i32 0, i32* %moveto, align 4
  store i32 1, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.9, %entry
  %0 = load i32, i32* %pos, align 4
  %cmp = icmp slt i32 %0, 100
  br i1 %cmp, label %for.body, label %for.end.11

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %pos, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx = getelementptr inbounds %struct.win*, %struct.win** %2, i64 %idxprom
  %3 = load %struct.win*, %struct.win** %arrayidx, align 8
  %tobool = icmp ne %struct.win* %3, null
  br i1 %tobool, label %if.then, label %if.end.8

if.then:                                          ; preds = %for.body
  br label %for.cond.1

for.cond.1:                                       ; preds = %for.inc, %if.then
  %4 = load i32, i32* %moveto, align 4
  %5 = load i32, i32* %pos, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body.3, label %for.end

for.body.3:                                       ; preds = %for.cond.1
  %6 = load i32, i32* %moveto, align 4
  %idxprom4 = sext i32 %6 to i64
  %7 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx5 = getelementptr inbounds %struct.win*, %struct.win** %7, i64 %idxprom4
  %8 = load %struct.win*, %struct.win** %arrayidx5, align 8
  %tobool6 = icmp ne %struct.win* %8, null
  br i1 %tobool6, label %if.end, label %if.then.7

if.then.7:                                        ; preds = %for.body.3
  %9 = load i32, i32* %pos, align 4
  %10 = load i32, i32* %moveto, align 4
  %call = call i32 @WindowChangeNumber(i32 %9, i32 %10)
  br label %for.end

if.end:                                           ; preds = %for.body.3
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %moveto, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %moveto, align 4
  br label %for.cond.1

for.end:                                          ; preds = %if.then.7, %for.cond.1
  br label %if.end.8

if.end.8:                                         ; preds = %for.end, %for.body
  br label %for.inc.9

for.inc.9:                                        ; preds = %if.end.8
  %12 = load i32, i32* %pos, align 4
  %inc10 = add nsw i32 %12, 1
  store i32 %inc10, i32* %pos, align 4
  br label %for.cond

for.end.11:                                       ; preds = %for.cond
  ret void
}

declare void @AclWinSwap(i32, i32) #2

declare i32 @ChangeWindowSize(%struct.win*, i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare i8* @index(i8*, i32) #3

; Function Attrs: nounwind
declare i32 @getpid() #1

; Function Attrs: nounwind
declare i32 @access(i8*, i32) #1

; Function Attrs: nounwind
declare i32 @rename(i8*, i8*) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #1

declare void @MakeNewEnv() #2

; Function Attrs: nounwind uwtable
define internal void @InputSetenv(i8* %arg) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8*, i8** %arg.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %arg.addr, align 8
  %call = call i8* @strncpy(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @setenv_var, i32 0, i32 0), i8* %1, i64 30) #4
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @InputSetenv.setenv_buf, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @setenv_var, i32 0, i32 0)) #4
  call void @Input(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @InputSetenv.setenv_buf, i32 0, i32 0), i32 30, i32 0, void (i8*, i32, i8*)* @SetenvFin2, i8* null, i32 0)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @Input(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.404, i32 0, i32 0), i32 30, i32 0, void (i8*, i32, i8*)* @SetenvFin1, i8* null, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

declare void @xsetenv(i8*, i8*) #2

; Function Attrs: nounwind
declare i32 @unsetenv(i8*) #1

; Function Attrs: nounwind uwtable
define i32 @CompileKeys(i8* %s, i32 %sl, i8* %array) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %sl.addr = alloca i32, align 4
  %array.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %key = alloca i8, align 1
  %value = alloca i8, align 1
  store i8* %s, i8** %s.addr, align 8
  store i32 %sl, i32* %sl.addr, align 4
  store i8* %array, i8** %array.addr, align 8
  %0 = load i32, i32* %sl.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %1, 256
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %conv = trunc i32 %2 to i8
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load i8*, i8** %array.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.body
  br label %while.cond

while.cond:                                       ; preds = %if.end.29, %do.end
  %6 = load i32, i32* %sl.addr, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  %8 = load i8, i8* %7, align 1
  store i8 %8, i8* %key, align 1
  %9 = load i8*, i8** %s.addr, align 8
  %10 = load i8, i8* %9, align 1
  %conv2 = sext i8 %10 to i32
  %cmp3 = icmp ne i32 %conv2, 61
  br i1 %cmp3, label %if.then.7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %11 = load i32, i32* %sl.addr, align 4
  %cmp5 = icmp slt i32 %11, 3
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %lor.lhs.false, %while.body
  store i32 -1, i32* %retval
  br label %return

if.end.8:                                         ; preds = %lor.lhs.false
  %12 = load i32, i32* %sl.addr, align 4
  %dec = add nsw i32 %12, -1
  store i32 %dec, i32* %sl.addr, align 4
  br label %do.body.9

do.body.9:                                        ; preds = %land.end, %if.end.8
  %13 = load i8*, i8** %s.addr, align 8
  %incdec.ptr10 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr10, i8** %s.addr, align 8
  %14 = load i32, i32* %sl.addr, align 4
  %sub = sub nsw i32 %14, 2
  store i32 %sub, i32* %sl.addr, align 4
  %15 = load i8*, i8** %s.addr, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %s.addr, align 8
  %16 = load i8, i8* %15, align 1
  store i8 %16, i8* %value, align 1
  %17 = load i8, i8* %key, align 1
  %18 = load i8, i8* %value, align 1
  %idxprom12 = zext i8 %18 to i64
  %19 = load i8*, i8** %array.addr, align 8
  %arrayidx13 = getelementptr inbounds i8, i8* %19, i64 %idxprom12
  store i8 %17, i8* %arrayidx13, align 1
  br label %do.cond

do.cond:                                          ; preds = %do.body.9
  %20 = load i8*, i8** %s.addr, align 8
  %21 = load i8, i8* %20, align 1
  %conv14 = sext i8 %21 to i32
  %cmp15 = icmp eq i32 %conv14, 61
  br i1 %cmp15, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %do.cond
  %22 = load i32, i32* %sl.addr, align 4
  %cmp17 = icmp sge i32 %22, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %23 = phi i1 [ false, %do.cond ], [ %cmp17, %land.rhs ]
  br i1 %23, label %do.body.9, label %do.end.19

do.end.19:                                        ; preds = %land.end
  %24 = load i32, i32* %sl.addr, align 4
  %cmp20 = icmp eq i32 %24, 0
  br i1 %cmp20, label %if.then.22, label %if.end.23

if.then.22:                                       ; preds = %do.end.19
  br label %while.end

if.end.23:                                        ; preds = %do.end.19
  %25 = load i8*, i8** %s.addr, align 8
  %incdec.ptr24 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr24, i8** %s.addr, align 8
  %26 = load i8, i8* %25, align 1
  %conv25 = sext i8 %26 to i32
  %cmp26 = icmp ne i32 %conv25, 58
  br i1 %cmp26, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %if.end.23
  store i32 -1, i32* %retval
  br label %return

if.end.29:                                        ; preds = %if.end.23
  %27 = load i32, i32* %sl.addr, align 4
  %dec30 = add nsw i32 %27, -1
  store i32 %dec30, i32* %sl.addr, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then.22, %while.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then.28, %if.then.7, %for.end
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal i32 @ParseBase(%struct.action* %act, i8* %p, i32* %var, i32 %base, i8* %bname) #0 {
entry:
  %retval = alloca i32, align 4
  %act.addr = alloca %struct.action*, align 8
  %p.addr = alloca i8*, align 8
  %var.addr = alloca i32*, align 8
  %base.addr = alloca i32, align 4
  %bname.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.action* %act, %struct.action** %act.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  store i32* %var, i32** %var.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  store i8* %bname, i8** %bname.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i8*, i8** %p.addr, align 8
  %1 = load i8, i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** @rc_name, align 8
  %3 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr = getelementptr inbounds %struct.action, %struct.action* %3, i32 0, i32 0
  %4 = load i32, i32* %nr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx, i32 0, i32 0
  %5 = load i8*, i8** %name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.360, i32 0, i32 0), i8* %2, i8* %5)
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end.27, %if.end
  %6 = load i8*, i8** %p.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1
  store i8* %incdec.ptr, i8** %p.addr, align 8
  %7 = load i8, i8* %6, align 1
  %conv2 = sext i8 %7 to i32
  store i32 %conv2, i32* %c, align 4
  %tobool = icmp ne i32 %conv2, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i32, i32* %c, align 4
  %cmp3 = icmp sge i32 %8, 97
  br i1 %cmp3, label %land.lhs.true, label %if.end.8

land.lhs.true:                                    ; preds = %while.body
  %9 = load i32, i32* %c, align 4
  %cmp5 = icmp sle i32 %9, 122
  br i1 %cmp5, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* %c, align 4
  %sub = sub nsw i32 %10, 32
  store i32 %sub, i32* %c, align 4
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.7, %land.lhs.true, %while.body
  %11 = load i32, i32* %c, align 4
  %cmp9 = icmp sge i32 %11, 65
  br i1 %cmp9, label %land.lhs.true.11, label %if.end.16

land.lhs.true.11:                                 ; preds = %if.end.8
  %12 = load i32, i32* %c, align 4
  %cmp12 = icmp sle i32 %12, 90
  br i1 %cmp12, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %land.lhs.true.11
  %13 = load i32, i32* %c, align 4
  %sub15 = sub nsw i32 %13, 7
  store i32 %sub15, i32* %c, align 4
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %land.lhs.true.11, %if.end.8
  %14 = load i32, i32* %c, align 4
  %sub17 = sub nsw i32 %14, 48
  store i32 %sub17, i32* %c, align 4
  %15 = load i32, i32* %c, align 4
  %cmp18 = icmp slt i32 %15, 0
  br i1 %cmp18, label %if.then.22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.16
  %16 = load i32, i32* %c, align 4
  %17 = load i32, i32* %base.addr, align 4
  %cmp20 = icmp sge i32 %16, %17
  br i1 %cmp20, label %if.then.22, label %if.end.27

if.then.22:                                       ; preds = %lor.lhs.false, %if.end.16
  %18 = load i8*, i8** @rc_name, align 8
  %19 = load %struct.action*, %struct.action** %act.addr, align 8
  %nr23 = getelementptr inbounds %struct.action, %struct.action* %19, i32 0, i32 0
  %20 = load i32, i32* %nr23, align 4
  %idxprom24 = sext i32 %20 to i64
  %arrayidx25 = getelementptr inbounds [0 x %struct.comm], [0 x %struct.comm]* @comms, i32 0, i64 %idxprom24
  %name26 = getelementptr inbounds %struct.comm, %struct.comm* %arrayidx25, i32 0, i32 0
  %21 = load i8*, i8** %name26, align 8
  %22 = load i8*, i8** %bname.addr, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.361, i32 0, i32 0), i8* %18, i8* %21, i8* %22)
  store i32 -1, i32* %retval
  br label %return

if.end.27:                                        ; preds = %lor.lhs.false
  %23 = load i32, i32* %base.addr, align 4
  %24 = load i32, i32* %i, align 4
  %mul = mul nsw i32 %23, %24
  %25 = load i32, i32* %c, align 4
  %add = add nsw i32 %mul, %25
  store i32 %add, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %do.body

do.body:                                          ; preds = %while.end
  br label %do.end

do.end:                                           ; preds = %do.body
  %26 = load i32, i32* %i, align 4
  %27 = load i32*, i32** %var.addr, align 8
  store i32 %26, i32* %27, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.then.22, %if.then
  %28 = load i32, i32* %retval
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal void @pass1(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %u = alloca %struct.acluser*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.acluser*
  store %struct.acluser* %1, %struct.acluser** %u, align 8
  %2 = load i8*, i8** %buf.addr, align 8
  %3 = load i8, i8* %2, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.body
  %4 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password = getelementptr inbounds %struct.acluser, %struct.acluser* %4, i32 0, i32 2
  %5 = load i8*, i8** %u_password, align 8
  %cmp = icmp ne i8* %5, getelementptr inbounds ([1 x i8], [1 x i8]* @NullStr, i32 0, i32 0)
  br i1 %cmp, label %if.then.1, label %if.end.3

if.then.1:                                        ; preds = %do.end
  %6 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password2 = getelementptr inbounds %struct.acluser, %struct.acluser* %6, i32 0, i32 2
  %7 = load i8*, i8** %u_password2, align 8
  call void @free(i8* %7) #4
  br label %if.end.3

if.end.3:                                         ; preds = %if.then.1, %do.end
  %8 = load i8*, i8** %buf.addr, align 8
  %call = call i8* @SaveStr(i8* %8)
  %9 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password4 = getelementptr inbounds %struct.acluser, %struct.acluser* %9, i32 0, i32 2
  store i8* %call, i8** %u_password4, align 8
  %10 = load i8*, i8** %buf.addr, align 8
  %11 = load i8*, i8** %buf.addr, align 8
  %call5 = call i64 @strlen(i8* %11) #8
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 %call5, i32 1, i1 false)
  %12 = load i8*, i8** %data.addr, align 8
  call void @Input(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.413, i32 0, i32 0), i32 100, i32 1, void (i8*, i32, i8*)* @pass2, i8* %12, i32 0)
  br label %return

return:                                           ; preds = %if.end.3, %if.then
  ret void
}

declare void @display_bindkey(i8*, %struct.action*) #2

declare i8* @xrealloc(i8*, i32) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #4

declare i32 @remap(i32, i32) #2

declare i32 @UsersAcl(%struct.acluser*, i32, i8**) #2

declare i32 @UserDel(i8*, %struct.acluser**) #2

declare i32 @AclLinkUser(i8*, i8*) #2

declare %struct.acluser** @FindUserPtr(i8*) #2

declare i32 @AclUmask(%struct.acluser*, i8*, i8**) #2

declare i32 @chsock() #2

declare i32 @winexec(i8**) #2

declare i32 @LoadFontTranslation(i32, i8*) #2

declare void @WinSwitchEncoding(%struct.win*, i32) #2

declare void @ResetCharsets(%struct.win*) #2

; Function Attrs: nounwind uwtable
define internal i32 @digraph_find(i8* %buf) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 512
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom
  %d = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx, i32 0, i32 0
  %arrayidx1 = getelementptr inbounds [2 x i8], [2 x i8]* %d, i32 0, i64 0
  %2 = load i8, i8* %arrayidx1, align 1
  %conv = zext i8 %2 to i32
  %tobool = icmp ne i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %3 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ]
  br i1 %3, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom2
  %d4 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx3, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [2 x i8], [2 x i8]* %d4, i32 0, i64 0
  %5 = load i8, i8* %arrayidx5, align 1
  %conv6 = zext i8 %5 to i32
  %6 = load i8*, i8** %buf.addr, align 8
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 0
  %7 = load i8, i8* %arrayidx7, align 1
  %conv8 = zext i8 %7 to i32
  %cmp9 = icmp eq i32 %conv6, %conv8
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom11
  %d13 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx12, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [2 x i8], [2 x i8]* %d13, i32 0, i64 1
  %9 = load i8, i8* %arrayidx14, align 1
  %conv15 = zext i8 %9 to i32
  %10 = load i8*, i8** %buf.addr, align 8
  %arrayidx16 = getelementptr inbounds i8, i8* %10, i64 1
  %11 = load i8, i8* %arrayidx16, align 1
  %conv17 = zext i8 %11 to i32
  %cmp18 = icmp eq i32 %conv15, %conv17
  br i1 %cmp18, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %12 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %12 to i64
  %arrayidx21 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom20
  %d22 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx21, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [2 x i8], [2 x i8]* %d22, i32 0, i64 0
  %13 = load i8, i8* %arrayidx23, align 1
  %conv24 = zext i8 %13 to i32
  %14 = load i8*, i8** %buf.addr, align 8
  %arrayidx25 = getelementptr inbounds i8, i8* %14, i64 1
  %15 = load i8, i8* %arrayidx25, align 1
  %conv26 = zext i8 %15 to i32
  %cmp27 = icmp eq i32 %conv24, %conv26
  br i1 %cmp27, label %land.lhs.true.29, label %if.end

land.lhs.true.29:                                 ; preds = %lor.lhs.false
  %16 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %16 to i64
  %arrayidx31 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom30
  %d32 = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx31, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [2 x i8], [2 x i8]* %d32, i32 0, i64 1
  %17 = load i8, i8* %arrayidx33, align 1
  %conv34 = zext i8 %17 to i32
  %18 = load i8*, i8** %buf.addr, align 8
  %arrayidx35 = getelementptr inbounds i8, i8* %18, i64 0
  %19 = load i8, i8* %arrayidx35, align 1
  %conv36 = zext i8 %19 to i32
  %cmp37 = icmp eq i32 %conv34, %conv36
  br i1 %cmp37, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true.29, %land.lhs.true
  br label %for.end

if.end:                                           ; preds = %land.lhs.true.29, %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %i, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %land.end
  %21 = load i32, i32* %i, align 4
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @parse_input_int(i8* %buf, i32 %len, i32* %val) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %val.addr = alloca i32*, align 8
  %x = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32* %val, i32** %val.addr, align 8
  store i32 0, i32* %x, align 4
  %0 = load i32, i32* %len.addr, align 4
  %cmp = icmp sge i32 %0, 1
  br i1 %cmp, label %land.lhs.true, label %if.else.76

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp1 = icmp eq i32 %conv, 85
  br i1 %cmp1, label %land.lhs.true.3, label %lor.lhs.false

land.lhs.true.3:                                  ; preds = %land.lhs.true
  %3 = load i8*, i8** %buf.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 1
  %4 = load i8, i8* %arrayidx, align 1
  %conv4 = sext i8 %4 to i32
  %cmp5 = icmp eq i32 %conv4, 43
  br i1 %cmp5, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true.3, %land.lhs.true
  %5 = load i8*, i8** %buf.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv7 = sext i8 %6 to i32
  %cmp8 = icmp eq i32 %conv7, 48
  br i1 %cmp8, label %land.lhs.true.10, label %if.else.76

land.lhs.true.10:                                 ; preds = %lor.lhs.false
  %7 = load i8*, i8** %buf.addr, align 8
  %arrayidx11 = getelementptr inbounds i8, i8* %7, i64 1
  %8 = load i8, i8* %arrayidx11, align 1
  %conv12 = sext i8 %8 to i32
  %cmp13 = icmp eq i32 %conv12, 120
  br i1 %cmp13, label %if.then, label %lor.lhs.false.15

lor.lhs.false.15:                                 ; preds = %land.lhs.true.10
  %9 = load i8*, i8** %buf.addr, align 8
  %arrayidx16 = getelementptr inbounds i8, i8* %9, i64 1
  %10 = load i8, i8* %arrayidx16, align 1
  %conv17 = sext i8 %10 to i32
  %cmp18 = icmp eq i32 %conv17, 88
  br i1 %cmp18, label %if.then, label %if.else.76

if.then:                                          ; preds = %lor.lhs.false.15, %land.lhs.true.10, %land.lhs.true.3
  store i32 0, i32* %x, align 4
  store i32 2, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* %len.addr, align 4
  %cmp20 = icmp slt i32 %11, %12
  br i1 %cmp20, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %idxprom = sext i32 %13 to i64
  %14 = load i8*, i8** %buf.addr, align 8
  %arrayidx22 = getelementptr inbounds i8, i8* %14, i64 %idxprom
  %15 = load i8, i8* %arrayidx22, align 1
  %conv23 = sext i8 %15 to i32
  %cmp24 = icmp sge i32 %conv23, 48
  br i1 %cmp24, label %land.lhs.true.26, label %if.else

land.lhs.true.26:                                 ; preds = %for.body
  %16 = load i32, i32* %i, align 4
  %idxprom27 = sext i32 %16 to i64
  %17 = load i8*, i8** %buf.addr, align 8
  %arrayidx28 = getelementptr inbounds i8, i8* %17, i64 %idxprom27
  %18 = load i8, i8* %arrayidx28, align 1
  %conv29 = sext i8 %18 to i32
  %cmp30 = icmp sle i32 %conv29, 57
  br i1 %cmp30, label %if.then.32, label %if.else

if.then.32:                                       ; preds = %land.lhs.true.26
  %19 = load i32, i32* %x, align 4
  %mul = mul nsw i32 %19, 16
  %20 = load i32, i32* %i, align 4
  %idxprom33 = sext i32 %20 to i64
  %21 = load i8*, i8** %buf.addr, align 8
  %arrayidx34 = getelementptr inbounds i8, i8* %21, i64 %idxprom33
  %22 = load i8, i8* %arrayidx34, align 1
  %conv35 = sext i8 %22 to i32
  %sub = sub nsw i32 %conv35, 48
  %or = or i32 %mul, %sub
  store i32 %or, i32* %x, align 4
  br label %if.end.75

if.else:                                          ; preds = %land.lhs.true.26, %for.body
  %23 = load i32, i32* %i, align 4
  %idxprom36 = sext i32 %23 to i64
  %24 = load i8*, i8** %buf.addr, align 8
  %arrayidx37 = getelementptr inbounds i8, i8* %24, i64 %idxprom36
  %25 = load i8, i8* %arrayidx37, align 1
  %conv38 = sext i8 %25 to i32
  %cmp39 = icmp sge i32 %conv38, 97
  br i1 %cmp39, label %land.lhs.true.41, label %if.else.54

land.lhs.true.41:                                 ; preds = %if.else
  %26 = load i32, i32* %i, align 4
  %idxprom42 = sext i32 %26 to i64
  %27 = load i8*, i8** %buf.addr, align 8
  %arrayidx43 = getelementptr inbounds i8, i8* %27, i64 %idxprom42
  %28 = load i8, i8* %arrayidx43, align 1
  %conv44 = sext i8 %28 to i32
  %cmp45 = icmp sle i32 %conv44, 102
  br i1 %cmp45, label %if.then.47, label %if.else.54

if.then.47:                                       ; preds = %land.lhs.true.41
  %29 = load i32, i32* %x, align 4
  %mul48 = mul nsw i32 %29, 16
  %30 = load i32, i32* %i, align 4
  %idxprom49 = sext i32 %30 to i64
  %31 = load i8*, i8** %buf.addr, align 8
  %arrayidx50 = getelementptr inbounds i8, i8* %31, i64 %idxprom49
  %32 = load i8, i8* %arrayidx50, align 1
  %conv51 = sext i8 %32 to i32
  %sub52 = sub nsw i32 %conv51, 87
  %or53 = or i32 %mul48, %sub52
  store i32 %or53, i32* %x, align 4
  br label %if.end.74

if.else.54:                                       ; preds = %land.lhs.true.41, %if.else
  %33 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %33 to i64
  %34 = load i8*, i8** %buf.addr, align 8
  %arrayidx56 = getelementptr inbounds i8, i8* %34, i64 %idxprom55
  %35 = load i8, i8* %arrayidx56, align 1
  %conv57 = sext i8 %35 to i32
  %cmp58 = icmp sge i32 %conv57, 65
  br i1 %cmp58, label %land.lhs.true.60, label %if.else.73

land.lhs.true.60:                                 ; preds = %if.else.54
  %36 = load i32, i32* %i, align 4
  %idxprom61 = sext i32 %36 to i64
  %37 = load i8*, i8** %buf.addr, align 8
  %arrayidx62 = getelementptr inbounds i8, i8* %37, i64 %idxprom61
  %38 = load i8, i8* %arrayidx62, align 1
  %conv63 = sext i8 %38 to i32
  %cmp64 = icmp sle i32 %conv63, 70
  br i1 %cmp64, label %if.then.66, label %if.else.73

if.then.66:                                       ; preds = %land.lhs.true.60
  %39 = load i32, i32* %x, align 4
  %mul67 = mul nsw i32 %39, 16
  %40 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %40 to i64
  %41 = load i8*, i8** %buf.addr, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %41, i64 %idxprom68
  %42 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %42 to i32
  %sub71 = sub nsw i32 %conv70, 55
  %or72 = or i32 %mul67, %sub71
  store i32 %or72, i32* %x, align 4
  br label %if.end

if.else.73:                                       ; preds = %land.lhs.true.60, %if.else.54
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then.66
  br label %if.end.74

if.end.74:                                        ; preds = %if.end, %if.then.47
  br label %if.end.75

if.end.75:                                        ; preds = %if.end.74, %if.then.32
  br label %for.inc

for.inc:                                          ; preds = %if.end.75
  %43 = load i32, i32* %i, align 4
  %inc = add nsw i32 %43, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end.110

if.else.76:                                       ; preds = %lor.lhs.false.15, %lor.lhs.false, %entry
  %44 = load i8*, i8** %buf.addr, align 8
  %arrayidx77 = getelementptr inbounds i8, i8* %44, i64 0
  %45 = load i8, i8* %arrayidx77, align 1
  %conv78 = sext i8 %45 to i32
  %cmp79 = icmp eq i32 %conv78, 48
  br i1 %cmp79, label %if.then.81, label %if.else.108

if.then.81:                                       ; preds = %if.else.76
  store i32 0, i32* %x, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond.82

for.cond.82:                                      ; preds = %for.inc.105, %if.then.81
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* %len.addr, align 4
  %cmp83 = icmp slt i32 %46, %47
  br i1 %cmp83, label %for.body.85, label %for.end.107

for.body.85:                                      ; preds = %for.cond.82
  %48 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %48 to i64
  %49 = load i8*, i8** %buf.addr, align 8
  %arrayidx87 = getelementptr inbounds i8, i8* %49, i64 %idxprom86
  %50 = load i8, i8* %arrayidx87, align 1
  %conv88 = sext i8 %50 to i32
  %cmp89 = icmp slt i32 %conv88, 48
  br i1 %cmp89, label %if.then.97, label %lor.lhs.false.91

lor.lhs.false.91:                                 ; preds = %for.body.85
  %51 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %51 to i64
  %52 = load i8*, i8** %buf.addr, align 8
  %arrayidx93 = getelementptr inbounds i8, i8* %52, i64 %idxprom92
  %53 = load i8, i8* %arrayidx93, align 1
  %conv94 = sext i8 %53 to i32
  %cmp95 = icmp sgt i32 %conv94, 55
  br i1 %cmp95, label %if.then.97, label %if.end.98

if.then.97:                                       ; preds = %lor.lhs.false.91, %for.body.85
  store i32 0, i32* %retval
  br label %return

if.end.98:                                        ; preds = %lor.lhs.false.91
  %54 = load i32, i32* %x, align 4
  %mul99 = mul nsw i32 %54, 8
  %55 = load i32, i32* %i, align 4
  %idxprom100 = sext i32 %55 to i64
  %56 = load i8*, i8** %buf.addr, align 8
  %arrayidx101 = getelementptr inbounds i8, i8* %56, i64 %idxprom100
  %57 = load i8, i8* %arrayidx101, align 1
  %conv102 = sext i8 %57 to i32
  %sub103 = sub nsw i32 %conv102, 48
  %or104 = or i32 %mul99, %sub103
  store i32 %or104, i32* %x, align 4
  br label %for.inc.105

for.inc.105:                                      ; preds = %if.end.98
  %58 = load i32, i32* %i, align 4
  %inc106 = add nsw i32 %58, 1
  store i32 %inc106, i32* %i, align 4
  br label %for.cond.82

for.end.107:                                      ; preds = %for.cond.82
  br label %if.end.109

if.else.108:                                      ; preds = %if.else.76
  store i32 0, i32* %retval
  br label %return

if.end.109:                                       ; preds = %for.end.107
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %for.end
  %59 = load i32, i32* %x, align 4
  %60 = load i32*, i32** %val.addr, align 8
  store i32 %59, i32* %60, align 4
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end.110, %if.else.108, %if.then.97, %if.else.73
  %61 = load i32, i32* %retval
  ret i32 %61
}

declare i32 @FromUtf8(i32, i32*) #2

; Function Attrs: nounwind uwtable
define internal void @digraph_fn(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ch = alloca i32, align 4
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i32, i32* %len.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i8*, i8** %buf.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  %2 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  store i32 %conv, i32* %ch, align 4
  %3 = load i32, i32* %ch, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end.96

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ch, align 4
  %conv1 = trunc i32 %4 to i8
  %5 = load i32, i32* %len.addr, align 4
  %add = add nsw i32 %5, 1
  %idxprom2 = sext i32 %add to i64
  %6 = load i8*, i8** %buf.addr, align 8
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2
  store i8 %conv1, i8* %arrayidx3, align 1
  %7 = load i32, i32* %ch, align 4
  %cmp = icmp slt i32 %7, 32
  br i1 %cmp, label %if.then.7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %8 = load i32, i32* %ch, align 4
  %cmp5 = icmp eq i32 %8, 127
  br i1 %cmp5, label %if.then.7, label %if.end

if.then.7:                                        ; preds = %lor.lhs.false, %if.then
  br label %while.end

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i32, i32* %len.addr, align 4
  %cmp8 = icmp sge i32 %9, 1
  br i1 %cmp8, label %land.lhs.true, label %if.end.67

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8*, i8** %buf.addr, align 8
  %11 = load i8, i8* %10, align 1
  %conv10 = sext i8 %11 to i32
  %cmp11 = icmp eq i32 %conv10, 85
  br i1 %cmp11, label %land.lhs.true.13, label %lor.lhs.false.18

land.lhs.true.13:                                 ; preds = %land.lhs.true
  %12 = load i8*, i8** %buf.addr, align 8
  %arrayidx14 = getelementptr inbounds i8, i8* %12, i64 1
  %13 = load i8, i8* %arrayidx14, align 1
  %conv15 = sext i8 %13 to i32
  %cmp16 = icmp eq i32 %conv15, 43
  br i1 %cmp16, label %if.then.32, label %lor.lhs.false.18

lor.lhs.false.18:                                 ; preds = %land.lhs.true.13, %land.lhs.true
  %14 = load i8*, i8** %buf.addr, align 8
  %15 = load i8, i8* %14, align 1
  %conv19 = sext i8 %15 to i32
  %cmp20 = icmp eq i32 %conv19, 48
  br i1 %cmp20, label %land.lhs.true.22, label %if.end.67

land.lhs.true.22:                                 ; preds = %lor.lhs.false.18
  %16 = load i8*, i8** %buf.addr, align 8
  %arrayidx23 = getelementptr inbounds i8, i8* %16, i64 1
  %17 = load i8, i8* %arrayidx23, align 1
  %conv24 = sext i8 %17 to i32
  %cmp25 = icmp eq i32 %conv24, 120
  br i1 %cmp25, label %if.then.32, label %lor.lhs.false.27

lor.lhs.false.27:                                 ; preds = %land.lhs.true.22
  %18 = load i8*, i8** %buf.addr, align 8
  %arrayidx28 = getelementptr inbounds i8, i8* %18, i64 1
  %19 = load i8, i8* %arrayidx28, align 1
  %conv29 = sext i8 %19 to i32
  %cmp30 = icmp eq i32 %conv29, 88
  br i1 %cmp30, label %if.then.32, label %if.end.67

if.then.32:                                       ; preds = %lor.lhs.false.27, %land.lhs.true.22, %land.lhs.true.13
  %20 = load i32, i32* %len.addr, align 4
  %cmp33 = icmp eq i32 %20, 1
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.then.32
  br label %while.end

if.end.36:                                        ; preds = %if.then.32
  %21 = load i32, i32* %ch, align 4
  %cmp37 = icmp slt i32 %21, 48
  br i1 %cmp37, label %land.lhs.true.42, label %lor.lhs.false.39

lor.lhs.false.39:                                 ; preds = %if.end.36
  %22 = load i32, i32* %ch, align 4
  %cmp40 = icmp sgt i32 %22, 57
  br i1 %cmp40, label %land.lhs.true.42, label %if.end.57

land.lhs.true.42:                                 ; preds = %lor.lhs.false.39, %if.end.36
  %23 = load i32, i32* %ch, align 4
  %cmp43 = icmp slt i32 %23, 97
  br i1 %cmp43, label %land.lhs.true.48, label %lor.lhs.false.45

lor.lhs.false.45:                                 ; preds = %land.lhs.true.42
  %24 = load i32, i32* %ch, align 4
  %cmp46 = icmp sgt i32 %24, 102
  br i1 %cmp46, label %land.lhs.true.48, label %if.end.57

land.lhs.true.48:                                 ; preds = %lor.lhs.false.45, %land.lhs.true.42
  %25 = load i32, i32* %ch, align 4
  %cmp49 = icmp slt i32 %25, 65
  br i1 %cmp49, label %if.then.54, label %lor.lhs.false.51

lor.lhs.false.51:                                 ; preds = %land.lhs.true.48
  %26 = load i32, i32* %ch, align 4
  %cmp52 = icmp sgt i32 %26, 70
  br i1 %cmp52, label %if.then.54, label %if.end.57

if.then.54:                                       ; preds = %lor.lhs.false.51, %land.lhs.true.48
  %27 = load i32, i32* %len.addr, align 4
  %idxprom55 = sext i32 %27 to i64
  %28 = load i8*, i8** %buf.addr, align 8
  %arrayidx56 = getelementptr inbounds i8, i8* %28, i64 %idxprom55
  store i8 28, i8* %arrayidx56, align 1
  br label %while.end

if.end.57:                                        ; preds = %lor.lhs.false.51, %lor.lhs.false.45, %lor.lhs.false.39
  %29 = load i32, i32* %len.addr, align 4
  %30 = load i8*, i8** %buf.addr, align 8
  %31 = load i8, i8* %30, align 1
  %conv58 = sext i8 %31 to i32
  %cmp59 = icmp eq i32 %conv58, 85
  %cond = select i1 %cmp59, i32 5, i32 3
  %cmp61 = icmp eq i32 %29, %cond
  br i1 %cmp61, label %if.then.63, label %if.end.66

if.then.63:                                       ; preds = %if.end.57
  %32 = load i32, i32* %len.addr, align 4
  %idxprom64 = sext i32 %32 to i64
  %33 = load i8*, i8** %buf.addr, align 8
  %arrayidx65 = getelementptr inbounds i8, i8* %33, i64 %idxprom64
  store i8 10, i8* %arrayidx65, align 1
  br label %if.end.66

if.end.66:                                        ; preds = %if.then.63, %if.end.57
  br label %while.end

if.end.67:                                        ; preds = %lor.lhs.false.27, %lor.lhs.false.18, %if.end
  %34 = load i32, i32* %len.addr, align 4
  %tobool68 = icmp ne i32 %34, 0
  br i1 %tobool68, label %land.lhs.true.69, label %if.end.89

land.lhs.true.69:                                 ; preds = %if.end.67
  %35 = load i8*, i8** %buf.addr, align 8
  %36 = load i8, i8* %35, align 1
  %conv70 = sext i8 %36 to i32
  %cmp71 = icmp eq i32 %conv70, 48
  br i1 %cmp71, label %if.then.73, label %if.end.89

if.then.73:                                       ; preds = %land.lhs.true.69
  %37 = load i32, i32* %ch, align 4
  %cmp74 = icmp slt i32 %37, 48
  br i1 %cmp74, label %if.then.79, label %lor.lhs.false.76

lor.lhs.false.76:                                 ; preds = %if.then.73
  %38 = load i32, i32* %ch, align 4
  %cmp77 = icmp sgt i32 %38, 55
  br i1 %cmp77, label %if.then.79, label %if.end.82

if.then.79:                                       ; preds = %lor.lhs.false.76, %if.then.73
  %39 = load i32, i32* %len.addr, align 4
  %idxprom80 = sext i32 %39 to i64
  %40 = load i8*, i8** %buf.addr, align 8
  %arrayidx81 = getelementptr inbounds i8, i8* %40, i64 %idxprom80
  store i8 28, i8* %arrayidx81, align 1
  br label %while.end

if.end.82:                                        ; preds = %lor.lhs.false.76
  %41 = load i32, i32* %len.addr, align 4
  %cmp83 = icmp eq i32 %41, 3
  br i1 %cmp83, label %if.then.85, label %if.end.88

if.then.85:                                       ; preds = %if.end.82
  %42 = load i32, i32* %len.addr, align 4
  %idxprom86 = sext i32 %42 to i64
  %43 = load i8*, i8** %buf.addr, align 8
  %arrayidx87 = getelementptr inbounds i8, i8* %43, i64 %idxprom86
  store i8 10, i8* %arrayidx87, align 1
  br label %if.end.88

if.end.88:                                        ; preds = %if.then.85, %if.end.82
  br label %while.end

if.end.89:                                        ; preds = %land.lhs.true.69, %if.end.67
  %44 = load i32, i32* %len.addr, align 4
  %cmp90 = icmp eq i32 %44, 1
  br i1 %cmp90, label %if.then.92, label %if.end.95

if.then.92:                                       ; preds = %if.end.89
  %45 = load i32, i32* %len.addr, align 4
  %idxprom93 = sext i32 %45 to i64
  %46 = load i8*, i8** %buf.addr, align 8
  %arrayidx94 = getelementptr inbounds i8, i8* %46, i64 %idxprom93
  store i8 10, i8* %arrayidx94, align 1
  br label %if.end.95

if.end.95:                                        ; preds = %if.then.92, %if.end.89
  br label %while.end

if.end.96:                                        ; preds = %entry
  %47 = load i32, i32* %len.addr, align 4
  %cmp97 = icmp slt i32 %47, 1
  br i1 %cmp97, label %if.then.99, label %if.end.100

if.then.99:                                       ; preds = %if.end.96
  br label %while.end

if.end.100:                                       ; preds = %if.end.96
  %48 = load i32, i32* %len.addr, align 4
  %add101 = add nsw i32 %48, 1
  %idxprom102 = sext i32 %add101 to i64
  %49 = load i8*, i8** %buf.addr, align 8
  %arrayidx103 = getelementptr inbounds i8, i8* %49, i64 %idxprom102
  %50 = load i8, i8* %arrayidx103, align 1
  %tobool104 = icmp ne i8 %50, 0
  br i1 %tobool104, label %if.then.105, label %if.end.111

if.then.105:                                      ; preds = %if.end.100
  %51 = load i32, i32* %len.addr, align 4
  %add106 = add nsw i32 %51, 1
  %idxprom107 = sext i32 %add106 to i64
  %52 = load i8*, i8** %buf.addr, align 8
  %arrayidx108 = getelementptr inbounds i8, i8* %52, i64 %idxprom107
  %53 = load i8, i8* %arrayidx108, align 1
  %54 = load i32, i32* %len.addr, align 4
  %idxprom109 = sext i32 %54 to i64
  %55 = load i8*, i8** %buf.addr, align 8
  %arrayidx110 = getelementptr inbounds i8, i8* %55, i64 %idxprom109
  store i8 %53, i8* %arrayidx110, align 1
  %56 = load i32, i32* %len.addr, align 4
  %inc = add nsw i32 %56, 1
  store i32 %inc, i32* %len.addr, align 4
  br label %if.end.111

if.end.111:                                       ; preds = %if.then.105, %if.end.100
  %57 = load i32, i32* %len.addr, align 4
  %cmp112 = icmp slt i32 %57, 2
  br i1 %cmp112, label %if.then.114, label %if.end.115

if.then.114:                                      ; preds = %if.end.111
  br label %while.end

if.end.115:                                       ; preds = %if.end.111
  %58 = load i8*, i8** %buf.addr, align 8
  %59 = load i32, i32* %len.addr, align 4
  %call = call i32 @parse_input_int(i8* %58, i32 %59, i32* %x)
  %tobool116 = icmp ne i32 %call, 0
  br i1 %tobool116, label %if.end.125, label %if.then.117

if.then.117:                                      ; preds = %if.end.115
  %60 = load i8*, i8** %buf.addr, align 8
  %call118 = call i32 @digraph_find(i8* %60)
  store i32 %call118, i32* %i, align 4
  %61 = load i32, i32* %i, align 4
  %idxprom119 = sext i32 %61 to i64
  %arrayidx120 = getelementptr inbounds [513 x %struct.digraph], [513 x %struct.digraph]* @digraphs, i32 0, i64 %idxprom119
  %value = getelementptr inbounds %struct.digraph, %struct.digraph* %arrayidx120, i32 0, i32 1
  %62 = load i32, i32* %value, align 4
  store i32 %62, i32* %x, align 4
  %cmp121 = icmp sle i32 %62, 0
  br i1 %cmp121, label %if.then.123, label %if.end.124

if.then.123:                                      ; preds = %if.then.117
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.418, i32 0, i32 0))
  br label %while.end

if.end.124:                                       ; preds = %if.then.117
  br label %if.end.125

if.end.125:                                       ; preds = %if.end.124, %if.end.115
  store i32 1, i32* %i, align 4
  %63 = load i32, i32* %x, align 4
  %conv126 = trunc i32 %63 to i8
  %64 = load i8*, i8** %buf.addr, align 8
  store i8 %conv126, i8* %64, align 1
  %65 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_encoding = getelementptr inbounds %struct.layer, %struct.layer* %65, i32 0, i32 5
  %66 = load i32, i32* %l_encoding, align 4
  %cmp127 = icmp eq i32 %66, 8
  br i1 %cmp127, label %if.then.129, label %if.end.131

if.then.129:                                      ; preds = %if.end.125
  %67 = load i8*, i8** %buf.addr, align 8
  %68 = load i32, i32* %x, align 4
  %call130 = call i32 @ToUtf8(i8* %67, i32 %68)
  store i32 %call130, i32* %i, align 4
  br label %if.end.131

if.end.131:                                       ; preds = %if.then.129, %if.end.125
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end.131
  %69 = load i32, i32* %i, align 4
  %tobool132 = icmp ne i32 %69, 0
  br i1 %tobool132, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %70 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn = getelementptr inbounds %struct.layer, %struct.layer* %70, i32 0, i32 6
  %71 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn, align 8
  %lf_LayProcess = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %71, i32 0, i32 0
  %72 = load void (i8**, i32*)*, void (i8**, i32*)** %lf_LayProcess, align 8
  call void %72(i8** %buf.addr, i32* %i)
  br label %while.cond

while.end:                                        ; preds = %if.then.7, %if.then.35, %if.then.54, %if.end.66, %if.then.79, %if.end.88, %if.end.95, %if.then.99, %if.then.114, %if.then.123, %while.cond
  ret void
}

declare void @SetCharsets(%struct.win*, i8*) #2

; Function Attrs: nounwind uwtable
define i32 @ParseAttrColor(i8* %s1, i8* %s2, i32 %msgok) #0 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %msgok.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %s = alloca i8*, align 8
  %ss = alloca i8*, align 8
  %r = alloca i32, align 4
  %mode = alloca i32, align 4
  %n42 = alloca i32, align 4
  %numco = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %s1, i8** %s1.addr, align 8
  store i8* %s2, i8** %s2.addr, align 8
  store i32 %msgok, i32* %msgok.addr, align 4
  store i32 0, i32* %r, align 4
  %0 = load i8*, i8** %s1.addr, align 8
  store i8* %0, i8** %s, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %s, align 8
  %2 = load i8, i8* %1, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %s, align 8
  store i8* %4, i8** %ss, align 8
  br label %while.cond.2

while.cond.2:                                     ; preds = %while.body.7, %while.end
  %5 = load i8*, i8** %ss, align 8
  %6 = load i8, i8* %5, align 1
  %conv3 = sext i8 %6 to i32
  %tobool = icmp ne i32 %conv3, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond.2
  %7 = load i8*, i8** %ss, align 8
  %8 = load i8, i8* %7, align 1
  %conv4 = sext i8 %8 to i32
  %cmp5 = icmp ne i32 %conv4, 32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.2
  %9 = phi i1 [ false, %while.cond.2 ], [ %cmp5, %land.rhs ]
  br i1 %9, label %while.body.7, label %while.end.9

while.body.7:                                     ; preds = %land.end
  %10 = load i8*, i8** %ss, align 8
  %incdec.ptr8 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr8, i8** %ss, align 8
  br label %while.cond.2

while.end.9:                                      ; preds = %land.end
  br label %while.cond.10

while.cond.10:                                    ; preds = %while.body.14, %while.end.9
  %11 = load i8*, i8** %ss, align 8
  %12 = load i8, i8* %11, align 1
  %conv11 = sext i8 %12 to i32
  %cmp12 = icmp eq i32 %conv11, 32
  br i1 %cmp12, label %while.body.14, label %while.end.16

while.body.14:                                    ; preds = %while.cond.10
  %13 = load i8*, i8** %ss, align 8
  %incdec.ptr15 = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr15, i8** %ss, align 8
  br label %while.cond.10

while.end.16:                                     ; preds = %while.cond.10
  %14 = load i8*, i8** %s, align 8
  %15 = load i8, i8* %14, align 1
  %conv17 = sext i8 %15 to i32
  %tobool18 = icmp ne i32 %conv17, 0
  br i1 %tobool18, label %land.lhs.true, label %if.end.224

land.lhs.true:                                    ; preds = %while.end.16
  %16 = load i8*, i8** %s2.addr, align 8
  %tobool19 = icmp ne i8* %16, null
  br i1 %tobool19, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load i8*, i8** %ss, align 8
  %18 = load i8, i8* %17, align 1
  %conv20 = sext i8 %18 to i32
  %tobool21 = icmp ne i32 %conv20, 0
  br i1 %tobool21, label %if.then, label %lor.lhs.false.22

lor.lhs.false.22:                                 ; preds = %lor.lhs.false
  %19 = load i8*, i8** %s, align 8
  %20 = load i8, i8* %19, align 1
  %conv23 = sext i8 %20 to i32
  %cmp24 = icmp sge i32 %conv23, 97
  br i1 %cmp24, label %land.lhs.true.26, label %lor.lhs.false.30

land.lhs.true.26:                                 ; preds = %lor.lhs.false.22
  %21 = load i8*, i8** %s, align 8
  %22 = load i8, i8* %21, align 1
  %conv27 = sext i8 %22 to i32
  %cmp28 = icmp sle i32 %conv27, 122
  br i1 %cmp28, label %if.end.224, label %lor.lhs.false.30

lor.lhs.false.30:                                 ; preds = %land.lhs.true.26, %lor.lhs.false.22
  %23 = load i8*, i8** %s, align 8
  %24 = load i8, i8* %23, align 1
  %conv31 = sext i8 %24 to i32
  %cmp32 = icmp sge i32 %conv31, 65
  br i1 %cmp32, label %land.lhs.true.34, label %lor.lhs.false.38

land.lhs.true.34:                                 ; preds = %lor.lhs.false.30
  %25 = load i8*, i8** %s, align 8
  %26 = load i8, i8* %25, align 1
  %conv35 = sext i8 %26 to i32
  %cmp36 = icmp sle i32 %conv35, 90
  br i1 %cmp36, label %if.end.224, label %lor.lhs.false.38

lor.lhs.false.38:                                 ; preds = %land.lhs.true.34, %lor.lhs.false.30
  %27 = load i8*, i8** %s, align 8
  %28 = load i8, i8* %27, align 1
  %conv39 = sext i8 %28 to i32
  %cmp40 = icmp eq i32 %conv39, 46
  br i1 %cmp40, label %if.end.224, label %if.then

if.then:                                          ; preds = %lor.lhs.false.38, %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %mode, align 4
  store i32 0, i32* %n42, align 4
  %29 = load i8*, i8** %s, align 8
  %30 = load i8, i8* %29, align 1
  %conv43 = sext i8 %30 to i32
  %cmp44 = icmp eq i32 %conv43, 43
  br i1 %cmp44, label %if.then.46, label %if.else

if.then.46:                                       ; preds = %if.then
  store i32 1, i32* %mode, align 4
  %31 = load i8*, i8** %s, align 8
  %incdec.ptr47 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %incdec.ptr47, i8** %s, align 8
  br label %if.end.67

if.else:                                          ; preds = %if.then
  %32 = load i8*, i8** %s, align 8
  %33 = load i8, i8* %32, align 1
  %conv48 = sext i8 %33 to i32
  %cmp49 = icmp eq i32 %conv48, 45
  br i1 %cmp49, label %if.then.51, label %if.else.53

if.then.51:                                       ; preds = %if.else
  store i32 -1, i32* %mode, align 4
  %34 = load i8*, i8** %s, align 8
  %incdec.ptr52 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %incdec.ptr52, i8** %s, align 8
  br label %if.end.66

if.else.53:                                       ; preds = %if.else
  %35 = load i8*, i8** %s, align 8
  %36 = load i8, i8* %35, align 1
  %conv54 = sext i8 %36 to i32
  %cmp55 = icmp eq i32 %conv54, 33
  br i1 %cmp55, label %if.then.57, label %if.else.59

if.then.57:                                       ; preds = %if.else.53
  store i32 2, i32* %mode, align 4
  %37 = load i8*, i8** %s, align 8
  %incdec.ptr58 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %incdec.ptr58, i8** %s, align 8
  br label %if.end.65

if.else.59:                                       ; preds = %if.else.53
  %38 = load i8*, i8** %s, align 8
  %39 = load i8, i8* %38, align 1
  %conv60 = sext i8 %39 to i32
  %cmp61 = icmp eq i32 %conv60, 61
  br i1 %cmp61, label %if.then.63, label %if.end

if.then.63:                                       ; preds = %if.else.59
  %40 = load i8*, i8** %s, align 8
  %incdec.ptr64 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %incdec.ptr64, i8** %s, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.63, %if.else.59
  br label %if.end.65

if.end.65:                                        ; preds = %if.end, %if.then.57
  br label %if.end.66

if.end.66:                                        ; preds = %if.end.65, %if.then.51
  br label %if.end.67

if.end.67:                                        ; preds = %if.end.66, %if.then.46
  %41 = load i8*, i8** %s, align 8
  %42 = load i8, i8* %41, align 1
  %conv68 = sext i8 %42 to i32
  %cmp69 = icmp sge i32 %conv68, 48
  br i1 %cmp69, label %land.lhs.true.71, label %if.else.133

land.lhs.true.71:                                 ; preds = %if.end.67
  %43 = load i8*, i8** %s, align 8
  %44 = load i8, i8* %43, align 1
  %conv72 = sext i8 %44 to i32
  %cmp73 = icmp sle i32 %conv72, 57
  br i1 %cmp73, label %if.then.75, label %if.else.133

if.then.75:                                       ; preds = %land.lhs.true.71
  %45 = load i8*, i8** %s, align 8
  %incdec.ptr76 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %incdec.ptr76, i8** %s, align 8
  %46 = load i8, i8* %45, align 1
  %conv77 = sext i8 %46 to i32
  %sub = sub nsw i32 %conv77, 48
  store i32 %sub, i32* %n42, align 4
  %47 = load i8*, i8** %s, align 8
  %48 = load i8, i8* %47, align 1
  %conv78 = sext i8 %48 to i32
  %cmp79 = icmp sge i32 %conv78, 48
  br i1 %cmp79, label %land.lhs.true.81, label %if.else.89

land.lhs.true.81:                                 ; preds = %if.then.75
  %49 = load i8*, i8** %s, align 8
  %50 = load i8, i8* %49, align 1
  %conv82 = sext i8 %50 to i32
  %cmp83 = icmp sle i32 %conv82, 57
  br i1 %cmp83, label %if.then.85, label %if.else.89

if.then.85:                                       ; preds = %land.lhs.true.81
  %51 = load i32, i32* %n42, align 4
  %mul = mul nsw i32 %51, 16
  %52 = load i8*, i8** %s, align 8
  %incdec.ptr86 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %incdec.ptr86, i8** %s, align 8
  %53 = load i8, i8* %52, align 1
  %conv87 = sext i8 %53 to i32
  %sub88 = sub nsw i32 %conv87, 48
  %add = add nsw i32 %mul, %sub88
  store i32 %add, i32* %n42, align 4
  br label %if.end.132

if.else.89:                                       ; preds = %land.lhs.true.81, %if.then.75
  %54 = load i8*, i8** %s, align 8
  %55 = load i8, i8* %54, align 1
  %conv90 = sext i8 %55 to i32
  %cmp91 = icmp sge i32 %conv90, 97
  br i1 %cmp91, label %land.lhs.true.93, label %if.else.103

land.lhs.true.93:                                 ; preds = %if.else.89
  %56 = load i8*, i8** %s, align 8
  %57 = load i8, i8* %56, align 1
  %conv94 = sext i8 %57 to i32
  %cmp95 = icmp sle i32 %conv94, 102
  br i1 %cmp95, label %if.then.97, label %if.else.103

if.then.97:                                       ; preds = %land.lhs.true.93
  %58 = load i32, i32* %n42, align 4
  %mul98 = mul nsw i32 %58, 16
  %59 = load i8*, i8** %s, align 8
  %incdec.ptr99 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %incdec.ptr99, i8** %s, align 8
  %60 = load i8, i8* %59, align 1
  %conv100 = sext i8 %60 to i32
  %sub101 = sub nsw i32 %conv100, 87
  %add102 = add nsw i32 %mul98, %sub101
  store i32 %add102, i32* %n42, align 4
  br label %if.end.131

if.else.103:                                      ; preds = %land.lhs.true.93, %if.else.89
  %61 = load i8*, i8** %s, align 8
  %62 = load i8, i8* %61, align 1
  %conv104 = sext i8 %62 to i32
  %cmp105 = icmp sge i32 %conv104, 65
  br i1 %cmp105, label %land.lhs.true.107, label %if.else.117

land.lhs.true.107:                                ; preds = %if.else.103
  %63 = load i8*, i8** %s, align 8
  %64 = load i8, i8* %63, align 1
  %conv108 = sext i8 %64 to i32
  %cmp109 = icmp sle i32 %conv108, 70
  br i1 %cmp109, label %if.then.111, label %if.else.117

if.then.111:                                      ; preds = %land.lhs.true.107
  %65 = load i32, i32* %n42, align 4
  %mul112 = mul nsw i32 %65, 16
  %66 = load i8*, i8** %s, align 8
  %incdec.ptr113 = getelementptr inbounds i8, i8* %66, i32 1
  store i8* %incdec.ptr113, i8** %s, align 8
  %67 = load i8, i8* %66, align 1
  %conv114 = sext i8 %67 to i32
  %sub115 = sub nsw i32 %conv114, 55
  %add116 = add nsw i32 %mul112, %sub115
  store i32 %add116, i32* %n42, align 4
  br label %if.end.130

if.else.117:                                      ; preds = %land.lhs.true.107, %if.else.103
  %68 = load i8*, i8** %s, align 8
  %69 = load i8, i8* %68, align 1
  %conv118 = sext i8 %69 to i32
  %tobool119 = icmp ne i32 %conv118, 0
  br i1 %tobool119, label %land.lhs.true.120, label %if.end.129

land.lhs.true.120:                                ; preds = %if.else.117
  %70 = load i8*, i8** %s, align 8
  %71 = load i8, i8* %70, align 1
  %conv121 = sext i8 %71 to i32
  %cmp122 = icmp ne i32 %conv121, 32
  br i1 %cmp122, label %if.then.124, label %if.end.129

if.then.124:                                      ; preds = %land.lhs.true.120
  %72 = load i32, i32* %msgok.addr, align 4
  %tobool125 = icmp ne i32 %72, 0
  br i1 %tobool125, label %if.then.126, label %if.end.128

if.then.126:                                      ; preds = %if.then.124
  %73 = load i8*, i8** %s, align 8
  %74 = load i8, i8* %73, align 1
  %conv127 = sext i8 %74 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.329, i32 0, i32 0), i32 %conv127)
  br label %if.end.128

if.end.128:                                       ; preds = %if.then.126, %if.then.124
  store i32 -1, i32* %retval
  br label %return

if.end.129:                                       ; preds = %land.lhs.true.120, %if.else.117
  br label %if.end.130

if.end.130:                                       ; preds = %if.end.129, %if.then.111
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %if.then.97
  br label %if.end.132

if.end.132:                                       ; preds = %if.end.131, %if.then.85
  br label %if.end.190

if.else.133:                                      ; preds = %land.lhs.true.71, %if.end.67
  br label %while.cond.134

while.cond.134:                                   ; preds = %if.end.187, %if.else.133
  %75 = load i8*, i8** %s, align 8
  %76 = load i8, i8* %75, align 1
  %conv135 = sext i8 %76 to i32
  %tobool136 = icmp ne i32 %conv135, 0
  br i1 %tobool136, label %land.rhs.137, label %land.end.141

land.rhs.137:                                     ; preds = %while.cond.134
  %77 = load i8*, i8** %s, align 8
  %78 = load i8, i8* %77, align 1
  %conv138 = sext i8 %78 to i32
  %cmp139 = icmp ne i32 %conv138, 32
  br label %land.end.141

land.end.141:                                     ; preds = %land.rhs.137, %while.cond.134
  %79 = phi i1 [ false, %while.cond.134 ], [ %cmp139, %land.rhs.137 ]
  br i1 %79, label %while.body.142, label %while.end.189

while.body.142:                                   ; preds = %land.end.141
  %80 = load i8*, i8** %s, align 8
  %81 = load i8, i8* %80, align 1
  %conv143 = sext i8 %81 to i32
  %cmp144 = icmp eq i32 %conv143, 100
  br i1 %cmp144, label %if.then.146, label %if.else.147

if.then.146:                                      ; preds = %while.body.142
  %82 = load i32, i32* %n42, align 4
  %or = or i32 %82, 1
  store i32 %or, i32* %n42, align 4
  br label %if.end.187

if.else.147:                                      ; preds = %while.body.142
  %83 = load i8*, i8** %s, align 8
  %84 = load i8, i8* %83, align 1
  %conv148 = sext i8 %84 to i32
  %cmp149 = icmp eq i32 %conv148, 117
  br i1 %cmp149, label %if.then.151, label %if.else.153

if.then.151:                                      ; preds = %if.else.147
  %85 = load i32, i32* %n42, align 4
  %or152 = or i32 %85, 2
  store i32 %or152, i32* %n42, align 4
  br label %if.end.186

if.else.153:                                      ; preds = %if.else.147
  %86 = load i8*, i8** %s, align 8
  %87 = load i8, i8* %86, align 1
  %conv154 = sext i8 %87 to i32
  %cmp155 = icmp eq i32 %conv154, 98
  br i1 %cmp155, label %if.then.157, label %if.else.159

if.then.157:                                      ; preds = %if.else.153
  %88 = load i32, i32* %n42, align 4
  %or158 = or i32 %88, 4
  store i32 %or158, i32* %n42, align 4
  br label %if.end.185

if.else.159:                                      ; preds = %if.else.153
  %89 = load i8*, i8** %s, align 8
  %90 = load i8, i8* %89, align 1
  %conv160 = sext i8 %90 to i32
  %cmp161 = icmp eq i32 %conv160, 114
  br i1 %cmp161, label %if.then.163, label %if.else.165

if.then.163:                                      ; preds = %if.else.159
  %91 = load i32, i32* %n42, align 4
  %or164 = or i32 %91, 8
  store i32 %or164, i32* %n42, align 4
  br label %if.end.184

if.else.165:                                      ; preds = %if.else.159
  %92 = load i8*, i8** %s, align 8
  %93 = load i8, i8* %92, align 1
  %conv166 = sext i8 %93 to i32
  %cmp167 = icmp eq i32 %conv166, 115
  br i1 %cmp167, label %if.then.169, label %if.else.171

if.then.169:                                      ; preds = %if.else.165
  %94 = load i32, i32* %n42, align 4
  %or170 = or i32 %94, 16
  store i32 %or170, i32* %n42, align 4
  br label %if.end.183

if.else.171:                                      ; preds = %if.else.165
  %95 = load i8*, i8** %s, align 8
  %96 = load i8, i8* %95, align 1
  %conv172 = sext i8 %96 to i32
  %cmp173 = icmp eq i32 %conv172, 66
  br i1 %cmp173, label %if.then.175, label %if.else.177

if.then.175:                                      ; preds = %if.else.171
  %97 = load i32, i32* %n42, align 4
  %or176 = or i32 %97, 32
  store i32 %or176, i32* %n42, align 4
  br label %if.end.182

if.else.177:                                      ; preds = %if.else.171
  %98 = load i32, i32* %msgok.addr, align 4
  %tobool178 = icmp ne i32 %98, 0
  br i1 %tobool178, label %if.then.179, label %if.end.181

if.then.179:                                      ; preds = %if.else.177
  %99 = load i8*, i8** %s, align 8
  %100 = load i8, i8* %99, align 1
  %conv180 = sext i8 %100 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.330, i32 0, i32 0), i32 %conv180)
  br label %if.end.181

if.end.181:                                       ; preds = %if.then.179, %if.else.177
  store i32 -1, i32* %retval
  br label %return

if.end.182:                                       ; preds = %if.then.175
  br label %if.end.183

if.end.183:                                       ; preds = %if.end.182, %if.then.169
  br label %if.end.184

if.end.184:                                       ; preds = %if.end.183, %if.then.163
  br label %if.end.185

if.end.185:                                       ; preds = %if.end.184, %if.then.157
  br label %if.end.186

if.end.186:                                       ; preds = %if.end.185, %if.then.151
  br label %if.end.187

if.end.187:                                       ; preds = %if.end.186, %if.then.146
  %101 = load i8*, i8** %s, align 8
  %incdec.ptr188 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %incdec.ptr188, i8** %s, align 8
  br label %while.cond.134

while.end.189:                                    ; preds = %land.end.141
  br label %if.end.190

if.end.190:                                       ; preds = %while.end.189, %if.end.132
  %102 = load i8*, i8** %s, align 8
  %103 = load i8, i8* %102, align 1
  %conv191 = sext i8 %103 to i32
  %tobool192 = icmp ne i32 %conv191, 0
  br i1 %tobool192, label %land.lhs.true.193, label %if.end.202

land.lhs.true.193:                                ; preds = %if.end.190
  %104 = load i8*, i8** %s, align 8
  %105 = load i8, i8* %104, align 1
  %conv194 = sext i8 %105 to i32
  %cmp195 = icmp ne i32 %conv194, 32
  br i1 %cmp195, label %if.then.197, label %if.end.202

if.then.197:                                      ; preds = %land.lhs.true.193
  %106 = load i32, i32* %msgok.addr, align 4
  %tobool198 = icmp ne i32 %106, 0
  br i1 %tobool198, label %if.then.199, label %if.end.201

if.then.199:                                      ; preds = %if.then.197
  %107 = load i8*, i8** %s, align 8
  %108 = load i8, i8* %107, align 1
  %conv200 = sext i8 %108 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.331, i32 0, i32 0), i32 %conv200)
  br label %if.end.201

if.end.201:                                       ; preds = %if.then.199, %if.then.197
  store i32 -1, i32* %retval
  br label %return

if.end.202:                                       ; preds = %land.lhs.true.193, %if.end.190
  %109 = load i32, i32* %mode, align 4
  %cmp203 = icmp eq i32 %109, -1
  br i1 %cmp203, label %if.then.205, label %if.else.207

if.then.205:                                      ; preds = %if.end.202
  %110 = load i32, i32* %n42, align 4
  %shl = shl i32 %110, 8
  %111 = load i32, i32* %n42, align 4
  %or206 = or i32 %shl, %111
  store i32 %or206, i32* %r, align 4
  br label %if.end.223

if.else.207:                                      ; preds = %if.end.202
  %112 = load i32, i32* %mode, align 4
  %cmp208 = icmp eq i32 %112, 1
  br i1 %cmp208, label %if.then.210, label %if.else.212

if.then.210:                                      ; preds = %if.else.207
  %113 = load i32, i32* %n42, align 4
  %shl211 = shl i32 %113, 8
  store i32 %shl211, i32* %r, align 4
  br label %if.end.222

if.else.212:                                      ; preds = %if.else.207
  %114 = load i32, i32* %mode, align 4
  %cmp213 = icmp eq i32 %114, 2
  br i1 %cmp213, label %if.then.215, label %if.else.216

if.then.215:                                      ; preds = %if.else.212
  %115 = load i32, i32* %n42, align 4
  store i32 %115, i32* %r, align 4
  br label %if.end.221

if.else.216:                                      ; preds = %if.else.212
  %116 = load i32, i32* %mode, align 4
  %cmp217 = icmp eq i32 %116, 0
  br i1 %cmp217, label %if.then.219, label %if.end.220

if.then.219:                                      ; preds = %if.else.216
  %117 = load i32, i32* %n42, align 4
  %xor = xor i32 65535, %117
  store i32 %xor, i32* %r, align 4
  br label %if.end.220

if.end.220:                                       ; preds = %if.then.219, %if.else.216
  br label %if.end.221

if.end.221:                                       ; preds = %if.end.220, %if.then.215
  br label %if.end.222

if.end.222:                                       ; preds = %if.end.221, %if.then.210
  br label %if.end.223

if.end.223:                                       ; preds = %if.end.222, %if.then.205
  br label %if.end.224

if.end.224:                                       ; preds = %if.end.223, %lor.lhs.false.38, %land.lhs.true.34, %land.lhs.true.26, %while.end.16
  br label %while.cond.225

while.cond.225:                                   ; preds = %while.body.233, %if.end.224
  %118 = load i8*, i8** %s, align 8
  %119 = load i8, i8* %118, align 1
  %conv226 = sext i8 %119 to i32
  %tobool227 = icmp ne i32 %conv226, 0
  br i1 %tobool227, label %land.rhs.228, label %land.end.232

land.rhs.228:                                     ; preds = %while.cond.225
  %120 = load i8*, i8** %s, align 8
  %121 = load i8, i8* %120, align 1
  %conv229 = sext i8 %121 to i32
  %cmp230 = icmp eq i32 %conv229, 32
  br label %land.end.232

land.end.232:                                     ; preds = %land.rhs.228, %while.cond.225
  %122 = phi i1 [ false, %while.cond.225 ], [ %cmp230, %land.rhs.228 ]
  br i1 %122, label %while.body.233, label %while.end.235

while.body.233:                                   ; preds = %land.end.232
  %123 = load i8*, i8** %s, align 8
  %incdec.ptr234 = getelementptr inbounds i8, i8* %123, i32 1
  store i8* %incdec.ptr234, i8** %s, align 8
  br label %while.cond.225

while.end.235:                                    ; preds = %land.end.232
  %124 = load i8*, i8** %s2.addr, align 8
  %tobool236 = icmp ne i8* %124, null
  br i1 %tobool236, label %if.then.237, label %if.end.256

if.then.237:                                      ; preds = %while.end.235
  %125 = load i8*, i8** %s, align 8
  %126 = load i8, i8* %125, align 1
  %tobool238 = icmp ne i8 %126, 0
  br i1 %tobool238, label %if.then.239, label %if.end.244

if.then.239:                                      ; preds = %if.then.237
  %127 = load i32, i32* %msgok.addr, align 4
  %tobool240 = icmp ne i32 %127, 0
  br i1 %tobool240, label %if.then.241, label %if.end.243

if.then.241:                                      ; preds = %if.then.239
  %128 = load i8*, i8** %s, align 8
  %129 = load i8, i8* %128, align 1
  %conv242 = sext i8 %129 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i32 %conv242)
  br label %if.end.243

if.end.243:                                       ; preds = %if.then.241, %if.then.239
  store i32 -1, i32* %retval
  br label %return

if.end.244:                                       ; preds = %if.then.237
  %130 = load i8*, i8** %s2.addr, align 8
  store i8* %130, i8** %s, align 8
  br label %while.cond.245

while.cond.245:                                   ; preds = %while.body.253, %if.end.244
  %131 = load i8*, i8** %s, align 8
  %132 = load i8, i8* %131, align 1
  %conv246 = sext i8 %132 to i32
  %tobool247 = icmp ne i32 %conv246, 0
  br i1 %tobool247, label %land.rhs.248, label %land.end.252

land.rhs.248:                                     ; preds = %while.cond.245
  %133 = load i8*, i8** %s, align 8
  %134 = load i8, i8* %133, align 1
  %conv249 = sext i8 %134 to i32
  %cmp250 = icmp eq i32 %conv249, 32
  br label %land.end.252

land.end.252:                                     ; preds = %land.rhs.248, %while.cond.245
  %135 = phi i1 [ false, %while.cond.245 ], [ %cmp250, %land.rhs.248 ]
  br i1 %135, label %while.body.253, label %while.end.255

while.body.253:                                   ; preds = %land.end.252
  %136 = load i8*, i8** %s, align 8
  %incdec.ptr254 = getelementptr inbounds i8, i8* %136, i32 1
  store i8* %incdec.ptr254, i8** %s, align 8
  br label %while.cond.245

while.end.255:                                    ; preds = %land.end.252
  br label %if.end.256

if.end.256:                                       ; preds = %while.end.255, %while.end.235
  %137 = load i8*, i8** %s, align 8
  %138 = load i8, i8* %137, align 1
  %tobool257 = icmp ne i8 %138, 0
  br i1 %tobool257, label %if.then.258, label %if.end.348

if.then.258:                                      ; preds = %if.end.256
  store i32 0, i32* %numco, align 4
  store i32 0, i32* %n, align 4
  %139 = load i8*, i8** %s, align 8
  %140 = load i8, i8* %139, align 1
  %conv259 = sext i8 %140 to i32
  %cmp260 = icmp eq i32 %conv259, 46
  br i1 %cmp260, label %if.then.262, label %if.end.264

if.then.262:                                      ; preds = %if.then.258
  %141 = load i32, i32* %numco, align 4
  %inc = add nsw i32 %141, 1
  store i32 %inc, i32* %numco, align 4
  store i32 15, i32* %n, align 4
  %142 = load i8*, i8** %s, align 8
  %incdec.ptr263 = getelementptr inbounds i8, i8* %142, i32 1
  store i8* %incdec.ptr263, i8** %s, align 8
  br label %if.end.264

if.end.264:                                       ; preds = %if.then.262, %if.then.258
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc.306, %if.end.264
  %143 = load i32, i32* %j, align 4
  %cmp265 = icmp slt i32 %143, 2
  br i1 %cmp265, label %land.lhs.true.267, label %land.end.274

land.lhs.true.267:                                ; preds = %for.cond
  %144 = load i8*, i8** %s, align 8
  %145 = load i8, i8* %144, align 1
  %conv268 = sext i8 %145 to i32
  %tobool269 = icmp ne i32 %conv268, 0
  br i1 %tobool269, label %land.rhs.270, label %land.end.274

land.rhs.270:                                     ; preds = %land.lhs.true.267
  %146 = load i8*, i8** %s, align 8
  %147 = load i8, i8* %146, align 1
  %conv271 = sext i8 %147 to i32
  %cmp272 = icmp ne i32 %conv271, 32
  br label %land.end.274

land.end.274:                                     ; preds = %land.rhs.270, %land.lhs.true.267, %for.cond
  %148 = phi i1 [ false, %land.lhs.true.267 ], [ false, %for.cond ], [ %cmp272, %land.rhs.270 ]
  br i1 %148, label %for.body, label %for.end.308

for.body:                                         ; preds = %land.end.274
  store i32 0, i32* %i, align 4
  br label %for.cond.275

for.cond.275:                                     ; preds = %for.inc, %for.body
  %149 = load i32, i32* %i, align 4
  %idxprom = sext i32 %149 to i64
  %arrayidx = getelementptr inbounds [65 x i8], [65 x i8]* @ParseAttrColor.costr, i32 0, i64 %idxprom
  %150 = load i8, i8* %arrayidx, align 1
  %tobool276 = icmp ne i8 %150, 0
  br i1 %tobool276, label %for.body.277, label %for.end

for.body.277:                                     ; preds = %for.cond.275
  %151 = load i8*, i8** %s, align 8
  %152 = load i8, i8* %151, align 1
  %conv278 = sext i8 %152 to i32
  %153 = load i32, i32* %i, align 4
  %idxprom279 = sext i32 %153 to i64
  %arrayidx280 = getelementptr inbounds [65 x i8], [65 x i8]* @ParseAttrColor.costr, i32 0, i64 %idxprom279
  %154 = load i8, i8* %arrayidx280, align 1
  %conv281 = sext i8 %154 to i32
  %cmp282 = icmp eq i32 %conv278, %conv281
  br i1 %cmp282, label %if.then.284, label %if.end.285

if.then.284:                                      ; preds = %for.body.277
  br label %for.end

if.end.285:                                       ; preds = %for.body.277
  br label %for.inc

for.inc:                                          ; preds = %if.end.285
  %155 = load i32, i32* %i, align 4
  %inc286 = add nsw i32 %155, 1
  store i32 %inc286, i32* %i, align 4
  br label %for.cond.275

for.end:                                          ; preds = %if.then.284, %for.cond.275
  %156 = load i32, i32* %i, align 4
  %idxprom287 = sext i32 %156 to i64
  %arrayidx288 = getelementptr inbounds [65 x i8], [65 x i8]* @ParseAttrColor.costr, i32 0, i64 %idxprom287
  %157 = load i8, i8* %arrayidx288, align 1
  %tobool289 = icmp ne i8 %157, 0
  br i1 %tobool289, label %if.end.295, label %if.then.290

if.then.290:                                      ; preds = %for.end
  %158 = load i32, i32* %msgok.addr, align 4
  %tobool291 = icmp ne i32 %158, 0
  br i1 %tobool291, label %if.then.292, label %if.end.294

if.then.292:                                      ; preds = %if.then.290
  %159 = load i8*, i8** %s, align 8
  %160 = load i8, i8* %159, align 1
  %conv293 = sext i8 %160 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.333, i32 0, i32 0), i32 %conv293)
  br label %if.end.294

if.end.294:                                       ; preds = %if.then.292, %if.then.290
  store i32 -1, i32* %retval
  br label %return

if.end.295:                                       ; preds = %for.end
  %161 = load i32, i32* %numco, align 4
  %inc296 = add nsw i32 %161, 1
  store i32 %inc296, i32* %numco, align 4
  %162 = load i32, i32* %n, align 4
  %shl297 = shl i32 %162, 4
  %163 = load i32, i32* %i, align 4
  %and = and i32 %163, 15
  %or298 = or i32 %shl297, %and
  store i32 %or298, i32* %n, align 4
  %164 = load i32, i32* %i, align 4
  %cmp299 = icmp sge i32 %164, 48
  br i1 %cmp299, label %if.then.301, label %if.end.304

if.then.301:                                      ; preds = %if.end.295
  %165 = load i32, i32* %n, align 4
  %and302 = and i32 %165, 8447
  %or303 = or i32 %and302, 512
  store i32 %or303, i32* %n, align 4
  br label %if.end.304

if.end.304:                                       ; preds = %if.then.301, %if.end.295
  %166 = load i8*, i8** %s, align 8
  %incdec.ptr305 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %incdec.ptr305, i8** %s, align 8
  br label %for.inc.306

for.inc.306:                                      ; preds = %if.end.304
  %167 = load i32, i32* %j, align 4
  %inc307 = add nsw i32 %167, 1
  store i32 %inc307, i32* %j, align 4
  br label %for.cond

for.end.308:                                      ; preds = %land.end.274
  %168 = load i32, i32* %n, align 4
  %and309 = and i32 %168, 3840
  %cmp310 = icmp eq i32 %and309, 3840
  br i1 %cmp310, label %if.then.312, label %if.end.314

if.then.312:                                      ; preds = %for.end.308
  %169 = load i32, i32* %n, align 4
  %xor313 = xor i32 %169, 3840
  store i32 %xor313, i32* %n, align 4
  br label %if.end.314

if.end.314:                                       ; preds = %if.then.312, %for.end.308
  %170 = load i32, i32* %n, align 4
  %and315 = and i32 %170, 8192
  %tobool316 = icmp ne i32 %and315, 0
  br i1 %tobool316, label %if.then.317, label %if.end.319

if.then.317:                                      ; preds = %if.end.314
  %171 = load i32, i32* %n, align 4
  %xor318 = xor i32 %171, 9216
  store i32 %xor318, i32* %n, align 4
  br label %if.end.319

if.end.319:                                       ; preds = %if.then.317, %if.end.314
  %172 = load i32, i32* %numco, align 4
  %cmp320 = icmp eq i32 %172, 1
  br i1 %cmp320, label %if.then.322, label %if.end.324

if.then.322:                                      ; preds = %if.end.319
  %173 = load i32, i32* %n, align 4
  %or323 = or i32 %173, 240
  store i32 %or323, i32* %n, align 4
  br label %if.end.324

if.end.324:                                       ; preds = %if.then.322, %if.end.319
  %174 = load i32, i32* %numco, align 4
  %cmp325 = icmp ne i32 %174, 2
  br i1 %cmp325, label %land.lhs.true.327, label %if.end.332

land.lhs.true.327:                                ; preds = %if.end.324
  %175 = load i32, i32* %n, align 4
  %cmp328 = icmp ne i32 %175, 255
  br i1 %cmp328, label %if.then.330, label %if.end.332

if.then.330:                                      ; preds = %land.lhs.true.327
  %176 = load i32, i32* %n, align 4
  %or331 = or i32 %176, 256
  store i32 %or331, i32* %n, align 4
  br label %if.end.332

if.end.332:                                       ; preds = %if.then.330, %land.lhs.true.327, %if.end.324
  %177 = load i8*, i8** %s, align 8
  %178 = load i8, i8* %177, align 1
  %conv333 = sext i8 %178 to i32
  %tobool334 = icmp ne i32 %conv333, 0
  br i1 %tobool334, label %land.lhs.true.335, label %if.end.344

land.lhs.true.335:                                ; preds = %if.end.332
  %179 = load i8*, i8** %s, align 8
  %180 = load i8, i8* %179, align 1
  %conv336 = sext i8 %180 to i32
  %cmp337 = icmp ne i32 %conv336, 32
  br i1 %cmp337, label %if.then.339, label %if.end.344

if.then.339:                                      ; preds = %land.lhs.true.335
  %181 = load i32, i32* %msgok.addr, align 4
  %tobool340 = icmp ne i32 %181, 0
  br i1 %tobool340, label %if.then.341, label %if.end.343

if.then.341:                                      ; preds = %if.then.339
  %182 = load i8*, i8** %s, align 8
  %183 = load i8, i8* %182, align 1
  %conv342 = sext i8 %183 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.334, i32 0, i32 0), i32 %conv342)
  br label %if.end.343

if.end.343:                                       ; preds = %if.then.341, %if.then.339
  store i32 -1, i32* %retval
  br label %return

if.end.344:                                       ; preds = %land.lhs.true.335, %if.end.332
  %184 = load i32, i32* %n, align 4
  %xor345 = xor i32 %184, 255
  store i32 %xor345, i32* %n, align 4
  %185 = load i32, i32* %n, align 4
  %shl346 = shl i32 %185, 16
  %186 = load i32, i32* %r, align 4
  %or347 = or i32 %186, %shl346
  store i32 %or347, i32* %r, align 4
  br label %if.end.348

if.end.348:                                       ; preds = %if.end.344, %if.end.256
  br label %while.cond.349

while.cond.349:                                   ; preds = %while.body.357, %if.end.348
  %187 = load i8*, i8** %s, align 8
  %188 = load i8, i8* %187, align 1
  %conv350 = sext i8 %188 to i32
  %tobool351 = icmp ne i32 %conv350, 0
  br i1 %tobool351, label %land.rhs.352, label %land.end.356

land.rhs.352:                                     ; preds = %while.cond.349
  %189 = load i8*, i8** %s, align 8
  %190 = load i8, i8* %189, align 1
  %conv353 = sext i8 %190 to i32
  %cmp354 = icmp eq i32 %conv353, 32
  br label %land.end.356

land.end.356:                                     ; preds = %land.rhs.352, %while.cond.349
  %191 = phi i1 [ false, %while.cond.349 ], [ %cmp354, %land.rhs.352 ]
  br i1 %191, label %while.body.357, label %while.end.359

while.body.357:                                   ; preds = %land.end.356
  %192 = load i8*, i8** %s, align 8
  %incdec.ptr358 = getelementptr inbounds i8, i8* %192, i32 1
  store i8* %incdec.ptr358, i8** %s, align 8
  br label %while.cond.349

while.end.359:                                    ; preds = %land.end.356
  %193 = load i8*, i8** %s, align 8
  %194 = load i8, i8* %193, align 1
  %tobool360 = icmp ne i8 %194, 0
  br i1 %tobool360, label %if.then.361, label %if.end.366

if.then.361:                                      ; preds = %while.end.359
  %195 = load i32, i32* %msgok.addr, align 4
  %tobool362 = icmp ne i32 %195, 0
  br i1 %tobool362, label %if.then.363, label %if.end.365

if.then.363:                                      ; preds = %if.then.361
  %196 = load i8*, i8** %s, align 8
  %197 = load i8, i8* %196, align 1
  %conv364 = sext i8 %197 to i32
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.332, i32 0, i32 0), i32 %conv364)
  br label %if.end.365

if.end.365:                                       ; preds = %if.then.363, %if.then.361
  store i32 -1, i32* %retval
  br label %return

if.end.366:                                       ; preds = %while.end.359
  br label %do.body

do.body:                                          ; preds = %if.end.366
  br label %do.end

do.end:                                           ; preds = %do.body
  %198 = load i32, i32* %r, align 4
  store i32 %198, i32* %retval
  br label %return

return:                                           ; preds = %do.end, %if.end.365, %if.end.343, %if.end.294, %if.end.243, %if.end.201, %if.end.181, %if.end.128
  %199 = load i32, i32* %retval
  ret i32 %199
}

; Function Attrs: nounwind uwtable
define void @ApplyAttrColor(i32 %i, %struct.mchar* %mc) #0 {
entry:
  %i.addr = alloca i32, align 4
  %mc.addr = alloca %struct.mchar*, align 8
  store i32 %i, i32* %i.addr, align 4
  store %struct.mchar* %mc, %struct.mchar** %mc.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load i32, i32* %i.addr, align 4
  %shr = ashr i32 %0, 8
  %and = and i32 %shr, 255
  %1 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %attr = getelementptr inbounds %struct.mchar, %struct.mchar* %1, i32 0, i32 1
  %2 = load i8, i8* %attr, align 1
  %conv = zext i8 %2 to i32
  %or = or i32 %conv, %and
  %conv1 = trunc i32 %or to i8
  store i8 %conv1, i8* %attr, align 1
  %3 = load i32, i32* %i.addr, align 4
  %and2 = and i32 %3, 255
  %4 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %attr3 = getelementptr inbounds %struct.mchar, %struct.mchar* %4, i32 0, i32 1
  %5 = load i8, i8* %attr3, align 1
  %conv4 = zext i8 %5 to i32
  %xor = xor i32 %conv4, %and2
  %conv5 = trunc i32 %xor to i8
  store i8 %conv5, i8* %attr3, align 1
  %6 = load i32, i32* %i.addr, align 4
  %shr6 = ashr i32 %6, 16
  %xor7 = xor i32 %shr6, 255
  store i32 %xor7, i32* %i.addr, align 4
  %7 = load i32, i32* %i.addr, align 4
  %and8 = and i32 %7, 256
  %cmp = icmp ne i32 %and8, 0
  br i1 %cmp, label %if.then, label %if.end.25

if.then:                                          ; preds = %do.end
  %8 = load i32, i32* %i.addr, align 4
  %and10 = and i32 %8, 3839
  store i32 %and10, i32* %i.addr, align 4
  %9 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %attr11 = getelementptr inbounds %struct.mchar, %struct.mchar* %9, i32 0, i32 1
  %10 = load i8, i8* %attr11, align 1
  %conv12 = zext i8 %10 to i32
  %and13 = and i32 %conv12, 24
  %tobool = icmp ne i32 %and13, 0
  br i1 %tobool, label %if.then.14, label %if.end

if.then.14:                                       ; preds = %if.then
  %11 = load i32, i32* %i.addr, align 4
  %and15 = and i32 %11, 15
  %shl = shl i32 %and15, 4
  %12 = load i32, i32* %i.addr, align 4
  %and16 = and i32 %12, 240
  %shr17 = ashr i32 %and16, 4
  %or18 = or i32 %shl, %shr17
  %13 = load i32, i32* %i.addr, align 4
  %and19 = and i32 %13, 512
  %shl20 = shl i32 %and19, 1
  %or21 = or i32 %or18, %shl20
  %14 = load i32, i32* %i.addr, align 4
  %and22 = and i32 %14, 1024
  %shr23 = ashr i32 %and22, 1
  %or24 = or i32 %or21, %shr23
  store i32 %or24, i32* %i.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then.14, %if.then
  br label %if.end.25

if.end.25:                                        ; preds = %if.end, %do.end
  %15 = load i32, i32* %i.addr, align 4
  %and26 = and i32 %15, 15
  %cmp27 = icmp ne i32 %and26, 15
  br i1 %cmp27, label %if.then.29, label %if.end.38

if.then.29:                                       ; preds = %if.end.25
  %16 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %attr30 = getelementptr inbounds %struct.mchar, %struct.mchar* %16, i32 0, i32 1
  %17 = load i8, i8* %attr30, align 1
  %conv31 = zext i8 %17 to i32
  %and32 = and i32 %conv31, 191
  %18 = load i32, i32* %i.addr, align 4
  %shr33 = ashr i32 %18, 3
  %and34 = and i32 %shr33, 64
  %or35 = or i32 %and32, %and34
  %conv36 = trunc i32 %or35 to i8
  %19 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %attr37 = getelementptr inbounds %struct.mchar, %struct.mchar* %19, i32 0, i32 1
  store i8 %conv36, i8* %attr37, align 1
  br label %if.end.38

if.end.38:                                        ; preds = %if.then.29, %if.end.25
  %20 = load i32, i32* %i.addr, align 4
  %and39 = and i32 %20, 240
  %cmp40 = icmp ne i32 %and39, 240
  br i1 %cmp40, label %if.then.42, label %if.end.51

if.then.42:                                       ; preds = %if.end.38
  %21 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %attr43 = getelementptr inbounds %struct.mchar, %struct.mchar* %21, i32 0, i32 1
  %22 = load i8, i8* %attr43, align 1
  %conv44 = zext i8 %22 to i32
  %and45 = and i32 %conv44, 127
  %23 = load i32, i32* %i.addr, align 4
  %shr46 = ashr i32 %23, 3
  %and47 = and i32 %shr46, 128
  %or48 = or i32 %and45, %and47
  %conv49 = trunc i32 %or48 to i8
  %24 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %attr50 = getelementptr inbounds %struct.mchar, %struct.mchar* %24, i32 0, i32 1
  store i8 %conv49, i8* %attr50, align 1
  br label %if.end.51

if.end.51:                                        ; preds = %if.then.42, %if.end.38
  %25 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %color = getelementptr inbounds %struct.mchar, %struct.mchar* %25, i32 0, i32 4
  %26 = load i8, i8* %color, align 1
  %conv52 = zext i8 %26 to i32
  %xor53 = xor i32 153, %conv52
  %conv54 = trunc i32 %xor53 to i8
  %27 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %color55 = getelementptr inbounds %struct.mchar, %struct.mchar* %27, i32 0, i32 4
  store i8 %conv54, i8* %color55, align 1
  %28 = load i32, i32* %i.addr, align 4
  %and56 = and i32 %28, 14
  %cmp57 = icmp eq i32 %and56, 14
  br i1 %cmp57, label %if.then.59, label %if.end.65

if.then.59:                                       ; preds = %if.end.51
  %29 = load i32, i32* %i.addr, align 4
  %and60 = and i32 %29, 240
  %30 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %color61 = getelementptr inbounds %struct.mchar, %struct.mchar* %30, i32 0, i32 4
  %31 = load i8, i8* %color61, align 1
  %conv62 = zext i8 %31 to i32
  %and63 = and i32 %conv62, 15
  %or64 = or i32 %and60, %and63
  store i32 %or64, i32* %i.addr, align 4
  br label %if.end.65

if.end.65:                                        ; preds = %if.then.59, %if.end.51
  %32 = load i32, i32* %i.addr, align 4
  %and66 = and i32 %32, 224
  %cmp67 = icmp eq i32 %and66, 224
  br i1 %cmp67, label %if.then.69, label %if.end.75

if.then.69:                                       ; preds = %if.end.65
  %33 = load i32, i32* %i.addr, align 4
  %and70 = and i32 %33, 15
  %34 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %color71 = getelementptr inbounds %struct.mchar, %struct.mchar* %34, i32 0, i32 4
  %35 = load i8, i8* %color71, align 1
  %conv72 = zext i8 %35 to i32
  %and73 = and i32 %conv72, 240
  %or74 = or i32 %and70, %and73
  store i32 %or74, i32* %i.addr, align 4
  br label %if.end.75

if.end.75:                                        ; preds = %if.then.69, %if.end.65
  %36 = load i32, i32* %i.addr, align 4
  %xor76 = xor i32 153, %36
  %conv77 = trunc i32 %xor76 to i8
  %37 = load %struct.mchar*, %struct.mchar** %mc.addr, align 8
  %color78 = getelementptr inbounds %struct.mchar, %struct.mchar* %37, i32 0, i32 4
  store i8 %conv77, i8* %color78, align 1
  br label %do.body.79

do.body.79:                                       ; preds = %if.end.75
  br label %do.end.80

do.end.80:                                        ; preds = %do.body.79
  ret void
}

declare void @do_source(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @InputSu(%struct.win* %w, %struct.acluser** %up, i8* %name) #0 {
entry:
  %retval = alloca i32, align 4
  %w.addr = alloca %struct.win*, align 8
  %up.addr = alloca %struct.acluser**, align 8
  %name.addr = alloca i8*, align 8
  %i = alloca %struct.inputsu*, align 8
  store %struct.win* %w, %struct.win** %w.addr, align 8
  store %struct.acluser** %up, %struct.acluser*** %up.addr, align 8
  store i8* %name, i8** %name.addr, align 8
  %call = call noalias i8* @calloc(i64 1, i64 296) #4
  %0 = bitcast i8* %call to %struct.inputsu*
  store %struct.inputsu* %0, %struct.inputsu** %i, align 8
  %tobool = icmp ne %struct.inputsu* %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.acluser**, %struct.acluser*** %up.addr, align 8
  %2 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %up1 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %2, i32 0, i32 0
  store %struct.acluser** %1, %struct.acluser*** %up1, align 8
  %3 = load i8*, i8** %name.addr, align 8
  %tobool2 = icmp ne i8* %3, null
  br i1 %tobool2, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8*, i8** %name.addr, align 8
  %5 = load i8, i8* %4, align 1
  %conv = sext i8 %5 to i32
  %tobool3 = icmp ne i32 %conv, 0
  br i1 %tobool3, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %land.lhs.true
  %6 = load i8*, i8** %name.addr, align 8
  %7 = load i8*, i8** %name.addr, align 8
  %call5 = call i64 @strlen(i8* %7) #8
  %conv6 = trunc i64 %call5 to i32
  %8 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %9 = bitcast %struct.inputsu* %8 to i8*
  call void @su_fin(i8* %6, i32 %conv6, i8* %9)
  br label %if.end.7

if.else:                                          ; preds = %land.lhs.true, %if.end
  %10 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %11 = bitcast %struct.inputsu* %10 to i8*
  call void @su_fin(i8* null, i32 0, i8* %11)
  br label %if.end.7

if.end.7:                                         ; preds = %if.else, %if.then.4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end.7, %if.then
  %12 = load i32, i32* %retval
  ret i32 %12
}

declare i8* @DoSu(%struct.acluser**, i8*, i8*, i8*) #2

declare i32 @AddCanvas(i32) #2

declare void @RemCanvas() #2

declare void @OneCanvas() #2

declare void @RethinkViewportOffsets(%struct.canvas*) #2

declare void @LGotoPos(%struct.layer*, i32, i32) #2

declare %struct.canvas* @FindCanvas(i32, i32) #2

; Function Attrs: nounwind uwtable
define void @SetForeCanvas(%struct.display* %d, %struct.canvas* %cv) #0 {
entry:
  %d.addr = alloca %struct.display*, align 8
  %cv.addr = alloca %struct.canvas*, align 8
  %odisplay = alloca %struct.display*, align 8
  %olddisplay = alloca %struct.display*, align 8
  %oldflayer = alloca %struct.layer*, align 8
  %l = alloca %struct.layer*, align 8
  %cvlist = alloca %struct.canvas*, align 8
  %cvlnext = alloca %struct.canvas*, align 8
  store %struct.display* %d, %struct.display** %d.addr, align 8
  store %struct.canvas* %cv, %struct.canvas** %cv.addr, align 8
  %0 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %0, %struct.display** %odisplay, align 8
  %1 = load %struct.display*, %struct.display** %d.addr, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %1, i32 0, i32 4
  %2 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %3 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %cmp = icmp eq %struct.canvas* %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.display*, %struct.display** %d.addr, align 8
  store %struct.display* %4, %struct.display** @display, align 8
  %5 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %6 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv1 = getelementptr inbounds %struct.display, %struct.display* %6, i32 0, i32 4
  store %struct.canvas* %5, %struct.canvas** %d_forecv1, align 8
  %7 = load i32, i32* @focusminwidth, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false.6

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* @focusminwidth, align 4
  %cmp2 = icmp slt i32 %8, 0
  br i1 %cmp2, label %if.then.16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %9 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv3 = getelementptr inbounds %struct.display, %struct.display* %9, i32 0, i32 4
  %10 = load %struct.canvas*, %struct.canvas** %d_forecv3, align 8
  %c_xe = getelementptr inbounds %struct.canvas, %struct.canvas* %10, i32 0, i32 15
  %11 = load i32, i32* %c_xe, align 4
  %12 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv4 = getelementptr inbounds %struct.display, %struct.display* %12, i32 0, i32 4
  %13 = load %struct.canvas*, %struct.canvas** %d_forecv4, align 8
  %c_xs = getelementptr inbounds %struct.canvas, %struct.canvas* %13, i32 0, i32 14
  %14 = load i32, i32* %c_xs, align 4
  %sub = sub nsw i32 %11, %14
  %add = add nsw i32 %sub, 1
  %15 = load i32, i32* @focusminwidth, align 4
  %cmp5 = icmp slt i32 %add, %15
  br i1 %cmp5, label %if.then.16, label %lor.lhs.false.6

lor.lhs.false.6:                                  ; preds = %lor.lhs.false, %if.end
  %16 = load i32, i32* @focusminheight, align 4
  %tobool7 = icmp ne i32 %16, 0
  br i1 %tobool7, label %land.lhs.true.8, label %if.end.17

land.lhs.true.8:                                  ; preds = %lor.lhs.false.6
  %17 = load i32, i32* @focusminheight, align 4
  %cmp9 = icmp slt i32 %17, 0
  br i1 %cmp9, label %if.then.16, label %lor.lhs.false.10

lor.lhs.false.10:                                 ; preds = %land.lhs.true.8
  %18 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv11 = getelementptr inbounds %struct.display, %struct.display* %18, i32 0, i32 4
  %19 = load %struct.canvas*, %struct.canvas** %d_forecv11, align 8
  %c_ye = getelementptr inbounds %struct.canvas, %struct.canvas* %19, i32 0, i32 17
  %20 = load i32, i32* %c_ye, align 4
  %21 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv12 = getelementptr inbounds %struct.display, %struct.display* %21, i32 0, i32 4
  %22 = load %struct.canvas*, %struct.canvas** %d_forecv12, align 8
  %c_ys = getelementptr inbounds %struct.canvas, %struct.canvas* %22, i32 0, i32 16
  %23 = load i32, i32* %c_ys, align 4
  %sub13 = sub nsw i32 %20, %23
  %add14 = add nsw i32 %sub13, 1
  %24 = load i32, i32* @focusminheight, align 4
  %cmp15 = icmp slt i32 %add14, %24
  br i1 %cmp15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %lor.lhs.false.10, %land.lhs.true.8, %lor.lhs.false, %land.lhs.true
  %25 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas = getelementptr inbounds %struct.display, %struct.display* %25, i32 0, i32 2
  call void @ResizeCanvas(%struct.canvas* %d_canvas)
  call void @RecreateCanvasChain()
  %call = call i32 @RethinkDisplayViewports()
  call void @ResizeLayersToCanvases()
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.16, %lor.lhs.false.10, %lor.lhs.false.6
  %26 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv18 = getelementptr inbounds %struct.display, %struct.display* %26, i32 0, i32 4
  %27 = load %struct.canvas*, %struct.canvas** %d_forecv18, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %27, i32 0, i32 9
  %28 = load %struct.layer*, %struct.layer** %c_layer, align 8
  %l_bottom = getelementptr inbounds %struct.layer, %struct.layer* %28, i32 0, i32 9
  %29 = load %struct.layer*, %struct.layer** %l_bottom, align 8
  %l_data = getelementptr inbounds %struct.layer, %struct.layer* %29, i32 0, i32 7
  %30 = load i8*, i8** %l_data, align 8
  %31 = bitcast i8* %30 to %struct.win*
  %32 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %32, i32 0, i32 10
  store %struct.win* %31, %struct.win** %d_fore, align 8
  store %struct.win* %31, %struct.win** @fore, align 8
  %33 = load %struct.display*, %struct.display** @display, align 8
  %d_other = getelementptr inbounds %struct.display, %struct.display* %33, i32 0, i32 11
  %34 = load %struct.win*, %struct.win** %d_other, align 8
  %35 = load %struct.win*, %struct.win** @fore, align 8
  %cmp19 = icmp eq %struct.win* %34, %35
  br i1 %cmp19, label %if.then.20, label %if.end.22

if.then.20:                                       ; preds = %if.end.17
  %36 = load %struct.display*, %struct.display** @display, align 8
  %d_other21 = getelementptr inbounds %struct.display, %struct.display* %36, i32 0, i32 11
  store %struct.win* null, %struct.win** %d_other21, align 8
  br label %if.end.22

if.end.22:                                        ; preds = %if.then.20, %if.end.17
  %37 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv23 = getelementptr inbounds %struct.display, %struct.display* %37, i32 0, i32 4
  %38 = load %struct.canvas*, %struct.canvas** %d_forecv23, align 8
  %c_layer24 = getelementptr inbounds %struct.canvas, %struct.canvas* %38, i32 0, i32 9
  %39 = load %struct.layer*, %struct.layer** %c_layer24, align 8
  store %struct.layer* %39, %struct.layer** @flayer, align 8
  call void @RefreshHStatus()
  %40 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv25 = getelementptr inbounds %struct.display, %struct.display* %40, i32 0, i32 4
  %41 = load %struct.canvas*, %struct.canvas** %d_forecv25, align 8
  %c_layer26 = getelementptr inbounds %struct.canvas, %struct.canvas* %41, i32 0, i32 9
  %42 = load %struct.layer*, %struct.layer** %c_layer26, align 8
  store %struct.layer* %42, %struct.layer** @flayer, align 8
  %43 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %43, %struct.display** %olddisplay, align 8
  %44 = load %struct.layer*, %struct.layer** @flayer, align 8
  store %struct.layer* %44, %struct.layer** %oldflayer, align 8
  %45 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv27 = getelementptr inbounds %struct.display, %struct.display* %45, i32 0, i32 4
  %46 = load %struct.canvas*, %struct.canvas** %d_forecv27, align 8
  %c_layer28 = getelementptr inbounds %struct.canvas, %struct.canvas* %46, i32 0, i32 9
  %47 = load %struct.layer*, %struct.layer** %c_layer28, align 8
  store %struct.layer* %47, %struct.layer** %l, align 8
  %48 = load %struct.layer*, %struct.layer** %l, align 8
  %l_cvlist = getelementptr inbounds %struct.layer, %struct.layer* %48, i32 0, i32 0
  %49 = load %struct.canvas*, %struct.canvas** %l_cvlist, align 8
  store %struct.canvas* %49, %struct.canvas** %cvlist, align 8
  %50 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv29 = getelementptr inbounds %struct.display, %struct.display* %50, i32 0, i32 4
  %51 = load %struct.canvas*, %struct.canvas** %d_forecv29, align 8
  %c_lnext = getelementptr inbounds %struct.canvas, %struct.canvas* %51, i32 0, i32 10
  %52 = load %struct.canvas*, %struct.canvas** %c_lnext, align 8
  store %struct.canvas* %52, %struct.canvas** %cvlnext, align 8
  %53 = load %struct.layer*, %struct.layer** %l, align 8
  store %struct.layer* %53, %struct.layer** @flayer, align 8
  %54 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv30 = getelementptr inbounds %struct.display, %struct.display* %54, i32 0, i32 4
  %55 = load %struct.canvas*, %struct.canvas** %d_forecv30, align 8
  %56 = load %struct.layer*, %struct.layer** %l, align 8
  %l_cvlist31 = getelementptr inbounds %struct.layer, %struct.layer* %56, i32 0, i32 0
  store %struct.canvas* %55, %struct.canvas** %l_cvlist31, align 8
  %57 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv32 = getelementptr inbounds %struct.display, %struct.display* %57, i32 0, i32 4
  %58 = load %struct.canvas*, %struct.canvas** %d_forecv32, align 8
  %c_lnext33 = getelementptr inbounds %struct.canvas, %struct.canvas* %58, i32 0, i32 10
  store %struct.canvas* null, %struct.canvas** %c_lnext33, align 8
  %59 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_layfn = getelementptr inbounds %struct.layer, %struct.layer* %59, i32 0, i32 6
  %60 = load %struct.LayFuncs*, %struct.LayFuncs** %l_layfn, align 8
  %lf_LayRestore = getelementptr inbounds %struct.LayFuncs, %struct.LayFuncs* %60, i32 0, i32 6
  %61 = load void ()*, void ()** %lf_LayRestore, align 8
  call void %61()
  %62 = load %struct.layer*, %struct.layer** @flayer, align 8
  %63 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_x = getelementptr inbounds %struct.layer, %struct.layer* %63, i32 0, i32 3
  %64 = load i32, i32* %l_x, align 4
  %65 = load %struct.layer*, %struct.layer** @flayer, align 8
  %l_y = getelementptr inbounds %struct.layer, %struct.layer* %65, i32 0, i32 4
  %66 = load i32, i32* %l_y, align 4
  call void @LGotoPos(%struct.layer* %62, i32 %64, i32 %66)
  %67 = load %struct.layer*, %struct.layer** %oldflayer, align 8
  store %struct.layer* %67, %struct.layer** @flayer, align 8
  %68 = load %struct.canvas*, %struct.canvas** %cvlist, align 8
  %69 = load %struct.layer*, %struct.layer** %l, align 8
  %l_cvlist34 = getelementptr inbounds %struct.layer, %struct.layer* %69, i32 0, i32 0
  store %struct.canvas* %68, %struct.canvas** %l_cvlist34, align 8
  %70 = load %struct.canvas*, %struct.canvas** %cvlnext, align 8
  %71 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv35 = getelementptr inbounds %struct.display, %struct.display* %71, i32 0, i32 4
  %72 = load %struct.canvas*, %struct.canvas** %d_forecv35, align 8
  %c_lnext36 = getelementptr inbounds %struct.canvas, %struct.canvas* %72, i32 0, i32 10
  store %struct.canvas* %70, %struct.canvas** %c_lnext36, align 8
  %73 = load %struct.display*, %struct.display** %olddisplay, align 8
  store %struct.display* %73, %struct.display** @display, align 8
  call void @WindowChanged(%struct.win* null, i32 70)
  %74 = load %struct.display*, %struct.display** %odisplay, align 8
  store %struct.display* %74, %struct.display** @display, align 8
  br label %return

return:                                           ; preds = %if.end.22, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ResizeRegions(i8* %arg, i32 %flags) #0 {
entry:
  %arg.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %cv = alloca %struct.canvas*, align 8
  %diff = alloca i32, align 4
  %l = alloca i32, align 4
  %gflag = alloca i32, align 4
  %abs = alloca i32, align 4
  %percent = alloca i32, align 4
  %orient = alloca i32, align 4
  %cv20 = alloca %struct.canvas*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i32 0, i32* %gflag, align 4
  store i32 0, i32* %abs, align 4
  store i32 0, i32* %percent, align 4
  store i32 0, i32* %orient, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load i8*, i8** %arg.addr, align 8
  %1 = load i8, i8* %0, align 1
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %do.end
  br label %return

if.end:                                           ; preds = %do.end
  %2 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %2, i32 0, i32 4
  %3 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %c_slorient = getelementptr inbounds %struct.canvas, %struct.canvas* %3, i32 0, i32 6
  %4 = load i32, i32* %c_slorient, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then.1, label %if.end.2

if.then.1:                                        ; preds = %if.end
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.257, i32 0, i32 0))
  br label %return

if.end.2:                                         ; preds = %if.end
  %5 = load i32, i32* %flags.addr, align 4
  %and = and i32 %5, 4
  %tobool3 = icmp ne i32 %and, 0
  %cond = select i1 %tobool3, i32 0, i32 1
  store i32 %cond, i32* %gflag, align 4
  %6 = load i32, i32* %flags.addr, align 4
  %and4 = and i32 %6, 1
  %tobool5 = icmp ne i32 %and4, 0
  %cond6 = select i1 %tobool5, i32 2, i32 0
  %7 = load i32, i32* %orient, align 4
  %or = or i32 %7, %cond6
  store i32 %or, i32* %orient, align 4
  %8 = load i32, i32* %flags.addr, align 4
  %and7 = and i32 %8, 2
  %tobool8 = icmp ne i32 %and7, 0
  %cond9 = select i1 %tobool8, i32 1, i32 0
  %9 = load i32, i32* %orient, align 4
  %or10 = or i32 %9, %cond9
  store i32 %or10, i32* %orient, align 4
  %10 = load i32, i32* %orient, align 4
  %cmp11 = icmp eq i32 %10, 0
  br i1 %cmp11, label %if.then.12, label %if.end.15

if.then.12:                                       ; preds = %if.end.2
  %11 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv13 = getelementptr inbounds %struct.display, %struct.display* %11, i32 0, i32 4
  %12 = load %struct.canvas*, %struct.canvas** %d_forecv13, align 8
  %c_slorient14 = getelementptr inbounds %struct.canvas, %struct.canvas* %12, i32 0, i32 6
  %13 = load i32, i32* %c_slorient14, align 4
  store i32 %13, i32* %orient, align 4
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.12, %if.end.2
  %14 = load i8*, i8** %arg.addr, align 8
  %call = call i64 @strlen(i8* %14) #8
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %l, align 4
  %15 = load i8*, i8** %arg.addr, align 8
  %16 = load i8, i8* %15, align 1
  %conv16 = sext i8 %16 to i32
  %cmp17 = icmp eq i32 %conv16, 61
  br i1 %cmp17, label %if.then.19, label %if.end.43

if.then.19:                                       ; preds = %if.end.15
  %17 = load i32, i32* %gflag, align 4
  %tobool21 = icmp ne i32 %17, 0
  br i1 %tobool21, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.19
  %18 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas = getelementptr inbounds %struct.display, %struct.display* %18, i32 0, i32 2
  br label %cond.end

cond.false:                                       ; preds = %if.then.19
  %19 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv22 = getelementptr inbounds %struct.display, %struct.display* %19, i32 0, i32 4
  %20 = load %struct.canvas*, %struct.canvas** %d_forecv22, align 8
  %c_slback = getelementptr inbounds %struct.canvas, %struct.canvas* %20, i32 0, i32 5
  %21 = load %struct.canvas*, %struct.canvas** %c_slback, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond23 = phi %struct.canvas* [ %d_canvas, %cond.true ], [ %21, %cond.false ]
  store %struct.canvas* %cond23, %struct.canvas** %cv20, align 8
  %22 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  %c_slperp = getelementptr inbounds %struct.canvas, %struct.canvas* %22, i32 0, i32 4
  %23 = load %struct.canvas*, %struct.canvas** %c_slperp, align 8
  %c_slorient24 = getelementptr inbounds %struct.canvas, %struct.canvas* %23, i32 0, i32 6
  %24 = load i32, i32* %c_slorient24, align 4
  %25 = load i32, i32* %orient, align 4
  %and25 = and i32 %24, %25
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then.27, label %if.end.29

if.then.27:                                       ; preds = %cond.end
  %26 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  %c_slperp28 = getelementptr inbounds %struct.canvas, %struct.canvas* %26, i32 0, i32 4
  %27 = load %struct.canvas*, %struct.canvas** %c_slperp28, align 8
  %28 = load i32, i32* %gflag, align 4
  call void @EqualizeCanvas(%struct.canvas* %27, i32 %28)
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.27, %cond.end
  %29 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  %c_slperp30 = getelementptr inbounds %struct.canvas, %struct.canvas* %29, i32 0, i32 4
  %30 = load %struct.canvas*, %struct.canvas** %c_slperp30, align 8
  %c_slorient31 = getelementptr inbounds %struct.canvas, %struct.canvas* %30, i32 0, i32 6
  %31 = load i32, i32* %c_slorient31, align 4
  %xor = xor i32 %31, 3
  %32 = load i32, i32* %orient, align 4
  %and32 = and i32 %xor, %32
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then.34, label %if.end.41

if.then.34:                                       ; preds = %if.end.29
  %33 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  %c_slback35 = getelementptr inbounds %struct.canvas, %struct.canvas* %33, i32 0, i32 5
  %34 = load %struct.canvas*, %struct.canvas** %c_slback35, align 8
  %tobool36 = icmp ne %struct.canvas* %34, null
  br i1 %tobool36, label %if.then.37, label %if.else

if.then.37:                                       ; preds = %if.then.34
  %35 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  %c_slback38 = getelementptr inbounds %struct.canvas, %struct.canvas* %35, i32 0, i32 5
  %36 = load %struct.canvas*, %struct.canvas** %c_slback38, align 8
  store %struct.canvas* %36, %struct.canvas** %cv20, align 8
  %37 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  %c_slperp39 = getelementptr inbounds %struct.canvas, %struct.canvas* %37, i32 0, i32 4
  %38 = load %struct.canvas*, %struct.canvas** %c_slperp39, align 8
  %39 = load i32, i32* %gflag, align 4
  call void @EqualizeCanvas(%struct.canvas* %38, i32 %39)
  br label %if.end.40

if.else:                                          ; preds = %if.then.34
  %40 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  %41 = load i32, i32* %gflag, align 4
  call void @EqualizeCanvas(%struct.canvas* %40, i32 %41)
  br label %if.end.40

if.end.40:                                        ; preds = %if.else, %if.then.37
  br label %if.end.41

if.end.41:                                        ; preds = %if.end.40, %if.end.29
  %42 = load %struct.canvas*, %struct.canvas** %cv20, align 8
  call void @ResizeCanvas(%struct.canvas* %42)
  call void @RecreateCanvasChain()
  %call42 = call i32 @RethinkDisplayViewports()
  call void @ResizeLayersToCanvases()
  br label %return

if.end.43:                                        ; preds = %if.end.15
  %43 = load i8*, i8** %arg.addr, align 8
  %call44 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.419, i32 0, i32 0)) #8
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %lor.lhs.false, label %if.then.48

lor.lhs.false:                                    ; preds = %if.end.43
  %44 = load i8*, i8** %arg.addr, align 8
  %call46 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.420, i32 0, i32 0)) #8
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.else.49, label %if.then.48

if.then.48:                                       ; preds = %lor.lhs.false, %if.end.43
  store i32 2, i32* %abs, align 4
  store i32 0, i32* %diff, align 4
  br label %if.end.89

if.else.49:                                       ; preds = %lor.lhs.false
  %45 = load i8*, i8** %arg.addr, align 8
  %call50 = call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.271, i32 0, i32 0)) #8
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %lor.lhs.false.52, label %if.then.55

lor.lhs.false.52:                                 ; preds = %if.else.49
  %46 = load i8*, i8** %arg.addr, align 8
  %call53 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.272, i32 0, i32 0)) #8
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %if.else.56, label %if.then.55

if.then.55:                                       ; preds = %lor.lhs.false.52, %if.else.49
  store i32 2, i32* %abs, align 4
  store i32 1, i32* %diff, align 4
  br label %if.end.88

if.else.56:                                       ; preds = %lor.lhs.false.52
  %47 = load i32, i32* %l, align 4
  %cmp57 = icmp sgt i32 %47, 0
  br i1 %cmp57, label %land.lhs.true, label %if.end.63

land.lhs.true:                                    ; preds = %if.else.56
  %48 = load i32, i32* %l, align 4
  %sub = sub nsw i32 %48, 1
  %idxprom = sext i32 %sub to i64
  %49 = load i8*, i8** %arg.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %49, i64 %idxprom
  %50 = load i8, i8* %arrayidx, align 1
  %conv59 = sext i8 %50 to i32
  %cmp60 = icmp eq i32 %conv59, 37
  br i1 %cmp60, label %if.then.62, label %if.end.63

if.then.62:                                       ; preds = %land.lhs.true
  store i32 1000, i32* %percent, align 4
  br label %if.end.63

if.end.63:                                        ; preds = %if.then.62, %land.lhs.true, %if.else.56
  %51 = load i8*, i8** %arg.addr, align 8
  %52 = load i8, i8* %51, align 1
  %conv64 = sext i8 %52 to i32
  %cmp65 = icmp eq i32 %conv64, 43
  br i1 %cmp65, label %if.then.67, label %if.else.69

if.then.67:                                       ; preds = %if.end.63
  %53 = load i8*, i8** %arg.addr, align 8
  %add.ptr = getelementptr inbounds i8, i8* %53, i64 1
  %call68 = call i32 @atoi(i8* %add.ptr) #8
  store i32 %call68, i32* %diff, align 4
  br label %if.end.87

if.else.69:                                       ; preds = %if.end.63
  %54 = load i8*, i8** %arg.addr, align 8
  %55 = load i8, i8* %54, align 1
  %conv70 = sext i8 %55 to i32
  %cmp71 = icmp eq i32 %conv70, 45
  br i1 %cmp71, label %if.then.73, label %if.else.77

if.then.73:                                       ; preds = %if.else.69
  %56 = load i8*, i8** %arg.addr, align 8
  %add.ptr74 = getelementptr inbounds i8, i8* %56, i64 1
  %call75 = call i32 @atoi(i8* %add.ptr74) #8
  %sub76 = sub nsw i32 0, %call75
  store i32 %sub76, i32* %diff, align 4
  br label %if.end.86

if.else.77:                                       ; preds = %if.else.69
  %57 = load i8*, i8** %arg.addr, align 8
  %call78 = call i32 @atoi(i8* %57) #8
  store i32 %call78, i32* %diff, align 4
  %58 = load i32, i32* %diff, align 4
  %cmp79 = icmp slt i32 %58, 0
  br i1 %cmp79, label %if.then.81, label %if.end.82

if.then.81:                                       ; preds = %if.else.77
  store i32 0, i32* %diff, align 4
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.81, %if.else.77
  %59 = load i32, i32* %diff, align 4
  %cmp83 = icmp eq i32 %59, 0
  %cond85 = select i1 %cmp83, i32 2, i32 1
  store i32 %cond85, i32* %abs, align 4
  br label %if.end.86

if.end.86:                                        ; preds = %if.end.82, %if.then.73
  br label %if.end.87

if.end.87:                                        ; preds = %if.end.86, %if.then.67
  br label %if.end.88

if.end.88:                                        ; preds = %if.end.87, %if.then.55
  br label %if.end.89

if.end.89:                                        ; preds = %if.end.88, %if.then.48
  %60 = load i32, i32* %abs, align 4
  %tobool90 = icmp ne i32 %60, 0
  br i1 %tobool90, label %if.end.94, label %land.lhs.true.91

land.lhs.true.91:                                 ; preds = %if.end.89
  %61 = load i32, i32* %diff, align 4
  %tobool92 = icmp ne i32 %61, 0
  br i1 %tobool92, label %if.end.94, label %if.then.93

if.then.93:                                       ; preds = %land.lhs.true.91
  br label %return

if.end.94:                                        ; preds = %land.lhs.true.91, %if.end.89
  %62 = load i32, i32* %percent, align 4
  %tobool95 = icmp ne i32 %62, 0
  br i1 %tobool95, label %if.then.96, label %if.end.97

if.then.96:                                       ; preds = %if.end.94
  %63 = load i32, i32* %diff, align 4
  %64 = load i32, i32* %percent, align 4
  %mul = mul nsw i32 %63, %64
  %div = sdiv i32 %mul, 100
  store i32 %div, i32* %diff, align 4
  br label %if.end.97

if.end.97:                                        ; preds = %if.then.96, %if.end.94
  %65 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv98 = getelementptr inbounds %struct.display, %struct.display* %65, i32 0, i32 4
  %66 = load %struct.canvas*, %struct.canvas** %d_forecv98, align 8
  store %struct.canvas* %66, %struct.canvas** %cv, align 8
  %67 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slorient99 = getelementptr inbounds %struct.canvas, %struct.canvas* %67, i32 0, i32 6
  %68 = load i32, i32* %c_slorient99, align 4
  %69 = load i32, i32* %orient, align 4
  %and100 = and i32 %68, %69
  %tobool101 = icmp ne i32 %and100, 0
  br i1 %tobool101, label %if.then.102, label %if.end.104

if.then.102:                                      ; preds = %if.end.97
  %70 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %71 = load i32, i32* %abs, align 4
  %72 = load i32, i32* %diff, align 4
  %73 = load i32, i32* %gflag, align 4
  %74 = load i32, i32* %percent, align 4
  %call103 = call i32 @ChangeCanvasSize(%struct.canvas* %70, i32 %71, i32 %72, i32 %73, i32 %74)
  br label %if.end.104

if.end.104:                                       ; preds = %if.then.102, %if.end.97
  %75 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slback105 = getelementptr inbounds %struct.canvas, %struct.canvas* %75, i32 0, i32 5
  %76 = load %struct.canvas*, %struct.canvas** %c_slback105, align 8
  %c_slorient106 = getelementptr inbounds %struct.canvas, %struct.canvas* %76, i32 0, i32 6
  %77 = load i32, i32* %c_slorient106, align 4
  %78 = load i32, i32* %orient, align 4
  %and107 = and i32 %77, %78
  %tobool108 = icmp ne i32 %and107, 0
  br i1 %tobool108, label %if.then.109, label %if.end.112

if.then.109:                                      ; preds = %if.end.104
  %79 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slback110 = getelementptr inbounds %struct.canvas, %struct.canvas* %79, i32 0, i32 5
  %80 = load %struct.canvas*, %struct.canvas** %c_slback110, align 8
  %81 = load i32, i32* %abs, align 4
  %82 = load i32, i32* %diff, align 4
  %83 = load i32, i32* %gflag, align 4
  %84 = load i32, i32* %percent, align 4
  %call111 = call i32 @ChangeCanvasSize(%struct.canvas* %80, i32 %81, i32 %82, i32 %83, i32 %84)
  br label %if.end.112

if.end.112:                                       ; preds = %if.then.109, %if.end.104
  %85 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas113 = getelementptr inbounds %struct.display, %struct.display* %85, i32 0, i32 2
  call void @ResizeCanvas(%struct.canvas* %d_canvas113)
  call void @RecreateCanvasChain()
  %call114 = call i32 @RethinkDisplayViewports()
  call void @ResizeLayersToCanvases()
  br label %return

return:                                           ; preds = %if.end.112, %if.then.93, %if.end.41, %if.then.1, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ResizeFin(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ch = alloca i32, align 4
  %flags = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to i32*
  %2 = load i32, i32* %1, align 4
  store i32 %2, i32* %flags, align 4
  %3 = load i32, i32* %len.addr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load i8*, i8** %buf.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom
  %5 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  store i32 %conv, i32* %ch, align 4
  %6 = load i32, i32* %ch, align 4
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %buf.addr, align 8
  %8 = load i32, i32* %flags, align 4
  call void @ResizeRegions(i8* %7, i32 %8)
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %ch, align 4
  %cmp2 = icmp eq i32 %9, 104
  br i1 %cmp2, label %if.then.4, label %if.else

if.then.4:                                        ; preds = %if.end
  %10 = load i32, i32* %flags, align 4
  %xor = xor i32 %10, 1
  store i32 %xor, i32* %flags, align 4
  br label %if.end.30

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %ch, align 4
  %cmp5 = icmp eq i32 %11, 118
  br i1 %cmp5, label %if.then.7, label %if.else.9

if.then.7:                                        ; preds = %if.else
  %12 = load i32, i32* %flags, align 4
  %xor8 = xor i32 %12, 2
  store i32 %xor8, i32* %flags, align 4
  br label %if.end.29

if.else.9:                                        ; preds = %if.else
  %13 = load i32, i32* %ch, align 4
  %cmp10 = icmp eq i32 %13, 98
  br i1 %cmp10, label %if.then.12, label %if.else.13

if.then.12:                                       ; preds = %if.else.9
  %14 = load i32, i32* %flags, align 4
  %or = or i32 %14, 3
  store i32 %or, i32* %flags, align 4
  br label %if.end.28

if.else.13:                                       ; preds = %if.else.9
  %15 = load i32, i32* %ch, align 4
  %cmp14 = icmp eq i32 %15, 112
  br i1 %cmp14, label %if.then.16, label %if.else.20

if.then.16:                                       ; preds = %if.else.13
  %16 = load %struct.display*, %struct.display** @display, align 8
  %d_forecv = getelementptr inbounds %struct.display, %struct.display* %16, i32 0, i32 4
  %17 = load %struct.canvas*, %struct.canvas** %d_forecv, align 8
  %c_slorient = getelementptr inbounds %struct.canvas, %struct.canvas* %17, i32 0, i32 6
  %18 = load i32, i32* %c_slorient, align 4
  %cmp17 = icmp eq i32 %18, 1
  %cond = select i1 %cmp17, i32 1, i32 2
  %19 = load i32, i32* %flags, align 4
  %xor19 = xor i32 %19, %cond
  store i32 %xor19, i32* %flags, align 4
  br label %if.end.27

if.else.20:                                       ; preds = %if.else.13
  %20 = load i32, i32* %ch, align 4
  %cmp21 = icmp eq i32 %20, 108
  br i1 %cmp21, label %if.then.23, label %if.else.25

if.then.23:                                       ; preds = %if.else.20
  %21 = load i32, i32* %flags, align 4
  %xor24 = xor i32 %21, 4
  store i32 %xor24, i32* %flags, align 4
  br label %if.end.26

if.else.25:                                       ; preds = %if.else.20
  br label %return

if.end.26:                                        ; preds = %if.then.23
  br label %if.end.27

if.end.27:                                        ; preds = %if.end.26, %if.then.16
  br label %if.end.28

if.end.28:                                        ; preds = %if.end.27, %if.then.12
  br label %if.end.29

if.end.29:                                        ; preds = %if.end.28, %if.then.7
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.then.4
  %22 = load i32, i32* %flags, align 4
  %idxprom31 = sext i32 %22 to i64
  %arrayidx32 = getelementptr inbounds [8 x i8*], [8 x i8*]* @resizeprompts, i32 0, i64 %idxprom31
  %23 = load i8*, i8** %arrayidx32, align 8
  call void @inp_setprompt(i8* %23, i8* null)
  %24 = load i32, i32* %flags, align 4
  %25 = load i8*, i8** %data.addr, align 8
  %26 = bitcast i8* %25 to i32*
  store i32 %24, i32* %26, align 4
  %27 = load i32, i32* %len.addr, align 4
  %idxprom33 = sext i32 %27 to i64
  %28 = load i8*, i8** %buf.addr, align 8
  %arrayidx34 = getelementptr inbounds i8, i8* %28, i64 %idxprom33
  store i8 28, i8* %arrayidx34, align 1
  br label %return

return:                                           ; preds = %if.end.30, %if.else.25, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8** @SaveArgs(i8** %args) #0 {
entry:
  %args.addr = alloca i8**, align 8
  %ap = alloca i8**, align 8
  %pp = alloca i8**, align 8
  %argc = alloca i32, align 4
  store i8** %args, i8*** %args.addr, align 8
  store i32 0, i32* %argc, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %argc, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i8**, i8*** %args.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %idxprom
  %2 = load i8*, i8** %arrayidx, align 8
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %argc, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %argc, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %argc, align 4
  %add = add nsw i32 %4, 1
  %conv = zext i32 %add to i64
  %mul = mul i64 %conv, 8
  %call = call noalias i8* @malloc(i64 %mul) #4
  %5 = bitcast i8* %call to i8**
  store i8** %5, i8*** %ap, align 8
  store i8** %5, i8*** %pp, align 8
  %cmp = icmp eq i8** %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  call void (i32, i8*, ...) @Panic(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0)) #7
  unreachable

if.end:                                           ; preds = %while.end
  br label %while.cond.2

while.cond.2:                                     ; preds = %while.body.4, %if.end
  %6 = load i32, i32* %argc, align 4
  %dec = add nsw i32 %6, -1
  store i32 %dec, i32* %argc, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %while.body.4, label %while.end.7

while.body.4:                                     ; preds = %while.cond.2
  %7 = load i8**, i8*** %args.addr, align 8
  %incdec.ptr = getelementptr inbounds i8*, i8** %7, i32 1
  store i8** %incdec.ptr, i8*** %args.addr, align 8
  %8 = load i8*, i8** %7, align 8
  %call5 = call i8* @SaveStr(i8* %8)
  %9 = load i8**, i8*** %pp, align 8
  %incdec.ptr6 = getelementptr inbounds i8*, i8** %9, i32 1
  store i8** %incdec.ptr6, i8*** %pp, align 8
  store i8* %call5, i8** %9, align 8
  br label %while.cond.2

while.end.7:                                      ; preds = %while.cond.2
  %10 = load i8**, i8*** %pp, align 8
  store i8* null, i8** %10, align 8
  %11 = load i8**, i8*** %ap, align 8
  ret i8** %11
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #1

declare void @setbacktick(i32, i32, i32, i8**) #2

declare void @RunBlanker(i8**) #2

declare void @ClearAll() #2

declare void @CursorVisibility(i32) #2

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #1

declare void @ResetIdle() #2

; Function Attrs: nounwind uwtable
define internal %struct.win* @WindowByName(i8* %s) #0 {
entry:
  %retval = alloca %struct.win*, align 8
  %s.addr = alloca i8*, align 8
  %p = alloca %struct.win*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %0, %struct.win** %p, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.win*, %struct.win** %p, align 8
  %tobool = icmp ne %struct.win* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.win*, %struct.win** %p, align 8
  %w_title = getelementptr inbounds %struct.win, %struct.win* %2, i32 0, i32 21
  %3 = load i8*, i8** %w_title, align 8
  %4 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %3, i8* %4) #8
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %5 = load %struct.win*, %struct.win** %p, align 8
  store %struct.win* %5, %struct.win** %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load %struct.win*, %struct.win** %p, align 8
  %w_next = getelementptr inbounds %struct.win, %struct.win* %6, i32 0, i32 0
  %7 = load %struct.win*, %struct.win** %w_next, align 8
  store %struct.win* %7, %struct.win** %p, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %8, %struct.win** %p, align 8
  br label %for.cond.2

for.cond.2:                                       ; preds = %for.inc.11, %for.end
  %9 = load %struct.win*, %struct.win** %p, align 8
  %tobool3 = icmp ne %struct.win* %9, null
  br i1 %tobool3, label %for.body.4, label %for.end.13

for.body.4:                                       ; preds = %for.cond.2
  %10 = load %struct.win*, %struct.win** %p, align 8
  %w_title5 = getelementptr inbounds %struct.win, %struct.win* %10, i32 0, i32 21
  %11 = load i8*, i8** %w_title5, align 8
  %12 = load i8*, i8** %s.addr, align 8
  %13 = load i8*, i8** %s.addr, align 8
  %call6 = call i64 @strlen(i8* %13) #8
  %call7 = call i32 @strncmp(i8* %11, i8* %12, i64 %call6) #8
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.end.10, label %if.then.9

if.then.9:                                        ; preds = %for.body.4
  %14 = load %struct.win*, %struct.win** %p, align 8
  store %struct.win* %14, %struct.win** %retval
  br label %return

if.end.10:                                        ; preds = %for.body.4
  br label %for.inc.11

for.inc.11:                                       ; preds = %if.end.10
  %15 = load %struct.win*, %struct.win** %p, align 8
  %w_next12 = getelementptr inbounds %struct.win, %struct.win* %15, i32 0, i32 0
  %16 = load %struct.win*, %struct.win** %w_next12, align 8
  store %struct.win* %16, %struct.win** %p, align 8
  br label %for.cond.2

for.end.13:                                       ; preds = %for.cond.2
  store %struct.win* null, %struct.win** %retval
  br label %return

return:                                           ; preds = %for.end.13, %if.then.9, %if.then
  %17 = load %struct.win*, %struct.win** %retval
  ret %struct.win* %17
}

declare %struct.layout* @CreateLayout(i8*, i32) #2

declare void @RenameLayout(%struct.layout*, i8*) #2

declare i32 @RenumberLayout(%struct.layout*, i32) #2

declare void @NewLayout(i8*, i32) #2

declare void @SaveLayout(i8*, %struct.canvas*) #2

declare %struct.layout* @FindLayout(i8*) #2

; Function Attrs: nounwind uwtable
define internal void @SelectLayoutFin(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %lay = alloca %struct.layout*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.display*, %struct.display** @display, align 8
  %tobool1 = icmp ne %struct.display* %1, null
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end.13

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %len.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %land.lhs.true, label %if.end.5

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8*, i8** %buf.addr, align 8
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %cmp2 = icmp eq i32 %conv, 45
  br i1 %cmp2, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %land.lhs.true
  call void @LoadLayout(%struct.layout* null, %struct.canvas* null)
  call void @Activate(i32 0)
  br label %if.end.13

if.end.5:                                         ; preds = %land.lhs.true, %if.end
  %5 = load i8*, i8** %buf.addr, align 8
  %call = call %struct.layout* @FindLayout(i8* %5)
  store %struct.layout* %call, %struct.layout** %lay, align 8
  %6 = load %struct.layout*, %struct.layout** %lay, align 8
  %tobool6 = icmp ne %struct.layout* %6, null
  br i1 %tobool6, label %if.else, label %if.then.7

if.then.7:                                        ; preds = %if.end.5
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.400, i32 0, i32 0))
  br label %if.end.13

if.else:                                          ; preds = %if.end.5
  %7 = load %struct.layout*, %struct.layout** %lay, align 8
  %8 = load %struct.display*, %struct.display** @display, align 8
  %d_layout = getelementptr inbounds %struct.display, %struct.display* %8, i32 0, i32 5
  %9 = load %struct.layout*, %struct.layout** %d_layout, align 8
  %cmp8 = icmp eq %struct.layout* %7, %9
  br i1 %cmp8, label %if.then.10, label %if.else.11

if.then.10:                                       ; preds = %if.else
  %10 = load %struct.layout*, %struct.layout** %lay, align 8
  %lay_number = getelementptr inbounds %struct.layout, %struct.layout* %10, i32 0, i32 2
  %11 = load i32, i32* %lay_number, align 4
  %12 = load %struct.layout*, %struct.layout** %lay, align 8
  %lay_title = getelementptr inbounds %struct.layout, %struct.layout* %12, i32 0, i32 1
  %13 = load i8*, i8** %lay_title, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.401, i32 0, i32 0), i32 %11, i8* %13)
  br label %if.end.12

if.else.11:                                       ; preds = %if.else
  %14 = load %struct.layout*, %struct.layout** %lay, align 8
  %15 = load %struct.display*, %struct.display** @display, align 8
  %d_canvas = getelementptr inbounds %struct.display, %struct.display* %15, i32 0, i32 2
  call void @LoadLayout(%struct.layout* %14, %struct.canvas* %d_canvas)
  call void @Activate(i32 0)
  br label %if.end.12

if.end.12:                                        ; preds = %if.else.11, %if.then.10
  br label %if.end.13

if.end.13:                                        ; preds = %if.then, %if.then.4, %if.end.12, %if.then.7
  ret void
}

declare void @LoadLayout(%struct.layout*, %struct.canvas*) #2

declare void @ShowLayouts(i32) #2

declare void @RemoveLayout(%struct.layout*) #2

declare i32 @LayoutDumpCanvas(%struct.canvas*, i8*) #2

; Function Attrs: nounwind uwtable
define i32 @Parse(i8* %buf, i32 %bufl, i8** %args, i32* %argl) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %bufl.addr = alloca i32, align 4
  %args.addr = alloca i8**, align 8
  %argl.addr = alloca i32*, align 8
  %p = alloca i8*, align 8
  %ap = alloca i8**, align 8
  %pp = alloca i8*, align 8
  %delim = alloca i32, align 4
  %argc = alloca i32, align 4
  %lp = alloca i32*, align 8
  %ps = alloca i8*, align 8
  %pe = alloca i8*, align 8
  %op = alloca i8, align 1
  %v = alloca i8*, align 8
  %xbuf = alloca [11 x i8], align 1
  %path = alloca [4096 x i8], align 16
  %vl = alloca i32, align 4
  %right = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufl, i32* %bufl.addr, align 4
  store i8** %args, i8*** %args.addr, align 8
  store i32* %argl, i32** %argl.addr, align 8
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8**, i8*** %args.addr, align 8
  store i8** %1, i8*** %ap, align 8
  %2 = load i32*, i32** %argl.addr, align 8
  store i32* %2, i32** %lp, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  store i32 0, i32* %argc, align 4
  %3 = load i8*, i8** %buf.addr, align 8
  store i8* %3, i8** %pp, align 8
  store i32 0, i32* %delim, align 4
  br label %for.cond

for.cond:                                         ; preds = %do.end.484, %if.then, %do.end
  %4 = load i32*, i32** %lp, align 8
  store i32 0, i32* %4, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %7 = load i8*, i8** %p, align 8
  %8 = load i8, i8* %7, align 1
  %conv1 = sext i8 %8 to i32
  %cmp = icmp eq i32 %conv1, 32
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.rhs
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp eq i32 %conv3, 9
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %11 = phi i1 [ true, %land.rhs ], [ %cmp4, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %11, %lor.end ]
  br i1 %12, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %13 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %13, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  %14 = load i32, i32* %argc, align 4
  %cmp6 = icmp eq i32 %14, 0
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %while.end
  %15 = load i8*, i8** %p, align 8
  %16 = load i8, i8* %15, align 1
  %conv8 = sext i8 %16 to i32
  %cmp9 = icmp eq i32 %conv8, 33
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %17 = load i8**, i8*** %ap, align 8
  %incdec.ptr11 = getelementptr inbounds i8*, i8** %17, i32 1
  store i8** %incdec.ptr11, i8*** %ap, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), i8** %17, align 8
  %18 = load i32*, i32** %lp, align 8
  %incdec.ptr12 = getelementptr inbounds i32, i32* %18, i32 1
  store i32* %incdec.ptr12, i32** %lp, align 8
  store i32 4, i32* %18, align 4
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  %20 = load i32, i32* %argc, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %argc, align 4
  br label %for.cond

if.end:                                           ; preds = %land.lhs.true, %while.end
  %21 = load i8*, i8** %p, align 8
  %22 = load i8, i8* %21, align 1
  %conv14 = sext i8 %22 to i32
  %cmp15 = icmp eq i32 %conv14, 0
  br i1 %cmp15, label %if.then.24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %23 = load i8*, i8** %p, align 8
  %24 = load i8, i8* %23, align 1
  %conv17 = sext i8 %24 to i32
  %cmp18 = icmp eq i32 %conv17, 35
  br i1 %cmp18, label %if.then.24, label %lor.lhs.false.20

lor.lhs.false.20:                                 ; preds = %lor.lhs.false
  %25 = load i8*, i8** %p, align 8
  %26 = load i8, i8* %25, align 1
  %conv21 = sext i8 %26 to i32
  %cmp22 = icmp eq i32 %conv21, 10
  br i1 %cmp22, label %if.then.24, label %if.end.31

if.then.24:                                       ; preds = %lor.lhs.false.20, %lor.lhs.false, %if.end
  %27 = load i8*, i8** %p, align 8
  store i8 0, i8* %27, align 1
  store i32 0, i32* %delim, align 4
  br label %for.cond.25

for.cond.25:                                      ; preds = %for.inc, %if.then.24
  %28 = load i32, i32* %delim, align 4
  %29 = load i32, i32* %argc, align 4
  %cmp26 = icmp slt i32 %28, %29
  br i1 %cmp26, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond.25
  br label %do.body.28

do.body.28:                                       ; preds = %for.body
  br label %do.end.29

do.end.29:                                        ; preds = %do.body.28
  br label %for.inc

for.inc:                                          ; preds = %do.end.29
  %30 = load i32, i32* %delim, align 4
  %inc30 = add nsw i32 %30, 1
  store i32 %inc30, i32* %delim, align 4
  br label %for.cond.25

for.end:                                          ; preds = %for.cond.25
  %31 = load i32, i32* %argc, align 4
  %idxprom = sext i32 %31 to i64
  %32 = load i8**, i8*** %args.addr, align 8
  %arrayidx = getelementptr inbounds i8*, i8** %32, i64 %idxprom
  store i8* null, i8** %arrayidx, align 8
  %33 = load i32, i32* %argc, align 4
  store i32 %33, i32* %retval
  br label %return

if.end.31:                                        ; preds = %lor.lhs.false.20
  %34 = load i32, i32* %argc, align 4
  %inc32 = add nsw i32 %34, 1
  store i32 %inc32, i32* %argc, align 4
  %cmp33 = icmp sge i32 %inc32, 64
  br i1 %cmp33, label %if.then.35, label %if.end.36

if.then.35:                                       ; preds = %if.end.31
  %35 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.309, i32 0, i32 0), i8* %35)
  store i32 0, i32* %retval
  br label %return

if.end.36:                                        ; preds = %if.end.31
  %36 = load i8*, i8** %pp, align 8
  %37 = load i8**, i8*** %ap, align 8
  %incdec.ptr37 = getelementptr inbounds i8*, i8** %37, i32 1
  store i8** %incdec.ptr37, i8*** %ap, align 8
  store i8* %36, i8** %37, align 8
  br label %do.body.38

do.body.38:                                       ; preds = %if.end.36
  br label %do.end.39

do.end.39:                                        ; preds = %do.body.38
  br label %while.cond.40

while.cond.40:                                    ; preds = %if.end.473, %if.end.413, %do.end.39
  %38 = load i8*, i8** %p, align 8
  %39 = load i8, i8* %38, align 1
  %tobool41 = icmp ne i8 %39, 0
  br i1 %tobool41, label %while.body.42, label %while.end.475

while.body.42:                                    ; preds = %while.cond.40
  %40 = load i8*, i8** %p, align 8
  %41 = load i8, i8* %40, align 1
  %conv43 = sext i8 %41 to i32
  %42 = load i32, i32* %delim, align 4
  %cmp44 = icmp eq i32 %conv43, %42
  br i1 %cmp44, label %if.then.46, label %if.else

if.then.46:                                       ; preds = %while.body.42
  store i32 0, i32* %delim, align 4
  br label %if.end.473

if.else:                                          ; preds = %while.body.42
  %43 = load i32, i32* %delim, align 4
  %cmp47 = icmp ne i32 %43, 39
  br i1 %cmp47, label %land.lhs.true.49, label %if.else.161

land.lhs.true.49:                                 ; preds = %if.else
  %44 = load i8*, i8** %p, align 8
  %45 = load i8, i8* %44, align 1
  %conv50 = sext i8 %45 to i32
  %cmp51 = icmp eq i32 %conv50, 92
  br i1 %cmp51, label %land.lhs.true.53, label %if.else.161

land.lhs.true.53:                                 ; preds = %land.lhs.true.49
  %46 = load i8*, i8** %p, align 8
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 1
  %47 = load i8, i8* %arrayidx54, align 1
  %conv55 = sext i8 %47 to i32
  %cmp56 = icmp eq i32 %conv55, 110
  br i1 %cmp56, label %if.then.108, label %lor.lhs.false.58

lor.lhs.false.58:                                 ; preds = %land.lhs.true.53
  %48 = load i8*, i8** %p, align 8
  %arrayidx59 = getelementptr inbounds i8, i8* %48, i64 1
  %49 = load i8, i8* %arrayidx59, align 1
  %conv60 = sext i8 %49 to i32
  %cmp61 = icmp eq i32 %conv60, 114
  br i1 %cmp61, label %if.then.108, label %lor.lhs.false.63

lor.lhs.false.63:                                 ; preds = %lor.lhs.false.58
  %50 = load i8*, i8** %p, align 8
  %arrayidx64 = getelementptr inbounds i8, i8* %50, i64 1
  %51 = load i8, i8* %arrayidx64, align 1
  %conv65 = sext i8 %51 to i32
  %cmp66 = icmp eq i32 %conv65, 116
  br i1 %cmp66, label %if.then.108, label %lor.lhs.false.68

lor.lhs.false.68:                                 ; preds = %lor.lhs.false.63
  %52 = load i8*, i8** %p, align 8
  %arrayidx69 = getelementptr inbounds i8, i8* %52, i64 1
  %53 = load i8, i8* %arrayidx69, align 1
  %conv70 = sext i8 %53 to i32
  %cmp71 = icmp eq i32 %conv70, 39
  br i1 %cmp71, label %if.then.108, label %lor.lhs.false.73

lor.lhs.false.73:                                 ; preds = %lor.lhs.false.68
  %54 = load i8*, i8** %p, align 8
  %arrayidx74 = getelementptr inbounds i8, i8* %54, i64 1
  %55 = load i8, i8* %arrayidx74, align 1
  %conv75 = sext i8 %55 to i32
  %cmp76 = icmp eq i32 %conv75, 34
  br i1 %cmp76, label %if.then.108, label %lor.lhs.false.78

lor.lhs.false.78:                                 ; preds = %lor.lhs.false.73
  %56 = load i8*, i8** %p, align 8
  %arrayidx79 = getelementptr inbounds i8, i8* %56, i64 1
  %57 = load i8, i8* %arrayidx79, align 1
  %conv80 = sext i8 %57 to i32
  %cmp81 = icmp eq i32 %conv80, 92
  br i1 %cmp81, label %if.then.108, label %lor.lhs.false.83

lor.lhs.false.83:                                 ; preds = %lor.lhs.false.78
  %58 = load i8*, i8** %p, align 8
  %arrayidx84 = getelementptr inbounds i8, i8* %58, i64 1
  %59 = load i8, i8* %arrayidx84, align 1
  %conv85 = sext i8 %59 to i32
  %cmp86 = icmp eq i32 %conv85, 36
  br i1 %cmp86, label %if.then.108, label %lor.lhs.false.88

lor.lhs.false.88:                                 ; preds = %lor.lhs.false.83
  %60 = load i8*, i8** %p, align 8
  %arrayidx89 = getelementptr inbounds i8, i8* %60, i64 1
  %61 = load i8, i8* %arrayidx89, align 1
  %conv90 = sext i8 %61 to i32
  %cmp91 = icmp eq i32 %conv90, 35
  br i1 %cmp91, label %if.then.108, label %lor.lhs.false.93

lor.lhs.false.93:                                 ; preds = %lor.lhs.false.88
  %62 = load i8*, i8** %p, align 8
  %arrayidx94 = getelementptr inbounds i8, i8* %62, i64 1
  %63 = load i8, i8* %arrayidx94, align 1
  %conv95 = sext i8 %63 to i32
  %cmp96 = icmp eq i32 %conv95, 94
  br i1 %cmp96, label %if.then.108, label %lor.lhs.false.98

lor.lhs.false.98:                                 ; preds = %lor.lhs.false.93
  %64 = load i8*, i8** %p, align 8
  %arrayidx99 = getelementptr inbounds i8, i8* %64, i64 1
  %65 = load i8, i8* %arrayidx99, align 1
  %conv100 = sext i8 %65 to i32
  %cmp101 = icmp sge i32 %conv100, 48
  br i1 %cmp101, label %land.lhs.true.103, label %if.else.161

land.lhs.true.103:                                ; preds = %lor.lhs.false.98
  %66 = load i8*, i8** %p, align 8
  %arrayidx104 = getelementptr inbounds i8, i8* %66, i64 1
  %67 = load i8, i8* %arrayidx104, align 1
  %conv105 = sext i8 %67 to i32
  %cmp106 = icmp sle i32 %conv105, 55
  br i1 %cmp106, label %if.then.108, label %if.else.161

if.then.108:                                      ; preds = %land.lhs.true.103, %lor.lhs.false.93, %lor.lhs.false.88, %lor.lhs.false.83, %lor.lhs.false.78, %lor.lhs.false.73, %lor.lhs.false.68, %lor.lhs.false.63, %lor.lhs.false.58, %land.lhs.true.53
  %68 = load i8*, i8** %p, align 8
  %incdec.ptr109 = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %incdec.ptr109, i8** %p, align 8
  %69 = load i8*, i8** %p, align 8
  %70 = load i8, i8* %69, align 1
  %conv110 = sext i8 %70 to i32
  %cmp111 = icmp sge i32 %conv110, 48
  br i1 %cmp111, label %land.lhs.true.113, label %if.else.155

land.lhs.true.113:                                ; preds = %if.then.108
  %71 = load i8*, i8** %p, align 8
  %72 = load i8, i8* %71, align 1
  %conv114 = sext i8 %72 to i32
  %cmp115 = icmp sle i32 %conv114, 55
  br i1 %cmp115, label %if.then.117, label %if.else.155

if.then.117:                                      ; preds = %land.lhs.true.113
  %73 = load i8*, i8** %p, align 8
  %74 = load i8, i8* %73, align 1
  %conv118 = sext i8 %74 to i32
  %sub = sub nsw i32 %conv118, 48
  %conv119 = trunc i32 %sub to i8
  %75 = load i8*, i8** %pp, align 8
  store i8 %conv119, i8* %75, align 1
  %76 = load i8*, i8** %p, align 8
  %arrayidx120 = getelementptr inbounds i8, i8* %76, i64 1
  %77 = load i8, i8* %arrayidx120, align 1
  %conv121 = sext i8 %77 to i32
  %cmp122 = icmp sge i32 %conv121, 48
  br i1 %cmp122, label %land.lhs.true.124, label %if.end.153

land.lhs.true.124:                                ; preds = %if.then.117
  %78 = load i8*, i8** %p, align 8
  %arrayidx125 = getelementptr inbounds i8, i8* %78, i64 1
  %79 = load i8, i8* %arrayidx125, align 1
  %conv126 = sext i8 %79 to i32
  %cmp127 = icmp sle i32 %conv126, 55
  br i1 %cmp127, label %if.then.129, label %if.end.153

if.then.129:                                      ; preds = %land.lhs.true.124
  %80 = load i8*, i8** %p, align 8
  %incdec.ptr130 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %incdec.ptr130, i8** %p, align 8
  %81 = load i8*, i8** %pp, align 8
  %82 = load i8, i8* %81, align 1
  %conv131 = sext i8 %82 to i32
  %shl = shl i32 %conv131, 3
  %83 = load i8*, i8** %p, align 8
  %84 = load i8, i8* %83, align 1
  %conv132 = sext i8 %84 to i32
  %sub133 = sub nsw i32 %conv132, 48
  %or = or i32 %shl, %sub133
  %conv134 = trunc i32 %or to i8
  %85 = load i8*, i8** %pp, align 8
  store i8 %conv134, i8* %85, align 1
  %86 = load i8*, i8** %p, align 8
  %arrayidx135 = getelementptr inbounds i8, i8* %86, i64 1
  %87 = load i8, i8* %arrayidx135, align 1
  %conv136 = sext i8 %87 to i32
  %cmp137 = icmp sge i32 %conv136, 48
  br i1 %cmp137, label %land.lhs.true.139, label %if.end.152

land.lhs.true.139:                                ; preds = %if.then.129
  %88 = load i8*, i8** %p, align 8
  %arrayidx140 = getelementptr inbounds i8, i8* %88, i64 1
  %89 = load i8, i8* %arrayidx140, align 1
  %conv141 = sext i8 %89 to i32
  %cmp142 = icmp sle i32 %conv141, 55
  br i1 %cmp142, label %if.then.144, label %if.end.152

if.then.144:                                      ; preds = %land.lhs.true.139
  %90 = load i8*, i8** %p, align 8
  %incdec.ptr145 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %incdec.ptr145, i8** %p, align 8
  %91 = load i8*, i8** %pp, align 8
  %92 = load i8, i8* %91, align 1
  %conv146 = sext i8 %92 to i32
  %shl147 = shl i32 %conv146, 3
  %93 = load i8*, i8** %p, align 8
  %94 = load i8, i8* %93, align 1
  %conv148 = sext i8 %94 to i32
  %sub149 = sub nsw i32 %conv148, 48
  %or150 = or i32 %shl147, %sub149
  %conv151 = trunc i32 %or150 to i8
  %95 = load i8*, i8** %pp, align 8
  store i8 %conv151, i8* %95, align 1
  br label %if.end.152

if.end.152:                                       ; preds = %if.then.144, %land.lhs.true.139, %if.then.129
  br label %if.end.153

if.end.153:                                       ; preds = %if.end.152, %land.lhs.true.124, %if.then.117
  %96 = load i8*, i8** %pp, align 8
  %incdec.ptr154 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %incdec.ptr154, i8** %pp, align 8
  br label %if.end.160

if.else.155:                                      ; preds = %land.lhs.true.113, %if.then.108
  %97 = load i8*, i8** %p, align 8
  %98 = load i8, i8* %97, align 1
  %conv156 = sext i8 %98 to i32
  switch i32 %conv156, label %sw.default [
    i32 110, label %sw.bb
    i32 114, label %sw.bb.157
    i32 116, label %sw.bb.158
  ]

sw.bb:                                            ; preds = %if.else.155
  %99 = load i8*, i8** %pp, align 8
  store i8 10, i8* %99, align 1
  br label %sw.epilog

sw.bb.157:                                        ; preds = %if.else.155
  %100 = load i8*, i8** %pp, align 8
  store i8 13, i8* %100, align 1
  br label %sw.epilog

sw.bb.158:                                        ; preds = %if.else.155
  %101 = load i8*, i8** %pp, align 8
  store i8 9, i8* %101, align 1
  br label %sw.epilog

sw.default:                                       ; preds = %if.else.155
  %102 = load i8*, i8** %p, align 8
  %103 = load i8, i8* %102, align 1
  %104 = load i8*, i8** %pp, align 8
  store i8 %103, i8* %104, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb.158, %sw.bb.157, %sw.bb
  %105 = load i8*, i8** %pp, align 8
  %incdec.ptr159 = getelementptr inbounds i8, i8* %105, i32 1
  store i8* %incdec.ptr159, i8** %pp, align 8
  br label %if.end.160

if.end.160:                                       ; preds = %sw.epilog, %if.end.153
  br label %if.end.472

if.else.161:                                      ; preds = %land.lhs.true.103, %lor.lhs.false.98, %land.lhs.true.49, %if.else
  %106 = load i32, i32* %delim, align 4
  %cmp162 = icmp ne i32 %106, 39
  br i1 %cmp162, label %land.lhs.true.164, label %if.else.414

land.lhs.true.164:                                ; preds = %if.else.161
  %107 = load i8*, i8** %p, align 8
  %108 = load i8, i8* %107, align 1
  %conv165 = sext i8 %108 to i32
  %cmp166 = icmp eq i32 %conv165, 36
  br i1 %cmp166, label %land.lhs.true.168, label %if.else.414

land.lhs.true.168:                                ; preds = %land.lhs.true.164
  %109 = load i8*, i8** %p, align 8
  %arrayidx169 = getelementptr inbounds i8, i8* %109, i64 1
  %110 = load i8, i8* %arrayidx169, align 1
  %conv170 = sext i8 %110 to i32
  %cmp171 = icmp eq i32 %conv170, 123
  br i1 %cmp171, label %if.then.213, label %lor.lhs.false.173

lor.lhs.false.173:                                ; preds = %land.lhs.true.168
  %111 = load i8*, i8** %p, align 8
  %arrayidx174 = getelementptr inbounds i8, i8* %111, i64 1
  %112 = load i8, i8* %arrayidx174, align 1
  %conv175 = sext i8 %112 to i32
  %cmp176 = icmp eq i32 %conv175, 58
  br i1 %cmp176, label %if.then.213, label %lor.lhs.false.178

lor.lhs.false.178:                                ; preds = %lor.lhs.false.173
  %113 = load i8*, i8** %p, align 8
  %arrayidx179 = getelementptr inbounds i8, i8* %113, i64 1
  %114 = load i8, i8* %arrayidx179, align 1
  %conv180 = sext i8 %114 to i32
  %cmp181 = icmp sge i32 %conv180, 97
  br i1 %cmp181, label %land.lhs.true.183, label %lor.lhs.false.188

land.lhs.true.183:                                ; preds = %lor.lhs.false.178
  %115 = load i8*, i8** %p, align 8
  %arrayidx184 = getelementptr inbounds i8, i8* %115, i64 1
  %116 = load i8, i8* %arrayidx184, align 1
  %conv185 = sext i8 %116 to i32
  %cmp186 = icmp sle i32 %conv185, 122
  br i1 %cmp186, label %if.then.213, label %lor.lhs.false.188

lor.lhs.false.188:                                ; preds = %land.lhs.true.183, %lor.lhs.false.178
  %117 = load i8*, i8** %p, align 8
  %arrayidx189 = getelementptr inbounds i8, i8* %117, i64 1
  %118 = load i8, i8* %arrayidx189, align 1
  %conv190 = sext i8 %118 to i32
  %cmp191 = icmp sge i32 %conv190, 65
  br i1 %cmp191, label %land.lhs.true.193, label %lor.lhs.false.198

land.lhs.true.193:                                ; preds = %lor.lhs.false.188
  %119 = load i8*, i8** %p, align 8
  %arrayidx194 = getelementptr inbounds i8, i8* %119, i64 1
  %120 = load i8, i8* %arrayidx194, align 1
  %conv195 = sext i8 %120 to i32
  %cmp196 = icmp sle i32 %conv195, 90
  br i1 %cmp196, label %if.then.213, label %lor.lhs.false.198

lor.lhs.false.198:                                ; preds = %land.lhs.true.193, %lor.lhs.false.188
  %121 = load i8*, i8** %p, align 8
  %arrayidx199 = getelementptr inbounds i8, i8* %121, i64 1
  %122 = load i8, i8* %arrayidx199, align 1
  %conv200 = sext i8 %122 to i32
  %cmp201 = icmp sge i32 %conv200, 48
  br i1 %cmp201, label %land.lhs.true.203, label %lor.lhs.false.208

land.lhs.true.203:                                ; preds = %lor.lhs.false.198
  %123 = load i8*, i8** %p, align 8
  %arrayidx204 = getelementptr inbounds i8, i8* %123, i64 1
  %124 = load i8, i8* %arrayidx204, align 1
  %conv205 = sext i8 %124 to i32
  %cmp206 = icmp sle i32 %conv205, 57
  br i1 %cmp206, label %if.then.213, label %lor.lhs.false.208

lor.lhs.false.208:                                ; preds = %land.lhs.true.203, %lor.lhs.false.198
  %125 = load i8*, i8** %p, align 8
  %arrayidx209 = getelementptr inbounds i8, i8* %125, i64 1
  %126 = load i8, i8* %arrayidx209, align 1
  %conv210 = sext i8 %126 to i32
  %cmp211 = icmp eq i32 %conv210, 95
  br i1 %cmp211, label %if.then.213, label %if.else.414

if.then.213:                                      ; preds = %lor.lhs.false.208, %land.lhs.true.203, %land.lhs.true.193, %land.lhs.true.183, %lor.lhs.false.173, %land.lhs.true.168
  %127 = load i8*, i8** %p, align 8
  %incdec.ptr214 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %incdec.ptr214, i8** %p, align 8
  store i8* %incdec.ptr214, i8** %ps, align 8
  br label %do.body.215

do.body.215:                                      ; preds = %if.then.213
  br label %do.end.216

do.end.216:                                       ; preds = %do.body.215
  %128 = load i8*, i8** %p, align 8
  %incdec.ptr217 = getelementptr inbounds i8, i8* %128, i32 1
  store i8* %incdec.ptr217, i8** %p, align 8
  br label %while.cond.218

while.cond.218:                                   ; preds = %if.end.275, %do.end.216
  %129 = load i8*, i8** %p, align 8
  %130 = load i8, i8* %129, align 1
  %tobool219 = icmp ne i8 %130, 0
  br i1 %tobool219, label %while.body.220, label %while.end.277

while.body.220:                                   ; preds = %while.cond.218
  %131 = load i8*, i8** %ps, align 8
  %132 = load i8, i8* %131, align 1
  %conv221 = sext i8 %132 to i32
  %cmp222 = icmp eq i32 %conv221, 123
  br i1 %cmp222, label %land.lhs.true.224, label %if.end.229

land.lhs.true.224:                                ; preds = %while.body.220
  %133 = load i8*, i8** %p, align 8
  %134 = load i8, i8* %133, align 1
  %conv225 = sext i8 %134 to i32
  %cmp226 = icmp eq i32 %conv225, 125
  br i1 %cmp226, label %if.then.228, label %if.end.229

if.then.228:                                      ; preds = %land.lhs.true.224
  br label %while.end.277

if.end.229:                                       ; preds = %land.lhs.true.224, %while.body.220
  %135 = load i8*, i8** %ps, align 8
  %136 = load i8, i8* %135, align 1
  %conv230 = sext i8 %136 to i32
  %cmp231 = icmp eq i32 %conv230, 58
  br i1 %cmp231, label %land.lhs.true.233, label %if.end.238

land.lhs.true.233:                                ; preds = %if.end.229
  %137 = load i8*, i8** %p, align 8
  %138 = load i8, i8* %137, align 1
  %conv234 = sext i8 %138 to i32
  %cmp235 = icmp eq i32 %conv234, 58
  br i1 %cmp235, label %if.then.237, label %if.end.238

if.then.237:                                      ; preds = %land.lhs.true.233
  br label %while.end.277

if.end.238:                                       ; preds = %land.lhs.true.233, %if.end.229
  %139 = load i8*, i8** %ps, align 8
  %140 = load i8, i8* %139, align 1
  %conv239 = sext i8 %140 to i32
  %cmp240 = icmp ne i32 %conv239, 123
  br i1 %cmp240, label %land.lhs.true.242, label %if.end.275

land.lhs.true.242:                                ; preds = %if.end.238
  %141 = load i8*, i8** %ps, align 8
  %142 = load i8, i8* %141, align 1
  %conv243 = sext i8 %142 to i32
  %cmp244 = icmp ne i32 %conv243, 58
  br i1 %cmp244, label %land.lhs.true.246, label %if.end.275

land.lhs.true.246:                                ; preds = %land.lhs.true.242
  %143 = load i8*, i8** %p, align 8
  %144 = load i8, i8* %143, align 1
  %conv247 = sext i8 %144 to i32
  %cmp248 = icmp slt i32 %conv247, 97
  br i1 %cmp248, label %land.lhs.true.254, label %lor.lhs.false.250

lor.lhs.false.250:                                ; preds = %land.lhs.true.246
  %145 = load i8*, i8** %p, align 8
  %146 = load i8, i8* %145, align 1
  %conv251 = sext i8 %146 to i32
  %cmp252 = icmp sgt i32 %conv251, 122
  br i1 %cmp252, label %land.lhs.true.254, label %if.end.275

land.lhs.true.254:                                ; preds = %lor.lhs.false.250, %land.lhs.true.246
  %147 = load i8*, i8** %p, align 8
  %148 = load i8, i8* %147, align 1
  %conv255 = sext i8 %148 to i32
  %cmp256 = icmp slt i32 %conv255, 65
  br i1 %cmp256, label %land.lhs.true.262, label %lor.lhs.false.258

lor.lhs.false.258:                                ; preds = %land.lhs.true.254
  %149 = load i8*, i8** %p, align 8
  %150 = load i8, i8* %149, align 1
  %conv259 = sext i8 %150 to i32
  %cmp260 = icmp sgt i32 %conv259, 90
  br i1 %cmp260, label %land.lhs.true.262, label %if.end.275

land.lhs.true.262:                                ; preds = %lor.lhs.false.258, %land.lhs.true.254
  %151 = load i8*, i8** %p, align 8
  %152 = load i8, i8* %151, align 1
  %conv263 = sext i8 %152 to i32
  %cmp264 = icmp slt i32 %conv263, 48
  br i1 %cmp264, label %land.lhs.true.270, label %lor.lhs.false.266

lor.lhs.false.266:                                ; preds = %land.lhs.true.262
  %153 = load i8*, i8** %p, align 8
  %154 = load i8, i8* %153, align 1
  %conv267 = sext i8 %154 to i32
  %cmp268 = icmp sgt i32 %conv267, 57
  br i1 %cmp268, label %land.lhs.true.270, label %if.end.275

land.lhs.true.270:                                ; preds = %lor.lhs.false.266, %land.lhs.true.262
  %155 = load i8*, i8** %p, align 8
  %156 = load i8, i8* %155, align 1
  %conv271 = sext i8 %156 to i32
  %cmp272 = icmp ne i32 %conv271, 95
  br i1 %cmp272, label %if.then.274, label %if.end.275

if.then.274:                                      ; preds = %land.lhs.true.270
  br label %while.end.277

if.end.275:                                       ; preds = %land.lhs.true.270, %lor.lhs.false.266, %lor.lhs.false.258, %lor.lhs.false.250, %land.lhs.true.242, %if.end.238
  %157 = load i8*, i8** %p, align 8
  %incdec.ptr276 = getelementptr inbounds i8, i8* %157, i32 1
  store i8* %incdec.ptr276, i8** %p, align 8
  br label %while.cond.218

while.end.277:                                    ; preds = %if.then.274, %if.then.237, %if.then.228, %while.cond.218
  %158 = load i8*, i8** %p, align 8
  store i8* %158, i8** %pe, align 8
  %159 = load i8*, i8** %ps, align 8
  %160 = load i8, i8* %159, align 1
  %conv278 = sext i8 %160 to i32
  %cmp279 = icmp eq i32 %conv278, 123
  br i1 %cmp279, label %if.then.285, label %lor.lhs.false.281

lor.lhs.false.281:                                ; preds = %while.end.277
  %161 = load i8*, i8** %ps, align 8
  %162 = load i8, i8* %161, align 1
  %conv282 = sext i8 %162 to i32
  %cmp283 = icmp eq i32 %conv282, 58
  br i1 %cmp283, label %if.then.285, label %if.end.290

if.then.285:                                      ; preds = %lor.lhs.false.281, %while.end.277
  %163 = load i8*, i8** %p, align 8
  %164 = load i8, i8* %163, align 1
  %tobool286 = icmp ne i8 %164, 0
  br i1 %tobool286, label %if.end.288, label %if.then.287

if.then.287:                                      ; preds = %if.then.285
  %165 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.310, i32 0, i32 0), i8* %165)
  store i32 0, i32* %retval
  br label %return

if.end.288:                                       ; preds = %if.then.285
  %166 = load i8*, i8** %p, align 8
  %incdec.ptr289 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %incdec.ptr289, i8** %p, align 8
  br label %if.end.290

if.end.290:                                       ; preds = %if.end.288, %lor.lhs.false.281
  %167 = load i8*, i8** %pe, align 8
  %168 = load i8, i8* %167, align 1
  store i8 %168, i8* %op, align 1
  %169 = load i8*, i8** %pe, align 8
  store i8 0, i8* %169, align 1
  br label %do.body.291

do.body.291:                                      ; preds = %if.end.290
  br label %do.end.292

do.end.292:                                       ; preds = %do.body.291
  %170 = load i8*, i8** %ps, align 8
  %171 = load i8, i8* %170, align 1
  %conv293 = sext i8 %171 to i32
  %cmp294 = icmp eq i32 %conv293, 58
  br i1 %cmp294, label %if.then.296, label %if.else.297

if.then.296:                                      ; preds = %do.end.292
  %172 = load i8*, i8** %ps, align 8
  %add.ptr = getelementptr inbounds i8, i8* %172, i64 1
  %call = call i8* @gettermcapstring(i8* %add.ptr)
  store i8* %call, i8** %v, align 8
  br label %if.end.368

if.else.297:                                      ; preds = %do.end.292
  %173 = load i8*, i8** %ps, align 8
  %174 = load i8, i8* %173, align 1
  %conv298 = sext i8 %174 to i32
  %cmp299 = icmp eq i32 %conv298, 123
  br i1 %cmp299, label %if.then.301, label %if.end.303

if.then.301:                                      ; preds = %if.else.297
  %175 = load i8*, i8** %ps, align 8
  %incdec.ptr302 = getelementptr inbounds i8, i8* %175, i32 1
  store i8* %incdec.ptr302, i8** %ps, align 8
  br label %if.end.303

if.end.303:                                       ; preds = %if.then.301, %if.else.297
  %arraydecay = getelementptr inbounds [11 x i8], [11 x i8]* %xbuf, i32 0, i32 0
  store i8* %arraydecay, i8** %v, align 8
  %176 = load i8*, i8** %ps, align 8
  %call304 = call i32 @strcmp(i8* %176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.311, i32 0, i32 0)) #8
  %tobool305 = icmp ne i32 %call304, 0
  br i1 %tobool305, label %if.else.309, label %if.then.306

if.then.306:                                      ; preds = %if.end.303
  %177 = load %struct.display*, %struct.display** @display, align 8
  %tobool307 = icmp ne %struct.display* %177, null
  br i1 %tobool307, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.306
  %178 = load %struct.display*, %struct.display** @display, align 8
  %d_termname = getelementptr inbounds %struct.display, %struct.display* %178, i32 0, i32 13
  %arraydecay308 = getelementptr inbounds [33 x i8], [33 x i8]* %d_termname, i32 0, i32 0
  br label %cond.end

cond.false:                                       ; preds = %if.then.306
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay308, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.312, i32 0, i32 0), %cond.false ]
  store i8* %cond, i8** %v, align 8
  br label %if.end.367

if.else.309:                                      ; preds = %if.end.303
  %179 = load i8*, i8** %ps, align 8
  %call310 = call i32 @strcmp(i8* %179, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.313, i32 0, i32 0)) #8
  %tobool311 = icmp ne i32 %call310, 0
  br i1 %tobool311, label %if.else.320, label %if.then.312

if.then.312:                                      ; preds = %if.else.309
  %arraydecay313 = getelementptr inbounds [11 x i8], [11 x i8]* %xbuf, i32 0, i32 0
  %180 = load %struct.display*, %struct.display** @display, align 8
  %tobool314 = icmp ne %struct.display* %180, null
  br i1 %tobool314, label %cond.true.315, label %cond.false.316

cond.true.315:                                    ; preds = %if.then.312
  %181 = load %struct.display*, %struct.display** @display, align 8
  %d_width = getelementptr inbounds %struct.display, %struct.display* %181, i32 0, i32 16
  %182 = load i32, i32* %d_width, align 4
  br label %cond.end.317

cond.false.316:                                   ; preds = %if.then.312
  br label %cond.end.317

cond.end.317:                                     ; preds = %cond.false.316, %cond.true.315
  %cond318 = phi i32 [ %182, %cond.true.315 ], [ -1, %cond.false.316 ]
  %call319 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay313, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %cond318) #4
  br label %if.end.366

if.else.320:                                      ; preds = %if.else.309
  %183 = load i8*, i8** %ps, align 8
  %call321 = call i32 @strcmp(i8* %183, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.314, i32 0, i32 0)) #8
  %tobool322 = icmp ne i32 %call321, 0
  br i1 %tobool322, label %if.else.331, label %if.then.323

if.then.323:                                      ; preds = %if.else.320
  %arraydecay324 = getelementptr inbounds [11 x i8], [11 x i8]* %xbuf, i32 0, i32 0
  %184 = load %struct.display*, %struct.display** @display, align 8
  %tobool325 = icmp ne %struct.display* %184, null
  br i1 %tobool325, label %cond.true.326, label %cond.false.327

cond.true.326:                                    ; preds = %if.then.323
  %185 = load %struct.display*, %struct.display** @display, align 8
  %d_height = getelementptr inbounds %struct.display, %struct.display* %185, i32 0, i32 17
  %186 = load i32, i32* %d_height, align 4
  br label %cond.end.328

cond.false.327:                                   ; preds = %if.then.323
  br label %cond.end.328

cond.end.328:                                     ; preds = %cond.false.327, %cond.true.326
  %cond329 = phi i32 [ %186, %cond.true.326 ], [ -1, %cond.false.327 ]
  %call330 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay324, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %cond329) #4
  br label %if.end.365

if.else.331:                                      ; preds = %if.else.320
  %187 = load i8*, i8** %ps, align 8
  %call332 = call i32 @strcmp(i8* %187, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.315, i32 0, i32 0)) #8
  %tobool333 = icmp ne i32 %call332, 0
  br i1 %tobool333, label %if.else.338, label %if.then.334

if.then.334:                                      ; preds = %if.else.331
  %arraydecay335 = getelementptr inbounds [11 x i8], [11 x i8]* %xbuf, i32 0, i32 0
  %call336 = call i32 @getpid() #4
  %call337 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay335, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %call336) #4
  br label %if.end.364

if.else.338:                                      ; preds = %if.else.331
  %188 = load i8*, i8** %ps, align 8
  %call339 = call i32 @strcmp(i8* %188, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.316, i32 0, i32 0)) #8
  %tobool340 = icmp ne i32 %call339, 0
  br i1 %tobool340, label %if.else.350, label %if.then.341

if.then.341:                                      ; preds = %if.else.338
  %arraydecay342 = getelementptr inbounds [4096 x i8], [4096 x i8]* %path, i32 0, i32 0
  %call343 = call i8* @getcwd(i8* %arraydecay342, i64 4095) #4
  %cmp344 = icmp eq i8* %call343, null
  br i1 %cmp344, label %if.then.346, label %if.else.347

if.then.346:                                      ; preds = %if.then.341
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.317, i32 0, i32 0), i8** %v, align 8
  br label %if.end.349

if.else.347:                                      ; preds = %if.then.341
  %arraydecay348 = getelementptr inbounds [4096 x i8], [4096 x i8]* %path, i32 0, i32 0
  store i8* %arraydecay348, i8** %v, align 8
  br label %if.end.349

if.end.349:                                       ; preds = %if.else.347, %if.then.346
  br label %if.end.363

if.else.350:                                      ; preds = %if.else.338
  %189 = load i8*, i8** %ps, align 8
  %call351 = call i32 @strcmp(i8* %189, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i32 0, i32 0)) #8
  %tobool352 = icmp ne i32 %call351, 0
  br i1 %tobool352, label %if.else.360, label %if.then.353

if.then.353:                                      ; preds = %if.else.350
  %190 = load i8*, i8** @SockName, align 8
  %call354 = call i8* @strchr(i8* %190, i32 46) #8
  store i8* %call354, i8** %v, align 8
  %tobool355 = icmp ne i8* %call354, null
  br i1 %tobool355, label %if.then.356, label %if.else.358

if.then.356:                                      ; preds = %if.then.353
  %191 = load i8*, i8** %v, align 8
  %incdec.ptr357 = getelementptr inbounds i8, i8* %191, i32 1
  store i8* %incdec.ptr357, i8** %v, align 8
  br label %if.end.359

if.else.358:                                      ; preds = %if.then.353
  %192 = load i8*, i8** @SockName, align 8
  store i8* %192, i8** %v, align 8
  br label %if.end.359

if.end.359:                                       ; preds = %if.else.358, %if.then.356
  br label %if.end.362

if.else.360:                                      ; preds = %if.else.350
  %193 = load i8*, i8** %ps, align 8
  %call361 = call i8* @getenv(i8* %193) #4
  store i8* %call361, i8** %v, align 8
  br label %if.end.362

if.end.362:                                       ; preds = %if.else.360, %if.end.359
  br label %if.end.363

if.end.363:                                       ; preds = %if.end.362, %if.end.349
  br label %if.end.364

if.end.364:                                       ; preds = %if.end.363, %if.then.334
  br label %if.end.365

if.end.365:                                       ; preds = %if.end.364, %cond.end.328
  br label %if.end.366

if.end.366:                                       ; preds = %if.end.365, %cond.end.317
  br label %if.end.367

if.end.367:                                       ; preds = %if.end.366, %cond.end
  br label %if.end.368

if.end.368:                                       ; preds = %if.end.367, %if.then.296
  %194 = load i8, i8* %op, align 1
  %195 = load i8*, i8** %pe, align 8
  store i8 %194, i8* %195, align 1
  %196 = load i8*, i8** %v, align 8
  %tobool369 = icmp ne i8* %196, null
  br i1 %tobool369, label %cond.true.370, label %cond.false.372

cond.true.370:                                    ; preds = %if.end.368
  %197 = load i8*, i8** %v, align 8
  %call371 = call i64 @strlen(i8* %197) #8
  br label %cond.end.373

cond.false.372:                                   ; preds = %if.end.368
  br label %cond.end.373

cond.end.373:                                     ; preds = %cond.false.372, %cond.true.370
  %cond374 = phi i64 [ %call371, %cond.true.370 ], [ 0, %cond.false.372 ]
  %conv375 = trunc i64 %cond374 to i32
  store i32 %conv375, i32* %vl, align 4
  %198 = load i32, i32* %vl, align 4
  %tobool376 = icmp ne i32 %198, 0
  br i1 %tobool376, label %if.then.377, label %if.end.413

if.then.377:                                      ; preds = %cond.end.373
  br label %do.body.378

do.body.378:                                      ; preds = %if.then.377
  br label %do.end.379

do.end.379:                                       ; preds = %do.body.378
  %199 = load i8*, i8** %p, align 8
  %200 = load i8*, i8** %pp, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %199 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %200 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %201 = load i32, i32* %vl, align 4
  %conv380 = sext i32 %201 to i64
  %cmp381 = icmp slt i64 %sub.ptr.sub, %conv380
  br i1 %cmp381, label %if.then.383, label %if.end.401

if.then.383:                                      ; preds = %do.end.379
  %202 = load i8*, i8** %buf.addr, align 8
  %203 = load i32, i32* %bufl.addr, align 4
  %idx.ext = sext i32 %203 to i64
  %add.ptr384 = getelementptr inbounds i8, i8* %202, i64 %idx.ext
  %204 = load i8*, i8** %p, align 8
  %205 = load i8*, i8** %p, align 8
  %call385 = call i64 @strlen(i8* %205) #8
  %add.ptr386 = getelementptr inbounds i8, i8* %204, i64 %call385
  %add.ptr387 = getelementptr inbounds i8, i8* %add.ptr386, i64 1
  %sub.ptr.lhs.cast388 = ptrtoint i8* %add.ptr384 to i64
  %sub.ptr.rhs.cast389 = ptrtoint i8* %add.ptr387 to i64
  %sub.ptr.sub390 = sub i64 %sub.ptr.lhs.cast388, %sub.ptr.rhs.cast389
  %conv391 = trunc i64 %sub.ptr.sub390 to i32
  store i32 %conv391, i32* %right, align 4
  %206 = load i32, i32* %right, align 4
  %cmp392 = icmp sgt i32 %206, 0
  br i1 %cmp392, label %if.then.394, label %if.end.400

if.then.394:                                      ; preds = %if.then.383
  %207 = load i8*, i8** %p, align 8
  %208 = load i8*, i8** %p, align 8
  %209 = load i32, i32* %right, align 4
  %idx.ext395 = sext i32 %209 to i64
  %add.ptr396 = getelementptr inbounds i8, i8* %208, i64 %idx.ext395
  %210 = load i8*, i8** %p, align 8
  %call397 = call i64 @strlen(i8* %210) #8
  %add = add i64 %call397, 1
  call void @bcopy(i8* %207, i8* %add.ptr396, i64 %add) #4
  %211 = load i32, i32* %right, align 4
  %212 = load i8*, i8** %p, align 8
  %idx.ext398 = sext i32 %211 to i64
  %add.ptr399 = getelementptr inbounds i8, i8* %212, i64 %idx.ext398
  store i8* %add.ptr399, i8** %p, align 8
  br label %if.end.400

if.end.400:                                       ; preds = %if.then.394, %if.then.383
  br label %if.end.401

if.end.401:                                       ; preds = %if.end.400, %do.end.379
  %213 = load i8*, i8** %p, align 8
  %214 = load i8*, i8** %pp, align 8
  %sub.ptr.lhs.cast402 = ptrtoint i8* %213 to i64
  %sub.ptr.rhs.cast403 = ptrtoint i8* %214 to i64
  %sub.ptr.sub404 = sub i64 %sub.ptr.lhs.cast402, %sub.ptr.rhs.cast403
  %215 = load i32, i32* %vl, align 4
  %conv405 = sext i32 %215 to i64
  %cmp406 = icmp slt i64 %sub.ptr.sub404, %conv405
  br i1 %cmp406, label %if.then.408, label %if.end.409

if.then.408:                                      ; preds = %if.end.401
  %216 = load i8*, i8** @rc_name, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.319, i32 0, i32 0), i8* %216)
  store i32 0, i32* %retval
  br label %return

if.end.409:                                       ; preds = %if.end.401
  %217 = load i8*, i8** %v, align 8
  %218 = load i8*, i8** %pp, align 8
  %219 = load i32, i32* %vl, align 4
  %conv410 = sext i32 %219 to i64
  call void @bcopy(i8* %217, i8* %218, i64 %conv410) #4
  %220 = load i32, i32* %vl, align 4
  %221 = load i8*, i8** %pp, align 8
  %idx.ext411 = sext i32 %220 to i64
  %add.ptr412 = getelementptr inbounds i8, i8* %221, i64 %idx.ext411
  store i8* %add.ptr412, i8** %pp, align 8
  br label %if.end.413

if.end.413:                                       ; preds = %if.end.409, %cond.end.373
  br label %while.cond.40

if.else.414:                                      ; preds = %lor.lhs.false.208, %land.lhs.true.164, %if.else.161
  %222 = load i32, i32* %delim, align 4
  %cmp415 = icmp ne i32 %222, 39
  br i1 %cmp415, label %land.lhs.true.417, label %if.else.437

land.lhs.true.417:                                ; preds = %if.else.414
  %223 = load i8*, i8** %p, align 8
  %224 = load i8, i8* %223, align 1
  %conv418 = sext i8 %224 to i32
  %cmp419 = icmp eq i32 %conv418, 94
  br i1 %cmp419, label %land.lhs.true.421, label %if.else.437

land.lhs.true.421:                                ; preds = %land.lhs.true.417
  %225 = load i8*, i8** %p, align 8
  %arrayidx422 = getelementptr inbounds i8, i8* %225, i64 1
  %226 = load i8, i8* %arrayidx422, align 1
  %conv423 = sext i8 %226 to i32
  %tobool424 = icmp ne i32 %conv423, 0
  br i1 %tobool424, label %if.then.425, label %if.else.437

if.then.425:                                      ; preds = %land.lhs.true.421
  %227 = load i8*, i8** %p, align 8
  %incdec.ptr426 = getelementptr inbounds i8, i8* %227, i32 1
  store i8* %incdec.ptr426, i8** %p, align 8
  %228 = load i8*, i8** %p, align 8
  %229 = load i8, i8* %228, align 1
  %conv427 = sext i8 %229 to i32
  %cmp428 = icmp eq i32 %conv427, 63
  br i1 %cmp428, label %cond.true.430, label %cond.false.431

cond.true.430:                                    ; preds = %if.then.425
  br label %cond.end.433

cond.false.431:                                   ; preds = %if.then.425
  %230 = load i8*, i8** %p, align 8
  %231 = load i8, i8* %230, align 1
  %conv432 = sext i8 %231 to i32
  %and = and i32 %conv432, 31
  br label %cond.end.433

cond.end.433:                                     ; preds = %cond.false.431, %cond.true.430
  %cond434 = phi i32 [ 127, %cond.true.430 ], [ %and, %cond.false.431 ]
  %conv435 = trunc i32 %cond434 to i8
  %232 = load i8*, i8** %pp, align 8
  %incdec.ptr436 = getelementptr inbounds i8, i8* %232, i32 1
  store i8* %incdec.ptr436, i8** %pp, align 8
  store i8 %conv435, i8* %232, align 1
  br label %if.end.470

if.else.437:                                      ; preds = %land.lhs.true.421, %land.lhs.true.417, %if.else.414
  %233 = load i32, i32* %delim, align 4
  %cmp438 = icmp eq i32 %233, 0
  br i1 %cmp438, label %land.lhs.true.440, label %if.else.450

land.lhs.true.440:                                ; preds = %if.else.437
  %234 = load i8*, i8** %p, align 8
  %235 = load i8, i8* %234, align 1
  %conv441 = sext i8 %235 to i32
  %cmp442 = icmp eq i32 %conv441, 39
  br i1 %cmp442, label %if.then.448, label %lor.lhs.false.444

lor.lhs.false.444:                                ; preds = %land.lhs.true.440
  %236 = load i8*, i8** %p, align 8
  %237 = load i8, i8* %236, align 1
  %conv445 = sext i8 %237 to i32
  %cmp446 = icmp eq i32 %conv445, 34
  br i1 %cmp446, label %if.then.448, label %if.else.450

if.then.448:                                      ; preds = %lor.lhs.false.444, %land.lhs.true.440
  %238 = load i8*, i8** %p, align 8
  %239 = load i8, i8* %238, align 1
  %conv449 = sext i8 %239 to i32
  store i32 %conv449, i32* %delim, align 4
  br label %if.end.469

if.else.450:                                      ; preds = %lor.lhs.false.444, %if.else.437
  %240 = load i32, i32* %delim, align 4
  %cmp451 = icmp eq i32 %240, 0
  br i1 %cmp451, label %land.lhs.true.453, label %if.else.466

land.lhs.true.453:                                ; preds = %if.else.450
  %241 = load i8*, i8** %p, align 8
  %242 = load i8, i8* %241, align 1
  %conv454 = sext i8 %242 to i32
  %cmp455 = icmp eq i32 %conv454, 32
  br i1 %cmp455, label %if.then.465, label %lor.lhs.false.457

lor.lhs.false.457:                                ; preds = %land.lhs.true.453
  %243 = load i8*, i8** %p, align 8
  %244 = load i8, i8* %243, align 1
  %conv458 = sext i8 %244 to i32
  %cmp459 = icmp eq i32 %conv458, 9
  br i1 %cmp459, label %if.then.465, label %lor.lhs.false.461

lor.lhs.false.461:                                ; preds = %lor.lhs.false.457
  %245 = load i8*, i8** %p, align 8
  %246 = load i8, i8* %245, align 1
  %conv462 = sext i8 %246 to i32
  %cmp463 = icmp eq i32 %conv462, 10
  br i1 %cmp463, label %if.then.465, label %if.else.466

if.then.465:                                      ; preds = %lor.lhs.false.461, %lor.lhs.false.457, %land.lhs.true.453
  br label %while.end.475

if.else.466:                                      ; preds = %lor.lhs.false.461, %if.else.450
  %247 = load i8*, i8** %p, align 8
  %248 = load i8, i8* %247, align 1
  %249 = load i8*, i8** %pp, align 8
  %incdec.ptr467 = getelementptr inbounds i8, i8* %249, i32 1
  store i8* %incdec.ptr467, i8** %pp, align 8
  store i8 %248, i8* %249, align 1
  br label %if.end.468

if.end.468:                                       ; preds = %if.else.466
  br label %if.end.469

if.end.469:                                       ; preds = %if.end.468, %if.then.448
  br label %if.end.470

if.end.470:                                       ; preds = %if.end.469, %cond.end.433
  br label %if.end.471

if.end.471:                                       ; preds = %if.end.470
  br label %if.end.472

if.end.472:                                       ; preds = %if.end.471, %if.end.160
  br label %if.end.473

if.end.473:                                       ; preds = %if.end.472, %if.then.46
  %250 = load i8*, i8** %p, align 8
  %incdec.ptr474 = getelementptr inbounds i8, i8* %250, i32 1
  store i8* %incdec.ptr474, i8** %p, align 8
  br label %while.cond.40

while.end.475:                                    ; preds = %if.then.465, %while.cond.40
  %251 = load i32, i32* %delim, align 4
  %tobool476 = icmp ne i32 %251, 0
  br i1 %tobool476, label %if.then.477, label %if.end.478

if.then.477:                                      ; preds = %while.end.475
  %252 = load i8*, i8** @rc_name, align 8
  %253 = load i32, i32* %delim, align 4
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.320, i32 0, i32 0), i8* %252, i32 %253)
  store i32 0, i32* %retval
  br label %return

if.end.478:                                       ; preds = %while.end.475
  %254 = load i8*, i8** %p, align 8
  %255 = load i8, i8* %254, align 1
  %tobool479 = icmp ne i8 %255, 0
  br i1 %tobool479, label %if.then.480, label %if.end.482

if.then.480:                                      ; preds = %if.end.478
  %256 = load i8*, i8** %p, align 8
  %incdec.ptr481 = getelementptr inbounds i8, i8* %256, i32 1
  store i8* %incdec.ptr481, i8** %p, align 8
  br label %if.end.482

if.end.482:                                       ; preds = %if.then.480, %if.end.478
  %257 = load i8*, i8** %pp, align 8
  store i8 0, i8* %257, align 1
  br label %do.body.483

do.body.483:                                      ; preds = %if.end.482
  br label %do.end.484

do.end.484:                                       ; preds = %do.body.483
  %258 = load i8*, i8** %pp, align 8
  %259 = load i8**, i8*** %ap, align 8
  %arrayidx485 = getelementptr inbounds i8*, i8** %259, i64 -1
  %260 = load i8*, i8** %arrayidx485, align 8
  %sub.ptr.lhs.cast486 = ptrtoint i8* %258 to i64
  %sub.ptr.rhs.cast487 = ptrtoint i8* %260 to i64
  %sub.ptr.sub488 = sub i64 %sub.ptr.lhs.cast486, %sub.ptr.rhs.cast487
  %conv489 = trunc i64 %sub.ptr.sub488 to i32
  %261 = load i32*, i32** %lp, align 8
  %incdec.ptr490 = getelementptr inbounds i32, i32* %261, i32 1
  store i32* %incdec.ptr490, i32** %lp, align 8
  store i32 %conv489, i32* %261, align 4
  %262 = load i8*, i8** %pp, align 8
  %incdec.ptr491 = getelementptr inbounds i8, i8* %262, i32 1
  store i8* %incdec.ptr491, i8** %pp, align 8
  br label %for.cond

return:                                           ; preds = %if.then.477, %if.then.408, %if.then.287, %if.then.35, %for.end
  %263 = load i32, i32* %retval
  ret i32 %263
}

declare i8* @gettermcapstring(i8*) #2

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind
declare i8* @getenv(i8*) #1

; Function Attrs: nounwind uwtable
define i32 @WindowByNoN(i8* %str) #0 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %p = alloca %struct.win*, align 8
  store i8* %str, i8** %str.addr, align 8
  %0 = load i8*, i8** %str.addr, align 8
  %call = call i32 @WindowByNumber(i8* %0)
  store i32 %call, i32* %i, align 4
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* @maxwin, align 4
  %cmp1 = icmp sge i32 %1, %2
  br i1 %cmp1, label %if.then, label %if.end.4

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i8*, i8** %str.addr, align 8
  %call2 = call %struct.win* @WindowByName(i8* %3)
  store %struct.win* %call2, %struct.win** %p, align 8
  %tobool = icmp ne %struct.win* %call2, null
  br i1 %tobool, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %4 = load %struct.win*, %struct.win** %p, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %4, i32 0, i32 9
  %5 = load i32, i32* %w_number, align 4
  store i32 %5, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  store i32 -1, i32* %retval
  br label %return

if.end.4:                                         ; preds = %lor.lhs.false
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval
  br label %return

return:                                           ; preds = %if.end.4, %if.end, %if.then.3
  %7 = load i32, i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define i32 @IsNumColon(i8* %s, i32 %base, i8* %p, i32 %psize) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %psize.addr = alloca i32, align 4
  %q = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  store i8* %p, i8** %p.addr, align 8
  store i32 %psize, i32* %psize.addr, align 4
  %0 = load i8*, i8** %s.addr, align 8
  %call = call i8* @rindex(i8* %0, i32 58) #8
  store i8* %call, i8** %q, align 8
  %cmp = icmp ne i8* %call, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8
  %2 = load i8*, i8** %q, align 8
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 1
  %3 = load i32, i32* %psize.addr, align 4
  %sub = sub nsw i32 %3, 1
  %conv = sext i32 %sub to i64
  %call1 = call i8* @strncpy(i8* %1, i8* %add.ptr, i64 %conv) #4
  %4 = load i32, i32* %psize.addr, align 4
  %sub2 = sub nsw i32 %4, 1
  %idxprom = sext i32 %sub2 to i64
  %5 = load i8*, i8** %p.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %idxprom
  store i8 0, i8* %arrayidx, align 1
  %6 = load i8*, i8** %q, align 8
  store i8 0, i8* %6, align 1
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %p.addr, align 8
  store i8 0, i8* %7, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i8*, i8** %s.addr, align 8
  %9 = load i32, i32* %base.addr, align 4
  %call3 = call i32 @IsNum(i8* %8, i32 %9)
  ret i32 %call3
}

; Function Attrs: nounwind readonly
declare i8* @rindex(i8*, i32) #3

; Function Attrs: nounwind uwtable
define internal i32 @IsNum(i8* %s, i32 %base) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32 %base, i32* %base.addr, align 4
  %0 = load i32, i32* %base.addr, align 4
  %add = add nsw i32 %0, 48
  store i32 %add, i32* %base.addr, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s.addr, align 8
  %2 = load i8, i8* %1, align 1
  %tobool = icmp ne i8 %2, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s.addr, align 8
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %cmp = icmp slt i32 %conv, 48
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %s.addr, align 8
  %6 = load i8, i8* %5, align 1
  %conv2 = sext i8 %6 to i32
  %7 = load i32, i32* %base.addr, align 4
  %cmp3 = icmp sgt i32 %conv2, %7
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load i8*, i8** %s.addr, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1
  store i8* %incdec.ptr, i8** %s.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %9 = load i32, i32* %retval
  ret i32 %9
}

declare void @SetCanvasWindow(%struct.canvas*, %struct.win*) #2

declare i32 @MayResizeLayer(%struct.layer*) #2

declare void @Redisplay(i32) #2

declare void @FreeWindow(%struct.win*) #2

; Function Attrs: nounwind uwtable
define %struct.win* @FindNiceWindow(%struct.win* %wi, i8* %presel) #0 {
entry:
  %retval = alloca %struct.win*, align 8
  %wi.addr = alloca %struct.win*, align 8
  %presel.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.win* %wi, %struct.win** %wi.addr, align 8
  store i8* %presel, i8** %presel.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load i8*, i8** %presel.addr, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end.2

if.then:                                          ; preds = %do.end
  %1 = load i8*, i8** %presel.addr, align 8
  %call = call i32 @WindowByNoN(i8* %1)
  store i32 %call, i32* %i, align 4
  %2 = load i32, i32* %i, align 4
  %cmp = icmp sge i32 %2, 0
  br i1 %cmp, label %if.then.1, label %if.end

if.then.1:                                        ; preds = %if.then
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.win**, %struct.win*** @wtab, align 8
  %arrayidx = getelementptr inbounds %struct.win*, %struct.win** %4, i64 %idxprom
  %5 = load %struct.win*, %struct.win** %arrayidx, align 8
  store %struct.win* %5, %struct.win** %wi.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.1, %if.then
  br label %if.end.2

if.end.2:                                         ; preds = %if.end, %do.end
  %6 = load %struct.display*, %struct.display** @display, align 8
  %tobool3 = icmp ne %struct.display* %6, null
  br i1 %tobool3, label %if.end.5, label %if.then.4

if.then.4:                                        ; preds = %if.end.2
  %7 = load %struct.win*, %struct.win** %wi.addr, align 8
  store %struct.win* %7, %struct.win** %retval
  br label %return

if.end.5:                                         ; preds = %if.end.2
  %8 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool6 = icmp ne %struct.win* %8, null
  br i1 %tobool6, label %land.lhs.true, label %if.end.10

land.lhs.true:                                    ; preds = %if.end.5
  %9 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %9, i32 0, i32 1
  %10 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %11 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call7 = call i32 @AclCheckPermWin(%struct.acluser* %10, i32 2, %struct.win* %11)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %if.then.9, label %if.end.10

if.then.9:                                        ; preds = %land.lhs.true
  store %struct.win* null, %struct.win** %wi.addr, align 8
  br label %if.end.10

if.end.10:                                        ; preds = %if.then.9, %land.lhs.true, %if.end.5
  %12 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool11 = icmp ne %struct.win* %12, null
  br i1 %tobool11, label %lor.lhs.false, label %if.then.16

lor.lhs.false:                                    ; preds = %if.end.10
  %13 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call12 = call i32 @IsOnDisplay(%struct.win* %13)
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %land.lhs.true.14, label %if.end.116

land.lhs.true.14:                                 ; preds = %lor.lhs.false
  %14 = load i8*, i8** %presel.addr, align 8
  %tobool15 = icmp ne i8* %14, null
  br i1 %tobool15, label %if.end.116, label %if.then.16

if.then.16:                                       ; preds = %land.lhs.true.14, %if.end.10
  store %struct.win* null, %struct.win** %wi.addr, align 8
  %15 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %15, %struct.win** %wi.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.16
  %16 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool17 = icmp ne %struct.win* %16, null
  br i1 %tobool17, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_layer = getelementptr inbounds %struct.win, %struct.win* %17, i32 0, i32 3
  %l_cvlist = getelementptr inbounds %struct.layer, %struct.layer* %w_layer, i32 0, i32 0
  %18 = load %struct.canvas*, %struct.canvas** %l_cvlist, align 8
  %tobool18 = icmp ne %struct.canvas* %18, null
  br i1 %tobool18, label %if.end.24, label %land.lhs.true.19

land.lhs.true.19:                                 ; preds = %for.body
  %19 = load %struct.display*, %struct.display** @display, align 8
  %d_user20 = getelementptr inbounds %struct.display, %struct.display* %19, i32 0, i32 1
  %20 = load %struct.acluser*, %struct.acluser** %d_user20, align 8
  %21 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call21 = call i32 @AclCheckPermWin(%struct.acluser* %20, i32 1, %struct.win* %21)
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end.24, label %if.then.23

if.then.23:                                       ; preds = %land.lhs.true.19
  br label %for.end

if.end.24:                                        ; preds = %land.lhs.true.19, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end.24
  %22 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_next = getelementptr inbounds %struct.win, %struct.win* %22, i32 0, i32 0
  %23 = load %struct.win*, %struct.win** %w_next, align 8
  store %struct.win* %23, %struct.win** %wi.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.23, %for.cond
  %24 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool25 = icmp ne %struct.win* %24, null
  br i1 %tobool25, label %if.end.45, label %if.then.26

if.then.26:                                       ; preds = %for.end
  %25 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %25, %struct.win** %wi.addr, align 8
  br label %for.cond.27

for.cond.27:                                      ; preds = %for.inc.42, %if.then.26
  %26 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool28 = icmp ne %struct.win* %26, null
  br i1 %tobool28, label %for.body.29, label %for.end.44

for.body.29:                                      ; preds = %for.cond.27
  %27 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_layer30 = getelementptr inbounds %struct.win, %struct.win* %27, i32 0, i32 3
  %l_cvlist31 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer30, i32 0, i32 0
  %28 = load %struct.canvas*, %struct.canvas** %l_cvlist31, align 8
  %tobool32 = icmp ne %struct.canvas* %28, null
  br i1 %tobool32, label %land.lhs.true.33, label %if.end.41

land.lhs.true.33:                                 ; preds = %for.body.29
  %29 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call34 = call i32 @IsOnDisplay(%struct.win* %29)
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.end.41, label %land.lhs.true.36

land.lhs.true.36:                                 ; preds = %land.lhs.true.33
  %30 = load %struct.display*, %struct.display** @display, align 8
  %d_user37 = getelementptr inbounds %struct.display, %struct.display* %30, i32 0, i32 1
  %31 = load %struct.acluser*, %struct.acluser** %d_user37, align 8
  %32 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call38 = call i32 @AclCheckPermWin(%struct.acluser* %31, i32 1, %struct.win* %32)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.end.41, label %if.then.40

if.then.40:                                       ; preds = %land.lhs.true.36
  br label %for.end.44

if.end.41:                                        ; preds = %land.lhs.true.36, %land.lhs.true.33, %for.body.29
  br label %for.inc.42

for.inc.42:                                       ; preds = %if.end.41
  %33 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_next43 = getelementptr inbounds %struct.win, %struct.win* %33, i32 0, i32 0
  %34 = load %struct.win*, %struct.win** %w_next43, align 8
  store %struct.win* %34, %struct.win** %wi.addr, align 8
  br label %for.cond.27

for.end.44:                                       ; preds = %if.then.40, %for.cond.27
  br label %if.end.45

if.end.45:                                        ; preds = %for.end.44, %for.end
  %35 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool46 = icmp ne %struct.win* %35, null
  br i1 %tobool46, label %if.end.63, label %if.then.47

if.then.47:                                       ; preds = %if.end.45
  %36 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %36, %struct.win** %wi.addr, align 8
  br label %for.cond.48

for.cond.48:                                      ; preds = %for.inc.60, %if.then.47
  %37 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool49 = icmp ne %struct.win* %37, null
  br i1 %tobool49, label %for.body.50, label %for.end.62

for.body.50:                                      ; preds = %for.cond.48
  %38 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_layer51 = getelementptr inbounds %struct.win, %struct.win* %38, i32 0, i32 3
  %l_cvlist52 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer51, i32 0, i32 0
  %39 = load %struct.canvas*, %struct.canvas** %l_cvlist52, align 8
  %tobool53 = icmp ne %struct.canvas* %39, null
  br i1 %tobool53, label %if.end.59, label %land.lhs.true.54

land.lhs.true.54:                                 ; preds = %for.body.50
  %40 = load %struct.display*, %struct.display** @display, align 8
  %d_user55 = getelementptr inbounds %struct.display, %struct.display* %40, i32 0, i32 1
  %41 = load %struct.acluser*, %struct.acluser** %d_user55, align 8
  %42 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call56 = call i32 @AclCheckPermWin(%struct.acluser* %41, i32 2, %struct.win* %42)
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.end.59, label %if.then.58

if.then.58:                                       ; preds = %land.lhs.true.54
  br label %for.end.62

if.end.59:                                        ; preds = %land.lhs.true.54, %for.body.50
  br label %for.inc.60

for.inc.60:                                       ; preds = %if.end.59
  %43 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_next61 = getelementptr inbounds %struct.win, %struct.win* %43, i32 0, i32 0
  %44 = load %struct.win*, %struct.win** %w_next61, align 8
  store %struct.win* %44, %struct.win** %wi.addr, align 8
  br label %for.cond.48

for.end.62:                                       ; preds = %if.then.58, %for.cond.48
  br label %if.end.63

if.end.63:                                        ; preds = %for.end.62, %if.end.45
  %45 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool64 = icmp ne %struct.win* %45, null
  br i1 %tobool64, label %if.end.84, label %if.then.65

if.then.65:                                       ; preds = %if.end.63
  %46 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %46, %struct.win** %wi.addr, align 8
  br label %for.cond.66

for.cond.66:                                      ; preds = %for.inc.81, %if.then.65
  %47 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool67 = icmp ne %struct.win* %47, null
  br i1 %tobool67, label %for.body.68, label %for.end.83

for.body.68:                                      ; preds = %for.cond.66
  %48 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_layer69 = getelementptr inbounds %struct.win, %struct.win* %48, i32 0, i32 3
  %l_cvlist70 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer69, i32 0, i32 0
  %49 = load %struct.canvas*, %struct.canvas** %l_cvlist70, align 8
  %tobool71 = icmp ne %struct.canvas* %49, null
  br i1 %tobool71, label %land.lhs.true.72, label %if.end.80

land.lhs.true.72:                                 ; preds = %for.body.68
  %50 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call73 = call i32 @IsOnDisplay(%struct.win* %50)
  %tobool74 = icmp ne i32 %call73, 0
  br i1 %tobool74, label %if.end.80, label %land.lhs.true.75

land.lhs.true.75:                                 ; preds = %land.lhs.true.72
  %51 = load %struct.display*, %struct.display** @display, align 8
  %d_user76 = getelementptr inbounds %struct.display, %struct.display* %51, i32 0, i32 1
  %52 = load %struct.acluser*, %struct.acluser** %d_user76, align 8
  %53 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call77 = call i32 @AclCheckPermWin(%struct.acluser* %52, i32 2, %struct.win* %53)
  %tobool78 = icmp ne i32 %call77, 0
  br i1 %tobool78, label %if.end.80, label %if.then.79

if.then.79:                                       ; preds = %land.lhs.true.75
  br label %for.end.83

if.end.80:                                        ; preds = %land.lhs.true.75, %land.lhs.true.72, %for.body.68
  br label %for.inc.81

for.inc.81:                                       ; preds = %if.end.80
  %54 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_next82 = getelementptr inbounds %struct.win, %struct.win* %54, i32 0, i32 0
  %55 = load %struct.win*, %struct.win** %w_next82, align 8
  store %struct.win* %55, %struct.win** %wi.addr, align 8
  br label %for.cond.66

for.end.83:                                       ; preds = %if.then.79, %for.cond.66
  br label %if.end.84

if.end.84:                                        ; preds = %for.end.83, %if.end.63
  %56 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool85 = icmp ne %struct.win* %56, null
  br i1 %tobool85, label %if.end.98, label %if.then.86

if.then.86:                                       ; preds = %if.end.84
  %57 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %57, %struct.win** %wi.addr, align 8
  br label %for.cond.87

for.cond.87:                                      ; preds = %for.inc.95, %if.then.86
  %58 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool88 = icmp ne %struct.win* %58, null
  br i1 %tobool88, label %for.body.89, label %for.end.97

for.body.89:                                      ; preds = %for.cond.87
  %59 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_layer90 = getelementptr inbounds %struct.win, %struct.win* %59, i32 0, i32 3
  %l_cvlist91 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer90, i32 0, i32 0
  %60 = load %struct.canvas*, %struct.canvas** %l_cvlist91, align 8
  %tobool92 = icmp ne %struct.canvas* %60, null
  br i1 %tobool92, label %if.end.94, label %if.then.93

if.then.93:                                       ; preds = %for.body.89
  br label %for.end.97

if.end.94:                                        ; preds = %for.body.89
  br label %for.inc.95

for.inc.95:                                       ; preds = %if.end.94
  %61 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_next96 = getelementptr inbounds %struct.win, %struct.win* %61, i32 0, i32 0
  %62 = load %struct.win*, %struct.win** %w_next96, align 8
  store %struct.win* %62, %struct.win** %wi.addr, align 8
  br label %for.cond.87

for.end.97:                                       ; preds = %if.then.93, %for.cond.87
  br label %if.end.98

if.end.98:                                        ; preds = %for.end.97, %if.end.84
  %63 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool99 = icmp ne %struct.win* %63, null
  br i1 %tobool99, label %if.end.115, label %if.then.100

if.then.100:                                      ; preds = %if.end.98
  %64 = load %struct.win*, %struct.win** @windows, align 8
  store %struct.win* %64, %struct.win** %wi.addr, align 8
  br label %for.cond.101

for.cond.101:                                     ; preds = %for.inc.112, %if.then.100
  %65 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool102 = icmp ne %struct.win* %65, null
  br i1 %tobool102, label %for.body.103, label %for.end.114

for.body.103:                                     ; preds = %for.cond.101
  %66 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_layer104 = getelementptr inbounds %struct.win, %struct.win* %66, i32 0, i32 3
  %l_cvlist105 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer104, i32 0, i32 0
  %67 = load %struct.canvas*, %struct.canvas** %l_cvlist105, align 8
  %tobool106 = icmp ne %struct.canvas* %67, null
  br i1 %tobool106, label %land.lhs.true.107, label %if.end.111

land.lhs.true.107:                                ; preds = %for.body.103
  %68 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call108 = call i32 @IsOnDisplay(%struct.win* %68)
  %tobool109 = icmp ne i32 %call108, 0
  br i1 %tobool109, label %if.end.111, label %if.then.110

if.then.110:                                      ; preds = %land.lhs.true.107
  br label %for.end.114

if.end.111:                                       ; preds = %land.lhs.true.107, %for.body.103
  br label %for.inc.112

for.inc.112:                                      ; preds = %if.end.111
  %69 = load %struct.win*, %struct.win** %wi.addr, align 8
  %w_next113 = getelementptr inbounds %struct.win, %struct.win* %69, i32 0, i32 0
  %70 = load %struct.win*, %struct.win** %w_next113, align 8
  store %struct.win* %70, %struct.win** %wi.addr, align 8
  br label %for.cond.101

for.end.114:                                      ; preds = %if.then.110, %for.cond.101
  br label %if.end.115

if.end.115:                                       ; preds = %for.end.114, %if.end.98
  br label %if.end.116

if.end.116:                                       ; preds = %if.end.115, %land.lhs.true.14, %lor.lhs.false
  %71 = load %struct.win*, %struct.win** %wi.addr, align 8
  %tobool117 = icmp ne %struct.win* %71, null
  br i1 %tobool117, label %land.lhs.true.118, label %if.end.123

land.lhs.true.118:                                ; preds = %if.end.116
  %72 = load %struct.display*, %struct.display** @display, align 8
  %d_user119 = getelementptr inbounds %struct.display, %struct.display* %72, i32 0, i32 1
  %73 = load %struct.acluser*, %struct.acluser** %d_user119, align 8
  %74 = load %struct.win*, %struct.win** %wi.addr, align 8
  %call120 = call i32 @AclCheckPermWin(%struct.acluser* %73, i32 2, %struct.win* %74)
  %tobool121 = icmp ne i32 %call120, 0
  br i1 %tobool121, label %if.then.122, label %if.end.123

if.then.122:                                      ; preds = %land.lhs.true.118
  store %struct.win* null, %struct.win** %wi.addr, align 8
  br label %if.end.123

if.end.123:                                       ; preds = %if.then.122, %land.lhs.true.118, %if.end.116
  %75 = load %struct.win*, %struct.win** %wi.addr, align 8
  store %struct.win* %75, %struct.win** %retval
  br label %return

return:                                           ; preds = %if.end.123, %if.then.4
  %76 = load %struct.win*, %struct.win** %retval
  ret %struct.win* %76
}

declare void @UpdateLayoutCanvas(%struct.canvas*, %struct.win*) #2

; Function Attrs: nounwind uwtable
define i8* @AddWindows(i8* %buf, i32 %len, i32 %flags, i32 %where) #0 {
entry:
  %retval = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %where.addr = alloca i32, align 4
  %s = alloca i8*, align 8
  %ss = alloca i8*, align 8
  %pp = alloca %struct.win**, align 8
  %p = alloca %struct.win*, align 8
  %cmd = alloca i8*, align 8
  %l = alloca i32, align 4
  %rend = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32 %flags, i32* %flags.addr, align 4
  store i32 %where, i32* %where.addr, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %ss, align 8
  store i8* %0, i8** %s, align 8
  %1 = load i32, i32* %flags.addr, align 4
  %and = and i32 %1, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %where.addr, align 4
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %s, align 8
  store i8 0, i8* %3, align 1
  %4 = load i8*, i8** %ss, align 8
  store i8* %4, i8** %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %flags.addr, align 4
  %and1 = and i32 %5, 4
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %land.lhs.true.3, label %cond.false

land.lhs.true.3:                                  ; preds = %if.end
  %6 = load i32, i32* %where.addr, align 4
  %cmp4 = icmp sge i32 %6, 0
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true.3
  %7 = load %struct.win**, %struct.win*** @wtab, align 8
  %8 = load i32, i32* %where.addr, align 4
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds %struct.win*, %struct.win** %7, i64 %idx.ext
  %add.ptr5 = getelementptr inbounds %struct.win*, %struct.win** %add.ptr, i64 1
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true.3, %if.end
  %9 = load %struct.win**, %struct.win*** @wtab, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.win** [ %add.ptr5, %cond.true ], [ %9, %cond.false ]
  store %struct.win** %cond, %struct.win*** %pp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %10 = load %struct.win**, %struct.win*** %pp, align 8
  %11 = load %struct.win**, %struct.win*** @wtab, align 8
  %12 = load i32, i32* @maxwin, align 4
  %idx.ext6 = sext i32 %12 to i64
  %add.ptr7 = getelementptr inbounds %struct.win*, %struct.win** %11, i64 %idx.ext6
  %cmp8 = icmp ult %struct.win** %10, %add.ptr7
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  store i32 -1, i32* %rend, align 4
  %13 = load %struct.win**, %struct.win*** %pp, align 8
  %14 = load %struct.win**, %struct.win*** @wtab, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.win** %13 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.win** %14 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  %15 = load i32, i32* %where.addr, align 4
  %conv = sext i32 %15 to i64
  %cmp9 = icmp eq i64 %sub.ptr.div, %conv
  br i1 %cmp9, label %land.lhs.true.11, label %if.end.15

land.lhs.true.11:                                 ; preds = %for.body
  %16 = load i8*, i8** %ss, align 8
  %17 = load i8*, i8** %buf.addr, align 8
  %cmp12 = icmp eq i8* %16, %17
  br i1 %cmp12, label %if.then.14, label %if.end.15

if.then.14:                                       ; preds = %land.lhs.true.11
  %18 = load i8*, i8** %s, align 8
  store i8* %18, i8** %ss, align 8
  br label %if.end.15

if.end.15:                                        ; preds = %if.then.14, %land.lhs.true.11, %for.body
  %19 = load %struct.win**, %struct.win*** %pp, align 8
  %20 = load %struct.win*, %struct.win** %19, align 8
  store %struct.win* %20, %struct.win** %p, align 8
  %cmp16 = icmp eq %struct.win* %20, null
  br i1 %cmp16, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.15
  br label %for.inc

if.end.19:                                        ; preds = %if.end.15
  %21 = load i32, i32* %flags.addr, align 4
  %and20 = and i32 %21, 1
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %land.lhs.true.22, label %if.end.28

land.lhs.true.22:                                 ; preds = %if.end.19
  %22 = load %struct.display*, %struct.display** @display, align 8
  %tobool23 = icmp ne %struct.display* %22, null
  br i1 %tobool23, label %land.lhs.true.24, label %if.end.28

land.lhs.true.24:                                 ; preds = %land.lhs.true.22
  %23 = load %struct.win*, %struct.win** %p, align 8
  %24 = load %struct.display*, %struct.display** @display, align 8
  %d_fore = getelementptr inbounds %struct.display, %struct.display* %24, i32 0, i32 10
  %25 = load %struct.win*, %struct.win** %d_fore, align 8
  %cmp25 = icmp eq %struct.win* %23, %25
  br i1 %cmp25, label %if.then.27, label %if.end.28

if.then.27:                                       ; preds = %land.lhs.true.24
  br label %for.inc

if.end.28:                                        ; preds = %land.lhs.true.24, %land.lhs.true.22, %if.end.19
  %26 = load %struct.display*, %struct.display** @display, align 8
  %tobool29 = icmp ne %struct.display* %26, null
  br i1 %tobool29, label %land.lhs.true.30, label %if.end.39

land.lhs.true.30:                                 ; preds = %if.end.28
  %27 = load %struct.display*, %struct.display** @display, align 8
  %d_fore31 = getelementptr inbounds %struct.display, %struct.display* %27, i32 0, i32 10
  %28 = load %struct.win*, %struct.win** %d_fore31, align 8
  %tobool32 = icmp ne %struct.win* %28, null
  br i1 %tobool32, label %land.lhs.true.33, label %if.end.39

land.lhs.true.33:                                 ; preds = %land.lhs.true.30
  %29 = load %struct.display*, %struct.display** @display, align 8
  %d_fore34 = getelementptr inbounds %struct.display, %struct.display* %29, i32 0, i32 10
  %30 = load %struct.win*, %struct.win** %d_fore34, align 8
  %w_group = getelementptr inbounds %struct.win, %struct.win* %30, i32 0, i32 25
  %31 = load %struct.win*, %struct.win** %w_group, align 8
  %32 = load %struct.win*, %struct.win** %p, align 8
  %w_group35 = getelementptr inbounds %struct.win, %struct.win* %32, i32 0, i32 25
  %33 = load %struct.win*, %struct.win** %w_group35, align 8
  %cmp36 = icmp ne %struct.win* %31, %33
  br i1 %cmp36, label %if.then.38, label %if.end.39

if.then.38:                                       ; preds = %land.lhs.true.33
  br label %for.inc

if.end.39:                                        ; preds = %land.lhs.true.33, %land.lhs.true.30, %if.end.28
  %34 = load %struct.win*, %struct.win** %p, align 8
  %w_title = getelementptr inbounds %struct.win, %struct.win* %34, i32 0, i32 21
  %35 = load i8*, i8** %w_title, align 8
  store i8* %35, i8** %cmd, align 8
  %36 = load i8*, i8** %cmd, align 8
  %call = call i64 @strlen(i8* %36) #8
  %conv40 = trunc i64 %call to i32
  store i32 %conv40, i32* %l, align 4
  %37 = load i32, i32* %l, align 4
  %cmp41 = icmp sgt i32 %37, 20
  br i1 %cmp41, label %if.then.43, label %if.end.44

if.then.43:                                       ; preds = %if.end.39
  store i32 20, i32* %l, align 4
  br label %if.end.44

if.end.44:                                        ; preds = %if.then.43, %if.end.39
  %38 = load i8*, i8** %s, align 8
  %39 = load i8*, i8** %buf.addr, align 8
  %sub.ptr.lhs.cast45 = ptrtoint i8* %38 to i64
  %sub.ptr.rhs.cast46 = ptrtoint i8* %39 to i64
  %sub.ptr.sub47 = sub i64 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46
  %40 = load i32, i32* %l, align 4
  %conv48 = sext i32 %40 to i64
  %add = add nsw i64 %sub.ptr.sub47, %conv48
  %41 = load i32, i32* %len.addr, align 4
  %sub = sub nsw i32 %41, 24
  %conv49 = sext i32 %sub to i64
  %cmp50 = icmp sgt i64 %add, %conv49
  br i1 %cmp50, label %if.then.52, label %if.end.53

if.then.52:                                       ; preds = %if.end.44
  br label %for.end

if.end.53:                                        ; preds = %if.end.44
  %42 = load i8*, i8** %s, align 8
  %43 = load i8*, i8** %buf.addr, align 8
  %cmp54 = icmp ugt i8* %42, %43
  br i1 %cmp54, label %if.then.58, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end.53
  %44 = load i32, i32* %flags.addr, align 4
  %and56 = and i32 %44, 4
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %if.then.58, label %if.end.60

if.then.58:                                       ; preds = %lor.lhs.false, %if.end.53
  %45 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  store i8 32, i8* %45, align 1
  %46 = load i8*, i8** %s, align 8
  %incdec.ptr59 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %incdec.ptr59, i8** %s, align 8
  store i8 32, i8* %46, align 1
  br label %if.end.60

if.end.60:                                        ; preds = %if.then.58, %lor.lhs.false
  %47 = load %struct.win*, %struct.win** %p, align 8
  %w_number = getelementptr inbounds %struct.win, %struct.win* %47, i32 0, i32 9
  %48 = load i32, i32* %w_number, align 4
  %49 = load i32, i32* %where.addr, align 4
  %cmp61 = icmp eq i32 %48, %49
  br i1 %cmp61, label %if.then.63, label %if.end.68

if.then.63:                                       ; preds = %if.end.60
  %50 = load i8*, i8** %s, align 8
  store i8* %50, i8** %ss, align 8
  %51 = load i32, i32* %flags.addr, align 4
  %and64 = and i32 %51, 8
  %tobool65 = icmp ne i32 %and64, 0
  br i1 %tobool65, label %if.then.66, label %if.end.67

if.then.66:                                       ; preds = %if.then.63
  br label %for.end

if.end.67:                                        ; preds = %if.then.63
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.end.60
  %52 = load i32, i32* %flags.addr, align 4
  %and69 = and i32 %52, 4
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %lor.lhs.false.71, label %if.then.81

lor.lhs.false.71:                                 ; preds = %if.end.68
  %53 = load i32, i32* %where.addr, align 4
  %cmp72 = icmp slt i32 %53, 0
  br i1 %cmp72, label %if.then.81, label %lor.lhs.false.74

lor.lhs.false.74:                                 ; preds = %lor.lhs.false.71
  %54 = load i32, i32* %flags.addr, align 4
  %and75 = and i32 %54, 4
  %tobool76 = icmp ne i32 %and75, 0
  br i1 %tobool76, label %land.lhs.true.77, label %if.end.112

land.lhs.true.77:                                 ; preds = %lor.lhs.false.74
  %55 = load i32, i32* %where.addr, align 4
  %56 = load %struct.win*, %struct.win** %p, align 8
  %w_number78 = getelementptr inbounds %struct.win, %struct.win* %56, i32 0, i32 9
  %57 = load i32, i32* %w_number78, align 4
  %cmp79 = icmp slt i32 %55, %57
  br i1 %cmp79, label %if.then.81, label %if.end.112

if.then.81:                                       ; preds = %land.lhs.true.77, %lor.lhs.false.71, %if.end.68
  %58 = load %struct.win*, %struct.win** %p, align 8
  %w_monitor = getelementptr inbounds %struct.win, %struct.win* %58, i32 0, i32 70
  %59 = load i32, i32* %w_monitor, align 4
  %cmp82 = icmp eq i32 %59, 3
  br i1 %cmp82, label %land.lhs.true.84, label %if.else

land.lhs.true.84:                                 ; preds = %if.then.81
  %60 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @renditions, i32 0, i64 1), align 4
  %cmp85 = icmp ne i32 %60, -1
  br i1 %cmp85, label %if.then.87, label %if.else

if.then.87:                                       ; preds = %land.lhs.true.84
  %61 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @renditions, i32 0, i64 1), align 4
  store i32 %61, i32* %rend, align 4
  br label %if.end.111

if.else:                                          ; preds = %land.lhs.true.84, %if.then.81
  %62 = load %struct.win*, %struct.win** %p, align 8
  %w_bell = getelementptr inbounds %struct.win, %struct.win* %62, i32 0, i32 66
  %63 = load i32, i32* %w_bell, align 4
  %cmp88 = icmp eq i32 %63, 2
  br i1 %cmp88, label %land.lhs.true.94, label %lor.lhs.false.90

lor.lhs.false.90:                                 ; preds = %if.else
  %64 = load %struct.win*, %struct.win** %p, align 8
  %w_bell91 = getelementptr inbounds %struct.win, %struct.win* %64, i32 0, i32 66
  %65 = load i32, i32* %w_bell91, align 4
  %cmp92 = icmp eq i32 %65, 1
  br i1 %cmp92, label %land.lhs.true.94, label %if.else.98

land.lhs.true.94:                                 ; preds = %lor.lhs.false.90, %if.else
  %66 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @renditions, i32 0, i64 0), align 4
  %cmp95 = icmp ne i32 %66, -1
  br i1 %cmp95, label %if.then.97, label %if.else.98

if.then.97:                                       ; preds = %land.lhs.true.94
  %67 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @renditions, i32 0, i64 0), align 4
  store i32 %67, i32* %rend, align 4
  br label %if.end.110

if.else.98:                                       ; preds = %land.lhs.true.94, %lor.lhs.false.90
  %68 = load %struct.win*, %struct.win** %p, align 8
  %w_silence = getelementptr inbounds %struct.win, %struct.win* %68, i32 0, i32 72
  %69 = load i32, i32* %w_silence, align 4
  %cmp99 = icmp eq i32 %69, 2
  br i1 %cmp99, label %land.lhs.true.105, label %lor.lhs.false.101

lor.lhs.false.101:                                ; preds = %if.else.98
  %70 = load %struct.win*, %struct.win** %p, align 8
  %w_silence102 = getelementptr inbounds %struct.win, %struct.win* %70, i32 0, i32 72
  %71 = load i32, i32* %w_silence102, align 4
  %cmp103 = icmp eq i32 %71, 3
  br i1 %cmp103, label %land.lhs.true.105, label %if.end.109

land.lhs.true.105:                                ; preds = %lor.lhs.false.101, %if.else.98
  %72 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @renditions, i32 0, i64 2), align 4
  %cmp106 = icmp ne i32 %72, -1
  br i1 %cmp106, label %if.then.108, label %if.end.109

if.then.108:                                      ; preds = %land.lhs.true.105
  %73 = load i32, i32* getelementptr inbounds ([0 x i32], [0 x i32]* @renditions, i32 0, i64 2), align 4
  store i32 %73, i32* %rend, align 4
  br label %if.end.109

if.end.109:                                       ; preds = %if.then.108, %land.lhs.true.105, %lor.lhs.false.101
  br label %if.end.110

if.end.110:                                       ; preds = %if.end.109, %if.then.97
  br label %if.end.111

if.end.111:                                       ; preds = %if.end.110, %if.then.87
  br label %if.end.112

if.end.112:                                       ; preds = %if.end.111, %land.lhs.true.77, %lor.lhs.false.74
  %74 = load i32, i32* %rend, align 4
  %cmp113 = icmp ne i32 %74, -1
  br i1 %cmp113, label %if.then.115, label %if.end.117

if.then.115:                                      ; preds = %if.end.112
  %75 = load i8*, i8** %s, align 8
  %76 = load i32, i32* %rend, align 4
  %call116 = call i32 @AddWinMsgRend(i8* %75, i32 %76)
  br label %if.end.117

if.end.117:                                       ; preds = %if.then.115, %if.end.112
  %77 = load i8*, i8** %s, align 8
  %78 = load %struct.win*, %struct.win** %p, align 8
  %w_number118 = getelementptr inbounds %struct.win, %struct.win* %78, i32 0, i32 9
  %79 = load i32, i32* %w_number118, align 4
  %call119 = call i32 (i8*, i8*, ...) @sprintf(i8* %77, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %79) #4
  %80 = load i8*, i8** %s, align 8
  %call120 = call i64 @strlen(i8* %80) #8
  %81 = load i8*, i8** %s, align 8
  %add.ptr121 = getelementptr inbounds i8, i8* %81, i64 %call120
  store i8* %add.ptr121, i8** %s, align 8
  %82 = load %struct.display*, %struct.display** @display, align 8
  %tobool122 = icmp ne %struct.display* %82, null
  br i1 %tobool122, label %land.lhs.true.123, label %if.end.129

land.lhs.true.123:                                ; preds = %if.end.117
  %83 = load %struct.win*, %struct.win** %p, align 8
  %84 = load %struct.display*, %struct.display** @display, align 8
  %d_fore124 = getelementptr inbounds %struct.display, %struct.display* %84, i32 0, i32 10
  %85 = load %struct.win*, %struct.win** %d_fore124, align 8
  %cmp125 = icmp eq %struct.win* %83, %85
  br i1 %cmp125, label %if.then.127, label %if.end.129

if.then.127:                                      ; preds = %land.lhs.true.123
  %86 = load i8*, i8** %s, align 8
  %incdec.ptr128 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %incdec.ptr128, i8** %s, align 8
  store i8 42, i8* %86, align 1
  br label %if.end.129

if.end.129:                                       ; preds = %if.then.127, %land.lhs.true.123, %if.end.117
  %87 = load i32, i32* %flags.addr, align 4
  %and130 = and i32 %87, 2
  %tobool131 = icmp ne i32 %and130, 0
  br i1 %tobool131, label %if.end.141, label %if.then.132

if.then.132:                                      ; preds = %if.end.129
  %88 = load %struct.display*, %struct.display** @display, align 8
  %tobool133 = icmp ne %struct.display* %88, null
  br i1 %tobool133, label %land.lhs.true.134, label %if.end.139

land.lhs.true.134:                                ; preds = %if.then.132
  %89 = load %struct.win*, %struct.win** %p, align 8
  %90 = load %struct.display*, %struct.display** @display, align 8
  %d_other = getelementptr inbounds %struct.display, %struct.display* %90, i32 0, i32 11
  %91 = load %struct.win*, %struct.win** %d_other, align 8
  %cmp135 = icmp eq %struct.win* %89, %91
  br i1 %cmp135, label %if.then.137, label %if.end.139

if.then.137:                                      ; preds = %land.lhs.true.134
  %92 = load i8*, i8** %s, align 8
  %incdec.ptr138 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %incdec.ptr138, i8** %s, align 8
  store i8 45, i8* %92, align 1
  br label %if.end.139

if.end.139:                                       ; preds = %if.then.137, %land.lhs.true.134, %if.then.132
  %93 = load i8*, i8** %s, align 8
  %94 = load i32, i32* %len.addr, align 4
  %95 = load %struct.win*, %struct.win** %p, align 8
  %call140 = call i8* @AddWindowFlags(i8* %93, i32 %94, %struct.win* %95)
  store i8* %call140, i8** %s, align 8
  br label %if.end.141

if.end.141:                                       ; preds = %if.end.139, %if.end.129
  %96 = load i8*, i8** %s, align 8
  %incdec.ptr142 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %incdec.ptr142, i8** %s, align 8
  store i8 32, i8* %96, align 1
  %97 = load i8*, i8** %s, align 8
  %98 = load i8*, i8** %cmd, align 8
  %99 = load i32, i32* %l, align 4
  %conv143 = sext i32 %99 to i64
  %call144 = call i8* @strncpy(i8* %97, i8* %98, i64 %conv143) #4
  %100 = load i32, i32* %l, align 4
  %101 = load i8*, i8** %s, align 8
  %idx.ext145 = sext i32 %100 to i64
  %add.ptr146 = getelementptr inbounds i8, i8* %101, i64 %idx.ext145
  store i8* %add.ptr146, i8** %s, align 8
  %102 = load i32, i32* %rend, align 4
  %cmp147 = icmp ne i32 %102, -1
  br i1 %cmp147, label %if.then.149, label %if.end.151

if.then.149:                                      ; preds = %if.end.141
  %103 = load i8*, i8** %s, align 8
  %call150 = call i32 @AddWinMsgRend(i8* %103, i32 -1)
  br label %if.end.151

if.end.151:                                       ; preds = %if.then.149, %if.end.141
  br label %for.inc

for.inc:                                          ; preds = %if.end.151, %if.then.38, %if.then.27, %if.then.18
  %104 = load %struct.win**, %struct.win*** %pp, align 8
  %incdec.ptr152 = getelementptr inbounds %struct.win*, %struct.win** %104, i32 1
  store %struct.win** %incdec.ptr152, %struct.win*** %pp, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then.66, %if.then.52, %for.cond
  %105 = load i8*, i8** %s, align 8
  store i8 0, i8* %105, align 1
  %106 = load i8*, i8** %ss, align 8
  store i8* %106, i8** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %107 = load i8*, i8** %retval
  ret i8* %107
}

declare i32 @AddWinMsgRend(i8*, i32) #2

; Function Attrs: nounwind uwtable
define i8* @AddWindowFlags(i8* %buf, i32 %len, %struct.win* %p) #0 {
entry:
  %retval = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %p.addr = alloca %struct.win*, align 8
  %s = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store %struct.win* %p, %struct.win** %p.addr, align 8
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %s, align 8
  %1 = load %struct.win*, %struct.win** %p.addr, align 8
  %cmp = icmp eq %struct.win* %1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32, i32* %len.addr, align 4
  %cmp1 = icmp slt i32 %2, 12
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i8*, i8** %s, align 8
  store i8 0, i8* %3, align 1
  %4 = load i8*, i8** %s, align 8
  store i8* %4, i8** %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_layer = getelementptr inbounds %struct.win, %struct.win* %5, i32 0, i32 3
  %l_cvlist = getelementptr inbounds %struct.layer, %struct.layer* %w_layer, i32 0, i32 0
  %6 = load %struct.canvas*, %struct.canvas** %l_cvlist, align 8
  %tobool = icmp ne %struct.canvas* %6, null
  br i1 %tobool, label %land.lhs.true, label %if.end.6

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_layer2 = getelementptr inbounds %struct.win, %struct.win* %7, i32 0, i32 3
  %l_cvlist3 = getelementptr inbounds %struct.layer, %struct.layer* %w_layer2, i32 0, i32 0
  %8 = load %struct.canvas*, %struct.canvas** %l_cvlist3, align 8
  %c_lnext = getelementptr inbounds %struct.canvas, %struct.canvas* %8, i32 0, i32 10
  %9 = load %struct.canvas*, %struct.canvas** %c_lnext, align 8
  %tobool4 = icmp ne %struct.canvas* %9, null
  br i1 %tobool4, label %if.then.5, label %if.end.6

if.then.5:                                        ; preds = %land.lhs.true
  %10 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  store i8 38, i8* %10, align 1
  br label %if.end.6

if.end.6:                                         ; preds = %if.then.5, %land.lhs.true, %if.end
  %11 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_monitor = getelementptr inbounds %struct.win, %struct.win* %11, i32 0, i32 70
  %12 = load i32, i32* %w_monitor, align 4
  %cmp7 = icmp eq i32 %12, 3
  br i1 %cmp7, label %land.lhs.true.8, label %if.end.16

land.lhs.true.8:                                  ; preds = %if.end.6
  %13 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %13, i32 0, i32 1
  %14 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %u_id = getelementptr inbounds %struct.acluser, %struct.acluser* %14, i32 0, i32 9
  %15 = load i32, i32* %u_id, align 4
  %shr = ashr i32 %15, 3
  %idxprom = sext i32 %shr to i64
  %16 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_mon_notify = getelementptr inbounds %struct.win, %struct.win* %16, i32 0, i32 33
  %17 = load i8*, i8** %w_mon_notify, align 8
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 %idxprom
  %18 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %18 to i32
  %19 = load %struct.display*, %struct.display** @display, align 8
  %d_user9 = getelementptr inbounds %struct.display, %struct.display* %19, i32 0, i32 1
  %20 = load %struct.acluser*, %struct.acluser** %d_user9, align 8
  %u_id10 = getelementptr inbounds %struct.acluser, %struct.acluser* %20, i32 0, i32 9
  %21 = load i32, i32* %u_id10, align 4
  %and = and i32 %21, 7
  %shr11 = ashr i32 128, %and
  %and12 = and i32 %conv, %shr11
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %land.lhs.true.8
  %22 = load i8*, i8** %s, align 8
  %incdec.ptr15 = getelementptr inbounds i8, i8* %22, i32 1
  store i8* %incdec.ptr15, i8** %s, align 8
  store i8 64, i8* %22, align 1
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %land.lhs.true.8, %if.end.6
  %23 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_bell = getelementptr inbounds %struct.win, %struct.win* %23, i32 0, i32 66
  %24 = load i32, i32* %w_bell, align 4
  %cmp17 = icmp eq i32 %24, 2
  br i1 %cmp17, label %if.then.19, label %if.end.21

if.then.19:                                       ; preds = %if.end.16
  %25 = load i8*, i8** %s, align 8
  %incdec.ptr20 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr20, i8** %s, align 8
  store i8 33, i8* %25, align 1
  br label %if.end.21

if.end.21:                                        ; preds = %if.then.19, %if.end.16
  %26 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_slot = getelementptr inbounds %struct.win, %struct.win* %26, i32 0, i32 87
  %27 = load i8*, i8** %w_slot, align 8
  %cmp22 = icmp ne i8* %27, null
  br i1 %cmp22, label %land.lhs.true.24, label %if.end.30

land.lhs.true.24:                                 ; preds = %if.end.21
  %28 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_slot25 = getelementptr inbounds %struct.win, %struct.win* %28, i32 0, i32 87
  %29 = load i8*, i8** %w_slot25, align 8
  %cmp26 = icmp ne i8* %29, inttoptr (i64 -1 to i8*)
  br i1 %cmp26, label %if.then.28, label %if.end.30

if.then.28:                                       ; preds = %land.lhs.true.24
  %30 = load i8*, i8** %s, align 8
  %incdec.ptr29 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr29, i8** %s, align 8
  store i8 36, i8* %30, align 1
  br label %if.end.30

if.end.30:                                        ; preds = %if.then.28, %land.lhs.true.24, %if.end.21
  %31 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_log = getelementptr inbounds %struct.win, %struct.win* %31, i32 0, i32 68
  %32 = load %struct.logfile*, %struct.logfile** %w_log, align 8
  %cmp31 = icmp ne %struct.logfile* %32, null
  br i1 %cmp31, label %if.then.33, label %if.end.34

if.then.33:                                       ; preds = %if.end.30
  %33 = load i8*, i8** %s, align 8
  %call = call i8* @strcpy(i8* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.326, i32 0, i32 0)) #4
  %34 = load i8*, i8** %s, align 8
  %add.ptr = getelementptr inbounds i8, i8* %34, i64 3
  store i8* %add.ptr, i8** %s, align 8
  br label %if.end.34

if.end.34:                                        ; preds = %if.then.33, %if.end.30
  %35 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_ptyfd = getelementptr inbounds %struct.win, %struct.win* %35, i32 0, i32 15
  %36 = load i32, i32* %w_ptyfd, align 4
  %cmp35 = icmp slt i32 %36, 0
  br i1 %cmp35, label %land.lhs.true.37, label %if.end.42

land.lhs.true.37:                                 ; preds = %if.end.34
  %37 = load %struct.win*, %struct.win** %p.addr, align 8
  %w_type = getelementptr inbounds %struct.win, %struct.win* %37, i32 0, i32 1
  %38 = load i32, i32* %w_type, align 4
  %cmp38 = icmp ne i32 %38, 3
  br i1 %cmp38, label %if.then.40, label %if.end.42

if.then.40:                                       ; preds = %land.lhs.true.37
  %39 = load i8*, i8** %s, align 8
  %incdec.ptr41 = getelementptr inbounds i8, i8* %39, i32 1
  store i8* %incdec.ptr41, i8** %s, align 8
  store i8 90, i8* %39, align 1
  br label %if.end.42

if.end.42:                                        ; preds = %if.then.40, %land.lhs.true.37, %if.end.34
  %40 = load i8*, i8** %s, align 8
  store i8 0, i8* %40, align 1
  %41 = load i8*, i8** %s, align 8
  store i8* %41, i8** %retval
  br label %return

return:                                           ; preds = %if.end.42, %if.then
  %42 = load i8*, i8** %retval
  ret i8* %42
}

; Function Attrs: nounwind uwtable
define i8* @AddOtherUsers(i8* %buf, i32 %len, %struct.win* %p) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %p.addr = alloca %struct.win*, align 8
  %d = alloca %struct.display*, align 8
  %olddisplay = alloca %struct.display*, align 8
  %cv = alloca %struct.canvas*, align 8
  %s = alloca i8*, align 8
  %l = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store %struct.win* %p, %struct.win** %p.addr, align 8
  %0 = load %struct.display*, %struct.display** @display, align 8
  store %struct.display* %0, %struct.display** %olddisplay, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  store i8* %1, i8** %s, align 8
  %2 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %2, %struct.display** @display, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc.42, %entry
  %3 = load %struct.display*, %struct.display** @display, align 8
  %tobool = icmp ne %struct.display* %3, null
  br i1 %tobool, label %for.body, label %for.end.44

for.body:                                         ; preds = %for.cond
  %4 = load %struct.display*, %struct.display** %olddisplay, align 8
  %tobool1 = icmp ne %struct.display* %4, null
  br i1 %tobool1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %5, i32 0, i32 1
  %6 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %7 = load %struct.display*, %struct.display** %olddisplay, align 8
  %d_user2 = getelementptr inbounds %struct.display, %struct.display* %7, i32 0, i32 1
  %8 = load %struct.acluser*, %struct.acluser** %d_user2, align 8
  %cmp = icmp eq %struct.acluser* %6, %8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc.42

if.end:                                           ; preds = %land.lhs.true, %for.body
  %9 = load %struct.display*, %struct.display** @display, align 8
  %d_cvlist = getelementptr inbounds %struct.display, %struct.display* %9, i32 0, i32 3
  %10 = load %struct.canvas*, %struct.canvas** %d_cvlist, align 8
  store %struct.canvas* %10, %struct.canvas** %cv, align 8
  br label %for.cond.3

for.cond.3:                                       ; preds = %for.inc, %if.end
  %11 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool4 = icmp ne %struct.canvas* %11, null
  br i1 %tobool4, label %for.body.5, label %for.end

for.body.5:                                       ; preds = %for.cond.3
  %12 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %12, i32 0, i32 9
  %13 = load %struct.layer*, %struct.layer** %c_layer, align 8
  %l_bottom = getelementptr inbounds %struct.layer, %struct.layer* %13, i32 0, i32 9
  %14 = load %struct.layer*, %struct.layer** %l_bottom, align 8
  %l_data = getelementptr inbounds %struct.layer, %struct.layer* %14, i32 0, i32 7
  %15 = load i8*, i8** %l_data, align 8
  %16 = bitcast i8* %15 to %struct.win*
  %17 = load %struct.win*, %struct.win** %p.addr, align 8
  %cmp6 = icmp eq %struct.win* %16, %17
  br i1 %cmp6, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %for.body.5
  br label %for.end

if.end.8:                                         ; preds = %for.body.5
  br label %for.inc

for.inc:                                          ; preds = %if.end.8
  %18 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next = getelementptr inbounds %struct.canvas, %struct.canvas* %18, i32 0, i32 0
  %19 = load %struct.canvas*, %struct.canvas** %c_next, align 8
  store %struct.canvas* %19, %struct.canvas** %cv, align 8
  br label %for.cond.3

for.end:                                          ; preds = %if.then.7, %for.cond.3
  %20 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool9 = icmp ne %struct.canvas* %20, null
  br i1 %tobool9, label %if.end.11, label %if.then.10

if.then.10:                                       ; preds = %for.end
  br label %for.inc.42

if.end.11:                                        ; preds = %for.end
  %21 = load %struct.display*, %struct.display** @displays, align 8
  store %struct.display* %21, %struct.display** %d, align 8
  br label %for.cond.12

for.cond.12:                                      ; preds = %for.inc.21, %if.end.11
  %22 = load %struct.display*, %struct.display** %d, align 8
  %tobool13 = icmp ne %struct.display* %22, null
  br i1 %tobool13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond.12
  %23 = load %struct.display*, %struct.display** %d, align 8
  %24 = load %struct.display*, %struct.display** @display, align 8
  %cmp14 = icmp ne %struct.display* %23, %24
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond.12
  %25 = phi i1 [ false, %for.cond.12 ], [ %cmp14, %land.rhs ]
  br i1 %25, label %for.body.15, label %for.end.22

for.body.15:                                      ; preds = %land.end
  %26 = load %struct.display*, %struct.display** @display, align 8
  %d_user16 = getelementptr inbounds %struct.display, %struct.display* %26, i32 0, i32 1
  %27 = load %struct.acluser*, %struct.acluser** %d_user16, align 8
  %28 = load %struct.display*, %struct.display** %d, align 8
  %d_user17 = getelementptr inbounds %struct.display, %struct.display* %28, i32 0, i32 1
  %29 = load %struct.acluser*, %struct.acluser** %d_user17, align 8
  %cmp18 = icmp eq %struct.acluser* %27, %29
  br i1 %cmp18, label %if.then.19, label %if.end.20

if.then.19:                                       ; preds = %for.body.15
  br label %for.end.22

if.end.20:                                        ; preds = %for.body.15
  br label %for.inc.21

for.inc.21:                                       ; preds = %if.end.20
  %30 = load %struct.display*, %struct.display** %d, align 8
  %d_next = getelementptr inbounds %struct.display, %struct.display* %30, i32 0, i32 0
  %31 = load %struct.display*, %struct.display** %d_next, align 8
  store %struct.display* %31, %struct.display** %d, align 8
  br label %for.cond.12

for.end.22:                                       ; preds = %if.then.19, %land.end
  %32 = load %struct.display*, %struct.display** %d, align 8
  %tobool23 = icmp ne %struct.display* %32, null
  br i1 %tobool23, label %land.lhs.true.24, label %if.end.27

land.lhs.true.24:                                 ; preds = %for.end.22
  %33 = load %struct.display*, %struct.display** %d, align 8
  %34 = load %struct.display*, %struct.display** @display, align 8
  %cmp25 = icmp ne %struct.display* %33, %34
  br i1 %cmp25, label %if.then.26, label %if.end.27

if.then.26:                                       ; preds = %land.lhs.true.24
  br label %for.inc.42

if.end.27:                                        ; preds = %land.lhs.true.24, %for.end.22
  %35 = load i32, i32* %len.addr, align 4
  %cmp28 = icmp sgt i32 %35, 1
  br i1 %cmp28, label %land.lhs.true.29, label %if.end.32

land.lhs.true.29:                                 ; preds = %if.end.27
  %36 = load i8*, i8** %s, align 8
  %37 = load i8*, i8** %buf.addr, align 8
  %cmp30 = icmp ne i8* %36, %37
  br i1 %cmp30, label %if.then.31, label %if.end.32

if.then.31:                                       ; preds = %land.lhs.true.29
  %38 = load i8*, i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  store i8 44, i8* %38, align 1
  %39 = load i32, i32* %len.addr, align 4
  %dec = add nsw i32 %39, -1
  store i32 %dec, i32* %len.addr, align 4
  br label %if.end.32

if.end.32:                                        ; preds = %if.then.31, %land.lhs.true.29, %if.end.27
  %40 = load %struct.display*, %struct.display** @display, align 8
  %d_user33 = getelementptr inbounds %struct.display, %struct.display* %40, i32 0, i32 1
  %41 = load %struct.acluser*, %struct.acluser** %d_user33, align 8
  %u_name = getelementptr inbounds %struct.acluser, %struct.acluser* %41, i32 0, i32 1
  %arraydecay = getelementptr inbounds [257 x i8], [257 x i8]* %u_name, i32 0, i32 0
  %call = call i64 @strlen(i8* %arraydecay) #8
  %conv = trunc i64 %call to i32
  store i32 %conv, i32* %l, align 4
  %42 = load i32, i32* %l, align 4
  %add = add nsw i32 %42, 1
  %43 = load i32, i32* %len.addr, align 4
  %cmp34 = icmp sgt i32 %add, %43
  br i1 %cmp34, label %if.then.36, label %if.end.37

if.then.36:                                       ; preds = %if.end.32
  br label %for.end.44

if.end.37:                                        ; preds = %if.end.32
  %44 = load i8*, i8** %s, align 8
  %45 = load %struct.display*, %struct.display** @display, align 8
  %d_user38 = getelementptr inbounds %struct.display, %struct.display* %45, i32 0, i32 1
  %46 = load %struct.acluser*, %struct.acluser** %d_user38, align 8
  %u_name39 = getelementptr inbounds %struct.acluser, %struct.acluser* %46, i32 0, i32 1
  %arraydecay40 = getelementptr inbounds [257 x i8], [257 x i8]* %u_name39, i32 0, i32 0
  %call41 = call i8* @strcpy(i8* %44, i8* %arraydecay40) #4
  %47 = load i32, i32* %l, align 4
  %48 = load i8*, i8** %s, align 8
  %idx.ext = sext i32 %47 to i64
  %add.ptr = getelementptr inbounds i8, i8* %48, i64 %idx.ext
  store i8* %add.ptr, i8** %s, align 8
  %49 = load i32, i32* %l, align 4
  %50 = load i32, i32* %len.addr, align 4
  %sub = sub nsw i32 %50, %49
  store i32 %sub, i32* %len.addr, align 4
  br label %for.inc.42

for.inc.42:                                       ; preds = %if.end.37, %if.then.26, %if.then.10, %if.then
  %51 = load %struct.display*, %struct.display** @display, align 8
  %d_next43 = getelementptr inbounds %struct.display, %struct.display* %51, i32 0, i32 0
  %52 = load %struct.display*, %struct.display** %d_next43, align 8
  store %struct.display* %52, %struct.display** @display, align 8
  br label %for.cond

for.end.44:                                       ; preds = %if.then.36, %for.cond
  %53 = load i8*, i8** %s, align 8
  store i8 0, i8* %53, align 1
  %54 = load %struct.display*, %struct.display** %olddisplay, align 8
  store %struct.display* %54, %struct.display** @display, align 8
  %55 = load i8*, i8** %s, align 8
  ret i8* %55
}

declare i8* @Filename(i8*) #2

declare i32 @MakeWindow(%struct.NewWindow*) #2

; Function Attrs: nounwind uwtable
define internal i32 @IsOnDisplay(%struct.win* %wi) #0 {
entry:
  %retval = alloca i32, align 4
  %wi.addr = alloca %struct.win*, align 8
  %cv = alloca %struct.canvas*, align 8
  store %struct.win* %wi, %struct.win** %wi.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load %struct.display*, %struct.display** @display, align 8
  %d_cvlist = getelementptr inbounds %struct.display, %struct.display* %0, i32 0, i32 3
  %1 = load %struct.canvas*, %struct.canvas** %d_cvlist, align 8
  store %struct.canvas* %1, %struct.canvas** %cv, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %2 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool = icmp ne %struct.canvas* %2, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_layer = getelementptr inbounds %struct.canvas, %struct.canvas* %3, i32 0, i32 9
  %4 = load %struct.layer*, %struct.layer** %c_layer, align 8
  %l_bottom = getelementptr inbounds %struct.layer, %struct.layer* %4, i32 0, i32 9
  %5 = load %struct.layer*, %struct.layer** %l_bottom, align 8
  %l_data = getelementptr inbounds %struct.layer, %struct.layer* %5, i32 0, i32 7
  %6 = load i8*, i8** %l_data, align 8
  %7 = bitcast i8* %6 to %struct.win*
  %8 = load %struct.win*, %struct.win** %wi.addr, align 8
  %cmp = icmp eq %struct.win* %7, %8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %9 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_next = getelementptr inbounds %struct.canvas, %struct.canvas* %9, i32 0, i32 0
  %10 = load %struct.canvas*, %struct.canvas** %c_next, align 8
  store %struct.canvas* %10, %struct.canvas** %cv, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval
  ret i32 %11
}

declare void @ResizeCanvas(%struct.canvas*) #2

declare void @RecreateCanvasChain() #2

declare i32 @RethinkDisplayViewports() #2

declare void @ResizeLayersToCanvases() #2

; Function Attrs: noreturn
declare void @Panic(i32, i8*, ...) #6

declare i32 @logfclose(%struct.logfile*) #2

declare i64 @ftell(%struct._IO_FILE*) #2

declare i32 @GetAnsiStatus(%struct.win*, i8*) #2

declare i32 @EncodingDefFont(i32) #2

declare i8* @EncodingName(i32) #2

declare i8* @TtyGetModemStatus(i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @AKAfin(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %do.end
  %1 = load %struct.win*, %struct.win** @fore, align 8
  %tobool1 = icmp ne %struct.win* %1, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.win*, %struct.win** @fore, align 8
  %3 = load i8*, i8** %buf.addr, align 8
  %4 = load i8*, i8** %buf.addr, align 8
  %call = call i64 @strlen(i8* %4) #8
  %conv = trunc i64 %call to i32
  call void @ChangeAKA(%struct.win* %2, i8* %3, i32 %conv)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end
  store i32 0, i32* @enter_window_name_mode, align 4
  ret void
}

declare void @RcLine(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @SelectFin(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %n = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.display*, %struct.display** @display, align 8
  %tobool1 = icmp ne %struct.display* %1, null
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i32, i32* %len.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %land.lhs.true, label %if.end.5

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8*, i8** %buf.addr, align 8
  %4 = load i8, i8* %3, align 1
  %conv = sext i8 %4 to i32
  %cmp2 = icmp eq i32 %conv, 45
  br i1 %cmp2, label %if.then.4, label %if.end.5

if.then.4:                                        ; preds = %land.lhs.true
  call void @SetForeWindow(%struct.win* null)
  call void @Activate(i32 0)
  br label %return

if.end.5:                                         ; preds = %land.lhs.true, %if.end
  %5 = load i8*, i8** %buf.addr, align 8
  %call = call i32 @WindowByNoN(i8* %5)
  store i32 %call, i32* %n, align 4
  %cmp6 = icmp slt i32 %call, 0
  br i1 %cmp6, label %if.then.8, label %if.end.9

if.then.8:                                        ; preds = %if.end.5
  br label %return

if.end.9:                                         ; preds = %if.end.5
  %6 = load i32, i32* %n, align 4
  call void @SwitchWindow(i32 %6)
  br label %return

return:                                           ; preds = %if.end.9, %if.then.8, %if.then.4, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @SetenvFin2(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.display*, %struct.display** @display, align 8
  %tobool1 = icmp ne %struct.display* %1, null
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body

do.body:                                          ; preds = %if.end
  br label %do.end

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %buf.addr, align 8
  call void @xsetenv(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @setenv_var, i32 0, i32 0), i8* %2)
  call void @MakeNewEnv()
  br label %return

return:                                           ; preds = %do.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @SetenvFin1(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i32, i32* %len.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.display*, %struct.display** @display, align 8
  %tobool1 = icmp ne %struct.display* %1, null
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i8*, i8** %buf.addr, align 8
  call void @InputSetenv(i8* %2)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

declare i64 @write(i32, i8*, i64) #2

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #1

; Function Attrs: nounwind uwtable
define internal void @su_fin(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %i = alloca %struct.inputsu*, align 8
  %p = alloca i8*, align 8
  %l = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.inputsu*
  store %struct.inputsu* %1, %struct.inputsu** %i, align 8
  %2 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %name = getelementptr inbounds %struct.inputsu, %struct.inputsu* %2, i32 0, i32 1
  %arraydecay = getelementptr inbounds [24 x i8], [24 x i8]* %name, i32 0, i32 0
  %3 = load i8, i8* %arraydecay, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %name1 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %4, i32 0, i32 1
  %arraydecay2 = getelementptr inbounds [24 x i8], [24 x i8]* %name1, i32 0, i32 0
  store i8* %arraydecay2, i8** %p, align 8
  store i32 23, i32* %l, align 4
  br label %if.end.11

if.else:                                          ; preds = %entry
  %5 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %pw1 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %5, i32 0, i32 2
  %arraydecay3 = getelementptr inbounds [130 x i8], [130 x i8]* %pw1, i32 0, i32 0
  %6 = load i8, i8* %arraydecay3, align 1
  %tobool4 = icmp ne i8 %6, 0
  br i1 %tobool4, label %if.else.8, label %if.then.5

if.then.5:                                        ; preds = %if.else
  %7 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %pw16 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %7, i32 0, i32 2
  %arraydecay7 = getelementptr inbounds [130 x i8], [130 x i8]* %pw16, i32 0, i32 0
  store i8* %arraydecay7, i8** %p, align 8
  %call = call i8* @strcpy(i8* %arraydecay7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.248, i32 0, i32 0)) #4
  store i32 129, i32* %l, align 4
  br label %if.end

if.else.8:                                        ; preds = %if.else
  %8 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %pw2 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %8, i32 0, i32 3
  %arraydecay9 = getelementptr inbounds [130 x i8], [130 x i8]* %pw2, i32 0, i32 0
  store i8* %arraydecay9, i8** %p, align 8
  %call10 = call i8* @strcpy(i8* %arraydecay9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.248, i32 0, i32 0)) #4
  store i32 129, i32* %l, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.8, %if.then.5
  br label %if.end.11

if.end.11:                                        ; preds = %if.end, %if.then
  %9 = load i8*, i8** %buf.addr, align 8
  %tobool12 = icmp ne i8* %9, null
  br i1 %tobool12, label %land.lhs.true, label %if.end.16

land.lhs.true:                                    ; preds = %if.end.11
  %10 = load i32, i32* %len.addr, align 4
  %tobool13 = icmp ne i32 %10, 0
  br i1 %tobool13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %land.lhs.true
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %buf.addr, align 8
  %13 = load i32, i32* %l, align 4
  %14 = load i32, i32* %len.addr, align 4
  %cmp = icmp slt i32 %13, %14
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.14
  %15 = load i32, i32* %l, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then.14
  %16 = load i32, i32* %len.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %16, %cond.false ]
  %add = add nsw i32 1, %cond
  %conv = sext i32 %add to i64
  %call15 = call i8* @strncpy(i8* %11, i8* %12, i64 %conv) #4
  br label %if.end.16

if.end.16:                                        ; preds = %cond.end, %land.lhs.true, %if.end.11
  %17 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %name17 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %17, i32 0, i32 1
  %arraydecay18 = getelementptr inbounds [24 x i8], [24 x i8]* %name17, i32 0, i32 0
  %18 = load i8, i8* %arraydecay18, align 1
  %tobool19 = icmp ne i8 %18, 0
  br i1 %tobool19, label %if.else.21, label %if.then.20

if.then.20:                                       ; preds = %if.end.16
  %19 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %20 = bitcast %struct.inputsu* %19 to i8*
  call void @Input(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.410, i32 0, i32 0), i32 23, i32 0, void (i8*, i32, i8*)* @su_fin, i8* %20, i32 0)
  br label %if.end.44

if.else.21:                                       ; preds = %if.end.16
  %21 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %pw122 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %21, i32 0, i32 2
  %arraydecay23 = getelementptr inbounds [130 x i8], [130 x i8]* %pw122, i32 0, i32 0
  %22 = load i8, i8* %arraydecay23, align 1
  %tobool24 = icmp ne i8 %22, 0
  br i1 %tobool24, label %if.else.26, label %if.then.25

if.then.25:                                       ; preds = %if.else.21
  %23 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %24 = bitcast %struct.inputsu* %23 to i8*
  call void @Input(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.411, i32 0, i32 0), i32 129, i32 1, void (i8*, i32, i8*)* @su_fin, i8* %24, i32 0)
  br label %if.end.43

if.else.26:                                       ; preds = %if.else.21
  %25 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %pw227 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %25, i32 0, i32 3
  %arraydecay28 = getelementptr inbounds [130 x i8], [130 x i8]* %pw227, i32 0, i32 0
  %26 = load i8, i8* %arraydecay28, align 1
  %tobool29 = icmp ne i8 %26, 0
  br i1 %tobool29, label %if.else.31, label %if.then.30

if.then.30:                                       ; preds = %if.else.26
  %27 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %28 = bitcast %struct.inputsu* %27 to i8*
  call void @Input(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.412, i32 0, i32 0), i32 129, i32 1, void (i8*, i32, i8*)* @su_fin, i8* %28, i32 0)
  br label %if.end.42

if.else.31:                                       ; preds = %if.else.26
  %29 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %up = getelementptr inbounds %struct.inputsu, %struct.inputsu* %29, i32 0, i32 0
  %30 = load %struct.acluser**, %struct.acluser*** %up, align 8
  %31 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %name32 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %31, i32 0, i32 1
  %arraydecay33 = getelementptr inbounds [24 x i8], [24 x i8]* %name32, i32 0, i32 0
  %32 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %pw234 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %32, i32 0, i32 3
  %arraydecay35 = getelementptr inbounds [130 x i8], [130 x i8]* %pw234, i32 0, i32 0
  %33 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %pw136 = getelementptr inbounds %struct.inputsu, %struct.inputsu* %33, i32 0, i32 2
  %arraydecay37 = getelementptr inbounds [130 x i8], [130 x i8]* %pw136, i32 0, i32 0
  %call38 = call i8* @DoSu(%struct.acluser** %30, i8* %arraydecay33, i8* %arraydecay35, i8* %arraydecay37)
  store i8* %call38, i8** %p, align 8
  %tobool39 = icmp ne i8* %call38, null
  br i1 %tobool39, label %if.then.40, label %if.end.41

if.then.40:                                       ; preds = %if.else.31
  %34 = load i8*, i8** %p, align 8
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* %34)
  br label %if.end.41

if.end.41:                                        ; preds = %if.then.40, %if.else.31
  %35 = load %struct.inputsu*, %struct.inputsu** %i, align 8
  %36 = bitcast %struct.inputsu* %35 to i8*
  call void @free(i8* %36) #4
  br label %if.end.42

if.end.42:                                        ; preds = %if.end.41, %if.then.30
  br label %if.end.43

if.end.43:                                        ; preds = %if.end.42, %if.then.25
  br label %if.end.44

if.end.44:                                        ; preds = %if.end.43, %if.then.20
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @pass2(i8* %buf, i32 %len, i8* %data) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %st = alloca i32, align 4
  %salt = alloca [3 x i8], align 1
  %u = alloca %struct.acluser*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i8* %data, i8** %data.addr, align 8
  %0 = load i8*, i8** %data.addr, align 8
  %1 = bitcast i8* %0 to %struct.acluser*
  store %struct.acluser* %1, %struct.acluser** %u, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %buf.addr, align 8
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %do.end
  %3 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password = getelementptr inbounds %struct.acluser, %struct.acluser* %3, i32 0, i32 2
  %4 = load i8*, i8** %u_password, align 8
  %5 = load i8*, i8** %buf.addr, align 8
  %call = call i32 @strcmp(i8* %4, i8* %5) #8
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %do.end
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.414, i32 0, i32 0))
  %6 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password2 = getelementptr inbounds %struct.acluser, %struct.acluser* %6, i32 0, i32 2
  %7 = load i8*, i8** %u_password2, align 8
  %cmp = icmp ne i8* %7, getelementptr inbounds ([1 x i8], [1 x i8]* @NullStr, i32 0, i32 0)
  br i1 %cmp, label %if.then.3, label %if.end

if.then.3:                                        ; preds = %if.then
  %8 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password4 = getelementptr inbounds %struct.acluser, %struct.acluser* %8, i32 0, i32 2
  %9 = load i8*, i8** %u_password4, align 8
  %10 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password5 = getelementptr inbounds %struct.acluser, %struct.acluser* %10, i32 0, i32 2
  %11 = load i8*, i8** %u_password5, align 8
  %call6 = call i64 @strlen(i8* %11) #8
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 %call6, i32 1, i1 false)
  %12 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password7 = getelementptr inbounds %struct.acluser, %struct.acluser* %12, i32 0, i32 2
  %13 = load i8*, i8** %u_password7, align 8
  call void @free(i8* %13) #4
  br label %if.end

if.end:                                           ; preds = %if.then.3, %if.then
  %14 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password8 = getelementptr inbounds %struct.acluser, %struct.acluser* %14, i32 0, i32 2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @NullStr, i32 0, i32 0), i8** %u_password8, align 8
  br label %if.end.18

if.else:                                          ; preds = %lor.lhs.false
  %15 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password9 = getelementptr inbounds %struct.acluser, %struct.acluser* %15, i32 0, i32 2
  %16 = load i8*, i8** %u_password9, align 8
  %arrayidx = getelementptr inbounds i8, i8* %16, i64 0
  %17 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %17 to i32
  %cmp10 = icmp eq i32 %conv, 0
  br i1 %cmp10, label %if.then.12, label %if.end.17

if.then.12:                                       ; preds = %if.else
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.415, i32 0, i32 0))
  %18 = load i8*, i8** %buf.addr, align 8
  %tobool13 = icmp ne i8* %18, null
  br i1 %tobool13, label %if.then.14, label %if.end.16

if.then.14:                                       ; preds = %if.then.12
  %19 = load i8*, i8** %buf.addr, align 8
  %20 = load i8*, i8** %buf.addr, align 8
  %call15 = call i64 @strlen(i8* %20) #8
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 %call15, i32 1, i1 false)
  br label %if.end.16

if.end.16:                                        ; preds = %if.then.14, %if.then.12
  br label %if.end.17

if.end.17:                                        ; preds = %if.end.16, %if.else
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.end
  %21 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password19 = getelementptr inbounds %struct.acluser, %struct.acluser* %21, i32 0, i32 2
  %22 = load i8*, i8** %u_password19, align 8
  %cmp20 = icmp ne i8* %22, getelementptr inbounds ([1 x i8], [1 x i8]* @NullStr, i32 0, i32 0)
  br i1 %cmp20, label %if.then.22, label %if.end.64

if.then.22:                                       ; preds = %if.end.18
  store i32 0, i32* %st, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then.22
  %23 = load i32, i32* %st, align 4
  %cmp23 = icmp slt i32 %23, 2
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call25 = call i64 @time(i64* null) #4
  %24 = load i32, i32* %st, align 4
  %mul = mul nsw i32 6, %24
  %sh_prom = zext i32 %mul to i64
  %shr = ashr i64 %call25, %sh_prom
  %rem = srem i64 %shr, 26
  %conv26 = trunc i64 %rem to i32
  %add = add nsw i32 65, %conv26
  %conv27 = trunc i32 %add to i8
  %25 = load i32, i32* %st, align 4
  %idxprom = sext i32 %25 to i64
  %arrayidx28 = getelementptr inbounds [3 x i8], [3 x i8]* %salt, i32 0, i64 %idxprom
  store i8 %conv27, i8* %arrayidx28, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %st, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %st, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arrayidx29 = getelementptr inbounds [3 x i8], [3 x i8]* %salt, i32 0, i64 2
  store i8 0, i8* %arrayidx29, align 1
  %27 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password30 = getelementptr inbounds %struct.acluser, %struct.acluser* %27, i32 0, i32 2
  %28 = load i8*, i8** %u_password30, align 8
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %salt, i32 0, i32 0
  %call31 = call i8* @crypt(i8* %28, i8* %arraydecay) #4
  store i8* %call31, i8** %buf.addr, align 8
  %29 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password32 = getelementptr inbounds %struct.acluser, %struct.acluser* %29, i32 0, i32 2
  %30 = load i8*, i8** %u_password32, align 8
  %31 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password33 = getelementptr inbounds %struct.acluser, %struct.acluser* %31, i32 0, i32 2
  %32 = load i8*, i8** %u_password33, align 8
  %call34 = call i64 @strlen(i8* %32) #8
  call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 %call34, i32 1, i1 false)
  %33 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password35 = getelementptr inbounds %struct.acluser, %struct.acluser* %33, i32 0, i32 2
  %34 = load i8*, i8** %u_password35, align 8
  call void @free(i8* %34) #4
  %35 = load i8*, i8** %buf.addr, align 8
  %tobool36 = icmp ne i8* %35, null
  br i1 %tobool36, label %if.end.39, label %if.then.37

if.then.37:                                       ; preds = %for.end
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.416, i32 0, i32 0))
  %36 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password38 = getelementptr inbounds %struct.acluser, %struct.acluser* %36, i32 0, i32 2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @NullStr, i32 0, i32 0), i8** %u_password38, align 8
  br label %if.end.64

if.end.39:                                        ; preds = %for.end
  %37 = load i8*, i8** %buf.addr, align 8
  %call40 = call i8* @SaveStr(i8* %37)
  %38 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password41 = getelementptr inbounds %struct.acluser, %struct.acluser* %38, i32 0, i32 2
  store i8* %call40, i8** %u_password41, align 8
  %39 = load i8*, i8** %buf.addr, align 8
  %40 = load i8*, i8** %buf.addr, align 8
  %call42 = call i64 @strlen(i8* %40) #8
  call void @llvm.memset.p0i8.i64(i8* %39, i8 0, i64 %call42, i32 1, i1 false)
  %41 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_plop = getelementptr inbounds %struct.acluser, %struct.acluser* %41, i32 0, i32 8
  %buf43 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop, i32 0, i32 0
  %42 = load i8*, i8** %buf43, align 8
  %tobool44 = icmp ne i8* %42, null
  br i1 %tobool44, label %if.then.45, label %if.end.47

if.then.45:                                       ; preds = %if.end.39
  %43 = load %struct.acluser*, %struct.acluser** %u, align 8
  %call46 = call i32 @UserFreeCopyBuffer(%struct.acluser* %43)
  br label %if.end.47

if.end.47:                                        ; preds = %if.then.45, %if.end.39
  %44 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password48 = getelementptr inbounds %struct.acluser, %struct.acluser* %44, i32 0, i32 2
  %45 = load i8*, i8** %u_password48, align 8
  %call49 = call i64 @strlen(i8* %45) #8
  %conv50 = trunc i64 %call49 to i32
  %46 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_plop51 = getelementptr inbounds %struct.acluser, %struct.acluser* %46, i32 0, i32 8
  %len52 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop51, i32 0, i32 1
  store i32 %conv50, i32* %len52, align 4
  %47 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_plop53 = getelementptr inbounds %struct.acluser, %struct.acluser* %47, i32 0, i32 8
  %enc = getelementptr inbounds %struct.plop, %struct.plop* %u_plop53, i32 0, i32 2
  store i32 0, i32* %enc, align 4
  %48 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_password54 = getelementptr inbounds %struct.acluser, %struct.acluser* %48, i32 0, i32 2
  %49 = load i8*, i8** %u_password54, align 8
  %call55 = call i8* @SaveStr(i8* %49)
  %50 = load %struct.acluser*, %struct.acluser** %u, align 8
  %u_plop56 = getelementptr inbounds %struct.acluser, %struct.acluser* %50, i32 0, i32 8
  %buf57 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop56, i32 0, i32 0
  store i8* %call55, i8** %buf57, align 8
  %tobool58 = icmp ne i8* %call55, null
  br i1 %tobool58, label %if.else.62, label %if.then.59

if.then.59:                                       ; preds = %if.end.47
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @strnomem, i32 0, i32 0))
  %51 = load %struct.display*, %struct.display** @display, align 8
  %d_user = getelementptr inbounds %struct.display, %struct.display* %51, i32 0, i32 1
  %52 = load %struct.acluser*, %struct.acluser** %d_user, align 8
  %u_plop60 = getelementptr inbounds %struct.acluser, %struct.acluser* %52, i32 0, i32 8
  %len61 = getelementptr inbounds %struct.plop, %struct.plop* %u_plop60, i32 0, i32 1
  store i32 0, i32* %len61, align 4
  br label %if.end.63

if.else.62:                                       ; preds = %if.end.47
  call void (i32, i8*, ...) @Msg(i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.417, i32 0, i32 0))
  br label %if.end.63

if.end.63:                                        ; preds = %if.else.62, %if.then.59
  br label %if.end.64

if.end.64:                                        ; preds = %if.then.37, %if.end.63, %if.end.18
  ret void
}

; Function Attrs: nounwind
declare i64 @time(i64*) #1

; Function Attrs: nounwind
declare i8* @crypt(i8*, i8*) #1

declare i32 @ToUtf8(i8*, i32) #2

declare void @EqualizeCanvas(%struct.canvas*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @ChangeCanvasSize(%struct.canvas* %fcv, i32 %abs, i32 %diff, i32 %gflag, i32 %percent) #0 {
entry:
  %retval = alloca i32, align 4
  %fcv.addr = alloca %struct.canvas*, align 8
  %abs.addr = alloca i32, align 4
  %diff.addr = alloca i32, align 4
  %gflag.addr = alloca i32, align 4
  %percent.addr = alloca i32, align 4
  %cv = alloca %struct.canvas*, align 8
  %done = alloca i32, align 4
  %have = alloca i32, align 4
  %m = alloca i32, align 4
  %dir = alloca i32, align 4
  %wsum = alloca i32, align 4
  %up = alloca i32, align 4
  %scale = alloca i32, align 4
  store %struct.canvas* %fcv, %struct.canvas** %fcv.addr, align 8
  store i32 %abs, i32* %abs.addr, align 4
  store i32 %diff, i32* %diff.addr, align 4
  store i32 %gflag, i32* %gflag.addr, align 4
  store i32 %percent, i32* %percent.addr, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %0 = load i32, i32* %abs.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %do.end
  %1 = load i32, i32* %diff.addr, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %do.end
  %2 = load i32, i32* %abs.addr, align 4
  %cmp2 = icmp eq i32 %2, 2
  br i1 %cmp2, label %if.then.3, label %if.end.19

if.then.3:                                        ; preds = %if.end
  %3 = load i32, i32* %diff.addr, align 4
  %cmp4 = icmp eq i32 %3, 0
  br i1 %cmp4, label %if.then.5, label %if.else

if.then.5:                                        ; preds = %if.then.3
  %4 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slweight = getelementptr inbounds %struct.canvas, %struct.canvas* %4, i32 0, i32 7
  store i32 0, i32* %c_slweight, align 4
  br label %if.end.18

if.else:                                          ; preds = %if.then.3
  %5 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback = getelementptr inbounds %struct.canvas, %struct.canvas* %5, i32 0, i32 5
  %6 = load %struct.canvas*, %struct.canvas** %c_slback, align 8
  %c_slperp = getelementptr inbounds %struct.canvas, %struct.canvas* %6, i32 0, i32 4
  %7 = load %struct.canvas*, %struct.canvas** %c_slperp, align 8
  store %struct.canvas* %7, %struct.canvas** %cv, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool = icmp ne %struct.canvas* %8, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight6 = getelementptr inbounds %struct.canvas, %struct.canvas* %9, i32 0, i32 7
  store i32 0, i32* %c_slweight6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slnext = getelementptr inbounds %struct.canvas, %struct.canvas* %10, i32 0, i32 2
  %11 = load %struct.canvas*, %struct.canvas** %c_slnext, align 8
  store %struct.canvas* %11, %struct.canvas** %cv, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slweight7 = getelementptr inbounds %struct.canvas, %struct.canvas* %12, i32 0, i32 7
  store i32 1, i32* %c_slweight7, align 4
  %13 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback8 = getelementptr inbounds %struct.canvas, %struct.canvas* %13, i32 0, i32 5
  %14 = load %struct.canvas*, %struct.canvas** %c_slback8, align 8
  %c_slback9 = getelementptr inbounds %struct.canvas, %struct.canvas* %14, i32 0, i32 5
  %15 = load %struct.canvas*, %struct.canvas** %c_slback9, align 8
  store %struct.canvas* %15, %struct.canvas** %cv, align 8
  %16 = load i32, i32* %gflag.addr, align 4
  %tobool10 = icmp ne i32 %16, 0
  br i1 %tobool10, label %land.lhs.true.11, label %if.end.17

land.lhs.true.11:                                 ; preds = %for.end
  %17 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool12 = icmp ne %struct.canvas* %17, null
  br i1 %tobool12, label %land.lhs.true.13, label %if.end.17

land.lhs.true.13:                                 ; preds = %land.lhs.true.11
  %18 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slback14 = getelementptr inbounds %struct.canvas, %struct.canvas* %18, i32 0, i32 5
  %19 = load %struct.canvas*, %struct.canvas** %c_slback14, align 8
  %tobool15 = icmp ne %struct.canvas* %19, null
  br i1 %tobool15, label %if.then.16, label %if.end.17

if.then.16:                                       ; preds = %land.lhs.true.13
  %20 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %21 = load i32, i32* %abs.addr, align 4
  %22 = load i32, i32* %diff.addr, align 4
  %23 = load i32, i32* %gflag.addr, align 4
  %24 = load i32, i32* %percent.addr, align 4
  %call = call i32 @ChangeCanvasSize(%struct.canvas* %20, i32 %21, i32 %22, i32 %23, i32 %24)
  br label %if.end.17

if.end.17:                                        ; preds = %if.then.16, %land.lhs.true.13, %land.lhs.true.11, %for.end
  br label %if.end.18

if.end.18:                                        ; preds = %if.end.17, %if.then.5
  %25 = load i32, i32* %diff.addr, align 4
  store i32 %25, i32* %retval
  br label %return

if.end.19:                                        ; preds = %if.end
  %26 = load i32, i32* %abs.addr, align 4
  %tobool20 = icmp ne i32 %26, 0
  br i1 %tobool20, label %if.then.21, label %if.end.30

if.then.21:                                       ; preds = %if.end.19
  %27 = load i32, i32* %diff.addr, align 4
  %cmp22 = icmp slt i32 %27, 0
  br i1 %cmp22, label %if.then.23, label %if.end.24

if.then.23:                                       ; preds = %if.then.21
  store i32 0, i32* %diff.addr, align 4
  br label %if.end.24

if.end.24:                                        ; preds = %if.then.23, %if.then.21
  %28 = load i32, i32* %percent.addr, align 4
  %tobool25 = icmp ne i32 %28, 0
  br i1 %tobool25, label %land.lhs.true.26, label %if.end.29

land.lhs.true.26:                                 ; preds = %if.end.24
  %29 = load i32, i32* %diff.addr, align 4
  %30 = load i32, i32* %percent.addr, align 4
  %cmp27 = icmp sgt i32 %29, %30
  br i1 %cmp27, label %if.then.28, label %if.end.29

if.then.28:                                       ; preds = %land.lhs.true.26
  %31 = load i32, i32* %percent.addr, align 4
  store i32 %31, i32* %diff.addr, align 4
  br label %if.end.29

if.end.29:                                        ; preds = %if.then.28, %land.lhs.true.26, %if.end.24
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %if.end.19
  %32 = load i32, i32* %percent.addr, align 4
  %tobool31 = icmp ne i32 %32, 0
  br i1 %tobool31, label %if.then.32, label %if.else.92

if.then.32:                                       ; preds = %if.end.30
  %33 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback33 = getelementptr inbounds %struct.canvas, %struct.canvas* %33, i32 0, i32 5
  %34 = load %struct.canvas*, %struct.canvas** %c_slback33, align 8
  %c_slperp34 = getelementptr inbounds %struct.canvas, %struct.canvas* %34, i32 0, i32 4
  %35 = load %struct.canvas*, %struct.canvas** %c_slperp34, align 8
  store %struct.canvas* %35, %struct.canvas** %cv, align 8
  store i32 0, i32* %wsum, align 4
  br label %for.cond.35

for.cond.35:                                      ; preds = %for.inc.39, %if.then.32
  %36 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool36 = icmp ne %struct.canvas* %36, null
  br i1 %tobool36, label %for.body.37, label %for.end.41

for.body.37:                                      ; preds = %for.cond.35
  %37 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight38 = getelementptr inbounds %struct.canvas, %struct.canvas* %37, i32 0, i32 7
  %38 = load i32, i32* %c_slweight38, align 4
  %39 = load i32, i32* %wsum, align 4
  %add = add nsw i32 %39, %38
  store i32 %add, i32* %wsum, align 4
  br label %for.inc.39

for.inc.39:                                       ; preds = %for.body.37
  %40 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slnext40 = getelementptr inbounds %struct.canvas, %struct.canvas* %40, i32 0, i32 2
  %41 = load %struct.canvas*, %struct.canvas** %c_slnext40, align 8
  store %struct.canvas* %41, %struct.canvas** %cv, align 8
  br label %for.cond.35

for.end.41:                                       ; preds = %for.cond.35
  %42 = load i32, i32* %wsum, align 4
  %tobool42 = icmp ne i32 %42, 0
  br i1 %tobool42, label %if.then.43, label %if.end.91

if.then.43:                                       ; preds = %for.end.41
  %43 = load i32, i32* %gflag.addr, align 4
  %tobool44 = icmp ne i32 %43, 0
  br i1 %tobool44, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then.43
  %44 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback45 = getelementptr inbounds %struct.canvas, %struct.canvas* %44, i32 0, i32 5
  %45 = load %struct.canvas*, %struct.canvas** %c_slback45, align 8
  %c_slback46 = getelementptr inbounds %struct.canvas, %struct.canvas* %45, i32 0, i32 5
  %46 = load %struct.canvas*, %struct.canvas** %c_slback46, align 8
  %47 = load i32, i32* %percent.addr, align 4
  %call47 = call i32 @CalcSlicePercent(%struct.canvas* %46, i32 %47)
  br label %cond.end

cond.false:                                       ; preds = %if.then.43
  %48 = load i32, i32* %percent.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call47, %cond.true ], [ %48, %cond.false ]
  store i32 %cond, i32* %up, align 4
  br label %do.body.48

do.body.48:                                       ; preds = %cond.end
  br label %do.end.49

do.end.49:                                        ; preds = %do.body.48
  %49 = load i32, i32* %wsum, align 4
  %cmp50 = icmp slt i32 %49, 1000
  br i1 %cmp50, label %if.then.51, label %if.end.66

if.then.51:                                       ; preds = %do.end.49
  %50 = load i32, i32* %wsum, align 4
  %cmp52 = icmp slt i32 %50, 10
  %cond53 = select i1 %cmp52, i32 1000, i32 100
  store i32 %cond53, i32* %scale, align 4
  %51 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback54 = getelementptr inbounds %struct.canvas, %struct.canvas* %51, i32 0, i32 5
  %52 = load %struct.canvas*, %struct.canvas** %c_slback54, align 8
  %c_slperp55 = getelementptr inbounds %struct.canvas, %struct.canvas* %52, i32 0, i32 4
  %53 = load %struct.canvas*, %struct.canvas** %c_slperp55, align 8
  store %struct.canvas* %53, %struct.canvas** %cv, align 8
  br label %for.cond.56

for.cond.56:                                      ; preds = %for.inc.60, %if.then.51
  %54 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool57 = icmp ne %struct.canvas* %54, null
  br i1 %tobool57, label %for.body.58, label %for.end.62

for.body.58:                                      ; preds = %for.cond.56
  %55 = load i32, i32* %scale, align 4
  %56 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight59 = getelementptr inbounds %struct.canvas, %struct.canvas* %56, i32 0, i32 7
  %57 = load i32, i32* %c_slweight59, align 4
  %mul = mul nsw i32 %57, %55
  store i32 %mul, i32* %c_slweight59, align 4
  br label %for.inc.60

for.inc.60:                                       ; preds = %for.body.58
  %58 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slnext61 = getelementptr inbounds %struct.canvas, %struct.canvas* %58, i32 0, i32 2
  %59 = load %struct.canvas*, %struct.canvas** %c_slnext61, align 8
  store %struct.canvas* %59, %struct.canvas** %cv, align 8
  br label %for.cond.56

for.end.62:                                       ; preds = %for.cond.56
  %60 = load i32, i32* %scale, align 4
  %61 = load i32, i32* %wsum, align 4
  %mul63 = mul nsw i32 %61, %60
  store i32 %mul63, i32* %wsum, align 4
  br label %do.body.64

do.body.64:                                       ; preds = %for.end.62
  br label %do.end.65

do.end.65:                                        ; preds = %do.body.64
  br label %if.end.66

if.end.66:                                        ; preds = %do.end.65, %do.end.49
  %62 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback67 = getelementptr inbounds %struct.canvas, %struct.canvas* %62, i32 0, i32 5
  %63 = load %struct.canvas*, %struct.canvas** %c_slback67, align 8
  %c_slperp68 = getelementptr inbounds %struct.canvas, %struct.canvas* %63, i32 0, i32 4
  %64 = load %struct.canvas*, %struct.canvas** %c_slperp68, align 8
  store %struct.canvas* %64, %struct.canvas** %cv, align 8
  br label %for.cond.69

for.cond.69:                                      ; preds = %for.inc.86, %if.end.66
  %65 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool70 = icmp ne %struct.canvas* %65, null
  br i1 %tobool70, label %for.body.71, label %for.end.88

for.body.71:                                      ; preds = %for.cond.69
  %66 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight72 = getelementptr inbounds %struct.canvas, %struct.canvas* %66, i32 0, i32 7
  %67 = load i32, i32* %c_slweight72, align 4
  %tobool73 = icmp ne i32 %67, 0
  br i1 %tobool73, label %if.then.74, label %if.end.83

if.then.74:                                       ; preds = %for.body.71
  %68 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight75 = getelementptr inbounds %struct.canvas, %struct.canvas* %68, i32 0, i32 7
  %69 = load i32, i32* %c_slweight75, align 4
  %70 = load i32, i32* %up, align 4
  %mul76 = mul nsw i32 %69, %70
  %71 = load i32, i32* %percent.addr, align 4
  %div = sdiv i32 %mul76, %71
  %72 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight77 = getelementptr inbounds %struct.canvas, %struct.canvas* %72, i32 0, i32 7
  store i32 %div, i32* %c_slweight77, align 4
  %73 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight78 = getelementptr inbounds %struct.canvas, %struct.canvas* %73, i32 0, i32 7
  %74 = load i32, i32* %c_slweight78, align 4
  %cmp79 = icmp eq i32 %74, 0
  br i1 %cmp79, label %if.then.80, label %if.end.82

if.then.80:                                       ; preds = %if.then.74
  %75 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight81 = getelementptr inbounds %struct.canvas, %struct.canvas* %75, i32 0, i32 7
  store i32 1, i32* %c_slweight81, align 4
  br label %if.end.82

if.end.82:                                        ; preds = %if.then.80, %if.then.74
  br label %if.end.83

if.end.83:                                        ; preds = %if.end.82, %for.body.71
  br label %do.body.84

do.body.84:                                       ; preds = %if.end.83
  br label %do.end.85

do.end.85:                                        ; preds = %do.body.84
  br label %for.inc.86

for.inc.86:                                       ; preds = %do.end.85
  %76 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slnext87 = getelementptr inbounds %struct.canvas, %struct.canvas* %76, i32 0, i32 2
  %77 = load %struct.canvas*, %struct.canvas** %c_slnext87, align 8
  store %struct.canvas* %77, %struct.canvas** %cv, align 8
  br label %for.cond.69

for.end.88:                                       ; preds = %for.cond.69
  %78 = load i32, i32* %diff.addr, align 4
  %79 = load i32, i32* %wsum, align 4
  %mul89 = mul nsw i32 %78, %79
  %80 = load i32, i32* %percent.addr, align 4
  %div90 = sdiv i32 %mul89, %80
  store i32 %div90, i32* %diff.addr, align 4
  %81 = load i32, i32* %wsum, align 4
  store i32 %81, i32* %percent.addr, align 4
  br label %if.end.91

if.end.91:                                        ; preds = %for.end.88, %for.end.41
  br label %if.end.131

if.else.92:                                       ; preds = %if.end.30
  %82 = load i32, i32* %abs.addr, align 4
  %tobool93 = icmp ne i32 %82, 0
  br i1 %tobool93, label %land.lhs.true.94, label %if.end.105

land.lhs.true.94:                                 ; preds = %if.else.92
  %83 = load i32, i32* %diff.addr, align 4
  %84 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slorient = getelementptr inbounds %struct.canvas, %struct.canvas* %84, i32 0, i32 6
  %85 = load i32, i32* %c_slorient, align 4
  %cmp95 = icmp eq i32 %85, 1
  br i1 %cmp95, label %cond.true.96, label %cond.false.98

cond.true.96:                                     ; preds = %land.lhs.true.94
  %86 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_ye = getelementptr inbounds %struct.canvas, %struct.canvas* %86, i32 0, i32 17
  %87 = load i32, i32* %c_ye, align 4
  %88 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_ys = getelementptr inbounds %struct.canvas, %struct.canvas* %88, i32 0, i32 16
  %89 = load i32, i32* %c_ys, align 4
  %sub = sub nsw i32 %87, %89
  %add97 = add nsw i32 %sub, 2
  br label %cond.end.101

cond.false.98:                                    ; preds = %land.lhs.true.94
  %90 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_xe = getelementptr inbounds %struct.canvas, %struct.canvas* %90, i32 0, i32 15
  %91 = load i32, i32* %c_xe, align 4
  %92 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_xs = getelementptr inbounds %struct.canvas, %struct.canvas* %92, i32 0, i32 14
  %93 = load i32, i32* %c_xs, align 4
  %sub99 = sub nsw i32 %91, %93
  %add100 = add nsw i32 %sub99, 2
  br label %cond.end.101

cond.end.101:                                     ; preds = %cond.false.98, %cond.true.96
  %cond102 = phi i32 [ %add97, %cond.true.96 ], [ %add100, %cond.false.98 ]
  %cmp103 = icmp eq i32 %83, %cond102
  br i1 %cmp103, label %if.then.104, label %if.end.105

if.then.104:                                      ; preds = %cond.end.101
  store i32 0, i32* %retval
  br label %return

if.end.105:                                       ; preds = %cond.end.101, %if.else.92
  %94 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback106 = getelementptr inbounds %struct.canvas, %struct.canvas* %94, i32 0, i32 5
  %95 = load %struct.canvas*, %struct.canvas** %c_slback106, align 8
  %c_slperp107 = getelementptr inbounds %struct.canvas, %struct.canvas* %95, i32 0, i32 4
  %96 = load %struct.canvas*, %struct.canvas** %c_slperp107, align 8
  store %struct.canvas* %96, %struct.canvas** %cv, align 8
  br label %for.cond.108

for.cond.108:                                     ; preds = %for.inc.128, %if.end.105
  %97 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool109 = icmp ne %struct.canvas* %97, null
  br i1 %tobool109, label %for.body.110, label %for.end.130

for.body.110:                                     ; preds = %for.cond.108
  %98 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slorient111 = getelementptr inbounds %struct.canvas, %struct.canvas* %98, i32 0, i32 6
  %99 = load i32, i32* %c_slorient111, align 4
  %cmp112 = icmp eq i32 %99, 1
  br i1 %cmp112, label %cond.true.113, label %cond.false.118

cond.true.113:                                    ; preds = %for.body.110
  %100 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_ye114 = getelementptr inbounds %struct.canvas, %struct.canvas* %100, i32 0, i32 17
  %101 = load i32, i32* %c_ye114, align 4
  %102 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_ys115 = getelementptr inbounds %struct.canvas, %struct.canvas* %102, i32 0, i32 16
  %103 = load i32, i32* %c_ys115, align 4
  %sub116 = sub nsw i32 %101, %103
  %add117 = add nsw i32 %sub116, 2
  br label %cond.end.123

cond.false.118:                                   ; preds = %for.body.110
  %104 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_xe119 = getelementptr inbounds %struct.canvas, %struct.canvas* %104, i32 0, i32 15
  %105 = load i32, i32* %c_xe119, align 4
  %106 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_xs120 = getelementptr inbounds %struct.canvas, %struct.canvas* %106, i32 0, i32 14
  %107 = load i32, i32* %c_xs120, align 4
  %sub121 = sub nsw i32 %105, %107
  %add122 = add nsw i32 %sub121, 2
  br label %cond.end.123

cond.end.123:                                     ; preds = %cond.false.118, %cond.true.113
  %cond124 = phi i32 [ %add117, %cond.true.113 ], [ %add122, %cond.false.118 ]
  %108 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight125 = getelementptr inbounds %struct.canvas, %struct.canvas* %108, i32 0, i32 7
  store i32 %cond124, i32* %c_slweight125, align 4
  br label %do.body.126

do.body.126:                                      ; preds = %cond.end.123
  br label %do.end.127

do.end.127:                                       ; preds = %do.body.126
  br label %for.inc.128

for.inc.128:                                      ; preds = %do.end.127
  %109 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slnext129 = getelementptr inbounds %struct.canvas, %struct.canvas* %109, i32 0, i32 2
  %110 = load %struct.canvas*, %struct.canvas** %c_slnext129, align 8
  store %struct.canvas* %110, %struct.canvas** %cv, align 8
  br label %for.cond.108

for.end.130:                                      ; preds = %for.cond.108
  br label %if.end.131

if.end.131:                                       ; preds = %for.end.130, %if.end.91
  %111 = load i32, i32* %abs.addr, align 4
  %tobool132 = icmp ne i32 %111, 0
  br i1 %tobool132, label %if.then.133, label %if.end.136

if.then.133:                                      ; preds = %if.end.131
  %112 = load i32, i32* %diff.addr, align 4
  %113 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slweight134 = getelementptr inbounds %struct.canvas, %struct.canvas* %113, i32 0, i32 7
  %114 = load i32, i32* %c_slweight134, align 4
  %sub135 = sub nsw i32 %112, %114
  store i32 %sub135, i32* %diff.addr, align 4
  br label %if.end.136

if.end.136:                                       ; preds = %if.then.133, %if.end.131
  br label %do.body.137

do.body.137:                                      ; preds = %if.end.136
  br label %do.end.138

do.end.138:                                       ; preds = %do.body.137
  %115 = load i32, i32* %diff.addr, align 4
  %cmp139 = icmp eq i32 %115, 0
  br i1 %cmp139, label %if.then.140, label %if.end.141

if.then.140:                                      ; preds = %do.end.138
  store i32 0, i32* %retval
  br label %return

if.end.141:                                       ; preds = %do.end.138
  %116 = load i32, i32* %diff.addr, align 4
  %cmp142 = icmp slt i32 %116, 0
  br i1 %cmp142, label %if.then.143, label %if.end.155

if.then.143:                                      ; preds = %if.end.141
  %117 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slnext144 = getelementptr inbounds %struct.canvas, %struct.canvas* %117, i32 0, i32 2
  %118 = load %struct.canvas*, %struct.canvas** %c_slnext144, align 8
  %tobool145 = icmp ne %struct.canvas* %118, null
  br i1 %tobool145, label %cond.true.146, label %cond.false.148

cond.true.146:                                    ; preds = %if.then.143
  %119 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slnext147 = getelementptr inbounds %struct.canvas, %struct.canvas* %119, i32 0, i32 2
  %120 = load %struct.canvas*, %struct.canvas** %c_slnext147, align 8
  br label %cond.end.149

cond.false.148:                                   ; preds = %if.then.143
  %121 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slprev = getelementptr inbounds %struct.canvas, %struct.canvas* %121, i32 0, i32 3
  %122 = load %struct.canvas*, %struct.canvas** %c_slprev, align 8
  br label %cond.end.149

cond.end.149:                                     ; preds = %cond.false.148, %cond.true.146
  %cond150 = phi %struct.canvas* [ %120, %cond.true.146 ], [ %122, %cond.false.148 ]
  store %struct.canvas* %cond150, %struct.canvas** %cv, align 8
  %123 = load i32, i32* %diff.addr, align 4
  %124 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slweight151 = getelementptr inbounds %struct.canvas, %struct.canvas* %124, i32 0, i32 7
  %125 = load i32, i32* %c_slweight151, align 4
  %add152 = add nsw i32 %125, %123
  store i32 %add152, i32* %c_slweight151, align 4
  %126 = load i32, i32* %diff.addr, align 4
  %127 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight153 = getelementptr inbounds %struct.canvas, %struct.canvas* %127, i32 0, i32 7
  %128 = load i32, i32* %c_slweight153, align 4
  %sub154 = sub nsw i32 %128, %126
  store i32 %sub154, i32* %c_slweight153, align 4
  %129 = load i32, i32* %diff.addr, align 4
  store i32 %129, i32* %retval
  br label %return

if.end.155:                                       ; preds = %if.end.141
  store i32 0, i32* %done, align 4
  store i32 1, i32* %dir, align 4
  %130 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slnext156 = getelementptr inbounds %struct.canvas, %struct.canvas* %130, i32 0, i32 2
  %131 = load %struct.canvas*, %struct.canvas** %c_slnext156, align 8
  store %struct.canvas* %131, %struct.canvas** %cv, align 8
  br label %for.cond.157

for.cond.157:                                     ; preds = %cond.end.203, %if.end.155
  %132 = load i32, i32* %diff.addr, align 4
  %cmp158 = icmp sgt i32 %132, 0
  br i1 %cmp158, label %for.body.159, label %for.end.205

for.body.159:                                     ; preds = %for.cond.157
  %133 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool160 = icmp ne %struct.canvas* %133, null
  br i1 %tobool160, label %if.end.167, label %if.then.161

if.then.161:                                      ; preds = %for.body.159
  br label %do.body.162

do.body.162:                                      ; preds = %if.then.161
  br label %do.end.163

do.end.163:                                       ; preds = %do.body.162
  %134 = load i32, i32* %dir, align 4
  %cmp164 = icmp eq i32 %134, -1
  br i1 %cmp164, label %if.then.165, label %if.end.166

if.then.165:                                      ; preds = %do.end.163
  br label %for.end.205

if.end.166:                                       ; preds = %do.end.163
  store i32 -1, i32* %dir, align 4
  %135 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  store %struct.canvas* %135, %struct.canvas** %cv, align 8
  br label %for.inc.197

if.end.167:                                       ; preds = %for.body.159
  %136 = load i32, i32* %percent.addr, align 4
  %tobool168 = icmp ne i32 %136, 0
  br i1 %tobool168, label %if.then.169, label %if.else.170

if.then.169:                                      ; preds = %if.end.167
  store i32 1, i32* %m, align 4
  br label %if.end.179

if.else.170:                                      ; preds = %if.end.167
  %137 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slperp171 = getelementptr inbounds %struct.canvas, %struct.canvas* %137, i32 0, i32 4
  %138 = load %struct.canvas*, %struct.canvas** %c_slperp171, align 8
  %tobool172 = icmp ne %struct.canvas* %138, null
  br i1 %tobool172, label %cond.true.173, label %cond.false.176

cond.true.173:                                    ; preds = %if.else.170
  %139 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %call174 = call i32 @CountCanvasPerp(%struct.canvas* %139)
  %mul175 = mul nsw i32 %call174, 2
  br label %cond.end.177

cond.false.176:                                   ; preds = %if.else.170
  br label %cond.end.177

cond.end.177:                                     ; preds = %cond.false.176, %cond.true.173
  %cond178 = phi i32 [ %mul175, %cond.true.173 ], [ 2, %cond.false.176 ]
  store i32 %cond178, i32* %m, align 4
  br label %if.end.179

if.end.179:                                       ; preds = %cond.end.177, %if.then.169
  br label %do.body.180

do.body.180:                                      ; preds = %if.end.179
  br label %do.end.181

do.end.181:                                       ; preds = %do.body.180
  %140 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight182 = getelementptr inbounds %struct.canvas, %struct.canvas* %140, i32 0, i32 7
  %141 = load i32, i32* %c_slweight182, align 4
  %142 = load i32, i32* %m, align 4
  %cmp183 = icmp sgt i32 %141, %142
  br i1 %cmp183, label %if.then.184, label %if.end.196

if.then.184:                                      ; preds = %do.end.181
  %143 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight185 = getelementptr inbounds %struct.canvas, %struct.canvas* %143, i32 0, i32 7
  %144 = load i32, i32* %c_slweight185, align 4
  %145 = load i32, i32* %m, align 4
  %sub186 = sub nsw i32 %144, %145
  store i32 %sub186, i32* %have, align 4
  %146 = load i32, i32* %have, align 4
  %147 = load i32, i32* %diff.addr, align 4
  %cmp187 = icmp sgt i32 %146, %147
  br i1 %cmp187, label %if.then.188, label %if.end.189

if.then.188:                                      ; preds = %if.then.184
  %148 = load i32, i32* %diff.addr, align 4
  store i32 %148, i32* %have, align 4
  br label %if.end.189

if.end.189:                                       ; preds = %if.then.188, %if.then.184
  br label %do.body.190

do.body.190:                                      ; preds = %if.end.189
  br label %do.end.191

do.end.191:                                       ; preds = %do.body.190
  %149 = load i32, i32* %have, align 4
  %150 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slweight192 = getelementptr inbounds %struct.canvas, %struct.canvas* %150, i32 0, i32 7
  %151 = load i32, i32* %c_slweight192, align 4
  %sub193 = sub nsw i32 %151, %149
  store i32 %sub193, i32* %c_slweight192, align 4
  %152 = load i32, i32* %have, align 4
  %153 = load i32, i32* %done, align 4
  %add194 = add nsw i32 %153, %152
  store i32 %add194, i32* %done, align 4
  %154 = load i32, i32* %have, align 4
  %155 = load i32, i32* %diff.addr, align 4
  %sub195 = sub nsw i32 %155, %154
  store i32 %sub195, i32* %diff.addr, align 4
  br label %if.end.196

if.end.196:                                       ; preds = %do.end.191, %do.end.181
  br label %for.inc.197

for.inc.197:                                      ; preds = %if.end.196, %if.end.166
  %156 = load i32, i32* %dir, align 4
  %cmp198 = icmp sgt i32 %156, 0
  br i1 %cmp198, label %cond.true.199, label %cond.false.201

cond.true.199:                                    ; preds = %for.inc.197
  %157 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slnext200 = getelementptr inbounds %struct.canvas, %struct.canvas* %157, i32 0, i32 2
  %158 = load %struct.canvas*, %struct.canvas** %c_slnext200, align 8
  br label %cond.end.203

cond.false.201:                                   ; preds = %for.inc.197
  %159 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slprev202 = getelementptr inbounds %struct.canvas, %struct.canvas* %159, i32 0, i32 3
  %160 = load %struct.canvas*, %struct.canvas** %c_slprev202, align 8
  br label %cond.end.203

cond.end.203:                                     ; preds = %cond.false.201, %cond.true.199
  %cond204 = phi %struct.canvas* [ %158, %cond.true.199 ], [ %160, %cond.false.201 ]
  store %struct.canvas* %cond204, %struct.canvas** %cv, align 8
  br label %for.cond.157

for.end.205:                                      ; preds = %if.then.165, %for.cond.157
  %161 = load i32, i32* %diff.addr, align 4
  %tobool206 = icmp ne i32 %161, 0
  br i1 %tobool206, label %land.lhs.true.207, label %if.end.222

land.lhs.true.207:                                ; preds = %for.end.205
  %162 = load i32, i32* %gflag.addr, align 4
  %tobool208 = icmp ne i32 %162, 0
  br i1 %tobool208, label %if.then.209, label %if.end.222

if.then.209:                                      ; preds = %land.lhs.true.207
  %163 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback210 = getelementptr inbounds %struct.canvas, %struct.canvas* %163, i32 0, i32 5
  %164 = load %struct.canvas*, %struct.canvas** %c_slback210, align 8
  %c_slback211 = getelementptr inbounds %struct.canvas, %struct.canvas* %164, i32 0, i32 5
  %165 = load %struct.canvas*, %struct.canvas** %c_slback211, align 8
  store %struct.canvas* %165, %struct.canvas** %cv, align 8
  %166 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %tobool212 = icmp ne %struct.canvas* %166, null
  br i1 %tobool212, label %land.lhs.true.213, label %if.end.221

land.lhs.true.213:                                ; preds = %if.then.209
  %167 = load %struct.canvas*, %struct.canvas** %cv, align 8
  %c_slback214 = getelementptr inbounds %struct.canvas, %struct.canvas* %167, i32 0, i32 5
  %168 = load %struct.canvas*, %struct.canvas** %c_slback214, align 8
  %tobool215 = icmp ne %struct.canvas* %168, null
  br i1 %tobool215, label %if.then.216, label %if.end.221

if.then.216:                                      ; preds = %land.lhs.true.213
  %169 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slback217 = getelementptr inbounds %struct.canvas, %struct.canvas* %169, i32 0, i32 5
  %170 = load %struct.canvas*, %struct.canvas** %c_slback217, align 8
  %c_slback218 = getelementptr inbounds %struct.canvas, %struct.canvas* %170, i32 0, i32 5
  %171 = load %struct.canvas*, %struct.canvas** %c_slback218, align 8
  %172 = load i32, i32* %diff.addr, align 4
  %173 = load i32, i32* %gflag.addr, align 4
  %174 = load i32, i32* %percent.addr, align 4
  %call219 = call i32 @ChangeCanvasSize(%struct.canvas* %171, i32 0, i32 %172, i32 %173, i32 %174)
  %175 = load i32, i32* %done, align 4
  %add220 = add nsw i32 %175, %call219
  store i32 %add220, i32* %done, align 4
  br label %if.end.221

if.end.221:                                       ; preds = %if.then.216, %land.lhs.true.213, %if.then.209
  br label %if.end.222

if.end.222:                                       ; preds = %if.end.221, %land.lhs.true.207, %for.end.205
  %176 = load i32, i32* %done, align 4
  %177 = load %struct.canvas*, %struct.canvas** %fcv.addr, align 8
  %c_slweight223 = getelementptr inbounds %struct.canvas, %struct.canvas* %177, i32 0, i32 7
  %178 = load i32, i32* %c_slweight223, align 4
  %add224 = add nsw i32 %178, %176
  store i32 %add224, i32* %c_slweight223, align 4
  br label %do.body.225

do.body.225:                                      ; preds = %if.end.222
  br label %do.end.226

do.end.226:                                       ; preds = %do.body.225
  %179 = load i32, i32* %done, align 4
  store i32 %179, i32* %retval
  br label %return

return:                                           ; preds = %do.end.226, %cond.end.149, %if.then.140, %if.then.104, %if.end.18, %if.then
  %180 = load i32, i32* %retval
  ret i32 %180
}

; Function Attrs: nounwind uwtable
define internal i32 @CalcSlicePercent(%struct.canvas* %cv, i32 %percent) #0 {
entry:
  %retval = alloca i32, align 4
  %cv.addr = alloca %struct.canvas*, align 8
  %percent.addr = alloca i32, align 4
  %w = alloca i32, align 4
  %wsum = alloca i32, align 4
  %up = alloca i32, align 4
  store %struct.canvas* %cv, %struct.canvas** %cv.addr, align 8
  store i32 %percent, i32* %percent.addr, align 4
  %0 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %tobool = icmp ne %struct.canvas* %0, null
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %c_slback = getelementptr inbounds %struct.canvas, %struct.canvas* %1, i32 0, i32 5
  %2 = load %struct.canvas*, %struct.canvas** %c_slback, align 8
  %tobool1 = icmp ne %struct.canvas* %2, null
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i32, i32* %percent.addr, align 4
  store i32 %3, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %c_slback2 = getelementptr inbounds %struct.canvas, %struct.canvas* %4, i32 0, i32 5
  %5 = load %struct.canvas*, %struct.canvas** %c_slback2, align 8
  %c_slback3 = getelementptr inbounds %struct.canvas, %struct.canvas* %5, i32 0, i32 5
  %6 = load %struct.canvas*, %struct.canvas** %c_slback3, align 8
  %7 = load i32, i32* %percent.addr, align 4
  %call = call i32 @CalcSlicePercent(%struct.canvas* %6, i32 %7)
  store i32 %call, i32* %up, align 4
  %8 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %c_slweight = getelementptr inbounds %struct.canvas, %struct.canvas* %8, i32 0, i32 7
  %9 = load i32, i32* %c_slweight, align 4
  store i32 %9, i32* %w, align 4
  %10 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %c_slback4 = getelementptr inbounds %struct.canvas, %struct.canvas* %10, i32 0, i32 5
  %11 = load %struct.canvas*, %struct.canvas** %c_slback4, align 8
  %c_slperp = getelementptr inbounds %struct.canvas, %struct.canvas* %11, i32 0, i32 4
  %12 = load %struct.canvas*, %struct.canvas** %c_slperp, align 8
  store %struct.canvas* %12, %struct.canvas** %cv.addr, align 8
  store i32 0, i32* %wsum, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %tobool5 = icmp ne %struct.canvas* %13, null
  br i1 %tobool5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %c_slweight6 = getelementptr inbounds %struct.canvas, %struct.canvas* %14, i32 0, i32 7
  %15 = load i32, i32* %c_slweight6, align 4
  %16 = load i32, i32* %wsum, align 4
  %add = add nsw i32 %16, %15
  store i32 %add, i32* %wsum, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load %struct.canvas*, %struct.canvas** %cv.addr, align 8
  %c_slnext = getelementptr inbounds %struct.canvas, %struct.canvas* %17, i32 0, i32 2
  %18 = load %struct.canvas*, %struct.canvas** %c_slnext, align 8
  store %struct.canvas* %18, %struct.canvas** %cv.addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %wsum, align 4
  %cmp = icmp eq i32 %19, 0
  br i1 %cmp, label %if.then.7, label %if.end.8

if.then.7:                                        ; preds = %for.end
  store i32 0, i32* %retval
  br label %return

if.end.8:                                         ; preds = %for.end
  %20 = load i32, i32* %up, align 4
  %21 = load i32, i32* %w, align 4
  %mul = mul nsw i32 %20, %21
  %22 = load i32, i32* %wsum, align 4
  %div = sdiv i32 %mul, %22
  store i32 %div, i32* %retval
  br label %return

return:                                           ; preds = %if.end.8, %if.then.7, %if.then
  %23 = load i32, i32* %retval
  ret i32 %23
}

declare i32 @CountCanvasPerp(%struct.canvas*) #2

declare void @inp_setprompt(i8*, i8*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
