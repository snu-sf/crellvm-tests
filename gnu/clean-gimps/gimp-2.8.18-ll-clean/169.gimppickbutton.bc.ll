; ModuleID = './libgimpwidgets/gimppickbutton.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._GTypeInstance = type { %struct._GTypeClass* }
%struct._GTypeClass = type { i64 }
%struct._GimpPickButtonClass = type { %struct._GtkButtonClass, void (%struct._GimpPickButton*, %struct._GimpRGB*)*, void ()*, void ()*, void ()*, void ()* }
%struct._GtkButtonClass = type { %struct._GtkBinClass, void (%struct._GtkButton*)*, void (%struct._GtkButton*)*, void (%struct._GtkButton*)*, void (%struct._GtkButton*)*, void (%struct._GtkButton*)*, void (%struct._GtkButton*)*, void ()*, void ()*, void ()*, void ()* }
%struct._GtkBinClass = type { %struct._GtkContainerClass }
%struct._GtkContainerClass = type { %struct._GtkWidgetClass, void (%struct._GtkContainer*, %struct._GtkWidget*)*, void (%struct._GtkContainer*, %struct._GtkWidget*)*, void (%struct._GtkContainer*)*, void (%struct._GtkContainer*, i32, void (%struct._GtkWidget*, i8*)*, i8*)*, void (%struct._GtkContainer*, %struct._GtkWidget*)*, i64 (%struct._GtkContainer*)*, i8* (%struct._GtkContainer*, %struct._GtkWidget*)*, void (%struct._GtkContainer*, %struct._GtkWidget*, i32, %struct._GValue*, %struct._GParamSpec*)*, void (%struct._GtkContainer*, %struct._GtkWidget*, i32, %struct._GValue*, %struct._GParamSpec*)*, void ()*, void ()*, void ()*, void ()* }
%struct._GtkWidgetClass = type { %struct._GtkObjectClass, i32, i32, void (%struct._GtkWidget*, i32, %struct._GParamSpec**)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*)*, void (%struct._GtkWidget*, %struct._GtkRequisition*)*, void (%struct._GtkWidget*, %struct._GdkRectangle*)*, void (%struct._GtkWidget*, i32)*, void (%struct._GtkWidget*, %struct._GtkWidget*)*, void (%struct._GtkWidget*, %struct._GtkWidget*)*, void (%struct._GtkWidget*, %struct._GtkStyle*)*, void (%struct._GtkWidget*, i32)*, void (%struct._GtkWidget*, i32)*, void (%struct._GtkWidget*, %struct._GParamSpec*)*, i32 (%struct._GtkWidget*, i32)*, void (%struct._GtkWidget*)*, i32 (%struct._GtkWidget*, i32)*, i32 (%struct._GtkWidget*, %union._GdkEvent*)*, i32 (%struct._GtkWidget*, %struct._GdkEventButton*)*, i32 (%struct._GtkWidget*, %struct._GdkEventButton*)*, i32 (%struct._GtkWidget*, %struct._GdkEventScroll*)*, i32 (%struct._GtkWidget*, %struct._GdkEventMotion*)*, i32 (%struct._GtkWidget*, %struct._GdkEventAny*)*, i32 (%struct._GtkWidget*, %struct._GdkEventAny*)*, i32 (%struct._GtkWidget*, %struct._GdkEventExpose*)*, i32 (%struct._GtkWidget*, %struct._GdkEventKey*)*, i32 (%struct._GtkWidget*, %struct._GdkEventKey*)*, i32 (%struct._GtkWidget*, %struct._GdkEventCrossing*)*, i32 (%struct._GtkWidget*, %struct._GdkEventCrossing*)*, i32 (%struct._GtkWidget*, %struct._GdkEventConfigure*)*, i32 (%struct._GtkWidget*, %struct._GdkEventFocus*)*, i32 (%struct._GtkWidget*, %struct._GdkEventFocus*)*, i32 (%struct._GtkWidget*, %struct._GdkEventAny*)*, i32 (%struct._GtkWidget*, %struct._GdkEventAny*)*, i32 (%struct._GtkWidget*, %struct._GdkEventProperty*)*, i32 (%struct._GtkWidget*, %struct._GdkEventSelection*)*, i32 (%struct._GtkWidget*, %struct._GdkEventSelection*)*, i32 (%struct._GtkWidget*, %struct._GdkEventSelection*)*, i32 (%struct._GtkWidget*, %struct._GdkEventProximity*)*, i32 (%struct._GtkWidget*, %struct._GdkEventProximity*)*, i32 (%struct._GtkWidget*, %struct._GdkEventVisibility*)*, i32 (%struct._GtkWidget*, %struct._GdkEventClient*)*, i32 (%struct._GtkWidget*, %struct._GdkEventAny*)*, i32 (%struct._GtkWidget*, %struct._GdkEventWindowState*)*, void (%struct._GtkWidget*, %struct._GtkSelectionData*, i32, i32)*, void (%struct._GtkWidget*, %struct._GtkSelectionData*, i32)*, void (%struct._GtkWidget*, %struct._GdkDragContext*)*, void (%struct._GtkWidget*, %struct._GdkDragContext*)*, void (%struct._GtkWidget*, %struct._GdkDragContext*, %struct._GtkSelectionData*, i32, i32)*, void (%struct._GtkWidget*, %struct._GdkDragContext*)*, void (%struct._GtkWidget*, %struct._GdkDragContext*, i32)*, i32 (%struct._GtkWidget*, %struct._GdkDragContext*, i32, i32, i32)*, i32 (%struct._GtkWidget*, %struct._GdkDragContext*, i32, i32, i32)*, void (%struct._GtkWidget*, %struct._GdkDragContext*, i32, i32, %struct._GtkSelectionData*, i32, i32)*, i32 (%struct._GtkWidget*)*, i32 (%struct._GtkWidget*, i32)*, %struct._AtkObject* (%struct._GtkWidget*)*, void (%struct._GtkWidget*, %struct._GdkScreen*)*, i32 (%struct._GtkWidget*, i32)*, i32 (%struct._GtkWidget*, %struct._GdkEventGrabBroken*)*, void (%struct._GtkWidget*)*, i32 (%struct._GtkWidget*, i32, i32, i32, %struct._GtkTooltip*)*, void ()*, void ()*, void ()* }
%struct._GtkObjectClass = type { %struct._GObjectClass, void (%struct._GtkObject*, %struct._GtkArg*, i32)*, void (%struct._GtkObject*, %struct._GtkArg*, i32)*, void (%struct._GtkObject*)* }
%struct._GObjectClass = type { %struct._GTypeClass, %struct._GSList*, %struct._GObject* (i64, i32, %struct._GObjectConstructParam*)*, void (%struct._GObject*, i32, %struct._GValue*, %struct._GParamSpec*)*, void (%struct._GObject*, i32, %struct._GValue*, %struct._GParamSpec*)*, void (%struct._GObject*)*, void (%struct._GObject*)*, void (%struct._GObject*, i32, %struct._GParamSpec**)*, void (%struct._GObject*, %struct._GParamSpec*)*, void (%struct._GObject*)*, i64, [6 x i8*] }
%struct._GSList = type { i8*, %struct._GSList* }
%struct._GObject = type { %struct._GTypeInstance, i32, %struct._GData* }
%struct._GData = type opaque
%struct._GObjectConstructParam = type { %struct._GParamSpec*, %struct._GValue* }
%struct._GParamSpec = type { %struct._GTypeInstance, i8*, i32, i64, i64, i8*, i8*, %struct._GData*, i32, i32 }
%struct._GValue = type { i64, [2 x %union.anon] }
%union.anon = type { i64 }
%struct._GtkObject = type { %struct._GObject, i32 }
%struct._GtkArg = type opaque
%struct._GtkWidget = type { %struct._GtkObject, i16, i8, i8, i8*, %struct._GtkStyle*, %struct._GtkRequisition, %struct._GdkRectangle, %struct._GdkDrawable*, %struct._GtkWidget* }
%struct._GtkStyle = type { %struct._GObject, [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], %struct._GdkColor, %struct._GdkColor, %struct._PangoFontDescription*, i32, i32, [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], [5 x %struct._GdkGC*], %struct._GdkGC*, %struct._GdkGC*, [5 x %struct._GdkDrawable*], i32, i32, %struct._GdkColormap*, %struct._GdkFont*, %struct._PangoFontDescription*, %struct._GtkRcStyle*, %struct._GSList*, %struct._GArray*, %struct._GSList* }
%struct._GdkColor = type { i32, i16, i16, i16 }
%struct._GdkGC = type { %struct._GObject, i32, i32, i32, i32, %struct._GdkColormap* }
%struct._GdkColormap = type { %struct._GObject, i32, %struct._GdkColor*, %struct._GdkVisual*, i8* }
%struct._GdkVisual = type { %struct._GObject, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._GdkFont = type opaque
%struct._PangoFontDescription = type opaque
%struct._GtkRcStyle = type { %struct._GObject, i8*, [5 x i8*], %struct._PangoFontDescription*, [5 x i32], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], [5 x %struct._GdkColor], i32, i32, %struct._GArray*, %struct._GSList*, %struct._GSList*, i8 }
%struct._GArray = type { i8*, i32 }
%struct._GtkRequisition = type { i32, i32 }
%struct._GdkRectangle = type { i32, i32, i32, i32 }
%struct._GdkDrawable = type { %struct._GObject }
%union._GdkEvent = type { %struct._GdkEventCrossing }
%struct._GdkEventCrossing = type { i32, %struct._GdkDrawable*, i8, %struct._GdkDrawable*, i32, double, double, double, double, i32, i32, i32, i32 }
%struct._GdkEventButton = type { i32, %struct._GdkDrawable*, i8, i32, double, double, double*, i32, i32, %struct._GdkDevice*, double, double }
%struct._GdkDevice = type { %struct._GObject, i8*, i32, i32, i32, i32, %struct._GdkDeviceAxis*, i32, %struct._GdkDeviceKey* }
%struct._GdkDeviceAxis = type { i32, double, double }
%struct._GdkDeviceKey = type { i32, i32 }
%struct._GdkEventScroll = type { i32, %struct._GdkDrawable*, i8, i32, double, double, i32, i32, %struct._GdkDevice*, double, double }
%struct._GdkEventMotion = type { i32, %struct._GdkDrawable*, i8, i32, double, double, double*, i32, i16, %struct._GdkDevice*, double, double }
%struct._GdkEventExpose = type { i32, %struct._GdkDrawable*, i8, %struct._GdkRectangle, %struct._GdkRegion*, i32 }
%struct._GdkRegion = type opaque
%struct._GdkEventKey = type { i32, %struct._GdkDrawable*, i8, i32, i32, i32, i32, i8*, i16, i8, i8 }
%struct._GdkEventConfigure = type { i32, %struct._GdkDrawable*, i8, i32, i32, i32, i32 }
%struct._GdkEventFocus = type { i32, %struct._GdkDrawable*, i8, i16 }
%struct._GdkEventProperty = type { i32, %struct._GdkDrawable*, i8, %struct._GdkAtom*, i32, i32 }
%struct._GdkAtom = type opaque
%struct._GdkEventSelection = type { i32, %struct._GdkDrawable*, i8, %struct._GdkAtom*, %struct._GdkAtom*, %struct._GdkAtom*, i32, i32 }
%struct._GdkEventProximity = type { i32, %struct._GdkDrawable*, i8, i32, %struct._GdkDevice* }
%struct._GdkEventVisibility = type { i32, %struct._GdkDrawable*, i8, i32 }
%struct._GdkEventClient = type { i32, %struct._GdkDrawable*, i8, %struct._GdkAtom*, i16, %union.anon.0 }
%union.anon.0 = type { [5 x i64] }
%struct._GdkEventAny = type { i32, %struct._GdkDrawable*, i8 }
%struct._GdkEventWindowState = type { i32, %struct._GdkDrawable*, i8, i32, i32 }
%struct._GtkSelectionData = type { %struct._GdkAtom*, %struct._GdkAtom*, %struct._GdkAtom*, i32, i8*, i32, %struct._GdkDisplay* }
%struct._GdkDisplay = type { %struct._GObject, %struct._GList*, %struct._GList*, [2 x i32], [2 x %struct._GdkDrawable*], [2 x i32], i32, %struct._GdkDevice*, %struct._GdkDisplayPointerHooks*, i8, i32, [2 x i32], [2 x i32], %struct._GList*, %struct.GdkKeyboardGrabInfo, %struct.GdkPointerWindowInfo, i32 }
%struct._GdkDisplayPointerHooks = type { void (%struct._GdkDisplay*, %struct._GdkScreen**, i32*, i32*, i32*)*, %struct._GdkDrawable* (%struct._GdkDisplay*, %struct._GdkDrawable*, i32*, i32*, i32*)*, %struct._GdkDrawable* (%struct._GdkDisplay*, i32*, i32*)* }
%struct._GdkScreen = type { %struct._GObject, i8, [32 x %struct._GdkGC*], [32 x %struct._GdkGC*], [32 x %struct._GdkGC*], %struct._cairo_font_options*, double }
%struct._cairo_font_options = type opaque
%struct._GList = type { i8*, %struct._GList*, %struct._GList* }
%struct.GdkKeyboardGrabInfo = type { %struct._GdkDrawable*, %struct._GdkDrawable*, i64, i32, i32 }
%struct.GdkPointerWindowInfo = type { %struct._GdkDrawable*, %struct._GdkDrawable*, double, double, i32, i32, i64 }
%struct._GdkDragContext = type { %struct._GObject, i32, i32, %struct._GdkDrawable*, %struct._GdkDrawable*, %struct._GList*, i32, i32, i32, i32, i8* }
%struct._AtkObject = type { %struct._GObject, i8*, i8*, %struct._AtkObject*, i32, %struct._AtkRelationSet*, i32 }
%struct._AtkRelationSet = type { %struct._GObject, %struct._GPtrArray* }
%struct._GPtrArray = type { i8**, i32 }
%struct._GdkEventGrabBroken = type { i32, %struct._GdkDrawable*, i8, i32, i32, %struct._GdkDrawable* }
%struct._GtkTooltip = type opaque
%struct._GtkContainer = type { %struct._GtkWidget, %struct._GtkWidget*, i24 }
%struct._GtkButton = type { %struct._GtkBin, %struct._GdkDrawable*, i8*, i32, i16 }
%struct._GtkBin = type { %struct._GtkContainer, %struct._GtkWidget* }
%struct._GimpPickButton = type { %struct._GtkButton, %struct._GdkCursor*, %struct._GtkWidget* }
%struct._GdkCursor = type { i32, i32 }
%struct._GimpRGB = type { double, double, double, double }
%struct._GSignalInvocationHint = type { i32, i32, i32 }
%struct._GClosure = type { i32, {}*, i8*, %struct._GClosureNotifyData* }
%struct._GClosureNotifyData = type { i8*, void (i8*, %struct._GClosure*)* }
%struct._GdkPixbuf = type opaque
%struct._GError = type { i32, i32, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._cairo_surface = type opaque
%struct._cairo = type opaque

@gimp_pick_button_get_type.g_define_type_id__volatile = internal global i64 0, align 8
@.str = private unnamed_addr constant [15 x i8] c"GimpPickButton\00", align 1
@gimp_pick_button_parent_class = internal global i8* null, align 8
@GimpPickButton_private_offset = internal global i32 0, align 4
@.str.1 = private unnamed_addr constant [13 x i8] c"color-picked\00", align 1
@pick_button_signals = internal global [1 x i32] zeroinitializer, align 4
@.str.2 = private unnamed_addr constant [41 x i8] c"Failed to grab keyboard to do eyedropper\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"Failed to grab pointer to do eyedropper\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"button-press-event\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"key-press-event\00", align 1
@make_cursor.data = internal global i8* null, align 8
@cursor_color_picker = internal constant [4121 x i8] c"Gdk{{{\FFkkk\FF\00\00\00\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF\00\00\00\FFnnn\FF000\FF\93\93\93\FFSSS\FFPPP\FF\00\00\00\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1D\00\00\00\FFMMM\FF\91\91\91\FF\8E\8E\8E\FF\00\00\00\FF\00\00\00\FF\00\00\00\1D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1D\00\00\00\FF\FD\FD\FD\FF\00\00\00\FFiii\FFiiialign 4
@cursor_color_picker_bw = internal constant [4121 x i8] c"Gdkalign 4
@.str.6 = private unnamed_addr constant [15 x i8] c"LibGimpWidgets\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"motion-notify-event\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"button-release-event\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"gimp-color-pick-from-screen\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"gimp20-libgimp\00", align 1
@.str.11 = private unnamed_addr constant [87 x i8] c"Click the eyedropper, then click a color anywhere on your screen to select that color.\00", align 1

; Function Attrs: nounwind readnone uwtable
define i64 @gimp_pick_button_get_type() #0 {
entry:
  %tmp = alloca i32, align 4
  %tmp1 = alloca i8*, align 8
  %g_define_type_id = alloca i64, align 8
  fence seq_cst
  %0 = load volatile i64, i64* @gimp_pick_button_get_type.g_define_type_id__volatile, align 8
  %1 = inttoptr i64 %0 to i8*
  store i8* %1, i8** %tmp1
  %2 = load i8*, i8** %tmp1
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %call = call i32 @g_once_init_enter(i8* bitcast (i64* @gimp_pick_button_get_type.g_define_type_id__volatile to i8*))
  %tobool2 = icmp ne i32 %call, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  store i32 %land.ext, i32* %tmp
  %4 = load i32, i32* %tmp
  %tobool3 = icmp ne i32 %4, 0
  br i1 %tobool3, label %if.then, label %if.end

if.then:                                          ; preds = %land.end
  %call5 = call i64 @gtk_button_get_type() #6
  %call6 = call i8* @g_intern_static_string(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0))
  %call7 = call i64 @g_type_register_static_simple(i64 %call5, i8* %call6, i32 944, void (i8*, i8*)* bitcast (void (i8*)* @gimp_pick_button_class_intern_init to void (i8*, i8*)*), i32 160, void (%struct._GTypeInstance*, i8*)* bitcast (void (%struct._GimpPickButton*)* @gimp_pick_button_init to void (%struct._GTypeInstance*, i8*)*), i32 0)
  store i64 %call7, i64* %g_define_type_id, align 8
  %5 = load i64, i64* %g_define_type_id, align 8
  call void @g_once_init_leave(i8* bitcast (i64* @gimp_pick_button_get_type.g_define_type_id__volatile to i8*), i64 %5)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.end
  %6 = load volatile i64, i64* @gimp_pick_button_get_type.g_define_type_id__volatile, align 8
  ret i64 %6
}

declare i32 @g_once_init_enter(i8*) #1

declare i64 @g_type_register_static_simple(i64, i8*, i32, void (i8*, i8*)*, i32, void (%struct._GTypeInstance*, i8*)*, i32) #1

; Function Attrs: nounwind readnone
declare i64 @gtk_button_get_type() #2

declare i8* @g_intern_static_string(i8*) #1

; Function Attrs: nounwind uwtable
define internal void @gimp_pick_button_class_intern_init(i8* %klass) #3 {
entry:
  %klass.addr = alloca i8*, align 8
  store i8* %klass, i8** %klass.addr, align 8
  %0 = load i8*, i8** %klass.addr, align 8
  %call = call i8* @g_type_class_peek_parent(i8* %0)
  store i8* %call, i8** @gimp_pick_button_parent_class, align 8
  %1 = load i32, i32* @GimpPickButton_private_offset, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %klass.addr, align 8
  call void @g_type_class_adjust_private_offset(i8* %2, i32* @GimpPickButton_private_offset)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %klass.addr, align 8
  %4 = bitcast i8* %3 to %struct._GimpPickButtonClass*
  call void @gimp_pick_button_class_init(%struct._GimpPickButtonClass* %4)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @gimp_pick_button_init(%struct._GimpPickButton* %button) #3 {
entry:
  %button.addr = alloca %struct._GimpPickButton*, align 8
  %image = alloca %struct._GtkWidget*, align 8
  store %struct._GimpPickButton* %button, %struct._GimpPickButton** %button.addr, align 8
  %call = call %struct._GtkWidget* @gtk_image_new_from_stock(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i32 0, i32 0), i32 4)
  store %struct._GtkWidget* %call, %struct._GtkWidget** %image, align 8
  %0 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %1 = bitcast %struct._GimpPickButton* %0 to %struct._GTypeInstance*
  %call1 = call i64 @gtk_container_get_type() #6
  %call2 = call %struct._GTypeInstance* @g_type_check_instance_cast(%struct._GTypeInstance* %1, i64 %call1)
  %2 = bitcast %struct._GTypeInstance* %call2 to %struct._GtkContainer*
  %3 = load %struct._GtkWidget*, %struct._GtkWidget** %image, align 8
  call void @gtk_container_add(%struct._GtkContainer* %2, %struct._GtkWidget* %3)
  %4 = load %struct._GtkWidget*, %struct._GtkWidget** %image, align 8
  call void @gtk_widget_show(%struct._GtkWidget* %4)
  %5 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %6 = bitcast %struct._GimpPickButton* %5 to %struct._GTypeInstance*
  %call3 = call i64 @gtk_widget_get_type() #6
  %call4 = call %struct._GTypeInstance* @g_type_check_instance_cast(%struct._GTypeInstance* %6, i64 %call3)
  %7 = bitcast %struct._GTypeInstance* %call4 to %struct._GtkWidget*
  %call5 = call i8* @dgettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.11, i32 0, i32 0)) #4
  call void @gimp_help_set_help_data(%struct._GtkWidget* %7, i8* %call5, i8* null)
  ret void
}

declare void @g_once_init_leave(i8*, i64) #1

; Function Attrs: nounwind uwtable
define %struct._GtkWidget* @gimp_pick_button_new() #3 {
entry:
  %call = call i64 @gimp_pick_button_get_type() #6
  %call1 = call i8* (i64, i8*, ...) @g_object_new(i64 %call, i8* null)
  %0 = bitcast i8* %call1 to %struct._GtkWidget*
  ret %struct._GtkWidget* %0
}

declare i8* @g_object_new(i64, i8*, ...) #1

declare i8* @g_type_class_peek_parent(i8*) #1

declare void @g_type_class_adjust_private_offset(i8*, i32*) #1

; Function Attrs: nounwind uwtable
define internal void @gimp_pick_button_class_init(%struct._GimpPickButtonClass* %klass) #3 {
entry:
  %klass.addr = alloca %struct._GimpPickButtonClass*, align 8
  %object_class = alloca %struct._GObjectClass*, align 8
  %button_class = alloca %struct._GtkButtonClass*, align 8
  store %struct._GimpPickButtonClass* %klass, %struct._GimpPickButtonClass** %klass.addr, align 8
  %0 = load %struct._GimpPickButtonClass*, %struct._GimpPickButtonClass** %klass.addr, align 8
  %1 = bitcast %struct._GimpPickButtonClass* %0 to %struct._GTypeClass*
  %call = call %struct._GTypeClass* @g_type_check_class_cast(%struct._GTypeClass* %1, i64 80)
  %2 = bitcast %struct._GTypeClass* %call to %struct._GObjectClass*
  store %struct._GObjectClass* %2, %struct._GObjectClass** %object_class, align 8
  %3 = load %struct._GimpPickButtonClass*, %struct._GimpPickButtonClass** %klass.addr, align 8
  %4 = bitcast %struct._GimpPickButtonClass* %3 to %struct._GTypeClass*
  %call1 = call i64 @gtk_button_get_type() #6
  %call2 = call %struct._GTypeClass* @g_type_check_class_cast(%struct._GTypeClass* %4, i64 %call1)
  %5 = bitcast %struct._GTypeClass* %call2 to %struct._GtkButtonClass*
  store %struct._GtkButtonClass* %5, %struct._GtkButtonClass** %button_class, align 8
  %6 = load %struct._GimpPickButtonClass*, %struct._GimpPickButtonClass** %klass.addr, align 8
  %7 = bitcast %struct._GimpPickButtonClass* %6 to %struct._GTypeClass*
  %g_type = getelementptr inbounds %struct._GTypeClass, %struct._GTypeClass* %7, i32 0, i32 0
  %8 = load i64, i64* %g_type, align 8
  %call3 = call i32 (i8*, i64, i32, i32, i32 (%struct._GSignalInvocationHint*, %struct._GValue*, %struct._GValue*, i8*)*, i8*, void (%struct._GClosure*, %struct._GValue*, i32, %struct._GValue*, i8*, i8*)*, i64, i32, ...) @g_signal_new(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0), i64 %8, i32 1, i32 904, i32 (%struct._GSignalInvocationHint*, %struct._GValue*, %struct._GValue*, i8*)* null, i8* null, void (%struct._GClosure*, %struct._GValue*, i32, %struct._GValue*, i8*, i8*)* @g_cclosure_marshal_VOID__POINTER, i64 4, i32 1, i64 68)
  store i32 %call3, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @pick_button_signals, i32 0, i64 0), align 4
  %9 = load %struct._GObjectClass*, %struct._GObjectClass** %object_class, align 8
  %dispose = getelementptr inbounds %struct._GObjectClass, %struct._GObjectClass* %9, i32 0, i32 5
  store void (%struct._GObject*)* @gimp_pick_button_dispose, void (%struct._GObject*)** %dispose, align 8
  %10 = load %struct._GtkButtonClass*, %struct._GtkButtonClass** %button_class, align 8
  %clicked = getelementptr inbounds %struct._GtkButtonClass, %struct._GtkButtonClass* %10, i32 0, i32 3
  store void (%struct._GtkButton*)* @gimp_pick_button_clicked, void (%struct._GtkButton*)** %clicked, align 8
  %11 = load %struct._GimpPickButtonClass*, %struct._GimpPickButtonClass** %klass.addr, align 8
  %color_picked = getelementptr inbounds %struct._GimpPickButtonClass, %struct._GimpPickButtonClass* %11, i32 0, i32 1
  store void (%struct._GimpPickButton*, %struct._GimpRGB*)* null, void (%struct._GimpPickButton*, %struct._GimpRGB*)** %color_picked, align 8
  ret void
}

declare %struct._GTypeClass* @g_type_check_class_cast(%struct._GTypeClass*, i64) #1

declare i32 @g_signal_new(i8*, i64, i32, i32, i32 (%struct._GSignalInvocationHint*, %struct._GValue*, %struct._GValue*, i8*)*, i8*, void (%struct._GClosure*, %struct._GValue*, i32, %struct._GValue*, i8*, i8*)*, i64, i32, ...) #1

declare void @g_cclosure_marshal_VOID__POINTER(%struct._GClosure*, %struct._GValue*, i32, %struct._GValue*, i8*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @gimp_pick_button_dispose(%struct._GObject* %object) #3 {
entry:
  %object.addr = alloca %struct._GObject*, align 8
  %button = alloca %struct._GimpPickButton*, align 8
  store %struct._GObject* %object, %struct._GObject** %object.addr, align 8
  %0 = load %struct._GObject*, %struct._GObject** %object.addr, align 8
  %1 = bitcast %struct._GObject* %0 to %struct._GTypeInstance*
  %call = call i64 @gimp_pick_button_get_type() #6
  %call1 = call %struct._GTypeInstance* @g_type_check_instance_cast(%struct._GTypeInstance* %1, i64 %call)
  %2 = bitcast %struct._GTypeInstance* %call1 to %struct._GimpPickButton*
  store %struct._GimpPickButton* %2, %struct._GimpPickButton** %button, align 8
  %3 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %cursor = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %3, i32 0, i32 1
  %4 = load %struct._GdkCursor*, %struct._GdkCursor** %cursor, align 8
  %tobool = icmp ne %struct._GdkCursor* %4, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %cursor2 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %5, i32 0, i32 1
  %6 = load %struct._GdkCursor*, %struct._GdkCursor** %cursor2, align 8
  call void @gdk_cursor_unref(%struct._GdkCursor* %6)
  %7 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %cursor3 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %7, i32 0, i32 1
  store %struct._GdkCursor* null, %struct._GdkCursor** %cursor3, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %8, i32 0, i32 2
  %9 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget, align 8
  %tobool4 = icmp ne %struct._GtkWidget* %9, null
  br i1 %tobool4, label %if.then.5, label %if.end.8

if.then.5:                                        ; preds = %if.end
  %10 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget6 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %10, i32 0, i32 2
  %11 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget6, align 8
  call void @gtk_widget_destroy(%struct._GtkWidget* %11)
  %12 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget7 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %12, i32 0, i32 2
  store %struct._GtkWidget* null, %struct._GtkWidget** %grab_widget7, align 8
  br label %if.end.8

if.end.8:                                         ; preds = %if.then.5, %if.end
  %13 = load i8*, i8** @gimp_pick_button_parent_class, align 8
  %14 = bitcast i8* %13 to %struct._GTypeClass*
  %call9 = call %struct._GTypeClass* @g_type_check_class_cast(%struct._GTypeClass* %14, i64 80)
  %15 = bitcast %struct._GTypeClass* %call9 to %struct._GObjectClass*
  %dispose = getelementptr inbounds %struct._GObjectClass, %struct._GObjectClass* %15, i32 0, i32 5
  %16 = load void (%struct._GObject*)*, void (%struct._GObject*)** %dispose, align 8
  %17 = load %struct._GObject*, %struct._GObject** %object.addr, align 8
  call void %16(%struct._GObject* %17)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @gimp_pick_button_clicked(%struct._GtkButton* %gtk_button) #3 {
entry:
  %gtk_button.addr = alloca %struct._GtkButton*, align 8
  %button = alloca %struct._GimpPickButton*, align 8
  %widget = alloca %struct._GtkWidget*, align 8
  %timestamp = alloca i32, align 4
  store %struct._GtkButton* %gtk_button, %struct._GtkButton** %gtk_button.addr, align 8
  %0 = load %struct._GtkButton*, %struct._GtkButton** %gtk_button.addr, align 8
  %1 = bitcast %struct._GtkButton* %0 to %struct._GTypeInstance*
  %call = call i64 @gimp_pick_button_get_type() #6
  %call1 = call %struct._GTypeInstance* @g_type_check_instance_cast(%struct._GTypeInstance* %1, i64 %call)
  %2 = bitcast %struct._GTypeInstance* %call1 to %struct._GimpPickButton*
  store %struct._GimpPickButton* %2, %struct._GimpPickButton** %button, align 8
  %3 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %cursor = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %3, i32 0, i32 1
  %4 = load %struct._GdkCursor*, %struct._GdkCursor** %cursor, align 8
  %tobool = icmp ne %struct._GdkCursor* %4, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %5 = load %struct._GtkButton*, %struct._GtkButton** %gtk_button.addr, align 8
  %6 = bitcast %struct._GtkButton* %5 to %struct._GTypeInstance*
  %call2 = call i64 @gtk_widget_get_type() #6
  %call3 = call %struct._GTypeInstance* @g_type_check_instance_cast(%struct._GTypeInstance* %6, i64 %call2)
  %7 = bitcast %struct._GTypeInstance* %call3 to %struct._GtkWidget*
  %call4 = call %struct._GdkDisplay* @gtk_widget_get_display(%struct._GtkWidget* %7)
  %call5 = call %struct._GdkCursor* @make_cursor(%struct._GdkDisplay* %call4)
  %8 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %cursor6 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %8, i32 0, i32 1
  store %struct._GdkCursor* %call5, %struct._GdkCursor** %cursor6, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %9, i32 0, i32 2
  %10 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget, align 8
  %tobool7 = icmp ne %struct._GtkWidget* %10, null
  br i1 %tobool7, label %if.end.13, label %if.then.8

if.then.8:                                        ; preds = %if.end
  %call9 = call %struct._GtkWidget* @gtk_invisible_new()
  %11 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget10 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %11, i32 0, i32 2
  store %struct._GtkWidget* %call9, %struct._GtkWidget** %grab_widget10, align 8
  %12 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget11 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %12, i32 0, i32 2
  %13 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget11, align 8
  call void @gtk_widget_add_events(%struct._GtkWidget* %13, i32 772)
  %14 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget12 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %14, i32 0, i32 2
  %15 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget12, align 8
  call void @gtk_widget_show(%struct._GtkWidget* %15)
  br label %if.end.13

if.end.13:                                        ; preds = %if.then.8, %if.end
  %16 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %grab_widget14 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %16, i32 0, i32 2
  %17 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget14, align 8
  store %struct._GtkWidget* %17, %struct._GtkWidget** %widget, align 8
  %call15 = call i32 @gtk_get_current_event_time()
  store i32 %call15, i32* %timestamp, align 4
  %18 = load %struct._GtkWidget*, %struct._GtkWidget** %widget, align 8
  %call16 = call %struct._GdkDrawable* @gtk_widget_get_window(%struct._GtkWidget* %18)
  %19 = load i32, i32* %timestamp, align 4
  %call17 = call i32 @gdk_keyboard_grab(%struct._GdkDrawable* %call16, i32 0, i32 %19)
  %cmp = icmp ne i32 %call17, 0
  br i1 %cmp, label %if.then.18, label %if.end.19

if.then.18:                                       ; preds = %if.end.13
  call void (i8*, ...) @g_warning(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i32 0, i32 0))
  br label %return

if.end.19:                                        ; preds = %if.end.13
  %20 = load %struct._GtkWidget*, %struct._GtkWidget** %widget, align 8
  %call20 = call %struct._GdkDrawable* @gtk_widget_get_window(%struct._GtkWidget* %20)
  %21 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %cursor21 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %21, i32 0, i32 1
  %22 = load %struct._GdkCursor*, %struct._GdkCursor** %cursor21, align 8
  %23 = load i32, i32* %timestamp, align 4
  %call22 = call i32 @gdk_pointer_grab(%struct._GdkDrawable* %call20, i32 0, i32 772, %struct._GdkDrawable* null, %struct._GdkCursor* %22, i32 %23)
  %cmp23 = icmp ne i32 %call22, 0
  br i1 %cmp23, label %if.then.24, label %if.end.26

if.then.24:                                       ; preds = %if.end.19
  %24 = load %struct._GtkWidget*, %struct._GtkWidget** %widget, align 8
  %call25 = call %struct._GdkDisplay* @gtk_widget_get_display(%struct._GtkWidget* %24)
  %25 = load i32, i32* %timestamp, align 4
  call void @gdk_display_keyboard_ungrab(%struct._GdkDisplay* %call25, i32 %25)
  call void (i8*, ...) @g_warning(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0))
  br label %return

if.end.26:                                        ; preds = %if.end.19
  %26 = load %struct._GtkWidget*, %struct._GtkWidget** %widget, align 8
  call void @gtk_grab_add(%struct._GtkWidget* %26)
  %27 = load %struct._GtkWidget*, %struct._GtkWidget** %widget, align 8
  %28 = bitcast %struct._GtkWidget* %27 to i8*
  %29 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %30 = bitcast %struct._GimpPickButton* %29 to i8*
  %call27 = call i64 @g_signal_connect_data(i8* %28, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), void ()* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventButton*, %struct._GimpPickButton*)* @gimp_pick_button_mouse_press to void ()*), i8* %30, void (i8*, %struct._GClosure*)* null, i32 0)
  %31 = load %struct._GtkWidget*, %struct._GtkWidget** %widget, align 8
  %32 = bitcast %struct._GtkWidget* %31 to i8*
  %33 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button, align 8
  %34 = bitcast %struct._GimpPickButton* %33 to i8*
  %call28 = call i64 @g_signal_connect_data(i8* %32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), void ()* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventKey*, %struct._GimpPickButton*)* @gimp_pick_button_key_press to void ()*), i8* %34, void (i8*, %struct._GClosure*)* null, i32 0)
  br label %return

return:                                           ; preds = %if.end.26, %if.then.24, %if.then.18
  ret void
}

declare %struct._GTypeInstance* @g_type_check_instance_cast(%struct._GTypeInstance*, i64) #1

declare void @gdk_cursor_unref(%struct._GdkCursor*) #1

declare void @gtk_widget_destroy(%struct._GtkWidget*) #1

; Function Attrs: nounwind uwtable
define internal %struct._GdkCursor* @make_cursor(%struct._GdkDisplay* %display) #3 {
entry:
  %display.addr = alloca %struct._GdkDisplay*, align 8
  %cursor = alloca %struct._GdkCursor*, align 8
  %pixbuf = alloca %struct._GdkPixbuf*, align 8
  store %struct._GdkDisplay* %display, %struct._GdkDisplay** %display.addr, align 8
  %0 = load %struct._GdkDisplay*, %struct._GdkDisplay** %display.addr, align 8
  %call = call i32 @gdk_display_supports_cursor_alpha(%struct._GdkDisplay* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._GdkDisplay*, %struct._GdkDisplay** %display.addr, align 8
  %call1 = call i32 @gdk_display_supports_cursor_color(%struct._GdkDisplay* %1)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i8* getelementptr inbounds ([4121 x i8], [4121 x i8]* @cursor_color_picker, i32 0, i32 0), i8** @make_cursor.data, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  store i8* getelementptr inbounds ([4121 x i8], [4121 x i8]* @cursor_color_picker_bw, i32 0, i32 0), i8** @make_cursor.data, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load i8*, i8** @make_cursor.data, align 8
  %call3 = call %struct._GdkPixbuf* @gdk_pixbuf_new_from_inline(i32 -1, i8* %2, i32 0, %struct._GError** null)
  store %struct._GdkPixbuf* %call3, %struct._GdkPixbuf** %pixbuf, align 8
  %3 = load %struct._GdkDisplay*, %struct._GdkDisplay** %display.addr, align 8
  %4 = load %struct._GdkPixbuf*, %struct._GdkPixbuf** %pixbuf, align 8
  %call4 = call %struct._GdkCursor* @gdk_cursor_new_from_pixbuf(%struct._GdkDisplay* %3, %struct._GdkPixbuf* %4, i32 1, i32 30)
  store %struct._GdkCursor* %call4, %struct._GdkCursor** %cursor, align 8
  %5 = load %struct._GdkPixbuf*, %struct._GdkPixbuf** %pixbuf, align 8
  %6 = bitcast %struct._GdkPixbuf* %5 to i8*
  call void @g_object_unref(i8* %6)
  %7 = load %struct._GdkCursor*, %struct._GdkCursor** %cursor, align 8
  ret %struct._GdkCursor* %7
}

declare %struct._GdkDisplay* @gtk_widget_get_display(%struct._GtkWidget*) #1

; Function Attrs: nounwind readnone
declare i64 @gtk_widget_get_type() #2

declare %struct._GtkWidget* @gtk_invisible_new() #1

declare void @gtk_widget_add_events(%struct._GtkWidget*, i32) #1

declare void @gtk_widget_show(%struct._GtkWidget*) #1

declare i32 @gtk_get_current_event_time() #1

declare i32 @gdk_keyboard_grab(%struct._GdkDrawable*, i32, i32) #1

declare %struct._GdkDrawable* @gtk_widget_get_window(%struct._GtkWidget*) #1

; Function Attrs: nounwind uwtable
define internal void @g_warning(i8* %format, ...) #3 {
entry:
  %format.addr = alloca i8*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %format, i8** %format.addr, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  %0 = load i8*, i8** %format.addr, align 8
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0
  call void @g_logv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i32 16, i8* %0, %struct.__va_list_tag* %arraydecay2)
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*
  call void @llvm.va_end(i8* %arraydecay34)
  ret void
}

declare i32 @gdk_pointer_grab(%struct._GdkDrawable*, i32, i32, %struct._GdkDrawable*, %struct._GdkCursor*, i32) #1

declare void @gdk_display_keyboard_ungrab(%struct._GdkDisplay*, i32) #1

declare void @gtk_grab_add(%struct._GtkWidget*) #1

declare i64 @g_signal_connect_data(i8*, i8*, void ()*, i8*, void (i8*, %struct._GClosure*)*, i32) #1

; Function Attrs: nounwind uwtable
define internal i32 @gimp_pick_button_mouse_press(%struct._GtkWidget* %invisible, %struct._GdkEventButton* %event, %struct._GimpPickButton* %button) #3 {
entry:
  %retval = alloca i32, align 4
  %invisible.addr = alloca %struct._GtkWidget*, align 8
  %event.addr = alloca %struct._GdkEventButton*, align 8
  %button.addr = alloca %struct._GimpPickButton*, align 8
  store %struct._GtkWidget* %invisible, %struct._GtkWidget** %invisible.addr, align 8
  store %struct._GdkEventButton* %event, %struct._GdkEventButton** %event.addr, align 8
  store %struct._GimpPickButton* %button, %struct._GimpPickButton** %button.addr, align 8
  %0 = load %struct._GdkEventButton*, %struct._GdkEventButton** %event.addr, align 8
  %type = getelementptr inbounds %struct._GdkEventButton, %struct._GdkEventButton* %0, i32 0, i32 0
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._GdkEventButton*, %struct._GdkEventButton** %event.addr, align 8
  %button1 = getelementptr inbounds %struct._GdkEventButton, %struct._GdkEventButton* %2, i32 0, i32 8
  %3 = load i32, i32* %button1, align 4
  %cmp2 = icmp eq i32 %3, 1
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %5 = bitcast %struct._GtkWidget* %4 to i8*
  %6 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %7 = bitcast %struct._GimpPickButton* %6 to i8*
  %call = call i64 @g_signal_connect_data(i8* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), void ()* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventMotion*, %struct._GimpPickButton*)* @gimp_pick_button_mouse_motion to void ()*), i8* %7, void (i8*, %struct._GClosure*)* null, i32 0)
  %8 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %9 = bitcast %struct._GtkWidget* %8 to i8*
  %10 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %11 = bitcast %struct._GimpPickButton* %10 to i8*
  %call3 = call i64 @g_signal_connect_data(i8* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), void ()* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventButton*, %struct._GimpPickButton*)* @gimp_pick_button_mouse_release to void ()*), i8* %11, void (i8*, %struct._GClosure*)* null, i32 0)
  %12 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %13 = bitcast %struct._GtkWidget* %12 to i8*
  %14 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %15 = bitcast %struct._GimpPickButton* %14 to i8*
  %call4 = call i32 @g_signal_handlers_disconnect_matched(i8* %13, i32 24, i32 0, i32 0, %struct._GClosure* null, i8* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventButton*, %struct._GimpPickButton*)* @gimp_pick_button_mouse_press to i8*), i8* %15)
  %16 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %17 = bitcast %struct._GtkWidget* %16 to i8*
  %18 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %19 = bitcast %struct._GimpPickButton* %18 to i8*
  %call5 = call i32 @g_signal_handlers_disconnect_matched(i8* %17, i32 24, i32 0, i32 0, %struct._GClosure* null, i8* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventKey*, %struct._GimpPickButton*)* @gimp_pick_button_key_press to i8*), i8* %19)
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define internal i32 @gimp_pick_button_key_press(%struct._GtkWidget* %invisible, %struct._GdkEventKey* %event, %struct._GimpPickButton* %button) #3 {
entry:
  %retval = alloca i32, align 4
  %invisible.addr = alloca %struct._GtkWidget*, align 8
  %event.addr = alloca %struct._GdkEventKey*, align 8
  %button.addr = alloca %struct._GimpPickButton*, align 8
  store %struct._GtkWidget* %invisible, %struct._GtkWidget** %invisible.addr, align 8
  store %struct._GdkEventKey* %event, %struct._GdkEventKey** %event.addr, align 8
  store %struct._GimpPickButton* %button, %struct._GimpPickButton** %button.addr, align 8
  %0 = load %struct._GdkEventKey*, %struct._GdkEventKey** %event.addr, align 8
  %keyval = getelementptr inbounds %struct._GdkEventKey, %struct._GdkEventKey* %0, i32 0, i32 5
  %1 = load i32, i32* %keyval, align 4
  %cmp = icmp eq i32 %1, 65307
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  call void @gimp_pick_button_shutdown(%struct._GimpPickButton* %2)
  %3 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %4 = bitcast %struct._GtkWidget* %3 to i8*
  %5 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %6 = bitcast %struct._GimpPickButton* %5 to i8*
  %call = call i32 @g_signal_handlers_disconnect_matched(i8* %4, i32 24, i32 0, i32 0, %struct._GClosure* null, i8* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventButton*, %struct._GimpPickButton*)* @gimp_pick_button_mouse_press to i8*), i8* %6)
  %7 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %8 = bitcast %struct._GtkWidget* %7 to i8*
  %9 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %10 = bitcast %struct._GimpPickButton* %9 to i8*
  %call1 = call i32 @g_signal_handlers_disconnect_matched(i8* %8, i32 24, i32 0, i32 0, %struct._GClosure* null, i8* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventKey*, %struct._GimpPickButton*)* @gimp_pick_button_key_press to i8*), i8* %10)
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval
  ret i32 %11
}

declare i32 @gdk_display_supports_cursor_alpha(%struct._GdkDisplay*) #1

declare i32 @gdk_display_supports_cursor_color(%struct._GdkDisplay*) #1

declare %struct._GdkPixbuf* @gdk_pixbuf_new_from_inline(i32, i8*, i32, %struct._GError**) #1

declare %struct._GdkCursor* @gdk_cursor_new_from_pixbuf(%struct._GdkDisplay*, %struct._GdkPixbuf*, i32, i32) #1

declare void @g_object_unref(i8*) #1

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

declare void @g_logv(i8*, i32, i8*, %struct.__va_list_tag*) #1

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

; Function Attrs: nounwind uwtable
define internal i32 @gimp_pick_button_mouse_motion(%struct._GtkWidget* %invisible, %struct._GdkEventMotion* %event, %struct._GimpPickButton* %button) #3 {
entry:
  %invisible.addr = alloca %struct._GtkWidget*, align 8
  %event.addr = alloca %struct._GdkEventMotion*, align 8
  %button.addr = alloca %struct._GimpPickButton*, align 8
  %x_root = alloca i32, align 4
  %y_root = alloca i32, align 4
  store %struct._GtkWidget* %invisible, %struct._GtkWidget** %invisible.addr, align 8
  store %struct._GdkEventMotion* %event, %struct._GdkEventMotion** %event.addr, align 8
  store %struct._GimpPickButton* %button, %struct._GimpPickButton** %button.addr, align 8
  %0 = load %struct._GdkEventMotion*, %struct._GdkEventMotion** %event.addr, align 8
  %window = getelementptr inbounds %struct._GdkEventMotion, %struct._GdkEventMotion* %0, i32 0, i32 1
  %1 = load %struct._GdkDrawable*, %struct._GdkDrawable** %window, align 8
  %call = call i32 @gdk_window_get_origin(%struct._GdkDrawable* %1, i32* %x_root, i32* %y_root)
  %2 = load %struct._GdkEventMotion*, %struct._GdkEventMotion** %event.addr, align 8
  %x = getelementptr inbounds %struct._GdkEventMotion, %struct._GdkEventMotion* %2, i32 0, i32 4
  %3 = load double, double* %x, align 8
  %4 = load i32, i32* %x_root, align 4
  %conv = sitofp i32 %4 to double
  %add = fadd double %conv, %3
  %conv1 = fptosi double %add to i32
  store i32 %conv1, i32* %x_root, align 4
  %5 = load %struct._GdkEventMotion*, %struct._GdkEventMotion** %event.addr, align 8
  %y = getelementptr inbounds %struct._GdkEventMotion, %struct._GdkEventMotion* %5, i32 0, i32 5
  %6 = load double, double* %y, align 8
  %7 = load i32, i32* %y_root, align 4
  %conv2 = sitofp i32 %7 to double
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i32
  store i32 %conv4, i32* %y_root, align 4
  %8 = load %struct._GdkEventMotion*, %struct._GdkEventMotion** %event.addr, align 8
  %9 = bitcast %struct._GdkEventMotion* %8 to %union._GdkEvent*
  %call5 = call %struct._GdkScreen* @gdk_event_get_screen(%union._GdkEvent* %9)
  %10 = load i32, i32* %x_root, align 4
  %11 = load i32, i32* %y_root, align 4
  %12 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  call void @gimp_pick_button_pick(%struct._GdkScreen* %call5, i32 %10, i32 %11, %struct._GimpPickButton* %12)
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i32 @gimp_pick_button_mouse_release(%struct._GtkWidget* %invisible, %struct._GdkEventButton* %event, %struct._GimpPickButton* %button) #3 {
entry:
  %retval = alloca i32, align 4
  %invisible.addr = alloca %struct._GtkWidget*, align 8
  %event.addr = alloca %struct._GdkEventButton*, align 8
  %button.addr = alloca %struct._GimpPickButton*, align 8
  %x_root = alloca i32, align 4
  %y_root = alloca i32, align 4
  store %struct._GtkWidget* %invisible, %struct._GtkWidget** %invisible.addr, align 8
  store %struct._GdkEventButton* %event, %struct._GdkEventButton** %event.addr, align 8
  store %struct._GimpPickButton* %button, %struct._GimpPickButton** %button.addr, align 8
  %0 = load %struct._GdkEventButton*, %struct._GdkEventButton** %event.addr, align 8
  %button1 = getelementptr inbounds %struct._GdkEventButton, %struct._GdkEventButton* %0, i32 0, i32 8
  %1 = load i32, i32* %button1, align 4
  %cmp = icmp ne i32 %1, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct._GdkEventButton*, %struct._GdkEventButton** %event.addr, align 8
  %window = getelementptr inbounds %struct._GdkEventButton, %struct._GdkEventButton* %2, i32 0, i32 1
  %3 = load %struct._GdkDrawable*, %struct._GdkDrawable** %window, align 8
  %call = call i32 @gdk_window_get_origin(%struct._GdkDrawable* %3, i32* %x_root, i32* %y_root)
  %4 = load %struct._GdkEventButton*, %struct._GdkEventButton** %event.addr, align 8
  %x = getelementptr inbounds %struct._GdkEventButton, %struct._GdkEventButton* %4, i32 0, i32 4
  %5 = load double, double* %x, align 8
  %6 = load i32, i32* %x_root, align 4
  %conv = sitofp i32 %6 to double
  %add = fadd double %conv, %5
  %conv2 = fptosi double %add to i32
  store i32 %conv2, i32* %x_root, align 4
  %7 = load %struct._GdkEventButton*, %struct._GdkEventButton** %event.addr, align 8
  %y = getelementptr inbounds %struct._GdkEventButton, %struct._GdkEventButton* %7, i32 0, i32 5
  %8 = load double, double* %y, align 8
  %9 = load i32, i32* %y_root, align 4
  %conv3 = sitofp i32 %9 to double
  %add4 = fadd double %conv3, %8
  %conv5 = fptosi double %add4 to i32
  store i32 %conv5, i32* %y_root, align 4
  %10 = load %struct._GdkEventButton*, %struct._GdkEventButton** %event.addr, align 8
  %11 = bitcast %struct._GdkEventButton* %10 to %union._GdkEvent*
  %call6 = call %struct._GdkScreen* @gdk_event_get_screen(%union._GdkEvent* %11)
  %12 = load i32, i32* %x_root, align 4
  %13 = load i32, i32* %y_root, align 4
  %14 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  call void @gimp_pick_button_pick(%struct._GdkScreen* %call6, i32 %12, i32 %13, %struct._GimpPickButton* %14)
  %15 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  call void @gimp_pick_button_shutdown(%struct._GimpPickButton* %15)
  %16 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %17 = bitcast %struct._GtkWidget* %16 to i8*
  %18 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %19 = bitcast %struct._GimpPickButton* %18 to i8*
  %call7 = call i32 @g_signal_handlers_disconnect_matched(i8* %17, i32 24, i32 0, i32 0, %struct._GClosure* null, i8* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventMotion*, %struct._GimpPickButton*)* @gimp_pick_button_mouse_motion to i8*), i8* %19)
  %20 = load %struct._GtkWidget*, %struct._GtkWidget** %invisible.addr, align 8
  %21 = bitcast %struct._GtkWidget* %20 to i8*
  %22 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %23 = bitcast %struct._GimpPickButton* %22 to i8*
  %call8 = call i32 @g_signal_handlers_disconnect_matched(i8* %21, i32 24, i32 0, i32 0, %struct._GClosure* null, i8* bitcast (i32 (%struct._GtkWidget*, %struct._GdkEventButton*, %struct._GimpPickButton*)* @gimp_pick_button_mouse_release to i8*), i8* %23)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %24 = load i32, i32* %retval
  ret i32 %24
}

declare i32 @g_signal_handlers_disconnect_matched(i8*, i32, i32, i32, %struct._GClosure*, i8*, i8*) #1

declare i32 @gdk_window_get_origin(%struct._GdkDrawable*, i32*, i32*) #1

; Function Attrs: nounwind uwtable
define internal void @gimp_pick_button_pick(%struct._GdkScreen* %screen, i32 %x_root, i32 %y_root, %struct._GimpPickButton* %button) #3 {
entry:
  %screen.addr = alloca %struct._GdkScreen*, align 8
  %x_root.addr = alloca i32, align 4
  %y_root.addr = alloca i32, align 4
  %button.addr = alloca %struct._GimpPickButton*, align 8
  %root_window = alloca %struct._GdkDrawable*, align 8
  %image = alloca %struct._cairo_surface*, align 8
  %cr = alloca %struct._cairo*, align 8
  %data = alloca i8*, align 8
  %color = alloca [3 x i8], align 1
  %rgb = alloca %struct._GimpRGB, align 8
  store %struct._GdkScreen* %screen, %struct._GdkScreen** %screen.addr, align 8
  store i32 %x_root, i32* %x_root.addr, align 4
  store i32 %y_root, i32* %y_root.addr, align 4
  store %struct._GimpPickButton* %button, %struct._GimpPickButton** %button.addr, align 8
  %0 = load %struct._GdkScreen*, %struct._GdkScreen** %screen.addr, align 8
  %call = call %struct._GdkDrawable* @gdk_screen_get_root_window(%struct._GdkScreen* %0)
  store %struct._GdkDrawable* %call, %struct._GdkDrawable** %root_window, align 8
  %call1 = call %struct._cairo_surface* @cairo_image_surface_create(i32 1, i32 1, i32 1)
  store %struct._cairo_surface* %call1, %struct._cairo_surface** %image, align 8
  %1 = load %struct._cairo_surface*, %struct._cairo_surface** %image, align 8
  %call2 = call %struct._cairo* @cairo_create(%struct._cairo_surface* %1)
  store %struct._cairo* %call2, %struct._cairo** %cr, align 8
  %2 = load %struct._cairo*, %struct._cairo** %cr, align 8
  %3 = load %struct._GdkDrawable*, %struct._GdkDrawable** %root_window, align 8
  %4 = load i32, i32* %x_root.addr, align 4
  %sub = sub nsw i32 0, %4
  %conv = sitofp i32 %sub to double
  %5 = load i32, i32* %y_root.addr, align 4
  %sub3 = sub nsw i32 0, %5
  %conv4 = sitofp i32 %sub3 to double
  call void @gdk_cairo_set_source_window(%struct._cairo* %2, %struct._GdkDrawable* %3, double %conv, double %conv4)
  %6 = load %struct._cairo*, %struct._cairo** %cr, align 8
  call void @cairo_paint(%struct._cairo* %6)
  %7 = load %struct._cairo*, %struct._cairo** %cr, align 8
  call void @cairo_destroy(%struct._cairo* %7)
  %8 = load %struct._cairo_surface*, %struct._cairo_surface** %image, align 8
  %call5 = call i8* @cairo_image_surface_get_data(%struct._cairo_surface* %8)
  store i8* %call5, i8** %data, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %9 = load i8*, i8** %data, align 8
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 0
  %10 = load i8, i8* %arrayidx, align 1
  %arrayidx6 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i32 0, i64 2
  store i8 %10, i8* %arrayidx6, align 1
  %11 = load i8*, i8** %data, align 8
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 1
  %12 = load i8, i8* %arrayidx7, align 1
  %arrayidx8 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i32 0, i64 1
  store i8 %12, i8* %arrayidx8, align 1
  %13 = load i8*, i8** %data, align 8
  %arrayidx9 = getelementptr inbounds i8, i8* %13, i64 2
  %14 = load i8, i8* %arrayidx9, align 1
  %arrayidx10 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i32 0, i64 0
  store i8 %14, i8* %arrayidx10, align 1
  br label %do.end

do.end:                                           ; preds = %do.body
  %15 = load %struct._cairo_surface*, %struct._cairo_surface** %image, align 8
  call void @cairo_surface_destroy(%struct._cairo_surface* %15)
  %arrayidx11 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i32 0, i64 0
  %16 = load i8, i8* %arrayidx11, align 1
  %arrayidx12 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i32 0, i64 1
  %17 = load i8, i8* %arrayidx12, align 1
  %arrayidx13 = getelementptr inbounds [3 x i8], [3 x i8]* %color, i32 0, i64 2
  %18 = load i8, i8* %arrayidx13, align 1
  call void @gimp_rgba_set_uchar(%struct._GimpRGB* %rgb, i8 zeroext %16, i8 zeroext %17, i8 zeroext %18, i8 zeroext -1)
  %19 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %20 = bitcast %struct._GimpPickButton* %19 to i8*
  %21 = load i32, i32* getelementptr inbounds ([1 x i32], [1 x i32]* @pick_button_signals, i32 0, i64 0), align 4
  call void (i8*, i32, i32, ...) @g_signal_emit(i8* %20, i32 %21, i32 0, %struct._GimpRGB* %rgb)
  ret void
}

declare %struct._GdkScreen* @gdk_event_get_screen(%union._GdkEvent*) #1

declare %struct._GdkDrawable* @gdk_screen_get_root_window(%struct._GdkScreen*) #1

declare %struct._cairo_surface* @cairo_image_surface_create(i32, i32, i32) #1

declare %struct._cairo* @cairo_create(%struct._cairo_surface*) #1

declare void @gdk_cairo_set_source_window(%struct._cairo*, %struct._GdkDrawable*, double, double) #1

declare void @cairo_paint(%struct._cairo*) #1

declare void @cairo_destroy(%struct._cairo*) #1

declare i8* @cairo_image_surface_get_data(%struct._cairo_surface*) #1

declare void @cairo_surface_destroy(%struct._cairo_surface*) #1

declare void @gimp_rgba_set_uchar(%struct._GimpRGB*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #1

declare void @g_signal_emit(i8*, i32, i32, ...) #1

; Function Attrs: nounwind uwtable
define internal void @gimp_pick_button_shutdown(%struct._GimpPickButton* %button) #3 {
entry:
  %button.addr = alloca %struct._GimpPickButton*, align 8
  %display = alloca %struct._GdkDisplay*, align 8
  %timestamp = alloca i32, align 4
  store %struct._GimpPickButton* %button, %struct._GimpPickButton** %button.addr, align 8
  %0 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %grab_widget = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %0, i32 0, i32 2
  %1 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget, align 8
  %call = call %struct._GdkDisplay* @gtk_widget_get_display(%struct._GtkWidget* %1)
  store %struct._GdkDisplay* %call, %struct._GdkDisplay** %display, align 8
  %call1 = call i32 @gtk_get_current_event_time()
  store i32 %call1, i32* %timestamp, align 4
  %2 = load %struct._GdkDisplay*, %struct._GdkDisplay** %display, align 8
  %3 = load i32, i32* %timestamp, align 4
  call void @gdk_display_keyboard_ungrab(%struct._GdkDisplay* %2, i32 %3)
  %4 = load %struct._GdkDisplay*, %struct._GdkDisplay** %display, align 8
  %5 = load i32, i32* %timestamp, align 4
  call void @gdk_display_pointer_ungrab(%struct._GdkDisplay* %4, i32 %5)
  %6 = load %struct._GimpPickButton*, %struct._GimpPickButton** %button.addr, align 8
  %grab_widget2 = getelementptr inbounds %struct._GimpPickButton, %struct._GimpPickButton* %6, i32 0, i32 2
  %7 = load %struct._GtkWidget*, %struct._GtkWidget** %grab_widget2, align 8
  call void @gtk_grab_remove(%struct._GtkWidget* %7)
  ret void
}

declare void @gdk_display_pointer_ungrab(%struct._GdkDisplay*, i32) #1

declare void @gtk_grab_remove(%struct._GtkWidget*) #1

declare %struct._GtkWidget* @gtk_image_new_from_stock(i8*, i32) #1

declare void @gtk_container_add(%struct._GtkContainer*, %struct._GtkWidget*) #1

; Function Attrs: nounwind readnone
declare i64 @gtk_container_get_type() #2

declare void @gimp_help_set_help_data(%struct._GtkWidget*, i8*, i8*) #1

; Function Attrs: nounwind
declare i8* @dgettext(i8*, i8*) #5

attributes #0 = { nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
